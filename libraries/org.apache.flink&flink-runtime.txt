
+###org/apache/flink/runtime/messages/webmonitor/MultipleJobsDetails
@0.10.0
+#<init>([Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;[Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;)V
+#getRunningJobs()[Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#getFinishedJobs()[Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
+#<init>(Ljava/util/Collection;)V
+#getJobs()Ljava/util/Collection;
-#<init>([Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;[Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;)V
-#getRunningJobs()[Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
-#getFinishedJobs()[Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;

+###org/apache/flink/runtime/messages/webmonitor/ClusterOverview
@1.14.0
+#<init>(IIIIIII)V
+#<init>(IIILorg/apache/flink/runtime/messages/webmonitor/JobsOverview;Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;)V
+#<init>(Lorg/apache/flink/runtime/resourcemanager/ResourceOverview;Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;)V
+#getNumTaskManagersConnected()I
+#getNumSlotsTotal()I
+#getNumSlotsAvailable()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.16.0
+#<init>(IIILjava/lang/Integer;Ljava/lang/Integer;IIII)V
+#getNumTaskManagersBlocked()I
+#getNumSlotsFreeAndBlocked()I
-#<init>(IIIIIII)V
-#<init>(IIILorg/apache/flink/runtime/messages/webmonitor/JobsOverview;Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;)V

+###org/apache/flink/runtime/messages/webmonitor/JobsOverview
@0.10.0
+#<init>(IIII)V
+#<init>(Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;)V
+#getNumJobsRunningOrPending()I
+#getNumJobsFinished()I
+#getNumJobsCancelled()I
+#getNumJobsFailed()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
+#combine(Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;)Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;
+#create(Ljava/util/Collection;)Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;

+###org/apache/flink/runtime/messages/webmonitor/InfoMessage
@0.10.0

+###org/apache/flink/runtime/messages/webmonitor/JobDetails$JobDetailsSerializer
@1.14.0
+#<init>()V
+#serialize(Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/messages/webmonitor/JobDetails$JobDetailsDeserializer
@1.14.0
+#<init>()V
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/messages/webmonitor/JobDetails
@0.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;JJLorg/apache/flink/runtime/jobgraph/JobStatus;J[II)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getJobName()Ljava/lang/String;
+#getStartTime()J
+#getEndTime()J
+#getStatus()Lorg/apache/flink/runtime/jobgraph/JobStatus;
+#getLastUpdateTime()J
+#getNumTasks()I
+#getNumVerticesPerExecutionState()[I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;JJJLorg/apache/flink/api/common/JobStatus;J[II)V
+#createDetailsForJob(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#getDuration()J
+#getStatus()Lorg/apache/flink/api/common/JobStatus;
+#getTasksPerState()[I
-#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;JJLorg/apache/flink/runtime/jobgraph/JobStatus;J[II)V
-#getStatus()Lorg/apache/flink/runtime/jobgraph/JobStatus;
-#getNumVerticesPerExecutionState()[I
@1.16.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;JJJLorg/apache/flink/api/common/JobStatus;J[IILjava/util/Map;)V
+#getCurrentExecutionAttempts()Ljava/util/Map;

+###org/apache/flink/runtime/messages/webmonitor/RequestStatusOverview
@0.10.0
+#getInstance()Lorg/apache/flink/runtime/messages/webmonitor/RequestStatusOverview;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/messages/webmonitor/RequestJobDetails
@0.10.0
+#<init>(ZZ)V
+#shouldIncludeFinished()Z
+#shouldIncludeRunning()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/messages/webmonitor/RequestJobsWithIDsOverview
@0.10.0
+#getInstance()Lorg/apache/flink/runtime/messages/webmonitor/RequestJobsWithIDsOverview;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/messages/webmonitor/RequestJobsOverview
@0.10.0
+#getInstance()Lorg/apache/flink/runtime/messages/webmonitor/RequestJobsOverview;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/messages/webmonitor/JobIdsWithStatusOverview$JobIdWithStatus
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/JobStatus;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getJobStatus()Lorg/apache/flink/api/common/JobStatus;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/messages/webmonitor/JobIdsWithStatusOverview
@1.14.0
+#<init>(Ljava/util/Collection;)V
+#<init>(Lorg/apache/flink/runtime/messages/webmonitor/JobIdsWithStatusOverview;Lorg/apache/flink/runtime/messages/webmonitor/JobIdsWithStatusOverview;)V
+#getJobsWithStatus()Ljava/util/Collection;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/messages/checkpoint/DeclineCheckpoint
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V
+#getSerializedCheckpointException()Lorg/apache/flink/runtime/messages/checkpoint/SerializedCheckpointException;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/messages/checkpoint/AbstractCheckpointMessage
@0.9.0
+#getJob()Lorg/apache/flink/api/common/JobID;
+#getTaskExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getCheckpointId()J
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/messages/checkpoint/AcknowledgeCheckpoint
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;J)V
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/util/SerializedValue;)V
+#getState()Lorg/apache/flink/runtime/util/SerializedValue;
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@0.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/util/SerializedValue;)V
+#getState()Lorg/apache/flink/util/SerializedValue;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/util/SerializedValue;)V
-#getState()Lorg/apache/flink/runtime/util/SerializedValue;
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#getSubtaskState()Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;
+#getCheckpointMetrics()Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;
+#hashCode()I
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/util/SerializedValue;)V
-#getState()Lorg/apache/flink/util/SerializedValue;

+###org/apache/flink/runtime/messages/checkpoint/SerializedCheckpointException
@1.14.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointException;)V
+#getCheckpointFailureReason()Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;
+#getSerializedThrowable()Lorg/apache/flink/util/SerializedThrowable;
+#unwrap()Lorg/apache/flink/runtime/checkpoint/CheckpointException;

+###org/apache/flink/runtime/messages/Acknowledge
@1.14.0
+#get()Lorg/apache/flink/runtime/messages/Acknowledge;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/messages/TaskThreadInfoResponse
@1.14.0
+#<init>(Ljava/util/List;)V
+#getSamples()Ljava/util/List;
@1.16.0
+#<init>(Ljava/util/Collection;)V
+#getSamples()Ljava/util/Collection;
-#<init>(Ljava/util/List;)V
-#getSamples()Ljava/util/List;

+###org/apache/flink/runtime/messages/ThreadInfoSample
@1.14.0
+#from(Ljava/lang/management/ThreadInfo;)Ljava/util/Optional;
+#getThreadState()Ljava/lang/Thread$State;
+#getStackTrace()[Ljava/lang/StackTraceElement;
@1.16.0
+#from(Ljava/util/Collection;)Ljava/util/Collection;

+###org/apache/flink/runtime/messages/FlinkJobNotFoundException
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/messages/TaskBackPressureResponse
@1.14.0
+#<init>(ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;D)V
+#getRequestId()I
+#getExecutionAttemptID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getBackPressureRatio()D

+###org/apache/flink/runtime/messages/FlinkJobTerminatedWithoutCancellationException
@1.15.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/JobStatus;)V
+#getJobStatus()Lorg/apache/flink/api/common/JobStatus;

+###org/apache/flink/runtime/executiongraph/metrics/DownTimeGauge
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/JobStatusProvider;)V
+#getValue()Ljava/lang/Long;
+#getValue()Ljava/lang/Object;

+###org/apache/flink/runtime/executiongraph/metrics/UpTimeGauge
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/JobStatusProvider;)V
+#getValue()Ljava/lang/Long;
+#getValue()Ljava/lang/Object;

+###org/apache/flink/runtime/executiongraph/ExecutionAttemptID
@0.7.0-hadoop2-incubating
+#<init>()V
@0.9.0-milestone-1
+#<init>(JJ)V
+#writeTo(Lio/netty/buffer/ByteBuf;)V
+#fromByteBuf(Lio/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#writeTo(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)V
+#fromByteBuf(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getByteBufLength()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
-#<init>(JJ)V
-#writeTo(Lio/netty/buffer/ByteBuf;)V
-#fromByteBuf(Lio/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
@1.16.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraphID;Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;I)V
+#getExecutionVertexId()Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getSubtaskIndex()I
+#getAttemptNumber()I
+#randomId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
-#<init>()V
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V

+###org/apache/flink/runtime/executiongraph/IOMetrics
@1.14.0
+#<init>(Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;)V
+#<init>(JJJJ)V
+#getNumRecordsIn()J
+#getNumRecordsOut()J
+#getNumBytesIn()J
+#getNumBytesOut()J
@1.15.0
+#<init>(Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Ljava/util/Map;)V
+#getNumBytesProducedOfPartitions()Ljava/util/Map;
-#<init>(Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;)V
@1.16.0
+#<init>(Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Ljava/util/Map;Lorg/apache/flink/metrics/Gauge;Lorg/apache/flink/metrics/Gauge;Lorg/apache/flink/metrics/Gauge;)V
+#<init>(JJJJJJJ)V
+#getAccumulateBusyTime()D
+#getAccumulateBackPressuredTime()J
+#getAccumulateIdleTime()J
-#<init>(Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Lorg/apache/flink/metrics/Meter;Ljava/util/Map;)V
-#<init>(JJJJ)V

+###org/apache/flink/runtime/executiongraph/PartitionInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;)V
+#getIntermediateDataSetID()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getShuffleDescriptor()Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;

+###org/apache/flink/runtime/executiongraph/JobInformation
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/configuration/Configuration;Ljava/util/Collection;Ljava/util/Collection;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getJobName()Ljava/lang/String;
+#getSerializedExecutionConfig()Lorg/apache/flink/util/SerializedValue;
+#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getRequiredJarFileBlobKeys()Ljava/util/Collection;
+#getRequiredClasspathURLs()Ljava/util/Collection;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/executiongraph/TaskInformation
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;IILjava/lang/String;Lorg/apache/flink/configuration/Configuration;)V
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getTaskName()Ljava/lang/String;
+#getNumberOfSubtasks()I
+#getMaxNumberOfSubtasks()I
+#getInvokableClassName()Ljava/lang/String;
+#getTaskConfiguration()Lorg/apache/flink/configuration/Configuration;

+###org/apache/flink/runtime/executiongraph/IntermediateResultPartition
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/IntermediateResult;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;I)V
+#getProducer()Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getPartition()I
+#getIntermediateResult()Lorg/apache/flink/runtime/executiongraph/IntermediateResult;
+#getConsumers()Ljava/util/List;
@0.9.0-milestone-1
+#getPartitionNumber()I
+#getPartitionId()Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;
+#isConsumable()Z
-#getPartition()I
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/IntermediateResult;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;ILorg/apache/flink/runtime/executiongraph/EdgeManager;)V
+#getResultType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#getConsumerVertexGroups()Ljava/util/List;
+#getConsumedPartitionGroups()Ljava/util/List;
+#markDataProduced()V
+#addConsumers(Lorg/apache/flink/runtime/scheduler/strategy/ConsumerVertexGroup;)V
-#<init>(Lorg/apache/flink/runtime/executiongraph/IntermediateResult;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;I)V
-#getConsumers()Ljava/util/List;
@1.15.0
+#getConsumerVertexGroup()Lorg/apache/flink/runtime/scheduler/strategy/ConsumerVertexGroup;
+#getConsumerVertexGroupOptional()Ljava/util/Optional;
+#getNumberOfSubpartitions()I
-#getConsumerVertexGroups()Ljava/util/List;
@1.16.0
+#markPartitionGroupReleasable(Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;)V
+#canBeReleased()Z
+#getConsumerVertexGroups()Ljava/util/List;
-#getConsumerVertexGroup()Lorg/apache/flink/runtime/scheduler/strategy/ConsumerVertexGroup;
-#getConsumerVertexGroupOptional()Ljava/util/Optional;

+###org/apache/flink/runtime/executiongraph/IntermediateResult
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I)V
+#setPartition(ILorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;)V
+#getId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getProducer()Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;
+#getPartitions()[Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;
+#getNumberOfAssignedPartitions()I
+#registerConsumer()I
+#getConnectionIndex()I
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)V
+#getResultType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#toString()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I)V
@1.14.0
+#getPartitionById(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;
+#getCachedShuffleDescriptors(Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;)Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;
+#cacheShuffleDescriptors(Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;)V
+#clearCachedInformationForPartitionGroup(Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;)V
-#registerConsumer()I
@1.15.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)V
+#getConsumingDistributionPattern()Lorg/apache/flink/runtime/jobgraph/DistributionPattern;
+#isBroadcast()Z
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)V
@1.16.0
+#getConsumerVertices()Ljava/util/List;

+###org/apache/flink/runtime/executiongraph/ExecutionVertex
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;II)V
+#getGroupVertex()Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;
+#getName()Ljava/lang/String;
+#duplicateVertex(Z)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#splitVertex()Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#updateExecutionStateAsynchronously(Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#updateExecutionStateAsynchronously(Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#updateExecutionState(Lorg/apache/flink/runtime/execution/ExecutionState;)Lorg/apache/flink/runtime/execution/ExecutionState;
+#updateExecutionState(Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)Lorg/apache/flink/runtime/execution/ExecutionState;
+#compareAndUpdateExecutionState(Lorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/execution/ExecutionState;)Z
+#setAllocatedResource(Lorg/apache/flink/runtime/instance/AllocatedResource;)V
+#getAllocatedResource()Lorg/apache/flink/runtime/instance/AllocatedResource;
+#getAllocationID()Lorg/apache/flink/runtime/instance/AllocationID;
+#getID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
+#getNumberOfPredecessors()I
+#getNumberOfSuccessors()I
+#getPredecessor(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getSuccessor(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#isInputVertex()Z
+#isOutputVertex()Z
+#getIndexInVertexGroup()I
+#getNumberOfOutputGates()I
+#getOutputGate(I)Lorg/apache/flink/runtime/executiongraph/ExecutionGate;
+#getNumberOfInputGates()I
+#getInputGate(I)Lorg/apache/flink/runtime/executiongraph/ExecutionGate;
+#startTask()Lorg/apache/flink/runtime/taskmanager/TaskSubmissionResult;
+#killTask()Lorg/apache/flink/runtime/taskmanager/TaskKillResult;
+#cancelTask()Lorg/apache/flink/runtime/taskmanager/TaskCancelResult;
+#getExecutionGraph()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#toString()Ljava/lang/String;
+#hasRetriesLeft()Z[deprecated]
+#decrementRetriesLeftAndCheck()Z
+#registerVertexAssignmentListener(Lorg/apache/flink/runtime/executiongraph/VertexAssignmentListener;)V
+#unregisterVertexAssignmentListener(Lorg/apache/flink/runtime/executiongraph/VertexAssignmentListener;)V
+#registerExecutionListener(Lorg/apache/flink/runtime/execution/ExecutionListener;)V
+#unregisterExecutionListener(Lorg/apache/flink/runtime/execution/ExecutionListener;)V
+#getExecutionPipeline()Lorg/apache/flink/runtime/executiongraph/ExecutionPipeline;
+#constructDeploymentDescriptor()Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;J)V
+#getJobId()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getJobVertex()Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;
+#getJobvertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getTaskName()Ljava/lang/String;
+#getTotalNumberOfParallelSubtasks()I
+#getParallelSubtaskIndex()I
+#getNumberOfInputs()I
+#getInputEdges(I)[Lorg/apache/flink/runtime/executiongraph/ExecutionEdge;
+#getLocationConstraint()Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;
+#getCurrentExecutionAttempt()Lorg/apache/flink/runtime/executiongraph/Execution;
+#getStateTimestamp(Lorg/apache/flink/runtime/execution/ExecutionState;)J
+#getFailureCause()Ljava/lang/Throwable;
+#getCurrentAssignedResource()Lorg/apache/flink/runtime/instance/AllocatedSlot;
+#connectSource(ILorg/apache/flink/runtime/executiongraph/IntermediateResult;Lorg/apache/flink/runtime/jobgraph/JobEdge;I)V
+#getPreferredLocations()Ljava/lang/Iterable;
+#resetForNewExecution()V
+#scheduleForExecution(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Z)V
+#deployToSlot(Lorg/apache/flink/runtime/instance/AllocatedSlot;)V
+#cancel()V
+#fail(Ljava/lang/Throwable;)V
+#execute(Ljava/lang/Runnable;)V
+#getSimpleName()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;II)V
-#getGroupVertex()Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;
-#getName()Ljava/lang/String;
-#duplicateVertex(Z)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
-#splitVertex()Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
-#updateExecutionStateAsynchronously(Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
-#updateExecutionStateAsynchronously(Lorg/apache/flink/runtime/execution/ExecutionState;)V
-#updateExecutionState(Lorg/apache/flink/runtime/execution/ExecutionState;)Lorg/apache/flink/runtime/execution/ExecutionState;
-#updateExecutionState(Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)Lorg/apache/flink/runtime/execution/ExecutionState;
-#compareAndUpdateExecutionState(Lorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/execution/ExecutionState;)Z
-#setAllocatedResource(Lorg/apache/flink/runtime/instance/AllocatedResource;)V
-#getAllocatedResource()Lorg/apache/flink/runtime/instance/AllocatedResource;
-#getAllocationID()Lorg/apache/flink/runtime/instance/AllocationID;
-#getID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
-#getNumberOfPredecessors()I
-#getNumberOfSuccessors()I
-#getPredecessor(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
-#getSuccessor(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
-#isInputVertex()Z
-#isOutputVertex()Z
-#getIndexInVertexGroup()I
-#getNumberOfOutputGates()I
-#getOutputGate(I)Lorg/apache/flink/runtime/executiongraph/ExecutionGate;
-#getNumberOfInputGates()I
-#getInputGate(I)Lorg/apache/flink/runtime/executiongraph/ExecutionGate;
-#startTask()Lorg/apache/flink/runtime/taskmanager/TaskSubmissionResult;
-#killTask()Lorg/apache/flink/runtime/taskmanager/TaskKillResult;
-#cancelTask()Lorg/apache/flink/runtime/taskmanager/TaskCancelResult;
-#hasRetriesLeft()Z[deprecated]
-#decrementRetriesLeftAndCheck()Z
-#registerVertexAssignmentListener(Lorg/apache/flink/runtime/executiongraph/VertexAssignmentListener;)V
-#unregisterVertexAssignmentListener(Lorg/apache/flink/runtime/executiongraph/VertexAssignmentListener;)V
-#registerExecutionListener(Lorg/apache/flink/runtime/execution/ExecutionListener;)V
-#unregisterExecutionListener(Lorg/apache/flink/runtime/execution/ExecutionListener;)V
-#getExecutionPipeline()Lorg/apache/flink/runtime/executiongraph/ExecutionPipeline;
-#constructDeploymentDescriptor()Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;
@0.8.1
+#getCurrentAssignedResource()Lorg/apache/flink/runtime/instance/SimpleSlot;
+#deployToSlot(Lorg/apache/flink/runtime/instance/SimpleSlot;)V
-#getCurrentAssignedResource()Lorg/apache/flink/runtime/instance/AllocatedSlot;
-#deployToSlot(Lorg/apache/flink/runtime/instance/AllocatedSlot;)V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;Lscala/concurrent/duration/FiniteDuration;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;Lscala/concurrent/duration/FiniteDuration;J)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getTaskNameWithSubtaskIndex()Ljava/lang/String;
+#getCurrentAssignedResourceLocation()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
+#setOperatorState(Lorg/apache/flink/runtime/state/StateHandle;)V
+#getOperatorState()Lorg/apache/flink/runtime/state/StateHandle;
+#setLocationConstraintHosts(Ljava/util/List;)V
+#setScheduleLocalOnly(Z)V
+#isScheduleLocalOnly()Z
+#scheduleForExecution(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Z)Z
+#prepareForArchiving()V
+#cachePartitionInfo(Lorg/apache/flink/runtime/deployment/PartialInputChannelDeploymentDescriptor;)V
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;)V
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;J)V
-#getJobId()Lorg/apache/flink/runtime/jobgraph/JobID;
-#scheduleForExecution(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Z)V
-#execute(Ljava/lang/Runnable;)V
@0.9.0
+#getProducedPartitions()Ljava/util/Map;
+#sendMessageToCurrentExecution(Ljava/io/Serializable;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#setOperatorState(Lorg/apache/flink/runtime/state/StateHandle;)V
-#getOperatorState()Lorg/apache/flink/runtime/state/StateHandle;
@0.10.0
+#getSubTaskIndex()I
+#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/Execution;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;Lorg/apache/flink/api/common/time/Time;JII)V
+#getMaxParallelism()I
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getID()Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;
+#getAllConsumedPartitionGroups()Ljava/util/List;
+#getConsumedPartitionGroup(I)Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;
+#getNextInputSplit(Ljava/lang/String;)Lorg/apache/flink/core/io/InputSplit;
+#getFailureInfo()Ljava/util/Optional;
+#getCurrentTaskManagerLocationFuture()Ljava/util/concurrent/CompletableFuture;
+#getCurrentAssignedResource()Lorg/apache/flink/runtime/jobmaster/LogicalSlot;
+#getCurrentAssignedResourceLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;
+#getLatestPriorExecution()Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;
+#getLatestPriorLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getLatestPriorAllocation()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getExecutionGraphAccessor()Lorg/apache/flink/runtime/executiongraph/InternalExecutionGraphAccessor;
+#addConsumedPartitionGroup(Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;)V
+#getPreferredLocationBasedOnState()Ljava/util/Optional;
+#tryAssignResource(Lorg/apache/flink/runtime/jobmaster/LogicalSlot;)V
+#deploy()V
+#deployToSlot(Lorg/apache/flink/runtime/jobmaster/LogicalSlot;)V
+#cancel()Ljava/util/concurrent/CompletableFuture;
+#suspend()Ljava/util/concurrent/CompletableFuture;
+#markFailed(Ljava/lang/Throwable;)V
+#finishAllBlockingPartitions()Ljava/util/List;
+#archive()Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionVertex;
+#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/AccessExecution;
+#getCurrentExecutionAttempt()Lorg/apache/flink/runtime/executiongraph/AccessExecution;
+#archive()Ljava/io/Serializable;
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;Lscala/concurrent/duration/FiniteDuration;)V
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;Lscala/concurrent/duration/FiniteDuration;J)V
-#getSubTaskIndex()I
-#getInputEdges(I)[Lorg/apache/flink/runtime/executiongraph/ExecutionEdge;
-#getLocationConstraint()Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;
-#getFailureCause()Ljava/lang/Throwable;
-#getCurrentAssignedResource()Lorg/apache/flink/runtime/instance/SimpleSlot;
-#getCurrentAssignedResourceLocation()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
-#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/Execution;
-#getExecutionGraph()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
-#connectSource(ILorg/apache/flink/runtime/executiongraph/IntermediateResult;Lorg/apache/flink/runtime/jobgraph/JobEdge;I)V
-#setLocationConstraintHosts(Ljava/util/List;)V
-#setScheduleLocalOnly(Z)V
-#isScheduleLocalOnly()Z
-#getPreferredLocations()Ljava/lang/Iterable;
-#scheduleForExecution(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Z)Z
-#deployToSlot(Lorg/apache/flink/runtime/instance/SimpleSlot;)V
-#cancel()V
-#sendMessageToCurrentExecution(Ljava/io/Serializable;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#prepareForArchiving()V
-#cachePartitionInfo(Lorg/apache/flink/runtime/deployment/PartialInputChannelDeploymentDescriptor;)V
-#getSimpleName()Ljava/lang/String;
@1.15.0
+#findLastLocation()Ljava/util/Optional;
+#findLastAllocation()Ljava/util/Optional;
-#getLatestPriorExecution()Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;
-#getLatestPriorLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
-#getLatestPriorAllocation()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
@1.16.0
+#getPartitionProducer()Lorg/apache/flink/runtime/executiongraph/Execution;
+#getNextInputSplit(Ljava/lang/String;I)Ljava/util/Optional;
+#getCurrentExecutions()Ljava/util/Collection;
+#getCurrentExecution(I)Lorg/apache/flink/runtime/executiongraph/Execution;
+#getExecutionHistory()Lorg/apache/flink/runtime/executiongraph/ExecutionHistory;
-#getNextInputSplit(Ljava/lang/String;)Lorg/apache/flink/core/io/InputSplit;
-#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;
-#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/AccessExecution;

+###org/apache/flink/runtime/executiongraph/AccessExecutionVertex
@1.14.0
+#getTaskNameWithSubtaskIndex()Ljava/lang/String;
+#getParallelSubtaskIndex()I
+#getCurrentExecutionAttempt()Lorg/apache/flink/runtime/executiongraph/AccessExecution;
+#getExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getStateTimestamp(Lorg/apache/flink/runtime/execution/ExecutionState;)J
+#getFailureInfo()Ljava/util/Optional;
+#getCurrentAssignedResourceLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/AccessExecution;
@1.16.0
+#getCurrentExecutions()Ljava/util/Collection;
+#getExecutionHistory()Lorg/apache/flink/runtime/executiongraph/ExecutionHistory;
-#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/AccessExecution;

+###org/apache/flink/runtime/executiongraph/ArchivedExecutionVertex
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#<init>(ILjava/lang/String;Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;Lorg/apache/flink/runtime/util/EvictingBoundedList;)V
+#getTaskNameWithSubtaskIndex()Ljava/lang/String;
+#getParallelSubtaskIndex()I
+#getCurrentExecutionAttempt()Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;
+#getExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getStateTimestamp(Lorg/apache/flink/runtime/execution/ExecutionState;)J
+#getFailureInfo()Ljava/util/Optional;
+#getCurrentAssignedResourceLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;
+#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/AccessExecution;
+#getCurrentExecutionAttempt()Lorg/apache/flink/runtime/executiongraph/AccessExecution;
@1.16.0
+#<init>(ILjava/lang/String;Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;Lorg/apache/flink/runtime/executiongraph/ExecutionHistory;)V
+#getCurrentExecutions()Ljava/util/Collection;
+#getExecutionHistory()Lorg/apache/flink/runtime/executiongraph/ExecutionHistory;
-#<init>(ILjava/lang/String;Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;Lorg/apache/flink/runtime/util/EvictingBoundedList;)V
-#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;
-#getPriorExecutionAttempt(I)Lorg/apache/flink/runtime/executiongraph/AccessExecution;

+###org/apache/flink/runtime/executiongraph/EdgeManager
@1.14.0
+#<init>()V
+#connectPartitionWithConsumerVertexGroup(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/scheduler/strategy/ConsumerVertexGroup;)V
+#connectVertexWithConsumedPartitionGroup(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;)V
+#getConsumerVertexGroupsForPartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Ljava/util/List;
+#getConsumedPartitionGroupsForVertex(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Ljava/util/List;
+#registerConsumedPartitionGroup(Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;)V
+#getConsumedPartitionGroupsById(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Ljava/util/List;
@1.15.0
+#getConsumerVertexGroupForPartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Lorg/apache/flink/runtime/scheduler/strategy/ConsumerVertexGroup;
-#getConsumerVertexGroupsForPartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Ljava/util/List;
@1.16.0
+#getConsumerVertexGroupsForPartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Ljava/util/List;
+#getNumberOfConsumedPartitionGroupsById(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)I
-#getConsumerVertexGroupForPartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Lorg/apache/flink/runtime/scheduler/strategy/ConsumerVertexGroup;

+###org/apache/flink/runtime/executiongraph/ExecutionJobVertex
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;I)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;IJ)V
+#getGraph()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#getJobVertex()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#getParallelism()I
+#getJobId()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getTaskVertices()[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getProducedDataSets()[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;
+#getSplitAssigner()Lorg/apache/flink/core/io/InputSplitAssigner;
+#getSlotSharingGroup()Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup;
+#getCoLocationGroup()Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationGroup;
+#getInputs()Ljava/util/List;
+#isInFinalState()Z
+#connectToPredecessors(Ljava/util/Map;)V
+#scheduleAll(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Z)V
+#cancel()V
+#fail(Ljava/lang/Throwable;)V
+#waitForAllVerticesToReachFinishingState()V
+#execute(Ljava/lang/Runnable;)V
@0.8.0
+#resetForNewExecution()V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;ILscala/concurrent/duration/FiniteDuration;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;ILscala/concurrent/duration/FiniteDuration;J)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#prepareForArchiving()V
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;I)V
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;IJ)V
-#getJobId()Lorg/apache/flink/runtime/jobgraph/JobID;
-#execute(Ljava/lang/Runnable;)V
@0.9.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/JobVertex;ILscala/concurrent/duration/FiniteDuration;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/JobVertex;ILscala/concurrent/duration/FiniteDuration;J)V
+#getJobVertex()Lorg/apache/flink/runtime/jobgraph/JobVertex;
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;ILscala/concurrent/duration/FiniteDuration;)V
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;ILscala/concurrent/duration/FiniteDuration;J)V
-#getJobVertex()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
@0.10.0
+#getAggregateState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getAggregatedMetricAccumulators()Ljava/util/Map;
+#getAggregatedUserAccumulatorsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#getAggregateJobVertexState([II)Lorg/apache/flink/runtime/execution/ExecutionState;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/InternalExecutionGraphAccessor;Lorg/apache/flink/runtime/jobgraph/JobVertex;ILorg/apache/flink/api/common/time/Time;JLorg/apache/flink/runtime/scheduler/VertexParallelismInformation;Lorg/apache/flink/runtime/executiongraph/SubtaskAttemptNumberStore;)V
+#getOperatorIDs()Ljava/util/List;
+#setMaxParallelism(I)V
+#getGraph()Lorg/apache/flink/runtime/executiongraph/InternalExecutionGraphAccessor;
+#getName()Ljava/lang/String;
+#getMaxParallelism()I
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#canRescaleMaxParallelism(I)Z
+#getOperatorCoordinators()Ljava/util/Collection;
+#getTaskInformationOrBlobKey()Lorg/apache/flink/types/Either;
+#cancelWithFuture()Ljava/util/concurrent/CompletableFuture;
+#suspend()Ljava/util/concurrent/CompletableFuture;
+#archive()Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionJobVertex;
+#getTaskVertices()[Lorg/apache/flink/runtime/executiongraph/AccessExecutionVertex;
+#archive()Ljava/io/Serializable;
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/JobVertex;ILscala/concurrent/duration/FiniteDuration;)V
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/JobVertex;ILscala/concurrent/duration/FiniteDuration;J)V
-#getGraph()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
-#isInFinalState()Z
-#scheduleAll(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Z)V
-#waitForAllVerticesToReachFinishingState()V
-#resetForNewExecution()V
-#prepareForArchiving()V
-#getAggregatedMetricAccumulators()Ljava/util/Map;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/InternalExecutionGraphAccessor;Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/scheduler/VertexParallelismInformation;)V
+#isInitialized()Z
+#isParallelismDecided()Z
+#setParallelism(I)V
+#isFinished()Z
-#<init>(Lorg/apache/flink/runtime/executiongraph/InternalExecutionGraphAccessor;Lorg/apache/flink/runtime/jobgraph/JobVertex;ILorg/apache/flink/api/common/time/Time;JLorg/apache/flink/runtime/scheduler/VertexParallelismInformation;Lorg/apache/flink/runtime/executiongraph/SubtaskAttemptNumberStore;)V

+###org/apache/flink/runtime/executiongraph/AccessExecutionJobVertex
@1.14.0
+#getName()Ljava/lang/String;
+#getParallelism()I
+#getMaxParallelism()I
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getTaskVertices()[Lorg/apache/flink/runtime/executiongraph/AccessExecutionVertex;
+#getAggregateState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getAggregatedUserAccumulatorsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;

+###org/apache/flink/runtime/executiongraph/ArchivedExecutionJobVertex
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;)V
+#<init>([Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionVertex;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;IILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;)V
+#getName()Ljava/lang/String;
+#getParallelism()I
+#getMaxParallelism()I
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getTaskVertices()[Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionVertex;
+#getAggregateState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getAggregatedUserAccumulatorsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#getTaskVertices()[Lorg/apache/flink/runtime/executiongraph/AccessExecutionVertex;

+###org/apache/flink/runtime/executiongraph/ArchivedExecution
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/Execution;)V
+#<init>([Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;Lorg/apache/flink/runtime/executiongraph/IOMetrics;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ILorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/executiongraph/ErrorInfo;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;I[J)V
+#getAttemptId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getAttemptNumber()I
+#getStateTimestamps()[J
+#getState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getAssignedResourceLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getAssignedAllocationID()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getFailureInfo()Ljava/util/Optional;
+#getStateTimestamp(Lorg/apache/flink/runtime/execution/ExecutionState;)J
+#getUserAccumulatorsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#getParallelSubtaskIndex()I
+#getIOMetrics()Lorg/apache/flink/runtime/executiongraph/IOMetrics;
@1.16.0
+#<init>([Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;Lorg/apache/flink/runtime/executiongraph/IOMetrics;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/executiongraph/ErrorInfo;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;[J[J)V
+#getStateEndTimestamps()[J
+#getStateEndTimestamp(Lorg/apache/flink/runtime/execution/ExecutionState;)J
-#<init>([Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;Lorg/apache/flink/runtime/executiongraph/IOMetrics;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ILorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/executiongraph/ErrorInfo;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;I[J)V

+###org/apache/flink/runtime/executiongraph/AccessExecution
@1.14.0
+#getAttemptId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getAttemptNumber()I
+#getStateTimestamps()[J
+#getState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getAssignedResourceLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getFailureInfo()Ljava/util/Optional;
+#getStateTimestamp(Lorg/apache/flink/runtime/execution/ExecutionState;)J
+#getUserAccumulatorsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#getParallelSubtaskIndex()I
+#getIOMetrics()Lorg/apache/flink/runtime/executiongraph/IOMetrics;
@1.16.0
+#getStateEndTimestamps()[J
+#getStateEndTimestamp(Lorg/apache/flink/runtime/execution/ExecutionState;)J

+###org/apache/flink/runtime/executiongraph/Execution
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;IJ)V
+#getVertex()Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getAttemptId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getAttemptNumber()I
+#getState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getAssignedResource()Lorg/apache/flink/runtime/instance/AllocatedSlot;
+#getFailureCause()Ljava/lang/Throwable;
+#getStateTimestamps()[J
+#getStateTimestamp(Lorg/apache/flink/runtime/execution/ExecutionState;)J
+#isFinished()Z
+#scheduleForExecution(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Z)V
+#deployToSlot(Lorg/apache/flink/runtime/instance/AllocatedSlot;)V
+#cancel()V
+#fail(Ljava/lang/Throwable;)V
+#getVertexWithAttempt()Ljava/lang/String;
+#toString()Ljava/lang/String;
@0.8.1
+#getAssignedResource()Lorg/apache/flink/runtime/instance/SimpleSlot;
+#deployToSlot(Lorg/apache/flink/runtime/instance/SimpleSlot;)V
-#getAssignedResource()Lorg/apache/flink/runtime/instance/AllocatedSlot;
-#deployToSlot(Lorg/apache/flink/runtime/instance/AllocatedSlot;)V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;IJLscala/concurrent/duration/FiniteDuration;)V
+#getAssignedResourceLocation()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
+#prepareForArchiving()V
+#scheduleForExecution(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Z)Z
+#setOperatorState(Lorg/apache/flink/runtime/state/StateHandle;)V
+#getOperatorState()Lorg/apache/flink/runtime/state/StateHandle;
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;IJ)V
-#scheduleForExecution(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Z)V
@0.9.0
+#setInitialState(Lorg/apache/flink/runtime/util/SerializedValue;)V
-#setOperatorState(Lorg/apache/flink/runtime/state/StateHandle;)V
-#getOperatorState()Lorg/apache/flink/runtime/state/StateHandle;
@0.10.0
+#<init>(Lscala/concurrent/ExecutionContext;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;IJLscala/concurrent/duration/FiniteDuration;)V
+#setInitialState(Lorg/apache/flink/util/SerializedValue;)V
+#setAccumulators(Ljava/util/Map;Ljava/util/Map;)V
+#getUserAccumulators()Ljava/util/Map;
+#getUserAccumulatorsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#getFlinkAccumulators()Ljava/util/Map;
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;IJLscala/concurrent/duration/FiniteDuration;)V
-#setInitialState(Lorg/apache/flink/runtime/util/SerializedValue;)V
@1.14.0
+#<init>(Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;IJLorg/apache/flink/api/common/time/Time;)V
+#getAssignedAllocationID()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getTaskManagerLocationFuture()Ljava/util/concurrent/CompletableFuture;
+#getAssignedResource()Lorg/apache/flink/runtime/jobmaster/LogicalSlot;
+#getResultPartitionDeploymentDescriptor(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Ljava/util/Optional;
+#tryAssignResource(Lorg/apache/flink/runtime/jobmaster/LogicalSlot;)Z
+#getNextInputSplit()Lorg/apache/flink/core/io/InputSplit;
+#getAssignedResourceLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getFailureInfo()Ljava/util/Optional;
+#getTaskRestore()Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;
+#setInitialState(Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;)V
+#getInitializingOrRunningFuture()Ljava/util/concurrent/CompletableFuture;
+#getTerminalStateFuture()Ljava/util/concurrent/CompletableFuture;
+#getReleaseFuture()Ljava/util/concurrent/CompletableFuture;
+#registerProducedPartitions(Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Z)Ljava/util/concurrent/CompletableFuture;
+#deploy()V
+#suspend()Ljava/util/concurrent/CompletableFuture;
+#notifyCheckpointComplete(JJ)V
+#notifyCheckpointAborted(JJJ)V
+#triggerCheckpoint(JJLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/CompletableFuture;
+#triggerSynchronousSavepoint(JJLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/CompletableFuture;
+#sendOperatorEvent(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;
+#markFinished()V
+#transitionState(Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#setAccumulators(Ljava/util/Map;)V
+#getParallelSubtaskIndex()I
+#getIOMetrics()Lorg/apache/flink/runtime/executiongraph/IOMetrics;
+#archive()Lorg/apache/flink/runtime/executiongraph/ArchivedExecution;
+#archive()Ljava/io/Serializable;
-#<init>(Lscala/concurrent/ExecutionContext;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;IJLscala/concurrent/duration/FiniteDuration;)V
-#getAssignedResource()Lorg/apache/flink/runtime/instance/SimpleSlot;
-#getAssignedResourceLocation()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
-#getFailureCause()Ljava/lang/Throwable;
-#prepareForArchiving()V
-#setInitialState(Lorg/apache/flink/util/SerializedValue;)V
-#scheduleForExecution(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Z)Z
-#deployToSlot(Lorg/apache/flink/runtime/instance/SimpleSlot;)V
-#setAccumulators(Ljava/util/Map;Ljava/util/Map;)V
-#getFlinkAccumulators()Ljava/util/Map;
@1.15.0
+#notifyCheckpointOnComplete(JJJ)V
-#notifyCheckpointComplete(JJ)V
@1.16.0
+#getNextInputSplit()Ljava/util/Optional;
+#getStateEndTimestamps()[J
+#getStateEndTimestamp(Lorg/apache/flink/runtime/execution/ExecutionState;)J
+#registerProducedPartitions(Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;)Ljava/util/concurrent/CompletableFuture;
+#markFailed(Ljava/lang/Throwable;)V
-#getNextInputSplit()Lorg/apache/flink/core/io/InputSplit;
-#registerProducedPartitions(Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Z)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/executiongraph/ErrorInfo
@1.14.0
+#createErrorInfoWithNullableCause(Ljava/lang/Throwable;J)Lorg/apache/flink/runtime/executiongraph/ErrorInfo;
+#handleMissingThrowable(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#<init>(Ljava/lang/Throwable;J)V
+#getException()Lorg/apache/flink/util/SerializedThrowable;
+#getExceptionAsString()Ljava/lang/String;
+#getTimestamp()J

+###org/apache/flink/runtime/executiongraph/InternalExecutionGraphAccessor
@1.14.0
+#getUserClassLoader()Ljava/lang/ClassLoader;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getBlobWriter()Lorg/apache/flink/runtime/blob/BlobWriter;
+#getJobInformationOrBlobKey()Lorg/apache/flink/types/Either;
+#getPartitionLocationConstraint()Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;
+#getFutureExecutor()Ljava/util/concurrent/Executor;
+#getJobMasterMainThreadExecutor()Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;
+#getShuffleMaster()Lorg/apache/flink/runtime/shuffle/ShuffleMaster;
+#getPartitionTracker()Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;
+#registerExecution(Lorg/apache/flink/runtime/executiongraph/Execution;)V
+#deregisterExecution(Lorg/apache/flink/runtime/executiongraph/Execution;)V
+#getPartitionGroupReleaseStrategy()Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy;
+#vertexFinished()V
+#vertexUnFinished()V
+#getExecutionDeploymentListener()Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;
+#failGlobal(Ljava/lang/Throwable;)V
+#notifyExecutionChange(Lorg/apache/flink/runtime/executiongraph/Execution;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#notifySchedulerNgAboutInternalTaskFailure(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;ZZ)V
+#getEdgeManager()Lorg/apache/flink/runtime/executiongraph/EdgeManager;
+#getExecutionVertexOrThrow(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getResultPartitionOrThrow(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;
+#deleteBlobs(Ljava/util/List;)V
@1.15.0
+#jobVertexFinished()V
+#jobVertexUnFinished()V
+#notifyExecutionChange(Lorg/apache/flink/runtime/executiongraph/Execution;Lorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#getJobVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;
+#isDynamic()Z
-#vertexFinished()V
-#vertexUnFinished()V
-#notifyExecutionChange(Lorg/apache/flink/runtime/executiongraph/Execution;Lorg/apache/flink/runtime/execution/ExecutionState;)V
@1.16.0
+#getExecutionGraphID()Lorg/apache/flink/runtime/executiongraph/ExecutionGraphID;
+#getClusterPartitionShuffleDescriptors(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/List;

+###org/apache/flink/runtime/executiongraph/SubtaskAttemptNumberStore
@1.14.0
+#getAttemptCount(I)I

+###org/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy$Factory
@1.14.0
+#createInstance(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy;

+###org/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy
@1.14.0
+#vertexFinished(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Ljava/util/List;
+#vertexUnfinished(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)V

+###org/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/RegionPartitionGroupReleaseStrategy$Factory
@1.14.0
+#<init>()V
+#createInstance(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy;

+###org/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/RegionPartitionGroupReleaseStrategy
@1.14.0
+#<init>(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)V
+#vertexFinished(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Ljava/util/List;
+#vertexUnfinished(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)V
@1.15.0
+#isRegionOfVertexFinished(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Z
+#notifySchedulingTopologyUpdated(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;Ljava/util/List;)V

+###org/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/ConsumerRegionGroupExecutionView
@1.14.0
+#<init>()V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/NotReleasingPartitionGroupReleaseStrategy$Factory
@1.14.0
+#<init>()V
+#createInstance(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy;

+###org/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/NotReleasingPartitionGroupReleaseStrategy
@1.14.0
+#<init>()V
+#vertexFinished(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Ljava/util/List;
+#vertexUnfinished(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)V

+###org/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategyFactoryLoader
@1.14.0
+#loadPartitionGroupReleaseStrategyFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy$Factory;

+###org/apache/flink/runtime/executiongraph/failover/flip1/ResultPartitionAvailabilityChecker
@1.14.0
+#isAvailable(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Z

+###org/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult
@1.14.0
+#getVerticesToRestart()Ljava/util/Set;
+#getRestartDelayMS()J
+#getExecutionVertexIdOfFailedTask()Ljava/util/Optional;
+#getError()Ljava/lang/Throwable;
+#getTimestamp()J
+#canRestart()Z
+#isGlobalFailure()Z
+#restartable(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/lang/Throwable;JLjava/util/Set;JZ)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;
+#unrecoverable(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/lang/Throwable;JZ)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;
@1.16.0
+#getFailedExecution()Ljava/util/Optional;
+#restartable(Lorg/apache/flink/runtime/executiongraph/Execution;Ljava/lang/Throwable;JLjava/util/Set;JZ)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;
+#unrecoverable(Lorg/apache/flink/runtime/executiongraph/Execution;Ljava/lang/Throwable;JZ)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;
-#getExecutionVertexIdOfFailedTask()Ljava/util/Optional;
-#restartable(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/lang/Throwable;JLjava/util/Set;JZ)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;
-#unrecoverable(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/lang/Throwable;JZ)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;

+###org/apache/flink/runtime/executiongraph/failover/flip1/FailoverStrategy$Factory
@1.14.0
+#create(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;Lorg/apache/flink/runtime/executiongraph/failover/flip1/ResultPartitionAvailabilityChecker;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailoverStrategy;

+###org/apache/flink/runtime/executiongraph/failover/flip1/FailoverStrategy
@1.14.0
+#getTasksNeedingRestart(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/lang/Throwable;)Ljava/util/Set;

+###org/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy$Factory
@1.14.0
+#create()Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;

+###org/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy
@1.14.0
+#canRestart()Z
+#getBackoffTime()J
+#notifyFailure(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/executiongraph/failover/flip1/ExecutionFailureHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailoverStrategy;Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;)V
+#getFailureHandlingResult(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/lang/Throwable;J)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;
+#getGlobalFailureHandlingResult(Ljava/lang/Throwable;J)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;
+#isUnrecoverableError(Ljava/lang/Throwable;)Z
+#getNumberOfRestarts()J
@1.16.0
+#getFailureHandlingResult(Lorg/apache/flink/runtime/executiongraph/Execution;Ljava/lang/Throwable;J)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;
-#getFailureHandlingResult(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/lang/Throwable;J)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;

+###org/apache/flink/runtime/executiongraph/failover/flip1/FailoverStrategyFactoryLoader
@1.14.0
+#loadFailoverStrategyFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailoverStrategy$Factory;

+###org/apache/flink/runtime/executiongraph/failover/flip1/NoRestartBackoffTimeStrategy$NoRestartBackoffTimeStrategyFactory
@1.14.0
+#values()[Lorg/apache/flink/runtime/executiongraph/failover/flip1/NoRestartBackoffTimeStrategy$NoRestartBackoffTimeStrategyFactory;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/NoRestartBackoffTimeStrategy$NoRestartBackoffTimeStrategyFactory;
+#create()Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/executiongraph/failover/flip1/NoRestartBackoffTimeStrategy
@1.14.0
+#values()[Lorg/apache/flink/runtime/executiongraph/failover/flip1/NoRestartBackoffTimeStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/NoRestartBackoffTimeStrategy;
+#canRestart()Z
+#getBackoffTime()J
+#notifyFailure(Ljava/lang/Throwable;)V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/executiongraph/failover/flip1/PipelinedRegionComputeUtil
@1.14.0

+###org/apache/flink/runtime/executiongraph/failover/flip1/LogicalPipelinedRegionComputeUtil
@1.14.0
+#computePipelinedRegions(Ljava/lang/Iterable;)Ljava/util/Set;

+###org/apache/flink/runtime/executiongraph/failover/flip1/StronglyConnectedComponentsComputeUtils
@1.14.0

+###org/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategyFactoryLoader
@1.14.0
+#createRestartBackoffTimeStrategyFactory(Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$RestartStrategyConfiguration;Lorg/apache/flink/configuration/Configuration;Z)Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy$Factory;

+###org/apache/flink/runtime/executiongraph/failover/flip1/SchedulingPipelinedRegionComputeUtil
@1.14.0
+#computePipelinedRegions(Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Set;

+###org/apache/flink/runtime/executiongraph/failover/flip1/FixedDelayRestartBackoffTimeStrategy$FixedDelayRestartBackoffTimeStrategyFactory
@1.14.0
+#<init>(IJ)V
+#create()Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;

+###org/apache/flink/runtime/executiongraph/failover/flip1/FixedDelayRestartBackoffTimeStrategy
@1.14.0
+#canRestart()Z
+#getBackoffTime()J
+#getMaxNumberRestartAttempts()I
+#notifyFailure(Ljava/lang/Throwable;)V
+#toString()Ljava/lang/String;
+#createFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FixedDelayRestartBackoffTimeStrategy$FixedDelayRestartBackoffTimeStrategyFactory;

+###org/apache/flink/runtime/executiongraph/failover/flip1/RestartPipelinedRegionFailoverStrategy$Factory
@1.14.0
+#<init>()V
+#create(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;Lorg/apache/flink/runtime/executiongraph/failover/flip1/ResultPartitionAvailabilityChecker;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailoverStrategy;

+###org/apache/flink/runtime/executiongraph/failover/flip1/RestartPipelinedRegionFailoverStrategy
@1.14.0
+#<init>(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)V
+#<init>(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;Lorg/apache/flink/runtime/executiongraph/failover/flip1/ResultPartitionAvailabilityChecker;)V
+#getTasksNeedingRestart(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/lang/Throwable;)Ljava/util/Set;
+#getFailoverRegion(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/scheduler/strategy/SchedulingPipelinedRegion;

+###org/apache/flink/runtime/executiongraph/failover/flip1/ExponentialDelayRestartBackoffTimeStrategy$ExponentialDelayRestartBackoffTimeStrategyFactory
@1.14.0
+#<init>(JJDJD)V
+#create()Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;

+###org/apache/flink/runtime/executiongraph/failover/flip1/ExponentialDelayRestartBackoffTimeStrategy
@1.14.0
+#canRestart()Z
+#getBackoffTime()J
+#notifyFailure(Ljava/lang/Throwable;)V
+#toString()Ljava/lang/String;
+#createFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/ExponentialDelayRestartBackoffTimeStrategy$ExponentialDelayRestartBackoffTimeStrategyFactory;

+###org/apache/flink/runtime/executiongraph/failover/flip1/FailureRateRestartBackoffTimeStrategy$FailureRateRestartBackoffTimeStrategyFactory
@1.14.0
+#<init>(IJJ)V
+#create()Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;

+###org/apache/flink/runtime/executiongraph/failover/flip1/FailureRateRestartBackoffTimeStrategy
@1.14.0
+#canRestart()Z
+#getBackoffTime()J
+#notifyFailure(Ljava/lang/Throwable;)V
+#toString()Ljava/lang/String;
+#createFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureRateRestartBackoffTimeStrategy$FailureRateRestartBackoffTimeStrategyFactory;

+###org/apache/flink/runtime/executiongraph/failover/flip1/RestartAllFailoverStrategy$Factory
@1.14.0
+#<init>()V
+#create(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;Lorg/apache/flink/runtime/executiongraph/failover/flip1/ResultPartitionAvailabilityChecker;)Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailoverStrategy;

+###org/apache/flink/runtime/executiongraph/failover/flip1/RestartAllFailoverStrategy
@1.14.0
+#<init>(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)V
+#getTasksNeedingRestart(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/lang/Throwable;)Ljava/util/Set;

+###org/apache/flink/runtime/executiongraph/ExecutionDeploymentListener
@1.14.0
+#onStartedDeployment(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#onCompletedDeployment(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V

+###org/apache/flink/runtime/executiongraph/AccessExecutionGraph
@1.14.0
+#getJsonPlan()Ljava/lang/String;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getJobName()Ljava/lang/String;
+#getState()Lorg/apache/flink/api/common/JobStatus;
+#getFailureInfo()Lorg/apache/flink/runtime/executiongraph/ErrorInfo;
+#getJobVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/AccessExecutionJobVertex;
+#getAllVertices()Ljava/util/Map;
+#getVerticesTopologically()Ljava/lang/Iterable;
+#getAllExecutionVertices()Ljava/lang/Iterable;
+#getStatusTimestamp(Lorg/apache/flink/api/common/JobStatus;)J
+#getCheckpointCoordinatorConfiguration()Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;
+#getCheckpointStatsSnapshot()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsSnapshot;
+#getArchivedExecutionConfig()Lorg/apache/flink/api/common/ArchivedExecutionConfig;
+#isStoppable()Z
+#getAccumulatorResultsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#getAccumulatorsSerialized()Ljava/util/Map;
+#getStateBackendName()Ljava/util/Optional;
+#getCheckpointStorageName()Ljava/util/Optional;
@1.16.0
+#isChangelogStateBackendEnabled()Lorg/apache/flink/util/TernaryBoolean;
+#getChangelogStorageName()Ljava/util/Optional;

+###org/apache/flink/runtime/executiongraph/JobStatusProvider
@1.14.0
+#getState()Lorg/apache/flink/api/common/JobStatus;
+#getStatusTimestamp(Lorg/apache/flink/api/common/JobStatus;)J

+###org/apache/flink/runtime/executiongraph/ArchivedExecutionGraph
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;[JLorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/runtime/executiongraph/ErrorInfo;Ljava/lang/String;[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;Ljava/util/Map;Lorg/apache/flink/api/common/ArchivedExecutionConfig;ZLorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsSnapshot;Ljava/lang/String;Ljava/lang/String;)V
+#getJsonPlan()Ljava/lang/String;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getJobName()Ljava/lang/String;
+#getState()Lorg/apache/flink/api/common/JobStatus;
+#getFailureInfo()Lorg/apache/flink/runtime/executiongraph/ErrorInfo;
+#getJobVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionJobVertex;
+#getAllVertices()Ljava/util/Map;
+#getVerticesTopologically()Ljava/lang/Iterable;
+#getAllExecutionVertices()Ljava/lang/Iterable;
+#getStatusTimestamp(Lorg/apache/flink/api/common/JobStatus;)J
+#getCheckpointCoordinatorConfiguration()Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;
+#getCheckpointStatsSnapshot()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsSnapshot;
+#getArchivedExecutionConfig()Lorg/apache/flink/api/common/ArchivedExecutionConfig;
+#isStoppable()Z
+#getAccumulatorResultsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#getAccumulatorsSerialized()Ljava/util/Map;
+#getStateBackendName()Ljava/util/Optional;
+#getCheckpointStorageName()Ljava/util/Optional;
+#createFrom(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;
+#createFrom(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/api/common/JobStatus;)Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;
+#createFromInitializingJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/JobStatus;Ljava/lang/Throwable;Lorg/apache/flink/runtime/jobgraph/tasks/JobCheckpointingSettings;J)Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;
+#getJobVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/AccessExecutionJobVertex;
@1.15.0
+#createSparseArchivedExecutionGraph(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/JobStatus;Ljava/lang/Throwable;Lorg/apache/flink/runtime/jobgraph/tasks/JobCheckpointingSettings;J)Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;
-#createFromInitializingJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/JobStatus;Ljava/lang/Throwable;Lorg/apache/flink/runtime/jobgraph/tasks/JobCheckpointingSettings;J)Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;
@1.16.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;[JLorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/runtime/executiongraph/ErrorInfo;Ljava/lang/String;[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;Ljava/util/Map;Lorg/apache/flink/api/common/ArchivedExecutionConfig;ZLorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsSnapshot;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/util/TernaryBoolean;Ljava/lang/String;)V
+#isChangelogStateBackendEnabled()Lorg/apache/flink/util/TernaryBoolean;
+#getChangelogStorageName()Ljava/util/Optional;
-#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;[JLorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/runtime/executiongraph/ErrorInfo;Ljava/lang/String;[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;Ljava/util/Map;Lorg/apache/flink/api/common/ArchivedExecutionConfig;ZLorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsSnapshot;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/flink/runtime/executiongraph/ExecutionGraph
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;I)V
+#getNumberOfInputVertices()I
+#getNumberOfInputVertices(I)I
+#getNumberOfOutputVertices()I
+#getNumberOfOutputVertices(I)I
+#getInputVertex(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getOutputVertex(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getInputVertex(II)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getOutputVertex(II)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getStage(I)Lorg/apache/flink/runtime/executiongraph/ExecutionStage;
+#getNumberOfStages()I
+#getVertexByChannelID(Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getEdgeByID(Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/executiongraph/ExecutionEdge;
+#getVertexByID(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#isExecutionFinished()Z
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getIndexOfCurrentExecutionStage()I
+#getCurrentExecutionStage()Lorg/apache/flink/runtime/executiongraph/ExecutionStage;
+#repairStages()V
+#repairInstanceSharing()V
+#repairInstanceAssignment()V
+#getChannelType(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getJobStatus()Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;
+#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#updateJobStatus(Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;Ljava/lang/String;)V
+#registerJobStatusListener(Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)V
+#unregisterJobStatusListener(Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)V
+#registerExecutionStageListener(Lorg/apache/flink/runtime/executiongraph/ExecutionStageListener;)V
+#unregisterExecutionStageListener(Lorg/apache/flink/runtime/executiongraph/ExecutionStageListener;)V
+#getJobName()Ljava/lang/String;
+#userThreadStarted(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
+#userThreadFinished(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
+#iterator()Ljava/util/Iterator;
+#getPriority()I
+#executeCommand(Ljava/lang/Runnable;)V
+#getRequiredSlots()I
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Ljava/util/List;Ljava/util/concurrent/ExecutorService;)V
+#attachJobGraph(Ljava/util/List;)V
+#getRequiredJarFiles()Ljava/util/List;
+#getState()Lorg/apache/flink/runtime/jobgraph/JobStatus;
+#getJobVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;
+#getAllVertices()Ljava/util/Map;
+#getVerticesTopologically()Ljava/lang/Iterable;
+#getAllIntermediateResults()Ljava/util/Map;
+#getAllExecutionVertices()Ljava/lang/Iterable;
+#getStatusTimestamp(Lorg/apache/flink/runtime/jobgraph/JobStatus;)J
+#isQueuedSchedulingAllowed()Z
+#setQueuedSchedulingAllowed(Z)V
+#scheduleForExecution(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;)V
+#cancel()V
+#fail(Ljava/lang/Throwable;)V
+#waitForJobEnd(J)V
+#waitForJobEnd()V
+#updateState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)Z
+#lookupConnectionInfoAndDeployReceivers(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;
+#getRegisteredExecutions()Ljava/util/Map;
+#registerExecutionListener(Lorg/apache/flink/runtime/execution/ExecutionListener;)V
+#execute(Ljava/lang/Runnable;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;I)V
-#getNumberOfInputVertices()I
-#getNumberOfInputVertices(I)I
-#getNumberOfOutputVertices()I
-#getNumberOfOutputVertices(I)I
-#getInputVertex(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
-#getOutputVertex(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
-#getInputVertex(II)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
-#getOutputVertex(II)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
-#getStage(I)Lorg/apache/flink/runtime/executiongraph/ExecutionStage;
-#getNumberOfStages()I
-#getVertexByChannelID(Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
-#getEdgeByID(Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/executiongraph/ExecutionEdge;
-#getVertexByID(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
-#isExecutionFinished()Z
-#getIndexOfCurrentExecutionStage()I
-#getCurrentExecutionStage()Lorg/apache/flink/runtime/executiongraph/ExecutionStage;
-#repairStages()V
-#repairInstanceSharing()V
-#repairInstanceAssignment()V
-#getChannelType(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/runtime/io/network/channels/ChannelType;
-#getJobStatus()Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;
-#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
-#updateJobStatus(Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;Ljava/lang/String;)V
-#unregisterJobStatusListener(Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)V
-#registerExecutionStageListener(Lorg/apache/flink/runtime/executiongraph/ExecutionStageListener;)V
-#unregisterExecutionStageListener(Lorg/apache/flink/runtime/executiongraph/ExecutionStageListener;)V
-#userThreadStarted(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
-#userThreadFinished(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
-#iterator()Ljava/util/Iterator;
-#getPriority()I
-#executeCommand(Ljava/lang/Runnable;)V
-#getRequiredSlots()I
@0.8.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Ljava/util/List;Ljava/lang/ClassLoader;Ljava/util/concurrent/ExecutorService;)V
+#setNumberOfRetriesLeft(I)V
+#getNumberOfRetriesLeft()I
+#setDelayBeforeRetrying(J)V
+#getDelayBeforeRetrying()J
+#getUserClassLoader()Ljava/lang/ClassLoader;
+#getFailureCause()Ljava/lang/Throwable;
+#restart()V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Lscala/concurrent/duration/FiniteDuration;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Lscala/concurrent/duration/FiniteDuration;Ljava/util/List;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Lscala/concurrent/duration/FiniteDuration;Ljava/util/List;Ljava/lang/ClassLoader;)V
+#setStateCheckpointerActor(Lakka/actor/ActorRef;)V
+#getStateCheckpointerActor()Lakka/actor/ActorRef;
+#setParentContext(Lakka/actor/ActorContext;)V
+#setCheckpointingEnabled(Z)V
+#setCheckpointingInterval(J)V
+#getScheduler()Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#setScheduleMode(Lorg/apache/flink/runtime/jobgraph/ScheduleMode;)V
+#getScheduleMode()Lorg/apache/flink/runtime/jobgraph/ScheduleMode;
+#loadOperatorStates(Ljava/util/Map;)V
+#scheduleOrUpdateConsumers(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#registerJobStatusListener(Lakka/actor/ActorRef;)V
+#registerExecutionListener(Lakka/actor/ActorRef;)V
+#containsJobStatusListener(Lakka/actor/ActorRef;)Z
+#prepareForArchiving()V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Ljava/util/List;Ljava/util/concurrent/ExecutorService;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Ljava/util/List;Ljava/lang/ClassLoader;Ljava/util/concurrent/ExecutorService;)V
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
-#waitForJobEnd(J)V
-#waitForJobEnd()V
-#lookupConnectionInfoAndDeployReceivers(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;
-#registerJobStatusListener(Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)V
-#registerExecutionListener(Lorg/apache/flink/runtime/execution/ExecutionListener;)V
-#execute(Ljava/lang/Runnable;)V
@0.9.0
+#enableSnaphotCheckpointing(JJLjava/util/List;Ljava/util/List;Ljava/util/List;Lakka/actor/ActorSystem;)V
+#disableSnaphotCheckpointing()V
+#isSnapshotCheckpointsEnabled()Z
+#getCheckpointCoordinator()Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;
+#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
+#waitUntilFinished()V
-#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Lscala/concurrent/duration/FiniteDuration;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Lscala/concurrent/duration/FiniteDuration;Ljava/util/List;)V
-#setStateCheckpointerActor(Lakka/actor/ActorRef;)V
-#getStateCheckpointerActor()Lakka/actor/ActorRef;
-#setParentContext(Lakka/actor/ActorContext;)V
-#setCheckpointingEnabled(Z)V
-#setCheckpointingInterval(J)V
-#loadOperatorStates(Ljava/util/Map;)V
-#containsJobStatusListener(Lakka/actor/ActorRef;)Z
@0.10.0
+#<init>(Lscala/concurrent/ExecutionContext;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Lscala/concurrent/duration/FiniteDuration;Ljava/util/List;Ljava/util/List;Ljava/lang/ClassLoader;)V
+#getNumberOfExecutionJobVertices()I
+#isArchived()Z
+#enableSnapshotCheckpointing(JJLjava/util/List;Ljava/util/List;Ljava/util/List;Lakka/actor/ActorSystem;Ljava/util/UUID;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/jobmanager/RecoveryMode;)V
+#getRequiredClasspaths()Ljava/util/List;
+#setJsonPlan(Ljava/lang/String;)V
+#getJsonPlan()Ljava/lang/String;
+#getExecutionContext()Lscala/concurrent/ExecutionContext;
+#getFlinkAccumulators()Ljava/util/Map;
+#aggregateUserAccumulators()Ljava/util/Map;
+#getAccumulatorsSerialized()Ljava/util/Map;
+#getAccumulatorResultsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#restoreLatestCheckpointedState()V
+#updateAccumulators(Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;)V
+#registerJobStatusListener(Lorg/apache/flink/runtime/instance/ActorGateway;)V
+#registerExecutionListener(Lorg/apache/flink/runtime/instance/ActorGateway;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Lscala/concurrent/duration/FiniteDuration;Ljava/util/List;Ljava/lang/ClassLoader;)V
-#enableSnaphotCheckpointing(JJLjava/util/List;Ljava/util/List;Ljava/util/List;Lakka/actor/ActorSystem;)V
-#registerJobStatusListener(Lakka/actor/ActorRef;)V
-#registerExecutionListener(Lakka/actor/ActorRef;)V
@1.14.0
+#start(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#getSchedulingTopology()Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;
+#enableCheckpointing(Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/List;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/runtime/state/CheckpointStorage;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;)V
+#getKvStateLocationRegistry()Lorg/apache/flink/runtime/query/KvStateLocationRegistry;
+#getNumberOfRestarts()J
+#getTotalNumberOfVertices()I
+#setInternalTaskFailuresListener(Lorg/apache/flink/runtime/scheduler/InternalFailuresListener;)V
+#transitionToRunning()V
+#suspend(Ljava/lang/Throwable;)V
+#failJob(Ljava/lang/Throwable;J)V
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#waitUntilTerminal()Lorg/apache/flink/api/common/JobStatus;
+#transitionState(Lorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/api/common/JobStatus;)Z
+#incrementRestarts()V
+#initFailureCause(Ljava/lang/Throwable;J)V
+#updateState(Lorg/apache/flink/runtime/executiongraph/TaskExecutionStateTransition;)Z
+#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#registerJobStatusListener(Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)V
+#getResultPartitionAvailabilityChecker()Lorg/apache/flink/runtime/executiongraph/failover/flip1/ResultPartitionAvailabilityChecker;
+#getNumFinishedVertices()I
+#getJobMasterMainThreadExecutor()Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;
+#getJobVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/AccessExecutionJobVertex;
-#<init>(Lscala/concurrent/ExecutionContext;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Lscala/concurrent/duration/FiniteDuration;Ljava/util/List;Ljava/util/List;Ljava/lang/ClassLoader;)V
-#getNumberOfExecutionJobVertices()I
-#setNumberOfRetriesLeft(I)V
-#getNumberOfRetriesLeft()I
-#setDelayBeforeRetrying(J)V
-#getDelayBeforeRetrying()J
-#isQueuedSchedulingAllowed()Z
-#setQueuedSchedulingAllowed(Z)V
-#setScheduleMode(Lorg/apache/flink/runtime/jobgraph/ScheduleMode;)V
-#getScheduleMode()Lorg/apache/flink/runtime/jobgraph/ScheduleMode;
-#isArchived()Z
-#enableSnapshotCheckpointing(JJLjava/util/List;Ljava/util/List;Ljava/util/List;Lakka/actor/ActorSystem;Ljava/util/UUID;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/jobmanager/RecoveryMode;)V
-#disableSnaphotCheckpointing()V
-#isSnapshotCheckpointsEnabled()Z
-#getRequiredJarFiles()Ljava/util/List;
-#getRequiredClasspaths()Ljava/util/List;
-#getJsonPlan()Ljava/lang/String;
-#getScheduler()Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;
-#getJobID()Lorg/apache/flink/api/common/JobID;
-#getJobName()Ljava/lang/String;
-#getUserClassLoader()Ljava/lang/ClassLoader;
-#getState()Lorg/apache/flink/runtime/jobgraph/JobStatus;
-#getStatusTimestamp(Lorg/apache/flink/runtime/jobgraph/JobStatus;)J
-#getExecutionContext()Lscala/concurrent/ExecutionContext;
-#getFlinkAccumulators()Ljava/util/Map;
-#getAccumulatorsSerialized()Ljava/util/Map;
-#getAccumulatorResultsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
-#scheduleForExecution(Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;)V
-#fail(Ljava/lang/Throwable;)V
-#restart()V
-#restoreLatestCheckpointedState()V
-#prepareForArchiving()V
-#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
-#waitUntilFinished()V
-#updateState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)Z
-#scheduleOrUpdateConsumers(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
-#registerJobStatusListener(Lorg/apache/flink/runtime/instance/ActorGateway;)V
-#registerExecutionListener(Lorg/apache/flink/runtime/instance/ActorGateway;)V
@1.15.0
+#initializeJobVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;J)V
+#notifyNewlyInitializedJobVertices(Ljava/util/List;)V
+#findVertexWithAttempt(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Ljava/util/Optional;
+#findExecution(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Ljava/util/Optional;
-#getTotalNumberOfVertices()I
@1.16.0
+#enableCheckpointing(Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/List;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/runtime/state/CheckpointStorage;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/String;)V
-#enableCheckpointing(Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/List;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/runtime/state/CheckpointStorage;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;)V
-#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V

+###org/apache/flink/runtime/executiongraph/TaskExecutionStateTransition
@1.14.0
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;ZZ)V
+#getError(Ljava/lang/ClassLoader;)Ljava/lang/Throwable;
+#getID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getAccumulators()Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;
+#getIOMetrics()Lorg/apache/flink/runtime/executiongraph/IOMetrics;
+#getCancelTask()Z
+#getReleasePartitions()Z

+###org/apache/flink/runtime/executiongraph/JobStatusListener
@0.6-hadoop2-incubating
+#jobStatusHasChanged(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;Ljava/lang/String;)V
@0.7.0-hadoop2-incubating
+#jobStatusHasChanged(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/JobStatus;Ljava/lang/String;)V
-#jobStatusHasChanged(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;Ljava/lang/String;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/executiongraph/JobStatusListener

+###org/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener
@1.14.0
+#onStateUpdate(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
@1.15.0
+#onStateUpdate(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/execution/ExecutionState;)V
-#onStateUpdate(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;)V

+###org/apache/flink/runtime/executiongraph/VertexAttemptNumberStore
@1.14.0
+#getAttemptCounts(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/SubtaskAttemptNumberStore;

+###org/apache/flink/runtime/executiongraph/EdgeManagerBuildUtil
@1.14.0
+#<init>()V
+#computeMaxEdgesToTargetExecutionVertex(IILorg/apache/flink/runtime/jobgraph/DistributionPattern;)I

+###org/apache/flink/runtime/executiongraph/MutableVertexAttemptNumberStore
@1.14.0
+#setAttemptCount(Lorg/apache/flink/runtime/jobgraph/JobVertexID;II)V

+###org/apache/flink/runtime/executiongraph/ExecutionGraphResultPartitionAvailabilityChecker
@1.14.0
+#isAvailable(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Z

+###org/apache/flink/runtime/executiongraph/VertexGroupComputeUtil
@1.15.0
+#mergeVertexGroups(Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;)Ljava/util/Set;
+#uniqueVertexGroups(Ljava/util/Map;)Ljava/util/Set;

+###org/apache/flink/runtime/executiongraph/DefaultExecutionGraphBuilder
@1.14.0
+#buildGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/slf4j/Logger;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;)Lorg/apache/flink/runtime/executiongraph/DefaultExecutionGraph;
+#isCheckpointingEnabled(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Z
@1.15.0
+#buildGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/slf4j/Logger;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Ljava/util/function/Supplier;Z)Lorg/apache/flink/runtime/executiongraph/DefaultExecutionGraph;
-#buildGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/slf4j/Logger;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;)Lorg/apache/flink/runtime/executiongraph/DefaultExecutionGraph;
@1.16.0
+#buildGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/slf4j/Logger;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Ljava/util/function/Supplier;ZLorg/apache/flink/runtime/executiongraph/ExecutionJobVertex$Factory;)Lorg/apache/flink/runtime/executiongraph/DefaultExecutionGraph;
-#buildGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/slf4j/Logger;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Ljava/util/function/Supplier;Z)Lorg/apache/flink/runtime/executiongraph/DefaultExecutionGraph;

+###org/apache/flink/runtime/executiongraph/DefaultExecutionGraph
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/JobInformation;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;ILjava/lang/ClassLoader;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy$Factory;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;)V
+#start(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#getSchedulingTopology()Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;
+#getPartitionLocationConstraint()Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;
+#getJobMasterMainThreadExecutor()Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;
+#getStateBackendName()Ljava/util/Optional;
+#getCheckpointStorageName()Ljava/util/Optional;
+#enableCheckpointing(Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/List;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/runtime/state/CheckpointStorage;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;)V
+#getCheckpointCoordinator()Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;
+#getKvStateLocationRegistry()Lorg/apache/flink/runtime/query/KvStateLocationRegistry;
+#getCheckpointCoordinatorConfiguration()Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;
+#getCheckpointStatsSnapshot()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsSnapshot;
+#setJsonPlan(Ljava/lang/String;)V
+#getJsonPlan()Ljava/lang/String;
+#getJobInformationOrBlobKey()Lorg/apache/flink/types/Either;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getJobName()Ljava/lang/String;
+#isStoppable()Z
+#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getUserClassLoader()Ljava/lang/ClassLoader;
+#getState()Lorg/apache/flink/api/common/JobStatus;
+#getFailureCause()Ljava/lang/Throwable;
+#getFailureInfo()Lorg/apache/flink/runtime/executiongraph/ErrorInfo;
+#getNumberOfRestarts()J
+#getNumFinishedVertices()I
+#getJobVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;
+#getAllVertices()Ljava/util/Map;
+#getVerticesTopologically()Ljava/lang/Iterable;
+#getTotalNumberOfVertices()I
+#getAllIntermediateResults()Ljava/util/Map;
+#getAllExecutionVertices()Ljava/lang/Iterable;
+#getEdgeManager()Lorg/apache/flink/runtime/executiongraph/EdgeManager;
+#getExecutionVertexOrThrow(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getResultPartitionOrThrow(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;
+#getStatusTimestamp(Lorg/apache/flink/api/common/JobStatus;)J
+#getBlobWriter()Lorg/apache/flink/runtime/blob/BlobWriter;
+#getFutureExecutor()Ljava/util/concurrent/Executor;
+#aggregateUserAccumulators()Ljava/util/Map;
+#getAccumulatorsSerialized()Ljava/util/Map;
+#getAccumulatorResultsStringified()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#setInternalTaskFailuresListener(Lorg/apache/flink/runtime/scheduler/InternalFailuresListener;)V
+#attachJobGraph(Ljava/util/List;)V
+#transitionToRunning()V
+#cancel()V
+#suspend(Ljava/lang/Throwable;)V
+#failGlobal(Ljava/lang/Throwable;)V
+#getArchivedExecutionConfig()Lorg/apache/flink/api/common/ArchivedExecutionConfig;
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#waitUntilTerminal()Lorg/apache/flink/api/common/JobStatus;
+#transitionState(Lorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/api/common/JobStatus;)Z
+#incrementRestarts()V
+#initFailureCause(Ljava/lang/Throwable;J)V
+#vertexFinished()V
+#vertexUnFinished()V
+#failJob(Ljava/lang/Throwable;J)V
+#updateState(Lorg/apache/flink/runtime/executiongraph/TaskExecutionStateTransition;)Z
+#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#getRegisteredExecutions()Ljava/util/Map;
+#registerExecution(Lorg/apache/flink/runtime/executiongraph/Execution;)V
+#deregisterExecution(Lorg/apache/flink/runtime/executiongraph/Execution;)V
+#updateAccumulators(Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;)V
+#registerJobStatusListener(Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)V
+#notifyExecutionChange(Lorg/apache/flink/runtime/executiongraph/Execution;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#notifySchedulerNgAboutInternalTaskFailure(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;ZZ)V
+#deleteBlobs(Ljava/util/List;)V
+#getShuffleMaster()Lorg/apache/flink/runtime/shuffle/ShuffleMaster;
+#getPartitionTracker()Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;
+#getResultPartitionAvailabilityChecker()Lorg/apache/flink/runtime/executiongraph/failover/flip1/ResultPartitionAvailabilityChecker;
+#getPartitionGroupReleaseStrategy()Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy;
+#getExecutionDeploymentListener()Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;
+#getJobVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/AccessExecutionJobVertex;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/JobInformation;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;ILjava/lang/ClassLoader;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy$Factory;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Z)V
+#notifyNewlyInitializedJobVertices(Ljava/util/List;)V
+#initializeJobVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;J)V
+#jobVertexFinished()V
+#jobVertexUnFinished()V
+#notifyExecutionChange(Lorg/apache/flink/runtime/executiongraph/Execution;Lorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#isDynamic()Z
+#findVertexWithAttempt(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Ljava/util/Optional;
+#findExecution(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Ljava/util/Optional;
-#<init>(Lorg/apache/flink/runtime/executiongraph/JobInformation;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;ILjava/lang/ClassLoader;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy$Factory;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;)V
-#getTotalNumberOfVertices()I
-#vertexFinished()V
-#vertexUnFinished()V
-#notifyExecutionChange(Lorg/apache/flink/runtime/executiongraph/Execution;Lorg/apache/flink/runtime/execution/ExecutionState;)V
@1.16.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/JobInformation;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;ILjava/lang/ClassLoader;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy$Factory;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;ZLorg/apache/flink/runtime/executiongraph/ExecutionJobVertex$Factory;Ljava/util/List;)V
+#isChangelogStateBackendEnabled()Lorg/apache/flink/util/TernaryBoolean;
+#getChangelogStorageName()Ljava/util/Optional;
+#enableCheckpointing(Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/List;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/runtime/state/CheckpointStorage;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/String;)V
+#getExecutionGraphID()Lorg/apache/flink/runtime/executiongraph/ExecutionGraphID;
+#getClusterPartitionShuffleDescriptors(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/List;
-#<init>(Lorg/apache/flink/runtime/executiongraph/JobInformation;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;ILjava/lang/ClassLoader;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/executiongraph/failover/flip1/partitionrelease/PartitionGroupReleaseStrategy$Factory;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Z)V
-#enableCheckpointing(Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/List;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/runtime/state/CheckpointStorage;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;)V
-#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V

+###org/apache/flink/runtime/executiongraph/ExecutionGraphException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/executiongraph/IllegalExecutionStateException
@1.14.0
+#<init>(Lorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/Execution;Lorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/execution/ExecutionState;)V

+###org/apache/flink/runtime/executiongraph/DefaultVertexAttemptNumberStore
@1.14.0
+#<init>()V
+#getAttemptCounts(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/SubtaskAttemptNumberStore;
+#setAttemptCount(Lorg/apache/flink/runtime/jobgraph/JobVertexID;II)V

+###org/apache/flink/runtime/executiongraph/DefaultSubtaskAttemptNumberStore
@1.14.0
+#<init>(Ljava/util/List;)V
+#getAttemptCount(I)I

+###org/apache/flink/runtime/executiongraph/ExecutionGraphCheckpointPlanCalculatorContext
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#getMainExecutor()Lorg/apache/flink/util/concurrent/ScheduledExecutor;
+#hasFinishedTasks()Z

+###org/apache/flink/runtime/executiongraph/NoOpExecutionDeploymentListener
@1.14.0
+#values()[Lorg/apache/flink/runtime/executiongraph/NoOpExecutionDeploymentListener;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/executiongraph/NoOpExecutionDeploymentListener;
+#onStartedDeployment(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#onCompletedDeployment(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#get()Lorg/apache/flink/runtime/executiongraph/ExecutionDeploymentListener;

+###org/apache/flink/runtime/clusterframework/types/ResourceID
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getResourceIdString()Ljava/lang/String;
+#getStringWithMetadata()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getMetadata()Ljava/lang/String;
+#generate()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;

+###org/apache/flink/runtime/clusterframework/types/ResourceIDRetrievable
@1.14.0
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;

+###org/apache/flink/runtime/clusterframework/types/SlotID
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;I)V
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getSlotNumber()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getDynamicSlotID(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/clusterframework/types/SlotID;

+###org/apache/flink/runtime/clusterframework/types/AllocationID
@1.14.0
+#<init>()V
+#<init>(JJ)V
@1.15.0
+#fromHexString(Ljava/lang/String;)Lorg/apache/flink/runtime/clusterframework/types/AllocationID;

+###org/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder
@1.14.0
+#setCpuCores(Lorg/apache/flink/api/common/resources/CPUResource;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setCpuCores(D)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setTaskHeapMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setTaskHeapMemoryMB(I)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setTaskOffHeapMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setTaskOffHeapMemoryMB(I)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setManagedMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setManagedMemoryMB(I)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setNetworkMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setNetworkMemoryMB(I)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setExtendedResource(Lorg/apache/flink/api/common/resources/ExternalResource;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#setExtendedResources(Ljava/util/Collection;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#build()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;

+###org/apache/flink/runtime/clusterframework/types/ResourceProfile
@1.14.0
+#getCpuCores()Lorg/apache/flink/api/common/resources/CPUResource;
+#getTaskHeapMemory()Lorg/apache/flink/configuration/MemorySize;
+#getTaskOffHeapMemory()Lorg/apache/flink/configuration/MemorySize;
+#getManagedMemory()Lorg/apache/flink/configuration/MemorySize;
+#getNetworkMemory()Lorg/apache/flink/configuration/MemorySize;
+#getTotalMemory()Lorg/apache/flink/configuration/MemorySize;
+#getOperatorsMemory()Lorg/apache/flink/configuration/MemorySize;
+#getExtendedResources()Ljava/util/Map;
+#isMatching(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Z
+#allFieldsNoLessThan(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#merge(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#subtract(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#multiply(I)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#toString()Ljava/lang/String;
+#fromResourceSpec(Lorg/apache/flink/api/common/operators/ResourceSpec;Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#fromResources(DI)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#newBuilder()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;
+#newBuilder(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile$Builder;

+###org/apache/flink/runtime/clusterframework/types/SlotProfile
@1.14.0
+#getTaskResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getPhysicalSlotResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getPreferredLocations()Ljava/util/Collection;
+#getPreferredAllocations()Ljava/util/Collection;
+#getPreviousExecutionGraphAllocations()Ljava/util/Set;
+#noRequirements()Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;
+#noLocality(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;
+#preferredLocality(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/util/Collection;)Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;
+#priorAllocation(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Set;)Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;
@1.14.3
+#getReservedAllocations()Ljava/util/Set;
-#getPreviousExecutionGraphAllocations()Ljava/util/Set;
-#noRequirements()Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;
-#noLocality(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;
-#preferredLocality(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/util/Collection;)Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;
@1.15.0
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/clusterframework/types/ResourceBudgetManager
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getTotalBudget()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getAvailableBudget()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#reserve(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Z
+#release(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Z

+###org/apache/flink/runtime/clusterframework/ApplicationStatus
@1.14.0
+#values()[Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;
+#processExitCode()I
+#fromJobStatus(Lorg/apache/flink/api/common/JobStatus;)Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;
@1.15.0
+#deriveJobStatus()Lorg/apache/flink/api/common/JobStatus;

+###org/apache/flink/runtime/clusterframework/TaskExecutorProcessUtils
@1.14.0
+#generateDynamicConfigsStr(Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpec;)Ljava/lang/String;
+#newProcessSpecBuilder(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpecBuilder;
+#processSpecFromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpec;
+#processSpecFromWorkerResourceSpec(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;)Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpec;
+#getCpuCoresWithFallbackConfigOption(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/ConfigOption;)D
+#getCpuCoresWithFallback(Lorg/apache/flink/configuration/Configuration;D)Lorg/apache/flink/api/common/resources/CPUResource;
+#getConfigurationMapLegacyTaskManagerHeapSizeToConfigOption(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/ConfigOption;)Lorg/apache/flink/configuration/Configuration;

+###org/apache/flink/runtime/clusterframework/TaskExecutorProcessSpec
@1.14.0
+#<init>(Lorg/apache/flink/api/common/resources/CPUResource;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Ljava/util/Collection;)V
+#getCpuCores()Lorg/apache/flink/api/common/resources/CPUResource;
+#getTaskHeapSize()Lorg/apache/flink/configuration/MemorySize;
+#getTaskOffHeapSize()Lorg/apache/flink/configuration/MemorySize;
+#getNetworkMemSize()Lorg/apache/flink/configuration/MemorySize;
+#getManagedMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getNumSlots()I
+#getExtendedResources()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/clusterframework/TaskExecutorProcessSpecBuilder
@1.14.0
+#withCpuCores(D)Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpecBuilder;
+#withCpuCores(Lorg/apache/flink/api/common/resources/CPUResource;)Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpecBuilder;
+#withTotalProcessMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpecBuilder;
+#build()Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpec;

+###org/apache/flink/runtime/clusterframework/ContaineredTaskManagerParameters
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpec;Ljava/util/HashMap;)V
+#getTaskExecutorProcessSpec()Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpec;
+#taskManagerEnv()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#create(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpec;)Lorg/apache/flink/runtime/clusterframework/ContaineredTaskManagerParameters;

+###org/apache/flink/runtime/clusterframework/BootstrapTools
@1.14.0
+#writeConfiguration(Lorg/apache/flink/configuration/Configuration;Ljava/io/File;)V
+#substituteDeprecatedConfigKey(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/lang/String;)V
+#substituteDeprecatedConfigPrefix(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/lang/String;)V
+#newDynamicPropertiesOption()Lorg/apache/commons/cli/Option;
+#parseDynamicProperties(Lorg/apache/commons/cli/CommandLine;)Lorg/apache/flink/configuration/Configuration;
+#getTaskManagerShellCommand(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/ContaineredTaskManagerParameters;Ljava/lang/String;Ljava/lang/String;ZZZLjava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
+#getStartCommand(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
+#updateTmpDirectoriesInConfiguration(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)V
+#cloneConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/Configuration;
+#getDynamicPropertiesAsString(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;)Ljava/lang/String;
+#escapeForDifferentOS(Ljava/lang/String;)Ljava/lang/String;
+#escapeWithSingleQuote(Ljava/lang/String;)Ljava/lang/String;
+#escapeWithDoubleQuote(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact$Builder
@1.14.0
+#<init>()V
+#setSource(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact$Builder;
+#setDest(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact$Builder;
+#setCachable(Z)Lorg/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact$Builder;
+#setExtract(Z)Lorg/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact$Builder;
+#setExecutable(Z)Lorg/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact$Builder;
+#build()Lorg/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact;
@1.16.0
-###org/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact$Builder

+###org/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;ZZZ)V
+#toString()Ljava/lang/String;
+#newBuilder()Lorg/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact$Builder;
@1.16.0
-###org/apache/flink/runtime/clusterframework/ContainerSpecification$Artifact

+###org/apache/flink/runtime/clusterframework/ContainerSpecification
@1.14.0
+#<init>()V
+#getArtifacts()Ljava/util/List;
+#getEnvironmentVariables()Ljava/util/Map;
+#getFlinkConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getSystemProperties()Lorg/apache/flink/configuration/Configuration;
+#toString()Ljava/lang/String;
+#from(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/clusterframework/ContainerSpecification;
+#formatSystemProperties(Lorg/apache/flink/configuration/Configuration;)Ljava/lang/String;
+#createDynamicProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.16.0
-###org/apache/flink/runtime/clusterframework/ContainerSpecification

+###org/apache/flink/runtime/state/internal/InternalKvState$StateIncrementalVisitor
@1.14.0
+#hasNext()Z
+#nextEntries()Ljava/util/Collection;
+#remove(Lorg/apache/flink/runtime/state/StateEntry;)V
+#update(Lorg/apache/flink/runtime/state/StateEntry;Ljava/lang/Object;)V

+###org/apache/flink/runtime/state/internal/InternalKvState
@1.14.0
+#getKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getNamespaceSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getValueSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#setCurrentNamespace(Ljava/lang/Object;)V
+#getSerializedValue([BLorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)[B
+#getStateIncrementalVisitor(I)Lorg/apache/flink/runtime/state/internal/InternalKvState$StateIncrementalVisitor;

+###org/apache/flink/runtime/state/internal/InternalValueState
@1.14.0

+###org/apache/flink/runtime/state/internal/InternalAppendingState
@1.14.0
+#getInternal()Ljava/lang/Object;
+#updateInternal(Ljava/lang/Object;)V

+###org/apache/flink/runtime/state/internal/InternalMergingState
@1.14.0
+#mergeNamespaces(Ljava/lang/Object;Ljava/util/Collection;)V

+###org/apache/flink/runtime/state/internal/InternalReducingState
@1.14.0

+###org/apache/flink/runtime/state/internal/InternalListState
@1.14.0
+#update(Ljava/util/List;)V
+#addAll(Ljava/util/List;)V

+###org/apache/flink/runtime/state/internal/InternalMapState
@1.14.0

+###org/apache/flink/runtime/state/internal/InternalAggregatingState
@1.14.0

+###org/apache/flink/runtime/state/heap/HeapPriorityQueueElement
@1.14.0
+#getInternalIndex()I
+#setInternalIndex(I)V

+###org/apache/flink/runtime/state/heap/HeapPriorityQueueSet
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/PriorityComparator;Lorg/apache/flink/runtime/state/KeyExtractorFunction;ILorg/apache/flink/runtime/state/KeyGroupRange;I)V
+#poll()Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueElement;
+#add(Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueElement;)Z
+#remove(Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueElement;)Z
+#clear()V
+#getSubsetForKeyGroup(I)Ljava/util/Set;
+#remove(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;

+###org/apache/flink/runtime/state/heap/HeapPriorityQueue
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/PriorityComparator;I)V
+#adjustModifiedElement(Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueElement;)V

+###org/apache/flink/runtime/state/heap/AbstractHeapPriorityQueue
@1.14.0
+#<init>(I)V
+#poll()Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueElement;
+#peek()Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueElement;
+#add(Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueElement;)Z
+#remove(Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueElement;)Z
+#isEmpty()Z
+#size()I
+#addAll(Ljava/util/Collection;)V
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#iterator()Lorg/apache/flink/util/CloseableIterator;
+#clear()V
+#remove(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#peek()Ljava/lang/Object;
+#poll()Ljava/lang/Object;

+###org/apache/flink/runtime/state/heap/CopyOnWriteStateMap$StateMapEntry
@1.14.0
+#setState(Ljava/lang/Object;I)V
+#getKey()Ljava/lang/Object;
+#getNamespace()Ljava/lang/Object;
+#getState()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/heap/CopyOnWriteStateMap
@1.14.0
+#size()I
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#putAndGetOld(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)V
+#removeAndGetOld(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getKeys(Ljava/lang/Object;)Ljava/util/stream/Stream;
+#transform(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/flink/runtime/state/StateTransformationFunction;)V
+#iterator()Ljava/util/Iterator;
+#stateSnapshot()Lorg/apache/flink/runtime/state/heap/CopyOnWriteStateMapSnapshot;
+#releaseSnapshot(Lorg/apache/flink/runtime/state/heap/StateMapSnapshot;)V
+#getStateSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#sizeOfNamespace(Ljava/lang/Object;)I
+#getStateIncrementalVisitor(I)Lorg/apache/flink/runtime/state/internal/InternalKvState$StateIncrementalVisitor;
+#stateSnapshot()Lorg/apache/flink/runtime/state/heap/StateMapSnapshot;
@1.16.0
+#setStateSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V

+###org/apache/flink/runtime/state/heap/StateMap
@1.14.0
+#<init>()V
+#isEmpty()Z
+#size()I
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#putAndGetOld(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)V
+#removeAndGetOld(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#transform(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/flink/runtime/state/StateTransformationFunction;)V
+#getKeys(Ljava/lang/Object;)Ljava/util/stream/Stream;
+#getStateIncrementalVisitor(I)Lorg/apache/flink/runtime/state/internal/InternalKvState$StateIncrementalVisitor;
+#stateSnapshot()Lorg/apache/flink/runtime/state/heap/StateMapSnapshot;
+#releaseSnapshot(Lorg/apache/flink/runtime/state/heap/StateMapSnapshot;)V
+#sizeOfNamespace(Ljava/lang/Object;)I

+###org/apache/flink/runtime/state/heap/CopyOnWriteStateMapSnapshot
@1.14.0
+#release()V
+#isReleased()Z
+#getIterator(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/state/StateSnapshotTransformer;)Lorg/apache/flink/runtime/state/heap/CopyOnWriteStateMapSnapshot$SnapshotIterator;
+#writeState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/runtime/state/StateSnapshotTransformer;)V
+#getIterator(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/state/StateSnapshotTransformer;)Ljava/util/Iterator;

+###org/apache/flink/runtime/state/heap/StateMapSnapshot
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/heap/StateMap;)V
+#isOwner(Lorg/apache/flink/runtime/state/heap/StateMap;)Z
+#release()V
+#getIterator(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/state/StateSnapshotTransformer;)Ljava/util/Iterator;
+#writeState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/runtime/state/StateSnapshotTransformer;)V

+###org/apache/flink/runtime/state/heap/AbstractHeapState
@1.14.0
+#clear()V
+#setCurrentNamespace(Ljava/lang/Object;)V
+#getSerializedValue([BLorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)[B
+#getStateTable()Lorg/apache/flink/runtime/state/heap/StateTable;
+#getStateIncrementalVisitor(I)Lorg/apache/flink/runtime/state/internal/InternalKvState$StateIncrementalVisitor;

+###org/apache/flink/runtime/state/heap/StateTable
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/heap/InternalKeyContext;Lorg/apache/flink/runtime/state/RegisteredKeyValueStateBackendMetaInfo;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#stateSnapshot()Lorg/apache/flink/runtime/state/IterableStateSnapshot;
+#isEmpty()Z
+#size()I
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)V
+#removeAndGetOld(Ljava/lang/Object;)Ljava/lang/Object;
+#transform(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/flink/runtime/state/StateTransformationFunction;)V
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getKeys(Ljava/lang/Object;)Ljava/util/stream/Stream;
+#getKeysAndNamespaces()Ljava/util/stream/Stream;
+#getStateIncrementalVisitor(I)Lorg/apache/flink/runtime/state/internal/InternalKvState$StateIncrementalVisitor;
+#getState()[Lorg/apache/flink/runtime/state/heap/StateMap;
+#getKeyGroupOffset()I
+#getMapForKeyGroup(I)Lorg/apache/flink/runtime/state/heap/StateMap;
+#getKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getStateSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getNamespaceSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getMetaInfo()Lorg/apache/flink/runtime/state/RegisteredKeyValueStateBackendMetaInfo;
+#setMetaInfo(Lorg/apache/flink/runtime/state/RegisteredKeyValueStateBackendMetaInfo;)V
+#put(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)V
+#iterator()Ljava/util/Iterator;
+#sizeOfNamespace(Ljava/lang/Object;)I
+#keyGroupReader(I)Lorg/apache/flink/runtime/state/StateSnapshotKeyGroupReader;
+#stateSnapshot()Lorg/apache/flink/runtime/state/StateSnapshot;

+###org/apache/flink/runtime/state/heap/InternalKeyContext
@1.14.0
+#getCurrentKey()Ljava/lang/Object;
+#getCurrentKeyGroupIndex()I
+#getNumberOfKeyGroups()I
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#setCurrentKey(Ljava/lang/Object;)V
+#setCurrentKeyGroupIndex(I)V

+###org/apache/flink/runtime/state/heap/HeapPriorityQueueSnapshotRestoreWrapper
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueSet;Lorg/apache/flink/runtime/state/RegisteredPriorityQueueStateBackendMetaInfo;Lorg/apache/flink/runtime/state/KeyExtractorFunction;Lorg/apache/flink/runtime/state/KeyGroupRange;I)V
+#stateSnapshot()Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueStateSnapshot;
+#keyGroupReader(I)Lorg/apache/flink/runtime/state/StateSnapshotKeyGroupReader;
+#getPriorityQueue()Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueSet;
+#getMetaInfo()Lorg/apache/flink/runtime/state/RegisteredPriorityQueueStateBackendMetaInfo;
+#forUpdatedSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueSnapshotRestoreWrapper;
+#stateSnapshot()Lorg/apache/flink/runtime/state/StateSnapshot;
@1.16.0
+#forUpdatedSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Z)Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueSnapshotRestoreWrapper;

+###org/apache/flink/runtime/state/heap/HeapPriorityQueueStateSnapshot
@1.14.0
+#getKeyGroupWriter()Lorg/apache/flink/runtime/state/StateSnapshot$StateKeyGroupWriter;
+#getIteratorForKeyGroup(I)Ljava/util/Iterator;
+#getMetaInfoSnapshot()Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;
+#getMetaInfo()Lorg/apache/flink/runtime/state/RegisteredPriorityQueueStateBackendMetaInfo;
+#release()V

+###org/apache/flink/runtime/state/heap/CopyOnWriteStateTable
@1.14.0
+#stateSnapshot()Lorg/apache/flink/runtime/state/heap/CopyOnWriteStateTableSnapshot;
+#stateSnapshot()Lorg/apache/flink/runtime/state/IterableStateSnapshot;
+#stateSnapshot()Lorg/apache/flink/runtime/state/StateSnapshot;
@1.16.0
+#setMetaInfo(Lorg/apache/flink/runtime/state/RegisteredKeyValueStateBackendMetaInfo;)V

+###org/apache/flink/runtime/state/heap/CopyOnWriteStateTableSnapshot
@1.14.0
+#release()V
+#writeStateInKeyGroup(Lorg/apache/flink/core/memory/DataOutputView;I)V
+#getIterator(I)Ljava/util/Iterator;
+#getKeyGroupWriter()Lorg/apache/flink/runtime/state/StateSnapshot$StateKeyGroupWriter;
+#getMetaInfoSnapshot()Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;

+###org/apache/flink/runtime/state/heap/HeapPriorityQueueSetFactory
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/KeyGroupRange;II)V
+#create(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueSet;
+#create(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/runtime/state/KeyGroupedInternalPriorityQueue;

+###org/apache/flink/runtime/state/heap/HeapRestoreOperation
@1.14.0
+#restore()Ljava/lang/Void;
+#restore()Ljava/lang/Object;

+###org/apache/flink/runtime/state/heap/StateTableByKeyGroupReaders
@1.14.0
+#<init>()V
+#readerForVersion(Lorg/apache/flink/runtime/state/heap/StateTable;I)Lorg/apache/flink/runtime/state/StateSnapshotKeyGroupReader;

+###org/apache/flink/runtime/state/heap/HeapKeyedStateBackendBuilder
@1.14.0
+#<init>(Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/ClassLoader;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig;Ljava/util/Collection;Lorg/apache/flink/runtime/state/StreamCompressionDecorator;Lorg/apache/flink/runtime/state/LocalRecoveryConfig;Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueSetFactory;ZLorg/apache/flink/core/fs/CloseableRegistry;)V
+#build()Lorg/apache/flink/runtime/state/heap/HeapKeyedStateBackend;
+#build()Ljava/lang/Object;

+###org/apache/flink/runtime/state/heap/HeapKeyedStateBackend
@1.14.0
+#<init>(Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig;Lorg/apache/flink/core/fs/CloseableRegistry;Lorg/apache/flink/runtime/state/StreamCompressionDecorator;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/runtime/state/LocalRecoveryConfig;Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueSetFactory;Lorg/apache/flink/runtime/state/heap/HeapSnapshotStrategy;Lorg/apache/flink/runtime/state/SnapshotExecutionType;Lorg/apache/flink/runtime/state/heap/StateTableFactory;Lorg/apache/flink/runtime/state/heap/InternalKeyContext;)V
+#create(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/runtime/state/KeyGroupedInternalPriorityQueue;
+#getKeys(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/stream/Stream;
+#getKeysAndNamespaces(Ljava/lang/String;)Ljava/util/stream/Stream;
+#createInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;)Lorg/apache/flink/api/common/state/State;
+#snapshot(JJLorg/apache/flink/runtime/state/CheckpointStreamFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/RunnableFuture;
+#savepoint()Lorg/apache/flink/runtime/state/SavepointResources;
+#notifyCheckpointComplete(J)V
+#notifyCheckpointAborted(J)V
+#applyToAllKeys(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/KeyedStateFunction;Lorg/apache/flink/runtime/state/AbstractKeyedStateBackend$PartitionStateFactory;)V
+#toString()Ljava/lang/String;
+#numKeyValueStateEntries()I
+#numKeyValueStateEntries(Ljava/lang/Object;)I
+#getLocalRecoveryConfig()Lorg/apache/flink/runtime/state/LocalRecoveryConfig;
@1.16.0
+#create(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Z)Lorg/apache/flink/runtime/state/KeyGroupedInternalPriorityQueue;
+#createOrUpdateInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;)Lorg/apache/flink/api/common/state/State;
+#createOrUpdateInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;Z)Lorg/apache/flink/api/common/state/State;
-#createInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;)Lorg/apache/flink/api/common/state/State;

+###org/apache/flink/runtime/state/heap/HeapKeyValueStateIterator
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILjava/util/Map;Ljava/util/Map;)V
+#isValid()Z
+#isNewKeyValueState()Z
+#isNewKeyGroup()Z
+#keyGroup()I
+#kvStateId()I
+#next()V
+#key()[B
+#value()[B
+#close()V

+###org/apache/flink/runtime/state/heap/KeyGroupPartitionedPriorityQueue$PartitionQueueSetFactory
@1.14.0
+#create(IILorg/apache/flink/runtime/state/KeyExtractorFunction;Lorg/apache/flink/runtime/state/PriorityComparator;)Lorg/apache/flink/runtime/state/InternalPriorityQueue;

+###org/apache/flink/runtime/state/heap/KeyGroupPartitionedPriorityQueue
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/KeyExtractorFunction;Lorg/apache/flink/runtime/state/PriorityComparator;Lorg/apache/flink/runtime/state/heap/KeyGroupPartitionedPriorityQueue$PartitionQueueSetFactory;Lorg/apache/flink/runtime/state/KeyGroupRange;I)V
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#isEmpty()Z
+#size()I
+#addAll(Ljava/util/Collection;)V
+#iterator()Lorg/apache/flink/util/CloseableIterator;
+#getSubsetForKeyGroup(I)Ljava/util/Set;

+###org/apache/flink/runtime/state/heap/HeapSavepointRestoreOperation
@1.14.0
+#restore()Ljava/lang/Void;
+#restore()Ljava/lang/Object;

+###org/apache/flink/runtime/state/heap/InternalKeyContextImpl
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/KeyGroupRange;I)V
+#getCurrentKey()Ljava/lang/Object;
+#getCurrentKeyGroupIndex()I
+#getNumberOfKeyGroups()I
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#setCurrentKey(Ljava/lang/Object;)V
+#setCurrentKeyGroupIndex(I)V

+###org/apache/flink/runtime/state/CheckpointStorageLocationReference
@1.14.0
+#<init>([B)V
+#getReferenceBytes()[B
+#isDefaultReference()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getDefault()Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;

+###org/apache/flink/runtime/state/CompositeStateHandle
@1.14.0
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
@1.15.0
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
+#getCheckpointedSize()J
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V

+###org/apache/flink/runtime/state/StateObject
@1.14.0
+#discardState()V
+#getStateSize()J

+###org/apache/flink/runtime/state/AbstractChannelStateHandle$StateContentMetaInfo
@1.14.0
+#<init>()V
+#<init>(Ljava/util/List;J)V
+#withDataAdded(JJ)V
+#getOffsets()Ljava/util/List;
+#getSize()J

+###org/apache/flink/runtime/state/AbstractChannelStateHandle
@1.14.0
+#collectUniqueDelegates([Ljava/util/Collection;)Ljava/util/Set;
+#discardState()V
+#getStateSize()J
+#getOffsets()Ljava/util/List;
+#getDelegate()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#getInfo()Ljava/lang/Object;
+#getSubtaskIndex()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/SharedStateRegistry
@1.14.0
+#<init>()V
+#<init>(Ljava/util/concurrent/Executor;)V
+#registerReference(Lorg/apache/flink/runtime/state/SharedStateRegistryKey;Lorg/apache/flink/runtime/state/StreamStateHandle;)Lorg/apache/flink/runtime/state/SharedStateRegistry$Result;
+#unregisterReference(Lorg/apache/flink/runtime/state/SharedStateRegistryKey;)Lorg/apache/flink/runtime/state/SharedStateRegistry$Result;
+#registerAll(Ljava/lang/Iterable;)V
+#toString()Ljava/lang/String;
+#close()V
@1.15.0
+#registerReference(Lorg/apache/flink/runtime/state/SharedStateRegistryKey;Lorg/apache/flink/runtime/state/StreamStateHandle;J)Lorg/apache/flink/runtime/state/StreamStateHandle;
+#unregisterUnusedState(J)V
+#registerAll(Ljava/lang/Iterable;J)V
+#registerAllAfterRestored(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)V
+#checkpointCompleted(J)V
-#<init>()V
-#<init>(Ljava/util/concurrent/Executor;)V
-#registerReference(Lorg/apache/flink/runtime/state/SharedStateRegistryKey;Lorg/apache/flink/runtime/state/StreamStateHandle;)Lorg/apache/flink/runtime/state/SharedStateRegistry$Result;
-#unregisterReference(Lorg/apache/flink/runtime/state/SharedStateRegistryKey;)Lorg/apache/flink/runtime/state/SharedStateRegistry$Result;
-#registerAll(Ljava/lang/Iterable;)V
-#toString()Ljava/lang/String;
-#close()V
@1.16.0
+#registerReference(Lorg/apache/flink/runtime/state/SharedStateRegistryKey;Lorg/apache/flink/runtime/state/StreamStateHandle;JZ)Lorg/apache/flink/runtime/state/StreamStateHandle;
+#unregisterUnusedState(J)Ljava/util/Set;
-#unregisterUnusedState(J)V

+###org/apache/flink/runtime/state/OperatorStateHandle$Mode
@1.14.0
+#values()[Lorg/apache/flink/runtime/state/OperatorStateHandle$Mode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/state/OperatorStateHandle$Mode;

+###org/apache/flink/runtime/state/OperatorStateHandle$StateMetaInfo
@1.14.0
+#<init>([JLorg/apache/flink/runtime/state/OperatorStateHandle$Mode;)V
+#getOffsets()[J
+#getDistributionMode()Lorg/apache/flink/runtime/state/OperatorStateHandle$Mode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/OperatorStateHandle
@1.14.0
+#getStateNameToPartitionOffsets()Ljava/util/Map;
+#openInputStream()Lorg/apache/flink/core/fs/FSDataInputStream;
+#getDelegateStateHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;

+###org/apache/flink/runtime/state/StreamStateHandle
@0.10.0
@1.14.0
+#openInputStream()Lorg/apache/flink/core/fs/FSDataInputStream;
+#asBytesIfInMemory()Ljava/util/Optional;
@1.16.0
+#getStreamStateHandleID()Lorg/apache/flink/runtime/state/PhysicalStateHandleID;

+###org/apache/flink/runtime/state/KeyedStateHandle
@1.14.0
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyedStateHandle;
@1.15.0
+#getStateHandleId()Lorg/apache/flink/runtime/state/StateHandleID;

+###org/apache/flink/runtime/state/InputChannelStateHandle
@1.14.0
+#<init>(ILorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;Lorg/apache/flink/runtime/state/StreamStateHandle;Lorg/apache/flink/runtime/state/AbstractChannelStateHandle$StateContentMetaInfo;)V
+#<init>(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;Lorg/apache/flink/runtime/state/StreamStateHandle;Ljava/util/List;)V
+#<init>(ILorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;Lorg/apache/flink/runtime/state/StreamStateHandle;Ljava/util/List;J)V

+###org/apache/flink/runtime/state/ResultSubpartitionStateHandle
@1.14.0
+#<init>(ILorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;Lorg/apache/flink/runtime/state/StreamStateHandle;Lorg/apache/flink/runtime/state/AbstractChannelStateHandle$StateContentMetaInfo;)V
+#<init>(Lorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;Lorg/apache/flink/runtime/state/StreamStateHandle;Ljava/util/List;)V
+#<init>(ILorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;Lorg/apache/flink/runtime/state/StreamStateHandle;Ljava/util/List;J)V

+###org/apache/flink/runtime/state/SharedStateRegistryFactory
@1.14.0
+#create(Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/state/SharedStateRegistry;
@1.15.0
+#create(Ljava/util/concurrent/Executor;Ljava/util/Collection;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)Lorg/apache/flink/runtime/state/SharedStateRegistry;
-#create(Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/state/SharedStateRegistry;

+###org/apache/flink/runtime/state/SharedStateRegistryKey
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/state/StateHandleID;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/runtime/state/KeyGroupRange
@1.14.0
+#<init>(II)V
+#contains(I)Z
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyGroupRange;
+#getNumberOfKeyGroups()I
+#getStartKeyGroup()I
+#getEndKeyGroup()I
+#getKeyGroupId(I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
+#of(II)Lorg/apache/flink/runtime/state/KeyGroupRange;

+###org/apache/flink/runtime/state/KeyGroupsList
@1.14.0
+#getNumberOfKeyGroups()I
+#getKeyGroupId(I)I
+#contains(I)Z

+###org/apache/flink/runtime/state/StateHandleID
@1.14.0
+#<init>(Ljava/lang/String;)V
@1.15.0
+#randomStateHandleId()Lorg/apache/flink/runtime/state/StateHandleID;

+###org/apache/flink/runtime/state/CompletedCheckpointStorageLocation
@1.14.0
+#getExternalPointer()Ljava/lang/String;
+#getMetadataHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#disposeStorageLocation()V

+###org/apache/flink/runtime/state/memory/ByteStreamStateHandle
@0.10.0
+#<init>([B)V
+#getState(Ljava/lang/ClassLoader;)Ljava/io/InputStream;
+#discardState()V
+#getState(Ljava/lang/ClassLoader;)Ljava/lang/Object;
@1.14.0
+#<init>(Ljava/lang/String;[B)V
+#openInputStream()Lorg/apache/flink/core/fs/FSDataInputStream;
+#asBytesIfInMemory()Ljava/util/Optional;
+#getData()[B
+#getHandleName()Ljava/lang/String;
+#getStateSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
-#<init>([B)V
-#getState(Ljava/lang/ClassLoader;)Ljava/io/InputStream;
-#getState(Ljava/lang/ClassLoader;)Ljava/lang/Object;
@1.16.0
+#getStreamStateHandleID()Lorg/apache/flink/runtime/state/PhysicalStateHandleID;

+###org/apache/flink/runtime/state/memory/PersistentMetadataCheckpointStorageLocation
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;I)V
+#createMetadataOutputStream()Lorg/apache/flink/runtime/state/CheckpointMetadataOutputStream;
+#disposeOnFailure()V
+#getLocationReference()Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;

+###org/apache/flink/runtime/state/memory/MemCheckpointStreamFactory$MemoryCheckpointOutputStream
@1.14.0
+#<init>(I)V
+#write(I)V
+#write([BII)V
+#flush()V
+#sync()V
+#close()V
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#getPos()J
+#isClosed()Z
+#closeAndGetBytes()[B

+###org/apache/flink/runtime/state/memory/MemCheckpointStreamFactory
@1.14.0
+#<init>(I)V
+#createCheckpointStateOutputStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;
+#toString()Ljava/lang/String;
@1.15.0
+#createCheckpointStateOutputStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;
+#canFastDuplicate(Lorg/apache/flink/runtime/state/StreamStateHandle;Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Z
+#duplicate(Ljava/util/List;Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Ljava/util/List;
-#createCheckpointStateOutputStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;

+###org/apache/flink/runtime/state/memory/MemoryStateBackendFactory
@1.14.0
+#<init>()V
+#createFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/memory/MemoryStateBackend;
+#createFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/StateBackend;

+###org/apache/flink/runtime/state/memory/MemoryStateBackend
@0.10.0
+#<init>()V
+#<init>(I)V
+#initializeForJob(Lorg/apache/flink/api/common/JobID;)V
+#disposeAllStateForCurrentJob()V
+#close()V
+#createKvState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)Lorg/apache/flink/runtime/state/memory/MemHeapKvState;
+#checkpointStateSerializable(Ljava/io/Serializable;JJ)Lorg/apache/flink/runtime/state/StateHandle;
+#createCheckpointStateOutputStream(JJ)Lorg/apache/flink/runtime/state/StateBackend$CheckpointStateOutputStream;
+#toString()Ljava/lang/String;
+#defaultInstance()Lorg/apache/flink/runtime/state/memory/MemoryStateBackend;
+#createKvState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)Lorg/apache/flink/runtime/state/KvState;
@1.14.0
+#<init>(Z)V
+#<init>(IZ)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;ILorg/apache/flink/util/TernaryBoolean;)V
+#getMaxStateSize()I
+#isUsingAsynchronousSnapshots()Z
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/memory/MemoryStateBackend;
+#createCheckpointStorage(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/state/CheckpointStorageAccess;
+#createOperatorStateBackend(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/OperatorStateBackend;
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/AbstractKeyedStateBackend;
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/CheckpointableKeyedStateBackend;
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/StateBackend;
-#initializeForJob(Lorg/apache/flink/api/common/JobID;)V
-#disposeAllStateForCurrentJob()V
-#close()V
-#createKvState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)Lorg/apache/flink/runtime/state/memory/MemHeapKvState;
-#checkpointStateSerializable(Ljava/io/Serializable;JJ)Lorg/apache/flink/runtime/state/StateHandle;
-#createCheckpointStateOutputStream(JJ)Lorg/apache/flink/runtime/state/StateBackend$CheckpointStateOutputStream;
-#defaultInstance()Lorg/apache/flink/runtime/state/memory/MemoryStateBackend;
-#createKvState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)Lorg/apache/flink/runtime/state/KvState;
@1.15.0
+#supportsNoClaimRestoreMode()Z
+#supportsSavepointFormat(Lorg/apache/flink/core/execution/SavepointFormatType;)Z

+###org/apache/flink/runtime/state/memory/MemoryBackendCheckpointStorageAccess
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;I)V
+#getMaxStateSize()I
+#supportsHighlyAvailableStorage()Z
+#initializeBaseLocations()V
+#initializeLocationForCheckpoint(J)Lorg/apache/flink/runtime/state/CheckpointStorageLocation;
+#resolveCheckpointStorageLocation(JLorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/state/CheckpointStreamFactory;
+#createTaskOwnedStateStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;
+#toString()Ljava/lang/String;
@1.15.0
+#initializeBaseLocationsForCheckpoint()V
+#createTaskOwnedStateStream()Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;
+#createTaskOwnedCheckpointStateToolset()Lorg/apache/flink/runtime/state/CheckpointStateToolset;
-#initializeBaseLocations()V
-#createTaskOwnedStateStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;

+###org/apache/flink/runtime/state/memory/NonPersistentMetadataCheckpointStorageLocation
@1.14.0
+#<init>(I)V
+#createMetadataOutputStream()Lorg/apache/flink/runtime/state/CheckpointMetadataOutputStream;
+#disposeOnFailure()V
+#getLocationReference()Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;

+###org/apache/flink/runtime/state/StateBackend
@0.10.0
+#<init>()V
+#initializeForJob(Lorg/apache/flink/api/common/JobID;)V
+#disposeAllStateForCurrentJob()V
+#close()V
+#createKvState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)Lorg/apache/flink/runtime/state/KvState;
+#createCheckpointStateOutputStream(JJ)Lorg/apache/flink/runtime/state/StateBackend$CheckpointStateOutputStream;
+#createCheckpointStateOutputView(JJ)Lorg/apache/flink/runtime/state/StateBackend$CheckpointStateOutputView;
+#checkpointStateSerializable(Ljava/io/Serializable;JJ)Lorg/apache/flink/runtime/state/StateHandle;
@1.14.0
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/CheckpointableKeyedStateBackend;
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;D)Lorg/apache/flink/runtime/state/CheckpointableKeyedStateBackend;
+#createOperatorStateBackend(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/OperatorStateBackend;
+#useManagedMemory()Z
-#<init>()V
-#initializeForJob(Lorg/apache/flink/api/common/JobID;)V
-#disposeAllStateForCurrentJob()V
-#close()V
-#createKvState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)Lorg/apache/flink/runtime/state/KvState;
-#createCheckpointStateOutputStream(JJ)Lorg/apache/flink/runtime/state/StateBackend$CheckpointStateOutputStream;
-#createCheckpointStateOutputView(JJ)Lorg/apache/flink/runtime/state/StateBackend$CheckpointStateOutputView;
-#checkpointStateSerializable(Ljava/io/Serializable;JJ)Lorg/apache/flink/runtime/state/StateHandle;
@1.15.0
+#supportsNoClaimRestoreMode()Z
+#supportsSavepointFormat(Lorg/apache/flink/core/execution/SavepointFormatType;)Z
@1.16.0
+#getName()Ljava/lang/String;

+###org/apache/flink/runtime/state/CheckpointStorage
@1.14.0
+#resolveCheckpoint(Ljava/lang/String;)Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;
+#createCheckpointStorage(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/state/CheckpointStorageAccess;

+###org/apache/flink/runtime/state/ttl/TtlTimeProvider
@1.14.0
+#currentTimestamp()J

+###org/apache/flink/runtime/state/ttl/TtlValue
@1.14.0
+#<init>(Ljava/lang/Object;J)V
+#getUserValue()Ljava/lang/Object;
+#getLastAccessTimestamp()J

+###org/apache/flink/runtime/state/ttl/TtlStateFactory$TtlSerializer
@1.14.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#<init>(Lorg/apache/flink/api/common/typeutils/CompositeSerializer$PrecomputedParameters;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#createInstance([Ljava/lang/Object;)Lorg/apache/flink/runtime/state/ttl/TtlValue;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#resolveSchemaCompatibilityViaRedirectingToNewSnapshotClass(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#isTtlStateSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Z
+#createInstance([Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/runtime/state/ttl/TtlStateFactory$TtlSerializerSnapshot
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/state/ttl/TtlStateFactory
@1.14.0
+#createStateAndWrapWithTtlIfEnabled(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/KeyedStateBackend;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;)Lorg/apache/flink/api/common/state/State;

+###org/apache/flink/runtime/state/ttl/TtlUtils
@1.14.0
+#<init>()V
+#expired(JJJ)Z

+###org/apache/flink/runtime/state/CheckpointableKeyedStateBackend
@1.14.0
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#savepoint()Lorg/apache/flink/runtime/state/SavepointResources;

+###org/apache/flink/runtime/state/KeyedStateBackend$KeySelectionListener
@1.14.0
+#keySelected(Ljava/lang/Object;)V

+###org/apache/flink/runtime/state/KeyedStateBackend
@1.14.0
+#setCurrentKey(Ljava/lang/Object;)V
+#getCurrentKey()Ljava/lang/Object;
+#getKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#applyToAllKeys(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/KeyedStateFunction;)V
+#getKeys(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/stream/Stream;
+#getKeysAndNamespaces(Ljava/lang/String;)Ljava/util/stream/Stream;
+#getOrCreateKeyedState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;)Lorg/apache/flink/api/common/state/State;
+#getPartitionedState(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;)Lorg/apache/flink/api/common/state/State;
+#dispose()V
+#registerKeySelectionListener(Lorg/apache/flink/runtime/state/KeyedStateBackend$KeySelectionListener;)V
+#deregisterKeySelectionListener(Lorg/apache/flink/runtime/state/KeyedStateBackend$KeySelectionListener;)Z
+#isStateImmutableInStateBackend(Lorg/apache/flink/runtime/checkpoint/CheckpointType;)Z
@1.15.0
*#isStateImmutableInStateBackend(Lorg/apache/flink/runtime/checkpoint/CheckpointType;)Z[deprecated]
+#isSafeToReuseKVState()Z

+###org/apache/flink/runtime/state/StateSnapshotTransformer$CollectionStateSnapshotTransformer$TransformStrategy
@1.14.0
+#values()[Lorg/apache/flink/runtime/state/StateSnapshotTransformer$CollectionStateSnapshotTransformer$TransformStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/state/StateSnapshotTransformer$CollectionStateSnapshotTransformer$TransformStrategy;

+###org/apache/flink/runtime/state/StateSnapshotTransformer$CollectionStateSnapshotTransformer
@1.14.0
+#getFilterStrategy()Lorg/apache/flink/runtime/state/StateSnapshotTransformer$CollectionStateSnapshotTransformer$TransformStrategy;

+###org/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory
@1.14.0
+#noTransform()Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;
+#createNoTransform()Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;
+#createForDeserializedState()Ljava/util/Optional;
+#createForSerializedState()Ljava/util/Optional;

+###org/apache/flink/runtime/state/StateSnapshotTransformer
@1.14.0
+#filterOrTransform(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/runtime/state/KeyedStateFactory
@1.14.0
+#createInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;)Lorg/apache/flink/api/common/state/State;
+#createInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;)Lorg/apache/flink/api/common/state/State;
@1.16.0
+#createOrUpdateInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;)Lorg/apache/flink/api/common/state/State;
+#createOrUpdateInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;)Lorg/apache/flink/api/common/state/State;
+#createOrUpdateInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;Z)Lorg/apache/flink/api/common/state/State;
-#createInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;)Lorg/apache/flink/api/common/state/State;
-#createInternalState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;)Lorg/apache/flink/api/common/state/State;

+###org/apache/flink/runtime/state/PriorityQueueSetFactory
@1.14.0
+#create(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/runtime/state/KeyGroupedInternalPriorityQueue;
@1.16.0
+#create(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Z)Lorg/apache/flink/runtime/state/KeyGroupedInternalPriorityQueue;

+###org/apache/flink/runtime/state/Snapshotable
@1.14.0
+#snapshot(JJLorg/apache/flink/runtime/state/CheckpointStreamFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/RunnableFuture;

+###org/apache/flink/runtime/state/SnapshotResult
@1.14.0
+#getJobManagerOwnedSnapshot()Lorg/apache/flink/runtime/state/StateObject;
+#getTaskLocalSnapshot()Lorg/apache/flink/runtime/state/StateObject;
+#discardState()V
+#getStateSize()J
+#empty()Lorg/apache/flink/runtime/state/SnapshotResult;
+#of(Lorg/apache/flink/runtime/state/StateObject;)Lorg/apache/flink/runtime/state/SnapshotResult;
+#withLocalState(Lorg/apache/flink/runtime/state/StateObject;Lorg/apache/flink/runtime/state/StateObject;)Lorg/apache/flink/runtime/state/SnapshotResult;

+###org/apache/flink/runtime/state/OperatorStateBackend
@1.14.0
+#dispose()V

+###org/apache/flink/runtime/state/CheckpointStorageAccess
@1.14.0

+###org/apache/flink/runtime/state/CheckpointStorageCoordinatorView
@1.14.0
+#supportsHighlyAvailableStorage()Z
+#hasDefaultSavepointLocation()Z
+#resolveCheckpoint(Ljava/lang/String;)Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;
+#initializeBaseLocations()V
+#initializeLocationForCheckpoint(J)Lorg/apache/flink/runtime/state/CheckpointStorageLocation;
+#initializeLocationForSavepoint(JLjava/lang/String;)Lorg/apache/flink/runtime/state/CheckpointStorageLocation;
@1.15.0
+#initializeBaseLocationsForCheckpoint()V
-#initializeBaseLocations()V

+###org/apache/flink/runtime/state/CheckpointStorageWorkerView
@1.14.0
+#resolveCheckpointStorageLocation(JLorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/state/CheckpointStreamFactory;
+#createTaskOwnedStateStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;
@1.15.0
+#createTaskOwnedStateStream()Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;
+#createTaskOwnedCheckpointStateToolset()Lorg/apache/flink/runtime/state/CheckpointStateToolset;
-#createTaskOwnedStateStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;

+###org/apache/flink/runtime/state/CheckpointStorageLocation
@1.14.0
+#createMetadataOutputStream()Lorg/apache/flink/runtime/state/CheckpointMetadataOutputStream;
+#disposeOnFailure()V
+#getLocationReference()Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;

+###org/apache/flink/runtime/state/CheckpointStreamFactory
@1.14.0
+#createCheckpointStateOutputStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;
@1.15.0
+#createCheckpointStateOutputStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;
+#canFastDuplicate(Lorg/apache/flink/runtime/state/StreamStateHandle;Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Z
+#duplicate(Ljava/util/List;Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Ljava/util/List;
-#createCheckpointStateOutputStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;

+###org/apache/flink/runtime/state/TaskStateManager
@1.14.0
+#reportTaskStateSnapshots(Lorg/apache/flink/runtime/checkpoint/CheckpointMetaData;Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#getInputRescalingDescriptor()Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor;
+#getOutputRescalingDescriptor()Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor;
+#reportIncompleteTaskStateSnapshots(Lorg/apache/flink/runtime/checkpoint/CheckpointMetaData;Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#isFinishedOnRestore()Z
+#getRestoreCheckpointId()Ljava/util/Optional;
+#prioritizedOperatorState(Lorg/apache/flink/runtime/jobgraph/OperatorID;)Lorg/apache/flink/runtime/checkpoint/PrioritizedOperatorSubtaskState;
+#createLocalRecoveryConfig()Lorg/apache/flink/runtime/state/LocalRecoveryConfig;
+#getSequentialChannelStateReader()Lorg/apache/flink/runtime/checkpoint/channel/SequentialChannelStateReader;
+#getStateChangelogStorage()Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
@1.14.3
+#isTaskDeployedAsFinished()Z
-#isFinishedOnRestore()Z
@1.16.0
+#getStateChangelogStorageView(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/state/changelog/ChangelogStateHandle;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorageView;

+###org/apache/flink/runtime/state/SavepointResources
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/FullSnapshotResources;Lorg/apache/flink/runtime/state/SnapshotExecutionType;)V
+#getSnapshotResources()Lorg/apache/flink/runtime/state/FullSnapshotResources;
+#getPreferredSnapshotExecutionType()Lorg/apache/flink/runtime/state/SnapshotExecutionType;

+###org/apache/flink/runtime/state/KeyedStateFunction
@1.14.0
+#process(Ljava/lang/Object;Lorg/apache/flink/api/common/state/State;)V

+###org/apache/flink/runtime/state/PriorityComparable
@1.14.0
+#comparePriorityTo(Ljava/lang/Object;)I

+###org/apache/flink/runtime/state/Keyed
@1.14.0
+#getKey()Ljava/lang/Object;

+###org/apache/flink/runtime/state/KeyGroupedInternalPriorityQueue
@1.14.0
+#getSubsetForKeyGroup(I)Ljava/util/Set;

+###org/apache/flink/runtime/state/InternalPriorityQueue
@1.14.0
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#isEmpty()Z
+#size()I
+#addAll(Ljava/util/Collection;)V
+#iterator()Lorg/apache/flink/util/CloseableIterator;

+###org/apache/flink/runtime/state/CheckpointStateOutputStream
@1.15.0
+#<init>()V
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#close()V

+###org/apache/flink/runtime/state/CheckpointStateToolset
@1.15.0
+#canFastDuplicate(Lorg/apache/flink/runtime/state/StreamStateHandle;)Z
+#duplicate(Ljava/util/List;)Ljava/util/List;

+###org/apache/flink/runtime/state/CheckpointMetadataOutputStream
@1.14.0
+#<init>()V
+#closeAndFinalizeCheckpoint()Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;
+#close()V

+###org/apache/flink/runtime/state/CheckpointedStateScope
@1.14.0
+#values()[Lorg/apache/flink/runtime/state/CheckpointedStateScope;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/state/CheckpointedStateScope;

+###org/apache/flink/runtime/state/LocalRecoveryConfig
@1.14.0
+#<init>(ZLorg/apache/flink/runtime/state/LocalRecoveryDirectoryProvider;)V
+#isLocalRecoveryEnabled()Z
+#getLocalStateDirectoryProvider()Lorg/apache/flink/runtime/state/LocalRecoveryDirectoryProvider;
+#toString()Ljava/lang/String;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/state/LocalRecoveryDirectoryProvider;)V
+#getLocalStateDirectoryProvider()Ljava/util/Optional;
+#localRecoveryNotEnabled()Ljava/util/function/Supplier;
-#<init>(ZLorg/apache/flink/runtime/state/LocalRecoveryDirectoryProvider;)V
-#getLocalStateDirectoryProvider()Lorg/apache/flink/runtime/state/LocalRecoveryDirectoryProvider;

+###org/apache/flink/runtime/state/changelog/StateChangelogStorage
@1.14.0
+#createWriter(Ljava/lang/String;Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/changelog/StateChangelogWriter;
+#createReader()Lorg/apache/flink/runtime/state/changelog/StateChangelogHandleReader;
+#close()V
@1.15.0
+#createWriter(Ljava/lang/String;Lorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/api/common/operators/MailboxExecutor;)Lorg/apache/flink/runtime/state/changelog/StateChangelogWriter;
+#getAvailabilityProvider()Lorg/apache/flink/runtime/io/AvailabilityProvider;
-#createWriter(Ljava/lang/String;Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/changelog/StateChangelogWriter;
@1.16.0
-#createReader()Lorg/apache/flink/runtime/state/changelog/StateChangelogHandleReader;
-#close()V

+###org/apache/flink/runtime/state/changelog/ChangelogStateHandle
@1.14.0
@1.16.0
+#getStorageIdentifier()Ljava/lang/String;

+###org/apache/flink/runtime/state/changelog/StateChangelogWriter
@1.14.0
+#initialSequenceNumber()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
+#lastAppendedSequenceNumber()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
+#append(I[B)V
+#persist(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)Ljava/util/concurrent/CompletableFuture;
+#truncate(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)V
+#confirm(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)V
+#reset(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)V
+#close()V
@1.15.0
+#nextSequenceNumber()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
+#getLowestSequenceNumber()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
-#lastAppendedSequenceNumber()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
@1.16.0
+#confirm(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;J)V
+#subsume(J)V
+#reset(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;J)V
+#truncateAndClose(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)V
-#confirm(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)V
-#reset(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)V
-#getLowestSequenceNumber()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;

+###org/apache/flink/runtime/state/changelog/StateChangelogHandleReader
@1.14.0
+#getChanges(Lorg/apache/flink/runtime/state/changelog/ChangelogStateHandle;)Lorg/apache/flink/util/CloseableIterator;

+###org/apache/flink/runtime/state/changelog/SequenceNumber$GenericSequenceNumber
@1.14.0
+#compareTo(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#next()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/flink/runtime/state/changelog/SequenceNumber
@1.14.0
+#next()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
+#of(J)Lorg/apache/flink/runtime/state/changelog/SequenceNumber;

+###org/apache/flink/runtime/state/changelog/StateChange
@1.14.0
+#<init>(I[B)V
+#toString()Ljava/lang/String;
+#getKeyGroup()I
+#getChange()[B

+###org/apache/flink/runtime/state/changelog/inmemory/InMemoryStateChangelogStorage
@1.14.0
+#<init>()V
+#createWriter(Ljava/lang/String;Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/changelog/inmemory/InMemoryStateChangelogWriter;
+#createReader()Lorg/apache/flink/runtime/state/changelog/StateChangelogHandleReader;
+#createWriter(Ljava/lang/String;Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/changelog/StateChangelogWriter;
@1.15.0
+#createWriter(Ljava/lang/String;Lorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/api/common/operators/MailboxExecutor;)Lorg/apache/flink/runtime/state/changelog/inmemory/InMemoryStateChangelogWriter;
+#createWriter(Ljava/lang/String;Lorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/api/common/operators/MailboxExecutor;)Lorg/apache/flink/runtime/state/changelog/StateChangelogWriter;
-#createWriter(Ljava/lang/String;Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/changelog/inmemory/InMemoryStateChangelogWriter;
-#createWriter(Ljava/lang/String;Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/changelog/StateChangelogWriter;

+###org/apache/flink/runtime/state/changelog/inmemory/InMemoryChangelogStateHandle
@1.14.0
+#<init>(Ljava/util/List;JJLorg/apache/flink/runtime/state/KeyGroupRange;)V
+#<init>(Ljava/util/List;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/KeyGroupRange;)V
+#discardState()V
+#getStateSize()J
+#getChanges()Ljava/util/List;
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyedStateHandle;
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#toString()Ljava/lang/String;
+#getFrom()J
+#getTo()J
@1.15.0
+#restore(Ljava/util/List;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/state/StateHandleID;)Lorg/apache/flink/runtime/state/changelog/inmemory/InMemoryChangelogStateHandle;
+#getCheckpointedSize()J
+#getStateHandleId()Lorg/apache/flink/runtime/state/StateHandleID;
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
-#<init>(Ljava/util/List;JJLorg/apache/flink/runtime/state/KeyGroupRange;)V
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
@1.16.0
+#getStorageIdentifier()Ljava/lang/String;

+###org/apache/flink/runtime/state/changelog/inmemory/InMemoryStateChangelogStorageFactory
@1.14.0
+#<init>()V
+#getIdentifier()Ljava/lang/String;
+#createStorage(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
@1.15.0
+#createStorage(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
-#createStorage(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
@1.16.0
+#createStorage(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;Lorg/apache/flink/runtime/state/LocalRecoveryConfig;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
+#createStorageView(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorageView;
-#createStorage(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;

+###org/apache/flink/runtime/state/changelog/StateChangelogStorageFactory
@1.14.0
+#getIdentifier()Ljava/lang/String;
+#createStorage(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
@1.15.0
+#createStorage(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
-#createStorage(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
@1.16.0
+#createStorage(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;Lorg/apache/flink/runtime/state/LocalRecoveryConfig;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
+#createStorageView(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorageView;
-#createStorage(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;

+###org/apache/flink/runtime/state/changelog/ChangelogStateHandleStreamImpl
@1.14.0
+#<init>(Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;J)V
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyedStateHandle;
+#discardState()V
+#getStateSize()J
+#getHandlesAndOffsets()Ljava/util/List;
@1.15.0
+#<init>(Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJ)V
+#restore(Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJLorg/apache/flink/runtime/state/StateHandleID;)Lorg/apache/flink/runtime/state/changelog/ChangelogStateHandleStreamImpl;
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
+#getStateHandleId()Lorg/apache/flink/runtime/state/StateHandleID;
+#getCheckpointedSize()J
-#<init>(Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;J)V
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
@1.16.0
+#<init>(Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJLjava/lang/String;)V
+#restore(Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJLjava/lang/String;Lorg/apache/flink/runtime/state/StateHandleID;)Lorg/apache/flink/runtime/state/changelog/ChangelogStateHandleStreamImpl;
+#getStorageIdentifier()Ljava/lang/String;
-#<init>(Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJ)V
-#restore(Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJLorg/apache/flink/runtime/state/StateHandleID;)Lorg/apache/flink/runtime/state/changelog/ChangelogStateHandleStreamImpl;

+###org/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle$ChangelogStateBackendHandleImpl
@1.14.0
+#<init>(Ljava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;)V
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#discardState()V
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyedStateHandle;
+#getStateSize()J
+#getMaterializedStateHandles()Ljava/util/List;
+#getNonMaterializedStateHandles()Ljava/util/List;
+#toString()Ljava/lang/String;
@1.15.0
+#<init>(Ljava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJ)V
+#restore(Ljava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJLorg/apache/flink/runtime/state/StateHandleID;)Lorg/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle$ChangelogStateBackendHandleImpl;
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
+#getStateHandleId()Lorg/apache/flink/runtime/state/StateHandleID;
+#getCheckpointedSize()J
+#getMaterializationID()J
-#<init>(Ljava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;)V
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
@1.16.0
+#<init>(Ljava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJJ)V
+#restore(Ljava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJJLorg/apache/flink/runtime/state/StateHandleID;)Lorg/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle$ChangelogStateBackendHandleImpl;
+#getChangelogStateBackendHandle(Lorg/apache/flink/runtime/state/KeyedStateHandle;)Lorg/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle;
+#getCheckpointId()J
+#rebound(J)Lorg/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle$ChangelogStateBackendHandleImpl;
+#rebound(J)Lorg/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle;
+#rebound(J)Lorg/apache/flink/runtime/state/CheckpointBoundKeyedStateHandle;
-#<init>(Ljava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJ)V
-#restore(Ljava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/state/KeyGroupRange;JJLorg/apache/flink/runtime/state/StateHandleID;)Lorg/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle$ChangelogStateBackendHandleImpl;

+###org/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle
@1.14.0
+#getMaterializedStateHandles()Ljava/util/List;
+#getNonMaterializedStateHandles()Ljava/util/List;
@1.15.0
+#getMaterializationID()J
@1.16.0
+#rebound(J)Lorg/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle;
+#rebound(J)Lorg/apache/flink/runtime/state/CheckpointBoundKeyedStateHandle;

+###org/apache/flink/runtime/state/changelog/StateChangelogHandleStreamHandleReader$StateChangeIterator
@1.14.0
+#read(Lorg/apache/flink/runtime/state/StreamStateHandle;J)Lorg/apache/flink/util/CloseableIterator;

+###org/apache/flink/runtime/state/changelog/StateChangelogHandleStreamHandleReader
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/changelog/StateChangelogHandleStreamHandleReader$StateChangeIterator;)V
+#getChanges(Lorg/apache/flink/runtime/state/changelog/ChangelogStateHandleStreamImpl;)Lorg/apache/flink/util/CloseableIterator;
+#getChanges(Lorg/apache/flink/runtime/state/changelog/ChangelogStateHandle;)Lorg/apache/flink/util/CloseableIterator;

+###org/apache/flink/runtime/state/changelog/SequenceNumberRange$GenericSequenceNumberRange
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/changelog/SequenceNumber$GenericSequenceNumber;Lorg/apache/flink/runtime/state/changelog/SequenceNumber$GenericSequenceNumber;)V
+#from()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
+#to()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
+#size()J
+#contains(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)Z
+#isEmpty()Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/changelog/SequenceNumberRange
@1.14.0
+#from()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
+#to()Lorg/apache/flink/runtime/state/changelog/SequenceNumber;
+#size()J
+#contains(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)Z
+#isEmpty()Z
+#generic(Lorg/apache/flink/runtime/state/changelog/SequenceNumber;Lorg/apache/flink/runtime/state/changelog/SequenceNumber;)Lorg/apache/flink/runtime/state/changelog/SequenceNumberRange;

+###org/apache/flink/runtime/state/changelog/StateChangelogStorageLoader
@1.14.0
+#<init>()V
+#initialize(Lorg/apache/flink/core/plugin/PluginManager;)V
+#load(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
@1.15.0
+#load(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
-#load(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
@1.16.0
+#load(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;Lorg/apache/flink/runtime/state/LocalRecoveryConfig;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
+#loadFromStateHandle(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/state/changelog/ChangelogStateHandle;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorageView;
-#load(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;

+###org/apache/flink/runtime/state/FullSnapshotResources
@1.14.0
+#getMetaInfoSnapshots()Ljava/util/List;
+#createKVStateIterator()Lorg/apache/flink/runtime/state/KeyValueStateIterator;
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#getKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getStreamCompressionDecorator()Lorg/apache/flink/runtime/state/StreamCompressionDecorator;

+###org/apache/flink/runtime/state/SnapshotResources
@1.14.0
+#release()V

+###org/apache/flink/runtime/state/SnapshotExecutionType
@1.14.0
+#values()[Lorg/apache/flink/runtime/state/SnapshotExecutionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/state/SnapshotExecutionType;

+###org/apache/flink/runtime/state/LocalRecoveryDirectoryProvider
@1.14.0
+#allocationBaseDirectory(J)Ljava/io/File;
+#subtaskBaseDirectory(J)Ljava/io/File;
+#subtaskSpecificCheckpointDirectory(J)Ljava/io/File;
+#selectAllocationBaseDirectory(I)Ljava/io/File;
+#selectSubtaskBaseDirectory(I)Ljava/io/File;
+#allocationBaseDirsCount()I

+###org/apache/flink/runtime/state/StateEntry$SimpleStateEntry
@1.14.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getKey()Ljava/lang/Object;
+#getNamespace()Ljava/lang/Object;
+#getState()Ljava/lang/Object;

+###org/apache/flink/runtime/state/StateEntry
@1.14.0
+#getKey()Ljava/lang/Object;
+#getNamespace()Ljava/lang/Object;
+#getState()Ljava/lang/Object;
+#filterOrTransform(Lorg/apache/flink/runtime/state/StateSnapshotTransformer;)Lorg/apache/flink/runtime/state/StateEntry;

+###org/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$BackendStateType
@1.14.0
+#values()[Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$BackendStateType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$BackendStateType;
+#getCode()B
+#byCode(I)Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$BackendStateType;

+###org/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$CommonOptionsKeys
@1.14.0
+#values()[Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$CommonOptionsKeys;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$CommonOptionsKeys;

+###org/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$CommonSerializerKeys
@1.14.0
+#values()[Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$CommonSerializerKeys;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$CommonSerializerKeys;

+###org/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$BackendStateType;Ljava/util/Map;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$BackendStateType;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
+#getBackendStateType()Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$BackendStateType;
+#getTypeSerializerSnapshot(Ljava/lang/String;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#getTypeSerializerSnapshot(Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$CommonSerializerKeys;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#getOption(Ljava/lang/String;)Ljava/lang/String;
+#getOption(Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot$CommonOptionsKeys;)Ljava/lang/String;
+#getOptionsImmutable()Ljava/util/Map;
+#getName()Ljava/lang/String;
+#getSerializerSnapshotsImmutable()Ljava/util/Map;
+#getTypeSerializer(Ljava/lang/String;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;

+###org/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshotReadersWriters$StateTypeHint
@1.14.0
+#values()[Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshotReadersWriters$StateTypeHint;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshotReadersWriters$StateTypeHint;

+###org/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshotReadersWriters
@1.14.0
+#getWriter()Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoWriter;
+#getReader(ILorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshotReadersWriters$StateTypeHint;)Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoReader;

+###org/apache/flink/runtime/state/metainfo/StateMetaInfoWriter
@1.14.0
+#writeStateMetaInfoSnapshot(Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;Lorg/apache/flink/core/memory/DataOutputView;)V

+###org/apache/flink/runtime/state/metainfo/StateMetaInfoReader
@1.14.0
+#readStateMetaInfoSnapshot(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;

+###org/apache/flink/runtime/state/metainfo/LegacyStateMetaInfoReaders$OperatorBackendStateMetaInfoReaderV1
@1.14.0
+#<init>()V
+#readStateMetaInfoSnapshot(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;

+###org/apache/flink/runtime/state/metainfo/LegacyStateMetaInfoReaders
@1.14.0

+###org/apache/flink/runtime/state/KeyValueStateIterator
@1.14.0
+#next()V
+#keyGroup()I
+#key()[B
+#value()[B
+#kvStateId()I
+#isNewKeyValueState()Z
+#isNewKeyGroup()Z
+#isValid()Z
+#close()V

+###org/apache/flink/runtime/state/StreamCompressionDecorator
@1.14.0
+#<init>()V
+#decorateWithCompression(Ljava/io/OutputStream;)Ljava/io/OutputStream;
+#decorateWithCompression(Ljava/io/InputStream;)Ljava/io/InputStream;

+###org/apache/flink/runtime/state/KeyExtractorFunction
@1.14.0
+#extractKeyFromElement(Ljava/lang/Object;)Ljava/lang/Object;
+#forKeyedObjects()Lorg/apache/flink/runtime/state/KeyExtractorFunction;

+###org/apache/flink/runtime/state/PriorityComparator
@1.14.0
+#comparePriority(Ljava/lang/Object;Ljava/lang/Object;)I
+#forPriorityComparableObjects()Lorg/apache/flink/runtime/state/PriorityComparator;

+###org/apache/flink/runtime/state/RetrievableStateHandle
@1.14.0
+#retrieveState()Ljava/io/Serializable;

+###org/apache/flink/runtime/state/StateTransformationFunction
@1.14.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/runtime/state/RegisteredBroadcastStateBackendMetaInfo
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/state/OperatorStateHandle$Mode;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#<init>(Lorg/apache/flink/runtime/state/RegisteredBroadcastStateBackendMetaInfo;)V
+#<init>(Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;)V
+#deepCopy()Lorg/apache/flink/runtime/state/RegisteredBroadcastStateBackendMetaInfo;
+#snapshot()Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;
+#getKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#updateKeySerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#getPreviousKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getValueSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#updateValueSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#getPreviousValueSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getAssignmentMode()Lorg/apache/flink/runtime/state/OperatorStateHandle$Mode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.16.0
+#withSerializerUpgradesAllowed()Lorg/apache/flink/runtime/state/RegisteredBroadcastStateBackendMetaInfo;
+#withSerializerUpgradesAllowed()Lorg/apache/flink/runtime/state/RegisteredStateMetaInfoBase;

+###org/apache/flink/runtime/state/RegisteredStateMetaInfoBase
@1.14.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#snapshot()Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;
+#fromMetaInfoSnapshot(Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;)Lorg/apache/flink/runtime/state/RegisteredStateMetaInfoBase;
@1.16.0
+#withSerializerUpgradesAllowed()Lorg/apache/flink/runtime/state/RegisteredStateMetaInfoBase;

+###org/apache/flink/runtime/state/StateSerializerProvider
@1.14.0
+#fromPreviousSerializerSnapshot(Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;)Lorg/apache/flink/runtime/state/StateSerializerProvider;
+#fromNewRegisteredSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/runtime/state/StateSerializerProvider;
+#currentSchemaSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#previousSchemaSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getPreviousSerializerSnapshot()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#registerNewSerializerForRestoredState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#setPreviousSerializerSnapshotForRestoredState(Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/runtime/state/OwnedTaskLocalStateStore
@1.14.0
+#dispose()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/state/TaskLocalStateStore
@1.14.0
+#storeLocalState(JLorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#retrieveLocalState(J)Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;
+#getLocalRecoveryConfig()Lorg/apache/flink/runtime/state/LocalRecoveryConfig;
+#confirmCheckpoint(J)V
+#abortCheckpoint(J)V
+#pruneMatchingCheckpoints(Ljava/util/function/LongPredicate;)V

+###org/apache/flink/runtime/state/SerializedCompositeKeyBuilder
@1.14.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;II)V
+#setKeyAndKeyGroup(Ljava/lang/Object;I)V
+#setNamespace(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#buildCompositeKeyNamespace(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)[B
+#buildCompositeKeyNamesSpaceUserKey(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)[B
+#buildCompositeKeyUserKey(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)[B
+#build()[B

+###org/apache/flink/runtime/state/TaskExecutorStateChangelogStoragesManager
@1.14.0
+#<init>()V
+#stateChangelogStorageForJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
+#releaseStateChangelogStorageForJob(Lorg/apache/flink/api/common/JobID;)V
+#shutdown()V
@1.15.0
+#stateChangelogStorageForJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
+#getChangelogStoragesByJobId(Lorg/apache/flink/api/common/JobID;)Ljava/util/Optional;
-#stateChangelogStorageForJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
@1.16.0
+#stateChangelogStorageForJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;Lorg/apache/flink/runtime/state/LocalRecoveryConfig;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
+#releaseResourcesForJob(Lorg/apache/flink/api/common/JobID;)V
-#stateChangelogStorageForJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
-#releaseStateChangelogStorageForJob(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/state/BackendBuildingException
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/runtime/state/StateBackendFactory
@0.10.0
+#createFromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/StateBackend;
@1.14.0
+#createFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/StateBackend;
-#createFromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/StateBackend;

+###org/apache/flink/runtime/state/ArrayListSerializer
@1.14.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getElementSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createInstance()Ljava/util/ArrayList;
+#copy(Ljava/util/ArrayList;)Ljava/util/ArrayList;
+#copy(Ljava/util/ArrayList;Ljava/util/ArrayList;)Ljava/util/ArrayList;
+#getLength()I
+#serialize(Ljava/util/ArrayList;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/util/ArrayList;
+#deserialize(Ljava/util/ArrayList;Lorg/apache/flink/core/memory/DataInputView;)Ljava/util/ArrayList;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#resolveSchemaCompatibilityViaRedirectingToNewSnapshotClass(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;

+###org/apache/flink/runtime/state/filesystem/FileBasedStateOutputStream
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;)V
+#write(I)V
+#write([BII)V
+#getPos()J
+#flush()V
+#sync()V
+#isClosed()Z
+#close()V
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/filesystem/FileStateHandle;
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;

+###org/apache/flink/runtime/state/filesystem/FileStateHandle
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/Path;J)V
+#getFilePath()Lorg/apache/flink/core/fs/Path;
+#openInputStream()Lorg/apache/flink/core/fs/FSDataInputStream;
+#asBytesIfInMemory()Ljava/util/Optional;
+#discardState()V
+#getStateSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.16.0
+#getStreamStateHandleID()Lorg/apache/flink/runtime/state/PhysicalStateHandleID;

+###org/apache/flink/runtime/state/filesystem/FsStateBackend
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/core/fs/Path;)V
+#<init>(Ljava/net/URI;)V
+#getBasePath()Lorg/apache/flink/core/fs/Path;
+#getCheckpointDirectory()Lorg/apache/flink/core/fs/Path;
+#isInitialized()Z
+#getFileSystem()Lorg/apache/flink/core/fs/FileSystem;
+#initializeForJob(Lorg/apache/flink/api/common/JobID;)V
+#disposeAllStateForCurrentJob()V
+#close()V
+#createKvState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)Lorg/apache/flink/runtime/state/filesystem/FsHeapKvState;
+#checkpointStateSerializable(Ljava/io/Serializable;JJ)Lorg/apache/flink/runtime/state/StateHandle;
+#createCheckpointStateOutputStream(JJ)Lorg/apache/flink/runtime/state/filesystem/FsStateBackend$FsCheckpointStateOutputStream;
+#toString()Ljava/lang/String;
+#createCheckpointStateOutputStream(JJ)Lorg/apache/flink/runtime/state/StateBackend$CheckpointStateOutputStream;
+#createKvState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)Lorg/apache/flink/runtime/state/KvState;
@1.14.0
+#<init>(Ljava/lang/String;Z)V
+#<init>(Lorg/apache/flink/core/fs/Path;Z)V
+#<init>(Ljava/net/URI;Ljava/net/URI;)V
+#<init>(Ljava/net/URI;Z)V
+#<init>(Ljava/net/URI;I)V
+#<init>(Ljava/net/URI;IZ)V
+#<init>(Ljava/net/URI;Ljava/net/URI;IILorg/apache/flink/util/TernaryBoolean;)V
*#getBasePath()Lorg/apache/flink/core/fs/Path;[deprecated]
+#getCheckpointPath()Lorg/apache/flink/core/fs/Path;
+#getMinFileSizeThreshold()I
+#getWriteBufferSize()I
+#isUsingAsynchronousSnapshots()Z
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/filesystem/FsStateBackend;
+#createCheckpointStorage(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/state/CheckpointStorageAccess;
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/AbstractKeyedStateBackend;
+#createOperatorStateBackend(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/OperatorStateBackend;
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/CheckpointableKeyedStateBackend;
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/StateBackend;
-#getCheckpointDirectory()Lorg/apache/flink/core/fs/Path;
-#isInitialized()Z
-#getFileSystem()Lorg/apache/flink/core/fs/FileSystem;
-#initializeForJob(Lorg/apache/flink/api/common/JobID;)V
-#disposeAllStateForCurrentJob()V
-#close()V
-#createKvState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)Lorg/apache/flink/runtime/state/filesystem/FsHeapKvState;
-#checkpointStateSerializable(Ljava/io/Serializable;JJ)Lorg/apache/flink/runtime/state/StateHandle;
-#createCheckpointStateOutputStream(JJ)Lorg/apache/flink/runtime/state/filesystem/FsStateBackend$FsCheckpointStateOutputStream;
-#createCheckpointStateOutputStream(JJ)Lorg/apache/flink/runtime/state/StateBackend$CheckpointStateOutputStream;
-#createKvState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)Lorg/apache/flink/runtime/state/KvState;
@1.15.0
+#supportsNoClaimRestoreMode()Z
+#supportsSavepointFormat(Lorg/apache/flink/core/execution/SavepointFormatType;)Z

+###org/apache/flink/runtime/state/filesystem/AbstractFileStateBackend
@1.14.0
+#getCheckpointPath()Lorg/apache/flink/core/fs/Path;
+#getSavepointPath()Lorg/apache/flink/core/fs/Path;
+#resolveCheckpoint(Ljava/lang/String;)Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;

+###org/apache/flink/runtime/state/filesystem/FSDataOutputStreamWrapper
@1.15.0
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;)V
+#getOutput()Lorg/apache/flink/core/fs/FSDataOutputStream;
+#closeForCommitAction()V
+#closeAction()V
+#cleanup()V

+###org/apache/flink/runtime/state/filesystem/MetadataOutputStreamWrapper
@1.15.0
+#<init>()V

+###org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory$FsCheckpointStateOutputStream
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem;II)V
+#<init>(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem;IIZ)V
+#write(I)V
+#write([BII)V
+#getPos()J
+#flushToFile()V
+#flush()V
+#sync()V
+#isClosed()Z
+#close()V
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;

+###org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;II)V
+#createCheckpointStateOutputStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Lorg/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory$FsCheckpointStateOutputStream;
+#toString()Ljava/lang/String;
+#createCheckpointStateOutputStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;
@1.15.0
+#canFastDuplicate(Lorg/apache/flink/runtime/state/StreamStateHandle;Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Z
+#duplicate(Ljava/util/List;Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Ljava/util/List;
+#createCheckpointStateOutputStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;
-#createCheckpointStateOutputStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;)Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;

+###org/apache/flink/runtime/state/filesystem/FsCheckpointStateToolset
@1.15.0
+#<init>(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/DuplicatingFileSystem;)V
+#canFastDuplicate(Lorg/apache/flink/runtime/state/StreamStateHandle;)Z
+#duplicate(Ljava/util/List;)Ljava/util/List;

+###org/apache/flink/runtime/state/filesystem/FsCheckpointMetadataOutputStream
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)V
+#write(I)V
+#write([BII)V
+#getPos()J
+#flush()V
+#sync()V
+#isClosed()Z
+#close()V
+#closeAndFinalizeCheckpoint()Lorg/apache/flink/runtime/state/filesystem/FsCompletedCheckpointStorageLocation;
+#closeAndFinalizeCheckpoint()Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;

+###org/apache/flink/runtime/state/filesystem/FsCompletedCheckpointStorageLocation
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/runtime/state/filesystem/FileStateHandle;Ljava/lang/String;)V
+#getExternalPointer()Ljava/lang/String;
+#getExclusiveCheckpointDir()Lorg/apache/flink/core/fs/Path;
+#getMetadataHandle()Lorg/apache/flink/runtime/state/filesystem/FileStateHandle;
+#disposeStorageLocation()V
+#getMetadataHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;

+###org/apache/flink/runtime/state/filesystem/RecoverableStreamWrapper
@1.15.0
+#<init>(Lorg/apache/flink/core/fs/RecoverableFsDataOutputStream;)V
+#getOutput()Lorg/apache/flink/core/fs/FSDataOutputStream;
+#closeForCommitAction()V
+#closeAction()V
+#cleanup()V

+###org/apache/flink/runtime/state/filesystem/FsStateBackendFactory
@0.10.0
+#<init>()V
+#createFromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/filesystem/FsStateBackend;
+#createFromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/StateBackend;
@1.14.0
+#createFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/filesystem/FsStateBackend;
+#createFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/StateBackend;
-#createFromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/filesystem/FsStateBackend;
-#createFromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/StateBackend;

+###org/apache/flink/runtime/state/filesystem/FsCheckpointStorageAccess
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/api/common/JobID;II)V
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/api/common/JobID;II)V
+#supportsHighlyAvailableStorage()Z
+#initializeBaseLocations()V
+#initializeLocationForCheckpoint(J)Lorg/apache/flink/runtime/state/CheckpointStorageLocation;
+#resolveCheckpointStorageLocation(JLorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/state/CheckpointStreamFactory;
+#createTaskOwnedStateStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;
@1.15.0
+#initializeBaseLocationsForCheckpoint()V
+#createTaskOwnedStateStream()Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;
+#createTaskOwnedCheckpointStateToolset()Lorg/apache/flink/runtime/state/CheckpointStateToolset;
-#initializeBaseLocations()V
-#createTaskOwnedStateStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;

+###org/apache/flink/runtime/state/filesystem/AbstractFsCheckpointStorageAccess
@1.14.0
+#getDefaultSavepointDirectory()Lorg/apache/flink/core/fs/Path;
+#hasDefaultSavepointLocation()Z
+#resolveCheckpoint(Ljava/lang/String;)Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;
+#initializeLocationForSavepoint(JLjava/lang/String;)Lorg/apache/flink/runtime/state/CheckpointStorageLocation;
+#resolveCheckpointPointer(Ljava/lang/String;)Lorg/apache/flink/runtime/state/filesystem/FsCompletedCheckpointStorageLocation;
+#encodePathAsReference(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;
+#decodePathFromReference(Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/core/fs/Path;

+###org/apache/flink/runtime/state/filesystem/RelativeFileStateHandle
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/Path;Ljava/lang/String;J)V
+#getRelativePath()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/filesystem/FsCheckpointStorageLocation
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;II)V
+#getCheckpointDirectory()Lorg/apache/flink/core/fs/Path;
+#getSharedStateDirectory()Lorg/apache/flink/core/fs/Path;
+#getTaskOwnedStateDirectory()Lorg/apache/flink/core/fs/Path;
+#getMetadataFilePath()Lorg/apache/flink/core/fs/Path;
+#createMetadataOutputStream()Lorg/apache/flink/runtime/state/CheckpointMetadataOutputStream;
+#disposeOnFailure()V
+#getLocationReference()Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/ChainedStateHandle
@1.14.0
+#<init>(Ljava/util/List;)V
+#isEmpty()Z
+#getLength()I
+#get(I)Lorg/apache/flink/runtime/state/StateObject;
+#discardState()V
+#getStateSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#wrapSingleHandle(Lorg/apache/flink/runtime/state/StateObject;)Lorg/apache/flink/runtime/state/ChainedStateHandle;
+#isNullOrEmpty(Lorg/apache/flink/runtime/state/ChainedStateHandle;)Z

+###org/apache/flink/runtime/state/StateSnapshotRestore
@1.14.0
+#stateSnapshot()Lorg/apache/flink/runtime/state/StateSnapshot;
+#keyGroupReader(I)Lorg/apache/flink/runtime/state/StateSnapshotKeyGroupReader;

+###org/apache/flink/runtime/state/RegisteredKeyValueStateBackendMetaInfo
@1.14.0
+#<init>(Lorg/apache/flink/api/common/state/StateDescriptor$Type;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#<init>(Lorg/apache/flink/api/common/state/StateDescriptor$Type;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;)V
+#<init>(Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;)V
+#getStateType()Lorg/apache/flink/api/common/state/StateDescriptor$Type;
+#getNamespaceSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#updateNamespaceSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#getPreviousNamespaceSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getStateSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#updateStateSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#getPreviousStateSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getPreviousStateSerializerSnapshot()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#getStateSnapshotTransformFactory()Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;
+#updateSnapshotTransformFactory(Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;)V
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#snapshot()Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;
+#checkStateMetaInfo(Lorg/apache/flink/api/common/state/StateDescriptor;)V
@1.16.0
+#withSerializerUpgradesAllowed()Lorg/apache/flink/runtime/state/RegisteredKeyValueStateBackendMetaInfo;
+#withSerializerUpgradesAllowed()Lorg/apache/flink/runtime/state/RegisteredStateMetaInfoBase;

+###org/apache/flink/runtime/state/IterableStateSnapshot
@1.14.0
+#getIterator(I)Ljava/util/Iterator;

+###org/apache/flink/runtime/state/StateSnapshot$StateKeyGroupWriter
@1.14.0
+#writeStateInKeyGroup(Lorg/apache/flink/core/memory/DataOutputView;I)V

+###org/apache/flink/runtime/state/StateSnapshot
@1.14.0
+#getKeyGroupWriter()Lorg/apache/flink/runtime/state/StateSnapshot$StateKeyGroupWriter;
+#getMetaInfoSnapshot()Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;
+#release()V

+###org/apache/flink/runtime/state/StateSnapshotKeyGroupReader
@1.14.0
+#readMappingsInKeyGroup(Lorg/apache/flink/core/memory/DataInputView;I)V

+###org/apache/flink/runtime/state/AsyncSnapshotCallable$AsyncSnapshotTask
@1.14.0
+#cancel(Z)Z

+###org/apache/flink/runtime/state/AsyncSnapshotCallable
@1.14.0
+#call()Ljava/lang/Object;
+#toAsyncSnapshotFutureTask(Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/AsyncSnapshotCallable$AsyncSnapshotTask;

+###org/apache/flink/runtime/state/StateSnapshotContextSynchronousImpl
@1.14.0
+#<init>(JJ)V
+#<init>(JJLorg/apache/flink/runtime/state/CheckpointStreamFactory;Lorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/core/fs/CloseableRegistry;)V
+#getCheckpointId()J
+#getCheckpointTimestamp()J
+#getRawKeyedOperatorStateOutput()Lorg/apache/flink/runtime/state/KeyedStateCheckpointOutputStream;
+#getRawOperatorStateOutput()Lorg/apache/flink/runtime/state/OperatorStateCheckpointOutputStream;
+#getKeyedStateStreamFuture()Ljava/util/concurrent/RunnableFuture;
+#getOperatorStateStreamFuture()Ljava/util/concurrent/RunnableFuture;
+#closeExceptionally()V

+###org/apache/flink/runtime/state/StateSnapshotContext
@1.14.0
+#getRawKeyedOperatorStateOutput()Lorg/apache/flink/runtime/state/KeyedStateCheckpointOutputStream;
+#getRawOperatorStateOutput()Lorg/apache/flink/runtime/state/OperatorStateCheckpointOutputStream;

+###org/apache/flink/runtime/state/FunctionSnapshotContext
@1.14.0

+###org/apache/flink/runtime/state/ManagedSnapshotContext
@1.14.0
+#getCheckpointId()J
+#getCheckpointTimestamp()J

+###org/apache/flink/runtime/state/KeyedStateCheckpointOutputStream
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/KeyGroupRange;)V
+#close()V
+#getKeyGroupList()Lorg/apache/flink/runtime/state/KeyGroupsList;
+#startNewKeyGroup(I)V
+#isKeyGroupAlreadyStarted(I)Z
+#isKeyGroupAlreadyFinished(I)Z
+#getCurrentKeyGroup()I
@1.15.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/KeyGroupRange;)V
-#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/KeyGroupRange;)V

+###org/apache/flink/runtime/state/NonClosingCheckpointOutputStream
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;)V
+#flush()V
+#write(I)V
+#write([B)V
+#write([BII)V
+#close()V
+#acquireLease()Lorg/apache/flink/util/ResourceGuard$Lease;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;)V
-#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;)V

+###org/apache/flink/runtime/state/KeyGroupsStateHandle
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/KeyGroupRangeOffsets;Lorg/apache/flink/runtime/state/StreamStateHandle;)V
+#getGroupRangeOffsets()Lorg/apache/flink/runtime/state/KeyGroupRangeOffsets;
+#getDelegateStateHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#getOffsetForKeyGroup(I)J
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyGroupsStateHandle;
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#discardState()V
+#getStateSize()J
+#openInputStream()Lorg/apache/flink/core/fs/FSDataInputStream;
+#asBytesIfInMemory()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyedStateHandle;
@1.15.0
+#restore(Lorg/apache/flink/runtime/state/KeyGroupRangeOffsets;Lorg/apache/flink/runtime/state/StreamStateHandle;Lorg/apache/flink/runtime/state/StateHandleID;)Lorg/apache/flink/runtime/state/KeyGroupsStateHandle;
+#getStateHandleId()Lorg/apache/flink/runtime/state/StateHandleID;
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
+#getCheckpointedSize()J
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
@1.16.0
+#getStreamStateHandleID()Lorg/apache/flink/runtime/state/PhysicalStateHandleID;

+###org/apache/flink/runtime/state/OperatorStateCheckpointOutputStream
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;)V
+#startNewPartition()V
+#getNumberOfPartitions()I
@1.15.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;)V
-#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;)V

+###org/apache/flink/runtime/state/KeyGroupRangeOffsets
@1.14.0
+#newIllegalKeyGroupException(ILorg/apache/flink/runtime/state/KeyGroupRange;)Ljava/lang/IllegalArgumentException;
+#<init>(Lorg/apache/flink/runtime/state/KeyGroupRange;[J)V
+#<init>(II[J)V
+#<init>(II)V
+#<init>(Lorg/apache/flink/runtime/state/KeyGroupRange;)V
+#getKeyGroupOffset(I)J
+#setKeyGroupOffset(IJ)V
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyGroupRangeOffsets;
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/RegisteredPriorityQueueStateBackendMetaInfo
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#<init>(Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;)V
+#snapshot()Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;
+#getElementSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#updateElementSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#getPreviousElementSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#deepCopy()Lorg/apache/flink/runtime/state/RegisteredPriorityQueueStateBackendMetaInfo;
@1.16.0
+#withSerializerUpgradesAllowed()Lorg/apache/flink/runtime/state/RegisteredPriorityQueueStateBackendMetaInfo;
+#withSerializerUpgradesAllowed()Lorg/apache/flink/runtime/state/RegisteredStateMetaInfoBase;

+###org/apache/flink/runtime/state/NoOpTaskLocalStateStoreImpl
@1.14.0
+#getLocalRecoveryConfig()Lorg/apache/flink/runtime/state/LocalRecoveryConfig;
+#dispose()Ljava/util/concurrent/CompletableFuture;
+#storeLocalState(JLorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#retrieveLocalState(J)Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;
+#confirmCheckpoint(J)V
+#abortCheckpoint(J)V
+#pruneMatchingCheckpoints(Ljava/util/function/LongPredicate;)V

+###org/apache/flink/runtime/state/KeyGroupPartitioner$PartitioningResult
@1.14.0
+#iterator(I)Ljava/util/Iterator;

+###org/apache/flink/runtime/state/KeyGroupPartitioner$ElementWriterFunction
@1.14.0
+#writeElement(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V

+###org/apache/flink/runtime/state/KeyGroupPartitioner$ElementReaderFunction
@1.14.0
+#readElement(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;

+###org/apache/flink/runtime/state/KeyGroupPartitioner$KeyGroupElementsConsumer
@1.14.0
+#consume(Ljava/lang/Object;I)V

+###org/apache/flink/runtime/state/KeyGroupPartitioner
@1.14.0
+#<init>([Ljava/lang/Object;I[Ljava/lang/Object;Lorg/apache/flink/runtime/state/KeyGroupRange;ILorg/apache/flink/runtime/state/KeyExtractorFunction;Lorg/apache/flink/runtime/state/KeyGroupPartitioner$ElementWriterFunction;)V
+#partitionByKeyGroup()Lorg/apache/flink/runtime/state/KeyGroupPartitioner$PartitioningResult;
+#createKeyGroupPartitionReader(Lorg/apache/flink/runtime/state/KeyGroupPartitioner$ElementReaderFunction;Lorg/apache/flink/runtime/state/KeyGroupPartitioner$KeyGroupElementsConsumer;)Lorg/apache/flink/runtime/state/StateSnapshotKeyGroupReader;

+###org/apache/flink/runtime/state/restore/ThrowingIterator
@1.14.0
+#hasNext()Z
+#next()Ljava/lang/Object;

+###org/apache/flink/runtime/state/restore/KeyGroupEntry
@1.14.0
+#getKvStateId()I
+#getKey()[B
+#getValue()[B

+###org/apache/flink/runtime/state/restore/FullSnapshotRestoreOperation
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/ClassLoader;Ljava/util/Collection;Lorg/apache/flink/runtime/state/StateSerializerProvider;)V
+#restore()Lorg/apache/flink/runtime/state/restore/ThrowingIterator;
+#restore()Ljava/lang/Object;

+###org/apache/flink/runtime/state/restore/SavepointRestoreResult
@1.14.0
+#<init>(Ljava/util/List;Lorg/apache/flink/runtime/state/restore/ThrowingIterator;)V
+#getStateMetaInfoSnapshots()Ljava/util/List;
+#getRestoredKeyGroups()Lorg/apache/flink/runtime/state/restore/ThrowingIterator;

+###org/apache/flink/runtime/state/restore/KeyGroup
@1.14.0
+#getKeyGroupId()I
+#getKeyGroupEntries()Lorg/apache/flink/runtime/state/restore/ThrowingIterator;

+###org/apache/flink/runtime/state/RegisteredOperatorStateBackendMetaInfo
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/state/OperatorStateHandle$Mode;)V
+#<init>(Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;)V
+#deepCopy()Lorg/apache/flink/runtime/state/RegisteredOperatorStateBackendMetaInfo;
+#snapshot()Lorg/apache/flink/runtime/state/metainfo/StateMetaInfoSnapshot;
+#getAssignmentMode()Lorg/apache/flink/runtime/state/OperatorStateHandle$Mode;
+#getPartitionStateSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#updatePartitionStateSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#getPreviousPartitionStateSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.16.0
+#withSerializerUpgradesAllowed()Lorg/apache/flink/runtime/state/RegisteredOperatorStateBackendMetaInfo;
+#withSerializerUpgradesAllowed()Lorg/apache/flink/runtime/state/RegisteredStateMetaInfoBase;

+###org/apache/flink/runtime/state/hashmap/HashMapStateBackendFactory
@1.14.0
+#<init>()V
+#createFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/hashmap/HashMapStateBackend;
+#createFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/StateBackend;

+###org/apache/flink/runtime/state/hashmap/HashMapStateBackend
@1.14.0
+#<init>()V
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/hashmap/HashMapStateBackend;
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/AbstractKeyedStateBackend;
+#createOperatorStateBackend(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/OperatorStateBackend;
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/CheckpointableKeyedStateBackend;
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/StateBackend;
@1.15.0
+#supportsNoClaimRestoreMode()Z
+#supportsSavepointFormat(Lorg/apache/flink/core/execution/SavepointFormatType;)Z

+###org/apache/flink/runtime/state/AbstractStateBackend
@1.14.0
+#<init>()V
+#getCompressionDecorator(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/runtime/state/StreamCompressionDecorator;
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/AbstractKeyedStateBackend;
+#createOperatorStateBackend(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/OperatorStateBackend;
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/CheckpointableKeyedStateBackend;

+###org/apache/flink/runtime/state/ConfigurableStateBackend
@1.14.0
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/StateBackend;

+###org/apache/flink/runtime/state/AbstractKeyedStateBackend$PartitionStateFactory
@1.14.0
+#get(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;)Lorg/apache/flink/api/common/state/State;

+###org/apache/flink/runtime/state/AbstractKeyedStateBackend
@1.14.0
+#<init>(Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig;Lorg/apache/flink/core/fs/CloseableRegistry;Lorg/apache/flink/runtime/state/heap/InternalKeyContext;)V
+#<init>(Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig;Lorg/apache/flink/core/fs/CloseableRegistry;Lorg/apache/flink/runtime/state/StreamCompressionDecorator;Lorg/apache/flink/runtime/state/heap/InternalKeyContext;)V
+#dispose()V
+#setCurrentKey(Ljava/lang/Object;)V
+#registerKeySelectionListener(Lorg/apache/flink/runtime/state/KeyedStateBackend$KeySelectionListener;)V
+#deregisterKeySelectionListener(Lorg/apache/flink/runtime/state/KeyedStateBackend$KeySelectionListener;)Z
+#getKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getCurrentKey()Ljava/lang/Object;
+#getCurrentKeyGroupIndex()I
+#getNumberOfKeyGroups()I
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#applyToAllKeys(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/KeyedStateFunction;)V
+#applyToAllKeys(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/KeyedStateFunction;Lorg/apache/flink/runtime/state/AbstractKeyedStateBackend$PartitionStateFactory;)V
+#getOrCreateKeyedState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;)Lorg/apache/flink/api/common/state/State;
+#publishQueryableStateIfEnabled(Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/internal/InternalKvState;)V
+#getPartitionedState(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/state/StateDescriptor;)Lorg/apache/flink/api/common/state/State;
+#close()V
+#getLatencyTrackingStateConfig()Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig;
+#getKeyGroupCompressionDecorator()Lorg/apache/flink/runtime/state/StreamCompressionDecorator;
+#numKeyValueStatesByName()I
+#requiresLegacySynchronousTimerSnapshots(Lorg/apache/flink/runtime/checkpoint/CheckpointType;)Z
+#getKeyContext()Lorg/apache/flink/runtime/state/heap/InternalKeyContext;
+#setCurrentKeyGroupIndex(I)V
@1.15.0
+#notifyCheckpointSubsumed(J)V
+#requiresLegacySynchronousTimerSnapshots(Lorg/apache/flink/runtime/checkpoint/SnapshotType;)Z
-#requiresLegacySynchronousTimerSnapshots(Lorg/apache/flink/runtime/checkpoint/CheckpointType;)Z

+###org/apache/flink/runtime/state/TestableKeyedStateBackend
@1.14.0
+#numKeyValueStateEntries()I
+#getDelegatedKeyedStateBackend(Z)Lorg/apache/flink/runtime/state/KeyedStateBackend;

+###org/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig$Builder
@1.14.0
+#<init>()V
+#setEnabled(Z)Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig$Builder;
+#setSampleInterval(I)Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig$Builder;
+#setHistorySize(I)Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig$Builder;
+#setMetricGroup(Lorg/apache/flink/metrics/MetricGroup;)Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig$Builder;
+#configure(Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig$Builder;
+#build()Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig;
@1.14.3
+#setStateNameAsVariable(Z)Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig$Builder;

+###org/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig
@1.14.0
+#isEnabled()Z
+#getMetricGroup()Lorg/apache/flink/metrics/MetricGroup;
+#getHistorySize()I
+#getSampleInterval()I
+#disabled()Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig;
+#newBuilder()Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig$Builder;
@1.14.3
+#isStateNameAsVariable()Z

+###org/apache/flink/runtime/state/metrics/LatencyTrackingReducingState$ReducingStateLatencyMetrics
@1.14.0

+###org/apache/flink/runtime/state/metrics/LatencyTrackingStateFactory
@1.14.0
+#createStateAndWrapWithLatencyTrackingIfEnabled(Lorg/apache/flink/runtime/state/internal/InternalKvState;Lorg/apache/flink/api/common/state/StateDescriptor;Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig;)Lorg/apache/flink/runtime/state/internal/InternalKvState;

+###org/apache/flink/runtime/state/HeapPriorityQueuesManager
@1.14.0
+#<init>(Ljava/util/Map;Lorg/apache/flink/runtime/state/heap/HeapPriorityQueueSetFactory;Lorg/apache/flink/runtime/state/KeyGroupRange;I)V
+#createOrUpdate(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/runtime/state/KeyGroupedInternalPriorityQueue;
+#getRegisteredPQStates()Ljava/util/Map;
@1.16.0
+#createOrUpdate(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Z)Lorg/apache/flink/runtime/state/KeyGroupedInternalPriorityQueue;

+###org/apache/flink/runtime/state/KeyGroupRangeAssignment
@1.14.0
+#assignKeyToParallelOperator(Ljava/lang/Object;II)I
+#assignToKeyGroup(Ljava/lang/Object;I)I
+#computeKeyGroupForKeyHash(II)I
+#computeKeyGroupRangeForOperatorIndex(III)Lorg/apache/flink/runtime/state/KeyGroupRange;
+#computeOperatorIndexForKeyGroup(III)I
+#computeDefaultMaxParallelism(I)I
+#checkParallelismPreconditions(I)V

+###org/apache/flink/runtime/state/StateUtil
@1.14.0
+#getStateSize(Lorg/apache/flink/runtime/state/StateObject;)J
+#bestEffortDiscardAllStateObjects(Ljava/lang/Iterable;)V
+#discardStateFuture(Ljava/util/concurrent/Future;)J
+#unexpectedStateHandleException(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/RuntimeException;
+#unexpectedStateHandleException([Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/RuntimeException;
@1.15.0
+#discardStateFuture(Ljava/util/concurrent/Future;)Lorg/apache/flink/api/java/tuple/Tuple2;
-#discardStateFuture(Ljava/util/concurrent/Future;)J

+###org/apache/flink/runtime/state/RestoreOperation
@1.14.0
+#restore()Ljava/lang/Object;

+###org/apache/flink/runtime/state/ConfigurableCheckpointStorage
@1.14.0
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/CheckpointStorage;

+###org/apache/flink/runtime/state/DefaultKeyedStateStore
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/KeyedStateBackend;Lorg/apache/flink/api/common/ExecutionConfig;)V
+#getState(Lorg/apache/flink/api/common/state/ValueStateDescriptor;)Lorg/apache/flink/api/common/state/ValueState;
+#getListState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
+#getReducingState(Lorg/apache/flink/api/common/state/ReducingStateDescriptor;)Lorg/apache/flink/api/common/state/ReducingState;
+#getAggregatingState(Lorg/apache/flink/api/common/state/AggregatingStateDescriptor;)Lorg/apache/flink/api/common/state/AggregatingState;
+#getMapState(Lorg/apache/flink/api/common/state/MapStateDescriptor;)Lorg/apache/flink/api/common/state/MapState;

+###org/apache/flink/runtime/state/StateInitializationContextImpl
@1.14.0
+#<init>(Ljava/lang/Long;Lorg/apache/flink/api/common/state/OperatorStateStore;Lorg/apache/flink/api/common/state/KeyedStateStore;Ljava/lang/Iterable;Ljava/lang/Iterable;)V
+#isRestored()Z
+#getRestoredCheckpointId()Ljava/util/OptionalLong;
+#getRawOperatorStateInputs()Ljava/lang/Iterable;
+#getRawKeyedStateInputs()Ljava/lang/Iterable;
+#getOperatorStateStore()Lorg/apache/flink/api/common/state/OperatorStateStore;
+#getKeyedStateStore()Lorg/apache/flink/api/common/state/KeyedStateStore;

+###org/apache/flink/runtime/state/StateInitializationContext
@1.14.0
+#getRawOperatorStateInputs()Ljava/lang/Iterable;
+#getRawKeyedStateInputs()Ljava/lang/Iterable;

+###org/apache/flink/runtime/state/FunctionInitializationContext
@1.14.0

+###org/apache/flink/runtime/state/ManagedInitializationContext
@1.14.0
+#isRestored()Z
+#getRestoredCheckpointId()Ljava/util/OptionalLong;
+#getOperatorStateStore()Lorg/apache/flink/api/common/state/OperatorStateStore;
+#getKeyedStateStore()Lorg/apache/flink/api/common/state/KeyedStateStore;

+###org/apache/flink/runtime/state/KeyGroupStatePartitionStreamProvider
@1.14.0
+#<init>(Ljava/io/IOException;I)V
+#<init>(Ljava/io/InputStream;I)V
+#getKeyGroupId()I

+###org/apache/flink/runtime/state/StatePartitionStreamProvider
@1.14.0
+#<init>(Ljava/io/IOException;)V
+#<init>(Ljava/io/InputStream;)V
+#getStream()Ljava/io/InputStream;

+###org/apache/flink/runtime/state/TaskExecutorLocalStateStoresManager
@1.14.0
+#<init>(Z[Ljava/io/File;Ljava/util/concurrent/Executor;)V
+#localStateStoreForSubtask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;I)Lorg/apache/flink/runtime/state/TaskLocalStateStore;
+#releaseLocalStateForAllocationId(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#shutdown()V
@1.15.0
+#<init>(ZLorg/apache/flink/util/Reference;Ljava/util/concurrent/Executor;)V
+#retainLocalStateForAllocations(Ljava/util/Set;)V
-#<init>(Z[Ljava/io/File;Ljava/util/concurrent/Executor;)V
@1.16.0
+#localStateStoreForSubtask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/state/TaskLocalStateStore;
-#localStateStoreForSubtask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;I)Lorg/apache/flink/runtime/state/TaskLocalStateStore;

+###org/apache/flink/runtime/state/BackendWritableBroadcastState
@1.14.0
+#deepCopy()Lorg/apache/flink/runtime/state/BackendWritableBroadcastState;
+#write(Lorg/apache/flink/core/fs/FSDataOutputStream;)J
+#setStateMetaInfo(Lorg/apache/flink/runtime/state/RegisteredBroadcastStateBackendMetaInfo;)V
+#getStateMetaInfo()Lorg/apache/flink/runtime/state/RegisteredBroadcastStateBackendMetaInfo;

+###org/apache/flink/runtime/state/IncrementalRemoteKeyedStateHandle
@1.14.0
+#<init>(Ljava/util/UUID;Lorg/apache/flink/runtime/state/KeyGroupRange;JLjava/util/Map;Ljava/util/Map;Lorg/apache/flink/runtime/state/StreamStateHandle;)V
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#getCheckpointId()J
+#getSharedState()Ljava/util/Map;
+#getPrivateState()Ljava/util/Map;
+#getMetaStateHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#getBackendIdentifier()Ljava/util/UUID;
+#getSharedStateHandleIDs()Ljava/util/Set;
+#getSharedStateRegistry()Lorg/apache/flink/runtime/state/SharedStateRegistry;
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyedStateHandle;
+#discardState()V
+#getStateSize()J
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#createSharedStateRegistryKeyFromFileName(Lorg/apache/flink/runtime/state/StateHandleID;)Lorg/apache/flink/runtime/state/SharedStateRegistryKey;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.15.0
+#<init>(Ljava/util/UUID;Lorg/apache/flink/runtime/state/KeyGroupRange;JLjava/util/Map;Ljava/util/Map;Lorg/apache/flink/runtime/state/StreamStateHandle;J)V
+#restore(Ljava/util/UUID;Lorg/apache/flink/runtime/state/KeyGroupRange;JLjava/util/Map;Ljava/util/Map;Lorg/apache/flink/runtime/state/StreamStateHandle;JLorg/apache/flink/runtime/state/StateHandleID;)Lorg/apache/flink/runtime/state/IncrementalRemoteKeyedStateHandle;
+#getSharedStateHandles()Ljava/util/Map;
+#getStateHandleId()Lorg/apache/flink/runtime/state/StateHandleID;
+#getCheckpointedSize()J
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
-#getSharedStateHandleIDs()Ljava/util/Set;
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
@1.16.0
+#rebound(J)Lorg/apache/flink/runtime/state/CheckpointBoundKeyedStateHandle;

+###org/apache/flink/runtime/state/IncrementalKeyedStateHandle
@1.14.0
+#getCheckpointId()J
+#getBackendIdentifier()Ljava/util/UUID;
+#getSharedStateHandleIDs()Ljava/util/Set;
@1.15.0
+#getSharedStateHandles()Ljava/util/Map;
-#getCheckpointId()J
-#getSharedStateHandleIDs()Ljava/util/Set;

+###org/apache/flink/runtime/state/CheckpointBoundKeyedStateHandle
@1.15.0
+#getCheckpointId()J
@1.16.0
+#rebound(J)Lorg/apache/flink/runtime/state/CheckpointBoundKeyedStateHandle;

+###org/apache/flink/runtime/state/FullSnapshotUtil
@1.14.0
+#setMetaDataFollowsFlagInKey([B)V
+#clearMetaDataFollowsFlag([B)V
+#hasMetaDataFollowsFlag([B)Z

+###org/apache/flink/runtime/state/StateBackendBuilder
@1.14.0
+#build()Ljava/lang/Object;

+###org/apache/flink/runtime/state/FullSnapshotAsyncWriter
@1.14.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/util/function/SupplierWithException;Lorg/apache/flink/runtime/state/FullSnapshotResources;)V
+#get(Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/SnapshotResult;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/SnapshotType;Lorg/apache/flink/util/function/SupplierWithException;Lorg/apache/flink/runtime/state/FullSnapshotResources;)V
-#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/util/function/SupplierWithException;Lorg/apache/flink/runtime/state/FullSnapshotResources;)V

+###org/apache/flink/runtime/state/SnapshotStrategy$SnapshotResultSupplier
@1.14.0
+#get(Lorg/apache/flink/core/fs/CloseableRegistry;)Lorg/apache/flink/runtime/state/SnapshotResult;

+###org/apache/flink/runtime/state/SnapshotStrategy
@1.14.0
+#syncPrepareResources(J)Lorg/apache/flink/runtime/state/SnapshotResources;
+#asyncSnapshot(Lorg/apache/flink/runtime/state/SnapshotResources;JJLorg/apache/flink/runtime/state/CheckpointStreamFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Lorg/apache/flink/runtime/state/SnapshotStrategy$SnapshotResultSupplier;

+###org/apache/flink/runtime/state/CheckpointStreamWithResultProvider$PrimaryStreamOnly
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;)V
+#closeAndFinalizeCheckpointStreamResult()Lorg/apache/flink/runtime/state/SnapshotResult;
+#getCheckpointOutputStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;)V
+#getCheckpointOutputStream()Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;
-#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;)V
-#getCheckpointOutputStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;

+###org/apache/flink/runtime/state/CheckpointStreamWithResultProvider$PrimaryAndSecondaryStream
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;)V
+#closeAndFinalizeCheckpointStreamResult()Lorg/apache/flink/runtime/state/SnapshotResult;
+#getCheckpointOutputStream()Lorg/apache/flink/runtime/state/DuplicatingCheckpointOutputStream;
+#getCheckpointOutputStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;)V
+#getCheckpointOutputStream()Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;
-#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;)V
-#getCheckpointOutputStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;

+###org/apache/flink/runtime/state/CheckpointStreamWithResultProvider$KeyedStateHandleFactory
@1.14.0
+#create(Lorg/apache/flink/runtime/state/KeyGroupRangeOffsets;Lorg/apache/flink/runtime/state/StreamStateHandle;)Lorg/apache/flink/runtime/state/KeyedStateHandle;

+###org/apache/flink/runtime/state/CheckpointStreamWithResultProvider
@1.14.0
+#closeAndFinalizeCheckpointStreamResult()Lorg/apache/flink/runtime/state/SnapshotResult;
+#getCheckpointOutputStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;
+#close()V
+#createSimpleStream(Lorg/apache/flink/runtime/state/CheckpointedStateScope;Lorg/apache/flink/runtime/state/CheckpointStreamFactory;)Lorg/apache/flink/runtime/state/CheckpointStreamWithResultProvider;
+#createDuplicatingStream(JLorg/apache/flink/runtime/state/CheckpointedStateScope;Lorg/apache/flink/runtime/state/CheckpointStreamFactory;Lorg/apache/flink/runtime/state/LocalRecoveryDirectoryProvider;)Lorg/apache/flink/runtime/state/CheckpointStreamWithResultProvider;
+#toKeyedStateHandleSnapshotResult(Lorg/apache/flink/runtime/state/SnapshotResult;Lorg/apache/flink/runtime/state/KeyGroupRangeOffsets;Lorg/apache/flink/runtime/state/CheckpointStreamWithResultProvider$KeyedStateHandleFactory;)Lorg/apache/flink/runtime/state/SnapshotResult;
@1.15.0
+#getCheckpointOutputStream()Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;
-#getCheckpointOutputStream()Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;

+###org/apache/flink/runtime/state/delegate/DelegatingStateBackend
@1.14.0
+#getDelegatedStateBackend()Lorg/apache/flink/runtime/state/StateBackend;
@1.16.0
+#getName()Ljava/lang/String;

+###org/apache/flink/runtime/state/SnappyStreamCompressionDecorator
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/state/AbstractKeyedStateBackendBuilder
@1.14.0
+#<init>(Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/ClassLoader;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/runtime/state/metrics/LatencyTrackingStateConfig;Ljava/util/Collection;Lorg/apache/flink/runtime/state/StreamCompressionDecorator;Lorg/apache/flink/core/fs/CloseableRegistry;)V

+###org/apache/flink/runtime/state/KeyedBackendSerializationProxy
@1.14.0
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/util/List;Z)V
+#getStateMetaInfoSnapshots()Ljava/util/List;
+#getKeySerializerSnapshot()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#isUsingKeyGroupCompression()Z
+#getVersion()I
+#getCompatibleVersions()[I
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/runtime/state/ListDelimitedSerializer
@1.14.0
+#<init>()V
+#deserializeList([BLorg/apache/flink/api/common/typeutils/TypeSerializer;)Ljava/util/List;
+#serializeList(Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)[B
+#deserializeNextElement(Lorg/apache/flink/core/memory/DataInputDeserializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Ljava/lang/Object;

+###org/apache/flink/runtime/state/DuplicatingCheckpointOutputStream
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;)V
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;I)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#getPos()J
+#flush()V
+#sync()V
+#close()V
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#closeAndGetPrimaryHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#closeAndGetSecondaryHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#getSecondaryStreamException()Ljava/lang/Exception;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;)V
+#<init>(Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/CheckpointStateOutputStream;I)V
-#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;)V
-#<init>(Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;Lorg/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream;I)V

+###org/apache/flink/runtime/state/RetrievableStreamStateHandle
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/StreamStateHandle;)V
+#<init>(Lorg/apache/flink/core/fs/Path;J)V
+#retrieveState()Ljava/io/Serializable;
+#openInputStream()Lorg/apache/flink/core/fs/FSDataInputStream;
+#asBytesIfInMemory()Ljava/util/Optional;
+#discardState()V
+#getStateSize()J
+#close()V
@1.16.0
+#getStreamStateHandleID()Lorg/apache/flink/runtime/state/PhysicalStateHandleID;

+###org/apache/flink/runtime/state/PartitionableListState
@1.14.0
+#setStateMetaInfo(Lorg/apache/flink/runtime/state/RegisteredOperatorStateBackendMetaInfo;)V
+#getStateMetaInfo()Lorg/apache/flink/runtime/state/RegisteredOperatorStateBackendMetaInfo;
+#deepCopy()Lorg/apache/flink/runtime/state/PartitionableListState;
+#clear()V
+#get()Ljava/lang/Iterable;
+#add(Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#write(Lorg/apache/flink/core/fs/FSDataOutputStream;)[J
+#update(Ljava/util/List;)V
+#addAll(Ljava/util/List;)V
+#get()Ljava/lang/Object;
@1.15.1
+#getInternalListCopySerializer()Lorg/apache/flink/runtime/state/ArrayListSerializer;

+###org/apache/flink/runtime/state/SnapshotDirectory
@1.14.0
+#getDirectory()Ljava/nio/file/Path;
+#mkdirs()Z
+#exists()Z
+#listDirectory()[Ljava/nio/file/Path;
+#cleanup()Z
+#isSnapshotCompleted()Z
+#completeSnapshotAndGetHandle()Lorg/apache/flink/runtime/state/DirectoryStateHandle;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#temporary(Ljava/io/File;)Lorg/apache/flink/runtime/state/SnapshotDirectory;
+#permanent(Ljava/nio/file/Path;)Lorg/apache/flink/runtime/state/SnapshotDirectory;

+###org/apache/flink/runtime/state/DirectoryStateHandle
@1.14.0
+#<init>(Ljava/nio/file/Path;)V
+#discardState()V
+#getStateSize()J
+#getDirectory()Ljava/nio/file/Path;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/storage/JobManagerCheckpointStorage
@1.14.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/core/fs/Path;I)V
+#getMaxStateSize()I
+#getCheckpointPath()Lorg/apache/flink/core/fs/Path;
+#getSavepointPath()Lorg/apache/flink/core/fs/Path;
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/storage/JobManagerCheckpointStorage;
+#createFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/storage/JobManagerCheckpointStorage;
+#resolveCheckpoint(Ljava/lang/String;)Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;
+#createCheckpointStorage(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/state/CheckpointStorageAccess;
+#toString()Ljava/lang/String;
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/CheckpointStorage;

+###org/apache/flink/runtime/state/storage/FileSystemCheckpointStorage
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/core/fs/Path;)V
+#<init>(Ljava/net/URI;)V
+#<init>(Ljava/net/URI;I)V
+#<init>(Lorg/apache/flink/core/fs/Path;II)V
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/storage/FileSystemCheckpointStorage;
+#createFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/storage/FileSystemCheckpointStorage;
+#resolveCheckpoint(Ljava/lang/String;)Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;
+#createCheckpointStorage(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/state/CheckpointStorageAccess;
+#getCheckpointPath()Lorg/apache/flink/core/fs/Path;
+#getSavepointPath()Lorg/apache/flink/core/fs/Path;
+#getMinFileSizeThreshold()I
+#getWriteBufferSize()I
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/CheckpointStorage;

+###org/apache/flink/runtime/state/StateBackendLoader
@1.14.0
+#loadStateBackendFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/state/StateBackend;
+#fromApplicationOrConfigOrDefault(Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/util/TernaryBoolean;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/state/StateBackend;
+#stateBackendFromApplicationOrConfigOrDefaultUseManagedMemory(Lorg/apache/flink/configuration/Configuration;Ljava/util/Optional;Ljava/lang/ClassLoader;)Z
@1.16.0
+#loadStateBackendFromKeyedStateHandles(Lorg/apache/flink/runtime/state/StateBackend;Ljava/lang/ClassLoader;Ljava/util/Collection;)Lorg/apache/flink/runtime/state/StateBackend;
+#isChangelogStateBackend(Lorg/apache/flink/runtime/state/StateBackend;)Z

+###org/apache/flink/runtime/state/OperatorBackendSerializationProxy
@1.14.0
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#getVersion()I
+#getCompatibleVersions()[I
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getOperatorStateMetaInfoSnapshots()Ljava/util/List;
+#getBroadcastStateMetaInfoSnapshots()Ljava/util/List;

+###org/apache/flink/runtime/state/LocalRecoveryDirectoryProviderImpl
@1.14.0
+#<init>(Ljava/io/File;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;I)V
+#<init>([Ljava/io/File;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;I)V
+#allocationBaseDirectory(J)Ljava/io/File;
+#subtaskBaseDirectory(J)Ljava/io/File;
+#subtaskSpecificCheckpointDirectory(J)Ljava/io/File;
+#selectAllocationBaseDirectory(I)Ljava/io/File;
+#selectSubtaskBaseDirectory(I)Ljava/io/File;
+#allocationBaseDirsCount()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/CompositeKeySerializationUtils
@1.14.0
+#<init>()V
+#readKeyGroup(ILorg/apache/flink/core/memory/DataInputView;)I
+#readKey(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/core/memory/DataInputDeserializer;Z)Ljava/lang/Object;
+#readNamespace(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/core/memory/DataInputDeserializer;Z)Ljava/lang/Object;
+#writeNameSpace(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/core/memory/DataOutputSerializer;Z)V
+#isSerializerTypeVariableSized(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Z
+#isAmbiguousKeyPossible(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Z
+#writeKeyGroup(IILorg/apache/flink/core/memory/DataOutputView;)V
+#writeKey(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/core/memory/DataOutputSerializer;Z)V
+#readVariableIntBytes(Lorg/apache/flink/core/memory/DataInputView;I)V
+#writeVariableIntBytes(ILorg/apache/flink/core/memory/DataOutputView;)V
+#serializeKeyGroup(I[B)V
+#computeRequiredBytesInKeyGroupPrefix(I)I

+###org/apache/flink/runtime/state/TaskStateManagerImpl
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/state/TaskLocalStateStore;Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/state/TaskLocalStateStore;Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/checkpoint/channel/SequentialChannelStateReaderImpl;)V
+#reportTaskStateSnapshots(Lorg/apache/flink/runtime/checkpoint/CheckpointMetaData;Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#reportIncompleteTaskStateSnapshots(Lorg/apache/flink/runtime/checkpoint/CheckpointMetaData;Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#getInputRescalingDescriptor()Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor;
+#getOutputRescalingDescriptor()Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor;
+#isFinishedOnRestore()Z
+#getRestoreCheckpointId()Ljava/util/Optional;
+#prioritizedOperatorState(Lorg/apache/flink/runtime/jobgraph/OperatorID;)Lorg/apache/flink/runtime/checkpoint/PrioritizedOperatorSubtaskState;
+#createLocalRecoveryConfig()Lorg/apache/flink/runtime/state/LocalRecoveryConfig;
+#getSequentialChannelStateReader()Lorg/apache/flink/runtime/checkpoint/channel/SequentialChannelStateReader;
+#getStateChangelogStorage()Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;
+#notifyCheckpointComplete(J)V
+#notifyCheckpointAborted(J)V
+#close()V
@1.14.3
+#isTaskDeployedAsFinished()Z
-#isFinishedOnRestore()Z
@1.16.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/state/TaskLocalStateStore;Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;Lorg/apache/flink/runtime/state/TaskExecutorStateChangelogStoragesManager;Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/state/TaskLocalStateStore;Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;Lorg/apache/flink/runtime/state/TaskExecutorStateChangelogStoragesManager;Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/checkpoint/channel/SequentialChannelStateReaderImpl;)V
+#getStateChangelogStorageView(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/state/changelog/ChangelogStateHandle;)Lorg/apache/flink/runtime/state/changelog/StateChangelogStorageView;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/state/TaskLocalStateStore;Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/state/TaskLocalStateStore;Lorg/apache/flink/runtime/state/changelog/StateChangelogStorage;Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/checkpoint/channel/SequentialChannelStateReaderImpl;)V

+###org/apache/flink/runtime/state/TaskLocalStateStoreImpl
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/state/LocalRecoveryConfig;Ljava/util/concurrent/Executor;)V
+#storeLocalState(JLorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#retrieveLocalState(J)Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;
+#getLocalRecoveryConfig()Lorg/apache/flink/runtime/state/LocalRecoveryConfig;
+#confirmCheckpoint(J)V
+#abortCheckpoint(J)V
+#pruneMatchingCheckpoints(Ljava/util/function/LongPredicate;)V
+#dispose()Ljava/util/concurrent/CompletableFuture;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/JavaSerializer$JavaSerializerSnapshot
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/state/JavaSerializer
@1.14.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Ljava/io/Serializable;
+#copy(Ljava/io/Serializable;)Ljava/io/Serializable;
+#copy(Ljava/io/Serializable;Ljava/io/Serializable;)Ljava/io/Serializable;
+#getLength()I
+#serialize(Ljava/io/Serializable;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/io/Serializable;
+#deserialize(Ljava/io/Serializable;Lorg/apache/flink/core/memory/DataInputView;)Ljava/io/Serializable;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;

+###org/apache/flink/runtime/state/OperatorStreamStateHandle
@1.14.0
+#<init>(Ljava/util/Map;Lorg/apache/flink/runtime/state/StreamStateHandle;)V
+#getStateNameToPartitionOffsets()Ljava/util/Map;
+#discardState()V
+#getStateSize()J
+#openInputStream()Lorg/apache/flink/core/fs/FSDataInputStream;
+#asBytesIfInMemory()Ljava/util/Optional;
+#getDelegateStateHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.16.0
+#getStreamStateHandleID()Lorg/apache/flink/runtime/state/PhysicalStateHandleID;

+###org/apache/flink/runtime/state/NotDuplicatingCheckpointStateToolset
@1.15.0
+#<init>()V
+#canFastDuplicate(Lorg/apache/flink/runtime/state/StreamStateHandle;)Z
+#duplicate(Ljava/util/List;)Ljava/util/List;

+###org/apache/flink/runtime/state/CheckpointStorageFactory
@1.14.0
+#createFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/CheckpointStorage;

+###org/apache/flink/runtime/state/VoidNamespace
@1.14.0
+#get()Lorg/apache/flink/runtime/state/VoidNamespace;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/DirectoryKeyedStateHandle
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/DirectoryStateHandle;Lorg/apache/flink/runtime/state/KeyGroupRange;)V
+#getDirectoryStateHandle()Lorg/apache/flink/runtime/state/DirectoryStateHandle;
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#discardState()V
+#getStateSize()J
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyedStateHandle;
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.15.0
+#getCheckpointedSize()J
+#getStateHandleId()Lorg/apache/flink/runtime/state/StateHandleID;
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V

+###org/apache/flink/runtime/state/CheckpointListener
@1.14.0

+###org/apache/flink/runtime/state/ArrayListSerializerSnapshot
@1.14.0
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/state/ArrayListSerializer;)V
+#getCurrentOuterSnapshotVersion()I

+###org/apache/flink/runtime/state/UncompressedStreamCompressionDecorator
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/state/HeapBroadcastState
@1.14.0
+#setStateMetaInfo(Lorg/apache/flink/runtime/state/RegisteredBroadcastStateBackendMetaInfo;)V
+#getStateMetaInfo()Lorg/apache/flink/runtime/state/RegisteredBroadcastStateBackendMetaInfo;
+#deepCopy()Lorg/apache/flink/runtime/state/HeapBroadcastState;
+#clear()V
+#toString()Ljava/lang/String;
+#write(Lorg/apache/flink/core/fs/FSDataOutputStream;)J
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)V
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#entries()Ljava/lang/Iterable;
+#immutableEntries()Ljava/lang/Iterable;
+#deepCopy()Lorg/apache/flink/runtime/state/BackendWritableBroadcastState;
@1.15.1
+#getInternalMapCopySerializer()Lorg/apache/flink/api/common/typeutils/base/MapSerializer;

+###org/apache/flink/runtime/state/BoundedInputStream
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/FSDataInputStream;J)V
+#read()I
+#read([B)I
+#read([BII)I
+#skip(J)J
+#available()I
+#toString()Ljava/lang/String;
+#close()V
+#reset()V
+#mark(I)V
+#getEndOffsetExclusive()J
+#setEndOffsetExclusive(J)V
+#markSupported()Z

+###org/apache/flink/runtime/state/SnapshotStrategyRunner
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/state/SnapshotStrategy;Lorg/apache/flink/core/fs/CloseableRegistry;Lorg/apache/flink/runtime/state/SnapshotExecutionType;)V
+#snapshot(JJLorg/apache/flink/runtime/state/CheckpointStreamFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/RunnableFuture;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/SharedStateRegistryImpl
@1.15.0
+#<init>()V
+#<init>(Ljava/util/concurrent/Executor;)V
+#registerReference(Lorg/apache/flink/runtime/state/SharedStateRegistryKey;Lorg/apache/flink/runtime/state/StreamStateHandle;J)Lorg/apache/flink/runtime/state/StreamStateHandle;
+#unregisterUnusedState(J)V
+#registerAll(Ljava/lang/Iterable;J)V
+#registerAllAfterRestored(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)V
+#checkpointCompleted(J)V
+#toString()Ljava/lang/String;
+#close()V
@1.16.0
+#registerReference(Lorg/apache/flink/runtime/state/SharedStateRegistryKey;Lorg/apache/flink/runtime/state/StreamStateHandle;JZ)Lorg/apache/flink/runtime/state/StreamStateHandle;
+#unregisterUnusedState(J)Ljava/util/Set;
-#registerReference(Lorg/apache/flink/runtime/state/SharedStateRegistryKey;Lorg/apache/flink/runtime/state/StreamStateHandle;J)Lorg/apache/flink/runtime/state/StreamStateHandle;
-#unregisterUnusedState(J)V

+###org/apache/flink/runtime/state/SavepointSnapshotStrategy
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/FullSnapshotResources;)V
+#syncPrepareResources(J)Lorg/apache/flink/runtime/state/FullSnapshotResources;
+#asyncSnapshot(Lorg/apache/flink/runtime/state/FullSnapshotResources;JJLorg/apache/flink/runtime/state/CheckpointStreamFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Lorg/apache/flink/runtime/state/SnapshotStrategy$SnapshotResultSupplier;
+#asyncSnapshot(Lorg/apache/flink/runtime/state/SnapshotResources;JJLorg/apache/flink/runtime/state/CheckpointStreamFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Lorg/apache/flink/runtime/state/SnapshotStrategy$SnapshotResultSupplier;
+#syncPrepareResources(J)Lorg/apache/flink/runtime/state/SnapshotResources;

+###org/apache/flink/runtime/state/CheckpointStorageLoader
@1.14.0
+#<init>()V
+#fromConfig(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;Lorg/slf4j/Logger;)Ljava/util/Optional;
+#load(Lorg/apache/flink/runtime/state/CheckpointStorage;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/state/CheckpointStorage;

+###org/apache/flink/runtime/state/DefaultOperatorStateBackendBuilder
@1.14.0
+#<init>(Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;ZLjava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;)V
+#build()Lorg/apache/flink/runtime/state/DefaultOperatorStateBackend;
+#build()Ljava/lang/Object;

+###org/apache/flink/runtime/state/DefaultOperatorStateBackend
@1.14.0
+#<init>(Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/core/fs/CloseableRegistry;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/runtime/state/SnapshotStrategyRunner;)V
+#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
+#getRegisteredStateNames()Ljava/util/Set;
+#getRegisteredBroadcastStateNames()Ljava/util/Set;
+#close()V
+#dispose()V
+#getBroadcastState(Lorg/apache/flink/api/common/state/MapStateDescriptor;)Lorg/apache/flink/api/common/state/BroadcastState;
+#getListState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
+#getUnionListState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
+#snapshot(JJLorg/apache/flink/runtime/state/CheckpointStreamFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/RunnableFuture;

+###org/apache/flink/runtime/state/VoidNamespaceTypeInfo
@1.14.0
+#<init>()V
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/runtime/state/StateSnapshotTransformers$ListStateSnapshotTransformer
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/StateSnapshotTransformer;)V
+#filterOrTransform(Ljava/util/List;)Ljava/util/List;
+#filterOrTransform(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/runtime/state/StateSnapshotTransformers$ListStateSnapshotTransformFactory
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;)V
+#createForDeserializedState()Ljava/util/Optional;

+###org/apache/flink/runtime/state/StateSnapshotTransformers$MapStateSnapshotTransformer
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/StateSnapshotTransformer;)V
+#filterOrTransform(Ljava/util/Map;)Ljava/util/Map;
+#filterOrTransform(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/runtime/state/StateSnapshotTransformers$MapStateSnapshotTransformFactory
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/StateSnapshotTransformer$StateSnapshotTransformFactory;)V
+#createForDeserializedState()Ljava/util/Optional;

+###org/apache/flink/runtime/state/StateSnapshotTransformers$StateSnapshotTransformFactoryWrapAdaptor
@1.14.0
+#createForDeserializedState()Ljava/util/Optional;
+#createForSerializedState()Ljava/util/Optional;

+###org/apache/flink/runtime/state/StateSnapshotTransformers
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/state/OperatorStateRestoreOperation
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/CloseableRegistry;Ljava/lang/ClassLoader;Ljava/util/Map;Ljava/util/Map;Ljava/util/Collection;)V
+#restore()Ljava/lang/Void;
+#restore()Ljava/lang/Object;

+###org/apache/flink/runtime/state/IncrementalLocalKeyedStateHandle
@1.14.0
+#<init>(Ljava/util/UUID;JLorg/apache/flink/runtime/state/DirectoryStateHandle;Lorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/state/StreamStateHandle;Ljava/util/Set;)V
+#getMetaDataState()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#getCheckpointId()J
+#getBackendIdentifier()Ljava/util/UUID;
+#getSharedStateHandleIDs()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#discardState()V
+#getStateSize()J
+#hashCode()I
+#toString()Ljava/lang/String;
@1.15.0
+#<init>(Ljava/util/UUID;JLorg/apache/flink/runtime/state/DirectoryStateHandle;Lorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/state/StreamStateHandle;Ljava/util/Map;)V
+#getSharedStateHandles()Ljava/util/Map;
-#<init>(Ljava/util/UUID;JLorg/apache/flink/runtime/state/DirectoryStateHandle;Lorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/state/StreamStateHandle;Ljava/util/Set;)V
-#getSharedStateHandleIDs()Ljava/util/Set;
@1.16.0
+#rebound(J)Lorg/apache/flink/runtime/state/CheckpointBoundKeyedStateHandle;

+###org/apache/flink/runtime/state/DoneFuture
@1.14.0
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#run()V
+#of(Ljava/lang/Object;)Lorg/apache/flink/runtime/state/DoneFuture;

+###org/apache/flink/runtime/state/VoidNamespaceSerializer$VoidNamespaceSerializerSnapshot
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/state/VoidNamespaceSerializer
@1.14.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Lorg/apache/flink/runtime/state/VoidNamespace;
+#copy(Lorg/apache/flink/runtime/state/VoidNamespace;)Lorg/apache/flink/runtime/state/VoidNamespace;
+#copy(Lorg/apache/flink/runtime/state/VoidNamespace;Lorg/apache/flink/runtime/state/VoidNamespace;)Lorg/apache/flink/runtime/state/VoidNamespace;
+#getLength()I
+#serialize(Lorg/apache/flink/runtime/state/VoidNamespace;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/runtime/state/VoidNamespace;
+#deserialize(Lorg/apache/flink/runtime/state/VoidNamespace;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/runtime/state/VoidNamespace;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;

+###org/apache/flink/runtime/state/SavepointKeyedStateHandle
@1.14.0

+###org/apache/flink/runtime/state/AbstractManagedMemoryStateBackend
@1.14.0
+#<init>()V
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;D)Lorg/apache/flink/runtime/state/AbstractKeyedStateBackend;
+#useManagedMemory()Z
+#createKeyedStateBackend(Lorg/apache/flink/runtime/execution/Environment;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/state/ttl/TtlTimeProvider;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/Collection;Lorg/apache/flink/core/fs/CloseableRegistry;D)Lorg/apache/flink/runtime/state/CheckpointableKeyedStateBackend;

+###org/apache/flink/runtime/state/KeyGroupsSavepointStateHandle
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/KeyGroupRangeOffsets;Lorg/apache/flink/runtime/state/StreamStateHandle;)V
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyGroupsStateHandle;
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyedStateHandle;

+###org/apache/flink/runtime/state/PlaceholderStreamStateHandle
@1.14.0
+#<init>()V
+#openInputStream()Lorg/apache/flink/core/fs/FSDataInputStream;
+#asBytesIfInMemory()Ljava/util/Optional;
+#discardState()V
+#getStateSize()J
@1.15.0
+#<init>(J)V
-#<init>()V
@1.16.0
+#getStreamStateHandleID()Lorg/apache/flink/runtime/state/PhysicalStateHandleID;

+###org/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup
@1.14.0
+#create(Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;

+###org/apache/flink/runtime/metrics/groups/AbstractMetricGroup$ChildType
@1.14.0
+#values()[Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup$ChildType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup$ChildType;

+###org/apache/flink/runtime/metrics/groups/AbstractMetricGroup
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/MetricRegistry;[Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;)V
+#getAllVariables()Ljava/util/Map;
+#getAllVariables(ILjava/util/Set;)Ljava/util/Map;
+#getLogicalScope(Lorg/apache/flink/metrics/CharacterFilter;)Ljava/lang/String;
+#getLogicalScope(Lorg/apache/flink/metrics/CharacterFilter;C)Ljava/lang/String;
+#getScopeComponents()[Ljava/lang/String;
+#getQueryServiceMetricInfo(Lorg/apache/flink/metrics/CharacterFilter;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;
+#getMetricIdentifier(Ljava/lang/String;)Ljava/lang/String;
+#getMetricIdentifier(Ljava/lang/String;Lorg/apache/flink/metrics/CharacterFilter;)Ljava/lang/String;
+#getMetricIdentifier(Ljava/lang/String;Lorg/apache/flink/metrics/CharacterFilter;IC)Ljava/lang/String;
+#close()V
+#isClosed()Z
+#counter(Ljava/lang/String;)Lorg/apache/flink/metrics/Counter;
+#counter(Ljava/lang/String;Lorg/apache/flink/metrics/Counter;)Lorg/apache/flink/metrics/Counter;
+#gauge(Ljava/lang/String;Lorg/apache/flink/metrics/Gauge;)Lorg/apache/flink/metrics/Gauge;
+#histogram(Ljava/lang/String;Lorg/apache/flink/metrics/Histogram;)Lorg/apache/flink/metrics/Histogram;
+#meter(Ljava/lang/String;Lorg/apache/flink/metrics/Meter;)Lorg/apache/flink/metrics/Meter;
+#addGroup(Ljava/lang/String;)Lorg/apache/flink/metrics/MetricGroup;
+#addGroup(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/metrics/MetricGroup;

+###org/apache/flink/runtime/metrics/groups/GenericMetricGroup
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;Ljava/lang/String;)V

+###org/apache/flink/runtime/metrics/groups/JobManagerMetricGroup
@1.14.0
+#createJobManagerMetricGroup(Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/JobManagerMetricGroup;
+#hostname()Ljava/lang/String;
+#addJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;
+#removeJob(Lorg/apache/flink/api/common/JobID;)V
+#numRegisteredJobMetricGroups()I
@1.15.0
+#localCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
-#removeJob(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/metrics/groups/ComponentMetricGroup
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/MetricRegistry;[Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;)V
+#close()V

+###org/apache/flink/runtime/metrics/groups/TaskManagerMetricGroup
@1.14.0
+#createTaskManagerMetricGroup(Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/metrics/groups/TaskManagerMetricGroup;
+#hostname()Ljava/lang/String;
+#taskManagerId()Ljava/lang/String;
+#addTaskForJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;II)Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
+#removeJobMetricsGroup(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;)V
+#numRegisteredJobMetricGroups()I
@1.15.0
+#addJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;
+#getJobMetricsGroup(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;
+#removeJobMetricsGroup(Lorg/apache/flink/api/common/JobID;)V
-#addTaskForJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;II)Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
-#removeJobMetricsGroup(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;)V

+###org/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup
@1.14.0
+#parent()Lorg/apache/flink/runtime/metrics/groups/TaskManagerMetricGroup;
+#addTask(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;II)Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
+#removeTaskMetricGroup(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.15.0
+#<init>(Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/metrics/groups/TaskManagerMetricGroup;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
@1.16.0
+#addTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
-#addTask(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;II)Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;

+###org/apache/flink/runtime/metrics/groups/JobMetricGroup
@1.14.0
+#jobId()Lorg/apache/flink/api/common/JobID;
+#jobName()Ljava/lang/String;

+###org/apache/flink/runtime/metrics/groups/TaskMetricGroup
@1.14.0
+#parent()Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;
+#executionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#vertexId()Lorg/apache/flink/util/AbstractID;
+#taskName()Ljava/lang/String;
+#subtaskIndex()I
+#attemptNumber()I
+#getIOMetricGroup()Lorg/apache/flink/runtime/metrics/groups/TaskIOMetricGroup;
+#getOrAddOperator(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/InternalOperatorMetricGroup;
+#getOrAddOperator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/InternalOperatorMetricGroup;
+#close()V

+###org/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup
@1.14.0
+#parent()Lorg/apache/flink/runtime/metrics/groups/JobManagerMetricGroup;

+###org/apache/flink/runtime/metrics/groups/InternalOperatorMetricGroup
@1.14.0
+#getTaskIOMetricGroup()Lorg/apache/flink/runtime/metrics/groups/TaskIOMetricGroup;
+#getJobMetricGroup()Lorg/apache/flink/metrics/MetricGroup;
+#getIOMetricGroup()Lorg/apache/flink/runtime/metrics/groups/InternalOperatorIOMetricGroup;
+#getIOMetricGroup()Lorg/apache/flink/metrics/groups/OperatorIOMetricGroup;

+###org/apache/flink/runtime/metrics/groups/TaskIOMetricGroup
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;)V
+#createSnapshot()Lorg/apache/flink/runtime/executiongraph/IOMetrics;
+#getNumBytesInCounter()Lorg/apache/flink/metrics/Counter;
+#getNumBytesOutCounter()Lorg/apache/flink/metrics/Counter;
+#getNumRecordsInCounter()Lorg/apache/flink/metrics/Counter;
+#getNumRecordsOutCounter()Lorg/apache/flink/metrics/Counter;
+#getNumBuffersOutCounter()Lorg/apache/flink/metrics/Counter;
+#getIdleTimeMsPerSecond()Lorg/apache/flink/runtime/metrics/TimerGauge;
+#getBackPressuredTimePerSecond()Lorg/apache/flink/runtime/metrics/TimerGauge;
+#setEnableBusyTime(Z)V
+#reuseRecordsInputCounter(Lorg/apache/flink/metrics/Counter;)V
+#reuseRecordsOutputCounter(Lorg/apache/flink/metrics/Counter;)V
@1.15.0
+#getSoftBackPressuredTimePerSecond()Lorg/apache/flink/runtime/metrics/TimerGauge;
+#getHardBackPressuredTimePerSecond()Lorg/apache/flink/runtime/metrics/TimerGauge;
+#getBackPressuredTimeMsPerSecond()J
+#registerNumBytesProducedCounterForPartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/metrics/Counter;)V
-#getBackPressuredTimePerSecond()Lorg/apache/flink/runtime/metrics/TimerGauge;
@1.16.0
+#getNumMailsProcessedCounter()Lorg/apache/flink/metrics/Counter;
+#getAccumulatedBackPressuredTimeMs()J
+#markTaskStart()V
+#getMailboxThroughput()Lorg/apache/flink/metrics/Meter;
+#getMailboxLatency()Lorg/apache/flink/metrics/Histogram;
+#getMailboxSize()Lorg/apache/flink/metrics/Gauge;
+#registerMailboxSizeSupplier(Lorg/apache/flink/runtime/metrics/groups/TaskIOMetricGroup$SizeGauge$SizeSupplier;)V

+###org/apache/flink/runtime/metrics/groups/ProxyMetricGroup
@1.14.0
+#<init>(Lorg/apache/flink/metrics/MetricGroup;)V
+#counter(Ljava/lang/String;)Lorg/apache/flink/metrics/Counter;
+#counter(Ljava/lang/String;Lorg/apache/flink/metrics/Counter;)Lorg/apache/flink/metrics/Counter;
+#gauge(Ljava/lang/String;Lorg/apache/flink/metrics/Gauge;)Lorg/apache/flink/metrics/Gauge;
+#histogram(Ljava/lang/String;Lorg/apache/flink/metrics/Histogram;)Lorg/apache/flink/metrics/Histogram;
+#meter(Ljava/lang/String;Lorg/apache/flink/metrics/Meter;)Lorg/apache/flink/metrics/Meter;
+#addGroup(Ljava/lang/String;)Lorg/apache/flink/metrics/MetricGroup;
+#addGroup(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/metrics/MetricGroup;
+#getScopeComponents()[Ljava/lang/String;
+#getAllVariables()Ljava/util/Map;
+#getMetricIdentifier(Ljava/lang/String;)Ljava/lang/String;
+#getMetricIdentifier(Ljava/lang/String;Lorg/apache/flink/metrics/CharacterFilter;)Ljava/lang/String;

+###org/apache/flink/runtime/metrics/groups/InternalOperatorIOMetricGroup
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/groups/InternalOperatorMetricGroup;)V
+#getNumRecordsInCounter()Lorg/apache/flink/metrics/Counter;
+#getNumRecordsOutCounter()Lorg/apache/flink/metrics/Counter;
+#getNumRecordsInRateMeter()Lorg/apache/flink/metrics/Meter;
+#getNumRecordsOutRate()Lorg/apache/flink/metrics/Meter;
+#getNumBytesInCounter()Lorg/apache/flink/metrics/Counter;
+#getNumBytesOutCounter()Lorg/apache/flink/metrics/Counter;
+#reuseInputMetricsForTask()V
+#reuseOutputMetricsForTask()V

+###org/apache/flink/runtime/metrics/groups/ProcessMetricGroup
@1.14.0
+#create(Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/ProcessMetricGroup;

+###org/apache/flink/runtime/metrics/groups/ReporterScopedSettings
@1.14.0
+#<init>(ICLjava/util/Set;)V
+#getReporterIndex()I
+#getDelimiter()C
+#getExcludedVariables()Ljava/util/Set;
@1.15.0
+#<init>(ICLjava/util/Set;Ljava/util/Map;)V
+#getAdditionalVariables()Ljava/util/Map;
-#<init>(ICLjava/util/Set;)V
@1.16.0
+#<init>(ICLorg/apache/flink/runtime/metrics/filter/MetricFilter;Ljava/util/Set;Ljava/util/Map;)V
+#getFilter()Lorg/apache/flink/runtime/metrics/filter/MetricFilter;
-#<init>(ICLjava/util/Set;Ljava/util/Map;)V

+###org/apache/flink/runtime/metrics/groups/GenericKeyMetricGroup
@1.14.0
+#addGroup(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/metrics/MetricGroup;

+###org/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup
@1.14.0
+#create(Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;

+###org/apache/flink/runtime/metrics/groups/InternalSinkWriterMetricGroup
@1.14.0
+#wrap(Lorg/apache/flink/metrics/groups/OperatorMetricGroup;)Lorg/apache/flink/runtime/metrics/groups/InternalSinkWriterMetricGroup;
+#mock(Lorg/apache/flink/metrics/MetricGroup;)Lorg/apache/flink/runtime/metrics/groups/InternalSinkWriterMetricGroup;
+#mock(Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/metrics/groups/OperatorIOMetricGroup;)Lorg/apache/flink/runtime/metrics/groups/InternalSinkWriterMetricGroup;
+#getIOMetricGroup()Lorg/apache/flink/metrics/groups/OperatorIOMetricGroup;
+#getNumRecordsOutErrorsCounter()Lorg/apache/flink/metrics/Counter;
+#setCurrentSendTimeGauge(Lorg/apache/flink/metrics/Gauge;)V
@1.15.0
*#getNumRecordsOutErrorsCounter()Lorg/apache/flink/metrics/Counter;[deprecated]
+#getNumRecordsSendErrorsCounter()Lorg/apache/flink/metrics/Counter;
+#getNumRecordsSendCounter()Lorg/apache/flink/metrics/Counter;
+#getNumBytesSendCounter()Lorg/apache/flink/metrics/Counter;

+###org/apache/flink/runtime/metrics/groups/InternalSourceReaderMetricGroup
@1.14.0
+#wrap(Lorg/apache/flink/metrics/groups/OperatorMetricGroup;)Lorg/apache/flink/runtime/metrics/groups/InternalSourceReaderMetricGroup;
+#mock(Lorg/apache/flink/metrics/MetricGroup;)Lorg/apache/flink/runtime/metrics/groups/InternalSourceReaderMetricGroup;
+#getNumRecordsInErrorsCounter()Lorg/apache/flink/metrics/Counter;
+#setPendingBytesGauge(Lorg/apache/flink/metrics/Gauge;)V
+#setPendingRecordsGauge(Lorg/apache/flink/metrics/Gauge;)V
+#getIOMetricGroup()Lorg/apache/flink/metrics/groups/OperatorIOMetricGroup;
+#recordEmitted(J)V
+#idlingStarted()V
+#watermarkEmitted(J)V
@1.15.0
+#updateMaxDesiredWatermark(J)V

+###org/apache/flink/runtime/metrics/groups/FrontMetricGroup
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/groups/ReporterScopedSettings;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;)V
+#getMetricIdentifier(Ljava/lang/String;)Ljava/lang/String;
+#getMetricIdentifier(Ljava/lang/String;Lorg/apache/flink/metrics/CharacterFilter;)Ljava/lang/String;
+#getWrappedMetricGroup()Lorg/apache/flink/metrics/MetricGroup;
+#getAllVariables()Ljava/util/Map;
+#getLogicalScope(Lorg/apache/flink/metrics/CharacterFilter;)Ljava/lang/String;[deprecated]
+#getLogicalScope(Lorg/apache/flink/metrics/CharacterFilter;C)Ljava/lang/String;[deprecated]

+###org/apache/flink/runtime/metrics/groups/GenericValueMetricGroup
@1.14.0

+###org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups$UnregisteredProcessMetricGroup
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups$UnregisteredResourceManagerMetricGroup
@1.14.0

+###org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups$UnregisteredSlotManagerMetricGroup
@1.14.0

+###org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups$UnregisteredJobManagerMetricGroup
@1.14.0
+#addJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;

+###org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups$UnregisteredJobManagerJobMetricGroup
@1.14.0

+###org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups$UnregisteredTaskManagerMetricGroup
@1.14.0
+#addTaskForJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;II)Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
@1.15.0
-#addTaskForJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;II)Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;

+###org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups$UnregisteredTaskManagerJobMetricGroup
@1.14.0
+#<init>()V
+#addTask(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;II)Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
@1.16.0
+#addTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
-#addTask(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;II)Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;

+###org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups$UnregisteredTaskMetricGroup
@1.14.0
+#getOrAddOperator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/groups/InternalOperatorMetricGroup;

+###org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups$UnregisteredOperatorMetricGroup
@1.14.0

+###org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups
@1.14.0
+#createUnregisteredProcessMetricGroup()Lorg/apache/flink/runtime/metrics/groups/ProcessMetricGroup;
+#createUnregisteredResourceManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;
+#createUnregisteredSlotManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;
+#createUnregisteredJobManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/JobManagerMetricGroup;
+#createUnregisteredJobManagerJobMetricGroup()Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;
+#createUnregisteredTaskManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/TaskManagerMetricGroup;
+#createUnregisteredTaskManagerJobMetricGroup()Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;
+#createUnregisteredTaskMetricGroup()Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
+#createUnregisteredOperatorMetricGroup()Lorg/apache/flink/runtime/metrics/groups/InternalOperatorMetricGroup;

+###org/apache/flink/runtime/metrics/MetricRegistry
@1.14.0
+#getDelimiter()C
+#getNumberReporters()I
+#register(Lorg/apache/flink/metrics/Metric;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;)V
+#unregister(Lorg/apache/flink/metrics/Metric;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;)V
+#getScopeFormats()Lorg/apache/flink/runtime/metrics/scope/ScopeFormats;
+#getMetricQueryServiceGatewayRpcAddress()Ljava/lang/String;

+###org/apache/flink/runtime/metrics/dump/QueryScopeInfo$JobManagerQueryScopeInfo
@1.14.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo$JobManagerQueryScopeInfo;
+#getCategory()B
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;

+###org/apache/flink/runtime/metrics/dump/QueryScopeInfo$TaskManagerQueryScopeInfo
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo$TaskManagerQueryScopeInfo;
+#getCategory()B
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;

+###org/apache/flink/runtime/metrics/dump/QueryScopeInfo$JobQueryScopeInfo
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo$JobQueryScopeInfo;
+#getCategory()B
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;

+###org/apache/flink/runtime/metrics/dump/QueryScopeInfo$TaskQueryScopeInfo
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo$TaskQueryScopeInfo;
+#getCategory()B
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;
@1.16.0
+#<init>(Ljava/lang/String;Ljava/lang/String;II)V
+#<init>(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;I)V
-#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V

+###org/apache/flink/runtime/metrics/dump/QueryScopeInfo$OperatorQueryScopeInfo
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo$OperatorQueryScopeInfo;
+#getCategory()B
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;
@1.16.0
+#<init>(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

+###org/apache/flink/runtime/metrics/dump/QueryScopeInfo
@1.14.0
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;
+#getCategory()B
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/metrics/dump/MetricDumpSerialization$MetricSerializationResult
@1.14.0
+#<init>([B[B[B[BIIII)V

+###org/apache/flink/runtime/metrics/dump/MetricDumpSerialization$MetricDumpSerializer
@1.14.0
+#<init>()V
+#serialize(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Lorg/apache/flink/runtime/metrics/dump/MetricDumpSerialization$MetricSerializationResult;
+#close()V

+###org/apache/flink/runtime/metrics/dump/MetricDumpSerialization$MetricDumpDeserializer
@1.14.0
+#<init>()V
+#deserialize(Lorg/apache/flink/runtime/metrics/dump/MetricDumpSerialization$MetricSerializationResult;)Ljava/util/List;

+###org/apache/flink/runtime/metrics/dump/MetricDumpSerialization
@1.14.0

+###org/apache/flink/runtime/metrics/dump/MetricQueryService
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Ljava/lang/String;J)V
+#onStop()Ljava/util/concurrent/CompletableFuture;
+#addMetric(Ljava/lang/String;Lorg/apache/flink/metrics/Metric;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;)V
+#removeMetric(Lorg/apache/flink/metrics/Metric;)V
+#queryMetrics(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#createMetricQueryService(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;J)Lorg/apache/flink/runtime/metrics/dump/MetricQueryService;

+###org/apache/flink/runtime/metrics/dump/MetricDump$CounterDump
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;Ljava/lang/String;J)V
+#getCategory()B

+###org/apache/flink/runtime/metrics/dump/MetricDump$GaugeDump
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;Ljava/lang/String;Ljava/lang/String;)V
+#getCategory()B

+###org/apache/flink/runtime/metrics/dump/MetricDump$HistogramDump
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;Ljava/lang/String;JJDDDDDDDDD)V
+#getCategory()B

+###org/apache/flink/runtime/metrics/dump/MetricDump$MeterDump
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/dump/QueryScopeInfo;Ljava/lang/String;D)V
+#getCategory()B

+###org/apache/flink/runtime/metrics/dump/MetricDump
@1.14.0
+#getCategory()B
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/metrics/scope/ScopeFormats
@1.14.0
+#getJobManagerFormat()Lorg/apache/flink/runtime/metrics/scope/JobManagerScopeFormat;
+#getTaskManagerFormat()Lorg/apache/flink/runtime/metrics/scope/TaskManagerScopeFormat;
+#getTaskManagerJobFormat()Lorg/apache/flink/runtime/metrics/scope/TaskManagerJobScopeFormat;
+#getJobManagerJobFormat()Lorg/apache/flink/runtime/metrics/scope/JobManagerJobScopeFormat;
+#getTaskFormat()Lorg/apache/flink/runtime/metrics/scope/TaskScopeFormat;
+#getOperatorFormat()Lorg/apache/flink/runtime/metrics/scope/OperatorScopeFormat;
+#fromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/metrics/scope/ScopeFormats;

+###org/apache/flink/runtime/metrics/scope/JobManagerScopeFormat
@1.14.0
+#<init>(Ljava/lang/String;)V
+#formatScope(Ljava/lang/String;)[Ljava/lang/String;

+###org/apache/flink/runtime/metrics/scope/ScopeFormat
@1.14.0
+#format()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#asVariable(Ljava/lang/String;)Ljava/lang/String;
+#concat(Lorg/apache/flink/metrics/CharacterFilter;Ljava/lang/Character;[Ljava/lang/String;)Ljava/lang/String;

+###org/apache/flink/runtime/metrics/scope/JobManagerJobScopeFormat
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/metrics/scope/JobManagerScopeFormat;)V
+#formatScope(Lorg/apache/flink/runtime/metrics/groups/JobManagerMetricGroup;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)[Ljava/lang/String;

+###org/apache/flink/runtime/metrics/scope/TaskManagerScopeFormat
@1.14.0
+#<init>(Ljava/lang/String;)V
+#formatScope(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

+###org/apache/flink/runtime/metrics/scope/TaskManagerJobScopeFormat
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/metrics/scope/TaskManagerScopeFormat;)V
+#formatScope(Lorg/apache/flink/runtime/metrics/groups/TaskManagerMetricGroup;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)[Ljava/lang/String;

+###org/apache/flink/runtime/metrics/scope/TaskScopeFormat
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/metrics/scope/TaskManagerJobScopeFormat;)V
+#formatScope(Lorg/apache/flink/runtime/metrics/groups/TaskManagerJobMetricGroup;Lorg/apache/flink/util/AbstractID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;II)[Ljava/lang/String;

+###org/apache/flink/runtime/metrics/scope/OperatorScopeFormat
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/metrics/scope/TaskScopeFormat;)V
+#formatScope(Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;Lorg/apache/flink/runtime/jobgraph/OperatorID;Ljava/lang/String;)[Ljava/lang/String;

+###org/apache/flink/runtime/metrics/TimerGauge
@1.14.0
+#<init>()V
+#<init>(Lorg/apache/flink/util/clock/Clock;)V
+#markStart()V
+#markEnd()V
+#markStart(J)V
+#markEnd(J)V
+#update()V
+#getValue()Ljava/lang/Long;
+#getCount()J
+#isMeasuring()Z
+#getValue()Ljava/lang/Object;
@1.15.0
+#getMaxSingleMeasurement()J
-#markStart(J)V
-#markEnd(J)V
@1.16.0
+#getAccumulatedCount()J

+###org/apache/flink/runtime/metrics/MetricRegistryImpl
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/MetricRegistryConfiguration;)V
+#<init>(Lorg/apache/flink/runtime/metrics/MetricRegistryConfiguration;Ljava/util/Collection;)V
+#startQueryService(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#getMetricQueryServiceRpcService()Lorg/apache/flink/runtime/rpc/RpcService;
+#getMetricQueryServiceGatewayRpcAddress()Ljava/lang/String;
+#getDelimiter()C
+#getNumberReporters()I
+#getReporters()Ljava/util/List;
+#isShutdown()Z
+#shutdown()Ljava/util/concurrent/CompletableFuture;
+#getScopeFormats()Lorg/apache/flink/runtime/metrics/scope/ScopeFormats;
+#register(Lorg/apache/flink/metrics/Metric;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;)V
+#unregister(Lorg/apache/flink/metrics/Metric;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;)V

+###org/apache/flink/runtime/metrics/ViewUpdater
@1.14.0
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;)V
+#notifyOfAddedView(Lorg/apache/flink/metrics/View;)V
+#notifyOfRemovedView(Lorg/apache/flink/metrics/View;)V

+###org/apache/flink/runtime/metrics/MetricRegistryConfiguration
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/scope/ScopeFormats;CJ)V
+#getScopeFormats()Lorg/apache/flink/runtime/metrics/scope/ScopeFormats;
+#getDelimiter()C
+#getQueryServiceMessageSizeLimit()J
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;J)Lorg/apache/flink/runtime/metrics/MetricRegistryConfiguration;

+###org/apache/flink/runtime/metrics/ReporterSetup
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/metrics/MetricConfig;Lorg/apache/flink/metrics/reporter/MetricReporter;)V
+#getDelimiter()Ljava/util/Optional;
+#getIntervalSettings()Ljava/util/Optional;
+#getExcludedVariables()Ljava/util/Set;
+#getName()Ljava/lang/String;
+#getReporter()Lorg/apache/flink/metrics/reporter/MetricReporter;
+#forReporter(Ljava/lang/String;Lorg/apache/flink/metrics/reporter/MetricReporter;)Lorg/apache/flink/runtime/metrics/ReporterSetup;
+#forReporter(Ljava/lang/String;Lorg/apache/flink/metrics/MetricConfig;Lorg/apache/flink/metrics/reporter/MetricReporter;)Lorg/apache/flink/runtime/metrics/ReporterSetup;
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/core/plugin/PluginManager;)Ljava/util/List;
@1.15.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/metrics/MetricConfig;Lorg/apache/flink/metrics/reporter/MetricReporter;Ljava/util/Map;)V
+#getAdditionalVariables()Ljava/util/Map;
-#<init>(Ljava/lang/String;Lorg/apache/flink/metrics/MetricConfig;Lorg/apache/flink/metrics/reporter/MetricReporter;)V
@1.16.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/metrics/MetricConfig;Lorg/apache/flink/metrics/reporter/MetricReporter;Lorg/apache/flink/runtime/metrics/filter/MetricFilter;Ljava/util/Map;)V
+#getFilter()Lorg/apache/flink/runtime/metrics/filter/MetricFilter;
+#forReporter(Ljava/lang/String;Lorg/apache/flink/runtime/metrics/filter/MetricFilter;Lorg/apache/flink/metrics/reporter/MetricReporter;)Lorg/apache/flink/runtime/metrics/ReporterSetup;
-#<init>(Ljava/lang/String;Lorg/apache/flink/metrics/MetricConfig;Lorg/apache/flink/metrics/reporter/MetricReporter;Ljava/util/Map;)V

+###org/apache/flink/runtime/metrics/ThresholdMeter$ThresholdExceedException
@1.14.0
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/runtime/metrics/ThresholdMeter
@1.14.0
+#<init>(DLjava/time/Duration;)V
+#<init>(DLjava/time/Duration;Lorg/apache/flink/util/clock/Clock;)V
+#markEvent()V
+#markEvent(J)V
+#getRate()D
+#getCount()J
+#checkAgainstThreshold()V

+###org/apache/flink/runtime/metrics/NoOpMetricRegistry
@1.14.0
+#<init>()V
+#getDelimiter()C
+#getNumberReporters()I
+#register(Lorg/apache/flink/metrics/Metric;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;)V
+#unregister(Lorg/apache/flink/metrics/Metric;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/AbstractMetricGroup;)V
+#getScopeFormats()Lorg/apache/flink/runtime/metrics/scope/ScopeFormats;

+###org/apache/flink/runtime/metrics/MetricNames
@1.14.0
+#currentInputWatermarkName(I)Ljava/lang/String;

+###org/apache/flink/runtime/metrics/util/SystemResourcesCounter
@1.14.0
+#<init>(Lorg/apache/flink/api/common/time/Time;)V
+#run()V
+#shutdown()V
+#getCpuUser()D
+#getCpuNice()D
+#getCpuSys()D
+#getCpuIdle()D
+#getIOWait()D
+#getCpuIrq()D
+#getCpuSoftIrq()D
+#getCpuUsage()D
+#getCpuLoad1()D
+#getCpuLoad5()D
+#getCpuLoad15()D
+#getProcessorsCount()I
+#getCpuUsagePerProcessor(I)D
+#getNetworkInterfaceNames()[Ljava/lang/String;
+#getReceiveRatePerInterface(I)J
+#getSendRatePerInterface(I)J
@1.16.0
+#getCpuSteal()D

+###org/apache/flink/runtime/metrics/util/SystemResourcesMetricsInitializer
@1.14.0
+#<init>()V
+#instantiateSystemMetrics(Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/api/common/time/Time;)V

+###org/apache/flink/runtime/metrics/util/MetricUtils
@1.14.0
+#instantiateProcessMetricGroup(Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/Optional;)Lorg/apache/flink/runtime/metrics/groups/ProcessMetricGroup;
+#instantiateTaskManagerMetricGroup(Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/util/Optional;)Lorg/apache/flink/api/java/tuple/Tuple2;
+#instantiateStatusMetrics(Lorg/apache/flink/metrics/MetricGroup;)V
+#instantiateFlinkMemoryMetricGroup(Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/runtime/taskexecutor/slot/TaskSlotTable;Ljava/util/function/Supplier;)V
+#startRemoteMetricsRpcService(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Lorg/apache/flink/runtime/rpc/RpcSystem;)Lorg/apache/flink/runtime/rpc/RpcService;
+#startLocalMetricsRpcService(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/RpcSystem;)Lorg/apache/flink/runtime/rpc/RpcService;
@1.15.0
+#startRemoteMetricsRpcService(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/runtime/rpc/RpcSystem;)Lorg/apache/flink/runtime/rpc/RpcService;
-#startRemoteMetricsRpcService(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Lorg/apache/flink/runtime/rpc/RpcSystem;)Lorg/apache/flink/runtime/rpc/RpcService;

+###org/apache/flink/runtime/metrics/DescriptiveStatisticsHistogramStatistics
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/DescriptiveStatisticsHistogram$CircularDoubleArray;)V
+#getQuantile(D)D
+#getValues()[J
+#size()I
+#getMean()D
+#getStdDev()D
+#getMax()J
+#getMin()J

+###org/apache/flink/runtime/metrics/DescriptiveStatisticsHistogram
@1.14.0
+#<init>(I)V
+#update(J)V
+#getCount()J
+#getStatistics()Lorg/apache/flink/metrics/HistogramStatistics;

+###org/apache/flink/runtime/dispatcher/cleanup/LocallyCleanableResource
@1.15.0
+#localCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/cleanup/GloballyCleanableResource
@1.15.0
+#globalCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/cleanup/ResourceCleanerFactory
@1.15.0
+#createLocalResourceCleaner(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)Lorg/apache/flink/runtime/dispatcher/cleanup/ResourceCleaner;
+#createGlobalResourceCleaner(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)Lorg/apache/flink/runtime/dispatcher/cleanup/ResourceCleaner;

+###org/apache/flink/runtime/dispatcher/cleanup/CleanupRunnerFactory
@1.15.0
+#create(Lorg/apache/flink/runtime/jobmaster/JobResult;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;

+###org/apache/flink/runtime/dispatcher/cleanup/ResourceCleaner
@1.15.0
+#cleanupAsync(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/cleanup/CheckpointResourcesCleanupRunnerFactory
@1.15.0
+#values()[Lorg/apache/flink/runtime/dispatcher/cleanup/CheckpointResourcesCleanupRunnerFactory;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/dispatcher/cleanup/CheckpointResourcesCleanupRunnerFactory;
+#create(Lorg/apache/flink/runtime/jobmaster/JobResult;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/dispatcher/cleanup/CheckpointResourcesCleanupRunner;
+#create(Lorg/apache/flink/runtime/jobmaster/JobResult;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;

+###org/apache/flink/runtime/dispatcher/cleanup/CheckpointResourcesCleanupRunner
@1.15.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/JobResult;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/runtime/state/SharedStateRegistryFactory;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;J)V
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#start()V
+#getJobMasterGateway()Ljava/util/concurrent/CompletableFuture;
+#getResultFuture()Ljava/util/concurrent/CompletableFuture;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#cancel(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobStatus(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobDetails(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJob(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#isInitialized()Z

+###org/apache/flink/runtime/dispatcher/cleanup/CleanupRetryStrategyFactory
@1.15.0
+#values()[Lorg/apache/flink/runtime/dispatcher/cleanup/CleanupRetryStrategyFactory;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/dispatcher/cleanup/CleanupRetryStrategyFactory;
+#createRetryStrategy(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/util/concurrent/RetryStrategy;

+###org/apache/flink/runtime/dispatcher/cleanup/DispatcherResourceCleanerFactory
@1.15.0
+#<init>(Lorg/apache/flink/runtime/dispatcher/JobManagerRunnerRegistry;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;)V
+#<init>(Ljava/util/concurrent/Executor;Lorg/apache/flink/util/concurrent/RetryStrategy;Lorg/apache/flink/runtime/dispatcher/JobManagerRunnerRegistry;Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/metrics/groups/JobManagerMetricGroup;)V
+#createLocalResourceCleaner(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)Lorg/apache/flink/runtime/dispatcher/cleanup/ResourceCleaner;
+#createGlobalResourceCleaner(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)Lorg/apache/flink/runtime/dispatcher/cleanup/ResourceCleaner;

+###org/apache/flink/runtime/dispatcher/cleanup/DefaultResourceCleaner$Builder
@1.15.0
+#withPrioritizedCleanup(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/dispatcher/cleanup/DefaultResourceCleaner$Builder;
+#withRegularCleanup(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/dispatcher/cleanup/DefaultResourceCleaner$Builder;
+#build()Lorg/apache/flink/runtime/dispatcher/cleanup/DefaultResourceCleaner;

+###org/apache/flink/runtime/dispatcher/cleanup/DefaultResourceCleaner
@1.15.0
+#forLocallyCleanableResources(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Ljava/util/concurrent/Executor;Lorg/apache/flink/util/concurrent/RetryStrategy;)Lorg/apache/flink/runtime/dispatcher/cleanup/DefaultResourceCleaner$Builder;
+#forGloballyCleanableResources(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Ljava/util/concurrent/Executor;Lorg/apache/flink/util/concurrent/RetryStrategy;)Lorg/apache/flink/runtime/dispatcher/cleanup/DefaultResourceCleaner$Builder;
+#cleanupAsync(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/TriggerSavepointMode
@1.15.0
+#values()[Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;
+#isTerminalMode()Z

+###org/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore
@1.14.0
+#size()I
+#get(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;
+#put(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)V
+#getStoredJobsOverview()Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;
+#getAvailableJobDetails()Ljava/util/Collection;
+#getAvailableJobDetails(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;

+###org/apache/flink/runtime/dispatcher/runner/DispatcherRunner
@1.14.0
+#getShutDownFuture()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/runner/StoppedDispatcherLeaderProcess
@1.14.0
+#values()[Lorg/apache/flink/runtime/dispatcher/runner/StoppedDispatcherLeaderProcess;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/dispatcher/runner/StoppedDispatcherLeaderProcess;
+#start()V
+#getLeaderSessionId()Ljava/util/UUID;
+#getDispatcherGateway()Ljava/util/concurrent/CompletableFuture;
+#getLeaderAddressFuture()Ljava/util/concurrent/CompletableFuture;
+#getShutDownFuture()Ljava/util/concurrent/CompletableFuture;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/runner/DispatcherRunnerFactory
@1.14.0
+#createDispatcherRunner(Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherRunner;
@1.15.0
+#createDispatcherRunner(Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/jobmanager/JobPersistenceComponentFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherRunner;
-#createDispatcherRunner(Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherRunner;

+###org/apache/flink/runtime/dispatcher/runner/SessionDispatcherLeaderProcess
@1.14.0
+#onAddedJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#onRemovedJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#create(Ljava/util/UUID;Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayServiceFactory;Lorg/apache/flink/runtime/jobmanager/JobGraphStore;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/SessionDispatcherLeaderProcess;
@1.15.0
+#create(Ljava/util/UUID;Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayServiceFactory;Lorg/apache/flink/runtime/jobmanager/JobGraphStore;Lorg/apache/flink/runtime/highavailability/JobResultStore;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/SessionDispatcherLeaderProcess;
-#create(Ljava/util/UUID;Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayServiceFactory;Lorg/apache/flink/runtime/jobmanager/JobGraphStore;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/SessionDispatcherLeaderProcess;

+###org/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$State
@1.14.0
+#values()[Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$State;

+###org/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayServiceFactory
@1.14.0
+#create(Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;)Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayService;
@1.15.0
+#create(Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;Lorg/apache/flink/runtime/highavailability/JobResultStore;)Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayService;
-#create(Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;)Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayService;

+###org/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayService
@1.14.0
+#getGateway()Lorg/apache/flink/runtime/dispatcher/DispatcherGateway;
+#onRemovedJobGraph(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#getShutDownFuture()Ljava/util/concurrent/CompletableFuture;
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess
@1.14.0
+#start()V
+#getLeaderSessionId()Ljava/util/UUID;
+#getDispatcherGateway()Ljava/util/concurrent/CompletableFuture;
+#getLeaderAddressFuture()Ljava/util/concurrent/CompletableFuture;
+#getShutDownFuture()Ljava/util/concurrent/CompletableFuture;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactoryFactory
@1.14.0
+#createFactory(Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory;
@1.15.0
+#createFactory(Lorg/apache/flink/runtime/jobmanager/JobPersistenceComponentFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory;
-#createFactory(Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory;

+###org/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory
@1.14.0
+#create(Ljava/util/UUID;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcess;

+###org/apache/flink/runtime/dispatcher/runner/JobDispatcherLeaderProcessFactory
@1.14.0
+#create(Ljava/util/UUID;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcess;

+###org/apache/flink/runtime/dispatcher/runner/JobDispatcherLeaderProcessFactoryFactory
@1.14.0
+#createFactory(Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory;
+#create(Lorg/apache/flink/runtime/entrypoint/component/JobGraphRetriever;)Lorg/apache/flink/runtime/dispatcher/runner/JobDispatcherLeaderProcessFactoryFactory;
@1.15.0
+#createFactory(Lorg/apache/flink/runtime/jobmanager/JobPersistenceComponentFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/JobDispatcherLeaderProcessFactory;
+#createFactory(Lorg/apache/flink/runtime/jobmanager/JobPersistenceComponentFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory;
-#createFactory(Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory;

+###org/apache/flink/runtime/dispatcher/runner/DefaultDispatcherGatewayService
@1.14.0
+#getGateway()Lorg/apache/flink/runtime/dispatcher/DispatcherGateway;
+#onRemovedJobGraph(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#getShutDownFuture()Ljava/util/concurrent/CompletableFuture;
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#from(Lorg/apache/flink/runtime/dispatcher/Dispatcher;)Lorg/apache/flink/runtime/dispatcher/runner/DefaultDispatcherGatewayService;

+###org/apache/flink/runtime/dispatcher/runner/DefaultDispatcherRunner
@1.14.0
+#getShutDownFuture()Ljava/util/concurrent/CompletableFuture;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#grantLeadership(Ljava/util/UUID;)V
+#revokeLeadership()V
+#handleError(Ljava/lang/Exception;)V
+#create(Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherRunner;

+###org/apache/flink/runtime/dispatcher/runner/JobDispatcherLeaderProcess
@1.14.0

+###org/apache/flink/runtime/dispatcher/runner/SessionDispatcherLeaderProcessFactory
@1.14.0
+#<init>(Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayServiceFactory;Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V
+#create(Ljava/util/UUID;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcess;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayServiceFactory;Lorg/apache/flink/runtime/jobmanager/JobPersistenceComponentFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V
-#<init>(Lorg/apache/flink/runtime/dispatcher/runner/AbstractDispatcherLeaderProcess$DispatcherGatewayServiceFactory;Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V

+###org/apache/flink/runtime/dispatcher/runner/SessionDispatcherLeaderProcessFactoryFactory
@1.14.0
+#createFactory(Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory;
+#create(Lorg/apache/flink/runtime/dispatcher/DispatcherFactory;)Lorg/apache/flink/runtime/dispatcher/runner/SessionDispatcherLeaderProcessFactoryFactory;
@1.15.0
+#createFactory(Lorg/apache/flink/runtime/jobmanager/JobPersistenceComponentFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory;
-#createFactory(Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactory;

+###org/apache/flink/runtime/dispatcher/runner/DefaultDispatcherRunnerFactory
@1.14.0
+#<init>(Lorg/apache/flink/runtime/dispatcher/runner/DispatcherLeaderProcessFactoryFactory;)V
+#createDispatcherRunner(Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherRunner;
+#createSessionRunner(Lorg/apache/flink/runtime/dispatcher/DispatcherFactory;)Lorg/apache/flink/runtime/dispatcher/runner/DefaultDispatcherRunnerFactory;
+#createJobRunner(Lorg/apache/flink/runtime/entrypoint/component/JobGraphRetriever;)Lorg/apache/flink/runtime/dispatcher/runner/DefaultDispatcherRunnerFactory;
@1.15.0
+#createDispatcherRunner(Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/jobmanager/JobPersistenceComponentFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherRunner;
-#createDispatcherRunner(Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/jobmanager/JobGraphStoreFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;)Lorg/apache/flink/runtime/dispatcher/runner/DispatcherRunner;

+###org/apache/flink/runtime/dispatcher/DispatcherOperationCaches
@1.15.0
+#<init>()V
+#<init>(Ljava/time/Duration;)V
+#getSavepointTriggerCache()Lorg/apache/flink/runtime/rest/handler/async/CompletedOperationCache;
+#shutdownCaches()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/JobDispatcherFactory
@1.14.0
+#values()[Lorg/apache/flink/runtime/dispatcher/JobDispatcherFactory;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/dispatcher/JobDispatcherFactory;
+#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;)Lorg/apache/flink/runtime/dispatcher/MiniDispatcher;
+#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;)Lorg/apache/flink/runtime/dispatcher/Dispatcher;
@1.15.0
+#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobPersistenceComponents;)Lorg/apache/flink/runtime/dispatcher/MiniDispatcher;
+#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobPersistenceComponents;)Lorg/apache/flink/runtime/dispatcher/Dispatcher;
-#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;)Lorg/apache/flink/runtime/dispatcher/MiniDispatcher;
-#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;)Lorg/apache/flink/runtime/dispatcher/Dispatcher;

+###org/apache/flink/runtime/dispatcher/DispatcherFactory
@1.14.0
+#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;)Lorg/apache/flink/runtime/dispatcher/Dispatcher;
@1.15.0
+#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobPersistenceComponents;)Lorg/apache/flink/runtime/dispatcher/Dispatcher;
-#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;)Lorg/apache/flink/runtime/dispatcher/Dispatcher;

+###org/apache/flink/runtime/dispatcher/DispatcherId
@1.14.0
+#toUUID()Ljava/util/UUID;
+#generate()Lorg/apache/flink/runtime/dispatcher/DispatcherId;
+#fromUuid(Ljava/util/UUID;)Lorg/apache/flink/runtime/dispatcher/DispatcherId;

+###org/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory
@1.14.0
+#create(Lorg/apache/flink/runtime/dispatcher/DispatcherGateway;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrap;

+###org/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobPersistenceComponents
@1.15.0
+#getJobGraphWriter()Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;
+#getJobResultStore()Lorg/apache/flink/runtime/highavailability/JobResultStore;
+#from(Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;Lorg/apache/flink/runtime/highavailability/JobResultStore;)Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobPersistenceComponents;

+###org/apache/flink/runtime/dispatcher/PartialDispatcherServices
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/dispatcher/JobManagerMetricGroupFactory;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/dispatcher/HistoryServerArchivist;Ljava/lang/String;Ljava/util/concurrent/Executor;)V
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getHighAvailabilityServices()Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;
+#getResourceManagerGatewayRetriever()Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;
+#getBlobServer()Lorg/apache/flink/runtime/blob/BlobServer;
+#getHeartbeatServices()Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;
+#getJobManagerMetricGroupFactory()Lorg/apache/flink/runtime/dispatcher/JobManagerMetricGroupFactory;
+#getArchivedExecutionGraphStore()Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;
+#getFatalErrorHandler()Lorg/apache/flink/runtime/rpc/FatalErrorHandler;
+#getHistoryServerArchivist()Lorg/apache/flink/runtime/dispatcher/HistoryServerArchivist;
+#getMetricQueryServiceAddress()Ljava/lang/String;
+#getIoExecutor()Ljava/util/concurrent/Executor;
@1.15.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/dispatcher/JobManagerMetricGroupFactory;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/dispatcher/HistoryServerArchivist;Ljava/lang/String;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/dispatcher/DispatcherOperationCaches;)V
+#getOperationCaches()Lorg/apache/flink/runtime/dispatcher/DispatcherOperationCaches;
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/dispatcher/JobManagerMetricGroupFactory;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/dispatcher/HistoryServerArchivist;Ljava/lang/String;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/dispatcher/MiniDispatcher
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/entrypoint/ClusterEntrypoint$ExecutionMode;)V
+#submitJob(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobResult(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#cancelJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/jobmaster/JobResult;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/entrypoint/ClusterEntrypoint$ExecutionMode;)V
-#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/entrypoint/ClusterEntrypoint$ExecutionMode;)V
@1.15.1
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/jobmaster/JobResult;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/JobManagerRunnerRegistry;Lorg/apache/flink/runtime/dispatcher/cleanup/ResourceCleanerFactory;Lorg/apache/flink/runtime/entrypoint/ClusterEntrypoint$ExecutionMode;)V

+###org/apache/flink/runtime/dispatcher/Dispatcher$ExecutionType
@1.14.0
+#values()[Lorg/apache/flink/runtime/dispatcher/Dispatcher$ExecutionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/dispatcher/Dispatcher$ExecutionType;

+###org/apache/flink/runtime/dispatcher/Dispatcher
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;)V
+#getShutDownFuture()Ljava/util/concurrent/CompletableFuture;
+#onStart()V
+#onStop()Ljava/util/concurrent/CompletableFuture;
+#submitJob(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#listJobs(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#disposeSavepoint(Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#cancelJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestClusterOverview(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestMultipleJobDetails(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobStatus(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestExecutionGraphInfo(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobResult(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestMetricQueryServiceAddresses(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerMetricQueryServiceAddresses(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#getBlobServerPort(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#shutDownCluster()Ljava/util/concurrent/CompletableFuture;
+#shutDownCluster(Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;)Ljava/util/concurrent/CompletableFuture;
+#deliverCoordinationRequestToCoordinator(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#onRemovedJobGraph(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;)V
+#submitFailedJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
+#requestThreadDump(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Lorg/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepointAndGetLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#getTriggeredSavepointStatus(Lorg/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Lorg/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepointAndGetLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;)V
-#triggerSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#stopWithSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/DispatcherGateway
@1.14.0
+#submitJob(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#listJobs(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#getBlobServerPort(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#shutDownCluster(Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#submitFailedJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepointAndGetLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepointAndGetLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/DispatcherBootstrap
@1.14.0
+#stop()V

+###org/apache/flink/runtime/dispatcher/JobManagerMetricGroupFactory
@1.14.0
+#create()Lorg/apache/flink/runtime/metrics/groups/JobManagerMetricGroup;

+###org/apache/flink/runtime/dispatcher/HistoryServerArchivist
@1.14.0
+#archiveExecutionGraph(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)Ljava/util/concurrent/CompletableFuture;
+#createHistoryServerArchivist(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/webmonitor/history/JsonArchivist;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/dispatcher/HistoryServerArchivist;

+###org/apache/flink/runtime/dispatcher/DispatcherServices
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/dispatcher/HistoryServerArchivist;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/JobManagerMetricGroup;Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;Lorg/apache/flink/runtime/dispatcher/JobManagerRunnerFactory;Ljava/util/concurrent/Executor;)V
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getHighAvailabilityServices()Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;
+#getResourceManagerGatewayRetriever()Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;
+#getBlobServer()Lorg/apache/flink/runtime/blob/BlobServer;
+#getHeartbeatServices()Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;
+#getJobManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/JobManagerMetricGroup;
+#getArchivedExecutionGraphStore()Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;
+#getFatalErrorHandler()Lorg/apache/flink/runtime/rpc/FatalErrorHandler;
+#getHistoryServerArchivist()Lorg/apache/flink/runtime/dispatcher/HistoryServerArchivist;
+#getMetricQueryServiceAddress()Ljava/lang/String;
+#getJobGraphWriter()Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;
+#getIoExecutor()Ljava/util/concurrent/Executor;
+#from(Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;Lorg/apache/flink/runtime/dispatcher/JobManagerRunnerFactory;)Lorg/apache/flink/runtime/dispatcher/DispatcherServices;
@1.15.0
+#getOperationCaches()Lorg/apache/flink/runtime/dispatcher/DispatcherOperationCaches;
+#getJobResultStore()Lorg/apache/flink/runtime/highavailability/JobResultStore;
+#from(Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobPersistenceComponents;Lorg/apache/flink/runtime/dispatcher/JobManagerRunnerFactory;Lorg/apache/flink/runtime/dispatcher/cleanup/CleanupRunnerFactory;)Lorg/apache/flink/runtime/dispatcher/DispatcherServices;
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/dispatcher/HistoryServerArchivist;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/JobManagerMetricGroup;Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;Lorg/apache/flink/runtime/dispatcher/JobManagerRunnerFactory;Ljava/util/concurrent/Executor;)V
-#from(Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;Lorg/apache/flink/runtime/dispatcher/JobManagerRunnerFactory;)Lorg/apache/flink/runtime/dispatcher/DispatcherServices;

+###org/apache/flink/runtime/dispatcher/JobManagerRunnerRegistry
@1.15.0
+#isRegistered(Lorg/apache/flink/api/common/JobID;)Z
+#register(Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;)V
+#get(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;
+#size()I
+#getRunningJobIds()Ljava/util/Set;
+#getJobManagerRunners()Ljava/util/Collection;
+#unregister(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;

+###org/apache/flink/runtime/dispatcher/OnMainThreadJobManagerRunnerRegistry
@1.15.0
+#<init>(Lorg/apache/flink/runtime/dispatcher/JobManagerRunnerRegistry;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#isRegistered(Lorg/apache/flink/api/common/JobID;)Z
+#register(Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;)V
+#get(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;
+#size()I
+#getRunningJobIds()Ljava/util/Set;
+#getJobManagerRunners()Ljava/util/Collection;
+#localCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#unregister(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;
+#getWrappedDelegate()Lorg/apache/flink/runtime/dispatcher/JobManagerRunnerRegistry;
+#getWrappedDelegate()Ljava/lang/Object;

+###org/apache/flink/runtime/dispatcher/JobManagerRunnerFactory
@1.14.0
+#createJobManagerRunner(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/jobmaster/JobManagerSharedServices;Lorg/apache/flink/runtime/jobmaster/factories/JobManagerJobMetricGroupFactory;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;J)Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;

+###org/apache/flink/runtime/dispatcher/DispatcherCachedOperationsHandler
@1.15.0
+#triggerSavepoint(Lorg/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Lorg/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#getSavepointStatus(Lorg/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/TriggerSavepointFunction
@1.15.0
+#apply(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/JobCancellationFailedException
@1.15.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/dispatcher/StandaloneDispatcher
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;)V
@1.15.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;)V
-#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/DispatcherServices;)V

+###org/apache/flink/runtime/dispatcher/ConfigurationNotAllowedMessage
@1.15.0
+#ofConfigurationKeyAndValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#ofConfigurationRemoved(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#ofConfigurationChange(Ljava/lang/String;Lorg/apache/flink/shaded/guava30/com/google/common/collect/MapDifference$ValueDifference;)Ljava/lang/String;
+#ofConfigurationObject(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/flink/runtime/dispatcher/UnavailableDispatcherOperationException
@1.14.0
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/runtime/dispatcher/DispatcherException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/dispatcher/DefaultJobManagerRunnerRegistry
@1.15.0
+#<init>(I)V
+#isRegistered(Lorg/apache/flink/api/common/JobID;)Z
+#register(Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;)V
+#get(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;
+#size()I
+#getRunningJobIds()Ljava/util/Set;
+#getJobManagerRunners()Ljava/util/Collection;
+#localCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#unregister(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;

+###org/apache/flink/runtime/dispatcher/DispatcherRestEndpoint
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rest/handler/RestHandlerConfiguration;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/TransientBlobService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V

+###org/apache/flink/runtime/dispatcher/VoidHistoryServerArchivist
@1.14.0
+#values()[Lorg/apache/flink/runtime/dispatcher/VoidHistoryServerArchivist;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/dispatcher/VoidHistoryServerArchivist;
+#archiveExecutionGraph(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/dispatcher/UnknownOperationKeyException
@1.15.0
+#<init>(Ljava/lang/Object;)V

+###org/apache/flink/runtime/dispatcher/OperationAlreadyFailedException
@1.15.0
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/dispatcher/FileExecutionGraphInfoStore
@1.14.0
+#<init>(Ljava/io/File;Lorg/apache/flink/api/common/time/Time;IJLorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/shaded/guava30/com/google/common/base/Ticker;)V
+#size()I
+#get(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;
+#put(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)V
+#getStoredJobsOverview()Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;
+#getAvailableJobDetails()Ljava/util/Collection;
+#getAvailableJobDetails(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#close()V

+###org/apache/flink/runtime/dispatcher/NoOpDispatcherBootstrap
@1.14.0
+#<init>()V
+#stop()V

+###org/apache/flink/runtime/dispatcher/SessionDispatcherFactory
@1.14.0
+#values()[Lorg/apache/flink/runtime/dispatcher/SessionDispatcherFactory;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/dispatcher/SessionDispatcherFactory;
+#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;)Lorg/apache/flink/runtime/dispatcher/StandaloneDispatcher;
+#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;)Lorg/apache/flink/runtime/dispatcher/Dispatcher;
@1.15.0
+#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobPersistenceComponents;)Lorg/apache/flink/runtime/dispatcher/StandaloneDispatcher;
+#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobPersistenceComponents;)Lorg/apache/flink/runtime/dispatcher/Dispatcher;
-#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;)Lorg/apache/flink/runtime/dispatcher/StandaloneDispatcher;
-#createDispatcher(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/dispatcher/DispatcherId;Ljava/util/Collection;Lorg/apache/flink/runtime/dispatcher/DispatcherBootstrapFactory;Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;)Lorg/apache/flink/runtime/dispatcher/Dispatcher;

+###org/apache/flink/runtime/dispatcher/JobMasterServiceLeadershipRunnerFactory
@1.14.0
+#values()[Lorg/apache/flink/runtime/dispatcher/JobMasterServiceLeadershipRunnerFactory;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/dispatcher/JobMasterServiceLeadershipRunnerFactory;
+#createJobManagerRunner(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/jobmaster/JobManagerSharedServices;Lorg/apache/flink/runtime/jobmaster/factories/JobManagerJobMetricGroupFactory;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;J)Lorg/apache/flink/runtime/jobmaster/JobManagerRunner;

+###org/apache/flink/runtime/dispatcher/MemoryExecutionGraphInfoStore
@1.14.0
+#<init>()V
+#size()I
+#get(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;
+#put(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)V
+#getStoredJobsOverview()Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;
+#getAvailableJobDetails()Ljava/util/Collection;
+#getAvailableJobDetails(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#close()V
@1.15.0
+#<init>(Lorg/apache/flink/api/common/time/Time;ILorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/shaded/guava30/com/google/common/base/Ticker;)V

+###org/apache/flink/runtime/dispatcher/SingleJobJobGraphStore
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#start(Lorg/apache/flink/runtime/jobmanager/JobGraphStore$JobGraphListener;)V
+#stop()V
+#recoverJobGraph(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#putJobGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#releaseJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#getJobIds()Ljava/util/Collection;
@1.15.0
-#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
-#releaseJobGraph(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/jobgraph/OperatorID
@1.14.0
+#<init>()V
+#<init>([B)V
+#<init>(JJ)V
+#fromJobVertexID(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/jobgraph/OperatorID;

+###org/apache/flink/runtime/jobgraph/JobVertexID
@0.6-hadoop2-incubating
+#<init>()V
@0.7.0-hadoop2-incubating
+#<init>([B)V
+#fromHexString(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/JobVertexID;
@1.14.0
+#<init>(JJ)V
+#writeTo(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)V
+#fromByteBuf(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/jobgraph/JobVertexID;

+###org/apache/flink/runtime/jobgraph/IntermediateResultPartitionID
@0.9.0-milestone-1
+#<init>()V
+#<init>(JJ)V
+#writeTo(Lio/netty/buffer/ByteBuf;)V
+#fromByteBuf(Lio/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;I)V
+#getPartitionNumber()I
+#getIntermediateDataSetID()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#writeTo(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)V
+#fromByteBuf(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;
+#getByteBufLength()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
-#<init>(JJ)V
-#writeTo(Lio/netty/buffer/ByteBuf;)V
-#fromByteBuf(Lio/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;

+###org/apache/flink/runtime/jobgraph/IntermediateDataSetID
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/AbstractID;)V
+#<init>(Ljava/util/UUID;)V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/AbstractID;)V
-#<init>(Lorg/apache/flink/runtime/AbstractID;)V
@1.14.0
+#writeTo(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)V
+#fromByteBuf(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;

+###org/apache/flink/runtime/jobgraph/RestoreMode
@1.15.0
+#values()[Lorg/apache/flink/runtime/jobgraph/RestoreMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/RestoreMode;
+#getDescription()Lorg/apache/flink/configuration/description/InlineElement;

+###org/apache/flink/runtime/jobgraph/IntermediateDataSet
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#getId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getProducer()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#getConsumers()Ljava/util/List;
+#addConsumer(Lorg/apache/flink/runtime/jobgraph/JobEdge;)V
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#getResultType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
@0.9.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#getProducer()Lorg/apache/flink/runtime/jobgraph/JobVertex;
-#<init>(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#getProducer()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
@1.14.0
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
@1.15.0
+#getConsumer()Lorg/apache/flink/runtime/jobgraph/JobEdge;
-#getConsumers()Ljava/util/List;
@1.16.0
+#getConsumers()Ljava/util/List;
+#isBroadcast()Z
+#getDistributionPattern()Lorg/apache/flink/runtime/jobgraph/DistributionPattern;
-#getConsumer()Lorg/apache/flink/runtime/jobgraph/JobEdge;

+###org/apache/flink/runtime/jobgraph/DistributionPattern
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/jobgraph/DistributionPattern;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/DistributionPattern;

+###org/apache/flink/runtime/jobgraph/JobVertex
@0.9.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
+#getID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getNumberOfProducedIntermediateDataSets()I
+#getNumberOfInputs()I
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#setInvokableClass(Ljava/lang/Class;)V
+#getInvokableClassName()Ljava/lang/String;
+#getInvokableClass(Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#getParallelism()I
+#setParallelism(I)V
+#getInputSplitSource()Lorg/apache/flink/core/io/InputSplitSource;
+#setInputSplitSource(Lorg/apache/flink/core/io/InputSplitSource;)V
+#getProducedDataSets()Ljava/util/List;
+#getInputs()Ljava/util/List;
+#setSlotSharingGroup(Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup;)V
+#getSlotSharingGroup()Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup;
+#setStrictlyCoLocatedWith(Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#getCoLocationGroup()Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationGroup;
+#updateCoLocationGroup(Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationGroup;)V
+#createAndAddResultDataSet(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
+#createAndAddResultDataSet(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
+#connectDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)V
+#connectIdInput(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#isInputVertex()Z
+#isOutputVertex()Z
+#hasNoConnectedInputs()Z
+#initializeOnMaster(Ljava/lang/ClassLoader;)V
+#finalizeOnMaster(Ljava/lang/ClassLoader;)V
+#toString()Ljava/lang/String;
@0.10.0
+#connectDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)Lorg/apache/flink/runtime/jobgraph/JobEdge;
+#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)Lorg/apache/flink/runtime/jobgraph/JobEdge;
+#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/flink/runtime/jobgraph/JobEdge;
+#getOperatorName()Ljava/lang/String;
+#setOperatorName(Ljava/lang/String;)V
+#getOperatorDescription()Ljava/lang/String;
+#setOperatorDescription(Ljava/lang/String;)V
+#setOperatorPrettyName(Ljava/lang/String;)V
+#getOperatorPrettyName()Ljava/lang/String;
+#getResultOptimizerProperties()Ljava/lang/String;
+#setResultOptimizerProperties(Ljava/lang/String;)V
-#connectDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
-#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
-#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)V
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/util/List;)V
+#getOperatorIDs()Ljava/util/List;
+#getMaxParallelism()I
+#setMaxParallelism(I)V
+#getMinResources()Lorg/apache/flink/api/common/operators/ResourceSpec;
+#getPreferredResources()Lorg/apache/flink/api/common/operators/ResourceSpec;
+#setResources(Lorg/apache/flink/api/common/operators/ResourceSpec;Lorg/apache/flink/api/common/operators/ResourceSpec;)V
+#getOperatorCoordinators()Ljava/util/List;
+#addOperatorCoordinator(Lorg/apache/flink/util/SerializedValue;)V
+#updateCoLocationGroup(Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationGroupImpl;)V
+#isStoppable()Z
-#updateCoLocationGroup(Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationGroup;)V
-#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)Lorg/apache/flink/runtime/jobgraph/JobEdge;
-#connectIdInput(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
@1.15.0
-#createAndAddResultDataSet(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
-#connectDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)Lorg/apache/flink/runtime/jobgraph/JobEdge;
@1.15.3
+#initializeOnMaster(Lorg/apache/flink/runtime/jobgraph/JobVertex$InitializeOnMasterContext;)V
+#finalizeOnMaster(Lorg/apache/flink/runtime/jobgraph/JobVertex$InitializeOnMasterContext;)V
-#initializeOnMaster(Ljava/lang/ClassLoader;)V
-#finalizeOnMaster(Ljava/lang/ClassLoader;)V
@1.16.0
+#getOrCreateResultDataSet(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
+#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;Z)Lorg/apache/flink/runtime/jobgraph/JobEdge;
+#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Z)Lorg/apache/flink/runtime/jobgraph/JobEdge;
+#markContainsSources()V
+#containsSources()Z
+#markContainsSinks()V
+#containsSinks()Z
+#addIntermediateDataSetIdToConsume(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)V
+#getIntermediateDataSetIdsToConsume()Ljava/util/List;
-#createAndAddResultDataSet(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;

+###org/apache/flink/runtime/jobgraph/JobEdge
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/io/network/channels/ChannelType;ILorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#getConnectedVertex()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#getIndexOfInputGate()I
+#getDistributionPattern()Lorg/apache/flink/runtime/jobgraph/DistributionPattern;
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#getSource()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
+#getTarget()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#getSourceId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#isIdReference()Z
+#connecDataSet(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;)V
+#toString()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/io/network/channels/ChannelType;ILorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
-#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
-#getConnectedVertex()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
-#getIndexOfInputGate()I
@0.9.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#getTarget()Lorg/apache/flink/runtime/jobgraph/JobVertex;
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
-#getTarget()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
@0.10.0
+#getShipStrategyName()Ljava/lang/String;
+#setShipStrategyName(Ljava/lang/String;)V
+#getPreProcessingOperationName()Ljava/lang/String;
+#setPreProcessingOperationName(Ljava/lang/String;)V
+#getOperatorLevelCachingDescription()Ljava/lang/String;
+#setOperatorLevelCachingDescription(Ljava/lang/String;)V
@1.14.0
+#getDownstreamSubtaskStateMapper()Lorg/apache/flink/runtime/io/network/api/writer/SubtaskStateMapper;
+#setDownstreamSubtaskStateMapper(Lorg/apache/flink/runtime/io/network/api/writer/SubtaskStateMapper;)V
+#getUpstreamSubtaskStateMapper()Lorg/apache/flink/runtime/io/network/api/writer/SubtaskStateMapper;
+#setUpstreamSubtaskStateMapper(Lorg/apache/flink/runtime/io/network/api/writer/SubtaskStateMapper;)V
-#connecDataSet(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;)V
@1.15.0
+#isBroadcast()Z
+#setBroadcast(Z)V
+#isForward()Z
+#setForward(Z)V
@1.16.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;Z)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
-#isIdReference()Z
-#setBroadcast(Z)V

+###org/apache/flink/runtime/jobgraph/tasks/TaskInvokable
@1.14.0
+#invoke()V
+#restore()V
+#cleanUp(Ljava/lang/Throwable;)V
+#cancel()Ljava/util/concurrent/Future;
+#isUsingNonBlockingInput()Z
+#maybeInterruptOnCancel(Ljava/lang/Thread;Ljava/lang/String;Ljava/lang/Long;)V
@1.15.0
+#cancel()V
-#cancel()Ljava/util/concurrent/Future;

+###org/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder
@1.14.0
+#<init>()V
+#build()Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;
+#setCheckpointInterval(J)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;
+#setCheckpointTimeout(J)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;
+#setMinPauseBetweenCheckpoints(J)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;
+#setMaxConcurrentCheckpoints(I)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;
+#setCheckpointRetentionPolicy(Lorg/apache/flink/runtime/checkpoint/CheckpointRetentionPolicy;)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;
+#setExactlyOnce(Z)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;
+#setTolerableCheckpointFailureNumber(I)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;
+#setUnalignedCheckpointsEnabled(Z)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;
+#setAlignedCheckpointTimeout(J)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;
+#setCheckpointIdOfIgnoredInFlightData(J)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;
+#setEnableCheckpointsAfterTasksFinish(Z)Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;

+###org/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration
@1.14.0
+#<init>(JJJILorg/apache/flink/runtime/checkpoint/CheckpointRetentionPolicy;ZZIJ)V[deprecated]
+#getCheckpointInterval()J
+#getCheckpointTimeout()J
+#getMinPauseBetweenCheckpoints()J
+#getMaxConcurrentCheckpoints()I
+#getCheckpointRetentionPolicy()Lorg/apache/flink/runtime/checkpoint/CheckpointRetentionPolicy;
+#isExactlyOnce()Z
+#getTolerableCheckpointFailureNumber()I
+#isUnalignedCheckpointsEnabled()Z
+#getAlignedCheckpointTimeout()J
+#getCheckpointIdOfIgnoredInFlightData()J
+#isEnableCheckpointsAfterTasksFinish()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#builder()Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration$CheckpointCoordinatorConfigurationBuilder;

+###org/apache/flink/runtime/jobgraph/tasks/JobCheckpointingSettings
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Lorg/apache/flink/util/SerializedValue;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/util/TernaryBoolean;Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/util/SerializedValue;)V
+#getCheckpointCoordinatorConfiguration()Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;
+#getDefaultStateBackend()Lorg/apache/flink/util/SerializedValue;
+#isChangelogStateBackendEnabled()Lorg/apache/flink/util/TernaryBoolean;
+#getDefaultCheckpointStorage()Lorg/apache/flink/util/SerializedValue;
+#getMasterHooks()Lorg/apache/flink/util/SerializedValue;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobgraph/tasks/InputSplitProvider
@0.6-hadoop2-incubating
+#getNextInputSplit()Lorg/apache/flink/core/io/InputSplit;
@1.14.0
+#getNextInputSplit(Ljava/lang/ClassLoader;)Lorg/apache/flink/core/io/InputSplit;
-#getNextInputSplit()Lorg/apache/flink/core/io/InputSplit;

+###org/apache/flink/runtime/jobgraph/tasks/TaskOperatorEventGateway
@1.14.0
+#sendOperatorEventToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)V
@1.15.0
+#sendRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobgraph/tasks/InputSplitProviderException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/jobgraph/tasks/AbstractInvokable
@0.6-hadoop2-incubating
+#<init>()V
+#registerInputOutput()V
+#invoke()V
+#setEnvironment(Lorg/apache/flink/runtime/execution/Environment;)V
+#getEnvironment()Lorg/apache/flink/runtime/execution/Environment;
+#getCurrentNumberOfSubtasks()I
+#getIndexInSubtaskGroup()I
+#getTaskConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
+#userThreadStarted(Ljava/lang/Thread;)V
+#userThreadFinished(Ljava/lang/Thread;)V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getUserCodeClassLoader()Ljava/lang/ClassLoader;
-#userThreadStarted(Ljava/lang/Thread;)V
-#userThreadFinished(Ljava/lang/Thread;)V
@0.9.0-milestone-1
+#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/execution/Environment;)V
+#cancel()Ljava/util/concurrent/Future;
+#cleanUp(Ljava/lang/Throwable;)V
+#maybeInterruptOnCancel(Ljava/lang/Thread;Ljava/lang/String;Ljava/lang/Long;)V
+#triggerCheckpointAsync(Lorg/apache/flink/runtime/checkpoint/CheckpointMetaData;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpointOnBarrier(Lorg/apache/flink/runtime/checkpoint/CheckpointMetaData;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;)V
+#abortCheckpointOnBarrier(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V
+#notifyCheckpointCompleteAsync(J)Ljava/util/concurrent/Future;
+#notifyCheckpointAbortAsync(JJ)Ljava/util/concurrent/Future;
+#dispatchOperatorEvent(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)V
+#restore()V
+#isUsingNonBlockingInput()Z
-#<init>()V
-#registerInputOutput()V
-#setEnvironment(Lorg/apache/flink/runtime/execution/Environment;)V
-#cancel()V
@1.15.0
+#cancel()V
+#notifyCheckpointSubsumedAsync(J)Ljava/util/concurrent/Future;
-#cancel()Ljava/util/concurrent/Future;

+###org/apache/flink/runtime/jobgraph/tasks/CheckpointableTask
@1.14.0
+#triggerCheckpointAsync(Lorg/apache/flink/runtime/checkpoint/CheckpointMetaData;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpointOnBarrier(Lorg/apache/flink/runtime/checkpoint/CheckpointMetaData;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;)V
+#notifyCheckpointCompleteAsync(J)Ljava/util/concurrent/Future;
+#notifyCheckpointAbortAsync(JJ)Ljava/util/concurrent/Future;
+#abortCheckpointOnBarrier(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V
@1.15.0
+#notifyCheckpointSubsumedAsync(J)Ljava/util/concurrent/Future;

+###org/apache/flink/runtime/jobgraph/tasks/CoordinatedTask
@1.14.0
+#dispatchOperatorEvent(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)V

+###org/apache/flink/runtime/jobgraph/JobType
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobgraph/JobType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/JobType;

+###org/apache/flink/runtime/jobgraph/SavepointRestoreSettings
@1.14.0
+#restoreSavepoint()Z
+#getRestorePath()Ljava/lang/String;
+#allowNonRestoredState()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#none()Lorg/apache/flink/runtime/jobgraph/SavepointRestoreSettings;
+#forPath(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/SavepointRestoreSettings;
+#forPath(Ljava/lang/String;Z)Lorg/apache/flink/runtime/jobgraph/SavepointRestoreSettings;
+#toConfiguration(Lorg/apache/flink/runtime/jobgraph/SavepointRestoreSettings;Lorg/apache/flink/configuration/Configuration;)V
+#fromConfiguration(Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/runtime/jobgraph/SavepointRestoreSettings;
@1.15.0
+#getRestoreMode()Lorg/apache/flink/runtime/jobgraph/RestoreMode;
+#forPath(Ljava/lang/String;ZLorg/apache/flink/runtime/jobgraph/RestoreMode;)Lorg/apache/flink/runtime/jobgraph/SavepointRestoreSettings;

+###org/apache/flink/runtime/jobgraph/JobGraph
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
+#addVertex(Lorg/apache/flink/runtime/jobgraph/AbstractJobInputVertex;)V
+#addVertex(Lorg/apache/flink/runtime/jobgraph/JobTaskVertex;)V
+#addVertex(Lorg/apache/flink/runtime/jobgraph/AbstractJobOutputVertex;)V
+#getNumberOfInputVertices()I
+#getNumberOfOutputVertices()I
+#getNumberOfTaskVertices()I
+#getInputVertices()Ljava/util/Iterator;
+#getOutputVertices()Ljava/util/Iterator;
+#getTaskVertices()Ljava/util/Iterator;
+#getNumberOfVertices()I
+#getAllReachableJobVertices()[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#getAllJobVertices()[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#findVertexByID(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#isWeaklyConnected()Z
+#isAcyclic()Z
+#areVertexDegreesCorrect()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#addJar(Lorg/apache/flink/core/fs/Path;)V
+#getJars()[Lorg/apache/flink/core/fs/Path;
+#findVertexWithNullEdges()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#isInstanceDependencyChainAcyclic()Z
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;)V
+#<init>([Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#<init>(Ljava/lang/String;[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#setAllowQueuedScheduling(Z)V
+#getAllowQueuedScheduling()Z
+#addVertex(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#getVertices()Ljava/lang/Iterable;
+#getVerticesAsArray()[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#getVerticesSortedTopologicallyFromSources()Ljava/util/List;
+#getUserJarBlobKeys()Ljava/util/List;
+#uploadRequiredJarFiles(Ljava/net/InetSocketAddress;)V
-#addVertex(Lorg/apache/flink/runtime/jobgraph/AbstractJobInputVertex;)V
-#addVertex(Lorg/apache/flink/runtime/jobgraph/JobTaskVertex;)V
-#addVertex(Lorg/apache/flink/runtime/jobgraph/AbstractJobOutputVertex;)V
-#getNumberOfInputVertices()I
-#getNumberOfOutputVertices()I
-#getNumberOfTaskVertices()I
-#getInputVertices()Ljava/util/Iterator;
-#getOutputVertices()Ljava/util/Iterator;
-#getTaskVertices()Ljava/util/Iterator;
-#getAllReachableJobVertices()[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
-#getAllJobVertices()[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
-#isWeaklyConnected()Z
-#isAcyclic()Z
-#areVertexDegreesCorrect()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
-#getJars()[Lorg/apache/flink/core/fs/Path;
-#findVertexWithNullEdges()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
-#isInstanceDependencyChainAcyclic()Z
@0.8.0
+#setNumberOfExecutionRetries(I)V
+#getNumberOfExecutionRetries()I
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#setScheduleMode(Lorg/apache/flink/runtime/jobgraph/ScheduleMode;)V
+#getScheduleMode()Lorg/apache/flink/runtime/jobgraph/ScheduleMode;
+#setJobType(Lorg/apache/flink/runtime/jobgraph/JobGraph$JobType;)V
+#getJobType()Lorg/apache/flink/runtime/jobgraph/JobGraph$JobType;
+#setCheckpointingEnabled(Z)V
+#isCheckpointingEnabled()Z
+#setCheckpointingInterval(J)V
+#getCheckpointingInterval()J
+#addBlob(Lorg/apache/flink/runtime/blob/BlobKey;)V
+#hasUsercodeJarFiles()Z
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.9.0
+#<init>([Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#<init>(Ljava/lang/String;[Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;[Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#addVertex(Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#getVerticesAsArray()[Lorg/apache/flink/runtime/jobgraph/JobVertex;
+#setSnapshotSettings(Lorg/apache/flink/runtime/jobgraph/tasks/JobSnapshottingSettings;)V
+#getSnapshotSettings()Lorg/apache/flink/runtime/jobgraph/tasks/JobSnapshottingSettings;
+#findVertexByID(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/jobgraph/JobVertex;
-#<init>([Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#<init>(Ljava/lang/String;[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#addVertex(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#getVerticesAsArray()[Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
-#setJobType(Lorg/apache/flink/runtime/jobgraph/JobGraph$JobType;)V
-#getJobType()Lorg/apache/flink/runtime/jobgraph/JobGraph$JobType;
-#setCheckpointingEnabled(Z)V
-#isCheckpointingEnabled()Z
-#setCheckpointingInterval(J)V
-#getCheckpointingInterval()J
-#findVertexByID(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
@0.10.0
+#getExecutionRetryDelay()J
+#setExecutionRetryDelay(J)V
+#getSessionTimeout()J
+#setSessionTimeout(J)V
+#setClasspaths(Ljava/util/List;)V
+#getClasspaths()Ljava/util/List;
+#toString()Ljava/lang/String;
@0.10.2
+#getMaximumParallelism()I
@1.14.0
+#setJobID(Lorg/apache/flink/api/common/JobID;)V
+#getSerializedExecutionConfig()Lorg/apache/flink/util/SerializedValue;
+#setJobType(Lorg/apache/flink/runtime/jobgraph/JobType;)V
+#getJobType()Lorg/apache/flink/runtime/jobgraph/JobType;
+#enableApproximateLocalRecovery(Z)V
+#isApproximateLocalRecoveryEnabled()Z
+#setSavepointRestoreSettings(Lorg/apache/flink/runtime/jobgraph/SavepointRestoreSettings;)V
+#getSavepointRestoreSettings()Lorg/apache/flink/runtime/jobgraph/SavepointRestoreSettings;
+#setExecutionConfig(Lorg/apache/flink/api/common/ExecutionConfig;)V
+#getSlotSharingGroups()Ljava/util/Set;
+#getCoLocationGroups()Ljava/util/Set;
+#setSnapshotSettings(Lorg/apache/flink/runtime/jobgraph/tasks/JobCheckpointingSettings;)V
+#getCheckpointingSettings()Lorg/apache/flink/runtime/jobgraph/tasks/JobCheckpointingSettings;
+#isCheckpointingEnabled()Z
+#addJars(Ljava/util/List;)V
+#getUserJars()Ljava/util/List;
+#addUserArtifact(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;)V
+#getUserArtifacts()Ljava/util/Map;
+#addUserJarBlobKey(Lorg/apache/flink/runtime/blob/PermanentBlobKey;)V
+#setUserArtifactBlobKey(Ljava/lang/String;Lorg/apache/flink/runtime/blob/PermanentBlobKey;)V
+#setUserArtifactRemotePath(Ljava/lang/String;Ljava/lang/String;)V
+#writeUserArtifactEntriesToConfiguration()V
-#<init>()V
-#<init>([Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
-#<init>(Ljava/lang/String;[Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
-#setNumberOfExecutionRetries(I)V
-#getNumberOfExecutionRetries()I
-#getExecutionRetryDelay()J
-#setExecutionRetryDelay(J)V
-#getSessionTimeout()J
-#setSessionTimeout(J)V
-#setAllowQueuedScheduling(Z)V
-#getAllowQueuedScheduling()Z
-#setScheduleMode(Lorg/apache/flink/runtime/jobgraph/ScheduleMode;)V
-#getScheduleMode()Lorg/apache/flink/runtime/jobgraph/ScheduleMode;
-#setSnapshotSettings(Lorg/apache/flink/runtime/jobgraph/tasks/JobSnapshottingSettings;)V
-#getSnapshotSettings()Lorg/apache/flink/runtime/jobgraph/tasks/JobSnapshottingSettings;
-#addBlob(Lorg/apache/flink/runtime/blob/BlobKey;)V
-#uploadRequiredJarFiles(Ljava/net/InetSocketAddress;)V
@1.16.0
+#setChangelogStateBackendEnabled(Lorg/apache/flink/util/TernaryBoolean;)V
+#setJobStatusHooks(Ljava/util/List;)V
+#getJobStatusHooks()Ljava/util/List;

+###org/apache/flink/runtime/jobgraph/topology/DefaultLogicalTopology
@1.14.0
+#fromJobGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/jobgraph/topology/DefaultLogicalTopology;
+#fromTopologicallySortedJobVertices(Ljava/util/List;)Lorg/apache/flink/runtime/jobgraph/topology/DefaultLogicalTopology;
+#getVertices()Ljava/lang/Iterable;
+#getAllPipelinedRegions()Ljava/lang/Iterable;
@1.15.0
+#getVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/jobgraph/topology/DefaultLogicalVertex;

+###org/apache/flink/runtime/jobgraph/topology/LogicalTopology
@1.14.0

+###org/apache/flink/runtime/jobgraph/topology/LogicalVertex
@1.14.0
+#getInputs()Ljava/lang/Iterable;

+###org/apache/flink/runtime/jobgraph/topology/LogicalResult
@1.14.0

+###org/apache/flink/runtime/jobgraph/topology/LogicalPipelinedRegion
@1.14.0

+###org/apache/flink/runtime/jobgraph/topology/DefaultLogicalVertex
@1.14.0
+#getId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getConsumedResults()Ljava/lang/Iterable;
+#getProducedResults()Ljava/lang/Iterable;
+#getInputs()Ljava/lang/Iterable;
+#getId()Lorg/apache/flink/runtime/topology/VertexID;

+###org/apache/flink/runtime/jobgraph/topology/DefaultLogicalResult
@1.14.0
+#getId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getResultType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#getProducer()Lorg/apache/flink/runtime/jobgraph/topology/DefaultLogicalVertex;
+#getConsumers()Ljava/lang/Iterable;
+#getProducer()Lorg/apache/flink/runtime/topology/Vertex;
+#getId()Lorg/apache/flink/runtime/topology/ResultID;
@1.15.0
-#getConsumers()Ljava/lang/Iterable;

+###org/apache/flink/runtime/jobgraph/topology/DefaultLogicalPipelinedRegion
@1.14.0
+#<init>(Ljava/util/Set;)V
+#getVertices()Ljava/lang/Iterable;
+#getVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/jobgraph/topology/LogicalVertex;
+#contains(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Z
+#toString()Ljava/lang/String;
+#contains(Lorg/apache/flink/runtime/topology/VertexID;)Z
+#getVertex(Lorg/apache/flink/runtime/topology/VertexID;)Lorg/apache/flink/runtime/topology/Vertex;

+###org/apache/flink/runtime/jobgraph/topology/LogicalEdge
@1.14.0
+#getDistributionPattern()Lorg/apache/flink/runtime/jobgraph/DistributionPattern;
+#getProducerVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;

+###org/apache/flink/runtime/jobgraph/topology/DefaultLogicalEdge
@1.14.0
+#getDistributionPattern()Lorg/apache/flink/runtime/jobgraph/DistributionPattern;
+#getProducerVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;

+###org/apache/flink/runtime/jobgraph/jsonplan/JsonPlanGenerator
@0.10.0
+#<init>()V
+#generatePlan(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Ljava/lang/String;
@1.15.3
+#generatePlan(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobType;Ljava/lang/Iterable;Lorg/apache/flink/runtime/scheduler/adaptive/allocator/VertexParallelism;)Ljava/lang/String;

+###org/apache/flink/runtime/jobgraph/JobGraphUtils
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobgraph/JobGraphUtils;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/JobGraphUtils;
+#prepareUserArtifactEntries(Ljava/util/Map;Lorg/apache/flink/api/common/JobID;)Ljava/util/Map;

+###org/apache/flink/runtime/jobgraph/SavepointConfigOptions
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/jobgraph/OperatorInstanceID
@1.14.0
+#of(ILorg/apache/flink/runtime/jobgraph/OperatorID;)Lorg/apache/flink/runtime/jobgraph/OperatorInstanceID;
+#<init>(ILorg/apache/flink/runtime/jobgraph/OperatorID;)V
+#getSubtaskId()I
+#getOperatorId()Lorg/apache/flink/runtime/jobgraph/OperatorID;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobgraph/InputOutputFormatContainer$FormatUserCodeTable
@1.14.0
+#<init>()V
+#addInputFormat(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;)V
+#addOutputFormat(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;)V
+#getInputFormats()Ljava/util/Map;
+#getOutputFormats()Ljava/util/Map;

+###org/apache/flink/runtime/jobgraph/InputOutputFormatContainer
@1.14.0
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/ClassLoader;)V
+#getInputFormats()Ljava/util/Map;
+#getOutputFormats()Ljava/util/Map;
+#getUniqueInputFormat()Lorg/apache/commons/lang3/tuple/Pair;
+#getUniqueOutputFormat()Lorg/apache/commons/lang3/tuple/Pair;
+#addInputFormat(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/common/io/InputFormat;)Lorg/apache/flink/runtime/jobgraph/InputOutputFormatContainer;
+#addInputFormat(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;)Lorg/apache/flink/runtime/jobgraph/InputOutputFormatContainer;
+#addOutputFormat(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/common/io/OutputFormat;)Lorg/apache/flink/runtime/jobgraph/InputOutputFormatContainer;
+#addOutputFormat(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;)Lorg/apache/flink/runtime/jobgraph/InputOutputFormatContainer;
+#getParameters(Lorg/apache/flink/runtime/jobgraph/OperatorID;)Lorg/apache/flink/configuration/Configuration;
+#addParameters(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobgraph/InputOutputFormatContainer;
+#addParameters(Lorg/apache/flink/runtime/jobgraph/OperatorID;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/InputOutputFormatContainer;
+#write(Lorg/apache/flink/runtime/operators/util/TaskConfig;)V

+###org/apache/flink/runtime/jobgraph/InputOutputFormatVertex
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/util/List;)V
+#initializeOnMaster(Ljava/lang/ClassLoader;)V
+#finalizeOnMaster(Ljava/lang/ClassLoader;)V
+#getFormatDescription(Lorg/apache/flink/runtime/jobgraph/OperatorID;)Ljava/lang/String;
+#setFormatDescription(Lorg/apache/flink/runtime/jobgraph/OperatorID;Ljava/lang/String;)V
@1.15.3
+#initializeOnMaster(Lorg/apache/flink/runtime/jobgraph/JobVertex$InitializeOnMasterContext;)V
+#finalizeOnMaster(Lorg/apache/flink/runtime/jobgraph/JobVertex$InitializeOnMasterContext;)V
-#initializeOnMaster(Ljava/lang/ClassLoader;)V
-#finalizeOnMaster(Ljava/lang/ClassLoader;)V

+###org/apache/flink/runtime/jobgraph/JobGraphBuilder
@1.14.0
+#setJobName(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;
+#addJobVertices(Ljava/util/Collection;)Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;
+#addJobVertex(Lorg/apache/flink/runtime/jobgraph/JobVertex;)Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;
+#setJobId(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;
+#setExecutionConfig(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;
+#addUserArtifacts(Ljava/util/Map;)Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;
+#setJobCheckpointingSettings(Lorg/apache/flink/runtime/jobgraph/tasks/JobCheckpointingSettings;)Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;
+#setSavepointRestoreSettings(Lorg/apache/flink/runtime/jobgraph/SavepointRestoreSettings;)Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;
+#addClasspaths(Ljava/util/Collection;)Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;
+#build()Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#newStreamingJobGraphBuilder()Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;
+#newBatchJobGraphBuilder()Lorg/apache/flink/runtime/jobgraph/JobGraphBuilder;

+###org/apache/flink/runtime/topology/VertexID
@1.14.0

+###org/apache/flink/runtime/topology/ResultID
@1.14.0

+###org/apache/flink/runtime/topology/Topology
@1.14.0
+#getAllPipelinedRegions()Ljava/lang/Iterable;
+#getPipelinedRegionOfVertex(Lorg/apache/flink/runtime/topology/VertexID;)Lorg/apache/flink/runtime/topology/PipelinedRegion;

+###org/apache/flink/runtime/topology/BaseTopology
@1.14.0
+#getVertices()Ljava/lang/Iterable;

+###org/apache/flink/runtime/topology/Vertex
@1.14.0
+#getId()Lorg/apache/flink/runtime/topology/VertexID;
+#getConsumedResults()Ljava/lang/Iterable;
+#getProducedResults()Ljava/lang/Iterable;

+###org/apache/flink/runtime/topology/Result
@1.14.0
+#getId()Lorg/apache/flink/runtime/topology/ResultID;
+#getResultType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#getProducer()Lorg/apache/flink/runtime/topology/Vertex;
+#getConsumers()Ljava/lang/Iterable;
@1.15.0
-#getConsumers()Ljava/lang/Iterable;

+###org/apache/flink/runtime/topology/PipelinedRegion
@1.14.0
+#getVertices()Ljava/lang/Iterable;
+#getVertex(Lorg/apache/flink/runtime/topology/VertexID;)Lorg/apache/flink/runtime/topology/Vertex;
+#contains(Lorg/apache/flink/runtime/topology/VertexID;)Z

+###org/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorGateway;)V
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getInstanceID()Lorg/apache/flink/runtime/instance/InstanceID;
+#getTaskExecutorGateway()Lorg/apache/flink/runtime/taskexecutor/TaskExecutorGateway;

+###org/apache/flink/runtime/resourcemanager/registration/JobManagerRegistration
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getJobManagerResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getJobMasterId()Lorg/apache/flink/runtime/jobmaster/JobMasterId;
+#getJobManagerGateway()Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;

+###org/apache/flink/runtime/resourcemanager/registration/WorkerRegistration
@1.14.0
+#<init>(Lorg/apache/flink/runtime/taskexecutor/TaskExecutorGateway;Lorg/apache/flink/runtime/clusterframework/types/ResourceIDRetrievable;IILorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getWorker()Lorg/apache/flink/runtime/clusterframework/types/ResourceIDRetrievable;
+#getDataPort()I
+#getJmxPort()I
+#getHardwareDescription()Lorg/apache/flink/runtime/instance/HardwareDescription;
+#getMemoryConfiguration()Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;
+#getDefaultSlotResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getTotalResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
@1.16.0
+#<init>(Lorg/apache/flink/runtime/taskexecutor/TaskExecutorGateway;Lorg/apache/flink/runtime/clusterframework/types/ResourceIDRetrievable;IILorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/lang/String;)V
+#getNodeId()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/taskexecutor/TaskExecutorGateway;Lorg/apache/flink/runtime/clusterframework/types/ResourceIDRetrievable;IILorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V

+###org/apache/flink/runtime/resourcemanager/ResourceManagerId
@1.14.0
+#toUUID()Ljava/util/UUID;
+#generate()Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;
+#fromUuid(Ljava/util/UUID;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;
+#fromUuidOrNull(Ljava/util/UUID;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;

+###org/apache/flink/runtime/resourcemanager/ResourceOverview
@1.14.0
+#<init>(IIILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getNumberTaskManagers()I
+#getNumberRegisteredSlots()I
+#getNumberFreeSlots()I
+#getTotalResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#empty()Lorg/apache/flink/runtime/resourcemanager/ResourceOverview;
@1.16.0
+#<init>(IIIIILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getNumberBlockedTaskManagers()I
+#getNumberBlockedFreeSlots()I
-#<init>(IIILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V

+###org/apache/flink/runtime/resourcemanager/ResourceManagerService
@1.14.0
+#start()V
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#deregisterApplication(Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/resourcemanager/ResourceManagerGateway
@1.14.0
+#registerJobManager(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#declareRequiredResources(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/slots/ResourceRequirements;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#registerTaskExecutor(Lorg/apache/flink/runtime/resourcemanager/TaskExecutorRegistration;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#sendSlotReport(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/taskexecutor/SlotReport;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#notifySlotAvailable(Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#deregisterApplication(Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#getNumberOfRegisteredTaskManagers()Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorHeartbeatPayload;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromJobManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/concurrent/CompletableFuture;
+#disconnectTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)V
+#disconnectJobManager(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/JobStatus;Ljava/lang/Exception;)V
+#requestTaskManagerInfo(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerDetailsInfo(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestResourceOverview(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerMetricQueryServiceAddresses(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerFileUploadByType(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/FileType;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerFileUploadByName(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerLogList(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestThreadDump(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskExecutorThreadInfoGateway(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#registerJobMaster(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#registerJobManager(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/resourcemanager/TaskExecutorRegistration
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;IILorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getTaskExecutorAddress()Ljava/lang/String;
+#getResourceId()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getDataPort()I
+#getJmxPort()I
+#getHardwareDescription()Lorg/apache/flink/runtime/instance/HardwareDescription;
+#getMemoryConfiguration()Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;
+#getDefaultSlotResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getTotalResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
@1.16.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;IILorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/lang/String;)V
+#getNodeId()Ljava/lang/String;
-#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;IILorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V

+###org/apache/flink/runtime/resourcemanager/TaskManagerInfoWithSlots
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerInfo;Ljava/util/Collection;)V
+#getAllocatedSlots()Ljava/util/Collection;
+#getTaskManagerInfo()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerInfo;

+###org/apache/flink/runtime/resourcemanager/WorkerResourceSpec$Builder
@1.14.0
+#<init>()V
+#setCpuCores(D)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec$Builder;
+#setTaskHeapMemoryMB(I)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec$Builder;
+#setTaskOffHeapMemoryMB(I)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec$Builder;
+#setNetworkMemoryMB(I)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec$Builder;
+#setManagedMemoryMB(I)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec$Builder;
+#setNumSlots(I)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec$Builder;
+#setExtendedResource(Lorg/apache/flink/api/common/resources/ExternalResource;)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec$Builder;
+#setExtendedResources(Ljava/util/Collection;)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec$Builder;
+#build()Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;

+###org/apache/flink/runtime/resourcemanager/WorkerResourceSpec
@1.14.0
+#fromTaskExecutorProcessSpec(Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpec;)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;
+#fromTotalResourceProfile(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;I)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;
+#getCpuCores()Lorg/apache/flink/api/common/resources/CPUResource;
+#getTaskHeapSize()Lorg/apache/flink/configuration/MemorySize;
+#getTaskOffHeapSize()Lorg/apache/flink/configuration/MemorySize;
+#getNetworkMemSize()Lorg/apache/flink/configuration/MemorySize;
+#getManagedMemSize()Lorg/apache/flink/configuration/MemorySize;
+#getTotalMemSize()Lorg/apache/flink/configuration/MemorySize;
+#getNumSlots()I
+#getExtendedResources()Ljava/util/Map;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/resourcemanager/ResourceManagerFactory
@1.14.0
+#<init>()V
+#createResourceManagerProcessContext(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerProcessContext;
+#createResourceManager(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerProcessContext;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/resourcemanager/ResourceManager;
@1.15.0
+#createResourceManagerProcessContext(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerProcessContext;
+#createResourceManager(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerProcessContext;Ljava/util/UUID;)Lorg/apache/flink/runtime/resourcemanager/ResourceManager;
-#createResourceManagerProcessContext(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerProcessContext;
-#createResourceManager(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerProcessContext;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/resourcemanager/ResourceManager;
@1.16.0
+#createResourceManagerProcessContext(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/security/token/DelegationTokenManager;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerProcessContext;
-#createResourceManagerProcessContext(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerProcessContext;

+###org/apache/flink/runtime/resourcemanager/ResourceManagerProcessContext
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;Ljava/util/concurrent/Executor;)V
+#getRmConfig()Lorg/apache/flink/configuration/Configuration;
+#getRmRuntimeServicesConfig()Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;
+#getRpcService()Lorg/apache/flink/runtime/rpc/RpcService;
+#getHighAvailabilityServices()Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;
+#getHeartbeatServices()Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;
+#getFatalErrorHandler()Lorg/apache/flink/runtime/rpc/FatalErrorHandler;
+#getClusterInformation()Lorg/apache/flink/runtime/entrypoint/ClusterInformation;
+#getWebInterfaceUrl()Ljava/lang/String;
+#getResourceManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;
+#getSlotManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;
+#getIoExecutor()Ljava/util/concurrent/Executor;
@1.14.6
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)V
+#getMetricRegistry()Lorg/apache/flink/runtime/metrics/MetricRegistry;
+#getHostname()Ljava/lang/String;
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;Ljava/util/concurrent/Executor;)V
-#getResourceManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;
-#getSlotManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;
@1.15.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;Ljava/util/concurrent/Executor;)V
+#getResourceId()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getResourceManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;
+#getSlotManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)V
-#getMetricRegistry()Lorg/apache/flink/runtime/metrics/MetricRegistry;
-#getHostname()Ljava/lang/String;
@1.15.1
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)V
+#getMetricRegistry()Lorg/apache/flink/runtime/metrics/MetricRegistry;
+#getHostname()Ljava/lang/String;
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;Ljava/util/concurrent/Executor;)V
-#getResourceManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;
-#getSlotManagerMetricGroup()Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;
@1.16.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/security/token/DelegationTokenManager;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)V
+#getDelegationTokenManager()Lorg/apache/flink/runtime/security/token/DelegationTokenManager;
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/resourcemanager/ResourceManager
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;Lorg/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerFactory;Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/api/common/time/Time;Ljava/util/concurrent/Executor;)V
+#onStart()V
+#getStartedFuture()Ljava/util/concurrent/CompletableFuture;
+#onStop()Ljava/util/concurrent/CompletableFuture;
+#registerJobManager(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#registerTaskExecutor(Lorg/apache/flink/runtime/resourcemanager/TaskExecutorRegistration;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#sendSlotReport(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/taskexecutor/SlotReport;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorHeartbeatPayload;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromJobManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/concurrent/CompletableFuture;
+#disconnectTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)V
+#disconnectJobManager(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/JobStatus;Ljava/lang/Exception;)V
+#declareRequiredResources(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/slots/ResourceRequirements;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#notifySlotAvailable(Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#deregisterApplication(Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#getNumberOfRegisteredTaskManagers()Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerInfo(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerDetailsInfo(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestResourceOverview(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerMetricQueryServiceAddresses(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerFileUploadByType(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/FileType;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerFileUploadByName(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerLogList(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#releaseClusterPartitions(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/concurrent/CompletableFuture;
+#listDataSets()Ljava/util/concurrent/CompletableFuture;
+#requestThreadDump(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskExecutorThreadInfoGateway(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#startNewWorker(Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;)Z
+#stopWorker(Lorg/apache/flink/runtime/clusterframework/types/ResourceIDRetrievable;)Z
@1.15.0
+#registerJobMaster(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#registerJobManager(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/security/token/DelegationTokenManager;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;Lorg/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerFactory;Lorg/apache/flink/runtime/blocklist/BlocklistHandler$Factory;Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/api/common/time/Time;Ljava/util/concurrent/Executor;)V
+#reportClusterPartitions(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/partition/ClusterPartitionReport;)Ljava/util/concurrent/CompletableFuture;
+#getClusterPartitionsShuffleDescriptors(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/concurrent/CompletableFuture;
+#notifyNewBlockedNodes(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
-#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;Lorg/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerFactory;Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/api/common/time/Time;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServices
@1.14.0
+#<init>(Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;)V
+#getSlotManager()Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;
+#getJobLeaderIdService()Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;
+#fromConfiguration(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServices;

+###org/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration
@1.14.0
+#<init>(Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerConfiguration;Z)V
+#getJobTimeout()Lorg/apache/flink/api/common/time/Time;
+#getSlotManagerConfiguration()Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerConfiguration;
+#isEnableFineGrainedResourceManagement()Z
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpecFactory;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServicesConfiguration;

+###org/apache/flink/runtime/resourcemanager/JobLeaderIdService
@1.14.0
+#start(Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdActions;)V
+#stop()V
+#clear()V
+#addJob(Lorg/apache/flink/api/common/JobID;)V
+#removeJob(Lorg/apache/flink/api/common/JobID;)V
+#containsJob(Lorg/apache/flink/api/common/JobID;)Z
+#getLeaderId(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#isValidTimeout(Lorg/apache/flink/api/common/JobID;Ljava/util/UUID;)Z

+###org/apache/flink/runtime/resourcemanager/slotmanager/SlotManager
@1.14.0
+#getNumberRegisteredSlots()I
+#getNumberRegisteredSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)I
+#getNumberFreeSlots()I
+#getNumberFreeSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)I
+#getRequiredResources()Ljava/util/Map;
+#getRegisteredResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getRegisteredResourceOf(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResourceOf(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getAllocatedSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)Ljava/util/Collection;
+#start(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceActions;)V
+#suspend()V
+#clearResourceRequirements(Lorg/apache/flink/api/common/JobID;)V
+#processResourceRequirements(Lorg/apache/flink/runtime/slots/ResourceRequirements;)V
+#registerTaskManager(Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;Lorg/apache/flink/runtime/taskexecutor/SlotReport;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Z
+#unregisterTaskManager(Lorg/apache/flink/runtime/instance/InstanceID;Ljava/lang/Exception;)Z
+#reportSlotStatus(Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/taskexecutor/SlotReport;)Z
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#setFailUnfulfillableRequest(Z)V
@1.16.0
+#start(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceActions;Lorg/apache/flink/runtime/blocklist/BlockedTaskManagerChecker;)V
+#triggerResourceRequirementsCheck()V
-#start(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceActions;)V

+###org/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerConfiguration
@1.14.0
+#<init>(Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;ZLorg/apache/flink/runtime/resourcemanager/slotmanager/SlotMatchingStrategy;Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;IILorg/apache/flink/api/common/resources/CPUResource;Lorg/apache/flink/configuration/MemorySize;I)V
+#getTaskManagerRequestTimeout()Lorg/apache/flink/api/common/time/Time;
+#getSlotRequestTimeout()Lorg/apache/flink/api/common/time/Time;
+#getTaskManagerTimeout()Lorg/apache/flink/api/common/time/Time;
+#isWaitResultConsumedBeforeRelease()Z
+#getSlotMatchingStrategy()Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotMatchingStrategy;
+#getDefaultWorkerResourceSpec()Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;
+#getNumSlotsPerWorker()I
+#getMaxSlotNum()I
+#getMaxTotalCpu()Lorg/apache/flink/api/common/resources/CPUResource;
+#getMaxTotalMem()Lorg/apache/flink/configuration/MemorySize;
+#getRedundantTaskManagerNum()I
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerConfiguration;
@1.16.0
+#<init>(Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Ljava/time/Duration;ZLorg/apache/flink/runtime/resourcemanager/slotmanager/SlotMatchingStrategy;Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;IILorg/apache/flink/api/common/resources/CPUResource;Lorg/apache/flink/configuration/MemorySize;I)V
+#getRequirementCheckDelay()Ljava/time/Duration;
-#<init>(Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;ZLorg/apache/flink/runtime/resourcemanager/slotmanager/SlotMatchingStrategy;Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;IILorg/apache/flink/api/common/resources/CPUResource;Lorg/apache/flink/configuration/MemorySize;I)V

+###org/apache/flink/runtime/resourcemanager/slotmanager/ResourceActions
@1.14.0
+#releaseResource(Lorg/apache/flink/runtime/instance/InstanceID;Ljava/lang/Exception;)V
+#allocateResource(Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;)Z
+#notifyAllocationFailure(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Exception;)V
+#notifyNotEnoughResourcesAvailable(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)V

+###org/apache/flink/runtime/resourcemanager/slotmanager/SlotMatchingStrategy
@1.14.0
+#findMatchingSlot(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/util/Collection;Ljava/util/function/Function;)Ljava/util/Optional;

+###org/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerSlotInformation
@1.14.0
+#getSlotId()Lorg/apache/flink/runtime/clusterframework/types/SlotID;
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getState()Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotState;
+#getInstanceId()Lorg/apache/flink/runtime/instance/InstanceID;
+#getTaskManagerConnection()Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;
+#isMatchingRequirement(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Z
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;

+###org/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationStrategy
@1.14.0
+#tryFulfillRequirements(Ljava/util/Map;Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerResourceInfoProvider;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult;
@1.16.0
+#tryFulfillRequirements(Ljava/util/Map;Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerResourceInfoProvider;Lorg/apache/flink/runtime/blocklist/BlockedTaskManagerChecker;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult;
-#tryFulfillRequirements(Ljava/util/Map;Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerResourceInfoProvider;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult;

+###org/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult$Builder
@1.14.0
+#<init>()V
+#addUnfulfillableJob(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult$Builder;
+#addPendingTaskManagerAllocate(Lorg/apache/flink/runtime/resourcemanager/slotmanager/PendingTaskManager;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult$Builder;
+#addAllocationOnPendingResource(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/resourcemanager/slotmanager/PendingTaskManagerId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult$Builder;
+#addAllocationOnRegisteredResource(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult$Builder;
+#build()Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult;

+###org/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult
@1.14.0
+#getPendingTaskManagersToAllocate()Ljava/util/List;
+#getUnfulfillableJobs()Ljava/util/Set;
+#getAllocationsOnRegisteredResources()Ljava/util/Map;
+#getAllocationsOnPendingResources()Ljava/util/Map;
+#builder()Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult$Builder;

+###org/apache/flink/runtime/resourcemanager/slotmanager/PendingTaskManagerId
@1.14.0
+#generate()Lorg/apache/flink/runtime/resourcemanager/slotmanager/PendingTaskManagerId;

+###org/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerInfo
@1.14.0
+#getInstanceId()Lorg/apache/flink/runtime/instance/InstanceID;
+#getTaskExecutorConnection()Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;
+#getAllocatedSlots()Ljava/util/Map;
+#getAvailableResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getTotalResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getDefaultSlotResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getDefaultNumSlots()I
+#getIdleSince()J
+#isIdle()Z

+###org/apache/flink/runtime/resourcemanager/slotmanager/PendingTaskManager
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;I)V
+#getTotalResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getDefaultSlotResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getPendingTaskManagerId()Lorg/apache/flink/runtime/resourcemanager/slotmanager/PendingTaskManagerId;
+#getNumSlots()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/resourcemanager/slotmanager/DefaultResourceTracker
@1.14.0
+#<init>()V
+#notifyResourceRequirements(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)V
+#notifyAcquiredResource(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#notifyLostResource(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#clear()V
+#getMissingResources()Ljava/util/Map;
+#getAcquiredResources(Lorg/apache/flink/api/common/JobID;)Ljava/util/Collection;
+#isRequirementEmpty(Lorg/apache/flink/api/common/JobID;)Z

+###org/apache/flink/runtime/resourcemanager/slotmanager/ResourceTracker
@1.14.0
+#notifyResourceRequirements(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)V
+#notifyAcquiredResource(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#notifyLostResource(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getMissingResources()Ljava/util/Map;
+#getAcquiredResources(Lorg/apache/flink/api/common/JobID;)Ljava/util/Collection;
+#isRequirementEmpty(Lorg/apache/flink/api/common/JobID;)Z
+#clear()V

+###org/apache/flink/runtime/resourcemanager/slotmanager/ClusterResourceStatisticsProvider
@1.14.0
+#getNumberRegisteredSlots()I
+#getNumberRegisteredSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)I
+#getNumberFreeSlots()I
+#getNumberFreeSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)I
+#getRegisteredResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getRegisteredResourceOf(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResourceOf(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getPendingResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;

+###org/apache/flink/runtime/resourcemanager/slotmanager/PendingTaskManagerSlot
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getTaskManagerSlotId()Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerSlotId;
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;

+###org/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerSlotId
@1.14.0
+#generate()Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerSlotId;

+###org/apache/flink/runtime/resourcemanager/slotmanager/FineGrainedTaskManagerRegistration
@1.14.0
+#<init>(Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getTaskExecutorConnection()Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;
+#getInstanceId()Lorg/apache/flink/runtime/instance/InstanceID;
+#getAllocatedSlots()Ljava/util/Map;
+#getAvailableResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getDefaultSlotResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getTotalResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getDefaultNumSlots()I
+#getIdleSince()J
+#isIdle()Z
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#notifyAllocationComplete(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#notifyAllocation(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/resourcemanager/slotmanager/FineGrainedTaskManagerSlot;)V

+###org/apache/flink/runtime/resourcemanager/slotmanager/FineGrainedTaskManagerSlot
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotState;)V
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getState()Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotState;
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getSlotId()Lorg/apache/flink/runtime/clusterframework/types/SlotID;
+#getInstanceId()Lorg/apache/flink/runtime/instance/InstanceID;
+#getTaskManagerConnection()Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;
+#completeAllocation()V

+###org/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerRegistration
@1.14.0
+#<init>(Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;Ljava/util/Collection;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getTaskManagerConnection()Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;
+#getInstanceId()Lorg/apache/flink/runtime/instance/InstanceID;
+#getNumberRegisteredSlots()I
+#getNumberFreeSlots()I
+#getDefaultSlotResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getTotalResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#freeSlot()V
+#occupySlot()V
+#getSlots()Ljava/lang/Iterable;
+#getIdleSince()J
+#isIdle()Z
+#markUsed()V
+#containsSlot(Lorg/apache/flink/runtime/clusterframework/types/SlotID;)Z

+###org/apache/flink/runtime/resourcemanager/slotmanager/SlotStatusSyncer
@1.14.0
+#initialize(Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerTracker;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceTracker;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;)V
+#close()V
+#allocateSlot(Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Ljava/util/concurrent/CompletableFuture;
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#reportSlotStatus(Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/taskexecutor/SlotReport;)Z

+###org/apache/flink/runtime/resourcemanager/slotmanager/FineGrainedTaskManagerTracker
@1.14.0
+#<init>()V
+#replaceAllPendingAllocations(Ljava/util/Map;)V
+#addTaskManager(Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#removeTaskManager(Lorg/apache/flink/runtime/instance/InstanceID;)V
+#addPendingTaskManager(Lorg/apache/flink/runtime/resourcemanager/slotmanager/PendingTaskManager;)V
+#removePendingTaskManager(Lorg/apache/flink/runtime/resourcemanager/slotmanager/PendingTaskManagerId;)Ljava/util/Map;
+#notifySlotStatus(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotState;)V
+#getPendingAllocationsOfPendingTaskManager(Lorg/apache/flink/runtime/resourcemanager/slotmanager/PendingTaskManagerId;)Ljava/util/Map;
+#getRegisteredTaskManagers()Ljava/util/Collection;
+#getRegisteredTaskManager(Lorg/apache/flink/runtime/instance/InstanceID;)Ljava/util/Optional;
+#getAllocatedOrPendingSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Ljava/util/Optional;
+#getPendingTaskManagers()Ljava/util/Collection;
+#getPendingTaskManagersByTotalAndDefaultSlotResourceProfile(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Ljava/util/Collection;
+#getNumberRegisteredSlots()I
+#getNumberRegisteredSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)I
+#getNumberFreeSlots()I
+#getNumberFreeSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)I
+#getRegisteredResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getRegisteredResourceOf(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResourceOf(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getPendingResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#clear()V
@1.14.5
+#clearPendingAllocationsOfJob(Lorg/apache/flink/api/common/JobID;)V
@1.15.0
-#clearPendingAllocationsOfJob(Lorg/apache/flink/api/common/JobID;)V
@1.15.1
+#clearPendingAllocationsOfJob(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerUtils
@1.14.0
+#<init>()V
+#generateDefaultSlotResourceProfile(Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;I)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#generateDefaultSlotResourceProfile(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;I)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#calculateDefaultNumSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)I
+#getEffectiveResourceProfile(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#generateTaskManagerTotalResourceProfile(Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;

+###org/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/resourcemanager/slotmanager/AnyMatchingSlotMatchingStrategy
@1.14.0
+#values()[Lorg/apache/flink/runtime/resourcemanager/slotmanager/AnyMatchingSlotMatchingStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/AnyMatchingSlotMatchingStrategy;
+#findMatchingSlot(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/util/Collection;Ljava/util/function/Function;)Ljava/util/Optional;

+###org/apache/flink/runtime/resourcemanager/slotmanager/DefaultSlotTracker
@1.14.0
+#<init>()V
+#registerSlotStatusUpdateListener(Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotStatusUpdateListener;)V
+#addSlot(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;Lorg/apache/flink/api/common/JobID;)V
+#removeSlots(Ljava/lang/Iterable;)V
+#notifyFree(Lorg/apache/flink/runtime/clusterframework/types/SlotID;)V
+#notifyAllocationStart(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/api/common/JobID;)V
+#notifyAllocationComplete(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/api/common/JobID;)V
+#notifySlotStatus(Ljava/lang/Iterable;)Z
+#getFreeSlots()Ljava/util/Collection;
+#getTaskExecutorsWithAllocatedSlotsForJob(Lorg/apache/flink/api/common/JobID;)Ljava/util/Collection;

+###org/apache/flink/runtime/resourcemanager/slotmanager/LeastUtilizationSlotMatchingStrategy
@1.14.0
+#values()[Lorg/apache/flink/runtime/resourcemanager/slotmanager/LeastUtilizationSlotMatchingStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/LeastUtilizationSlotMatchingStrategy;
+#findMatchingSlot(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/util/Collection;Ljava/util/function/Function;)Ljava/util/Optional;

+###org/apache/flink/runtime/resourcemanager/slotmanager/DeclarativeSlotManager
@1.14.0
+#<init>(Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerConfiguration;Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceTracker;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotTracker;)V
+#setFailUnfulfillableRequest(Z)V
+#start(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceActions;)V
+#suspend()V
+#close()V
+#clearResourceRequirements(Lorg/apache/flink/api/common/JobID;)V
+#processResourceRequirements(Lorg/apache/flink/runtime/slots/ResourceRequirements;)V
+#registerTaskManager(Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;Lorg/apache/flink/runtime/taskexecutor/SlotReport;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Z
+#unregisterTaskManager(Lorg/apache/flink/runtime/instance/InstanceID;Ljava/lang/Exception;)Z
+#reportSlotStatus(Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/taskexecutor/SlotReport;)Z
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#getNumberRegisteredSlots()I
+#getNumberRegisteredSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)I
+#getNumberFreeSlots()I
+#getNumberFreeSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)I
+#getRequiredResources()Ljava/util/Map;
+#getRegisteredResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getRegisteredResourceOf(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResourceOf(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getAllocatedSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)Ljava/util/Collection;
@1.16.0
+#triggerResourceRequirementsCheck()V
+#start(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceActions;Lorg/apache/flink/runtime/blocklist/BlockedTaskManagerChecker;)V
-#start(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceActions;)V

+###org/apache/flink/runtime/resourcemanager/slotmanager/FineGrainedSlotManager
@1.14.0
+#<init>(Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerConfiguration;Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceTracker;Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerTracker;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotStatusSyncer;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationStrategy;Lorg/apache/flink/api/common/time/Time;)V
+#setFailUnfulfillableRequest(Z)V
+#start(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceActions;)V
+#suspend()V
+#close()V
+#clearResourceRequirements(Lorg/apache/flink/api/common/JobID;)V
+#processResourceRequirements(Lorg/apache/flink/runtime/slots/ResourceRequirements;)V
+#registerTaskManager(Lorg/apache/flink/runtime/resourcemanager/registration/TaskExecutorConnection;Lorg/apache/flink/runtime/taskexecutor/SlotReport;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Z
+#unregisterTaskManager(Lorg/apache/flink/runtime/instance/InstanceID;Ljava/lang/Exception;)Z
+#reportSlotStatus(Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/taskexecutor/SlotReport;)Z
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#getNumberRegisteredSlots()I
+#getNumberRegisteredSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)I
+#getNumberFreeSlots()I
+#getNumberFreeSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)I
+#getRequiredResources()Ljava/util/Map;
+#getRegisteredResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getRegisteredResourceOf(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResource()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getFreeResourceOf(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getAllocatedSlotsOf(Lorg/apache/flink/runtime/instance/InstanceID;)Ljava/util/Collection;
+#getTaskManagerIdleSince(Lorg/apache/flink/runtime/instance/InstanceID;)J
@1.16.0
+#<init>(Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerConfiguration;Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceTracker;Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerTracker;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotStatusSyncer;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationStrategy;)V
+#triggerResourceRequirementsCheck()V
+#start(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceActions;Lorg/apache/flink/runtime/blocklist/BlockedTaskManagerChecker;)V
-#<init>(Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerConfiguration;Lorg/apache/flink/runtime/metrics/groups/SlotManagerMetricGroup;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceTracker;Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerTracker;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotStatusSyncer;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationStrategy;Lorg/apache/flink/api/common/time/Time;)V
-#start(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceActions;)V

+###org/apache/flink/runtime/resourcemanager/slotmanager/DefaultResourceAllocationStrategy
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;I)V
+#tryFulfillRequirements(Ljava/util/Map;Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerResourceInfoProvider;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult;
@1.16.0
+#tryFulfillRequirements(Ljava/util/Map;Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerResourceInfoProvider;Lorg/apache/flink/runtime/blocklist/BlockedTaskManagerChecker;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult;
-#tryFulfillRequirements(Ljava/util/Map;Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerResourceInfoProvider;)Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceAllocationResult;

+###org/apache/flink/runtime/resourcemanager/slotmanager/DefaultSlotStatusSyncer
@1.14.0
+#<init>(Lorg/apache/flink/api/common/time/Time;)V
+#initialize(Lorg/apache/flink/runtime/resourcemanager/slotmanager/TaskManagerTracker;Lorg/apache/flink/runtime/resourcemanager/slotmanager/ResourceTracker;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;)V
+#close()V
+#allocateSlot(Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Ljava/util/concurrent/CompletableFuture;
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#reportSlotStatus(Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/taskexecutor/SlotReport;)Z

+###org/apache/flink/runtime/resourcemanager/exceptions/ResourceManagerException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/resourcemanager/exceptions/UnknownTaskExecutorException
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V

+###org/apache/flink/runtime/resourcemanager/exceptions/UnfulfillableSlotRequestException
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V

+###org/apache/flink/runtime/resourcemanager/WorkerResourceSpecFactory
@1.14.0
+#<init>()V
+#createDefaultWorkerResourceSpec(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;

+###org/apache/flink/runtime/resourcemanager/JobLeaderIdActions
@1.14.0
+#jobLeaderLostLeadership(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/JobMasterId;)V
+#notifyJobTimeout(Lorg/apache/flink/api/common/JobID;Ljava/util/UUID;)V
+#handleError(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/resourcemanager/active/ActiveResourceManagerFactory
@1.14.0
+#<init>()V
+#createResourceManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServices;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManager;
+#createStartWorkerFailureRater(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/metrics/ThresholdMeter;
@1.16.0
+#createResourceManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/security/token/DelegationTokenManager;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServices;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManager;
-#createResourceManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerRuntimeServices;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManager;

+###org/apache/flink/runtime/resourcemanager/active/ResourceManagerDriver
@1.14.0
+#initialize(Lorg/apache/flink/runtime/resourcemanager/active/ResourceEventHandler;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/util/concurrent/Executor;)V
+#terminate()V
+#deregisterApplication(Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;Ljava/lang/String;)V
+#requestResource(Lorg/apache/flink/runtime/clusterframework/TaskExecutorProcessSpec;)Ljava/util/concurrent/CompletableFuture;
+#releaseResource(Lorg/apache/flink/runtime/clusterframework/types/ResourceIDRetrievable;)V
@1.16.0
+#initialize(Lorg/apache/flink/runtime/resourcemanager/active/ResourceEventHandler;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/blocklist/BlockedNodeRetriever;)V
-#initialize(Lorg/apache/flink/runtime/resourcemanager/active/ResourceEventHandler;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/resourcemanager/active/ResourceEventHandler
@1.14.0
+#onPreviousAttemptWorkersRecovered(Ljava/util/Collection;)V
+#onWorkerTerminated(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;)V
+#onError(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/resourcemanager/active/ActiveResourceManager
@1.14.0
+#<init>(Lorg/apache/flink/runtime/resourcemanager/active/ResourceManagerDriver;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;Lorg/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerFactory;Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/runtime/metrics/ThresholdMeter;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/concurrent/Executor;)V
+#startNewWorker(Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;)Z
+#stopWorker(Lorg/apache/flink/runtime/clusterframework/types/ResourceIDRetrievable;)Z
+#onPreviousAttemptWorkersRecovered(Ljava/util/Collection;)V
+#onWorkerTerminated(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;)V
+#onError(Ljava/lang/Throwable;)V
@1.16.0
+#<init>(Lorg/apache/flink/runtime/resourcemanager/active/ResourceManagerDriver;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/security/token/DelegationTokenManager;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;Lorg/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerFactory;Lorg/apache/flink/runtime/blocklist/BlocklistHandler$Factory;Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/runtime/metrics/ThresholdMeter;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/concurrent/Executor;)V
+#getReadyToServeFuture()Ljava/util/concurrent/CompletableFuture;
-#<init>(Lorg/apache/flink/runtime/resourcemanager/active/ResourceManagerDriver;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;Lorg/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerFactory;Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/runtime/metrics/ThresholdMeter;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/resourcemanager/active/AbstractResourceManagerDriver
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;)V
+#initialize(Lorg/apache/flink/runtime/resourcemanager/active/ResourceEventHandler;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/util/concurrent/Executor;)V
@1.16.0
+#initialize(Lorg/apache/flink/runtime/resourcemanager/active/ResourceEventHandler;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/blocklist/BlockedNodeRetriever;)V
-#initialize(Lorg/apache/flink/runtime/resourcemanager/active/ResourceEventHandler;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/resourcemanager/StandaloneResourceManagerFactory
@1.14.0
+#getInstance()Lorg/apache/flink/runtime/resourcemanager/StandaloneResourceManagerFactory;
@1.15.0
+#getConfigurationWithoutMaxSlotNumberIfSet(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/Configuration;

+###org/apache/flink/runtime/resourcemanager/StandaloneResourceManager
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;Lorg/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerFactory;Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Ljava/util/concurrent/Executor;)V
+#startNewWorker(Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;)Z
+#stopWorker(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
+#stopWorker(Lorg/apache/flink/runtime/clusterframework/types/ResourceIDRetrievable;)Z
@1.16.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/security/token/DelegationTokenManager;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;Lorg/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerFactory;Lorg/apache/flink/runtime/blocklist/BlocklistHandler$Factory;Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Ljava/util/concurrent/Executor;)V
+#getReadyToServeFuture()Ljava/util/concurrent/CompletableFuture;
-#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Ljava/util/UUID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/resourcemanager/slotmanager/SlotManager;Lorg/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerFactory;Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdService;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/metrics/groups/ResourceManagerMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/resourcemanager/DefaultJobLeaderIdService
@1.14.0
+#<init>(Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/api/common/time/Time;)V
+#start(Lorg/apache/flink/runtime/resourcemanager/JobLeaderIdActions;)V
+#stop()V
+#isStarted()Z
+#clear()V
+#addJob(Lorg/apache/flink/api/common/JobID;)V
+#removeJob(Lorg/apache/flink/api/common/JobID;)V
+#containsJob(Lorg/apache/flink/api/common/JobID;)Z
+#getLeaderId(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#isValidTimeout(Lorg/apache/flink/api/common/JobID;Ljava/util/UUID;)Z

+###org/apache/flink/runtime/resourcemanager/ArbitraryWorkerResourceSpecFactory
@1.14.0
+#createDefaultWorkerResourceSpec(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/resourcemanager/WorkerResourceSpec;

+###org/apache/flink/runtime/resourcemanager/ResourceManagerServiceImpl
@1.14.0
+#start()V
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#deregisterApplication(Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#grantLeadership(Ljava/util/UUID;)V
+#revokeLeadership()V
+#handleError(Ljava/lang/Exception;)V
+#getLeaderResourceManager()Lorg/apache/flink/runtime/resourcemanager/ResourceManager;
+#create(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerFactory;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerServiceImpl;
@1.15.0
+#create(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerFactory;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerServiceImpl;
-#create(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerFactory;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerServiceImpl;
@1.16.0
+#create(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerFactory;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/security/token/DelegationTokenManager;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerServiceImpl;
-#create(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerFactory;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;Ljava/lang/String;Lorg/apache/flink/runtime/metrics/MetricRegistry;Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerServiceImpl;

+###org/apache/flink/runtime/instance/InstanceID
@0.6-hadoop2-incubating
+#<init>()V
@0.9.0-milestone-1
+#<init>([B)V

+###org/apache/flink/runtime/instance/SlotSharingGroupId
@1.14.0
+#<init>(JJ)V
+#<init>()V

+###org/apache/flink/runtime/instance/HardwareDescription
@0.6-hadoop2-incubating
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getNumberOfCPUCores()I
+#getSizeOfPhysicalMemory()J
+#getSizeOfFreeMemory()J
@0.7.0-hadoop2-incubating
+#<init>(IJJJ)V
+#getSizeOfJvmHeap()J
+#getSizeOfManagedMemory()J
+#toString()Ljava/lang/String;
+#extractFromSystem(J)Lorg/apache/flink/runtime/instance/HardwareDescription;
-#getSizeOfFreeMemory()J
@0.9.0-milestone-1
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
@1.14.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#<init>()V

+###org/apache/flink/runtime/taskexecutor/TaskExecutorGateway
@1.14.0
+#requestSlot(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/lang/String;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#submitTask(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#updatePartitions(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Iterable;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#releaseOrPromotePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;Ljava/util/Set;)V
+#releaseClusterPartitions(Ljava/util/Collection;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/CompletableFuture;
+#confirmCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)Ljava/util/concurrent/CompletableFuture;
+#abortCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJJ)Ljava/util/concurrent/CompletableFuture;
+#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromJobManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/jobmaster/AllocatedSlotReport;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromResourceManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/concurrent/CompletableFuture;
+#disconnectJobManager(Lorg/apache/flink/api/common/JobID;Ljava/lang/Exception;)V
+#disconnectResourceManager(Ljava/lang/Exception;)V
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#freeInactiveSlots(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)V
+#requestFileUploadByType(Lorg/apache/flink/runtime/taskexecutor/FileType;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestFileUploadByName(Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestMetricQueryServiceAddress(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#canBeReleased()Ljava/util/concurrent/CompletableFuture;
+#requestLogList(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#sendOperatorEventToTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;
+#requestThreadDump(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#confirmCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJJ)Ljava/util/concurrent/CompletableFuture;
-#confirmCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#releasePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;)V
+#promotePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;)Ljava/util/concurrent/CompletableFuture;
-#releaseOrPromotePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;Ljava/util/Set;)V

+###org/apache/flink/runtime/taskexecutor/TaskExecutorOperatorEventGateway
@1.14.0
+#sendOperatorEventToTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/taskexecutor/TaskExecutorThreadInfoGateway
@1.14.0
+#requestThreadInfoSamples(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoSamplesRequest;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#requestThreadInfoSamples(Ljava/util/Collection;Lorg/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoSamplesRequest;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#requestThreadInfoSamples(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoSamplesRequest;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/taskexecutor/FileType
@1.14.0
+#values()[Lorg/apache/flink/runtime/taskexecutor/FileType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/taskexecutor/FileType;

+###org/apache/flink/runtime/taskexecutor/GlobalAggregateManager
@1.14.0
+#updateGlobalAggregate(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/flink/api/common/functions/AggregateFunction;)Ljava/lang/Object;

+###org/apache/flink/runtime/taskexecutor/SlotReport
@1.14.0
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/taskexecutor/SlotStatus;)V
+#<init>(Ljava/util/Collection;)V
+#getNumSlotStatus()I
+#hasAllocatedSlot()Z
+#iterator()Ljava/util/Iterator;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/taskexecutor/SlotStatus
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#getSlotID()Lorg/apache/flink/runtime/clusterframework/types/SlotID;
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getAllocationID()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/taskexecutor/TaskExecutorHeartbeatPayload
@1.14.0
+#<init>(Lorg/apache/flink/runtime/taskexecutor/SlotReport;Lorg/apache/flink/runtime/taskexecutor/partition/ClusterPartitionReport;)V
+#getSlotReport()Lorg/apache/flink/runtime/taskexecutor/SlotReport;
+#getClusterPartitionReport()Lorg/apache/flink/runtime/taskexecutor/partition/ClusterPartitionReport;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/taskexecutor/slot/SlotOffer
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;ILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getSlotIndex()I
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/taskexecutor/slot/SlotAllocationSnapshot
@1.15.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getSlotID()Lorg/apache/flink/runtime/clusterframework/types/SlotID;
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getJobTargetAddress()Ljava/lang/String;
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getSlotIndex()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/taskexecutor/slot/SlotAllocationSnapshotPersistenceService
@1.15.0
+#persistAllocationSnapshot(Lorg/apache/flink/runtime/taskexecutor/slot/SlotAllocationSnapshot;)V
+#deleteAllocationSnapshot(I)V
+#loadAllocationSnapshots()Ljava/util/Collection;

+###org/apache/flink/runtime/taskexecutor/slot/FileSlotAllocationSnapshotPersistenceService
@1.15.0
+#<init>(Ljava/io/File;)V
+#persistAllocationSnapshot(Lorg/apache/flink/runtime/taskexecutor/slot/SlotAllocationSnapshot;)V
+#deleteAllocationSnapshot(I)V
+#loadAllocationSnapshots()Ljava/util/Collection;

+###org/apache/flink/runtime/taskexecutor/slot/TaskSlotTable
@1.14.0
+#start(Lorg/apache/flink/runtime/taskexecutor/slot/SlotActions;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#getAllocationIdsPerJob(Lorg/apache/flink/api/common/JobID;)Ljava/util/Set;
+#getActiveTaskSlotAllocationIds()Ljava/util/Set;
+#getActiveTaskSlotAllocationIdsPerJob(Lorg/apache/flink/api/common/JobID;)Ljava/util/Set;
+#createSlotReport(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/taskexecutor/SlotReport;
+#allocateSlot(ILorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/api/common/time/Time;)Z
+#allocateSlot(ILorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/api/common/time/Time;)Z
+#markSlotActive(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#markSlotInactive(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/api/common/time/Time;)Z
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)I
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;)I
+#isValidTimeout(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/util/UUID;)Z
+#isAllocated(ILorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#tryMarkSlotActive(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#isSlotFree(I)Z
+#hasAllocatedSlots(Lorg/apache/flink/api/common/JobID;)Z
+#getAllocatedSlots(Lorg/apache/flink/api/common/JobID;)Ljava/util/Iterator;
+#getOwningJob(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Lorg/apache/flink/api/common/JobID;
+#addTask(Lorg/apache/flink/runtime/taskexecutor/slot/TaskSlotPayload;)Z
+#removeTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/taskexecutor/slot/TaskSlotPayload;
+#getTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/taskexecutor/slot/TaskSlotPayload;
+#getTasks(Lorg/apache/flink/api/common/JobID;)Ljava/util/Iterator;
+#getCurrentAllocation(I)Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getTaskMemoryManager(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Lorg/apache/flink/runtime/memory/MemoryManager;

+###org/apache/flink/runtime/taskexecutor/slot/TimeoutListener
@1.14.0
+#notifyTimeout(Ljava/lang/Object;Ljava/util/UUID;)V

+###org/apache/flink/runtime/taskexecutor/slot/TaskSlotPayload
@1.14.0
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#failExternally(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/taskexecutor/slot/SlotActions
@1.14.0
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#timeoutSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/util/UUID;)V

+###org/apache/flink/runtime/taskexecutor/slot/SlotNotFoundException
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/runtime/taskexecutor/slot/TaskSlot
@1.14.0
+#<init>(ILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;ILorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/util/concurrent/Executor;)V
+#getIndex()I
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#isEmpty()Z
+#isActive(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#isAllocated(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#isReleasing()Z
+#getTasks()Ljava/util/Iterator;
+#getMemoryManager()Lorg/apache/flink/runtime/memory/MemoryManager;
+#add(Lorg/apache/flink/runtime/taskexecutor/slot/TaskSlotPayload;)Z
+#remove(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/taskexecutor/slot/TaskSlotPayload;
+#clear()V
+#markActive()Z
+#markInactive()Z
+#generateSlotOffer()Lorg/apache/flink/runtime/taskexecutor/slot/SlotOffer;
+#toString()Ljava/lang/String;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/taskexecutor/slot/SlotNotActiveException
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)V

+###org/apache/flink/runtime/taskexecutor/slot/DefaultTimerService
@1.14.3
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;J)V
+#start(Lorg/apache/flink/runtime/taskexecutor/slot/TimeoutListener;)V
+#stop()V
+#registerTimeout(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
+#unregisterTimeout(Ljava/lang/Object;)V
+#isValid(Ljava/lang/Object;Ljava/util/UUID;)Z

+###org/apache/flink/runtime/taskexecutor/slot/TimerService
@1.14.0
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;J)V
+#start(Lorg/apache/flink/runtime/taskexecutor/slot/TimeoutListener;)V
+#stop()V
+#registerTimeout(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
+#unregisterTimeout(Ljava/lang/Object;)V
+#isValid(Ljava/lang/Object;Ljava/util/UUID;)Z
@1.14.3
-#<init>(Ljava/util/concurrent/ScheduledExecutorService;J)V

+###org/apache/flink/runtime/taskexecutor/slot/NoOpSlotAllocationSnapshotPersistenceService
@1.15.0
+#values()[Lorg/apache/flink/runtime/taskexecutor/slot/NoOpSlotAllocationSnapshotPersistenceService;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/taskexecutor/slot/NoOpSlotAllocationSnapshotPersistenceService;
+#persistAllocationSnapshot(Lorg/apache/flink/runtime/taskexecutor/slot/SlotAllocationSnapshot;)V
+#deleteAllocationSnapshot(I)V
+#loadAllocationSnapshots()Ljava/util/Collection;

+###org/apache/flink/runtime/taskexecutor/slot/TaskSlotTableImpl
@1.14.0
+#<init>(ILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;ILorg/apache/flink/runtime/taskexecutor/slot/TimerService;Ljava/util/concurrent/Executor;)V
+#start(Lorg/apache/flink/runtime/taskexecutor/slot/SlotActions;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#isClosed()Z
+#getAllocationIdsPerJob(Lorg/apache/flink/api/common/JobID;)Ljava/util/Set;
+#getActiveTaskSlotAllocationIds()Ljava/util/Set;
+#getActiveTaskSlotAllocationIdsPerJob(Lorg/apache/flink/api/common/JobID;)Ljava/util/Set;
+#createSlotReport(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/taskexecutor/SlotReport;
+#allocateSlot(ILorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/api/common/time/Time;)Z
+#allocateSlot(ILorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/api/common/time/Time;)Z
+#markSlotActive(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#markSlotInactive(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/api/common/time/Time;)Z
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;)I
+#isValidTimeout(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/util/UUID;)Z
+#isAllocated(ILorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#tryMarkSlotActive(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#isSlotFree(I)Z
+#hasAllocatedSlots(Lorg/apache/flink/api/common/JobID;)Z
+#getAllocatedSlots(Lorg/apache/flink/api/common/JobID;)Ljava/util/Iterator;
+#getOwningJob(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Lorg/apache/flink/api/common/JobID;
+#addTask(Lorg/apache/flink/runtime/taskexecutor/slot/TaskSlotPayload;)Z
+#removeTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/taskexecutor/slot/TaskSlotPayload;
+#getTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/taskexecutor/slot/TaskSlotPayload;
+#getTasks(Lorg/apache/flink/api/common/JobID;)Ljava/util/Iterator;
+#getCurrentAllocation(I)Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getTaskMemoryManager(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Lorg/apache/flink/runtime/memory/MemoryManager;
+#notifyTimeout(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/util/UUID;)V
+#notifyTimeout(Ljava/lang/Object;Ljava/util/UUID;)V

+###org/apache/flink/runtime/taskexecutor/TaskExecutorToJobManagerHeartbeatPayload
@1.14.0
+#<init>(Lorg/apache/flink/runtime/taskexecutor/AccumulatorReport;Lorg/apache/flink/runtime/taskexecutor/ExecutionDeploymentReport;)V
+#getAccumulatorReport()Lorg/apache/flink/runtime/taskexecutor/AccumulatorReport;
+#getExecutionDeploymentReport()Lorg/apache/flink/runtime/taskexecutor/ExecutionDeploymentReport;
+#empty()Lorg/apache/flink/runtime/taskexecutor/TaskExecutorToJobManagerHeartbeatPayload;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/taskexecutor/TaskExecutorResourceUtils
@1.14.0
+#generateDefaultSlotResourceProfile(Lorg/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec;I)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#generateTotalAvailableResourceProfile(Lorg/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec;)Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#resourceSpecFromConfigForLocalExecution(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec;
+#calculateTotalFlinkMemoryFromComponents(Lorg/apache/flink/configuration/Configuration;)J
+#calculateTotalProcessMemoryFromComponents(Lorg/apache/flink/configuration/Configuration;)J
+#adjustForLocalExecution(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/Configuration;

+###org/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration
@1.14.0
+#create(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;
+#<init>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;)V
+#getFrameworkHeap()Ljava/lang/Long;
+#getTaskHeap()Ljava/lang/Long;
+#getFrameworkOffHeap()Ljava/lang/Long;
+#getTaskOffHeap()Ljava/lang/Long;
+#getNetworkMemory()Ljava/lang/Long;
+#getManagedMemoryTotal()Ljava/lang/Long;
+#getJvmMetaspace()Ljava/lang/Long;
+#getJvmOverhead()Ljava/lang/Long;
+#getTotalFlinkMemory()Ljava/lang/Long;
+#getTotalProcessMemory()Ljava/lang/Long;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/taskexecutor/partition/ClusterPartitionReport$ClusterPartitionReportEntry
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Ljava/util/Set;I)V
+#getDataSetId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getHostedPartitions()Ljava/util/Set;
+#getNumTotalPartitions()I
@1.16.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;ILjava/util/Map;)V
+#getShuffleDescriptors()Ljava/util/Map;
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Ljava/util/Set;I)V

+###org/apache/flink/runtime/taskexecutor/partition/ClusterPartitionReport
@1.14.0
+#<init>(Ljava/util/Collection;)V
+#getEntries()Ljava/util/Collection;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/taskexecutor/partition/PartitionTable
@1.14.0
+#<init>()V
+#hasTrackedPartitions(Ljava/lang/Object;)Z
+#startTrackingPartitions(Ljava/lang/Object;Ljava/util/Collection;)V
+#stopTrackingPartitions(Ljava/lang/Object;)Ljava/util/Collection;
+#stopTrackingPartitions(Ljava/lang/Object;Ljava/util/Collection;)V

+###org/apache/flink/runtime/taskexecutor/AccumulatorReport
@1.14.0
+#<init>(Ljava/util/List;)V
+#getAccumulatorSnapshots()Ljava/util/Collection;

+###org/apache/flink/runtime/taskexecutor/ExecutionDeploymentReport
@1.14.0
+#<init>(Ljava/util/Set;)V
+#getExecutions()Ljava/util/Set;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec
@1.14.0
+#<init>(Lorg/apache/flink/api/common/resources/CPUResource;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Ljava/util/Collection;)V
+#getCpuCores()Lorg/apache/flink/api/common/resources/CPUResource;
+#getTaskHeapSize()Lorg/apache/flink/configuration/MemorySize;
+#getTaskOffHeapSize()Lorg/apache/flink/configuration/MemorySize;
+#getNetworkMemSize()Lorg/apache/flink/configuration/MemorySize;
+#getManagedMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getExtendedResources()Ljava/util/Map;

+###org/apache/flink/runtime/taskexecutor/TaskExecutorGatewayDecoratorBase
@1.14.0
+#getAddress()Ljava/lang/String;
+#getHostname()Ljava/lang/String;
+#requestSlot(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/lang/String;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#submitTask(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#updatePartitions(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Iterable;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#releaseOrPromotePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;Ljava/util/Set;)V
+#releaseClusterPartitions(Ljava/util/Collection;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/CompletableFuture;
+#confirmCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)Ljava/util/concurrent/CompletableFuture;
+#abortCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJJ)Ljava/util/concurrent/CompletableFuture;
+#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromJobManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/jobmaster/AllocatedSlotReport;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromResourceManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/concurrent/CompletableFuture;
+#disconnectJobManager(Lorg/apache/flink/api/common/JobID;Ljava/lang/Exception;)V
+#disconnectResourceManager(Ljava/lang/Exception;)V
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#freeInactiveSlots(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)V
+#requestFileUploadByType(Lorg/apache/flink/runtime/taskexecutor/FileType;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestFileUploadByName(Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestMetricQueryServiceAddress(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#canBeReleased()Ljava/util/concurrent/CompletableFuture;
+#requestLogList(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#sendOperatorEventToTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;
+#requestThreadDump(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestThreadInfoSamples(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoSamplesRequest;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#confirmCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJJ)Ljava/util/concurrent/CompletableFuture;
-#confirmCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#releasePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;)V
+#promotePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;)Ljava/util/concurrent/CompletableFuture;
+#requestThreadInfoSamples(Ljava/util/Collection;Lorg/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoSamplesRequest;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#releaseOrPromotePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;Ljava/util/Set;)V
-#requestThreadInfoSamples(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoSamplesRequest;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/taskexecutor/DefaultJobLeaderService
@1.14.0
+#<init>(Lorg/apache/flink/runtime/taskmanager/UnresolvedTaskManagerLocation;Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;)V
+#start(Ljava/lang/String;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/taskexecutor/JobLeaderListener;)V
+#stop()V
+#removeJob(Lorg/apache/flink/api/common/JobID;)V
+#addJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
+#reconnect(Lorg/apache/flink/api/common/JobID;)V
+#containsJob(Lorg/apache/flink/api/common/JobID;)Z

+###org/apache/flink/runtime/taskexecutor/JobLeaderService
@1.14.0
+#start(Ljava/lang/String;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/taskexecutor/JobLeaderListener;)V
+#stop()V
+#removeJob(Lorg/apache/flink/api/common/JobID;)V
+#addJob(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
+#reconnect(Lorg/apache/flink/api/common/JobID;)V
+#containsJob(Lorg/apache/flink/api/common/JobID;)Z

+###org/apache/flink/runtime/taskexecutor/JobLeaderListener
@1.14.0
+#jobManagerGainedLeadership(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;Lorg/apache/flink/runtime/jobmaster/JMTMRegistrationSuccess;)V
+#jobManagerLostLeadership(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/JobMasterId;)V
+#handleError(Ljava/lang/Throwable;)V
+#jobManagerRejectedRegistration(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/jobmaster/JMTMRegistrationRejection;)V

+###org/apache/flink/runtime/taskexecutor/exceptions/SlotOccupiedException
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/api/common/JobID;)V
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getJobId()Lorg/apache/flink/api/common/JobID;

+###org/apache/flink/runtime/taskexecutor/exceptions/SlotAllocationException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/taskexecutor/exceptions/TaskManagerException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/taskexecutor/exceptions/RegistrationTimeoutException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/taskexecutor/exceptions/PartitionUpdateException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/taskexecutor/exceptions/TaskSubmissionException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/taskexecutor/exceptions/TaskException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/taskexecutor/DefaultJobTable
@1.14.0
+#getOrCreateJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/util/function/SupplierWithException;)Lorg/apache/flink/runtime/taskexecutor/JobTable$Job;
+#getJob(Lorg/apache/flink/api/common/JobID;)Ljava/util/Optional;
+#getConnection(Lorg/apache/flink/api/common/JobID;)Ljava/util/Optional;
+#getConnection(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/Optional;
+#getJobs()Ljava/util/Collection;
+#isEmpty()Z
+#create()Lorg/apache/flink/runtime/taskexecutor/DefaultJobTable;
+#close()V

+###org/apache/flink/runtime/taskexecutor/JobTable$Job
@1.14.0
+#isConnected()Z
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#asConnection()Ljava/util/Optional;
+#connect(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;Lorg/apache/flink/runtime/taskmanager/TaskManagerActions;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;Lorg/apache/flink/runtime/taskexecutor/PartitionProducerStateChecker;)Lorg/apache/flink/runtime/taskexecutor/JobTable$Connection;
+#close()V
@1.16.0
+#connect(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;Lorg/apache/flink/runtime/taskmanager/TaskManagerActions;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;Lorg/apache/flink/runtime/taskexecutor/PartitionProducerStateChecker;)Lorg/apache/flink/runtime/taskexecutor/JobTable$Connection;
-#connect(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;Lorg/apache/flink/runtime/taskmanager/TaskManagerActions;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;Lorg/apache/flink/runtime/taskexecutor/PartitionProducerStateChecker;)Lorg/apache/flink/runtime/taskexecutor/JobTable$Connection;

+###org/apache/flink/runtime/taskexecutor/JobTable$Connection
@1.14.0
+#disconnect()Lorg/apache/flink/runtime/taskexecutor/JobTable$Job;
+#getJobMasterId()Lorg/apache/flink/runtime/jobmaster/JobMasterId;
+#getJobManagerGateway()Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;
+#getTaskManagerActions()Lorg/apache/flink/runtime/taskmanager/TaskManagerActions;
+#getCheckpointResponder()Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;
+#getGlobalAggregateManager()Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;
+#getClassLoaderHandle()Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderHandle;
+#getResultPartitionConsumableNotifier()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;
+#getPartitionStateChecker()Lorg/apache/flink/runtime/taskexecutor/PartitionProducerStateChecker;
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getResourceId()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
@1.16.0
-#getResultPartitionConsumableNotifier()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;

+###org/apache/flink/runtime/taskexecutor/JobTable$JobServices
@1.14.0
+#getClassLoaderHandle()Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderHandle;
+#close()V

+###org/apache/flink/runtime/taskexecutor/JobTable
@1.14.0
+#getOrCreateJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/util/function/SupplierWithException;)Lorg/apache/flink/runtime/taskexecutor/JobTable$Job;
+#getJob(Lorg/apache/flink/api/common/JobID;)Ljava/util/Optional;
+#getConnection(Lorg/apache/flink/api/common/JobID;)Ljava/util/Optional;
+#getConnection(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/Optional;
+#getJobs()Ljava/util/Collection;
+#isEmpty()Z

+###org/apache/flink/runtime/taskexecutor/PartitionProducerStateChecker
@1.14.0
+#requestPartitionProducerState(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/taskexecutor/TaskExecutorRegistrationSuccess
@1.14.0
+#<init>(Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/entrypoint/ClusterInformation;)V
+#getRegistrationId()Lorg/apache/flink/runtime/instance/InstanceID;
+#getResourceManagerId()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getClusterInformation()Lorg/apache/flink/runtime/entrypoint/ClusterInformation;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/taskexecutor/TaskExecutor
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/taskexecutor/TaskManagerConfiguration;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/taskexecutor/TaskManagerServices;Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/groups/TaskManagerMetricGroup;Ljava/lang/String;Lorg/apache/flink/runtime/blob/BlobCacheService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/io/network/partition/TaskExecutorPartitionTracker;)V
+#canBeReleased()Ljava/util/concurrent/CompletableFuture;
+#requestLogList(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#onStart()V
+#onStop()Ljava/util/concurrent/CompletableFuture;
+#requestThreadInfoSamples(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoSamplesRequest;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#submitTask(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#updatePartitions(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Iterable;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#releaseOrPromotePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;Ljava/util/Set;)V
+#releaseClusterPartitions(Ljava/util/Collection;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromJobManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/jobmaster/AllocatedSlotReport;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromResourceManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/CompletableFuture;
+#confirmCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)Ljava/util/concurrent/CompletableFuture;
+#abortCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJJ)Ljava/util/concurrent/CompletableFuture;
+#requestSlot(Lorg/apache/flink/runtime/clusterframework/types/SlotID;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/lang/String;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#freeInactiveSlots(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)V
+#requestFileUploadByType(Lorg/apache/flink/runtime/taskexecutor/FileType;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestFileUploadByName(Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestMetricQueryServiceAddress(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#disconnectJobManager(Lorg/apache/flink/api/common/JobID;Ljava/lang/Exception;)V
+#disconnectResourceManager(Ljava/lang/Exception;)V
+#sendOperatorEventToTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;
+#requestThreadDump(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/taskexecutor/TaskManagerConfiguration;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/taskexecutor/TaskManagerServices;Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/groups/TaskManagerMetricGroup;Ljava/lang/String;Lorg/apache/flink/runtime/blob/TaskExecutorBlobService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/io/network/partition/TaskExecutorPartitionTracker;)V
+#confirmCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJJ)Ljava/util/concurrent/CompletableFuture;
-#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/taskexecutor/TaskManagerConfiguration;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/taskexecutor/TaskManagerServices;Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/groups/TaskManagerMetricGroup;Ljava/lang/String;Lorg/apache/flink/runtime/blob/BlobCacheService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/io/network/partition/TaskExecutorPartitionTracker;)V
-#confirmCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#requestThreadInfoSamples(Ljava/util/Collection;Lorg/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoSamplesRequest;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#releasePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;)V
+#promotePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;)Ljava/util/concurrent/CompletableFuture;
-#requestThreadInfoSamples(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoSamplesRequest;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#releaseOrPromotePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;Ljava/util/Set;)V

+###org/apache/flink/runtime/taskexecutor/TaskManagerServices
@1.14.0
+#getManagedMemorySize()J
+#getIOManager()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;
+#getShuffleEnvironment()Lorg/apache/flink/runtime/shuffle/ShuffleEnvironment;
+#getKvStateService()Lorg/apache/flink/runtime/taskexecutor/KvStateService;
+#getUnresolvedTaskManagerLocation()Lorg/apache/flink/runtime/taskmanager/UnresolvedTaskManagerLocation;
+#getBroadcastVariableManager()Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;
+#getTaskSlotTable()Lorg/apache/flink/runtime/taskexecutor/slot/TaskSlotTable;
+#getJobTable()Lorg/apache/flink/runtime/taskexecutor/JobTable;
+#getJobLeaderService()Lorg/apache/flink/runtime/taskexecutor/JobLeaderService;
+#getTaskManagerStateStore()Lorg/apache/flink/runtime/state/TaskExecutorLocalStateStoresManager;
+#getTaskManagerChangelogManager()Lorg/apache/flink/runtime/state/TaskExecutorStateChangelogStoragesManager;
+#getTaskEventDispatcher()Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;
+#getIOExecutor()Ljava/util/concurrent/Executor;
+#getLibraryCacheManager()Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;
+#shutDown()V
+#fromConfiguration(Lorg/apache/flink/runtime/taskexecutor/TaskManagerServicesConfiguration;Lorg/apache/flink/runtime/blob/PermanentBlobService;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerServices;
@1.15.0
+#fromConfiguration(Lorg/apache/flink/runtime/taskexecutor/TaskManagerServicesConfiguration;Lorg/apache/flink/runtime/blob/PermanentBlobService;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/entrypoint/WorkingDirectory;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerServices;
+#getSlotAllocationSnapshotPersistenceService()Lorg/apache/flink/runtime/taskexecutor/slot/SlotAllocationSnapshotPersistenceService;
-#fromConfiguration(Lorg/apache/flink/runtime/taskexecutor/TaskManagerServicesConfiguration;Lorg/apache/flink/runtime/blob/PermanentBlobService;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerServices;

+###org/apache/flink/runtime/taskexecutor/TaskManagerConfiguration
@1.14.0
+#<init>(ILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;[Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/configuration/Configuration;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;)V
+#getNumberSlots()I
+#getDefaultSlotResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getTotalResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getRpcTimeout()Lorg/apache/flink/api/common/time/Time;
+#getSlotTimeout()Lorg/apache/flink/api/common/time/Time;
+#getMaxRegistrationDuration()Lorg/apache/flink/api/common/time/Time;
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getTmpDirectories()[Ljava/lang/String;
+#shouldExitJvmOnOutOfMemoryError()Z
+#getTaskManagerLogPath()Ljava/lang/String;
+#getTaskManagerStdoutPath()Ljava/lang/String;
+#getTaskManagerLogDir()Ljava/lang/String;
+#getTaskManagerExternalAddress()Ljava/lang/String;
+#getRetryingRegistrationConfiguration()Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec;Ljava/lang/String;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerConfiguration;
@1.15.0
+#<init>(ILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;[Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/configuration/Configuration;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;)V
+#getTmpWorkingDirectory()Ljava/io/File;
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec;Ljava/lang/String;Ljava/io/File;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerConfiguration;
-#<init>(ILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;[Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/configuration/Configuration;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;)V
-#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec;Ljava/lang/String;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerConfiguration;
@1.16.0
+#<init>(ILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;[Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Ljava/time/Duration;Lorg/apache/flink/configuration/Configuration;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;)V
+#getMaxRegistrationDuration()Ljava/time/Duration;
-#<init>(ILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;[Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/configuration/Configuration;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;)V
-#getMaxRegistrationDuration()Lorg/apache/flink/api/common/time/Time;

+###org/apache/flink/runtime/taskexecutor/KvStateService
@1.14.0
+#<init>(Lorg/apache/flink/runtime/query/KvStateRegistry;Lorg/apache/flink/runtime/query/KvStateServer;Lorg/apache/flink/runtime/query/KvStateClientProxy;)V
+#getKvStateRegistry()Lorg/apache/flink/runtime/query/KvStateRegistry;
+#getKvStateServer()Lorg/apache/flink/runtime/query/KvStateServer;
+#getKvStateClientProxy()Lorg/apache/flink/runtime/query/KvStateClientProxy;
+#createKvStateTaskRegistry(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/query/TaskKvStateRegistry;
+#start()V
+#shutdown()V
+#isShutdown()Z
+#fromConfiguration(Lorg/apache/flink/runtime/taskexecutor/TaskManagerServicesConfiguration;)Lorg/apache/flink/runtime/taskexecutor/KvStateService;

+###org/apache/flink/runtime/taskexecutor/TaskExecutorToResourceManagerConnection
@1.14.0
+#<init>(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;Ljava/lang/String;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/registration/RegistrationConnectionListener;Lorg/apache/flink/runtime/resourcemanager/TaskExecutorRegistration;)V

+###org/apache/flink/runtime/taskexecutor/TaskExecutorRegistrationRejection
@1.14.0
+#<init>(Ljava/lang/String;)V
+#getReason()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/taskexecutor/TaskManagerServicesConfiguration
@1.14.0
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getTmpDirPaths()[Ljava/lang/String;
+#getNumberOfSlots()I
+#getPageSize()I
+#getTaskExecutorResourceSpec()Lorg/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec;
+#getNetworkMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getManagedMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getSystemResourceMetricsProbingInterval()Ljava/util/Optional;
+#getClassLoaderResolveOrder()Lorg/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ResolveOrder;
+#getAlwaysParentFirstLoaderPatterns()[Ljava/lang/String;
+#getNumIoThreads()I
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;ZLorg/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerServicesConfiguration;
@1.15.0
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;ZLorg/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec;Lorg/apache/flink/runtime/entrypoint/WorkingDirectory;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerServicesConfiguration;
-#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;ZLorg/apache/flink/runtime/taskexecutor/TaskExecutorResourceSpec;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerServicesConfiguration;
@1.16.0
+#getClassLoaderResolveOrder()Lorg/apache/flink/util/FlinkUserCodeClassLoaders$ResolveOrder;
+#getNodeId()Ljava/lang/String;
-#getClassLoaderResolveOrder()Lorg/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ResolveOrder;

+###org/apache/flink/runtime/taskexecutor/QueryableStateConfiguration
@1.14.0
+#<init>(Ljava/util/Iterator;Ljava/util/Iterator;IIII)V
+#getProxyPortRange()Ljava/util/Iterator;
+#getStateServerPortRange()Ljava/util/Iterator;
+#numProxyServerThreads()I
+#numProxyQueryThreads()I
+#numStateServerThreads()I
+#numStateQueryThreads()I
+#toString()Ljava/lang/String;
+#disabled()Lorg/apache/flink/runtime/taskexecutor/QueryableStateConfiguration;
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/taskexecutor/QueryableStateConfiguration;

+###org/apache/flink/runtime/taskexecutor/rpc/RpcResultPartitionConsumableNotifier
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;)V
+#notifyPartitionConsumable(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/taskmanager/TaskActions;)V
@1.16.0
-###org/apache/flink/runtime/taskexecutor/rpc/RpcResultPartitionConsumableNotifier

+###org/apache/flink/runtime/taskexecutor/rpc/RpcGlobalAggregateManager
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;)V
+#updateGlobalAggregate(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/flink/api/common/functions/AggregateFunction;)Ljava/lang/Object;

+###org/apache/flink/runtime/taskexecutor/rpc/RpcCheckpointResponder
@1.14.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinatorGateway;)V
+#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#reportCheckpointMetrics(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#declineCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V

+###org/apache/flink/runtime/taskexecutor/rpc/RpcPartitionStateChecker
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;)V
+#requestPartitionProducerState(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/taskexecutor/rpc/RpcTaskOperatorEventGateway
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/JobMasterOperatorEventGateway;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/function/Consumer;)V
+#sendOperatorEventToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)V
@1.15.0
+#sendRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/taskexecutor/rpc/RpcKvStateRegistryListener
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/KvStateRegistryGateway;Ljava/net/InetSocketAddress;)V
+#notifyKvStateRegistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/queryablestate/KvStateID;)V
+#notifyKvStateUnregistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;)V

+###org/apache/flink/runtime/taskexecutor/rpc/RpcInputSplitProvider
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/time/Time;)V
+#getNextInputSplit(Ljava/lang/ClassLoader;)Lorg/apache/flink/core/io/InputSplit;

+###org/apache/flink/runtime/taskexecutor/TaskExecutorToServiceAdapter
@1.14.0
+#start()V
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#createFor(Lorg/apache/flink/runtime/taskexecutor/TaskExecutor;)Lorg/apache/flink/runtime/taskexecutor/TaskExecutorToServiceAdapter;

+###org/apache/flink/runtime/taskexecutor/TaskManagerRunner$TaskExecutorServiceFactory
@1.14.0
+#createTaskExecutor(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/blob/BlobCacheService;ZLorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerRunner$TaskExecutorService;
@1.15.0
+#createTaskExecutor(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/blob/BlobCacheService;ZLorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/entrypoint/WorkingDirectory;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerRunner$TaskExecutorService;
-#createTaskExecutor(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/blob/BlobCacheService;ZLorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerRunner$TaskExecutorService;

+###org/apache/flink/runtime/taskexecutor/TaskManagerRunner$TaskExecutorService
@1.14.0
+#start()V
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/taskexecutor/TaskManagerRunner$Result
@1.14.0
+#values()[Lorg/apache/flink/runtime/taskexecutor/TaskManagerRunner$Result;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerRunner$Result;
+#getExitCode()I

+###org/apache/flink/runtime/taskexecutor/TaskManagerRunner
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/core/plugin/PluginManager;Lorg/apache/flink/runtime/taskexecutor/TaskManagerRunner$TaskExecutorServiceFactory;)V
+#start()V
+#close()V
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#onFatalError(Ljava/lang/Throwable;)V
+#main([Ljava/lang/String;)V
+#loadConfiguration([Ljava/lang/String;)Lorg/apache/flink/configuration/Configuration;
+#runTaskManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/core/plugin/PluginManager;)I
+#runTaskManagerProcessSecurely([Ljava/lang/String;)V
+#runTaskManagerProcessSecurely(Lorg/apache/flink/configuration/Configuration;)V
+#createTaskExecutorService(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/blob/BlobCacheService;ZLorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerRunner$TaskExecutorService;
+#startTaskManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/blob/BlobCacheService;ZLorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskExecutor;
@1.15.0
+#createTaskExecutorService(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/blob/BlobCacheService;ZLorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/entrypoint/WorkingDirectory;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerRunner$TaskExecutorService;
+#startTaskManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/blob/TaskExecutorBlobService;ZLorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/entrypoint/WorkingDirectory;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskExecutor;
-#createTaskExecutorService(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/blob/BlobCacheService;ZLorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskManagerRunner$TaskExecutorService;
-#startTaskManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/blob/BlobCacheService;ZLorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/taskexecutor/TaskExecutor;

+###org/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/deployment/TaskDeploymentDescriptor$NonOffloaded
@1.14.0
+#<init>()V
+#<init>(Lorg/apache/flink/util/SerializedValue;)V

+###org/apache/flink/runtime/deployment/TaskDeploymentDescriptor$Offloaded
@1.14.0
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/blob/PermanentBlobKey;)V

+###org/apache/flink/runtime/deployment/TaskDeploymentDescriptor
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/Class;Lorg/apache/flink/runtime/util/SerializableArrayList;Lorg/apache/flink/runtime/util/SerializableArrayList;)V
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getVertexID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
+#getTaskName()Ljava/lang/String;
+#getIndexInSubtaskGroup()I
+#getCurrentNumberOfSubtasks()I
+#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getTaskConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getInvokableClass()Ljava/lang/Class;
+#getNumberOfOutputGateDescriptors()I
+#getOutputGateDescriptor(I)Lorg/apache/flink/runtime/deployment/GateDeploymentDescriptor;
+#getNumberOfInputGateDescriptors()I
+#getInputGateDescriptor(I)Lorg/apache/flink/runtime/deployment/GateDeploymentDescriptor;
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)V
+#getVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getInvokableClassName()Ljava/lang/String;
+#getOutputGates()Ljava/util/List;
+#getInputGates()Ljava/util/List;
+#getRequiredJarFiles()Ljava/util/List;
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/Class;Lorg/apache/flink/runtime/util/SerializableArrayList;Lorg/apache/flink/runtime/util/SerializableArrayList;)V
-#getVertexID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
-#getInvokableClass()Ljava/lang/Class;
-#getNumberOfOutputGateDescriptors()I
-#getOutputGateDescriptor(I)Lorg/apache/flink/runtime/deployment/GateDeploymentDescriptor;
-#getNumberOfInputGateDescriptors()I
-#getInputGateDescriptor(I)Lorg/apache/flink/runtime/deployment/GateDeploymentDescriptor;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)V
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILorg/apache/flink/runtime/state/StateHandle;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getNumberOfSubtasks()I
+#getTargetSlotNumber()I
+#getProducedPartitions()Ljava/util/List;
+#toString()Ljava/lang/String;
+#setOperatorState(Lorg/apache/flink/runtime/state/StateHandle;)V
+#getOperatorStates()Lorg/apache/flink/runtime/state/StateHandle;
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)V
-#<init>()V
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
-#getCurrentNumberOfSubtasks()I
-#getOutputGates()Ljava/util/List;
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILorg/apache/flink/runtime/util/SerializedValue;)V
+#getOperatorState()Lorg/apache/flink/runtime/util/SerializedValue;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILorg/apache/flink/runtime/state/StateHandle;)V
-#setOperatorState(Lorg/apache/flink/runtime/state/StateHandle;)V
-#getOperatorStates()Lorg/apache/flink/runtime/state/StateHandle;
@0.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILorg/apache/flink/util/SerializedValue;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)V
+#getRequiredClasspaths()Ljava/util/List;
+#getOperatorState()Lorg/apache/flink/util/SerializedValue;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILorg/apache/flink/runtime/util/SerializedValue;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)V
-#getOperatorState()Lorg/apache/flink/runtime/util/SerializedValue;
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;IILorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;Ljava/util/List;Ljava/util/List;)V
+#getSerializedJobInformation()Lorg/apache/flink/util/SerializedValue;
+#getSerializedTaskInformation()Lorg/apache/flink/util/SerializedValue;
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getExecutionAttemptId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getSubtaskIndex()I
+#getAttemptNumber()I
+#getTaskRestore()Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#loadBigData(Lorg/apache/flink/runtime/blob/PermanentBlobService;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILorg/apache/flink/util/SerializedValue;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)V
-#getJobID()Lorg/apache/flink/api/common/JobID;
-#getVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
-#getExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
-#getTaskName()Ljava/lang/String;
-#getIndexInSubtaskGroup()I
-#getNumberOfSubtasks()I
-#getTargetSlotNumber()I
-#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
-#getTaskConfiguration()Lorg/apache/flink/configuration/Configuration;
-#getInvokableClassName()Ljava/lang/String;
-#getRequiredJarFiles()Ljava/util/List;
-#getRequiredClasspaths()Ljava/util/List;
-#getOperatorState()Lorg/apache/flink/util/SerializedValue;
@1.16.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;Ljava/util/List;Ljava/util/List;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;IILorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;Ljava/util/List;Ljava/util/List;)V

+###org/apache/flink/runtime/deployment/ResultPartitionDeploymentDescriptor
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;I)V
+#getResultId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getPartitionId()Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;
+#getPartitionType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#getNumberOfSubpartitions()I
+#toString()Ljava/lang/String;
+#from(Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;)Lorg/apache/flink/runtime/deployment/ResultPartitionDeploymentDescriptor;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/shuffle/PartitionDescriptor;Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;IZ)V
+#getTotalNumberOfPartitions()I
+#getMaxParallelism()I
+#getShuffleDescriptor()Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;
+#notifyPartitionDataAvailable()Z
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;I)V
-#from(Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;)Lorg/apache/flink/runtime/deployment/ResultPartitionDeploymentDescriptor;
@1.16.0
+#<init>(Lorg/apache/flink/runtime/shuffle/PartitionDescriptor;Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;I)V
-#<init>(Lorg/apache/flink/runtime/shuffle/PartitionDescriptor;Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;IZ)V
-#notifyPartitionDataAvailable()Z

+###org/apache/flink/runtime/deployment/InputGateDeploymentDescriptor
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;I[Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;)V
+#getConsumedResultId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getConsumedSubpartitionIndex()I
+#getInputChannelDeploymentDescriptors()[Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;
+#toString()Ljava/lang/String;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;I[Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;ILorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;)V
+#getConsumedPartitionType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#loadBigData(Lorg/apache/flink/runtime/blob/PermanentBlobService;Lorg/apache/flink/api/common/JobID;)V
+#getShuffleDescriptors()[Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;I[Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;)V
-#getInputChannelDeploymentDescriptors()[Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;Lorg/apache/flink/runtime/deployment/SubpartitionIndexRange;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;)V
+#getConsumedSubpartitionIndexRange()Lorg/apache/flink/runtime/deployment/SubpartitionIndexRange;
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;ILorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor$MaybeOffloaded;)V

+###org/apache/flink/runtime/deployment/SubpartitionIndexRange
@1.15.0
+#<init>(II)V
+#getStartIndex()I
+#getEndIndex()I
+#size()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint
@1.14.0
+#values()[Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;
+#fromJobType(Lorg/apache/flink/runtime/jobgraph/JobType;)Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;

+###org/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory
@1.14.0
+#createDeploymentDescriptor(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/checkpoint/JobManagerTaskRestore;Ljava/util/Collection;)Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;
+#fromExecutionVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;I)Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory;
+#getConsumedPartitionShuffleDescriptor(Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;)Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;
@1.15.0
+#computeConsumedSubpartitionRange(Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;I)Lorg/apache/flink/runtime/deployment/SubpartitionIndexRange;
@1.16.0
+#computeConsumedSubpartitionRange(ILorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;I)Lorg/apache/flink/runtime/deployment/SubpartitionIndexRange;
+#fromExecution(Lorg/apache/flink/runtime/executiongraph/Execution;)Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory;
-#computeConsumedSubpartitionRange(Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;I)Lorg/apache/flink/runtime/deployment/SubpartitionIndexRange;
-#fromExecutionVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;I)Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory;

+###org/apache/flink/runtime/jobmaster/JobMasterId
@1.14.0
+#<init>(Ljava/util/UUID;)V
+#toUUID()Ljava/util/UUID;
+#generate()Lorg/apache/flink/runtime/jobmaster/JobMasterId;
+#fromUuidOrNull(Ljava/util/UUID;)Lorg/apache/flink/runtime/jobmaster/JobMasterId;

+###org/apache/flink/runtime/jobmaster/AllocatedSlotReport
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getAllocatedSlotInfos()Ljava/util/Collection;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobmaster/AllocatedSlotInfo
@1.14.0
+#<init>(ILorg/apache/flink/runtime/clusterframework/types/AllocationID;)V
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getSlotIndex()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobmaster/LogicalSlot$Payload
@1.14.0
+#fail(Ljava/lang/Throwable;)V
+#getTerminalStateFuture()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/LogicalSlot
@1.14.0
+#getTaskManagerLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getTaskManagerGateway()Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;
+#getLocality()Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;
+#isAlive()Z
+#tryAssignPayload(Lorg/apache/flink/runtime/jobmaster/LogicalSlot$Payload;)Z
+#getPayload()Lorg/apache/flink/runtime/jobmaster/LogicalSlot$Payload;
+#releaseSlot()Ljava/util/concurrent/CompletableFuture;
+#releaseSlot(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getSlotRequestId()Lorg/apache/flink/runtime/jobmaster/SlotRequestId;

+###org/apache/flink/runtime/jobmaster/SlotRequestId
@1.14.0
+#<init>(JJ)V
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobmaster/JobResult$Builder
@1.14.0
+#<init>()V
+#jobId(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/JobResult$Builder;
+#applicationStatus(Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;)Lorg/apache/flink/runtime/jobmaster/JobResult$Builder;
+#accumulatorResults(Ljava/util/Map;)Lorg/apache/flink/runtime/jobmaster/JobResult$Builder;
+#netRuntime(J)Lorg/apache/flink/runtime/jobmaster/JobResult$Builder;
+#serializedThrowable(Lorg/apache/flink/util/SerializedThrowable;)Lorg/apache/flink/runtime/jobmaster/JobResult$Builder;
+#build()Lorg/apache/flink/runtime/jobmaster/JobResult;

+###org/apache/flink/runtime/jobmaster/JobResult
@1.14.0
+#isSuccess()Z
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getApplicationStatus()Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;
+#getAccumulatorResults()Ljava/util/Map;
+#getNetRuntime()J
+#getSerializedThrowable()Ljava/util/Optional;
+#toJobExecutionResult(Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/JobExecutionResult;
+#createFrom(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Lorg/apache/flink/runtime/jobmaster/JobResult;

+###org/apache/flink/runtime/jobmaster/JobManagerSharedServices
@1.14.0
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/blob/BlobWriter;)V
+#getFutureExecutor()Ljava/util/concurrent/ScheduledExecutorService;
+#getIoExecutor()Ljava/util/concurrent/Executor;
+#getLibraryCacheManager()Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;
+#getShuffleMaster()Lorg/apache/flink/runtime/shuffle/ShuffleMaster;
+#getBlobWriter()Lorg/apache/flink/runtime/blob/BlobWriter;
+#shutdown()V
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/jobmaster/JobManagerSharedServices;

+###org/apache/flink/runtime/jobmaster/JobManagerRunner
@1.14.0
+#start()V
+#getJobMasterGateway()Ljava/util/concurrent/CompletableFuture;
+#getResultFuture()Ljava/util/concurrent/CompletableFuture;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#cancel(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobStatus(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobDetails(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJob(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#isInitialized()Z

+###org/apache/flink/runtime/jobmaster/JobManagerRunnerResult
@1.14.0
+#isSuccess()Z
+#isInitializationFailure()Z
+#getExecutionGraphInfo()Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;
+#getInitializationFailure()Ljava/lang/Throwable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#forSuccess(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)Lorg/apache/flink/runtime/jobmaster/JobManagerRunnerResult;
+#forInitializationFailure(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;Ljava/lang/Throwable;)Lorg/apache/flink/runtime/jobmaster/JobManagerRunnerResult;

+###org/apache/flink/runtime/jobmaster/JobMasterGateway
@1.14.0
+#cancel(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)Ljava/util/concurrent/CompletableFuture;
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Ljava/util/concurrent/CompletableFuture;
+#requestPartitionState(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Ljava/util/concurrent/CompletableFuture;
+#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#disconnectTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)Ljava/util/concurrent/CompletableFuture;
+#disconnectResourceManager(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/lang/Exception;)V
+#offerSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/util/Collection;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#failSlot(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Exception;)V
+#registerTaskManager(Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/UnresolvedTaskManagerLocation;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorToJobManagerHeartbeatPayload;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromResourceManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/concurrent/CompletableFuture;
+#requestJobDetails(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobStatus(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJob(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#notifyAllocationFailure(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Exception;)V
+#notifyNotEnoughResourcesAvailable(Ljava/util/Collection;)V
+#updateGlobalAggregate(Ljava/lang/String;Ljava/lang/Object;[B)Ljava/util/concurrent/CompletableFuture;
+#deliverCoordinationRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopTrackingAndReleasePartitions(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#registerTaskManager(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/TaskManagerRegistrationInformation;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Ljava/lang/String;ZLorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#registerTaskManager(Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/UnresolvedTaskManagerLocation;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#triggerSavepoint(Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#stopWithSavepoint(Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
@1.16.0
-#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/KvStateLocationOracle
@1.14.0
+#requestKvStateLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/KvStateRegistryGateway
@1.14.0
+#notifyKvStateRegistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/queryablestate/KvStateID;Ljava/net/InetSocketAddress;)Ljava/util/concurrent/CompletableFuture;
+#notifyKvStateUnregistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/JobMasterOperatorEventGateway
@1.14.0
+#sendOperatorEventToCoordinator(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#sendRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/factories/JobManagerJobMetricGroupFactory
@1.14.0
+#create(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;

+###org/apache/flink/runtime/jobmaster/factories/JobMasterServiceFactory
@1.14.0
+#createJobMasterService(Ljava/util/UUID;Lorg/apache/flink/runtime/jobmanager/OnCompletionActions;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/factories/DefaultJobMasterServiceProcessFactory
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/tasks/JobCheckpointingSettings;JLorg/apache/flink/runtime/jobmaster/factories/JobMasterServiceFactory;)V
+#create(Ljava/util/UUID;)Lorg/apache/flink/runtime/jobmaster/JobMasterServiceProcess;
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#createArchivedExecutionGraph(Lorg/apache/flink/api/common/JobStatus;Ljava/lang/Throwable;)Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;

+###org/apache/flink/runtime/jobmaster/factories/JobMasterServiceProcessFactory
@1.14.0
+#create(Ljava/util/UUID;)Lorg/apache/flink/runtime/jobmaster/JobMasterServiceProcess;
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#createArchivedExecutionGraph(Lorg/apache/flink/api/common/JobStatus;Ljava/lang/Throwable;)Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;

+###org/apache/flink/runtime/jobmaster/factories/DefaultJobMasterServiceFactory
@1.14.0
+#<init>(Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/jobmaster/JobMasterConfiguration;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/jobmaster/SlotPoolServiceSchedulerFactory;Lorg/apache/flink/runtime/jobmaster/JobManagerSharedServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/jobmaster/factories/JobManagerJobMetricGroupFactory;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Ljava/lang/ClassLoader;J)V
+#createJobMasterService(Ljava/util/UUID;Lorg/apache/flink/runtime/jobmanager/OnCompletionActions;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/factories/DefaultJobManagerJobMetricGroupFactory
@1.14.0
+#<init>(Lorg/apache/flink/runtime/metrics/groups/JobManagerMetricGroup;)V
+#create(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;

+###org/apache/flink/runtime/jobmaster/factories/UnregisteredJobManagerJobMetricGroupFactory
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobmaster/factories/UnregisteredJobManagerJobMetricGroupFactory;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmaster/factories/UnregisteredJobManagerJobMetricGroupFactory;
+#create(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;

+###org/apache/flink/runtime/jobmaster/SerializedInputSplit
@1.14.0
+#<init>([B)V
+#getInputSplitData()[B
+#isEmpty()Z

+###org/apache/flink/runtime/jobmaster/TaskManagerRegistrationInformation
@1.15.0
+#getTaskManagerRpcAddress()Ljava/lang/String;
+#getUnresolvedTaskManagerLocation()Lorg/apache/flink/runtime/taskmanager/UnresolvedTaskManagerLocation;
+#getTaskManagerSession()Ljava/util/UUID;
+#create(Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/UnresolvedTaskManagerLocation;Ljava/util/UUID;)Lorg/apache/flink/runtime/jobmaster/TaskManagerRegistrationInformation;

+###org/apache/flink/runtime/jobmaster/RpcTaskManagerGateway
@1.14.0
+#<init>(Lorg/apache/flink/runtime/taskexecutor/TaskExecutorGateway;Lorg/apache/flink/runtime/jobmaster/JobMasterId;)V
+#getAddress()Ljava/lang/String;
+#submitTask(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#updatePartitions(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Iterable;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#releasePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;)V
+#notifyCheckpointComplete(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;JJ)V
+#notifyCheckpointAborted(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;JJJ)V
+#triggerCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;JJLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/CompletableFuture;
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#sendOperatorEventToTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#notifyCheckpointOnComplete(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;JJJ)V
-#notifyCheckpointComplete(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;JJ)V

+###org/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolBridge
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolFactory;Lorg/apache/flink/util/clock/Clock;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)V
+#castInto(Ljava/lang/Class;)Ljava/util/Optional;
+#allocateAvailableSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Ljava/util/Optional;
+#requestNewAllocatedSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestNewAllocatedBatchSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Ljava/util/concurrent/CompletableFuture;
+#releaseSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Ljava/lang/Throwable;)V
+#notifyNotEnoughResourcesAvailable(Ljava/util/Collection;)V
+#getAllocatedSlotsInformation()Ljava/util/Collection;
+#getAvailableSlotsInformation()Ljava/util/Collection;
+#disableBatchSlotRequestTimeoutCheck()V
+#getNumPendingRequests()I
@1.15.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolFactory;Lorg/apache/flink/util/clock/Clock;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/jobmaster/slotpool/RequestSlotMatchingStrategy;)V
+#setIsJobRestarting(Z)V
+#offerSlots(Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;Ljava/util/Collection;)Ljava/util/Collection;
+#requestNewAllocatedSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/util/Collection;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestNewAllocatedBatchSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolFactory;Lorg/apache/flink/util/clock/Clock;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)V
-#requestNewAllocatedSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#requestNewAllocatedBatchSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolService
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolFactory;Lorg/apache/flink/util/clock/Clock;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)V
+#castInto(Ljava/lang/Class;)Ljava/util/Optional;
+#start(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Ljava/lang/String;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#close()V
+#offerSlots(Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;Ljava/util/Collection;)Ljava/util/Collection;
+#failAllocation(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Exception;)Ljava/util/Optional;
+#registerTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
+#releaseTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)Z
+#connectToResourceManager(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerGateway;)V
+#disconnectResourceManager()V
+#createAllocatedSlotReport(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/jobmaster/AllocatedSlotReport;
@1.16.0
+#releaseFreeSlotsOnTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)V

+###org/apache/flink/runtime/jobmaster/slotpool/SlotPoolService
@1.14.0
+#castInto(Ljava/lang/Class;)Ljava/util/Optional;
+#start(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Ljava/lang/String;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#close()V
+#offerSlots(Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;Ljava/util/Collection;)Ljava/util/Collection;
+#failAllocation(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Exception;)Ljava/util/Optional;
+#registerTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
+#releaseTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)Z
+#connectToResourceManager(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerGateway;)V
+#disconnectResourceManager()V
+#createAllocatedSlotReport(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/jobmaster/AllocatedSlotReport;
+#notifyNotEnoughResourcesAvailable(Ljava/util/Collection;)V
@1.16.0
+#releaseFreeSlotsOnTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)V

+###org/apache/flink/runtime/jobmaster/slotpool/SlotPool
@1.14.0
+#start(Lorg/apache/flink/runtime/jobmaster/JobMasterId;Ljava/lang/String;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#close()V
+#connectToResourceManager(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerGateway;)V
+#disconnectResourceManager()V
+#registerTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
+#releaseTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)Z
+#offerSlots(Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;Ljava/util/Collection;)Ljava/util/Collection;
+#getAvailableSlotsInformation()Ljava/util/Collection;
+#getAllocatedSlotsInformation()Ljava/util/Collection;
+#allocateAvailableSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Ljava/util/Optional;
+#requestNewAllocatedSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestNewAllocatedBatchSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Ljava/util/concurrent/CompletableFuture;
+#disableBatchSlotRequestTimeoutCheck()V
+#createAllocatedSlotReport(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/jobmaster/AllocatedSlotReport;
@1.15.0
+#requestNewAllocatedSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/util/Collection;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestNewAllocatedBatchSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
+#setIsJobRestarting(Z)V

+###org/apache/flink/runtime/jobmaster/slotpool/AllocatedSlotActions
@1.14.0
+#releaseSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/jobmaster/slotpool/RequestSlotMatchingStrategy$RequestSlotMatch
@1.15.0

+###org/apache/flink/runtime/jobmaster/slotpool/RequestSlotMatchingStrategy
@1.15.0
+#matchRequestsAndSlots(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Collection;

+###org/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolFactory
@1.14.0
+#create(Lorg/apache/flink/api/common/JobID;Ljava/util/function/Consumer;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool;

+###org/apache/flink/runtime/jobmaster/slotpool/PhysicalSlot$Payload
@1.14.0
+#release(Ljava/lang/Throwable;)V
+#willOccupySlotIndefinitely()Z

+###org/apache/flink/runtime/jobmaster/slotpool/PhysicalSlot
@1.14.0
+#tryAssignPayload(Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlot$Payload;)Z

+###org/apache/flink/runtime/jobmaster/slotpool/SlotInfoWithUtilization
@1.14.0
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getTaskManagerLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getPhysicalSlotNumber()I
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#willBeOccupiedIndefinitely()Z
+#from(Lorg/apache/flink/runtime/jobmaster/SlotInfo;D)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotInfoWithUtilization;

+###org/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool$NewSlotsListener
@1.14.0
+#notifyNewSlotsAreAvailable(Ljava/util/Collection;)V

+###org/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool$NoOpNewSlotsListener
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool$NoOpNewSlotsListener;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool$NoOpNewSlotsListener;
+#notifyNewSlotsAreAvailable(Ljava/util/Collection;)V

+###org/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool
@1.14.0
+#increaseResourceRequirementsBy(Lorg/apache/flink/runtime/util/ResourceCounter;)V
+#decreaseResourceRequirementsBy(Lorg/apache/flink/runtime/util/ResourceCounter;)V
+#setResourceRequirements(Lorg/apache/flink/runtime/util/ResourceCounter;)V
+#getResourceRequirements()Ljava/util/Collection;
+#offerSlots(Ljava/util/Collection;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;J)Ljava/util/Collection;
+#getFreeSlotsInformation()Ljava/util/Collection;
+#getAllSlotsInformation()Ljava/util/Collection;
+#containsFreeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#reserveFreeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlot;
+#freeReservedSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;J)Lorg/apache/flink/runtime/util/ResourceCounter;
+#releaseSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#releaseSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Exception;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#containsSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
+#releaseIdleSlots(J)V
+#registerNewSlotsListener(Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool$NewSlotsListener;)V
@1.15.0
+#registerSlots(Ljava/util/Collection;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;J)V
@1.16.0
+#registerSlots(Ljava/util/Collection;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;J)Ljava/util/Collection;
-#registerSlots(Ljava/util/Collection;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;J)V

+###org/apache/flink/runtime/jobmaster/slotpool/DeclareResourceRequirementServiceConnectionManager$DeclareResourceRequirementsService
@1.14.0
+#declareResourceRequirements(Lorg/apache/flink/runtime/slots/ResourceRequirements;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/slotpool/DeclareResourceRequirementServiceConnectionManager
@1.14.0
+#declareResourceRequirements(Lorg/apache/flink/runtime/slots/ResourceRequirements;)V

+###org/apache/flink/runtime/jobmaster/slotpool/LocationPreferenceSlotSelectionStrategy
@1.14.0
+#selectBestSlotForProfile(Ljava/util/Collection;Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;)Ljava/util/Optional;
+#createDefault()Lorg/apache/flink/runtime/jobmaster/slotpool/LocationPreferenceSlotSelectionStrategy;
+#createEvenlySpreadOut()Lorg/apache/flink/runtime/jobmaster/slotpool/LocationPreferenceSlotSelectionStrategy;

+###org/apache/flink/runtime/jobmaster/slotpool/SlotSelectionStrategy$SlotInfoAndResources
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/SlotInfo;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;D)V
+#getSlotInfo()Lorg/apache/flink/runtime/jobmaster/SlotInfo;
+#getRemainingResources()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getTaskExecutorUtilization()D
+#fromSingleSlot(Lorg/apache/flink/runtime/jobmaster/slotpool/SlotInfoWithUtilization;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotSelectionStrategy$SlotInfoAndResources;

+###org/apache/flink/runtime/jobmaster/slotpool/SlotSelectionStrategy$SlotInfoAndLocality
@1.14.0
+#getSlotInfo()Lorg/apache/flink/runtime/jobmaster/SlotInfo;
+#getLocality()Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;
+#of(Lorg/apache/flink/runtime/jobmaster/SlotInfo;Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotSelectionStrategy$SlotInfoAndLocality;

+###org/apache/flink/runtime/jobmaster/slotpool/SlotSelectionStrategy
@1.14.0
+#selectBestSlotForProfile(Ljava/util/Collection;Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;)Ljava/util/Optional;

+###org/apache/flink/runtime/jobmaster/slotpool/DefaultDeclarativeSlotPoolFactory
@1.14.0
+#<init>()V
+#create(Lorg/apache/flink/api/common/JobID;Ljava/util/function/Consumer;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool;

+###org/apache/flink/runtime/jobmaster/slotpool/DefaultDeclarativeSlotPool
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/slotpool/AllocatedSlotPool;Ljava/util/function/Consumer;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)V
+#increaseResourceRequirementsBy(Lorg/apache/flink/runtime/util/ResourceCounter;)V
+#decreaseResourceRequirementsBy(Lorg/apache/flink/runtime/util/ResourceCounter;)V
+#setResourceRequirements(Lorg/apache/flink/runtime/util/ResourceCounter;)V
+#getResourceRequirements()Ljava/util/Collection;
+#offerSlots(Ljava/util/Collection;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;J)Ljava/util/Collection;
+#reserveFreeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlot;
+#freeReservedSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;J)Lorg/apache/flink/runtime/util/ResourceCounter;
+#registerNewSlotsListener(Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool$NewSlotsListener;)V
+#releaseSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#releaseSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Exception;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#releaseIdleSlots(J)V
+#getFreeSlotsInformation()Ljava/util/Collection;
+#getAllSlotsInformation()Ljava/util/Collection;
+#containsFreeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#containsSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
@1.15.0
+#registerSlots(Ljava/util/Collection;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;J)V
@1.16.0
+#registerSlots(Ljava/util/Collection;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;J)Ljava/util/Collection;
-#registerSlots(Ljava/util/Collection;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;J)V

+###org/apache/flink/runtime/jobmaster/slotpool/AllocatedSlotPool$FreeSlotInfo
@1.14.0
+#asSlotInfo()Lorg/apache/flink/runtime/jobmaster/slotpool/SlotInfoWithUtilization;
+#getFreeSince()J
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;

+###org/apache/flink/runtime/jobmaster/slotpool/AllocatedSlotPool$AllocatedSlotsAndReservationStatus
@1.14.0
+#wasFree(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#getAllocatedSlots()Ljava/util/Collection;

+###org/apache/flink/runtime/jobmaster/slotpool/AllocatedSlotPool
@1.14.0
+#addSlots(Ljava/util/Collection;J)V
+#removeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Ljava/util/Optional;
+#removeSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/jobmaster/slotpool/AllocatedSlotPool$AllocatedSlotsAndReservationStatus;
+#containsSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
+#containsSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#containsFreeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#reserveFreeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Lorg/apache/flink/runtime/jobmaster/slotpool/AllocatedSlot;
+#freeReservedSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;J)Ljava/util/Optional;
+#getFreeSlotsInformation()Ljava/util/Collection;
+#getAllSlotsInformation()Ljava/util/Collection;
@1.16.0
+#getSlotInformation(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Ljava/util/Optional;

+###org/apache/flink/runtime/jobmaster/slotpool/AbstractServiceConnectionManager
@1.14.0
+#<init>()V
+#connect(Ljava/lang/Object;)V
+#disconnect()V
+#close()V

+###org/apache/flink/runtime/jobmaster/slotpool/SimpleRequestSlotMatchingStrategy
@1.15.0
+#values()[Lorg/apache/flink/runtime/jobmaster/slotpool/SimpleRequestSlotMatchingStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmaster/slotpool/SimpleRequestSlotMatchingStrategy;
+#matchRequestsAndSlots(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Collection;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequestBulkCheckerImpl
@1.14.0
+#start(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#schedulePendingRequestBulkTimeoutCheck(Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequestBulk;Lorg/apache/flink/api/common/time/Time;)V
+#createFromSlotPool(Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPool;Lorg/apache/flink/util/clock/Clock;)Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequestBulkCheckerImpl;

+###org/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequestBulkChecker
@1.14.0
+#start(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#schedulePendingRequestBulkTimeoutCheck(Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequestBulk;Lorg/apache/flink/api/common/time/Time;)V

+###org/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequestBulk
@1.14.0
+#getPendingRequests()Ljava/util/Collection;
+#getAllocationIdsOfFulfilledRequests()Ljava/util/Set;
+#cancel(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/jobmaster/slotpool/SingleLogicalSlot
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/jobmaster/SlotContext;Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;Lorg/apache/flink/runtime/jobmaster/SlotOwner;)V
+#<init>(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/jobmaster/SlotContext;Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;Lorg/apache/flink/runtime/jobmaster/SlotOwner;Z)V
+#getTaskManagerLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getTaskManagerGateway()Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;
+#getLocality()Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;
+#isAlive()Z
+#tryAssignPayload(Lorg/apache/flink/runtime/jobmaster/LogicalSlot$Payload;)Z
+#getPayload()Lorg/apache/flink/runtime/jobmaster/LogicalSlot$Payload;
+#releaseSlot(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getSlotRequestId()Lorg/apache/flink/runtime/jobmaster/SlotRequestId;
+#allocateFromPhysicalSlot(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlot;Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;Lorg/apache/flink/runtime/jobmaster/SlotOwner;Z)Lorg/apache/flink/runtime/jobmaster/slotpool/SingleLogicalSlot;
+#release(Ljava/lang/Throwable;)V
+#willOccupySlotIndefinitely()Z

+###org/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolBridgeServiceFactory
@1.14.0
+#<init>(Lorg/apache/flink/util/clock/Clock;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)V
+#createSlotPoolService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
@1.15.0
+#<init>(Lorg/apache/flink/util/clock/Clock;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/jobmaster/slotpool/RequestSlotMatchingStrategy;)V
-#<init>(Lorg/apache/flink/util/clock/Clock;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)V
@1.16.0
+#createSlotPoolService(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolFactory;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
-#createSlotPoolService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;

+###org/apache/flink/runtime/jobmaster/slotpool/AbstractSlotPoolServiceFactory
@1.14.0

+###org/apache/flink/runtime/jobmaster/slotpool/SlotPoolServiceFactory
@1.14.0
+#createSlotPoolService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
@1.16.0
+#createSlotPoolService(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolFactory;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
-#createSlotPoolService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;

+###org/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotProviderImpl
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/slotpool/SlotSelectionStrategy;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPool;)V
+#allocatePhysicalSlot(Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequest;)Ljava/util/concurrent/CompletableFuture;
+#cancelSlotRequest(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Ljava/lang/Throwable;)V
@1.16.0
+#disableBatchSlotRequestTimeoutCheck()V

+###org/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotProvider
@1.14.0
+#allocatePhysicalSlot(Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequest;)Ljava/util/concurrent/CompletableFuture;
+#cancelSlotRequest(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Ljava/lang/Throwable;)V
@1.16.0
+#disableBatchSlotRequestTimeoutCheck()V

+###org/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequest$Result
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlot;)V
+#getSlotRequestId()Lorg/apache/flink/runtime/jobmaster/SlotRequestId;
+#getPhysicalSlot()Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlot;

+###org/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequest
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/SlotRequestId;Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;Z)V
+#getSlotRequestId()Lorg/apache/flink/runtime/jobmaster/SlotRequestId;
+#getSlotProfile()Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;
+#willSlotBeOccupiedIndefinitely()Z

+###org/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolServiceFactory
@1.14.0
+#<init>(Lorg/apache/flink/util/clock/Clock;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)V
+#createSlotPoolService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
@1.16.0
+#createSlotPoolService(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolFactory;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
-#createSlotPoolService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;

+###org/apache/flink/runtime/jobmaster/slotpool/DefaultAllocatedSlotPool
@1.14.0
+#<init>()V
+#addSlots(Ljava/util/Collection;J)V
+#removeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Ljava/util/Optional;
+#removeSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Lorg/apache/flink/runtime/jobmaster/slotpool/AllocatedSlotPool$AllocatedSlotsAndReservationStatus;
+#containsSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
+#containsSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#containsFreeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z
+#reserveFreeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Lorg/apache/flink/runtime/jobmaster/slotpool/AllocatedSlot;
+#freeReservedSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;J)Ljava/util/Optional;
+#getFreeSlotsInformation()Ljava/util/Collection;
+#getAllSlotsInformation()Ljava/util/Collection;
@1.16.0
+#getSlotInformation(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Ljava/util/Optional;

+###org/apache/flink/runtime/jobmaster/slotpool/PreferredAllocationRequestSlotMatchingStrategy
@1.15.0
+#values()[Lorg/apache/flink/runtime/jobmaster/slotpool/PreferredAllocationRequestSlotMatchingStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmaster/slotpool/PreferredAllocationRequestSlotMatchingStrategy;
+#matchRequestsAndSlots(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Collection;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobmaster/slotpool/PreviousAllocationSlotSelectionStrategy
@1.14.0
+#selectBestSlotForProfile(Ljava/util/Collection;Lorg/apache/flink/runtime/clusterframework/types/SlotProfile;)Ljava/util/Optional;
+#create()Lorg/apache/flink/runtime/jobmaster/slotpool/PreviousAllocationSlotSelectionStrategy;
+#create(Lorg/apache/flink/runtime/jobmaster/slotpool/SlotSelectionStrategy;)Lorg/apache/flink/runtime/jobmaster/slotpool/PreviousAllocationSlotSelectionStrategy;

+###org/apache/flink/runtime/jobmaster/slotpool/NoOpDeclareResourceRequirementServiceConnectionManager
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobmaster/slotpool/NoOpDeclareResourceRequirementServiceConnectionManager;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmaster/slotpool/NoOpDeclareResourceRequirementServiceConnectionManager;
+#connect(Lorg/apache/flink/runtime/jobmaster/slotpool/DeclareResourceRequirementServiceConnectionManager$DeclareResourceRequirementsService;)V
+#disconnect()V
+#declareResourceRequirements(Lorg/apache/flink/runtime/slots/ResourceRequirements;)V
+#close()V
+#connect(Ljava/lang/Object;)V

+###org/apache/flink/runtime/jobmaster/SlotContext
@1.14.0
+#getTaskManagerGateway()Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;

+###org/apache/flink/runtime/jobmaster/SlotInfo
@1.14.0
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getTaskManagerLocation()Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getPhysicalSlotNumber()I
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#willBeOccupiedIndefinitely()Z

+###org/apache/flink/runtime/jobmaster/ServiceConnectionManager
@1.14.0
+#connect(Ljava/lang/Object;)V
+#disconnect()V
+#close()V

+###org/apache/flink/runtime/jobmaster/JMTMRegistrationRejection
@1.14.0
+#<init>(Ljava/lang/String;)V
+#getReason()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobmaster/ResourceManagerAddress
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;)V
+#getAddress()Ljava/lang/String;
+#getResourceManagerId()Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobmaster/JMTMRegistrationSuccess
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;

+###org/apache/flink/runtime/jobmaster/DefaultJobMasterServiceProcess
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/util/UUID;Lorg/apache/flink/runtime/jobmaster/factories/JobMasterServiceFactory;Ljava/util/function/Function;)V
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#isInitializedAndRunning()Z
+#getJobMasterGatewayFuture()Ljava/util/concurrent/CompletableFuture;
+#getResultFuture()Ljava/util/concurrent/CompletableFuture;
+#getLeaderAddressFuture()Ljava/util/concurrent/CompletableFuture;
+#jobReachedGloballyTerminalState(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)V
+#jobMasterFailed(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/jobmaster/JobMasterServiceProcess$WaitingForLeadership
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobmaster/JobMasterServiceProcess$WaitingForLeadership;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmaster/JobMasterServiceProcess$WaitingForLeadership;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#isInitializedAndRunning()Z
+#getJobMasterGatewayFuture()Ljava/util/concurrent/CompletableFuture;
+#getResultFuture()Ljava/util/concurrent/CompletableFuture;
+#getLeaderAddressFuture()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/JobMasterServiceProcess
@1.14.0
+#waitingForLeadership()Lorg/apache/flink/runtime/jobmaster/JobMasterServiceProcess;
+#isInitializedAndRunning()Z
+#getJobMasterGatewayFuture()Ljava/util/concurrent/CompletableFuture;
+#getResultFuture()Ljava/util/concurrent/CompletableFuture;
+#getLeaderAddressFuture()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/JobMasterService
@1.14.0
+#getGateway()Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;
+#getAddress()Ljava/lang/String;
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/SlotOwner
@1.14.0
+#returnLogicalSlot(Lorg/apache/flink/runtime/jobmaster/LogicalSlot;)V

+###org/apache/flink/runtime/jobmaster/JobManagerException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/jobmaster/DefaultSlotPoolServiceSchedulerFactory
@1.14.0
+#createSlotPoolService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
+#getSchedulerType()Lorg/apache/flink/configuration/JobManagerOptions$SchedulerType;
+#createScheduler(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
+#create(Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolServiceFactory;Lorg/apache/flink/runtime/scheduler/SchedulerNGFactory;)Lorg/apache/flink/runtime/jobmaster/DefaultSlotPoolServiceSchedulerFactory;
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobgraph/JobType;)Lorg/apache/flink/runtime/jobmaster/DefaultSlotPoolServiceSchedulerFactory;
@1.16.0
+#createSlotPoolService(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolFactory;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
+#createScheduler(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/blocklist/BlocklistOperations;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
-#createSlotPoolService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
-#createScheduler(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;

+###org/apache/flink/runtime/jobmaster/SlotPoolServiceSchedulerFactory
@1.14.0
+#createSlotPoolService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
+#getSchedulerType()Lorg/apache/flink/configuration/JobManagerOptions$SchedulerType;
+#createScheduler(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
@1.16.0
+#createSlotPoolService(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPoolFactory;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
+#createScheduler(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/blocklist/BlocklistOperations;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
-#createSlotPoolService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;
-#createScheduler(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;

+###org/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker
@1.14.0
+#startTrackingPendingDeploymentOf(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#completeDeploymentOf(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#stopTrackingDeploymentOf(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#getExecutionsOn(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/Map;

+###org/apache/flink/runtime/jobmaster/ExecutionDeploymentState
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentState;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentState;

+###org/apache/flink/runtime/jobmaster/ExecutionGraphException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/jobmaster/ExecutionDeploymentReconciler$Factory
@1.14.0
+#create(Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentReconciliationHandler;)Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentReconciler;

+###org/apache/flink/runtime/jobmaster/ExecutionDeploymentReconciler
@1.14.0
+#reconcileExecutionDeployments(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/ExecutionDeploymentReport;Ljava/util/Map;)V

+###org/apache/flink/runtime/jobmaster/ExecutionDeploymentReconciliationHandler
@1.14.0
+#onMissingDeploymentsOf(Ljava/util/Collection;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#onUnknownDeploymentsOf(Ljava/util/Collection;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V

+###org/apache/flink/runtime/jobmaster/JobMasterServiceLeadershipRunner
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/factories/JobMasterServiceProcessFactory;Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderLease;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#start()V
+#getJobMasterGateway()Ljava/util/concurrent/CompletableFuture;
+#getResultFuture()Ljava/util/concurrent/CompletableFuture;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#cancel(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobStatus(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobDetails(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJob(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#isInitialized()Z
+#grantLeadership(Ljava/util/UUID;)V
+#revokeLeadership()V
+#handleError(Ljava/lang/Exception;)V
@1.15.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/factories/JobMasterServiceProcessFactory;Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/highavailability/JobResultStore;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderLease;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V
-#<init>(Lorg/apache/flink/runtime/jobmaster/factories/JobMasterServiceProcessFactory;Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderLease;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V

+###org/apache/flink/runtime/jobmaster/JobMasterConfiguration
@1.14.0
+#<init>(Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;Ljava/lang/String;Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;Lorg/apache/flink/configuration/Configuration;)V
+#getRpcTimeout()Lorg/apache/flink/api/common/time/Time;
+#getSlotRequestTimeout()Lorg/apache/flink/api/common/time/Time;
+#getTmpDirectory()Ljava/lang/String;
+#getRetryingRegistrationConfiguration()Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobmaster/JobMasterConfiguration;

+###org/apache/flink/runtime/jobmaster/JobMasterRegistrationSuccess
@1.14.0
+#<init>(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#getResourceManagerId()Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;
+#getResourceManagerResourceId()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobmaster/MiniDispatcherRestEndpoint
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rest/handler/RestHandlerConfiguration;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/TransientBlobService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V

+###org/apache/flink/runtime/jobmaster/ExecutionDeploymentTrackerDeploymentListenerAdapter
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;)V
+#onStartedDeployment(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#onCompletedDeployment(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V

+###org/apache/flink/runtime/jobmaster/JobMaster
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/jobmaster/JobMasterConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/jobmaster/SlotPoolServiceSchedulerFactory;Lorg/apache/flink/runtime/jobmaster/JobManagerSharedServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/jobmaster/factories/JobManagerJobMetricGroupFactory;Lorg/apache/flink/runtime/jobmanager/OnCompletionActions;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/PartitionTrackerFactory;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentReconciler$Factory;J)V
+#onStop()Ljava/util/concurrent/CompletableFuture;
+#cancel(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)Ljava/util/concurrent/CompletableFuture;
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Ljava/util/concurrent/CompletableFuture;
+#requestPartitionState(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Ljava/util/concurrent/CompletableFuture;
+#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#disconnectTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Exception;)Ljava/util/concurrent/CompletableFuture;
+#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#reportCheckpointMetrics(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#declineCheckpoint(Lorg/apache/flink/runtime/messages/checkpoint/DeclineCheckpoint;)V
+#sendOperatorEventToCoordinator(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;
+#requestKvStateLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#notifyKvStateRegistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/queryablestate/KvStateID;Ljava/net/InetSocketAddress;)Ljava/util/concurrent/CompletableFuture;
+#notifyKvStateUnregistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#offerSlots(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/util/Collection;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#failSlot(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Exception;)V
+#registerTaskManager(Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/UnresolvedTaskManagerLocation;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#disconnectResourceManager(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerId;Ljava/lang/Exception;)V
+#heartbeatFromTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorToJobManagerHeartbeatPayload;)Ljava/util/concurrent/CompletableFuture;
+#heartbeatFromResourceManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/concurrent/CompletableFuture;
+#requestJobDetails(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobStatus(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJob(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#notifyAllocationFailure(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Exception;)V
+#notifyNotEnoughResourcesAvailable(Ljava/util/Collection;)V
+#updateGlobalAggregate(Ljava/lang/String;Ljava/lang/Object;[B)Ljava/util/concurrent/CompletableFuture;
+#deliverCoordinationRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopTrackingAndReleasePartitions(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
+#getGateway()Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;
@1.15.0
+#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/util/SerializedValue;)V
+#sendRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;
+#registerTaskManager(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/TaskManagerRegistrationInformation;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Ljava/lang/String;ZLorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
-#registerTaskManager(Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/UnresolvedTaskManagerLocation;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#triggerSavepoint(Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#stopWithSavepoint(Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/jobmaster/JobMasterConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/jobmaster/SlotPoolServiceSchedulerFactory;Lorg/apache/flink/runtime/jobmaster/JobManagerSharedServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/jobmaster/factories/JobManagerJobMetricGroupFactory;Lorg/apache/flink/runtime/jobmanager/OnCompletionActions;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/PartitionTrackerFactory;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentReconciler$Factory;Lorg/apache/flink/runtime/blocklist/BlocklistHandler$Factory;J)V
+#notifyNewBlockedNodes(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
-#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/jobmaster/JobMasterId;Lorg/apache/flink/runtime/jobmaster/JobMasterConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/jobmaster/SlotPoolServiceSchedulerFactory;Lorg/apache/flink/runtime/jobmaster/JobManagerSharedServices;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/jobmaster/factories/JobManagerJobMetricGroupFactory;Lorg/apache/flink/runtime/jobmanager/OnCompletionActions;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/PartitionTrackerFactory;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentReconciler$Factory;J)V
-#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/jobmaster/JobMasterException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/jobmaster/JobNotFinishedException
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/jobmaster/DefaultExecutionDeploymentTracker
@1.14.0
+#<init>()V
+#startTrackingPendingDeploymentOf(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#completeDeploymentOf(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#stopTrackingDeploymentOf(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#getExecutionsOn(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/Map;

+###org/apache/flink/runtime/jobmaster/DefaultExecutionDeploymentReconciler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentReconciliationHandler;)V
+#reconcileExecutionDeployments(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/ExecutionDeploymentReport;Ljava/util/Map;)V

+###org/apache/flink/runtime/io/network/partition/ResultPartitionID
@0.9.0-milestone-1
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#getPartitionId()Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;
+#getProducerId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/ResultPartitionType
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#hasBackPressure()Z
+#isBlocking()Z
+#isPipelined()Z
+#isPersistent()Z
@1.14.0
+#isReconnectable()Z
+#isBounded()Z
@1.16.0
+#mustBePipelinedConsumed()Z
+#canBePipelinedConsumed()Z
+#isReleaseByScheduler()Z
+#isReleaseByUpstream()Z
+#isBlockingOrBlockingPersistentResultPartition()Z
+#isPipelinedOrPipelinedBoundedResultPartition()Z
+#supportCompression()Z
+#isReconsumable()Z
-#hasBackPressure()Z
-#isBlocking()Z
-#isPipelined()Z
-#isReconnectable()Z

+###org/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker
@1.14.0
+#startTrackingPartition(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/deployment/ResultPartitionDeploymentDescriptor;)V
+#stopTrackingAndReleasePartitions(Ljava/util/Collection;)V
+#stopTrackingAndReleasePartitions(Ljava/util/Collection;Z)V
+#stopTrackingAndReleaseOrPromotePartitions(Ljava/util/Collection;)V
+#getAllTrackedPartitions()Ljava/util/Collection;
@1.16.0
+#stopTrackingAndPromotePartitions(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
+#getAllTrackedNonClusterPartitions()Ljava/util/Collection;
+#getAllTrackedClusterPartitions()Ljava/util/Collection;
+#connectToResourceManager(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerGateway;)V
+#getClusterPartitionShuffleDescriptors(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/List;
-#stopTrackingAndReleaseOrPromotePartitions(Ljava/util/Collection;)V

+###org/apache/flink/runtime/io/network/partition/PartitionTracker
@1.14.0
+#stopTrackingPartitionsFor(Ljava/lang/Object;)Ljava/util/Collection;
+#stopTrackingPartitions(Ljava/util/Collection;)Ljava/util/Collection;
+#isTrackingPartitionsFor(Ljava/lang/Object;)Z
+#isPartitionTracked(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Z

+###org/apache/flink/runtime/io/network/partition/PartitionTrackerEntry
@1.14.0
+#getResultPartitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#getKey()Ljava/lang/Object;
+#getMetaInfo()Ljava/lang/Object;

+###org/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate
@1.14.0
+#<init>()V
+#getGateIndex()I
+#getUnfinishedChannels()Ljava/util/List;
+#checkpointStarted(Lorg/apache/flink/runtime/io/network/api/CheckpointBarrier;)V
+#checkpointStopped(J)V
+#getInputGateIndex()I
+#blockConsumption(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#convertToPriorityEvent(II)V
+#getBuffersInUseCount()I
+#announceBufferSize(I)V
@1.15.0
+#triggerDebloating()V
-#getBuffersInUseCount()I
-#announceBufferSize(I)V

+###org/apache/flink/runtime/io/network/partition/consumer/InputGate$InputWithData
@1.14.0
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/consumer/InputGate
@0.9.0-milestone-1
+#getNumberOfInputChannels()I
+#isFinished()Z
+#requestPartitions()V
+#getNextBufferOrEvent()Lorg/apache/flink/runtime/io/network/partition/consumer/BufferOrEvent;
+#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
+#registerListener(Lorg/apache/flink/runtime/util/event/EventListener;)V
@0.10.0
+#sendTaskEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
+#getPageSize()I
-#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
@1.14.0
+#<init>()V
+#setChannelStateWriter(Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V
+#hasReceivedEndOfData()Z
+#getNext()Ljava/util/Optional;
+#pollNext()Ljava/util/Optional;
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#resumeConsumption(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#acknowledgeAllRecordsProcessed(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#getChannel(I)Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;
+#getChannelInfos()Ljava/util/List;
+#getPriorityEventAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#setup()V
+#getStateConsumedFuture()Ljava/util/concurrent/CompletableFuture;
+#finishReadRecoveredState()V
-#getNextBufferOrEvent()Lorg/apache/flink/runtime/io/network/partition/consumer/BufferOrEvent;
-#registerListener(Lorg/apache/flink/runtime/util/event/EventListener;)V
-#getPageSize()I
@1.15.0
-#hasReceivedEndOfData()Z

+###org/apache/flink/runtime/io/network/partition/consumer/BufferOrEvent
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer;I)V
+#<init>(Lorg/apache/flink/runtime/event/task/AbstractEvent;I)V
+#isBuffer()Z
+#isEvent()Z
+#getBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#getEvent()Lorg/apache/flink/runtime/event/task/AbstractEvent;
+#getChannelIndex()I
+#setChannelIndex(I)V
+#toString()Ljava/lang/String;
@0.10.0
+#<init>(Lorg/apache/flink/runtime/event/AbstractEvent;I)V
+#getEvent()Lorg/apache/flink/runtime/event/AbstractEvent;
-#<init>(Lorg/apache/flink/runtime/event/task/AbstractEvent;I)V
-#getEvent()Lorg/apache/flink/runtime/event/task/AbstractEvent;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer;Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;ZZ)V
+#<init>(Lorg/apache/flink/runtime/event/AbstractEvent;ZLorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;ZIZ)V
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer;Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#<init>(Lorg/apache/flink/runtime/event/AbstractEvent;Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#getChannelInfo()Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;
+#setChannelInfo(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#moreAvailable()Z
+#morePriorityEvents()Z
+#setMoreAvailable(Z)V
+#getSize()I
+#hasPriority()Z
-#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer;I)V
-#<init>(Lorg/apache/flink/runtime/event/AbstractEvent;I)V
-#getChannelIndex()I
-#setChannelIndex(I)V

+###org/apache/flink/runtime/io/network/partition/consumer/CheckpointableInput
@1.14.0
+#blockConsumption(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#resumeConsumption(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#getChannelInfos()Ljava/util/List;
+#getNumberOfInputChannels()I
+#checkpointStarted(Lorg/apache/flink/runtime/io/network/api/CheckpointBarrier;)V
+#checkpointStopped(J)V
+#getInputGateIndex()I
+#convertToPriorityEvent(II)V

+###org/apache/flink/runtime/io/network/partition/consumer/InputChannel$BufferAndAvailability
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer;Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;II)V
+#buffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#moreAvailable()Z
+#morePriorityEvents()Z
+#buffersInBacklog()I
+#hasPriority()Z
+#getSequenceNumber()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/consumer/InputChannel
@0.9.0-milestone-1
@1.14.0
+#getChannelIndex()I
+#getChannelInfo()Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;
+#getPartitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#resumeConsumption()V
+#acknowledgeAllRecordsProcessed()V
+#notifyPriorityEvent(I)V
+#checkpointStarted(Lorg/apache/flink/runtime/io/network/api/CheckpointBarrier;)V
+#checkpointStopped(J)V
+#convertToPriorityEvent(I)V
+#unsynchronizedGetNumberOfQueuedBuffers()I
@1.15.0
+#getConsumedSubpartitionIndex()I
+#unsynchronizedGetSizeOfQueuedBuffers()J

+###org/apache/flink/runtime/io/network/partition/consumer/SingleInputGate
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;II)V
+#getNumberOfInputChannels()I
+#getConsumedResultId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#setBufferPool(Lorg/apache/flink/runtime/io/network/buffer/BufferPool;)V
+#setInputChannel(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;)V
+#updateInputChannel(Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;)V
+#releaseAllResources()V
+#isFinished()Z
+#requestPartitions()V
+#getNextBufferOrEvent()Lorg/apache/flink/runtime/io/network/partition/consumer/BufferOrEvent;
+#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
+#registerListener(Lorg/apache/flink/runtime/util/event/EventListener;)V
+#onAvailableBuffer(Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;)V
+#create(Lorg/apache/flink/runtime/deployment/InputGateDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
@0.9.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;IILorg/apache/flink/runtime/io/network/netty/PartitionStateChecker;)V
+#retriggerPartitionRequest(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)V
+#create(Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/deployment/InputGateDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;II)V
-#create(Lorg/apache/flink/runtime/deployment/InputGateDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
@0.10.0
+#getPageSize()I
+#sendTaskEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
-#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
@1.14.0
+#<init>(Ljava/lang/String;ILorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;IILorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider;Lorg/apache/flink/util/function/SupplierWithException;Lorg/apache/flink/runtime/io/network/buffer/BufferDecompressor;Lorg/apache/flink/core/memory/MemorySegmentProvider;I)V
+#setup()V
+#getStateConsumedFuture()Ljava/util/concurrent/CompletableFuture;
+#convertRecoveredInputChannels()V
+#finishReadRecoveredState()V
+#getGateIndex()I
+#getUnfinishedChannels()Ljava/util/List;
+#getBuffersInUseCount()I
+#announceBufferSize(I)V
+#getConsumedPartitionType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#getBufferPool()Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
+#getOwningTaskName()Ljava/lang/String;
+#getNumberOfQueuedBuffers()I
+#getCloseFuture()Ljava/util/concurrent/CompletableFuture;
+#getChannel(I)Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;
+#setupChannels()V
+#setInputChannels([Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;)V
+#updateInputChannel(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/shuffle/NettyShuffleDescriptor;)V
+#close()V
+#hasReceivedEndOfData()Z
+#toString()Ljava/lang/String;
+#getNext()Ljava/util/Optional;
+#pollNext()Ljava/util/Optional;
+#resumeConsumption(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#acknowledgeAllRecordsProcessed(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#getInputChannels()Ljava/util/Map;
-#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;IILorg/apache/flink/runtime/io/network/netty/PartitionStateChecker;)V
-#getConsumedResultId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
-#getPageSize()I
-#setInputChannel(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;)V
-#updateInputChannel(Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;)V
-#releaseAllResources()V
-#getNextBufferOrEvent()Lorg/apache/flink/runtime/io/network/partition/consumer/BufferOrEvent;
-#registerListener(Lorg/apache/flink/runtime/util/event/EventListener;)V
-#onAvailableBuffer(Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;)V
-#create(Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/deployment/InputGateDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
@1.15.0
+#<init>(Ljava/lang/String;ILorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;Lorg/apache/flink/runtime/deployment/SubpartitionIndexRange;ILorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider;Lorg/apache/flink/util/function/SupplierWithException;Lorg/apache/flink/runtime/io/network/buffer/BufferDecompressor;Lorg/apache/flink/core/memory/MemorySegmentProvider;ILorg/apache/flink/runtime/throughput/ThroughputCalculator;Lorg/apache/flink/runtime/throughput/BufferDebloater;)V
+#triggerDebloating()V
+#getLastEstimatedTimeToConsume()Ljava/time/Duration;
+#getSizeOfQueuedBuffers()J
+#retriggerPartitionRequest(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;I)V
+#hasReceivedEndOfData()Lorg/apache/flink/runtime/io/PullingAsyncDataInput$EndOfDataStatus;
-#<init>(Ljava/lang/String;ILorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;IILorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider;Lorg/apache/flink/util/function/SupplierWithException;Lorg/apache/flink/runtime/io/network/buffer/BufferDecompressor;Lorg/apache/flink/core/memory/MemorySegmentProvider;I)V
-#getBuffersInUseCount()I
-#retriggerPartitionRequest(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)V
-#hasReceivedEndOfData()Z

+###org/apache/flink/runtime/io/network/partition/consumer/LocalRecoveredInputChannel
@1.14.0

+###org/apache/flink/runtime/io/network/partition/consumer/RecoveredInputChannel
@1.14.0
+#setChannelStateWriter(Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V
+#toInputChannel()Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;
+#checkpointStopped(J)V
+#onRecoveredStateBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#finishReadRecoveredState()V
+#resumeConsumption()V
+#acknowledgeAllRecordsProcessed()V
+#requestBufferBlocking()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#checkpointStarted(Lorg/apache/flink/runtime/io/network/api/CheckpointBarrier;)V

+###org/apache/flink/runtime/io/network/partition/consumer/BufferManager
@1.14.0
+#<init>(Lorg/apache/flink/core/memory/MemorySegmentProvider;Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;I)V
+#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V
+#notifyBufferAvailable(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Z
+#notifyBufferDestroyed()V

+###org/apache/flink/runtime/io/network/partition/consumer/LocalInputChannel
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
+#onNotification()V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;IILorg/apache/flink/metrics/Counter;Lorg/apache/flink/metrics/Counter;Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V
+#checkpointStarted(Lorg/apache/flink/runtime/io/network/api/CheckpointBarrier;)V
+#checkpointStopped(J)V
+#notifyDataAvailable()V
+#resumeConsumption()V
+#acknowledgeAllRecordsProcessed()V
+#unsynchronizedGetNumberOfQueuedBuffers()I
-#onNotification()V
@1.15.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;IILorg/apache/flink/metrics/Counter;Lorg/apache/flink/metrics/Counter;Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V
-#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;IILorg/apache/flink/metrics/Counter;Lorg/apache/flink/metrics/Counter;Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V

+###org/apache/flink/runtime/io/network/partition/consumer/ChannelStatePersister
@1.14.0
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
+#getNumberOfQueuedBuffers()I
+#getInputChannelId()Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannelID;
+#getBufferProvider()Lorg/apache/flink/runtime/io/network/buffer/BufferProvider;
+#onBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;I)V
+#onEmptyBuffer(I)V
+#onError(Ljava/lang/Throwable;)V
@0.9.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/ConnectionID;Lorg/apache/flink/runtime/io/network/ConnectionManager;)V
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/ConnectionID;Lorg/apache/flink/runtime/io/network/ConnectionManager;Lscala/Tuple2;)V
+#failPartitionRequest()V
+#onFailedPartitionRequest()V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/ConnectionID;Lorg/apache/flink/runtime/io/network/ConnectionManager;IIILorg/apache/flink/metrics/Counter;Lorg/apache/flink/metrics/Counter;Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V
+#requestSubpartition(I)V
+#isReleased()Z
+#getNumberOfAvailableBuffers()I
+#getNumberOfRequiredBuffers()I
+#getSenderBacklog()I
+#getNextReceivedBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#notifyBufferAvailable(I)V
+#resumeConsumption()V
+#acknowledgeAllRecordsProcessed()V
+#getUnannouncedCredit()I
+#getAndResetUnannouncedCredit()I
+#unsynchronizedGetNumberOfQueuedBuffers()I
+#unsynchronizedGetExclusiveBuffersUsed()I
+#unsynchronizedGetFloatingBuffersAvailable()I
+#getInitialCredit()I
+#requestBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#onSenderBacklog(I)V
+#onBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;II)V
+#checkpointStarted(Lorg/apache/flink/runtime/io/network/api/CheckpointBarrier;)V
+#checkpointStopped(J)V
+#convertToPriorityEvent(I)V
+#onEmptyBuffer(II)V
-#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/ConnectionID;Lorg/apache/flink/runtime/io/network/ConnectionManager;)V
-#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/ConnectionID;Lorg/apache/flink/runtime/io/network/ConnectionManager;Lscala/Tuple2;)V
-#failPartitionRequest()V
-#onBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;I)V
-#onEmptyBuffer(I)V
@1.15.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/ConnectionID;Lorg/apache/flink/runtime/io/network/ConnectionManager;IIILorg/apache/flink/metrics/Counter;Lorg/apache/flink/metrics/Counter;Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V
+#requestSubpartition()V
+#unsynchronizedGetSizeOfQueuedBuffers()J
-#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/ConnectionID;Lorg/apache/flink/runtime/io/network/ConnectionManager;IIILorg/apache/flink/metrics/Counter;Lorg/apache/flink/metrics/Counter;Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V
-#requestSubpartition(I)V

+###org/apache/flink/runtime/io/network/partition/consumer/InputChannelID
@0.9.0-milestone-1
+#<init>()V
+#<init>(JJ)V
+#<init>(Lorg/apache/flink/util/AbstractID;)V
+#writeTo(Lio/netty/buffer/ByteBuf;)V
+#fromByteBuf(Lio/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannelID;
@1.14.0
+#writeTo(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)V
+#fromByteBuf(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannelID;
+#getByteBufLength()I
-#writeTo(Lio/netty/buffer/ByteBuf;)V
-#fromByteBuf(Lio/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannelID;

+###org/apache/flink/runtime/io/network/partition/consumer/UnionInputGate
@0.9.0-milestone-1
+#<init>([Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;)V
+#getNumberOfInputChannels()I
+#isFinished()Z
+#requestPartitions()V
+#getNextBufferOrEvent()Lorg/apache/flink/runtime/io/network/partition/consumer/BufferOrEvent;
+#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
+#registerListener(Lorg/apache/flink/runtime/util/event/EventListener;)V
@0.10.0
+#sendTaskEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
+#getPageSize()I
-#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
@1.14.0
+#<init>([Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;)V
+#getChannel(I)Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;
+#hasReceivedEndOfData()Z
+#getNext()Ljava/util/Optional;
+#pollNext()Ljava/util/Optional;
+#resumeConsumption(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#acknowledgeAllRecordsProcessed(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#setup()V
+#getStateConsumedFuture()Ljava/util/concurrent/CompletableFuture;
+#close()V
+#toString()Ljava/lang/String;
+#finishReadRecoveredState()V
-#<init>([Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;)V
-#getNextBufferOrEvent()Lorg/apache/flink/runtime/io/network/partition/consumer/BufferOrEvent;
-#registerListener(Lorg/apache/flink/runtime/util/event/EventListener;)V
-#getPageSize()I
@1.15.0
+#hasReceivedEndOfData()Lorg/apache/flink/runtime/io/PullingAsyncDataInput$EndOfDataStatus;
-#hasReceivedEndOfData()Z

+###org/apache/flink/runtime/io/network/partition/consumer/SingleInputGateFactory$ChannelStatistics
@1.14.0
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/consumer/SingleInputGateFactory
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskmanager/NettyShuffleEnvironmentConfiguration;Lorg/apache/flink/runtime/io/network/ConnectionManager;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/runtime/io/network/buffer/NetworkBufferPool;)V
+#create(Ljava/lang/String;ILorg/apache/flink/runtime/deployment/InputGateDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider;Lorg/apache/flink/runtime/io/network/metrics/InputChannelMetrics;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
@1.15.0
+#create(Lorg/apache/flink/runtime/shuffle/ShuffleIOOwnerContext;ILorg/apache/flink/runtime/deployment/InputGateDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
-#create(Ljava/lang/String;ILorg/apache/flink/runtime/deployment/InputGateDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider;Lorg/apache/flink/runtime/io/network/metrics/InputChannelMetrics;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
@1.16.1
+#create(Lorg/apache/flink/runtime/shuffle/ShuffleIOOwnerContext;ILorg/apache/flink/runtime/deployment/InputGateDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider;Lorg/apache/flink/runtime/io/network/metrics/InputChannelMetrics;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
-#create(Lorg/apache/flink/runtime/shuffle/ShuffleIOOwnerContext;ILorg/apache/flink/runtime/deployment/InputGateDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;

+###org/apache/flink/runtime/io/network/partition/consumer/InputGateID
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#getConsumedResultID()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getConsumerID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/consumer/RemoteRecoveredInputChannel
@1.14.0

+###org/apache/flink/runtime/io/network/partition/consumer/RemoteChannelStateChecker
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Ljava/lang/String;)V
+#isProducerReadyOrAbortConsumption(Lorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider$ResponseHandle;)Z

+###org/apache/flink/runtime/io/network/partition/consumer/PartitionConnectionException
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/io/network/partition/consumer/EndOfChannelStateEvent
@1.14.0
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/ChannelStateHolder
@1.14.0
+#setChannelStateWriter(Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V

+###org/apache/flink/runtime/io/network/partition/BufferAvailabilityListener
@1.14.0
+#notifyDataAvailable()V
+#notifyPriorityEvent(I)V

+###org/apache/flink/runtime/io/network/partition/ResultSubpartition$BufferAndBacklog
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer;ILorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;I)V
+#buffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#isDataAvailable()Z
+#buffersInBacklog()I
+#isEventAvailable()Z
+#getNextDataType()Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#getSequenceNumber()I
+#fromBufferAndLookahead(Lorg/apache/flink/runtime/io/network/buffer/Buffer;Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;II)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartition$BufferAndBacklog;

+###org/apache/flink/runtime/io/network/partition/ResultSubpartition
@0.9.0-milestone-1
+#<init>(ILorg/apache/flink/runtime/io/network/partition/ResultPartition;)V
+#add(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Z
+#finish()V
+#release()V
+#createReadView(Lorg/apache/flink/runtime/io/network/buffer/BufferProvider;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
@0.9.1
+#isReleased()Z
@1.14.0
+#getSubpartitionInfo()Lorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;
+#getSubPartitionIndex()I
+#add(Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;)I
+#add(Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;I)I
+#flush()V
+#createReadView(Lorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
+#unsynchronizedGetNumberOfQueuedBuffers()I
+#getNumberOfQueuedBuffers()I
+#bufferSize(I)V
-#add(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Z
-#createReadView(Lorg/apache/flink/runtime/io/network/buffer/BufferProvider;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
@1.16.0
+#alignedBarrierTimeout(J)V
+#abortCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V

+###org/apache/flink/runtime/io/network/partition/ResultSubpartitionView$AvailabilityWithBacklog
@1.14.0
+#<init>(ZI)V
+#isAvailable()Z
+#getBacklog()I

+###org/apache/flink/runtime/io/network/partition/ResultSubpartitionView
@0.9.0-milestone-1
+#getNextBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#registerListener(Lorg/apache/flink/runtime/util/event/NotificationListener;)Z
+#releaseAllResources()V
+#notifySubpartitionConsumed()V
+#isReleased()Z
@0.9.0
+#getFailureCause()Ljava/lang/Throwable;
@1.14.0
+#getNextBuffer()Lorg/apache/flink/runtime/io/network/partition/ResultSubpartition$BufferAndBacklog;
+#notifyDataAvailable()V
+#notifyPriorityEvent(I)V
+#resumeConsumption()V
+#acknowledgeAllDataProcessed()V
+#getAvailabilityAndBacklog(I)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView$AvailabilityWithBacklog;
+#unsynchronizedGetNumberOfQueuedBuffers()I
+#getNumberOfQueuedBuffers()I
+#notifyNewBufferSize(I)V
-#getNextBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
-#registerListener(Lorg/apache/flink/runtime/util/event/NotificationListener;)Z
-#notifySubpartitionConsumed()V

+###org/apache/flink/runtime/io/network/partition/ResultPartition
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;)V
+#registerBufferPool(Lorg/apache/flink/runtime/io/network/buffer/BufferPool;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getPartitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#getNumberOfSubpartitions()I
+#getBufferProvider()Lorg/apache/flink/runtime/io/network/buffer/BufferProvider;
+#getTotalNumberOfBuffers()I
+#getTotalNumberOfBytes()J
+#add(Lorg/apache/flink/runtime/io/network/buffer/Buffer;I)V
+#finish()V
+#release()V
+#createSubpartitionView(ILorg/apache/flink/runtime/io/network/buffer/BufferProvider;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
+#releaseMemory(I)V
+#toString()Ljava/lang/String;
@0.9.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;)V
+#release(Ljava/lang/Throwable;)V
+#destroyBufferPool()V
+#getFailureCause()Ljava/lang/Throwable;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;)V
@1.14.0
+#<init>(Ljava/lang/String;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;IILorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/buffer/BufferCompressor;Lorg/apache/flink/util/function/SupplierWithException;)V
+#setup()V
+#getOwningTaskName()Ljava/lang/String;
+#getPartitionIndex()I
+#getBufferPool()Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
+#getNumberOfQueuedBuffers()I
+#getNumberOfQueuedBuffers(I)I
+#getPartitionType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#notifyEndOfData()V
+#getAllDataProcessedFuture()Ljava/util/concurrent/CompletableFuture;
+#onSubpartitionAllDataProcessed(I)V
+#isFinished()Z
+#close()V
+#fail(Ljava/lang/Throwable;)V
+#getNumTargetKeyGroups()I
+#setMetricGroup(Lorg/apache/flink/runtime/metrics/groups/TaskIOMetricGroup;)V
+#isReleased()Z
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#getPartitionManager()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;
-#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;)V
-#registerBufferPool(Lorg/apache/flink/runtime/io/network/buffer/BufferPool;)V
-#getJobId()Lorg/apache/flink/api/common/JobID;
-#getBufferProvider()Lorg/apache/flink/runtime/io/network/buffer/BufferProvider;
-#getTotalNumberOfBuffers()I
-#getTotalNumberOfBytes()J
-#add(Lorg/apache/flink/runtime/io/network/buffer/Buffer;I)V
-#destroyBufferPool()V
-#createSubpartitionView(ILorg/apache/flink/runtime/io/network/buffer/BufferProvider;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
-#releaseMemory(I)V
@1.15.0
+#getSizeOfQueuedBuffersUnsafe()J
+#notifyEndOfData(Lorg/apache/flink/runtime/io/network/api/StopMode;)V
-#notifyEndOfData()V
@1.16.0
+#setMaxOverdraftBuffersPerGate(I)V

+###org/apache/flink/runtime/io/network/partition/ResultPartitionManager
@0.9.0-milestone-1
+#<init>()V
+#registerResultPartition(Lorg/apache/flink/runtime/io/network/partition/ResultPartition;)V
+#createSubpartitionView(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/buffer/BufferProvider;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
+#releasePartitionsProducedBy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#shutdown()V
@0.9.0
+#releasePartitionsProducedBy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;)V
@1.14.0
+#createSubpartitionView(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
+#releasePartition(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Ljava/lang/Throwable;)V
+#getUnreleasedPartitions()Ljava/util/Collection;
-#createSubpartitionView(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/buffer/BufferProvider;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
-#releasePartitionsProducedBy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#releasePartitionsProducedBy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/io/network/partition/ResultPartitionProvider
@0.9.0-milestone-1
+#createSubpartitionView(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/buffer/BufferProvider;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
@1.14.0
+#createSubpartitionView(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
-#createSubpartitionView(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/buffer/BufferProvider;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;

+###org/apache/flink/runtime/io/network/partition/PrioritizedDeque
@1.14.0
+#<init>()V
+#addPriorityElement(Ljava/lang/Object;)V
+#add(Ljava/lang/Object;)V
+#add(Ljava/lang/Object;ZZ)V
+#prioritize(Ljava/lang/Object;)V
+#asUnmodifiableCollection()Ljava/util/Collection;
+#getAndRemove(Ljava/util/function/Predicate;)Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#getNumPriorityElements()I
+#containsPriorityElement(Ljava/lang/Object;)Z
+#size()I
+#getNumUnprioritizedElements()I
+#iterator()Ljava/util/Iterator;
+#clear()V
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#peekLast()Ljava/lang/Object;
+#stream()Ljava/util/stream/Stream;

+###org/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider$ResponseHandle
@1.14.0
+#getConsumerExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getProducerExecutionState()Lorg/apache/flink/types/Either;
+#cancelConsumption()V
+#failConsumption(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider
@1.14.0
+#requestPartitionProducerState(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Ljava/util/function/Consumer;)V

+###org/apache/flink/runtime/io/network/partition/ClusterPartitionManager
@1.14.0
+#listDataSets()Ljava/util/concurrent/CompletableFuture;
+#releaseClusterPartitions(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#reportClusterPartitions(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/partition/ClusterPartitionReport;)Ljava/util/concurrent/CompletableFuture;
+#getClusterPartitionsShuffleDescriptors(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/io/network/partition/DataSetMetaInfo
@1.14.0
+#getNumRegisteredPartitions()Ljava/util/Optional;
+#getNumTotalPartitions()I
+#withNumRegisteredPartitions(II)Lorg/apache/flink/runtime/io/network/partition/DataSetMetaInfo;
@1.15.0
+#getNumRegisteredPartitions()Ljava/util/OptionalInt;
-#getNumRegisteredPartitions()Ljava/util/Optional;
@1.16.0
+#addShuffleDescriptors(Ljava/util/Map;)Lorg/apache/flink/runtime/io/network/partition/DataSetMetaInfo;
+#getShuffleDescriptors()Ljava/util/Map;

+###org/apache/flink/runtime/io/network/partition/SortBasedDataBuffer
@1.15.0
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/BufferPool;III[I)V
+#append(Ljava/nio/ByteBuffer;ILorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)Z
+#getNextBuffer(Lorg/apache/flink/core/memory/MemorySegment;)Lorg/apache/flink/runtime/io/network/partition/BufferWithChannel;
+#numTotalRecords()J
+#numTotalBytes()J
+#hasRemaining()Z
+#reset()V
+#finish()V
+#isFinished()Z
+#release()V
+#isReleased()Z
@1.16.0
+#<init>(Ljava/util/LinkedList;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;III[I)V
-#<init>(Lorg/apache/flink/runtime/io/network/buffer/BufferPool;III[I)V
-#reset()V

+###org/apache/flink/runtime/io/network/partition/DataBuffer
@1.15.0
+#append(Ljava/nio/ByteBuffer;ILorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)Z
+#getNextBuffer(Lorg/apache/flink/core/memory/MemorySegment;)Lorg/apache/flink/runtime/io/network/partition/BufferWithChannel;
+#numTotalRecords()J
+#numTotalBytes()J
+#hasRemaining()Z
+#reset()V
+#finish()V
+#isFinished()Z
+#release()V
+#isReleased()Z
@1.16.0
-#reset()V

+###org/apache/flink/runtime/io/network/partition/BufferWithChannel
@1.14.0
+#getBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#getChannelIndex()I

+###org/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTracker
@1.14.0
+#processTaskExecutorClusterPartitionReport(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/partition/ClusterPartitionReport;)V
+#processTaskExecutorShutdown(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#releaseClusterPartitions(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/concurrent/CompletableFuture;
+#listDataSets()Ljava/util/Map;
@1.16.0
+#getClusterPartitionShuffleDescriptors(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/List;

+###org/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerFactory
@1.14.0
+#get(Lorg/apache/flink/runtime/io/network/partition/TaskExecutorClusterPartitionReleaser;)Lorg/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTracker;

+###org/apache/flink/runtime/io/network/partition/TaskExecutorClusterPartitionReleaser
@1.14.0
+#releaseClusterPartitions(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/util/Set;)V

+###org/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier
@0.9.0-milestone-1
+#notifyPartitionConsumable(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
@1.14.0
+#notifyPartitionConsumable(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/taskmanager/TaskActions;)V
-#notifyPartitionConsumable(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
@1.16.0
-###org/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier

+###org/apache/flink/runtime/io/network/partition/BoundedData$Reader
@1.14.0
+#nextBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;

+###org/apache/flink/runtime/io/network/partition/BoundedBlockingResultPartition
@1.14.0
+#<init>(Ljava/lang/String;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;[Lorg/apache/flink/runtime/io/network/partition/ResultSubpartition;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/buffer/BufferCompressor;Lorg/apache/flink/util/function/SupplierWithException;)V
+#notifyEndOfData()V
+#flush(I)V
+#flushAll()V
@1.15.0
+#notifyEndOfData(Lorg/apache/flink/runtime/io/network/api/StopMode;)V
-#notifyEndOfData()V

+###org/apache/flink/runtime/io/network/partition/BufferWritingResultPartition
@1.14.0
+#<init>(Ljava/lang/String;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;[Lorg/apache/flink/runtime/io/network/partition/ResultSubpartition;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/buffer/BufferCompressor;Lorg/apache/flink/util/function/SupplierWithException;)V
+#setup()V
+#getNumberOfQueuedBuffers()I
+#getNumberOfQueuedBuffers(I)I
+#emitRecord(Ljava/nio/ByteBuffer;I)V
+#broadcastRecord(Ljava/nio/ByteBuffer;)V
+#broadcastEvent(Lorg/apache/flink/runtime/event/AbstractEvent;Z)V
+#setMetricGroup(Lorg/apache/flink/runtime/metrics/groups/TaskIOMetricGroup;)V
+#createSubpartitionView(ILorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
+#finish()V
+#close()V
+#getBackPressuredTimeMsPerSecond()Lorg/apache/flink/runtime/metrics/TimerGauge;
+#getAllPartitions()[Lorg/apache/flink/runtime/io/network/partition/ResultSubpartition;
@1.15.0
+#getSizeOfQueuedBuffersUnsafe()J
+#getHardBackPressuredTimeMsPerSecond()Lorg/apache/flink/runtime/metrics/TimerGauge;
-#getBackPressuredTimeMsPerSecond()Lorg/apache/flink/runtime/metrics/TimerGauge;
@1.16.0
+#alignedBarrierTimeout(J)V
+#abortCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V
-#setup()V

+###org/apache/flink/runtime/io/network/partition/AbstractPartitionTracker
@1.14.0
+#<init>()V
+#stopTrackingPartitionsFor(Ljava/lang/Object;)Ljava/util/Collection;
+#stopTrackingPartitions(Ljava/util/Collection;)Ljava/util/Collection;
+#isTrackingPartitionsFor(Ljava/lang/Object;)Z
+#isPartitionTracked(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Z

+###org/apache/flink/runtime/io/network/partition/BufferReaderWriterUtil
@1.14.0
+#<init>()V
+#readByteBufferFully(Ljava/nio/channels/FileChannel;Ljava/nio/ByteBuffer;J)V
@1.16.0
+#setByteChannelBufferHeader(Lorg/apache/flink/runtime/io/network/buffer/Buffer;Ljava/nio/ByteBuffer;)V
+#readFromByteChannel(Ljava/nio/channels/FileChannel;Ljava/nio/ByteBuffer;Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#allocatedHeaderBuffer()Ljava/nio/ByteBuffer;
+#positionToNextBuffer(Ljava/nio/channels/FileChannel;Ljava/nio/ByteBuffer;)V
+#writeBuffers(Ljava/nio/channels/FileChannel;J[Ljava/nio/ByteBuffer;)V

+###org/apache/flink/runtime/io/network/partition/PartitionedFile
@1.14.0
+#<init>(IILjava/nio/file/Path;Ljava/nio/file/Path;JJJLjava/nio/ByteBuffer;)V
+#getDataFilePath()Ljava/nio/file/Path;
+#getIndexFilePath()Ljava/nio/file/Path;
+#getNumRegions()I
+#deleteQuietly()V
+#toString()Ljava/lang/String;
@1.14.4
+#isReadable()Z

+###org/apache/flink/runtime/io/network/partition/PipelinedResultPartition
@1.14.0
+#<init>(Ljava/lang/String;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;[Lorg/apache/flink/runtime/io/network/partition/ResultSubpartition;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/buffer/BufferCompressor;Lorg/apache/flink/util/function/SupplierWithException;)V
+#setChannelStateWriter(Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V
+#getCheckpointedSubpartition(I)Lorg/apache/flink/runtime/io/network/partition/CheckpointedResultSubpartition;
+#flushAll()V
+#flush(I)V
+#notifyEndOfData()V
+#getAllDataProcessedFuture()Ljava/util/concurrent/CompletableFuture;
+#onSubpartitionAllDataProcessed(I)V
+#toString()Ljava/lang/String;
+#finishReadRecoveredState(Z)V
+#close()V
@1.15.0
+#notifyEndOfData(Lorg/apache/flink/runtime/io/network/api/StopMode;)V
-#notifyEndOfData()V

+###org/apache/flink/runtime/io/network/partition/CheckpointedResultPartition
@1.14.0
+#getCheckpointedSubpartition(I)Lorg/apache/flink/runtime/io/network/partition/CheckpointedResultSubpartition;
+#finishReadRecoveredState(Z)V

+###org/apache/flink/runtime/io/network/partition/CheckpointedResultSubpartition
@1.14.0
+#getSubpartitionInfo()Lorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;
+#requestBufferBuilderBlocking()Lorg/apache/flink/runtime/io/network/buffer/BufferBuilder;
+#addRecovered(Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;)V
+#finishReadRecoveredState(Z)V

+###org/apache/flink/runtime/io/network/partition/ResourceManagerPartitionTrackerImpl
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/TaskExecutorClusterPartitionReleaser;)V
+#processTaskExecutorClusterPartitionReport(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/taskexecutor/partition/ClusterPartitionReport;)V
+#processTaskExecutorShutdown(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#releaseClusterPartitions(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/concurrent/CompletableFuture;
+#listDataSets()Ljava/util/Map;
@1.16.0
+#getClusterPartitionShuffleDescriptors(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/List;

+###org/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType
@1.14.0
+#values()[Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;
+#create(ILorg/apache/flink/runtime/io/network/partition/ResultPartition;Ljava/io/File;IZ)Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartition;

+###org/apache/flink/runtime/io/network/partition/ProducerFailedException
@0.9.0
+#<init>(Ljava/lang/Throwable;)V
@0.9.1
+#getCauseAsString()Ljava/lang/String;
@1.14.0
-#getCauseAsString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/TaskExecutorPartitionTracker
@1.14.0
+#startTrackingPartition(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/TaskExecutorPartitionInfo;)V
+#stopTrackingAndReleaseJobPartitions(Ljava/util/Collection;)V
+#stopTrackingAndReleaseJobPartitionsFor(Lorg/apache/flink/api/common/JobID;)V
+#promoteJobPartitions(Ljava/util/Collection;)V
+#stopTrackingAndReleaseClusterPartitions(Ljava/util/Collection;)V
+#stopTrackingAndReleaseAllClusterPartitions()V
+#createClusterPartitionReport()Lorg/apache/flink/runtime/taskexecutor/partition/ClusterPartitionReport;

+###org/apache/flink/runtime/io/network/partition/TaskExecutorPartitionInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;I)V
+#getIntermediateDataSetId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getResultPartitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#getNumberOfPartitions()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#from(Lorg/apache/flink/runtime/deployment/ResultPartitionDeploymentDescriptor;)Lorg/apache/flink/runtime/io/network/partition/TaskExecutorPartitionInfo;
@1.16.0
+#<init>(Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;I)V
+#getShuffleDescriptor()Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;
-#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;I)V

+###org/apache/flink/runtime/io/network/partition/PipelinedSubpartition
@1.14.0
+#setChannelStateWriter(Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V
+#add(Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;I)I
+#addRecovered(Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;)V
+#finishReadRecoveredState(Z)V
+#finish()V
+#release()V
+#acknowledgeAllDataProcessed()V
+#isReleased()Z
+#createReadView(Lorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/PipelinedSubpartitionView;
+#getAvailabilityAndBacklog(I)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView$AvailabilityWithBacklog;
+#getNumberOfQueuedBuffers()I
+#bufferSize(I)V
+#toString()Ljava/lang/String;
+#unsynchronizedGetNumberOfQueuedBuffers()I
+#flush()V
+#getBuffersInBacklogUnsafe()I
+#requestBufferBuilderBlocking()Lorg/apache/flink/runtime/io/network/buffer/BufferBuilder;
+#createReadView(Lorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
@1.16.0
+#alignedBarrierTimeout(J)V
+#abortCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V
+#getChannelStateCheckpointId()J

+###org/apache/flink/runtime/io/network/partition/PipelinedSubpartitionView
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/PipelinedSubpartition;Lorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)V
+#getNextBuffer()Lorg/apache/flink/runtime/io/network/partition/ResultSubpartition$BufferAndBacklog;
+#notifyDataAvailable()V
+#notifyPriorityEvent(I)V
+#releaseAllResources()V
+#isReleased()Z
+#resumeConsumption()V
+#acknowledgeAllDataProcessed()V
+#getAvailabilityAndBacklog(I)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView$AvailabilityWithBacklog;
+#getFailureCause()Ljava/lang/Throwable;
+#unsynchronizedGetNumberOfQueuedBuffers()I
+#getNumberOfQueuedBuffers()I
+#notifyNewBufferSize(I)V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/PartitionException
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Ljava/lang/Throwable;)V
+#getPartitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;

+###org/apache/flink/runtime/io/network/partition/NoOpResultSubpartitionView
@1.14.0
+#<init>()V
+#getNextBuffer()Lorg/apache/flink/runtime/io/network/partition/ResultSubpartition$BufferAndBacklog;
+#notifyDataAvailable()V
+#releaseAllResources()V
+#isReleased()Z
+#resumeConsumption()V
+#acknowledgeAllDataProcessed()V
+#getFailureCause()Ljava/lang/Throwable;
+#getAvailabilityAndBacklog(I)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView$AvailabilityWithBacklog;
+#unsynchronizedGetNumberOfQueuedBuffers()I
+#getNumberOfQueuedBuffers()I
+#notifyNewBufferSize(I)V

+###org/apache/flink/runtime/io/network/partition/PipelinedApproximateSubpartitionView
@1.14.0
+#releaseAllResources()V

+###org/apache/flink/runtime/io/network/partition/PipelinedApproximateSubpartition
@1.14.0
+#createReadView(Lorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/PipelinedSubpartitionView;
+#finishReadRecoveredState(Z)V
+#createReadView(Lorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;

+###org/apache/flink/runtime/io/network/partition/PartitionedFileWriter
@1.14.0
+#<init>(IILjava/lang/String;)V
+#startNewRegion(Z)V
+#writeBuffers(Ljava/util/List;)V
+#finish()Lorg/apache/flink/runtime/io/network/partition/PartitionedFile;
+#releaseQuietly()V
+#close()V

+###org/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionDirectTransferReader
@1.14.0
+#getNextBuffer()Lorg/apache/flink/runtime/io/network/partition/ResultSubpartition$BufferAndBacklog;
+#getAvailabilityAndBacklog(I)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView$AvailabilityWithBacklog;
+#releaseAllResources()V
+#isReleased()Z
+#getFailureCause()Ljava/lang/Throwable;
+#unsynchronizedGetNumberOfQueuedBuffers()I
+#getNumberOfQueuedBuffers()I
+#notifyNewBufferSize(I)V
+#notifyDataAvailable()V
+#resumeConsumption()V
+#acknowledgeAllDataProcessed()V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/HashBasedDataBuffer
@1.15.0
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/BufferPool;II[I)V
+#append(Ljava/nio/ByteBuffer;ILorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)Z
+#getNextBuffer(Lorg/apache/flink/core/memory/MemorySegment;)Lorg/apache/flink/runtime/io/network/partition/BufferWithChannel;
+#numTotalRecords()J
+#numTotalBytes()J
+#hasRemaining()Z
+#reset()V
+#finish()V
+#isFinished()Z
+#release()V
+#isReleased()Z
@1.16.0
+#<init>(Ljava/util/LinkedList;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;III[I)V
-#<init>(Lorg/apache/flink/runtime/io/network/buffer/BufferPool;II[I)V
-#reset()V

+###org/apache/flink/runtime/io/network/partition/PartitionNotFoundException
@0.9.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#getPartitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#getMessage()Ljava/lang/String;
@1.14.0
-#getPartitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
-#getMessage()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/partition/JobMasterPartitionTrackerImpl
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/PartitionTrackerFactory$TaskExecutorGatewayLookup;)V
+#startTrackingPartition(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/deployment/ResultPartitionDeploymentDescriptor;)V
+#stopTrackingAndReleasePartitions(Ljava/util/Collection;Z)V
+#stopTrackingAndReleaseOrPromotePartitions(Ljava/util/Collection;)V
+#getAllTrackedPartitions()Ljava/util/Collection;
@1.16.0
+#stopTrackingAndPromotePartitions(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
+#connectToResourceManager(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerGateway;)V
+#getClusterPartitionShuffleDescriptors(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Ljava/util/List;
-#stopTrackingAndReleaseOrPromotePartitions(Ljava/util/Collection;)V

+###org/apache/flink/runtime/io/network/partition/PartitionTrackerFactory$TaskExecutorGatewayLookup
@1.14.0
+#lookup(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/util/Optional;

+###org/apache/flink/runtime/io/network/partition/PartitionTrackerFactory
@1.14.0
+#create(Lorg/apache/flink/runtime/io/network/partition/PartitionTrackerFactory$TaskExecutorGatewayLookup;)Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;

+###org/apache/flink/runtime/io/network/partition/SortMergeResultPartition
@1.14.0
+#<init>(Ljava/lang/String;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;IILorg/apache/flink/runtime/io/disk/BatchShuffleReadBufferPool;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Ljava/lang/String;Lorg/apache/flink/runtime/io/network/buffer/BufferCompressor;Lorg/apache/flink/util/function/SupplierWithException;)V
+#setup()V
+#emitRecord(Ljava/nio/ByteBuffer;I)V
+#broadcastRecord(Ljava/nio/ByteBuffer;)V
+#broadcastEvent(Lorg/apache/flink/runtime/event/AbstractEvent;Z)V
+#notifyEndOfData()V
+#finish()V
+#close()V
+#createSubpartitionView(ILorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
+#flushAll()V
+#flush(I)V
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#getNumberOfQueuedBuffers()I
+#getNumberOfQueuedBuffers(I)I
@1.15.0
+#notifyEndOfData(Lorg/apache/flink/runtime/io/network/api/StopMode;)V
+#getSizeOfQueuedBuffersUnsafe()J
-#notifyEndOfData()V
@1.16.0
+#alignedBarrierTimeout(J)V
+#abortCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V
-#setup()V

+###org/apache/flink/runtime/io/network/partition/PageSizeUtil
@1.14.0
+#getSystemPageSize()I
+#getSystemPageSizeOrDefault()I
+#getSystemPageSizeOrConservativeMultiple()I

+###org/apache/flink/runtime/io/network/partition/TaskExecutorPartitionTrackerImpl
@1.14.0
+#<init>(Lorg/apache/flink/runtime/shuffle/ShuffleEnvironment;)V
+#startTrackingPartition(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/TaskExecutorPartitionInfo;)V
+#stopTrackingAndReleaseJobPartitions(Ljava/util/Collection;)V
+#stopTrackingAndReleaseJobPartitionsFor(Lorg/apache/flink/api/common/JobID;)V
+#promoteJobPartitions(Ljava/util/Collection;)V
+#stopTrackingAndReleaseClusterPartitions(Ljava/util/Collection;)V
+#stopTrackingAndReleaseAllClusterPartitions()V
+#createClusterPartitionReport()Lorg/apache/flink/runtime/taskexecutor/partition/ClusterPartitionReport;

+###org/apache/flink/runtime/io/network/partition/ResultPartitionFactory
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/disk/FileChannelManager;Lorg/apache/flink/runtime/io/network/buffer/BufferPoolFactory;Lorg/apache/flink/runtime/io/disk/BatchShuffleReadBufferPool;Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;IIIZLjava/lang/String;IIIZ)V
+#create(Ljava/lang/String;ILorg/apache/flink/runtime/deployment/ResultPartitionDeploymentDescriptor;)Lorg/apache/flink/runtime/io/network/partition/ResultPartition;
+#create(Ljava/lang/String;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;IILorg/apache/flink/util/function/SupplierWithException;)Lorg/apache/flink/runtime/io/network/partition/ResultPartition;
@1.16.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/disk/FileChannelManager;Lorg/apache/flink/runtime/io/network/buffer/BufferPoolFactory;Lorg/apache/flink/runtime/io/disk/BatchShuffleReadBufferPool;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;IIIZLjava/lang/String;IIIZI)V
-#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/disk/FileChannelManager;Lorg/apache/flink/runtime/io/network/buffer/BufferPoolFactory;Lorg/apache/flink/runtime/io/disk/BatchShuffleReadBufferPool;Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;IIIZLjava/lang/String;IIIZ)V

+###org/apache/flink/runtime/io/network/api/writer/SubtaskStateMapper
@1.14.0
+#values()[Lorg/apache/flink/runtime/io/network/api/writer/SubtaskStateMapper;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/api/writer/SubtaskStateMapper;
+#getOldSubtasks(III)[I
+#getNewToOldSubtasksMapping(II)Lorg/apache/flink/runtime/checkpoint/RescaleMappings;
+#isAmbiguous()Z

+###org/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartition;)V
+#getPartitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#getBufferProvider()Lorg/apache/flink/runtime/io/network/buffer/BufferProvider;
+#getNumberOfOutputChannels()I
+#writeBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;I)V
+#writeEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;I)V
+#writeEventToAllChannels(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#writeEndOfSuperstep()V
+#finish()V
+#getTaskEventHandler()Lorg/apache/flink/runtime/io/network/api/TaskEventHandler;
+#subscribeToEvent(Lorg/apache/flink/runtime/util/event/EventListener;Ljava/lang/Class;)V
+#onEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
+#onEvent(Ljava/lang/Object;)V
@0.9.0
-#finish()V
-#getTaskEventHandler()Lorg/apache/flink/runtime/io/network/api/TaskEventHandler;
@0.10.0
+#writeEvent(Lorg/apache/flink/runtime/event/AbstractEvent;I)V
+#writeEventToAllChannels(Lorg/apache/flink/runtime/event/AbstractEvent;)V
+#onEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
-#writeEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;I)V
-#writeEventToAllChannels(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
-#onEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
@1.14.0
+#setup()V
+#getNumberOfSubpartitions()I
+#getNumTargetKeyGroups()I
+#emitRecord(Ljava/nio/ByteBuffer;I)V
+#broadcastRecord(Ljava/nio/ByteBuffer;)V
+#broadcastEvent(Lorg/apache/flink/runtime/event/AbstractEvent;Z)V
+#notifyEndOfData()V
+#getAllDataProcessedFuture()Ljava/util/concurrent/CompletableFuture;
+#setMetricGroup(Lorg/apache/flink/runtime/metrics/groups/TaskIOMetricGroup;)V
+#createSubpartitionView(ILorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
+#flushAll()V
+#flush(I)V
+#fail(Ljava/lang/Throwable;)V
+#finish()V
+#isFinished()Z
+#release(Ljava/lang/Throwable;)V
+#isReleased()Z
+#close()V
-#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartition;)V
-#getBufferProvider()Lorg/apache/flink/runtime/io/network/buffer/BufferProvider;
-#getNumberOfOutputChannels()I
-#writeBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;I)V
-#writeEvent(Lorg/apache/flink/runtime/event/AbstractEvent;I)V
-#writeEventToAllChannels(Lorg/apache/flink/runtime/event/AbstractEvent;)V
-#writeEndOfSuperstep()V
-#subscribeToEvent(Lorg/apache/flink/runtime/util/event/EventListener;Ljava/lang/Class;)V
-#onEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
-#onEvent(Ljava/lang/Object;)V
@1.15.0
+#notifyEndOfData(Lorg/apache/flink/runtime/io/network/api/StopMode;)V
-#notifyEndOfData()V
@1.16.0
+#setMaxOverdraftBuffersPerGate(I)V
+#alignedBarrierTimeout(J)V
+#abortCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V

+###org/apache/flink/runtime/io/network/api/writer/RecordWriter
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;)V
+#<init>(Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;Lorg/apache/flink/runtime/io/network/api/writer/ChannelSelector;)V
+#emit(Lorg/apache/flink/core/io/IOReadableWritable;)V
+#broadcastEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#sendEndOfSuperstep()V
+#flush()V
+#clearBuffers()V
@0.10.0
+#broadcastEmit(Lorg/apache/flink/core/io/IOReadableWritable;)V
+#broadcastEvent(Lorg/apache/flink/runtime/event/AbstractEvent;)V
+#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
-#broadcastEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
@1.14.0
+#broadcastEvent(Lorg/apache/flink/runtime/event/AbstractEvent;Z)V
+#serializeRecord(Lorg/apache/flink/core/memory/DataOutputSerializer;Lorg/apache/flink/core/io/IOReadableWritable;)Ljava/nio/ByteBuffer;
+#flushAll()V
+#setMetricGroup(Lorg/apache/flink/runtime/metrics/groups/TaskIOMetricGroup;)V
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#randomEmit(Lorg/apache/flink/core/io/IOReadableWritable;)V
+#close()V
-#<init>(Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;)V
-#<init>(Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;Lorg/apache/flink/runtime/io/network/api/writer/ChannelSelector;)V
-#sendEndOfSuperstep()V
-#flush()V
-#clearBuffers()V
-#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
@1.16.0
+#alignedBarrierTimeout(J)V
+#abortCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V
+#setMaxOverdraftBuffersPerGate(I)V

+###org/apache/flink/runtime/io/network/api/writer/ChannelSelector
@0.9.0-milestone-1
+#selectChannels(Lorg/apache/flink/core/io/IOReadableWritable;I)[I
@1.14.0
+#setup(I)V
+#selectChannel(Lorg/apache/flink/core/io/IOReadableWritable;)I
+#isBroadcast()Z
-#selectChannels(Lorg/apache/flink/core/io/IOReadableWritable;I)[I

+###org/apache/flink/runtime/io/network/api/writer/ChannelSelectorRecordWriter
@1.14.0
+#emit(Lorg/apache/flink/core/io/IOReadableWritable;)V
+#broadcastEmit(Lorg/apache/flink/core/io/IOReadableWritable;)V

+###org/apache/flink/runtime/io/network/api/writer/MultipleRecordWriters
@1.14.0
+#<init>(Ljava/util/List;)V
+#broadcastEvent(Lorg/apache/flink/runtime/event/AbstractEvent;)V
+#getRecordWriter(I)Lorg/apache/flink/runtime/io/network/api/writer/RecordWriter;
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#isAvailable()Z
+#close()V
@1.16.0
+#setMaxOverdraftBuffersPerGate(I)V

+###org/apache/flink/runtime/io/network/api/writer/RecordWriterDelegate
@1.14.0
+#broadcastEvent(Lorg/apache/flink/runtime/event/AbstractEvent;)V
+#getRecordWriter(I)Lorg/apache/flink/runtime/io/network/api/writer/RecordWriter;
@1.16.0
+#setMaxOverdraftBuffersPerGate(I)V

+###org/apache/flink/runtime/io/network/api/writer/RoundRobinChannelSelector
@0.9.0-milestone-1
+#<init>()V
+#selectChannels(Lorg/apache/flink/core/io/IOReadableWritable;I)[I
@1.14.0
+#setup(I)V
+#selectChannel(Lorg/apache/flink/core/io/IOReadableWritable;)I
+#isBroadcast()Z
-#selectChannels(Lorg/apache/flink/core/io/IOReadableWritable;I)[I

+###org/apache/flink/runtime/io/network/api/writer/SingleRecordWriter
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/api/writer/RecordWriter;)V
+#broadcastEvent(Lorg/apache/flink/runtime/event/AbstractEvent;)V
+#getRecordWriter(I)Lorg/apache/flink/runtime/io/network/api/writer/RecordWriter;
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#isAvailable()Z
+#close()V
@1.16.0
+#setMaxOverdraftBuffersPerGate(I)V

+###org/apache/flink/runtime/io/network/api/writer/RecordWriterBuilder
@1.14.0
+#<init>()V
+#setChannelSelector(Lorg/apache/flink/runtime/io/network/api/writer/ChannelSelector;)Lorg/apache/flink/runtime/io/network/api/writer/RecordWriterBuilder;
+#setTimeout(J)Lorg/apache/flink/runtime/io/network/api/writer/RecordWriterBuilder;
+#setTaskName(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/api/writer/RecordWriterBuilder;
+#build(Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;)Lorg/apache/flink/runtime/io/network/api/writer/RecordWriter;

+###org/apache/flink/runtime/io/network/api/writer/BroadcastRecordWriter
@1.14.0
+#emit(Lorg/apache/flink/core/io/IOReadableWritable;)V
+#broadcastEmit(Lorg/apache/flink/core/io/IOReadableWritable;)V

+###org/apache/flink/runtime/io/network/api/writer/NonRecordWriter
@1.14.0
+#<init>()V
+#broadcastEvent(Lorg/apache/flink/runtime/event/AbstractEvent;)V
+#getRecordWriter(I)Lorg/apache/flink/runtime/io/network/api/writer/RecordWriter;
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#isAvailable()Z
+#close()V
@1.16.0
+#setMaxOverdraftBuffersPerGate(I)V

+###org/apache/flink/runtime/io/network/api/reader/MutableReader
@0.9.0-milestone-1
+#next(Lorg/apache/flink/core/io/IOReadableWritable;)Z
+#clearBuffers()V

+###org/apache/flink/runtime/io/network/api/reader/ReaderBase
@0.9.0-milestone-1
+#isFinished()Z
+#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
+#registerTaskEventListener(Lorg/apache/flink/runtime/util/event/EventListener;Ljava/lang/Class;)V
+#setIterativeReader()V
+#startNextSuperstep()V
+#hasReachedEndOfSuperstep()Z
@0.10.0
+#sendTaskEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
+#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
-#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
@1.14.0
-#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V

+###org/apache/flink/runtime/io/network/api/reader/AbstractReader
@0.9.0-milestone-1
+#isFinished()Z
+#registerTaskEventListener(Lorg/apache/flink/runtime/util/event/EventListener;Ljava/lang/Class;)V
+#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
+#publish(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
+#setIterativeReader()V
+#startNextSuperstep()V
+#hasReachedEndOfSuperstep()Z
@0.10.0
+#sendTaskEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
+#publish(Lorg/apache/flink/runtime/event/TaskEvent;)V
-#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
-#publish(Lorg/apache/flink/runtime/event/task/TaskEvent;)V

+###org/apache/flink/runtime/io/network/api/reader/MutableRecordReader
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;)V
+#next(Lorg/apache/flink/core/io/IOReadableWritable;)Z
+#clearBuffers()V
@0.10.0
+#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;[Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;)V
-#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V

+###org/apache/flink/runtime/io/network/api/reader/Reader
@0.9.0-milestone-1
+#hasNext()Z
+#next()Lorg/apache/flink/core/io/IOReadableWritable;
+#clearBuffers()V

+###org/apache/flink/runtime/io/network/api/reader/RecordReader
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;Ljava/lang/Class;)V
+#hasNext()Z
+#next()Lorg/apache/flink/core/io/IOReadableWritable;
+#clearBuffers()V
@0.10.0
+#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;Ljava/lang/Class;[Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;Ljava/lang/Class;)V
-#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V

+###org/apache/flink/runtime/io/network/api/StopMode
@1.15.0
+#values()[Lorg/apache/flink/runtime/io/network/api/StopMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/api/StopMode;

+###org/apache/flink/runtime/io/network/api/CheckpointBarrier
@0.10.0
+#<init>()V
+#<init>(JJ)V
+#getId()J
+#getTimestamp()J
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
+#<init>(JJLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)V
+#getCheckpointOptions()Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#withOptions(Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Lorg/apache/flink/runtime/io/network/api/CheckpointBarrier;
+#isCheckpoint()Z
+#asUnaligned()Lorg/apache/flink/runtime/io/network/api/CheckpointBarrier;
-#<init>()V
-#<init>(JJ)V

+###org/apache/flink/runtime/io/network/api/TaskEventHandler
@0.9.0-milestone-1
+#<init>()V
+#subscribe(Lorg/apache/flink/runtime/util/event/EventListener;Ljava/lang/Class;)V
+#unsubscribe(Lorg/apache/flink/runtime/util/event/EventListener;Ljava/lang/Class;)V
+#publish(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
@0.10.0
+#publish(Lorg/apache/flink/runtime/event/TaskEvent;)V
-#publish(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
@1.14.0
-#unsubscribe(Lorg/apache/flink/runtime/util/event/EventListener;Ljava/lang/Class;)V

+###org/apache/flink/runtime/io/network/api/EventAnnouncement
@1.14.0
+#<init>(Lorg/apache/flink/runtime/event/AbstractEvent;I)V
+#getAnnouncedEvent()Lorg/apache/flink/runtime/event/AbstractEvent;
+#getSequenceNumber()I
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/api/serialization/RecordDeserializer$DeserializationResult
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/runtime/io/network/api/serialization/RecordDeserializer$DeserializationResult;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/api/serialization/RecordDeserializer$DeserializationResult;
+#isFullRecord()Z
+#isBufferConsumed()Z

+###org/apache/flink/runtime/io/network/api/serialization/RecordDeserializer
@0.9.0-milestone-1
+#getNextRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/api/serialization/RecordDeserializer$DeserializationResult;
+#setNextMemorySegment(Lorg/apache/flink/core/memory/MemorySegment;I)V
+#setNextBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#getCurrentBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#clear()V
+#hasUnfinishedData()Z
@0.10.0
+#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
@1.14.0
+#getUnconsumedBuffer()Lorg/apache/flink/util/CloseableIterator;
-#setNextMemorySegment(Lorg/apache/flink/core/memory/MemorySegment;I)V
-#getCurrentBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
-#hasUnfinishedData()Z
-#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V

+###org/apache/flink/runtime/io/network/api/serialization/EventSerializer
@0.9.0-milestone-1
+#<init>()V
+#toSerializedEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)Ljava/nio/ByteBuffer;
+#fromSerializedEvent(Ljava/nio/ByteBuffer;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/event/task/AbstractEvent;
+#toBuffer(Lorg/apache/flink/runtime/event/task/AbstractEvent;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#fromBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/event/task/AbstractEvent;
@0.10.0
+#toSerializedEvent(Lorg/apache/flink/runtime/event/AbstractEvent;)Ljava/nio/ByteBuffer;
+#fromSerializedEvent(Ljava/nio/ByteBuffer;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/event/AbstractEvent;
+#toBuffer(Lorg/apache/flink/runtime/event/AbstractEvent;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#fromBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/event/AbstractEvent;
-#toSerializedEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)Ljava/nio/ByteBuffer;
-#fromSerializedEvent(Ljava/nio/ByteBuffer;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/event/task/AbstractEvent;
-#toBuffer(Lorg/apache/flink/runtime/event/task/AbstractEvent;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
-#fromBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/event/task/AbstractEvent;
@1.14.0
+#toBuffer(Lorg/apache/flink/runtime/event/AbstractEvent;Z)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#toBufferConsumer(Lorg/apache/flink/runtime/event/AbstractEvent;Z)Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;
-#toBuffer(Lorg/apache/flink/runtime/event/AbstractEvent;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;

+###org/apache/flink/runtime/io/network/api/serialization/SpillingAdaptiveSpanningRecordDeserializer
@0.9.0-milestone-1
+#<init>()V
+#setNextBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#getCurrentBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#setNextMemorySegment(Lorg/apache/flink/core/memory/MemorySegment;I)V
+#getNextRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/api/serialization/RecordDeserializer$DeserializationResult;
+#clear()V
+#hasUnfinishedData()Z
@0.10.0
+#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
@1.14.0
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/lang/String;II)V
+#getUnconsumedBuffer()Lorg/apache/flink/util/CloseableIterator;
-#<init>()V
-#getCurrentBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
-#setNextMemorySegment(Lorg/apache/flink/core/memory/MemorySegment;I)V
-#hasUnfinishedData()Z
-#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V

+###org/apache/flink/runtime/io/network/api/SubtaskConnectionDescriptor
@1.14.0
+#<init>(II)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getInputSubtaskIndex()I
+#getOutputSubtaskIndex()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/api/EndOfData
@1.14.0
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/io/network/api/StopMode;)V
+#getStopMode()Lorg/apache/flink/runtime/io/network/api/StopMode;

+###org/apache/flink/runtime/io/network/api/CancelCheckpointMarker
@1.14.0
+#<init>(J)V
+#getCheckpointId()J
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/api/EndOfPartitionEvent
@0.9.0-milestone-1
+#<init>()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.10.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
-#<init>()V

+###org/apache/flink/runtime/io/network/api/EndOfSuperstepEvent
@0.9.0-milestone-1
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
@0.10.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
-#<init>()V

+###org/apache/flink/runtime/io/network/TaskEventDispatcher
@0.9.0-milestone-1
+#<init>()V
+#registerWriterForIncomingTaskEvents(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;)V
+#unregisterWriter(Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;)V
+#publish(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/event/task/TaskEvent;)Z
+#clearAll()V
@0.10.0
+#publish(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/event/TaskEvent;)Z
-#publish(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/event/task/TaskEvent;)Z
@1.14.0
+#registerPartition(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#unregisterPartition(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#subscribeToEvent(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/util/event/EventListener;Ljava/lang/Class;)V
-#registerWriterForIncomingTaskEvents(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;)V
-#unregisterWriter(Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;)V

+###org/apache/flink/runtime/io/network/TaskEventPublisher
@1.14.0
+#publish(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/event/TaskEvent;)Z

+###org/apache/flink/runtime/io/network/buffer/Buffer$DataType
@1.14.0
+#values()[Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#isBuffer()Z
+#isEvent()Z
+#hasPriority()Z
+#isBlockingUpstream()Z
+#requiresAnnouncement()Z
+#getDataType(Lorg/apache/flink/runtime/event/AbstractEvent;Z)Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;

+###org/apache/flink/runtime/io/network/buffer/Buffer
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;)V
+#<init>(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;Z)V
+#isBuffer()Z
+#tagAsEvent()V
+#getMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getNioBuffer()Ljava/nio/ByteBuffer;
+#getRecycler()Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;
+#getSize()I
+#setSize(I)V
+#recycle()V
+#retain()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#isRecycled()Z
+#toString()Ljava/lang/String;
@1.14.0
*#getMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;[deprecated]
+#getMemorySegmentOffset()I[deprecated]
+#recycleBuffer()V
+#retainBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#readOnlySlice()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#readOnlySlice(II)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#getMaxCapacity()I
+#getReaderIndex()I
+#setReaderIndex(I)V
+#readableBytes()I
+#getNioBufferReadable()Ljava/nio/ByteBuffer;
+#getNioBuffer(II)Ljava/nio/ByteBuffer;
+#setAllocator(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBufAllocator;)V
+#asByteBuf()Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#isCompressed()Z
+#setCompressed(Z)V
+#getDataType()Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#setDataType(Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)V
+#refCnt()I
+#toDebugString(Z)Ljava/lang/String;
-#<init>(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;)V
-#<init>(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;Z)V
-#tagAsEvent()V
-#getNioBuffer()Ljava/nio/ByteBuffer;
-#recycle()V
-#retain()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
-#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/network/buffer/BufferRecycler$DummyBufferRecycler
@1.14.0
+#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V

+###org/apache/flink/runtime/io/network/buffer/BufferRecycler
@0.9.0-milestone-1
+#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V

+###org/apache/flink/runtime/io/network/buffer/BufferBuilder
@1.14.0
+#<init>(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;)V
+#createBufferConsumer()Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;
+#createBufferConsumerFromBeginning()Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;
+#appendAndCommit(Ljava/nio/ByteBuffer;)I
+#append(Ljava/nio/ByteBuffer;)I
+#commit()V
+#finish()I
+#isFinished()Z
+#isFull()Z
+#getWritableBytes()I
+#getCommittedBytes()I
+#getMaxCapacity()I
+#trim(I)V
+#close()V

+###org/apache/flink/runtime/io/network/buffer/BufferConsumer
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer;I)V
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer;Lorg/apache/flink/runtime/io/network/buffer/BufferBuilder$PositionMarker;I)V
+#isFinished()Z
+#build()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#copy()Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;
+#copyWithReaderPosition(I)Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;
+#isBuffer()Z
+#getDataType()Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#close()V
+#isRecycled()Z
+#getWrittenBytes()I
+#isDataAvailable()Z
+#toDebugString(Z)Ljava/lang/String;

+###org/apache/flink/runtime/io/network/buffer/BufferPool
@0.9.0-milestone-1
+#setBufferPoolOwner(Lorg/apache/flink/runtime/io/network/buffer/BufferPoolOwner;)V
+#lazyDestroy()V
+#isDestroyed()Z
+#getNumberOfRequiredMemorySegments()I
+#getNumBuffers()I
+#setNumBuffers(I)V
+#getNumberOfAvailableMemorySegments()I
@1.14.0
+#reserveSegments(I)V
+#getMaxNumberOfMemorySegments()I
+#bestEffortGetNumOfUsedBuffers()I
-#setBufferPoolOwner(Lorg/apache/flink/runtime/io/network/buffer/BufferPoolOwner;)V
@1.16.0
+#setMaxOverdraftBuffersPerGate(I)V
+#getMaxOverdraftBuffersPerGate()I

+###org/apache/flink/runtime/io/network/buffer/BufferProvider
@0.9.0-milestone-1
+#requestBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#requestBufferBlocking()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#addListener(Lorg/apache/flink/runtime/util/event/EventListener;)Z
+#isDestroyed()Z
+#getMemorySegmentSize()I
@1.14.0
+#requestBufferBuilder()Lorg/apache/flink/runtime/io/network/buffer/BufferBuilder;
+#requestBufferBuilder(I)Lorg/apache/flink/runtime/io/network/buffer/BufferBuilder;
+#requestBufferBuilderBlocking()Lorg/apache/flink/runtime/io/network/buffer/BufferBuilder;
+#requestBufferBuilderBlocking(I)Lorg/apache/flink/runtime/io/network/buffer/BufferBuilder;
+#addBufferListener(Lorg/apache/flink/runtime/io/network/buffer/BufferListener;)Z
+#requestMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
+#requestMemorySegmentBlocking()Lorg/apache/flink/core/memory/MemorySegment;
-#requestBufferBlocking()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
-#addListener(Lorg/apache/flink/runtime/util/event/EventListener;)Z
-#getMemorySegmentSize()I

+###org/apache/flink/runtime/io/network/buffer/BufferCompressor
@1.14.0
+#<init>(ILjava/lang/String;)V
+#compressToIntermediateBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#compressToOriginalBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;

+###org/apache/flink/runtime/io/network/buffer/BufferDecompressor
@1.14.0
+#<init>(ILjava/lang/String;)V
+#decompressToIntermediateBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#decompressToOriginalBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;

+###org/apache/flink/runtime/io/network/buffer/BufferListener
@1.14.0
+#notifyBufferAvailable(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Z
+#notifyBufferDestroyed()V

+###org/apache/flink/runtime/io/network/buffer/NetworkBuffer
@1.14.0
+#<init>(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;)V
+#<init>(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)V
+#<init>(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;I)V
+#<init>(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;ZI)V
+#isBuffer()Z
+#getMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getMemorySegmentOffset()I
+#getRecycler()Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;
+#recycleBuffer()V
+#isRecycled()Z
+#retainBuffer()Lorg/apache/flink/runtime/io/network/buffer/NetworkBuffer;
+#readOnlySlice()Lorg/apache/flink/runtime/io/network/buffer/ReadOnlySlicedNetworkBuffer;
+#readOnlySlice(II)Lorg/apache/flink/runtime/io/network/buffer/ReadOnlySlicedNetworkBuffer;
+#capacity()I
+#getMaxCapacity()I
+#getReaderIndex()I
+#setReaderIndex(I)V
+#getSize()I
+#setSize(I)V
+#capacity(I)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#order()Ljava/nio/ByteOrder;
+#unwrap()Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#isDirect()Z
+#getBytes(ILorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;II)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#getBytes(I[BII)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#getBytes(ILjava/nio/ByteBuffer;)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#getBytes(ILjava/io/OutputStream;I)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#getBytes(ILjava/nio/channels/GatheringByteChannel;I)I
+#getBytes(ILjava/nio/channels/FileChannel;JI)I
+#setBytes(ILorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;II)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#setBytes(I[BII)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#setBytes(ILjava/nio/ByteBuffer;)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#setBytes(ILjava/io/InputStream;I)I
+#setBytes(ILjava/nio/channels/ScatteringByteChannel;I)I
+#setBytes(ILjava/nio/channels/FileChannel;JI)I
+#alloc()Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBufAllocator;
+#setAllocator(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBufAllocator;)V
+#copy(II)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#readBytes(I)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#nioBufferCount()I
+#getNioBufferReadable()Ljava/nio/ByteBuffer;
+#getNioBuffer(II)Ljava/nio/ByteBuffer;
+#nioBuffer(II)Ljava/nio/ByteBuffer;
+#internalNioBuffer(II)Ljava/nio/ByteBuffer;
+#nioBuffers(II)[Ljava/nio/ByteBuffer;
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#hasMemoryAddress()Z
+#memoryAddress()J
+#toString()Ljava/lang/String;
+#asByteBuf()Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#isCompressed()Z
+#setCompressed(Z)V
+#getDataType()Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#setDataType(Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)V
+#readOnlySlice(II)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#readOnlySlice()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#retainBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;

+###org/apache/flink/runtime/io/network/buffer/ReadOnlySlicedNetworkBuffer
@1.14.0
+#unwrap()Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#isBuffer()Z
+#getMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getMemorySegmentOffset()I
+#getRecycler()Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;
+#recycleBuffer()V
+#isRecycled()Z
+#retainBuffer()Lorg/apache/flink/runtime/io/network/buffer/ReadOnlySlicedNetworkBuffer;
+#readOnlySlice()Lorg/apache/flink/runtime/io/network/buffer/ReadOnlySlicedNetworkBuffer;
+#readOnlySlice(II)Lorg/apache/flink/runtime/io/network/buffer/ReadOnlySlicedNetworkBuffer;
+#getMaxCapacity()I
+#getReaderIndex()I
+#setReaderIndex(I)V
+#getSize()I
+#setSize(I)V
+#getNioBufferReadable()Ljava/nio/ByteBuffer;
+#getNioBuffer(II)Ljava/nio/ByteBuffer;
+#nioBuffer(II)Ljava/nio/ByteBuffer;
+#isWritable()Z
+#isWritable(I)Z
+#ensureWritable(I)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#setAllocator(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBufAllocator;)V
+#asByteBuf()Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#isCompressed()Z
+#setCompressed(Z)V
+#getDataType()Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#setDataType(Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)V
+#readOnlySlice(II)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#readOnlySlice()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#retainBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;

+###org/apache/flink/runtime/io/network/buffer/NetworkBufferPool
@0.9.0-milestone-1
+#<init>(II)V
+#requestMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
+#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V
+#destroy()V
+#isDestroyed()Z
+#getMemorySegmentSize()I
+#getTotalNumberOfMemorySegments()I
+#getNumberOfAvailableMemorySegments()I
+#getNumberOfRegisteredBufferPools()I
+#countBuffers()I
+#createBufferPool(IZ)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
+#destroyBufferPool(Lorg/apache/flink/runtime/io/network/buffer/BufferPool;)V
+#destroyAllBufferPools()V
@0.10.0
+#<init>(IILorg/apache/flink/core/memory/MemoryType;)V
-#<init>(II)V
@1.14.0
+#<init>(II)V
+#<init>(IILjava/time/Duration;)V
+#requestMemorySegmentsBlocking(I)Ljava/util/List;
+#requestMemorySegments(I)Ljava/util/List;
+#recycleMemorySegments(Ljava/util/Collection;)V
+#getTotalMemory()J
+#getAvailableMemory()J
+#getNumberOfUsedMemorySegments()I
+#getUsedMemory()J
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#createBufferPool(II)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
+#createBufferPool(IIII)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
+#requestMemorySegments(I)Ljava/util/Collection;
-#<init>(IILorg/apache/flink/core/memory/MemoryType;)V
-#getMemorySegmentSize()I
-#createBufferPool(IZ)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
@1.14.4
+#requestPooledMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
+#requestPooledMemorySegmentsBlocking(I)Ljava/util/List;
+#recyclePooledMemorySegment(Lorg/apache/flink/core/memory/MemorySegment;)V
+#requestUnpooledMemorySegments(I)Ljava/util/List;
+#recycleUnpooledMemorySegments(Ljava/util/Collection;)V
+#requestUnpooledMemorySegments(I)Ljava/util/Collection;
-#requestMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
-#requestMemorySegmentsBlocking(I)Ljava/util/List;
-#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V
-#requestMemorySegments(I)Ljava/util/List;
-#recycleMemorySegments(Ljava/util/Collection;)V
-#requestMemorySegments(I)Ljava/util/Collection;
@1.15.0
+#getNumberOfRequestedMemorySegments()J
+#getRequestedMemory()J
+#getRequestedSegmentsUsage()I
+#maybeLogUsageWarning()V
@1.16.0
+#createBufferPool(IIIII)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
-#createBufferPool(IIII)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;

+###org/apache/flink/runtime/io/network/buffer/BufferPoolFactory
@0.9.0-milestone-1
+#createBufferPool(IZ)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
+#destroyBufferPool(Lorg/apache/flink/runtime/io/network/buffer/BufferPool;)V
@1.14.0
+#createBufferPool(II)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
+#createBufferPool(IIII)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
-#createBufferPool(IZ)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
@1.16.0
+#createBufferPool(IIIII)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;
-#createBufferPool(IIII)Lorg/apache/flink/runtime/io/network/buffer/BufferPool;

+###org/apache/flink/runtime/io/network/buffer/BufferConsumerWithPartialRecordLength
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;I)V
+#getBufferConsumer()Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;
+#getPartialRecordLength()I
+#build()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#cleanupPartialRecord()Z

+###org/apache/flink/runtime/io/network/buffer/FileRegionBuffer
@1.14.0
+#<init>(Ljava/nio/channels/FileChannel;JILorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;Z)V
+#isBuffer()Z
+#getMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getMemorySegmentOffset()I
+#readOnlySlice()Lorg/apache/flink/runtime/io/network/buffer/ReadOnlySlicedNetworkBuffer;
+#readOnlySlice(II)Lorg/apache/flink/runtime/io/network/buffer/ReadOnlySlicedNetworkBuffer;
+#getMaxCapacity()I
+#getReaderIndex()I
+#setReaderIndex(I)V
+#getNioBufferReadable()Ljava/nio/ByteBuffer;
+#getNioBuffer(II)Ljava/nio/ByteBuffer;
+#asByteBuf()Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#setSize(I)V
+#getSize()I
+#readableBytes()I
+#setAllocator(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBufAllocator;)V
+#getRecycler()Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;
+#recycleBuffer()V
+#isRecycled()Z
+#retainBuffer()Lorg/apache/flink/runtime/io/network/buffer/FileRegionBuffer;
+#isCompressed()Z
+#setCompressed(Z)V
+#getDataType()Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#setDataType(Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)V
+#deallocate()V
+#readInto(Lorg/apache/flink/core/memory/MemorySegment;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#readOnlySlice(II)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#readOnlySlice()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#retainBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;

+###org/apache/flink/runtime/io/network/buffer/FreeingBufferRecycler
@0.10.0
+#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V

+###org/apache/flink/runtime/io/network/ConnectionID
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;I)V
+#<init>(Ljava/net/InetSocketAddress;I)V
+#getAddress()Ljava/net/InetSocketAddress;
+#getConnectionIndex()I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;I)V
-#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;I)V
@1.16.1
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/net/InetSocketAddress;I)V
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
-#<init>(Ljava/net/InetSocketAddress;I)V

+###org/apache/flink/runtime/io/network/metrics/InputChannelMetrics
@1.14.0
+#<init>([Lorg/apache/flink/metrics/MetricGroup;)V
+#getNumBytesInLocalCounter()Lorg/apache/flink/metrics/Counter;
+#getNumBytesInRemoteCounter()Lorg/apache/flink/metrics/Counter;
+#getNumBuffersInLocalCounter()Lorg/apache/flink/metrics/Counter;
+#getNumBuffersInRemoteCounter()Lorg/apache/flink/metrics/Counter;

+###org/apache/flink/runtime/io/network/metrics/ResultPartitionMetrics
@1.14.0
+#registerQueueLengthMetrics(Lorg/apache/flink/metrics/MetricGroup;[Lorg/apache/flink/runtime/io/network/partition/ResultPartition;)V

+###org/apache/flink/runtime/io/network/metrics/OutputBufferPoolUsageGauge
@1.14.0
+#<init>([Lorg/apache/flink/runtime/io/network/partition/ResultPartition;)V
+#getValue()Ljava/lang/Float;
+#getValue()Ljava/lang/Object;

+###org/apache/flink/runtime/io/network/metrics/InputBuffersGauge
@1.14.0
+#<init>([Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)V
+#getValue()Ljava/lang/Integer;
+#getValue()Ljava/lang/Object;

+###org/apache/flink/runtime/io/network/metrics/OutputBuffersSizeGauge
@1.15.0
+#<init>([Lorg/apache/flink/runtime/io/network/partition/ResultPartition;)V
+#getValue()Ljava/lang/Long;
+#getValue()Ljava/lang/Object;

+###org/apache/flink/runtime/io/network/metrics/FloatingBuffersUsageGauge
@1.14.0
+#<init>([Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)V
+#calculateUsedBuffers(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)I
+#calculateTotalBuffers(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)I

+###org/apache/flink/runtime/io/network/metrics/AbstractBuffersUsageGauge
@1.14.0
+#calculateUsedBuffers(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)I
+#calculateTotalBuffers(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)I
+#getValue()Ljava/lang/Float;
+#getValue()Ljava/lang/Object;

+###org/apache/flink/runtime/io/network/metrics/NettyShuffleMetricFactory
@1.14.0
+#registerShuffleMetrics(Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/runtime/io/network/buffer/NetworkBufferPool;)V
+#createShuffleIOOwnerMetricGroup(Lorg/apache/flink/metrics/MetricGroup;)Lorg/apache/flink/metrics/MetricGroup;
+#registerLegacyNetworkMetrics(ZLorg/apache/flink/metrics/MetricGroup;[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;)V[deprecated]
+#registerOutputMetrics(ZLorg/apache/flink/metrics/MetricGroup;[Lorg/apache/flink/runtime/io/network/partition/ResultPartition;)V
+#registerInputMetrics(ZLorg/apache/flink/metrics/MetricGroup;[Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)V
@1.15.0
+#registerDebloatingTaskMetrics([Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;Lorg/apache/flink/metrics/MetricGroup;)V

+###org/apache/flink/runtime/io/network/metrics/TimeToConsumeGauge
@1.15.0
+#<init>([Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)V
+#getValue()Ljava/lang/Long;
+#getValue()Ljava/lang/Object;

+###org/apache/flink/runtime/io/network/metrics/CreditBasedInputBuffersUsageGauge
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/metrics/FloatingBuffersUsageGauge;Lorg/apache/flink/runtime/io/network/metrics/ExclusiveBuffersUsageGauge;[Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)V
+#calculateUsedBuffers(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)I
+#calculateTotalBuffers(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)I

+###org/apache/flink/runtime/io/network/metrics/ExclusiveBuffersUsageGauge
@1.14.0
+#<init>([Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)V
+#calculateUsedBuffers(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)I
+#calculateTotalBuffers(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)I

+###org/apache/flink/runtime/io/network/metrics/InputGateMetrics
@1.14.0
+#registerQueueLengthMetrics(Lorg/apache/flink/metrics/MetricGroup;[Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)V

+###org/apache/flink/runtime/io/network/metrics/InputBuffersSizeGauge
@1.15.0
+#<init>([Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)V
+#getValue()Ljava/lang/Long;
+#getValue()Ljava/lang/Object;

+###org/apache/flink/runtime/io/network/metrics/OutputBuffersGauge
@1.14.0
+#<init>([Lorg/apache/flink/runtime/io/network/partition/ResultPartition;)V
+#getValue()Ljava/lang/Integer;
+#getValue()Ljava/lang/Object;

+###org/apache/flink/runtime/io/network/netty/InboundChannelHandlerFactory
@1.14.0
+#priority()I
+#createHandler(Lorg/apache/flink/configuration/Configuration;Ljava/util/Map;)Ljava/util/Optional;

+###org/apache/flink/runtime/io/network/netty/SSLHandlerFactory
@1.14.0
+#<init>(Lorg/apache/flink/shaded/netty4/io/netty/handler/ssl/SslContext;II)V
+#createNettySSLHandler(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBufAllocator;)Lorg/apache/flink/shaded/netty4/io/netty/handler/ssl/SslHandler;
+#createNettySSLHandler(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBufAllocator;Ljava/lang/String;I)Lorg/apache/flink/shaded/netty4/io/netty/handler/ssl/SslHandler;

+###org/apache/flink/runtime/io/network/netty/exception/TransportException
@0.9.0
+#<init>(Ljava/lang/String;Ljava/net/SocketAddress;)V
+#<init>(Ljava/lang/String;Ljava/net/SocketAddress;Ljava/lang/Throwable;)V
+#getAddress()Ljava/net/SocketAddress;

+###org/apache/flink/runtime/io/network/netty/exception/RemoteTransportException
@0.9.0
+#<init>(Ljava/lang/String;Ljava/net/SocketAddress;)V
+#<init>(Ljava/lang/String;Ljava/net/SocketAddress;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/io/network/netty/exception/LocalTransportException
@0.9.0
+#<init>(Ljava/lang/String;Ljava/net/SocketAddress;)V
+#<init>(Ljava/lang/String;Ljava/net/SocketAddress;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/io/network/netty/OutboundChannelHandlerFactory
@1.14.0
+#priority()I
+#createHandler(Lorg/apache/flink/configuration/Configuration;)Ljava/util/Optional;

+###org/apache/flink/runtime/io/network/netty/NettyMessage
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/io/network/netty/NettyPartitionRequestClient
@1.14.0
+#requestSubpartition(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;I)V
+#sendTaskEvent(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/event/TaskEvent;Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#notifyCreditAvailable(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#notifyNewBufferSize(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;I)V
+#resumeConsumption(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#acknowledgeAllRecordsProcessed(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#close(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
@1.15.0
+#closeConnection()V

+###org/apache/flink/runtime/io/network/netty/NettyConfig
@0.9.0-milestone-1
+#<init>(Ljava/net/InetAddress;IILorg/apache/flink/configuration/Configuration;)V
+#setServerConnectBacklog(I)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
+#setServerNumThreads(I)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
+#setClientNumThreads(I)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
+#setClientConnectTimeoutSeconds(I)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
+#setSendAndReceiveBufferSize(I)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
+#setTransportType(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
+#getServerConnectBacklog()I
+#getServerNumThreads()I
+#getClientNumThreads()I
+#getClientConnectTimeoutSeconds()I
+#getSendAndReceiveBufferSize()I
+#getTransportType()Lorg/apache/flink/runtime/io/network/netty/NettyConfig$TransportType;
+#toString()Ljava/lang/String;
@1.14.0
+#<init>(Ljava/net/InetAddress;IIILorg/apache/flink/configuration/Configuration;)V
+#getNumberOfArenas()I
+#getNetworkRetries()I
+#createClientSSLEngineFactory()Lorg/apache/flink/runtime/io/network/netty/SSLHandlerFactory;
+#createServerSSLEngineFactory()Lorg/apache/flink/runtime/io/network/netty/SSLHandlerFactory;
+#getSSLEnabled()Z
+#getConfig()Lorg/apache/flink/configuration/Configuration;
-#<init>(Ljava/net/InetAddress;IILorg/apache/flink/configuration/Configuration;)V
-#setServerConnectBacklog(I)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
-#setServerNumThreads(I)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
-#setClientNumThreads(I)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
-#setClientConnectTimeoutSeconds(I)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
-#setSendAndReceiveBufferSize(I)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
-#setTransportType(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/netty/NettyConfig;

+###org/apache/flink/runtime/io/network/netty/NettyProtocol
@0.9.0-milestone-1
+#setServerChannelPipeline(Lio/netty/channel/ChannelPipeline;)V
+#setClientChannelPipeline(Lio/netty/channel/ChannelPipeline;)V
@0.9.0
+#getServerChannelHandlers()[Lio/netty/channel/ChannelHandler;
+#getClientChannelHandlers()[Lio/netty/channel/ChannelHandler;
-#setServerChannelPipeline(Lio/netty/channel/ChannelPipeline;)V
-#setClientChannelPipeline(Lio/netty/channel/ChannelPipeline;)V
@1.14.0
+#getServerChannelHandlers()[Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandler;
+#getClientChannelHandlers()[Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandler;
-#getServerChannelHandlers()[Lio/netty/channel/ChannelHandler;
-#getClientChannelHandlers()[Lio/netty/channel/ChannelHandler;

+###org/apache/flink/runtime/io/network/netty/NettyBufferPool
@1.14.0
+#<init>(I)V
+#getNumberOfAllocatedBytes()Ljava/util/Optional;
+#heapBuffer()Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#heapBuffer(I)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#heapBuffer(II)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#compositeHeapBuffer()Lorg/apache/flink/shaded/netty4/io/netty/buffer/CompositeByteBuf;
+#compositeHeapBuffer(I)Lorg/apache/flink/shaded/netty4/io/netty/buffer/CompositeByteBuf;

+###org/apache/flink/runtime/io/network/netty/NettyConnectionManager
@0.6-hadoop2-incubating
+#<init>(Ljava/net/InetAddress;IIIII)V
+#start(Lorg/apache/flink/runtime/io/network/ChannelManager;)V
+#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#shutdown()V
@0.6.1-hadoop2-incubating
+#<init>(Ljava/net/InetAddress;IIIIII)V
-#<init>(Ljava/net/InetAddress;IIIII)V
-#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
@0.8.0
+#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;Z)V
+#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#getNumberOfActiveConnections()I
-#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/netty/NettyConfig;)V
+#start(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/io/network/buffer/NetworkBufferPool;)V
+#createPartitionRequestClient(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/io/network/netty/PartitionRequestClient;
+#closeOpenChannelConnections(Lorg/apache/flink/runtime/io/network/ConnectionID;)V
-#<init>(Ljava/net/InetAddress;IIIIII)V
-#start(Lorg/apache/flink/runtime/io/network/ChannelManager;)V
-#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;Z)V
-#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/runtime/io/network/netty/NettyConfig;)V
+#start()I
+#createPartitionRequestClient(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/io/network/PartitionRequestClient;
-#<init>(Lorg/apache/flink/runtime/io/network/netty/NettyConfig;)V
-#start(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/io/network/buffer/NetworkBufferPool;)V
-#createPartitionRequestClient(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/io/network/netty/PartitionRequestClient;
@1.14.5
+#<init>(Lorg/apache/flink/runtime/io/network/netty/NettyBufferPool;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/runtime/io/network/netty/NettyConfig;)V
@1.15.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/runtime/io/network/netty/NettyConfig;IZ)V
+#<init>(Lorg/apache/flink/runtime/io/network/netty/NettyBufferPool;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/runtime/io/network/netty/NettyConfig;IZ)V
-#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/runtime/io/network/netty/NettyConfig;)V
-#<init>(Lorg/apache/flink/runtime/io/network/netty/NettyBufferPool;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/runtime/io/network/netty/NettyConfig;)V

+###org/apache/flink/runtime/io/network/netty/ByteBufUtils
@1.14.0
+#<init>()V
+#accumulate(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;II)Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;

+###org/apache/flink/runtime/io/network/netty/NettyMessageClientDecoderDelegate
@1.14.0
+#channelActive(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;)V
+#channelInactive(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;)V
+#channelRead(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V

+###org/apache/flink/runtime/io/network/netty/ConnectionErrorMessage
@1.15.0
+#<init>(Ljava/lang/Throwable;)V
+#getCause()Ljava/lang/Throwable;

+###org/apache/flink/runtime/io/network/PartitionRequestClient
@1.14.0
+#requestSubpartition(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;I)V
+#notifyCreditAvailable(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#notifyNewBufferSize(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;I)V
+#resumeConsumption(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#acknowledgeAllRecordsProcessed(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#sendTaskEvent(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/event/TaskEvent;Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#close(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V

+###org/apache/flink/runtime/io/network/ConnectionManager
@0.9.0-milestone-1
+#start(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/io/network/buffer/NetworkBufferPool;)V
+#createPartitionRequestClient(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/io/network/netty/PartitionRequestClient;
+#closeOpenChannelConnections(Lorg/apache/flink/runtime/io/network/ConnectionID;)V
+#getNumberOfActiveConnections()I
+#shutdown()V
@1.14.0
+#start()I
+#createPartitionRequestClient(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/io/network/PartitionRequestClient;
-#start(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/io/network/buffer/NetworkBufferPool;)V
-#createPartitionRequestClient(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/io/network/netty/PartitionRequestClient;

+###org/apache/flink/runtime/io/network/NetworkClientHandler
@1.14.0
+#addInputChannel(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#removeInputChannel(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#getInputChannel(Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannelID;)Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;
+#cancelRequestFor(Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannelID;)V
+#notifyCreditAvailable(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#notifyNewBufferSize(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;I)V
+#resumeConsumption(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#acknowledgeAllRecordsProcessed(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
@1.14.3
-#notifyCreditAvailable(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
-#notifyNewBufferSize(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;I)V
-#resumeConsumption(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
-#acknowledgeAllRecordsProcessed(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
@1.15.0
+#hasChannelError()Z
@1.16.1
+#setConnectionId(Lorg/apache/flink/runtime/io/network/ConnectionID;)V

+###org/apache/flink/runtime/io/network/NetworkSequenceViewReader
@1.14.0
+#requestSubpartitionView(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;I)V
+#getNextBuffer()Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel$BufferAndAvailability;
+#needAnnounceBacklog()Z
+#addCredit(I)V
+#resumeConsumption()V
+#acknowledgeAllRecordsProcessed()V
+#getAvailabilityAndBacklog()Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView$AvailabilityWithBacklog;
+#isRegisteredAsAvailable()Z
+#setRegisteredAsAvailable(Z)V
+#isReleased()Z
+#releaseAllResources()V
+#getFailureCause()Ljava/lang/Throwable;
+#getReceiverId()Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannelID;
+#notifyNewBufferSize(I)V

+###org/apache/flink/runtime/io/network/LocalConnectionManager
@0.6-hadoop2-incubating
+#<init>()V
+#start(Lorg/apache/flink/runtime/io/network/ChannelManager;)V
+#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#shutdown()V
@0.6.1-hadoop2-incubating
-#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
@0.8.0
+#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;Z)V
+#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#getNumberOfActiveConnections()I
-#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
@0.9.0-milestone-1
+#start(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/io/network/buffer/NetworkBufferPool;)V
+#createPartitionRequestClient(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/io/network/netty/PartitionRequestClient;
+#closeOpenChannelConnections(Lorg/apache/flink/runtime/io/network/ConnectionID;)V
-#start(Lorg/apache/flink/runtime/io/network/ChannelManager;)V
-#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;Z)V
-#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
@1.14.0
+#start()I
+#createPartitionRequestClient(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/io/network/PartitionRequestClient;
-#start(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionProvider;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/io/network/buffer/NetworkBufferPool;)V
-#createPartitionRequestClient(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/io/network/netty/PartitionRequestClient;

+###org/apache/flink/runtime/io/network/DataExchangeMode
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/runtime/io/network/DataExchangeMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/DataExchangeMode;
+#getForForwardExchange(Lorg/apache/flink/api/common/ExecutionMode;)Lorg/apache/flink/runtime/io/network/DataExchangeMode;
+#getForShuffleOrBroadcast(Lorg/apache/flink/api/common/ExecutionMode;)Lorg/apache/flink/runtime/io/network/DataExchangeMode;
+#getPipelineBreakingExchange(Lorg/apache/flink/api/common/ExecutionMode;)Lorg/apache/flink/runtime/io/network/DataExchangeMode;
+#select(Lorg/apache/flink/api/common/ExecutionMode;Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Z)Lorg/apache/flink/runtime/io/network/DataExchangeMode;

+###org/apache/flink/runtime/io/network/logger/NetworkActionsLogger
@1.14.0
+#<init>()V
+#traceInput(Ljava/lang/String;Lorg/apache/flink/runtime/io/network/buffer/Buffer;Ljava/lang/String;Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;Lorg/apache/flink/runtime/io/network/partition/consumer/ChannelStatePersister;I)V
+#traceOutput(Ljava/lang/String;Lorg/apache/flink/runtime/io/network/buffer/Buffer;Ljava/lang/String;Lorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;)V
+#traceRecover(Ljava/lang/String;Lorg/apache/flink/runtime/io/network/buffer/Buffer;Ljava/lang/String;Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#traceRecover(Ljava/lang/String;Lorg/apache/flink/runtime/io/network/buffer/BufferConsumer;Ljava/lang/String;Lorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;)V
+#tracePersist(Ljava/lang/String;Lorg/apache/flink/runtime/io/network/buffer/Buffer;Ljava/lang/String;Ljava/lang/Object;J)V
+#measureIO(Ljava/lang/String;Ljava/lang/Object;)Ljava/io/Closeable;

+###org/apache/flink/runtime/io/network/NettyShuffleServiceFactory
@1.14.0
+#<init>()V
+#createShuffleMaster(Lorg/apache/flink/runtime/shuffle/ShuffleMasterContext;)Lorg/apache/flink/runtime/shuffle/NettyShuffleMaster;
+#createShuffleEnvironment(Lorg/apache/flink/runtime/shuffle/ShuffleEnvironmentContext;)Lorg/apache/flink/runtime/io/network/NettyShuffleEnvironment;
+#createShuffleEnvironment(Lorg/apache/flink/runtime/shuffle/ShuffleEnvironmentContext;)Lorg/apache/flink/runtime/shuffle/ShuffleEnvironment;
+#createShuffleMaster(Lorg/apache/flink/runtime/shuffle/ShuffleMasterContext;)Lorg/apache/flink/runtime/shuffle/ShuffleMaster;
@1.14.5
+#createNettyShuffleEnvironment(Lorg/apache/flink/runtime/taskmanager/NettyShuffleEnvironmentConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/ConnectionManager;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/io/network/NettyShuffleEnvironment;
@1.16.0
+#createNettyShuffleEnvironment(Lorg/apache/flink/runtime/taskmanager/NettyShuffleEnvironmentConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/ConnectionManager;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/concurrent/Executor;I[Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/NettyShuffleEnvironment;
-#createNettyShuffleEnvironment(Lorg/apache/flink/runtime/taskmanager/NettyShuffleEnvironmentConfiguration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/ConnectionManager;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/io/network/NettyShuffleEnvironment;

+###org/apache/flink/runtime/io/network/NettyShuffleEnvironment
@1.14.0
+#getResultPartitionManager()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;
+#getConnectionManager()Lorg/apache/flink/runtime/io/network/ConnectionManager;
+#getNetworkBufferPool()Lorg/apache/flink/runtime/io/network/buffer/NetworkBufferPool;
+#getBatchShuffleReadBufferPool()Lorg/apache/flink/runtime/io/disk/BatchShuffleReadBufferPool;
+#getBatchShuffleReadIOExecutor()Ljava/util/concurrent/ExecutorService;
+#getConfiguration()Lorg/apache/flink/runtime/taskmanager/NettyShuffleEnvironmentConfiguration;
+#getInputGate(Lorg/apache/flink/runtime/io/network/partition/consumer/InputGateID;)Ljava/util/Optional;
+#releasePartitionsLocally(Ljava/util/Collection;)V
+#getPartitionsOccupyingLocalResources()Ljava/util/Collection;
+#createShuffleIOOwnerContext(Ljava/lang/String;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/metrics/MetricGroup;)Lorg/apache/flink/runtime/shuffle/ShuffleIOOwnerContext;
+#createResultPartitionWriters(Lorg/apache/flink/runtime/shuffle/ShuffleIOOwnerContext;Ljava/util/List;)Ljava/util/List;
+#createInputGates(Lorg/apache/flink/runtime/shuffle/ShuffleIOOwnerContext;Lorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider;Ljava/util/List;)Ljava/util/List;
+#registerLegacyNetworkMetrics(Lorg/apache/flink/metrics/MetricGroup;[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;)V[deprecated]
+#updatePartitionInfo(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/executiongraph/PartitionInfo;)Z
+#start()I
+#close()V
+#isClosed()Z
@1.16.0
+#getBatchShuffleReadIOExecutor()Ljava/util/concurrent/ScheduledExecutorService;
-#getBatchShuffleReadIOExecutor()Ljava/util/concurrent/ExecutorService;

+###org/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID
@0.8.0
+#getPath()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
+#getPathFile()Ljava/io/File;
@1.14.0
+#<init>(Ljava/io/File;ILjava/util/Random;)V

+###org/apache/flink/runtime/io/disk/iomanager/FileIOChannel$Enumerator
@0.8.0
+#next()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;
@1.14.0
+#<init>([Ljava/io/File;Ljava/util/Random;)V

+###org/apache/flink/runtime/io/disk/iomanager/FileIOChannel
@0.8.0
+#getChannelID()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;
+#isClosed()Z
+#close()V
+#deleteChannel()V
+#closeAndDelete()V
@0.9.0-milestone-1
+#getSize()J
+#getNioFileChannel()Ljava/nio/channels/FileChannel;

+###org/apache/flink/runtime/io/disk/iomanager/IOManager
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>([Ljava/lang/String;)V
+#shutdown()V
+#isProperlyShutDown()Z
+#uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V
+#createChannel()Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;
+#createChannelEnumerator()Lorg/apache/flink/runtime/io/disk/iomanager/Channel$Enumerator;
+#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
+#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;I)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
+#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
+#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;I)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
+#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
+#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;I)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
+#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
+#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;I)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
+#createBulkBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/List;I)Lorg/apache/flink/runtime/io/disk/iomanager/BulkBlockChannelReader;
@0.8.0
+#createChannel()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;
+#createChannelEnumerator()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$Enumerator;
+#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
+#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
+#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Lorg/apache/flink/runtime/io/disk/iomanager/RequestDoneCallback;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriterWithCallback;
+#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
+#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
+#createBulkBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Ljava/util/List;I)Lorg/apache/flink/runtime/io/disk/iomanager/BulkBlockChannelReader;
-#<init>()V
-#<init>(Ljava/lang/String;)V
-#<init>([Ljava/lang/String;)V
-#uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V
-#createChannel()Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;
-#createChannelEnumerator()Lorg/apache/flink/runtime/io/disk/iomanager/Channel$Enumerator;
-#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
-#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;I)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
-#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
-#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;I)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
-#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
-#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;I)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
-#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
-#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;I)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
-#createBulkBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/List;I)Lorg/apache/flink/runtime/io/disk/iomanager/BulkBlockChannelReader;
@0.9.0-milestone-1
+#deleteChannel(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;)V
+#createBufferFileWriter(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;)Lorg/apache/flink/runtime/io/disk/iomanager/BufferFileWriter;
+#createBufferFileReader(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Lorg/apache/flink/runtime/io/disk/iomanager/RequestDoneCallback;)Lorg/apache/flink/runtime/io/disk/iomanager/BufferFileReader;
+#createBufferFileSegmentReader(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Lorg/apache/flink/runtime/io/disk/iomanager/RequestDoneCallback;)Lorg/apache/flink/runtime/io/disk/iomanager/BufferFileSegmentReader;
+#getNumberOfTempDirs()I
@0.9.1
+#getSpillingDirectories()[Ljava/io/File;
@0.10.0
+#getNumberOfSpillingDirectories()I
-#getNumberOfTempDirs()I
@1.14.0
+#close()V
+#getSpillingDirectoriesPaths()[Ljava/lang/String;
-#shutdown()V
-#isProperlyShutDown()Z
-#getNumberOfSpillingDirectories()I

+###org/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter
@0.6-hadoop2-incubating
+#writeBlock(Lorg/apache/flink/core/memory/MemorySegment;)V
+#getNextReturnedSegment()Lorg/apache/flink/core/memory/MemorySegment;
@0.8.0
+#getReturnQueue()Ljava/util/concurrent/LinkedBlockingQueue;
-#writeBlock(Lorg/apache/flink/core/memory/MemorySegment;)V
@0.9.0-milestone-1
+#getNextReturnedBlock()Ljava/lang/Object;
-#getNextReturnedSegment()Lorg/apache/flink/core/memory/MemorySegment;

+###org/apache/flink/runtime/io/disk/iomanager/BlockChannelWriterWithCallback
@0.8.0
+#writeBlock(Lorg/apache/flink/core/memory/MemorySegment;)V
@0.9.0-milestone-1
+#writeBlock(Ljava/lang/Object;)V
-#writeBlock(Lorg/apache/flink/core/memory/MemorySegment;)V

+###org/apache/flink/runtime/io/disk/iomanager/RequestDoneCallback
@0.8.0
+#requestSuccessful(Lorg/apache/flink/core/memory/MemorySegment;)V
+#requestFailed(Lorg/apache/flink/core/memory/MemorySegment;Ljava/io/IOException;)V
@0.9.0-milestone-1
+#requestSuccessful(Ljava/lang/Object;)V
+#requestFailed(Ljava/lang/Object;Ljava/io/IOException;)V
-#requestSuccessful(Lorg/apache/flink/core/memory/MemorySegment;)V
-#requestFailed(Lorg/apache/flink/core/memory/MemorySegment;Ljava/io/IOException;)V

+###org/apache/flink/runtime/io/disk/iomanager/BlockChannelReader
@0.6-hadoop2-incubating
+#readBlock(Lorg/apache/flink/core/memory/MemorySegment;)V
+#getNextReturnedSegment()Lorg/apache/flink/core/memory/MemorySegment;
@0.8.0
+#getReturnQueue()Ljava/util/concurrent/LinkedBlockingQueue;
@0.9.0-milestone-1
+#readBlock(Ljava/lang/Object;)V
+#seekToPosition(J)V
+#getNextReturnedBlock()Ljava/lang/Object;
-#readBlock(Lorg/apache/flink/core/memory/MemorySegment;)V
-#getNextReturnedSegment()Lorg/apache/flink/core/memory/MemorySegment;

+###org/apache/flink/runtime/io/disk/iomanager/BufferFileWriter
@0.9.0-milestone-1
+#getNumberOfOutstandingRequests()I
+#registerAllRequestsProcessedListener(Lorg/apache/flink/runtime/util/event/NotificationListener;)Z

+###org/apache/flink/runtime/io/disk/iomanager/BufferFileReader
@0.9.0-milestone-1
+#readInto(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#seekToPosition(J)V
+#hasReachedEndOfFile()Z

+###org/apache/flink/runtime/io/disk/iomanager/FileSegment
@0.9.0-milestone-1
+#<init>(Ljava/nio/channels/FileChannel;JIZ)V
+#getFileChannel()Ljava/nio/channels/FileChannel;
+#getPosition()J
+#getLength()I
+#isBuffer()Z

+###org/apache/flink/runtime/io/disk/iomanager/BufferFileSegmentReader
@0.9.0-milestone-1
+#read()V
+#seekTo(J)V
+#hasReachedEndOfFile()Z

+###org/apache/flink/runtime/io/disk/iomanager/BulkBlockChannelReader
@0.6-hadoop2-incubating
+#getFullSegments()Ljava/util/List;

+###org/apache/flink/runtime/io/disk/iomanager/HeaderlessChannelReaderInputView
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;Ljava/util/List;IIZ)V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;Ljava/util/List;IIZJ)V
+#advance()V

+###org/apache/flink/runtime/io/disk/iomanager/ChannelReaderInputView
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;Ljava/util/List;Z)V
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;Ljava/util/List;IZ)V
+#waitForFirstBlock()V
+#isClosed()Z
+#close()Ljava/util/List;
@1.14.0
+#getChannel()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel;

+###org/apache/flink/runtime/io/disk/iomanager/AbstractChannelReaderInputView
@1.14.0
+#<init>(I)V
+#close()Ljava/util/List;
+#getChannel()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel;

+###org/apache/flink/runtime/io/disk/iomanager/ChannelWriterOutputView
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;Ljava/util/List;I)V
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;I)V
+#close()Ljava/util/List;
+#getBlockCount()I
+#getBytesWritten()J
+#getBytesMemoryUsed()J

+###org/apache/flink/runtime/io/disk/iomanager/AsynchronousBufferFileWriter
@0.9.0-milestone-1
+#writeBlock(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#getNumberOfOutstandingRequests()I
+#registerAllRequestsProcessedListener(Lorg/apache/flink/runtime/util/event/NotificationListener;)Z
+#writeBlock(Ljava/lang/Object;)V

+###org/apache/flink/runtime/io/disk/iomanager/AsynchronousFileIOChannel
@0.8.0
+#isClosed()Z
+#close()V
+#closeAndDelete()V
+#checkErroneous()V

+###org/apache/flink/runtime/io/disk/iomanager/AbstractFileIOChannel
@0.8.0
+#getChannelID()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;
+#isClosed()Z
+#close()V
+#deleteChannel()V
+#closeAndDelete()V
@0.9.0-milestone-1
+#getSize()J
+#getNioFileChannel()Ljava/nio/channels/FileChannel;

+###org/apache/flink/runtime/io/disk/iomanager/RequestQueue
@0.6-hadoop2-incubating
+#<init>()V
+#close()V
+#isClosed()Z

+###org/apache/flink/runtime/io/disk/iomanager/QueuingCallback
@0.8.0
+#<init>(Ljava/util/concurrent/LinkedBlockingQueue;)V
+#requestSuccessful(Lorg/apache/flink/core/memory/MemorySegment;)V
+#requestFailed(Lorg/apache/flink/core/memory/MemorySegment;Ljava/io/IOException;)V
@0.9.0-milestone-1
+#requestSuccessful(Ljava/lang/Object;)V
+#requestFailed(Ljava/lang/Object;Ljava/io/IOException;)V
-#requestSuccessful(Lorg/apache/flink/core/memory/MemorySegment;)V
-#requestFailed(Lorg/apache/flink/core/memory/MemorySegment;Ljava/io/IOException;)V

+###org/apache/flink/runtime/io/disk/iomanager/AsynchronousBulkBlockReader
@0.8.0
+#getFullSegments()Ljava/util/List;

+###org/apache/flink/runtime/io/disk/iomanager/SynchronousFileIOChannel
@0.8.0
+#isClosed()Z
+#close()V

+###org/apache/flink/runtime/io/disk/iomanager/SynchronousBufferFileReader
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Z)V
+#readInto(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#seekToPosition(J)V
+#hasReachedEndOfFile()Z

+###org/apache/flink/runtime/io/disk/iomanager/BufferFileChannelReader
@1.14.0
+#readBufferFromFileChannel(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Z

+###org/apache/flink/runtime/io/disk/iomanager/AsynchronousBufferFileReader
@0.9.0-milestone-1
+#readInto(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#seekToPosition(J)V
+#hasReachedEndOfFile()Z

+###org/apache/flink/runtime/io/disk/iomanager/AsynchronousBlockWriterWithCallback
@0.8.0
+#writeBlock(Lorg/apache/flink/core/memory/MemorySegment;)V
@0.9.0-milestone-1
+#writeBlock(Ljava/lang/Object;)V

+###org/apache/flink/runtime/io/disk/iomanager/AsynchronousBufferFileSegmentReader
@0.9.0-milestone-1
+#read()V
+#seekTo(J)V
+#hasReachedEndOfFile()Z

+###org/apache/flink/runtime/io/disk/iomanager/AsynchronousBlockReader
@0.8.0
+#readBlock(Lorg/apache/flink/core/memory/MemorySegment;)V
+#getNextReturnedSegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getReturnQueue()Ljava/util/concurrent/LinkedBlockingQueue;
@0.9.0-milestone-1
+#seekToPosition(J)V
+#getNextReturnedBlock()Lorg/apache/flink/core/memory/MemorySegment;
+#getNextReturnedBlock()Ljava/lang/Object;
+#readBlock(Ljava/lang/Object;)V
-#getNextReturnedSegment()Lorg/apache/flink/core/memory/MemorySegment;

+###org/apache/flink/runtime/io/disk/iomanager/IOManagerAsync
@0.8.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>([Ljava/lang/String;)V
+#shutdown()V
+#isProperlyShutDown()Z
+#uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V
+#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
+#createBlockChannelWriter(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Lorg/apache/flink/runtime/io/disk/iomanager/RequestDoneCallback;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriterWithCallback;
+#createBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;
+#createBulkBlockChannelReader(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Ljava/util/List;I)Lorg/apache/flink/runtime/io/disk/iomanager/BulkBlockChannelReader;
@0.9.0-milestone-1
+#createBufferFileWriter(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;)Lorg/apache/flink/runtime/io/disk/iomanager/BufferFileWriter;
+#createBufferFileReader(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Lorg/apache/flink/runtime/io/disk/iomanager/RequestDoneCallback;)Lorg/apache/flink/runtime/io/disk/iomanager/BufferFileReader;
+#createBufferFileSegmentReader(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Lorg/apache/flink/runtime/io/disk/iomanager/RequestDoneCallback;)Lorg/apache/flink/runtime/io/disk/iomanager/BufferFileSegmentReader;
@1.14.0
+#close()V
-#shutdown()V
-#isProperlyShutDown()Z

+###org/apache/flink/runtime/io/disk/iomanager/AsynchronousBlockWriter
@0.8.0
+#getNextReturnedSegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getReturnQueue()Ljava/util/concurrent/LinkedBlockingQueue;
@0.9.0-milestone-1
+#getNextReturnedBlock()Lorg/apache/flink/core/memory/MemorySegment;
+#getNextReturnedBlock()Ljava/lang/Object;
-#getNextReturnedSegment()Lorg/apache/flink/core/memory/MemorySegment;

+###org/apache/flink/runtime/io/disk/iomanager/AbstractChannelWriterOutputView
@1.14.0
+#<init>(II)V
+#getChannel()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel;
+#close()I
+#getBlockCount()I
+#getNumBytes()J
+#getNumCompressedBytes()J

+###org/apache/flink/runtime/io/disk/FileChannelManager
@1.14.0
+#createChannel()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;
+#createChannelEnumerator()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$Enumerator;
+#getPaths()[Ljava/io/File;

+###org/apache/flink/runtime/io/disk/SpillingBuffer
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/core/memory/MemorySegmentSource;I)V
+#flip()Lorg/apache/flink/core/memory/DataInputView;
+#close()Ljava/util/List;

+###org/apache/flink/runtime/io/disk/RandomAccessInputView
@0.6-hadoop2-incubating
+#<init>(Ljava/util/ArrayList;I)V
+#<init>(Ljava/util/ArrayList;II)V
+#setReadPosition(J)V
@1.14.0
+#getReadPosition()J

+###org/apache/flink/runtime/io/disk/RandomAccessOutputView
@0.6-hadoop2-incubating
+#<init>([Lorg/apache/flink/core/memory/MemorySegment;I)V
+#<init>([Lorg/apache/flink/core/memory/MemorySegment;II)V
+#setWritePosition(J)V

+###org/apache/flink/runtime/io/disk/SimpleCollectingOutputView
@0.6-hadoop2-incubating
+#<init>(Ljava/util/List;Lorg/apache/flink/core/memory/MemorySegmentSource;I)V
+#reset()V
+#getCurrentOffset()J

+###org/apache/flink/runtime/io/disk/FileChannelOutputView
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/List;I)V
+#close()V
+#closeAndDelete()V
+#getBlockCount()I
+#getBytesInLatestSegment()I
+#getWriteOffset()J
@0.10.0
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;Lorg/apache/flink/runtime/memory/MemoryManager;Ljava/util/List;I)V
-#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/List;I)V

+###org/apache/flink/runtime/io/disk/FileChannelInputView
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/List;I)V
+#close()V
+#closeAndDelete()V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;Lorg/apache/flink/runtime/memory/MemoryManager;Ljava/util/List;I)V
-#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/List;I)V

+###org/apache/flink/runtime/io/disk/SeekableFileChannelInputView
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/List;I)V
+#seek(J)V
+#close()V
+#closeAndDelete()V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Lorg/apache/flink/runtime/memory/MemoryManager;Ljava/util/List;I)V
-#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/List;I)V

+###org/apache/flink/runtime/io/disk/FileBasedBufferIterator
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/RefCountedFile;II)V
+#hasNext()Z
+#next()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#close()V
+#next()Ljava/lang/Object;

+###org/apache/flink/runtime/io/disk/BatchShuffleReadBufferPool
@1.14.0
+#<init>(JI)V
+#getNumTotalBuffers()I
+#getAvailableBuffers()I
+#getNumBuffersPerRequest()I
+#getMaxConcurrentRequests()I
+#getBufferSize()I
+#initialize()V
+#requestBuffers()Ljava/util/List;
+#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V
+#recycle(Ljava/util/Collection;)V
+#destroy()V
+#isDestroyed()Z
@1.14.4
+#getLastBufferOperationTimestamp()J
@1.15.0
+#registerRequester(Ljava/lang/Object;)V
+#unregisterRequester(Ljava/lang/Object;)V
+#getAverageBuffersPerRequester()I

+###org/apache/flink/runtime/io/disk/ChannelReaderInputViewIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;I)V
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;I)V
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelReader;Ljava/util/concurrent/LinkedBlockingQueue;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;I)V
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelReaderInputView;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#next(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.0
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;I)V
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Ljava/util/concurrent/LinkedBlockingQueue;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;I)V
-#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;I)V
-#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;I)V
@0.9.0-milestone-1
+#next()Ljava/lang/Object;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/AbstractChannelReaderInputView;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
-#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelReaderInputView;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V

+###org/apache/flink/runtime/io/disk/InputViewIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#next(Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0-milestone-1
+#next()Ljava/lang/Object;

+###org/apache/flink/runtime/io/disk/FileChannelManagerImpl
@1.14.0
+#<init>([Ljava/lang/String;Ljava/lang/String;)V
+#createChannel()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;
+#createChannelEnumerator()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$Enumerator;
+#getPaths()[Ljava/io/File;
+#close()V

+###org/apache/flink/runtime/io/AvailabilityProvider$AvailabilityHelper
@1.14.0
+#<init>()V
+#and(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
+#and(Lorg/apache/flink/runtime/io/AvailabilityProvider;)Ljava/util/concurrent/CompletableFuture;
+#or(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
+#or(Lorg/apache/flink/runtime/io/AvailabilityProvider;)Ljava/util/concurrent/CompletableFuture;
+#resetUnavailable()V
+#resetAvailable()V
+#getUnavailableToResetAvailable()Ljava/util/concurrent/CompletableFuture;
+#getUnavailableToResetUnavailable()Ljava/util/concurrent/CompletableFuture;
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/io/AvailabilityProvider
@1.14.0
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#isAvailable()Z
+#isApproximatelyAvailable()Z
+#and(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
+#or(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/io/PullingAsyncDataInput$EndOfDataStatus
@1.15.0
+#values()[Lorg/apache/flink/runtime/io/PullingAsyncDataInput$EndOfDataStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/PullingAsyncDataInput$EndOfDataStatus;

+###org/apache/flink/runtime/io/PullingAsyncDataInput
@1.14.0
+#pollNext()Ljava/util/Optional;
+#isFinished()Z
+#hasReceivedEndOfData()Z
@1.15.0
+#hasReceivedEndOfData()Lorg/apache/flink/runtime/io/PullingAsyncDataInput$EndOfDataStatus;
-#hasReceivedEndOfData()Z

+###org/apache/flink/runtime/io/compression/BlockCompressor
@1.14.0
+#getMaxCompressedSize(I)I
+#compress(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;I)I
+#compress([BII[BI)I

+###org/apache/flink/runtime/io/compression/BlockDecompressor
@1.14.0
+#decompress(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;I)I
+#decompress([BII[BI)I

+###org/apache/flink/runtime/io/compression/InsufficientBufferException
@1.14.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@1.16.0
-###org/apache/flink/runtime/io/compression/InsufficientBufferException

+###org/apache/flink/runtime/io/compression/DataCorruptionException
@1.14.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@1.16.0
-###org/apache/flink/runtime/io/compression/DataCorruptionException

+###org/apache/flink/runtime/io/compression/Lz4BlockCompressionFactory
@1.14.0
+#<init>()V
+#getCompressor()Lorg/apache/flink/runtime/io/compression/BlockCompressor;
+#getDecompressor()Lorg/apache/flink/runtime/io/compression/BlockDecompressor;

+###org/apache/flink/runtime/io/compression/BlockCompressionFactory$CompressionFactoryName
@1.14.0
+#values()[Lorg/apache/flink/runtime/io/compression/BlockCompressionFactory$CompressionFactoryName;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/compression/BlockCompressionFactory$CompressionFactoryName;

+###org/apache/flink/runtime/io/compression/BlockCompressionFactory
@1.14.0
+#getCompressor()Lorg/apache/flink/runtime/io/compression/BlockCompressor;
+#getDecompressor()Lorg/apache/flink/runtime/io/compression/BlockDecompressor;
+#createBlockCompressionFactory(Ljava/lang/String;)Lorg/apache/flink/runtime/io/compression/BlockCompressionFactory;

+###org/apache/flink/runtime/io/compression/Lz4BlockCompressor
@1.14.0
+#<init>()V
+#getMaxCompressedSize(I)I
+#compress(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;I)I
+#compress([BII[BI)I

+###org/apache/flink/runtime/io/compression/Lz4BlockDecompressor
@1.14.0
+#<init>()V
+#decompress(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;I)I
+#decompress([BII[BI)I

+###org/apache/flink/runtime/checkpoint/CheckpointOptions$AlignmentType
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/CheckpointOptions$AlignmentType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions$AlignmentType;

+###org/apache/flink/runtime/checkpoint/CheckpointOptions
@1.14.0
+#notExactlyOnce(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#alignedNoTimeout(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#unaligned(Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#alignedWithTimeout(Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;J)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#forConfig(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;ZZJ)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)V
+#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions$AlignmentType;J)V
+#needsAlignment()Z
+#getAlignedCheckpointTimeout()J
+#getAlignment()Lorg/apache/flink/runtime/checkpoint/CheckpointOptions$AlignmentType;
+#isTimeoutable()Z
+#getCheckpointType()Lorg/apache/flink/runtime/checkpoint/CheckpointType;
+#getTargetLocation()Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;
+#isExactlyOnceMode()Z
+#isUnalignedCheckpoint()Z
+#withUnalignedSupported()Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#withUnalignedUnsupported()Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#forCheckpointWithDefaultLocation()Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#toUnaligned()Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
@1.15.0
+#notExactlyOnce(Lorg/apache/flink/runtime/checkpoint/SnapshotType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#alignedNoTimeout(Lorg/apache/flink/runtime/checkpoint/SnapshotType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#unaligned(Lorg/apache/flink/runtime/checkpoint/SnapshotType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#alignedWithTimeout(Lorg/apache/flink/runtime/checkpoint/SnapshotType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;J)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#forConfig(Lorg/apache/flink/runtime/checkpoint/SnapshotType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;ZZJ)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
+#<init>(Lorg/apache/flink/runtime/checkpoint/SnapshotType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)V
+#<init>(Lorg/apache/flink/runtime/checkpoint/SnapshotType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions$AlignmentType;J)V
+#getCheckpointType()Lorg/apache/flink/runtime/checkpoint/SnapshotType;
-#notExactlyOnce(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
-#alignedNoTimeout(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
-#unaligned(Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
-#alignedWithTimeout(Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;J)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
-#forConfig(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;ZZJ)Lorg/apache/flink/runtime/checkpoint/CheckpointOptions;
-#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;)V
-#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointType;Lorg/apache/flink/runtime/state/CheckpointStorageLocationReference;Lorg/apache/flink/runtime/checkpoint/CheckpointOptions$AlignmentType;J)V
-#getCheckpointType()Lorg/apache/flink/runtime/checkpoint/CheckpointType;
@1.16.0
+#needsChannelState()Z

+###org/apache/flink/runtime/checkpoint/JobManagerTaskRestore
@1.14.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#getRestoreCheckpointId()J
+#getTaskStateSnapshot()Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/SnapshotType$SharingFilesStrategy
@1.15.0
+#values()[Lorg/apache/flink/runtime/checkpoint/SnapshotType$SharingFilesStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/SnapshotType$SharingFilesStrategy;

+###org/apache/flink/runtime/checkpoint/SnapshotType
@1.15.0
+#isSavepoint()Z
+#getName()Ljava/lang/String;
+#getSharingFilesStrategy()Lorg/apache/flink/runtime/checkpoint/SnapshotType$SharingFilesStrategy;

+###org/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor$InflightDataGateOrPartitionRescalingDescriptor$MappingType
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor$InflightDataGateOrPartitionRescalingDescriptor$MappingType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor$InflightDataGateOrPartitionRescalingDescriptor$MappingType;

+###org/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor$InflightDataGateOrPartitionRescalingDescriptor
@1.14.0
+#<init>([ILorg/apache/flink/runtime/checkpoint/RescaleMappings;Ljava/util/Set;Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor$InflightDataGateOrPartitionRescalingDescriptor$MappingType;)V
+#isIdentity()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor
@1.14.0
+#<init>([Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor$InflightDataGateOrPartitionRescalingDescriptor;)V
+#getOldSubtaskIndexes(I)[I
+#getChannelMapping(I)Lorg/apache/flink/runtime/checkpoint/RescaleMappings;
+#isAmbiguous(II)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/TaskStateSnapshot
@1.14.0
+#<init>()V
+#<init>(IZ)V
+#<init>(Ljava/util/Map;)V
+#isFinishedOnRestore()Z
+#isOperatorsFinished()Z
+#getSubtaskStateByOperatorID(Lorg/apache/flink/runtime/jobgraph/OperatorID;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState;
+#putSubtaskStateByOperatorID(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState;
+#getSubtaskStateMappings()Ljava/util/Set;
+#hasState()Z
+#getInputRescalingDescriptor()Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor;
+#getOutputRescalingDescriptor()Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor;
+#discardState()V
+#getStateSize()J
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.3
+#isTaskDeployedAsFinished()Z
+#isTaskFinished()Z
-#isFinishedOnRestore()Z
-#isOperatorsFinished()Z
@1.15.0
+#getCheckpointedSize()J
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
+#serializeTaskStateSnapshot(Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)Lorg/apache/flink/util/SerializedValue;
+#deserializeTaskStateSnapshot(Lorg/apache/flink/util/SerializedValue;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V

+###org/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder
@1.14.0
+#setManagedOperatorState(Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setManagedOperatorState(Lorg/apache/flink/runtime/state/OperatorStateHandle;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setRawOperatorState(Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setRawOperatorState(Lorg/apache/flink/runtime/state/OperatorStateHandle;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setManagedKeyedState(Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setManagedKeyedState(Lorg/apache/flink/runtime/state/KeyedStateHandle;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setRawKeyedState(Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setRawKeyedState(Lorg/apache/flink/runtime/state/KeyedStateHandle;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setInputChannelState(Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setResultSubpartitionState(Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setInputRescalingDescriptor(Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#setOutputRescalingDescriptor(Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor;)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#build()Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState;

+###org/apache/flink/runtime/checkpoint/OperatorSubtaskState
@1.14.0
+#getManagedOperatorState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getRawOperatorState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getManagedKeyedState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getRawKeyedState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getInputChannelState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getResultSubpartitionState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getInputRescalingDescriptor()Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor;
+#getOutputRescalingDescriptor()Lorg/apache/flink/runtime/checkpoint/InflightDataRescalingDescriptor;
+#discardState()V
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#getStateSize()J
+#isFinished()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#hasState()Z
+#toBuilder()Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
+#builder()Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState$Builder;
@1.15.0
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
+#getCheckpointedSize()J
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V

+###org/apache/flink/runtime/checkpoint/RescaleMappings
@1.14.0
+#identity(II)Lorg/apache/flink/runtime/checkpoint/RescaleMappings;
+#isIdentity()Z
+#getMappedIndexes(I)[I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#invert()Lorg/apache/flink/runtime/checkpoint/RescaleMappings;
+#getAmbiguousTargets()Ljava/util/Set;
+#of(Ljava/util/stream/Stream;I)Lorg/apache/flink/runtime/checkpoint/RescaleMappings;

+###org/apache/flink/runtime/checkpoint/StateObjectCollection
@1.14.0
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Lorg/apache/flink/runtime/state/StateObject;)Z
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#removeIf(Ljava/util/function/Predicate;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
+#discardState()V
+#getStateSize()J
+#hasState()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#asList()Ljava/util/List;
+#empty()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#emptyIfNull(Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;)Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#singleton(Lorg/apache/flink/runtime/state/StateObject;)Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#singletonOrEmpty(Lorg/apache/flink/runtime/state/StateObject;)Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#add(Ljava/lang/Object;)Z
@1.15.0
+#getCheckpointedSize()J

+###org/apache/flink/runtime/checkpoint/channel/InputChannelInfo
@1.14.0
+#<init>(II)V
+#getGateIdx()I
+#getInputChannelIdx()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo
@1.14.0
+#<init>(II)V
+#getPartitionIdx()I
+#getSubPartitionIdx()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/channel/SequentialChannelStateReader
@1.14.0
+#readInputData([Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;)V
+#readOutputData([Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;Z)V
+#close()V

+###org/apache/flink/runtime/checkpoint/channel/ChannelStateWriter$ChannelStateWriteResult
@1.14.0
+#getInputChannelStateHandles()Ljava/util/concurrent/CompletableFuture;
+#getResultSubpartitionStateHandles()Ljava/util/concurrent/CompletableFuture;
+#fail(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/checkpoint/channel/ChannelStateWriter$NoOpChannelStateWriter
@1.14.0
+#<init>()V
+#start(JLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)V
+#addInputData(JLorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;ILorg/apache/flink/util/CloseableIterator;)V
+#addOutputData(JLorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;I[Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#finishInput(J)V
+#finishOutput(J)V
+#abort(JLjava/lang/Throwable;Z)V
+#getAndRemoveWriteResult(J)Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter$ChannelStateWriteResult;
+#close()V
@1.16.0
+#addOutputDataFuture(JLorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;ILjava/util/concurrent/CompletableFuture;)V

+###org/apache/flink/runtime/checkpoint/channel/ChannelStateWriter
@1.14.0
+#start(JLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)V
+#addInputData(JLorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;ILorg/apache/flink/util/CloseableIterator;)V
+#addOutputData(JLorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;I[Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#finishInput(J)V
+#finishOutput(J)V
+#abort(JLjava/lang/Throwable;Z)V
+#getAndRemoveWriteResult(J)Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter$ChannelStateWriteResult;
@1.16.0
+#addOutputDataFuture(JLorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;ILjava/util/concurrent/CompletableFuture;)V

+###org/apache/flink/runtime/checkpoint/channel/SequentialChannelStateReaderImpl
@1.14.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#readInputData([Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;)V
+#readOutputData([Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;Z)V
+#close()V

+###org/apache/flink/runtime/checkpoint/channel/RecoveredChannelStateHandler$BufferWithContext
@1.14.0
+#close()V

+###org/apache/flink/runtime/checkpoint/channel/ChannelStateWriterImpl
@1.14.0
+#<init>(Ljava/lang/String;ILorg/apache/flink/runtime/state/CheckpointStorageWorkerView;)V
+#start(JLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)V
+#addInputData(JLorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;ILorg/apache/flink/util/CloseableIterator;)V
+#addOutputData(JLorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;I[Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#finishInput(J)V
+#finishOutput(J)V
+#abort(JLjava/lang/Throwable;Z)V
+#getAndRemoveWriteResult(J)Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter$ChannelStateWriteResult;
+#open()V
+#close()V
@1.16.0
+#addOutputDataFuture(JLorg/apache/flink/runtime/checkpoint/channel/ResultSubpartitionInfo;ILjava/util/concurrent/CompletableFuture;)V

+###org/apache/flink/runtime/checkpoint/CompletedCheckpoint$CompletedCheckpointDiscardObject
@1.15.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;)V
+#discard()V

+###org/apache/flink/runtime/checkpoint/CompletedCheckpoint
@0.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;JJLjava/util/ArrayList;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getCheckpointID()J
+#getTimestamp()J
+#getStates()Ljava/util/List;
+#discard(Ljava/lang/ClassLoader;)V
+#toString()Ljava/lang/String;
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;JJJLjava/util/Map;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;)V
+#getCompletionTimestamp()J
+#getProperties()Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
+#getOperatorStates()Ljava/util/Map;
+#getMasterHookStates()Ljava/util/Collection;
+#getMetadataHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#getExternalPointer()Ljava/lang/String;
+#getStateSize()J
+#registerSharedStatesAfterRestored(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#discardOnFailedStoring()V
+#discardOnSubsume()Z
+#discardOnShutdown(Lorg/apache/flink/api/common/JobStatus;)Z
+#discard()V
+#shouldBeDiscardedOnSubsume()Z
+#shouldBeDiscardedOnShutdown(Lorg/apache/flink/api/common/JobStatus;)Z
+#checkpointsMatch(Ljava/util/Collection;Ljava/util/Collection;)Z
-#<init>(Lorg/apache/flink/api/common/JobID;JJLjava/util/ArrayList;)V
-#getStates()Ljava/util/List;
-#discard(Ljava/lang/ClassLoader;)V
@1.15.0
+#<init>(Lorg/apache/flink/api/common/JobID;JJJLjava/util/Map;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStats;)V
+#registerSharedStatesAfterRestored(Lorg/apache/flink/runtime/state/SharedStateRegistry;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)V
+#markAsDiscarded()Lorg/apache/flink/runtime/checkpoint/Checkpoint$DiscardObject;
+#markAsDiscardedOnSubsume()Lorg/apache/flink/runtime/checkpoint/Checkpoint$DiscardObject;
+#markAsDiscardedOnShutdown(Lorg/apache/flink/api/common/JobStatus;)Lorg/apache/flink/runtime/checkpoint/Checkpoint$DiscardObject;
+#getStatistic()Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStats;
-#<init>(Lorg/apache/flink/api/common/JobID;JJJLjava/util/Map;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;)V
-#registerSharedStatesAfterRestored(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
-#discardOnFailedStoring()V
-#discardOnSubsume()Z
-#discardOnShutdown(Lorg/apache/flink/api/common/JobStatus;)Z
-#discard()V
@1.16.0
+#<init>(Lorg/apache/flink/api/common/JobID;JJJLjava/util/Map;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStats;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;)V
+#getRestoredProperties()Ljava/util/Optional;

+###org/apache/flink/runtime/checkpoint/Checkpoint$DiscardObject
@1.15.0
+#discard()V

+###org/apache/flink/runtime/checkpoint/Checkpoint
@1.14.0
+#getCheckpointID()J
+#discard()V
@1.15.0
+#markAsDiscarded()Lorg/apache/flink/runtime/checkpoint/Checkpoint$DiscardObject;
-#discard()V

+###org/apache/flink/runtime/checkpoint/OperatorState
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/OperatorID;II)V
+#getOperatorID()Lorg/apache/flink/runtime/jobgraph/OperatorID;
+#isFullyFinished()Z
+#putState(ILorg/apache/flink/runtime/checkpoint/OperatorSubtaskState;)V
+#getState(I)Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState;
+#setCoordinatorState(Lorg/apache/flink/runtime/state/memory/ByteStreamStateHandle;)V
+#getCoordinatorState()Lorg/apache/flink/runtime/state/memory/ByteStreamStateHandle;
+#getSubtaskStates()Ljava/util/Map;
+#getStates()Ljava/util/Collection;
+#getNumberCollectedStates()I
+#getParallelism()I
+#getMaxParallelism()I
+#copyAndDiscardInFlightData()Lorg/apache/flink/runtime/checkpoint/OperatorState;
+#discardState()V
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#hasSubtaskStates()Z
+#getStateSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.15.0
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
+#getCheckpointedSize()J
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V

+###org/apache/flink/runtime/checkpoint/CheckpointProperties
@1.14.0
+#getCheckpointType()Lorg/apache/flink/runtime/checkpoint/CheckpointType;
+#isSavepoint()Z
+#isSynchronous()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#forSavepoint(Z)Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
+#forSyncSavepoint(ZZ)Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
+#forCheckpoint(Lorg/apache/flink/runtime/checkpoint/CheckpointRetentionPolicy;)Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
@1.15.0
+#isUnclaimed()Z
+#getCheckpointType()Lorg/apache/flink/runtime/checkpoint/SnapshotType;
+#forSavepoint(ZLorg/apache/flink/core/execution/SavepointFormatType;)Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
+#forUnclaimedSnapshot()Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
+#forSyncSavepoint(ZZLorg/apache/flink/core/execution/SavepointFormatType;)Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
-#getCheckpointType()Lorg/apache/flink/runtime/checkpoint/CheckpointType;
-#forSavepoint(Z)Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
-#forSyncSavepoint(ZZ)Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
@1.16.0
+#<init>(ZLorg/apache/flink/runtime/checkpoint/SnapshotType;ZZZZZZ)V

+###org/apache/flink/runtime/checkpoint/MasterState
@1.14.0
+#<init>(Ljava/lang/String;[BI)V
+#name()Ljava/lang/String;
+#bytes()[B
+#version()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/CompletedCheckpointStats
@1.14.0
+#getStatus()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;
+#getNumberOfAcknowledgedSubtasks()I
+#getStateSize()J
+#getProcessedData()J
+#getPersistedData()J
+#getLatestAcknowledgedSubtaskStats()Lorg/apache/flink/runtime/checkpoint/SubtaskStateStats;
+#getExternalPath()Ljava/lang/String;
+#isDiscarded()Z
+#toString()Ljava/lang/String;
@1.15.0
+#getCheckpointedSize()J

+###org/apache/flink/runtime/checkpoint/AbstractCheckpointStats
@1.14.0
+#getStatus()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;
+#getNumberOfAcknowledgedSubtasks()I
+#getStateSize()J
+#getProcessedData()J
+#getPersistedData()J
+#getLatestAcknowledgedSubtaskStats()Lorg/apache/flink/runtime/checkpoint/SubtaskStateStats;
+#getCheckpointId()J
+#getTriggerTimestamp()J
+#getProperties()Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
+#getNumberOfSubtasks()I
+#getTaskStateStats(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/checkpoint/TaskStateStats;
+#getAllTaskStateStats()Ljava/util/Collection;
+#getLatestAckTimestamp()J
+#getEndToEndDuration()J
@1.15.0
+#getCheckpointedSize()J

+###org/apache/flink/runtime/checkpoint/OperatorCoordinatorCheckpointContext
@1.14.0
+#checkpointCoordinator(JLjava/util/concurrent/CompletableFuture;)V
+#afterSourceBarrierInjection(J)V
+#abortCurrentTriggering()V
+#notifyCheckpointComplete(J)V
+#notifyCheckpointAborted(J)V
+#resetToCheckpoint(J[B)V
+#subtaskReset(IJ)V
@1.16.0
-#afterSourceBarrierInjection(J)V

+###org/apache/flink/runtime/checkpoint/CheckpointRetentionPolicy
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/CheckpointRetentionPolicy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/CheckpointRetentionPolicy;

+###org/apache/flink/runtime/checkpoint/SubtaskStateStats
@1.14.0
+#getSubtaskIndex()I
+#getStateSize()J
+#getAckTimestamp()J
+#getEndToEndDuration(J)J
+#getSyncCheckpointDuration()J
+#getAsyncCheckpointDuration()J
+#getProcessedData()J
+#getPersistedData()J
+#getAlignmentDuration()J
+#getCheckpointStartDelay()J
+#getUnalignedCheckpoint()Z
+#isCompleted()Z
@1.15.0
+#getCheckpointedSize()J

+###org/apache/flink/runtime/checkpoint/TaskStateStats$TaskStateStatsSummary
@1.14.0
+#<init>()V
+#getStateSizeStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
+#getAckTimestampStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
+#getSyncCheckpointDurationStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
+#getAsyncCheckpointDurationStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
+#getProcessedDataStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
+#getPersistedDataStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
+#getAlignmentDurationStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
+#getCheckpointStartDelayStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
@1.15.0
+#getCheckpointedSize()Lorg/apache/flink/runtime/checkpoint/StatsSummary;

+###org/apache/flink/runtime/checkpoint/TaskStateStats
@1.14.0
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getNumberOfSubtasks()I
+#getNumberOfAcknowledgedSubtasks()I
+#getLatestAcknowledgedSubtaskStats()Lorg/apache/flink/runtime/checkpoint/SubtaskStateStats;
+#getLatestAckTimestamp()J
+#getStateSize()J
+#getProcessedDataStats()J
+#getPersistedDataStats()J
+#getEndToEndDuration(J)J
+#getSubtaskStats()[Lorg/apache/flink/runtime/checkpoint/SubtaskStateStats;
+#getSummaryStats()Lorg/apache/flink/runtime/checkpoint/TaskStateStats$TaskStateStatsSummary;
@1.15.0
+#getCheckpointedSize()J

+###org/apache/flink/runtime/checkpoint/CheckpointStatsStatus
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;
+#isInProgress()Z
+#isCompleted()Z
+#isFailed()Z

+###org/apache/flink/runtime/checkpoint/StatsSummary
@1.14.0
+#createSnapshot()Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;
+#getMinimum()J
+#getMaximum()J
+#getSum()J
+#getCount()J
+#getAverage()J

+###org/apache/flink/runtime/checkpoint/StatsSummarySnapshot
@1.14.0
+#<init>(JJJJLorg/apache/flink/metrics/HistogramStatistics;)V
+#empty()Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;
+#getMinimum()J
+#getMaximum()J
+#getSum()J
+#getCount()J
+#getAverage()J
+#getQuantile(D)D

+###org/apache/flink/runtime/checkpoint/CheckpointStatsSnapshot
@1.14.0
+#empty()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsSnapshot;
+#getCounts()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsCounts;
+#getSummaryStats()Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStatsSummarySnapshot;
+#getHistory()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsHistory;
+#getLatestRestoredCheckpoint()Lorg/apache/flink/runtime/checkpoint/RestoredCheckpointStats;

+###org/apache/flink/runtime/checkpoint/CheckpointStatsCounts
@1.14.0
+#getNumberOfRestoredCheckpoints()J
+#getTotalNumberOfCheckpoints()J
+#getNumberOfInProgressCheckpoints()I
+#getNumberOfCompletedCheckpoints()J
+#getNumberOfFailedCheckpoints()J

+###org/apache/flink/runtime/checkpoint/CompletedCheckpointStatsSummarySnapshot
@1.14.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;)V
+#empty()Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStatsSummarySnapshot;
+#getEndToEndDurationStats()Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;
+#getPersistedDataStats()Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;
+#getProcessedDataStats()Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;
+#getStateSizeStats()Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;)V
+#getCheckpointedSize()Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;
-#<init>(Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;)V

+###org/apache/flink/runtime/checkpoint/CheckpointStatsHistory
@1.14.0
+#getCheckpoints()Ljava/util/List;
+#getCheckpointById(J)Lorg/apache/flink/runtime/checkpoint/AbstractCheckpointStats;
+#getLatestCompletedCheckpoint()Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStats;
+#getLatestFailedCheckpoint()Lorg/apache/flink/runtime/checkpoint/FailedCheckpointStats;
+#getLatestSavepoint()Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStats;

+###org/apache/flink/runtime/checkpoint/RestoredCheckpointStats
@1.14.0
+#getCheckpointId()J
+#getProperties()Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
+#getRestoreTimestamp()J
+#getExternalPath()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/MasterTriggerRestoreHook$Factory
@1.14.0
+#create()Lorg/apache/flink/runtime/checkpoint/MasterTriggerRestoreHook;

+###org/apache/flink/runtime/checkpoint/MasterTriggerRestoreHook
@1.14.0
+#getIdentifier()Ljava/lang/String;
+#reset()V
+#close()V
+#triggerCheckpoint(JJLjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#restoreCheckpoint(JLjava/lang/Object;)V
+#createCheckpointDataSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;

+###org/apache/flink/runtime/checkpoint/CheckpointIDCounter
@0.10.0
+#start()V
+#stop()V
+#getAndIncrement()J
@1.14.0
+#shutdown(Lorg/apache/flink/api/common/JobStatus;)V
+#get()J
+#setCount(J)V
-#stop()V
@1.15.0
+#shutdown(Lorg/apache/flink/api/common/JobStatus;)Ljava/util/concurrent/CompletableFuture;
-#shutdown(Lorg/apache/flink/api/common/JobStatus;)V

+###org/apache/flink/runtime/checkpoint/CompletedCheckpointStore
@0.10.0
+#recover()V
+#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;)V
+#getLatestCheckpoint()Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
+#discardAllCheckpoints()V
+#getAllCheckpoints()Ljava/util/List;
+#getNumberOfRetainedCheckpoints()I
@1.14.0
+#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)V
+#getLatestCheckpointId()J
+#shutdown(Lorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;)V
+#getMaxNumberOfRetainedCheckpoints()I
+#requiresExternalizedCheckpoints()Z
+#storeFor(Ljava/lang/Runnable;[Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#recover()V
-#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;)V
-#discardAllCheckpoints()V
@1.14.3
-#storeFor(Ljava/lang/Runnable;[Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
@1.15.0
+#addCheckpointAndSubsumeOldestOne(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
+#getSharedStateRegistry()Lorg/apache/flink/runtime/state/SharedStateRegistry;
-#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)V

+###org/apache/flink/runtime/checkpoint/CheckpointStatsTracker
@1.14.0
+#<init>(ILorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Lorg/apache/flink/metrics/MetricGroup;)V
+#getJobCheckpointingConfiguration()Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;
+#createSnapshot()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsSnapshot;
+#getPendingCheckpointStats(J)Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;
+#reportIncompleteStats(JLorg/apache/flink/runtime/executiongraph/ExecutionVertex;Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
@1.14.5
+#reportFailedCheckpointsWithoutInProgress()V
@1.15.0
+#<init>(ILorg/apache/flink/metrics/MetricGroup;)V
-#<init>(ILorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Lorg/apache/flink/metrics/MetricGroup;)V
-#getJobCheckpointingConfiguration()Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;

+###org/apache/flink/runtime/checkpoint/CheckpointsCleaner
@1.14.0
+#<init>()V
+#cleanCheckpoint(Lorg/apache/flink/runtime/checkpoint/Checkpoint;ZLjava/lang/Runnable;Ljava/util/concurrent/Executor;)V
+#cleanCheckpointOnFailedStoring(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Ljava/util/concurrent/Executor;)V
@1.14.3
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#addSubsumedCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;)V
+#cleanSubsumedCheckpoints(JLjava/util/Set;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/checkpoint/CheckpointCoordinator
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;IJ[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Ljava/lang/ClassLoader;)V
+#shutdown()V
+#isShutdown()Z
+#triggerCheckpoint()V
+#triggerCheckpoint(J)Z
+#receiveAcknowledgeMessage(Lorg/apache/flink/runtime/messages/checkpoint/AcknowledgeCheckpoint;)V
+#restoreLatestCheckpointedState(Ljava/util/Map;ZZ)V
+#getNumberOfPendingCheckpoints()I
+#getNumberOfRetainedSuccessfulCheckpoints()I
+#getPendingCheckpoints()Ljava/util/Map;
+#getSuccessfulCheckpoints()Ljava/util/List;
+#startPeriodicCheckpointScheduler(J)V
+#stopPeriodicCheckpointScheduler()V
+#createJobStatusListener(Lakka/actor/ActorSystem;J)Lakka/actor/ActorRef;
@0.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;J[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/jobmanager/RecoveryMode;)V
+#createJobStatusListener(Lakka/actor/ActorSystem;JLjava/util/UUID;)Lorg/apache/flink/runtime/instance/ActorGateway;
-#<init>(Lorg/apache/flink/api/common/JobID;IJ[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Ljava/lang/ClassLoader;)V
-#createJobStatusListener(Lakka/actor/ActorSystem;J)Lakka/actor/ActorRef;
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/CheckpointStorage;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/state/SharedStateRegistryFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointFailureManager;Lorg/apache/flink/runtime/checkpoint/CheckpointPlanCalculator;Lorg/apache/flink/runtime/checkpoint/ExecutionAttemptMappingProvider;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/CheckpointStorage;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/state/SharedStateRegistryFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointFailureManager;Lorg/apache/flink/runtime/checkpoint/CheckpointPlanCalculator;Lorg/apache/flink/runtime/checkpoint/ExecutionAttemptMappingProvider;Lorg/apache/flink/util/clock/Clock;)V
+#addMasterHook(Lorg/apache/flink/runtime/checkpoint/MasterTriggerRestoreHook;)Z
+#getNumberOfRegisteredMasterHooks()I
+#setCheckpointStatsTracker(Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;)V
+#triggerSavepoint(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#triggerSynchronousSavepoint(ZLjava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint(Z)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint(Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
+#receiveDeclineMessage(Lorg/apache/flink/runtime/messages/checkpoint/DeclineCheckpoint;Ljava/lang/String;)V
+#receiveAcknowledgeMessage(Lorg/apache/flink/runtime/messages/checkpoint/AcknowledgeCheckpoint;Ljava/lang/String;)Z
+#failUnacknowledgedPendingCheckpointsFor(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;)V
+#restoreLatestCheckpointedStateToSubtasks(Ljava/util/Set;)Ljava/util/OptionalLong;
+#restoreLatestCheckpointedStateToAll(Ljava/util/Set;Z)Z
+#restoreInitialCheckpointIfPresent(Ljava/util/Set;)Z
+#restoreSavepoint(Ljava/lang/String;ZLjava/util/Map;Ljava/lang/ClassLoader;)Z
+#getCheckpointStorage()Lorg/apache/flink/runtime/state/CheckpointStorageCoordinatorView;
+#getCheckpointStore()Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
+#getCheckpointTimeout()J
+#isTriggering()Z
+#isPeriodicCheckpointingConfigured()Z
+#startCheckpointScheduler()V
+#stopCheckpointScheduler()V
+#isPeriodicCheckpointingStarted()Z
+#abortPendingCheckpoints(Lorg/apache/flink/runtime/checkpoint/CheckpointException;)V
+#createActivatorDeactivator()Lorg/apache/flink/runtime/executiongraph/JobStatusListener;
+#reportStats(JLorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
-#<init>(Lorg/apache/flink/api/common/JobID;J[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;[Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/jobmanager/RecoveryMode;)V
-#triggerCheckpoint()V
-#triggerCheckpoint(J)Z
-#receiveAcknowledgeMessage(Lorg/apache/flink/runtime/messages/checkpoint/AcknowledgeCheckpoint;)V
-#restoreLatestCheckpointedState(Ljava/util/Map;ZZ)V
-#startPeriodicCheckpointScheduler(J)V
-#stopPeriodicCheckpointScheduler()V
-#createJobStatusListener(Lakka/actor/ActorSystem;JLjava/util/UUID;)Lorg/apache/flink/runtime/instance/ActorGateway;
@1.15.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/CheckpointStorage;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/checkpoint/CheckpointFailureManager;Lorg/apache/flink/runtime/checkpoint/CheckpointPlanCalculator;Lorg/apache/flink/runtime/checkpoint/ExecutionAttemptMappingProvider;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/CheckpointStorage;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/checkpoint/CheckpointFailureManager;Lorg/apache/flink/runtime/checkpoint/CheckpointPlanCalculator;Lorg/apache/flink/runtime/checkpoint/ExecutionAttemptMappingProvider;Lorg/apache/flink/util/clock/Clock;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;Ljava/util/function/BiFunction;)V
+#triggerSavepoint(Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
+#triggerSynchronousSavepoint(ZLjava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
+#restoreSavepoint(Lorg/apache/flink/runtime/jobgraph/SavepointRestoreSettings;Ljava/util/Map;Ljava/lang/ClassLoader;)Z
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/CheckpointStorage;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/state/SharedStateRegistryFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointFailureManager;Lorg/apache/flink/runtime/checkpoint/CheckpointPlanCalculator;Lorg/apache/flink/runtime/checkpoint/ExecutionAttemptMappingProvider;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/tasks/CheckpointCoordinatorConfiguration;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/CheckpointStorage;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/state/SharedStateRegistryFactory;Lorg/apache/flink/runtime/checkpoint/CheckpointFailureManager;Lorg/apache/flink/runtime/checkpoint/CheckpointPlanCalculator;Lorg/apache/flink/runtime/checkpoint/ExecutionAttemptMappingProvider;Lorg/apache/flink/util/clock/Clock;)V
-#setCheckpointStatsTracker(Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;)V
-#triggerSavepoint(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
-#triggerSynchronousSavepoint(ZLjava/lang/String;)Ljava/util/concurrent/CompletableFuture;
-#restoreSavepoint(Ljava/lang/String;ZLjava/util/Map;Ljava/lang/ClassLoader;)Z
@1.16.0
-#triggerCheckpoint(Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/checkpoint/FailedCheckpointStats
@1.14.0
+#getStatus()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;
+#getEndToEndDuration()J
+#getFailureTimestamp()J
+#getFailureMessage()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/PendingCheckpointStats
@1.14.0
+#getStatus()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;
+#getNumberOfAcknowledgedSubtasks()I
+#getStateSize()J
+#getProcessedData()J
+#getPersistedData()J
+#getLatestAcknowledgedSubtaskStats()Lorg/apache/flink/runtime/checkpoint/SubtaskStateStats;
+#toString()Ljava/lang/String;
@1.15.0
+#getCheckpointedSize()J

+###org/apache/flink/runtime/checkpoint/CompletedCheckpointStatsSummary
@1.14.0
+#getStateSizeStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
+#getEndToEndDurationStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
+#getProcessedDataStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;
+#getPersistedDataStats()Lorg/apache/flink/runtime/checkpoint/StatsSummary;

+###org/apache/flink/runtime/checkpoint/CheckpointMetrics
@1.14.0
+#<init>()V
+#<init>(JJJJJJZJ)V
+#getBytesProcessedDuringAlignment()J
+#getBytesPersistedDuringAlignment()J
+#getAlignmentDurationNanos()J
+#getSyncDurationMillis()J
+#getAsyncDurationMillis()J
+#getCheckpointStartDelayNanos()J
+#getUnalignedCheckpoint()Z
+#getTotalBytesPersisted()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.15.0
+#<init>(JJJJJJZJJ)V
+#getBytesPersistedOfThisCheckpoint()J
-#<init>(JJJJJJZJ)V

+###org/apache/flink/runtime/checkpoint/PendingCheckpoint$TaskAcknowledgeResult
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/PendingCheckpoint$TaskAcknowledgeResult;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/PendingCheckpoint$TaskAcknowledgeResult;

+###org/apache/flink/runtime/checkpoint/PendingCheckpoint$PendingCheckpointDiscardObject
@1.15.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/PendingCheckpoint;)V
+#discard()V

+###org/apache/flink/runtime/checkpoint/PendingCheckpoint
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;JJLjava/util/Map;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getCheckpointId()J
+#getCheckpointTimestamp()J
+#getNumberOfNonAcknowledgedTasks()I
+#getNumberOfAcknowledgedTasks()I
+#isFullyAcknowledged()Z
+#isDiscarded()Z
+#getCollectedStates()Ljava/util/List;
+#toCompletedCheckpoint()Lorg/apache/flink/runtime/checkpoint/SuccessfulCheckpoint;
+#acknowledgeTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/util/SerializedValue;)Z
+#discard(Ljava/lang/ClassLoader;Z)V
+#toString()Ljava/lang/String;
@0.10.0
+#toCompletedCheckpoint()Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
+#acknowledgeTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/util/SerializedValue;)Z
-#toCompletedCheckpoint()Lorg/apache/flink/runtime/checkpoint/SuccessfulCheckpoint;
-#acknowledgeTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/util/SerializedValue;)Z
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;JJLorg/apache/flink/runtime/checkpoint/CheckpointPlan;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/state/CheckpointStorageLocation;Ljava/util/concurrent/CompletableFuture;)V
*#getCheckpointId()J[deprecated]
+#getCheckpointID()J
+#getCheckpointStorageLocation()Lorg/apache/flink/runtime/state/CheckpointStorageLocation;
+#getNumberOfNonAcknowledgedOperatorCoordinators()I
+#getCheckpointPlan()Lorg/apache/flink/runtime/checkpoint/CheckpointPlan;
+#getOperatorStates()Ljava/util/Map;
+#getMasterStates()Ljava/util/List;
+#isAcknowledgedBy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Z
+#isDisposed()Z
+#canBeSubsumed()Z
+#setCancellerHandle(Ljava/util/concurrent/ScheduledFuture;)Z
+#getFailureCause()Lorg/apache/flink/runtime/checkpoint/CheckpointException;
+#getCompletionFuture()Ljava/util/concurrent/CompletableFuture;
+#finalizeCheckpoint(Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
+#acknowledgeTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;)Lorg/apache/flink/runtime/checkpoint/PendingCheckpoint$TaskAcknowledgeResult;
+#acknowledgeCoordinatorState(Lorg/apache/flink/runtime/operators/coordination/OperatorInfo;Lorg/apache/flink/runtime/state/memory/ByteStreamStateHandle;)Lorg/apache/flink/runtime/checkpoint/PendingCheckpoint$TaskAcknowledgeResult;
+#acknowledgeMasterState(Ljava/lang/String;Lorg/apache/flink/runtime/checkpoint/MasterState;)V
+#abort(Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;Ljava/lang/Throwable;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;)V
+#discard()V
-#<init>(Lorg/apache/flink/api/common/JobID;JJLjava/util/Map;)V
-#isDiscarded()Z
-#getCollectedStates()Ljava/util/List;
-#toCompletedCheckpoint()Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
-#acknowledgeTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/util/SerializedValue;)Z
-#discard(Ljava/lang/ClassLoader;Z)V
@1.14.5
+#<init>(Lorg/apache/flink/api/common/JobID;JJLorg/apache/flink/runtime/checkpoint/CheckpointPlan;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Ljava/util/concurrent/CompletableFuture;)V
+#setCheckpointTargetLocation(Lorg/apache/flink/runtime/state/CheckpointStorageLocation;)V
+#abort(Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;Ljava/lang/Throwable;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
-#<init>(Lorg/apache/flink/api/common/JobID;JJLorg/apache/flink/runtime/checkpoint/CheckpointPlan;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/state/CheckpointStorageLocation;Ljava/util/concurrent/CompletableFuture;)V
-#abort(Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;Ljava/lang/Throwable;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;)V
@1.15.0
+#<init>(Lorg/apache/flink/api/common/JobID;JJLorg/apache/flink/runtime/checkpoint/CheckpointPlan;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Ljava/util/concurrent/CompletableFuture;Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;)V
+#finalizeCheckpoint(Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
+#acknowledgeTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)Lorg/apache/flink/runtime/checkpoint/PendingCheckpoint$TaskAcknowledgeResult;
+#abort(Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;Ljava/lang/Throwable;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;)V
+#markAsDiscarded()Lorg/apache/flink/runtime/checkpoint/Checkpoint$DiscardObject;
-#<init>(Lorg/apache/flink/api/common/JobID;JJLorg/apache/flink/runtime/checkpoint/CheckpointPlan;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Ljava/util/concurrent/CompletableFuture;)V
-#finalizeCheckpoint(Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
-#acknowledgeTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;)Lorg/apache/flink/runtime/checkpoint/PendingCheckpoint$TaskAcknowledgeResult;
-#abort(Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;Ljava/lang/Throwable;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
-#discard()V
@1.16.0
+#<init>(Lorg/apache/flink/api/common/JobID;JJLorg/apache/flink/runtime/checkpoint/CheckpointPlan;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Ljava/util/concurrent/CompletableFuture;Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;Ljava/util/concurrent/CompletableFuture;)V
-#<init>(Lorg/apache/flink/api/common/JobID;JJLorg/apache/flink/runtime/checkpoint/CheckpointPlan;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Ljava/util/concurrent/CompletableFuture;Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;)V

+###org/apache/flink/runtime/checkpoint/VertexFinishedStateChecker
@1.14.0
+#<init>(Ljava/util/Set;Ljava/util/Map;)V
+#validateOperatorsFinishedState()V

+###org/apache/flink/runtime/checkpoint/CheckpointFailureManager$FailJobCallback
@1.14.0
+#failJob(Ljava/lang/Throwable;)V
+#failJobDueToTaskFailure(Ljava/lang/Throwable;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V

+###org/apache/flink/runtime/checkpoint/CheckpointFailureManager
@1.14.0
+#<init>(ILorg/apache/flink/runtime/checkpoint/CheckpointFailureManager$FailJobCallback;)V
+#handleJobLevelCheckpointException(Lorg/apache/flink/runtime/checkpoint/CheckpointException;J)V
+#handleTaskLevelCheckpointException(Lorg/apache/flink/runtime/checkpoint/CheckpointException;JLorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#checkFailureCounter(Lorg/apache/flink/runtime/checkpoint/CheckpointException;J)V
+#handleCheckpointSuccess(J)V
@1.14.3
+#handleCheckpointException(Lorg/apache/flink/runtime/checkpoint/PendingCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/checkpoint/CheckpointException;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#handleJobLevelCheckpointException(Lorg/apache/flink/runtime/checkpoint/CheckpointException;J)V
-#handleTaskLevelCheckpointException(Lorg/apache/flink/runtime/checkpoint/CheckpointException;JLorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.5
+#handleCheckpointException(Lorg/apache/flink/runtime/checkpoint/PendingCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/checkpoint/CheckpointException;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/checkpoint/PendingCheckpointStats;Lorg/apache/flink/runtime/checkpoint/CheckpointStatsTracker;)V
-#handleCheckpointException(Lorg/apache/flink/runtime/checkpoint/PendingCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/checkpoint/CheckpointException;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V

+###org/apache/flink/runtime/checkpoint/CheckpointFailureReason
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;
+#message()Ljava/lang/String;
+#isPreFlight()Z

+###org/apache/flink/runtime/checkpoint/CheckpointPlanCalculator
@1.14.0
+#calculateCheckpointPlan()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/checkpoint/ExecutionAttemptMappingProvider
@1.14.0
+#<init>(Ljava/lang/Iterable;)V
+#getVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Ljava/util/Optional;

+###org/apache/flink/runtime/checkpoint/CheckpointPlan
@1.14.0
+#getTasksToTrigger()Ljava/util/List;
+#getTasksToWaitFor()Ljava/util/List;
+#getTasksToCommitTo()Ljava/util/List;
+#getFinishedTasks()Ljava/util/List;
+#getFullyFinishedJobVertex()Ljava/util/Collection;
+#mayHaveFinishedTasks()Z

+###org/apache/flink/runtime/checkpoint/FinishedTaskStateProvider
@1.14.0
+#reportTaskFinishedOnRestore(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#reportTaskHasFinishedOperators(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#fulfillFinishedTaskStatus(Ljava/util/Map;)V

+###org/apache/flink/runtime/checkpoint/CheckpointException
@1.14.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;)V
+#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;Ljava/lang/Throwable;)V
+#getCheckpointFailureReason()Lorg/apache/flink/runtime/checkpoint/CheckpointFailureReason;

+###org/apache/flink/runtime/checkpoint/CheckpointType
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/CheckpointType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/CheckpointType;
+#isSavepoint()Z
+#isSynchronous()Z
+#getPostCheckpointAction()Lorg/apache/flink/runtime/checkpoint/CheckpointType$PostCheckpointAction;
+#shouldAdvanceToEndOfTime()Z
+#shouldDrain()Z
+#shouldIgnoreEndOfInput()Z
+#getName()Ljava/lang/String;
@1.15.0
+#getSharingFilesStrategy()Lorg/apache/flink/runtime/checkpoint/SnapshotType$SharingFilesStrategy;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
-#values()[Lorg/apache/flink/runtime/checkpoint/CheckpointType;
-#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/CheckpointType;
-#isSynchronous()Z
-#getPostCheckpointAction()Lorg/apache/flink/runtime/checkpoint/CheckpointType$PostCheckpointAction;
-#shouldAdvanceToEndOfTime()Z
-#shouldDrain()Z
-#shouldIgnoreEndOfInput()Z

+###org/apache/flink/runtime/checkpoint/CheckpointMetaData
@1.14.0
+#<init>(JJ)V
+#<init>(JJJ)V
+#getCheckpointId()J
+#getTimestamp()J
+#getReceiveTimestamp()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/PrioritizedOperatorSubtaskState$Builder
@1.14.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState;Ljava/util/List;)V
+#<init>(Lorg/apache/flink/runtime/checkpoint/OperatorSubtaskState;Ljava/util/List;Ljava/lang/Long;)V
+#build()Lorg/apache/flink/runtime/checkpoint/PrioritizedOperatorSubtaskState;

+###org/apache/flink/runtime/checkpoint/PrioritizedOperatorSubtaskState
@1.14.0
+#getPrioritizedManagedOperatorState()Ljava/util/List;
+#getPrioritizedRawOperatorState()Ljava/util/List;
+#getPrioritizedManagedKeyedState()Ljava/util/List;
+#getPrioritizedRawKeyedState()Ljava/util/List;
+#getJobManagerManagedOperatorState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getJobManagerRawOperatorState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getJobManagerManagedKeyedState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getJobManagerRawKeyedState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getPrioritizedInputChannelState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#getPrioritizedResultSubpartitionState()Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#isRestored()Z
+#getRestoredCheckpointId()Ljava/lang/Long;
+#emptyNotRestored()Lorg/apache/flink/runtime/checkpoint/PrioritizedOperatorSubtaskState;
+#empty(J)Lorg/apache/flink/runtime/checkpoint/PrioritizedOperatorSubtaskState;

+###org/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder
@1.14.0
+#<init>()V
+#setBytesProcessedDuringAlignment(J)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;
+#setBytesProcessedDuringAlignment(Ljava/util/concurrent/CompletableFuture;)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;
+#getBytesProcessedDuringAlignment()Ljava/util/concurrent/CompletableFuture;
+#setBytesPersistedDuringAlignment(J)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;
+#getAlignmentDurationNanosOrDefault()J
+#setAlignmentDurationNanos(J)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;
+#setAlignmentDurationNanos(Ljava/util/concurrent/CompletableFuture;)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;
+#getAlignmentDurationNanos()Ljava/util/concurrent/CompletableFuture;
+#setSyncDurationMillis(J)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;
+#getSyncDurationMillis()J
+#setAsyncDurationMillis(J)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;
+#getAsyncDurationMillis()J
+#setCheckpointStartDelayNanos(J)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;
+#getCheckpointStartDelayNanos()J
+#setUnalignedCheckpoint(Z)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;
+#setTotalBytesPersisted(J)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;
+#build()Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;
+#buildIncomplete()Lorg/apache/flink/runtime/checkpoint/CheckpointMetrics;
@1.15.0
+#getBytesPersistedOfThisCheckpoint()J
+#setBytesPersistedOfThisCheckpoint(J)Lorg/apache/flink/runtime/checkpoint/CheckpointMetricsBuilder;

+###org/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory
@0.10.0
+#start()V
+#stop()V
+#createCompletedCheckpoints(Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
+#createCheckpointIDCounter(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;
@1.14.0
+#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILjava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#start()V
-#stop()V
-#createCompletedCheckpoints(Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
@1.15.0
+#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILorg/apache/flink/runtime/state/SharedStateRegistryFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILjava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;

+###org/apache/flink/runtime/checkpoint/CheckpointCoordinatorGateway
@1.14.0
+#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#declineCheckpoint(Lorg/apache/flink/runtime/messages/checkpoint/DeclineCheckpoint;)V
+#reportCheckpointMetrics(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
@1.15.0
+#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/util/SerializedValue;)V
-#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V

+###org/apache/flink/runtime/checkpoint/AbstractCompleteCheckpointStore
@1.15.0
+#<init>(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#getSharedStateRegistry()Lorg/apache/flink/runtime/state/SharedStateRegistry;
+#shutdown(Lorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;)V

+###org/apache/flink/runtime/checkpoint/CheckpointScheduling
@1.14.0
+#startCheckpointScheduler()V
+#stopCheckpointScheduler()V

+###org/apache/flink/runtime/checkpoint/StandaloneCompletedCheckpointStore
@1.14.0
+#<init>(I)V
+#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)V
+#getAllCheckpoints()Ljava/util/List;
+#getNumberOfRetainedCheckpoints()I
+#getMaxNumberOfRetainedCheckpoints()I
+#shutdown(Lorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;)V
+#requiresExternalizedCheckpoints()Z
@1.15.0
+#<init>(ILorg/apache/flink/runtime/state/SharedStateRegistryFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)V
+#addCheckpointAndSubsumeOldestOne(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
-#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)V

+###org/apache/flink/runtime/checkpoint/StandaloneCheckpointRecoveryFactory
@0.10.0
+#<init>()V
+#start()V
+#stop()V
+#createCompletedCheckpoints(Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
+#createCheckpointIDCounter(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;
@1.14.0
+#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILjava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#start()V
-#stop()V
-#createCompletedCheckpoints(Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
@1.15.0
+#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILorg/apache/flink/runtime/state/SharedStateRegistryFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILjava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;

+###org/apache/flink/runtime/checkpoint/OperatorStateRepartitioner
@1.14.0
+#repartitionState(Ljava/util/List;II)Ljava/util/List;

+###org/apache/flink/runtime/checkpoint/DefaultLastStateConnectionStateListener
@1.14.0
+#<init>()V
+#getLastState()Ljava/util/Optional;
+#stateChanged(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/state/ConnectionState;)V
@1.15.0
+#stateChanged(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/state/ConnectionState;)V
-#stateChanged(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/state/ConnectionState;)V

+###org/apache/flink/runtime/checkpoint/LastStateConnectionStateListener
@1.14.0
+#getLastState()Ljava/util/Optional;

+###org/apache/flink/runtime/checkpoint/TaskState
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;III)V
+#getJobVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#putState(ILorg/apache/flink/runtime/checkpoint/SubtaskState;)V
+#getState(I)Lorg/apache/flink/runtime/checkpoint/SubtaskState;
+#getStates()Ljava/util/Collection;
+#getNumberCollectedStates()I
+#getParallelism()I
+#getMaxParallelism()I
+#getChainLength()I
+#discardState()V
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#getStateSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getSubtaskStates()Ljava/util/Map;
+#toString()Ljava/lang/String;
@1.15.0
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
+#getCheckpointedSize()J
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V

+###org/apache/flink/runtime/checkpoint/SubtaskState
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/ChainedStateHandle;Lorg/apache/flink/runtime/state/ChainedStateHandle;Lorg/apache/flink/runtime/state/KeyedStateHandle;Lorg/apache/flink/runtime/state/KeyedStateHandle;)V
+#getManagedOperatorState()Lorg/apache/flink/runtime/state/ChainedStateHandle;
+#getRawOperatorState()Lorg/apache/flink/runtime/state/ChainedStateHandle;
+#getManagedKeyedState()Lorg/apache/flink/runtime/state/KeyedStateHandle;
+#getRawKeyedState()Lorg/apache/flink/runtime/state/KeyedStateHandle;
+#discardState()V
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#getStateSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.15.0
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
+#getCheckpointedSize()J
-#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;)V

+###org/apache/flink/runtime/checkpoint/SavepointType$PostCheckpointAction
@1.15.0
+#values()[Lorg/apache/flink/runtime/checkpoint/SavepointType$PostCheckpointAction;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/SavepointType$PostCheckpointAction;

+###org/apache/flink/runtime/checkpoint/SavepointType
@1.15.0
+#savepoint(Lorg/apache/flink/core/execution/SavepointFormatType;)Lorg/apache/flink/runtime/checkpoint/SavepointType;
+#terminate(Lorg/apache/flink/core/execution/SavepointFormatType;)Lorg/apache/flink/runtime/checkpoint/SavepointType;
+#suspend(Lorg/apache/flink/core/execution/SavepointFormatType;)Lorg/apache/flink/runtime/checkpoint/SavepointType;
+#isSavepoint()Z
+#isSynchronous()Z
+#getPostCheckpointAction()Lorg/apache/flink/runtime/checkpoint/SavepointType$PostCheckpointAction;
+#shouldAdvanceToEndOfTime()Z
+#shouldDrain()Z
+#shouldIgnoreEndOfInput()Z
+#getName()Ljava/lang/String;
+#getFormatType()Lorg/apache/flink/core/execution/SavepointFormatType;
+#getSharingFilesStrategy()Lorg/apache/flink/runtime/checkpoint/SnapshotType$SharingFilesStrategy;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/ZooKeeperCheckpointIDCounter
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#start()V
+#stop()V
+#getAndIncrement()J
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/runtime/checkpoint/LastStateConnectionStateListener;)V
+#shutdown(Lorg/apache/flink/api/common/JobStatus;)V
+#get()J
+#setCount(J)V
-#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
-#stop()V
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/runtime/checkpoint/LastStateConnectionStateListener;)V
+#shutdown(Lorg/apache/flink/api/common/JobStatus;)Ljava/util/concurrent/CompletableFuture;
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/runtime/checkpoint/LastStateConnectionStateListener;)V
-#shutdown(Lorg/apache/flink/api/common/JobStatus;)V

+###org/apache/flink/runtime/checkpoint/DefaultCompletedCheckpointStoreUtils
@1.14.0
+#retrieveCompletedCheckpoints(Lorg/apache/flink/runtime/persistence/StateHandleStore;Lorg/apache/flink/runtime/checkpoint/CheckpointStoreUtil;)Ljava/util/Collection;
@1.15.0
+#getMaximumNumberOfRetainedCheckpoints(Lorg/apache/flink/configuration/Configuration;Lorg/slf4j/Logger;)I

+###org/apache/flink/runtime/checkpoint/CheckpointStoreUtil
@1.14.0
+#checkpointIDToName(J)Ljava/lang/String;
+#nameToCheckpointID(Ljava/lang/String;)J

+###org/apache/flink/runtime/checkpoint/EmbeddedCompletedCheckpointStore
@1.14.0
+#<init>()V
+#<init>(I)V
+#<init>(ILjava/util/Collection;)V
+#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)V
+#shutdown(Lorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;)V
+#getAllCheckpoints()Ljava/util/List;
+#getNumberOfRetainedCheckpoints()I
+#getMaxNumberOfRetainedCheckpoints()I
+#requiresExternalizedCheckpoints()Z
+#getShutdownStatus()Ljava/util/Optional;
@1.15.0
+#<init>(ILjava/util/Collection;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)V
+#<init>(ILjava/util/Collection;Lorg/apache/flink/runtime/state/SharedStateRegistry;)V
+#addCheckpointAndSubsumeOldestOne(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
-#<init>(ILjava/util/Collection;)V
-#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)V

+###org/apache/flink/runtime/checkpoint/metadata/MetadataV1Serializer
@1.14.0
+#getVersion()I
+#deserialize(Ljava/io/DataInputStream;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;
@1.16.0
+#serialize(Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;Ljava/io/DataOutputStream;)V

+###org/apache/flink/runtime/checkpoint/metadata/MetadataSerializer
@1.14.0
+#deserialize(Ljava/io/DataInputStream;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;
@1.16.0
+#serialize(Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;Ljava/io/DataOutputStream;)V

+###org/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata
@1.14.0
+#<init>(JLjava/util/Collection;Ljava/util/Collection;)V
+#getCheckpointId()J
+#getOperatorStates()Ljava/util/Collection;
+#getMasterStates()Ljava/util/Collection;
+#dispose()V
+#toString()Ljava/lang/String;
@1.16.0
+#<init>(JLjava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;)V
+#getCheckpointProperties()Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;
+#withProperties(Lorg/apache/flink/runtime/checkpoint/CheckpointProperties;)Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;

+###org/apache/flink/runtime/checkpoint/metadata/MetadataV2V3SerializerBase$DeserializationContext
@1.14.0

+###org/apache/flink/runtime/checkpoint/metadata/MetadataV2V3SerializerBase
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/checkpoint/metadata/MetadataV2Serializer
@1.14.0
+#getVersion()I
+#deserialize(Ljava/io/DataInputStream;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;
@1.16.0
+#serialize(Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;Ljava/io/DataOutputStream;)V

+###org/apache/flink/runtime/checkpoint/metadata/MetadataV3Serializer
@1.14.0
+#getVersion()I
+#serialize(Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;Ljava/io/DataOutputStream;)V
+#deserialize(Ljava/io/DataInputStream;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;
+#serializeResultSubpartitionStateHandle(Lorg/apache/flink/runtime/state/ResultSubpartitionStateHandle;Ljava/io/DataOutputStream;)V
+#deserializeResultSubpartitionStateHandle(Ljava/io/DataInputStream;Lorg/apache/flink/runtime/checkpoint/metadata/MetadataV2V3SerializerBase$DeserializationContext;)Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#serializeInputChannelStateHandle(Lorg/apache/flink/runtime/state/InputChannelStateHandle;Ljava/io/DataOutputStream;)V
+#deserializeInputChannelStateHandle(Ljava/io/DataInputStream;Lorg/apache/flink/runtime/checkpoint/metadata/MetadataV2V3SerializerBase$DeserializationContext;)Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#serializeStreamStateHandle(Lorg/apache/flink/runtime/state/StreamStateHandle;Ljava/io/DataOutputStream;)V
+#deserializeStreamStateHandle(Ljava/io/DataInputStream;)Lorg/apache/flink/runtime/state/StreamStateHandle;
+#serializeOperatorStateHandleUtil(Lorg/apache/flink/runtime/state/OperatorStateHandle;Ljava/io/DataOutputStream;)V
+#deserializeOperatorStateHandleUtil(Ljava/io/DataInputStream;)Lorg/apache/flink/runtime/state/OperatorStateHandle;
+#serializeKeyedStateHandleUtil(Lorg/apache/flink/runtime/state/KeyedStateHandle;Ljava/io/DataOutputStream;)V
+#deserializeKeyedStateHandleUtil(Ljava/io/DataInputStream;)Lorg/apache/flink/runtime/state/KeyedStateHandle;
+#deserializeInputChannelStateHandle(Ljava/io/DataInputStream;)Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;
+#deserializeResultSubpartitionStateHandle(Ljava/io/DataInputStream;)Lorg/apache/flink/runtime/checkpoint/StateObjectCollection;

+###org/apache/flink/runtime/checkpoint/metadata/MetadataSerializers
@1.14.0
+#getSerializer(I)Lorg/apache/flink/runtime/checkpoint/metadata/MetadataSerializer;

+###org/apache/flink/runtime/checkpoint/FinishedOperatorSubtaskState
@1.14.0
+#isFinished()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/CheckpointCoordinatorDeActivator
@0.9.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;J)V
+#onReceive(Ljava/lang/Object;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;JLjava/util/UUID;)V
+#handleMessage(Ljava/lang/Object;)V
+#getLeaderSessionID()Ljava/util/UUID;
-#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;J)V
-#onReceive(Ljava/lang/Object;)V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;)V
+#jobStatusChanges(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/JobStatus;JLjava/lang/Throwable;)V
-#<init>(Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;JLjava/util/UUID;)V
-#handleMessage(Ljava/lang/Object;)V
-#getLeaderSessionID()Ljava/util/UUID;
@1.15.0
+#jobStatusChanges(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/JobStatus;J)V
-#jobStatusChanges(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/JobStatus;JLjava/lang/Throwable;)V

+###org/apache/flink/runtime/checkpoint/CheckpointPlanCalculatorContext
@1.14.0
+#getMainExecutor()Lorg/apache/flink/util/concurrent/ScheduledExecutor;
+#hasFinishedTasks()Z

+###org/apache/flink/runtime/checkpoint/StandaloneCheckpointIDCounter
@0.10.0
+#<init>()V
+#start()V
+#stop()V
+#getAndIncrement()J
@1.14.0
+#shutdown(Lorg/apache/flink/api/common/JobStatus;)V
+#get()J
+#setCount(J)V
+#getLast()J
-#stop()V
@1.15.0
+#shutdown(Lorg/apache/flink/api/common/JobStatus;)Ljava/util/concurrent/CompletableFuture;
-#shutdown(Lorg/apache/flink/api/common/JobStatus;)V

+###org/apache/flink/runtime/checkpoint/DeactivatedCheckpointIDCounter
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/DeactivatedCheckpointIDCounter;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/DeactivatedCheckpointIDCounter;
+#start()V
+#shutdown(Lorg/apache/flink/api/common/JobStatus;)V
+#getAndIncrement()J
+#get()J
+#setCount(J)V
@1.15.0
+#shutdown(Lorg/apache/flink/api/common/JobStatus;)Ljava/util/concurrent/CompletableFuture;
-#shutdown(Lorg/apache/flink/api/common/JobStatus;)V

+###org/apache/flink/runtime/checkpoint/FullyFinishedOperatorState
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/OperatorID;II)V
+#isFullyFinished()Z
+#putState(ILorg/apache/flink/runtime/checkpoint/OperatorSubtaskState;)V
+#setCoordinatorState(Lorg/apache/flink/runtime/state/memory/ByteStreamStateHandle;)V
+#copyAndDiscardInFlightData()Lorg/apache/flink/runtime/checkpoint/OperatorState;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/checkpoint/DeactivatedCheckpointCompletedCheckpointStore
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/DeactivatedCheckpointCompletedCheckpointStore;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/DeactivatedCheckpointCompletedCheckpointStore;
+#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)V
+#shutdown(Lorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;)V
+#getAllCheckpoints()Ljava/util/List;
+#getNumberOfRetainedCheckpoints()I
+#getMaxNumberOfRetainedCheckpoints()I
+#requiresExternalizedCheckpoints()Z
@1.15.0
+#addCheckpointAndSubsumeOldestOne(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
+#getSharedStateRegistry()Lorg/apache/flink/runtime/state/SharedStateRegistry;
-#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)V

+###org/apache/flink/runtime/checkpoint/ZooKeeperCheckpointRecoveryFactory
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)V
+#start()V
+#stop()V
+#createCompletedCheckpoints(Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
+#createCheckpointIDCounter(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;)V
+#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILjava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)V
-#start()V
-#stop()V
-#createCompletedCheckpoints(Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;)V
+#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILorg/apache/flink/runtime/state/SharedStateRegistryFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;)V
-#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILjava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;

+###org/apache/flink/runtime/checkpoint/hooks/MasterHooks
@1.14.0
+#reset(Ljava/util/Collection;Lorg/slf4j/Logger;)V
+#close(Ljava/util/Collection;Lorg/slf4j/Logger;)V
+#triggerHook(Lorg/apache/flink/runtime/checkpoint/MasterTriggerRestoreHook;JJLjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#restoreMasterHooks(Ljava/util/Map;Ljava/util/Collection;JZLorg/slf4j/Logger;)V
+#wrapHook(Lorg/apache/flink/runtime/checkpoint/MasterTriggerRestoreHook;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/MasterTriggerRestoreHook;

+###org/apache/flink/runtime/checkpoint/PerJobCheckpointRecoveryFactory$CheckpointStoreRecoveryHelper
@1.15.0
+#recoverCheckpointStore(ILorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/state/SharedStateRegistryFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;

+###org/apache/flink/runtime/checkpoint/PerJobCheckpointRecoveryFactory
@1.14.0
+#withoutCheckpointStoreRecovery(Ljava/util/function/IntFunction;)Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;
+#<init>(Ljava/util/function/BiFunction;)V
+#<init>(Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)V
+#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILjava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
+#createCheckpointIDCounter(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/PerJobCheckpointRecoveryFactory$CheckpointStoreRecoveryHelper;)V
+#<init>(Lorg/apache/flink/runtime/checkpoint/PerJobCheckpointRecoveryFactory$CheckpointStoreRecoveryHelper;Ljava/util/function/Supplier;)V
+#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILorg/apache/flink/runtime/state/SharedStateRegistryFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#<init>(Ljava/util/function/BiFunction;)V
-#<init>(Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)V
-#createRecoveredCompletedCheckpointStore(Lorg/apache/flink/api/common/JobID;ILjava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;

+###org/apache/flink/runtime/checkpoint/Checkpoints
@1.14.0
+#storeCheckpointMetadata(Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;Ljava/io/OutputStream;)V
+#storeCheckpointMetadata(Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;Ljava/io/DataOutputStream;)V
+#loadCheckpointMetadata(Ljava/io/DataInputStream;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;
+#loadAndValidateCheckpoint(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;Ljava/lang/ClassLoader;Z)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
+#disposeSavepoint(Ljava/lang/String;Lorg/apache/flink/runtime/state/CheckpointStorage;Ljava/lang/ClassLoader;)V
+#disposeSavepoint(Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/slf4j/Logger;)V
+#loadStateBackend(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/state/StateBackend;
+#loadCheckpointStorage(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/state/CheckpointStorage;
@1.15.0
+#loadAndValidateCheckpoint(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;Ljava/lang/ClassLoader;ZLorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
-#loadAndValidateCheckpoint(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;Ljava/lang/ClassLoader;Z)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
@1.16.0
+#storeCheckpointMetadata(Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;Ljava/io/DataOutputStream;Lorg/apache/flink/runtime/checkpoint/metadata/MetadataSerializer;)V
+#loadAndValidateCheckpoint(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;Ljava/lang/ClassLoader;ZLorg/apache/flink/runtime/checkpoint/CheckpointProperties;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
-#loadAndValidateCheckpoint(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;Lorg/apache/flink/runtime/state/CompletedCheckpointStorageLocation;Ljava/lang/ClassLoader;ZLorg/apache/flink/runtime/checkpoint/CheckpointProperties;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;

+###org/apache/flink/runtime/checkpoint/StateAssignmentOperation
@1.14.0
+#<init>(JLjava/util/Set;Ljava/util/Map;Z)V
+#assignStates()V
+#checkParallelismPreconditions(Lorg/apache/flink/runtime/checkpoint/TaskStateAssignment;)V
+#reDistributePartitionableStates(Ljava/util/Map;ILjava/util/function/Function;Lorg/apache/flink/runtime/checkpoint/OperatorStateRepartitioner;Ljava/util/Map;)V
+#reDistributeResultSubpartitionStates(Lorg/apache/flink/runtime/checkpoint/TaskStateAssignment;)V
+#reDistributeInputChannelStates(Lorg/apache/flink/runtime/checkpoint/TaskStateAssignment;)V
+#getManagedKeyedStateHandles(Lorg/apache/flink/runtime/checkpoint/OperatorState;Lorg/apache/flink/runtime/state/KeyGroupRange;)Ljava/util/List;
+#getRawKeyedStateHandles(Lorg/apache/flink/runtime/checkpoint/OperatorState;Lorg/apache/flink/runtime/state/KeyGroupRange;)Ljava/util/List;
+#extractIntersectingState(Ljava/util/Collection;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/util/List;)V
+#createKeyGroupPartitions(II)Ljava/util/List;
+#applyRepartitioner(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/checkpoint/OperatorStateRepartitioner;Ljava/util/List;II)Ljava/util/Map;
+#applyRepartitioner(Lorg/apache/flink/runtime/checkpoint/OperatorStateRepartitioner;Ljava/util/List;II)Ljava/util/List;

+###org/apache/flink/runtime/checkpoint/DefaultCheckpointPlanCalculator
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/checkpoint/CheckpointPlanCalculatorContext;Ljava/lang/Iterable;Z)V
+#calculateCheckpointPlan()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/checkpoint/RoundRobinOperatorStateRepartitioner
@1.14.0
+#<init>()V
+#repartitionState(Ljava/util/List;II)Ljava/util/List;

+###org/apache/flink/runtime/checkpoint/DefaultCheckpointPlan
@1.14.0
+#getTasksToTrigger()Ljava/util/List;
+#getTasksToWaitFor()Ljava/util/List;
+#getTasksToCommitTo()Ljava/util/List;
+#getFinishedTasks()Ljava/util/List;
+#getFullyFinishedJobVertex()Ljava/util/Collection;
+#mayHaveFinishedTasks()Z
+#reportTaskFinishedOnRestore(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#reportTaskHasFinishedOperators(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#fulfillFinishedTaskStatus(Ljava/util/Map;)V

+###org/apache/flink/runtime/checkpoint/DefaultCompletedCheckpointStore
@1.14.0
+#<init>(ILorg/apache/flink/runtime/persistence/StateHandleStore;Lorg/apache/flink/runtime/checkpoint/CheckpointStoreUtil;Ljava/util/Collection;Ljava/util/concurrent/Executor;)V
+#requiresExternalizedCheckpoints()Z
+#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)V
+#getAllCheckpoints()Ljava/util/List;
+#getNumberOfRetainedCheckpoints()I
+#getMaxNumberOfRetainedCheckpoints()I
+#shutdown(Lorg/apache/flink/api/common/JobStatus;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;)V
@1.15.0
+#<init>(ILorg/apache/flink/runtime/persistence/StateHandleStore;Lorg/apache/flink/runtime/checkpoint/CheckpointStoreUtil;Ljava/util/Collection;Lorg/apache/flink/runtime/state/SharedStateRegistry;Ljava/util/concurrent/Executor;)V
+#addCheckpointAndSubsumeOldestOne(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
-#<init>(ILorg/apache/flink/runtime/persistence/StateHandleStore;Lorg/apache/flink/runtime/checkpoint/CheckpointStoreUtil;Ljava/util/Collection;Ljava/util/concurrent/Executor;)V
-#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Ljava/lang/Runnable;)V

+###org/apache/flink/runtime/checkpoint/MappingBasedRepartitioner
@1.14.0
+#<init>(Lorg/apache/flink/runtime/checkpoint/RescaleMappings;)V
+#repartitionState(Ljava/util/List;II)Ljava/util/List;

+###org/apache/flink/runtime/checkpoint/ZooKeeperCheckpointStoreUtil
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/ZooKeeperCheckpointStoreUtil;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/ZooKeeperCheckpointStoreUtil;
+#checkpointIDToName(J)Ljava/lang/String;
+#nameToCheckpointID(Ljava/lang/String;)J

+###org/apache/flink/runtime/blob/TransientBlobKey
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/blob/BlobKey
@0.7.0-hadoop2-incubating
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/flink/runtime/blob/BlobKey;)I
+#addToMessageDigest(Ljava/security/MessageDigest;)V
+#compareTo(Ljava/lang/Object;)I
@0.9.0-milestone-1
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
@1.14.0
+#getHash()[B
-#<init>()V

+###org/apache/flink/runtime/blob/PermanentBlobService
@1.14.0
+#getFile(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/PermanentBlobKey;)Ljava/io/File;
+#readFile(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/PermanentBlobKey;)[B

+###org/apache/flink/runtime/blob/PermanentBlobKey
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/blob/BlobWriter
@1.14.0
+#putPermanent(Lorg/apache/flink/api/common/JobID;[B)Lorg/apache/flink/runtime/blob/PermanentBlobKey;
+#putPermanent(Lorg/apache/flink/api/common/JobID;Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/PermanentBlobKey;
+#deletePermanent(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/PermanentBlobKey;)Z
+#getMinOffloadingSize()I
+#serializeAndTryOffload(Ljava/lang/Object;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobWriter;)Lorg/apache/flink/types/Either;
+#tryOffload(Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobWriter;)Lorg/apache/flink/types/Either;

+###org/apache/flink/runtime/blob/BlobServerProtocol
@0.9.0-milestone-1

+###org/apache/flink/runtime/blob/BlobServer
@0.7.0-hadoop2-incubating
+#<init>()V
+#getServerPort()I
+#getStorageLocation(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/File;
+#getStorageLocation(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;)Ljava/io/File;
+#deleteJobDirectory(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#run()V
+#shutdown()V
+#getURL(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/net/URL;
+#delete(Lorg/apache/flink/runtime/blob/BlobKey;)V
+#getPort()I
@0.8.1
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
-#<init>()V
@0.9.0-milestone-1
+#getStorageLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Ljava/io/File;
+#deleteJobDirectory(Lorg/apache/flink/api/common/JobID;)V
+#isShutdown()Z
-#getServerPort()I
-#getStorageLocation(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;)Ljava/io/File;
-#deleteJobDirectory(Lorg/apache/flink/runtime/jobgraph/JobID;)V
@0.10.0
-#getStorageLocation(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/File;
-#getStorageLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Ljava/io/File;
-#deleteJobDirectory(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobStore;)V
+#getStorageDir()Ljava/io/File;
+#getStorageLocation(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/File;
+#close()V
+#getFile(Lorg/apache/flink/runtime/blob/TransientBlobKey;)Ljava/io/File;
+#getFile(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/TransientBlobKey;)Ljava/io/File;
+#getFile(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/PermanentBlobKey;)Ljava/io/File;
+#putTransient([B)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#putTransient(Lorg/apache/flink/api/common/JobID;[B)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#putTransient(Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#putTransient(Lorg/apache/flink/api/common/JobID;Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#putPermanent(Lorg/apache/flink/api/common/JobID;[B)Lorg/apache/flink/runtime/blob/PermanentBlobKey;
+#putPermanent(Lorg/apache/flink/api/common/JobID;Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/PermanentBlobKey;
+#deleteFromCache(Lorg/apache/flink/runtime/blob/TransientBlobKey;)Z
+#deleteFromCache(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/TransientBlobKey;)Z
+#deletePermanent(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/PermanentBlobKey;)Z
+#cleanupJob(Lorg/apache/flink/api/common/JobID;Z)Z
+#getPermanentBlobService()Lorg/apache/flink/runtime/blob/PermanentBlobService;
+#getTransientBlobService()Lorg/apache/flink/runtime/blob/TransientBlobService;
+#getMinOffloadingSize()I
-#<init>(Lorg/apache/flink/configuration/Configuration;)V
-#shutdown()V
-#getURL(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/net/URL;
-#delete(Lorg/apache/flink/runtime/blob/BlobKey;)V
@1.15.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/io/File;Lorg/apache/flink/runtime/blob/BlobStore;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/Reference;Lorg/apache/flink/runtime/blob/BlobStore;)V
+#localCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#globalCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#retainJobs(Ljava/util/Collection;Ljava/util/concurrent/Executor;)V
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobStore;)V
-#cleanupJob(Lorg/apache/flink/api/common/JobID;Z)Z

+###org/apache/flink/runtime/blob/BlobService
@0.7.0-hadoop2-incubating
+#getURL(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/net/URL;
+#delete(Lorg/apache/flink/runtime/blob/BlobKey;)V
+#getPort()I
+#shutdown()V
@1.14.0
+#getPermanentBlobService()Lorg/apache/flink/runtime/blob/PermanentBlobService;
+#getTransientBlobService()Lorg/apache/flink/runtime/blob/TransientBlobService;
-#getURL(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/net/URL;
-#delete(Lorg/apache/flink/runtime/blob/BlobKey;)V
-#shutdown()V

+###org/apache/flink/runtime/blob/TransientBlobService
@1.14.0
+#getFile(Lorg/apache/flink/runtime/blob/TransientBlobKey;)Ljava/io/File;
+#getFile(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/TransientBlobKey;)Ljava/io/File;
+#putTransient([B)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#putTransient(Lorg/apache/flink/api/common/JobID;[B)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#putTransient(Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#putTransient(Lorg/apache/flink/api/common/JobID;Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#deleteFromCache(Lorg/apache/flink/runtime/blob/TransientBlobKey;)Z
+#deleteFromCache(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/TransientBlobKey;)Z

+###org/apache/flink/runtime/blob/BlobStore
@1.14.0
+#put(Ljava/io/File;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;)Z
+#delete(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;)Z
+#deleteAll(Lorg/apache/flink/api/common/JobID;)Z

+###org/apache/flink/runtime/blob/BlobView
@1.14.0
+#get(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;Ljava/io/File;)Z

+###org/apache/flink/runtime/blob/BlobUtils
@0.7.0-hadoop2-incubating
+#<init>()V
@0.10.0
-#<init>()V
@1.14.0
+#createBlobStoreFromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/blob/BlobStoreService;
@1.15.0
+#createBlobServer(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/Reference;Lorg/apache/flink/runtime/blob/BlobStore;)Lorg/apache/flink/runtime/blob/BlobServer;
+#createBlobCacheService(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/Reference;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;)Lorg/apache/flink/runtime/blob/BlobCacheService;
+#calculateMessageDigest(Ljava/io/File;)[B

+###org/apache/flink/runtime/blob/BlobClient
@0.7.0-hadoop2-incubating
+#<init>(Ljava/net/InetSocketAddress;)V
+#put([B)Lorg/apache/flink/runtime/blob/BlobKey;
+#put([BII)Lorg/apache/flink/runtime/blob/BlobKey;
+#put(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;[B)V
+#put(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;[BII)V
+#put(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;Ljava/io/InputStream;)V
+#put(Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/BlobKey;
+#delete(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;)V
+#deleteAll(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#get(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;)Ljava/io/InputStream;
+#get(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/InputStream;
+#close()V
@0.9.0-milestone-1
+#isClosed()Z
+#get(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Ljava/io/InputStream;
+#put(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;[B)V
+#put(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;[BII)V
+#put(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/io/InputStream;)V
+#delete(Lorg/apache/flink/runtime/blob/BlobKey;)V
+#delete(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
+#deleteAll(Lorg/apache/flink/api/common/JobID;)V
-#put(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;[B)V
-#put(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;[BII)V
-#put(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;Ljava/io/InputStream;)V
-#delete(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;)V
-#deleteAll(Lorg/apache/flink/runtime/jobgraph/JobID;)V
-#get(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;)Ljava/io/InputStream;
@1.14.0
+#<init>(Ljava/net/InetSocketAddress;Lorg/apache/flink/configuration/Configuration;)V
+#isConnected()Z
+#uploadFiles(Ljava/net/InetSocketAddress;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/api/common/JobID;Ljava/util/List;)Ljava/util/List;
+#uploadFile(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/runtime/blob/PermanentBlobKey;
-#<init>(Ljava/net/InetSocketAddress;)V
-#get(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Ljava/io/InputStream;
-#get(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/InputStream;
-#put([B)Lorg/apache/flink/runtime/blob/BlobKey;
-#put([BII)Lorg/apache/flink/runtime/blob/BlobKey;
-#put(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;[B)V
-#put(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;[BII)V
-#put(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/io/InputStream;)V
-#put(Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/BlobKey;
-#delete(Lorg/apache/flink/runtime/blob/BlobKey;)V
-#delete(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
-#deleteAll(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/blob/BlobStoreService
@1.14.0
+#closeAndCleanupAllData()V

+###org/apache/flink/runtime/blob/BlobCacheService
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;)V
+#<init>(Lorg/apache/flink/runtime/blob/PermanentBlobCache;Lorg/apache/flink/runtime/blob/TransientBlobCache;)V
+#getPermanentBlobService()Lorg/apache/flink/runtime/blob/PermanentBlobCache;
+#getTransientBlobService()Lorg/apache/flink/runtime/blob/TransientBlobCache;
+#setBlobServerAddress(Ljava/net/InetSocketAddress;)V
+#close()V
+#getPort()I
+#getTransientBlobService()Lorg/apache/flink/runtime/blob/TransientBlobService;
+#getPermanentBlobService()Lorg/apache/flink/runtime/blob/PermanentBlobService;
@1.15.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/io/File;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/Reference;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;)V
+#getPermanentBlobService()Lorg/apache/flink/runtime/blob/JobPermanentBlobService;
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;)V

+###org/apache/flink/runtime/blob/TaskExecutorBlobService
@1.15.0
+#getPermanentBlobService()Lorg/apache/flink/runtime/blob/JobPermanentBlobService;
+#setBlobServerAddress(Ljava/net/InetSocketAddress;)V
+#getPermanentBlobService()Lorg/apache/flink/runtime/blob/PermanentBlobService;

+###org/apache/flink/runtime/blob/PermanentBlobCache
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;Lorg/apache/flink/runtime/blob/BlobCacheSizeTracker;)V
+#registerJob(Lorg/apache/flink/api/common/JobID;)V
+#releaseJob(Lorg/apache/flink/api/common/JobID;)V
+#getNumberOfReferenceHolders(Lorg/apache/flink/api/common/JobID;)I
+#getFile(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/PermanentBlobKey;)Ljava/io/File;
+#readFile(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/PermanentBlobKey;)[B
+#getStorageLocation(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/File;
@1.15.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/io/File;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/io/File;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;Lorg/apache/flink/runtime/blob/BlobCacheSizeTracker;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/Reference;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/Reference;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;Lorg/apache/flink/runtime/blob/BlobCacheSizeTracker;)V
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;)V
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobView;Ljava/net/InetSocketAddress;Lorg/apache/flink/runtime/blob/BlobCacheSizeTracker;)V

+###org/apache/flink/runtime/blob/AbstractBlobCache
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobView;Lorg/slf4j/Logger;Ljava/net/InetSocketAddress;)V
+#getStorageDir()Ljava/io/File;
+#getPort()I
+#setBlobServerAddress(Ljava/net/InetSocketAddress;)V
+#close()V
@1.15.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/Reference;Lorg/apache/flink/runtime/blob/BlobView;Lorg/slf4j/Logger;Ljava/net/InetSocketAddress;)V
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobView;Lorg/slf4j/Logger;Ljava/net/InetSocketAddress;)V

+###org/apache/flink/runtime/blob/JobPermanentBlobService
@1.15.0
+#registerJob(Lorg/apache/flink/api/common/JobID;)V
+#releaseJob(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/blob/TransientBlobCache
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/net/InetSocketAddress;)V
+#getFile(Lorg/apache/flink/runtime/blob/TransientBlobKey;)Ljava/io/File;
+#getFile(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/TransientBlobKey;)Ljava/io/File;
+#putTransient([B)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#putTransient(Lorg/apache/flink/api/common/JobID;[B)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#putTransient(Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#putTransient(Lorg/apache/flink/api/common/JobID;Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/TransientBlobKey;
+#deleteFromCache(Lorg/apache/flink/runtime/blob/TransientBlobKey;)Z
+#deleteFromCache(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/TransientBlobKey;)Z
+#getStorageLocation(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/File;
@1.15.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/io/File;Ljava/net/InetSocketAddress;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/Reference;Ljava/net/InetSocketAddress;)V
-#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/net/InetSocketAddress;)V

+###org/apache/flink/runtime/blob/BlobCacheSizeTracker
@1.14.0
+#<init>(J)V
+#checkLimit(J)Ljava/util/List;
+#track(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;J)V
+#untrack(Lorg/apache/flink/api/java/tuple/Tuple2;)V
+#update(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;)V
+#untrackAll(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/blob/VoidBlobStore
@1.14.0
+#<init>()V
+#put(Ljava/io/File;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;)Z
+#get(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;Ljava/io/File;)Z
+#delete(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;)Z
+#deleteAll(Lorg/apache/flink/api/common/JobID;)Z
+#closeAndCleanupAllData()V
+#close()V

+###org/apache/flink/runtime/blob/VoidBlobWriter
@1.14.0
+#<init>()V
+#putPermanent(Lorg/apache/flink/api/common/JobID;[B)Lorg/apache/flink/runtime/blob/PermanentBlobKey;
+#putPermanent(Lorg/apache/flink/api/common/JobID;Ljava/io/InputStream;)Lorg/apache/flink/runtime/blob/PermanentBlobKey;
+#deletePermanent(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/PermanentBlobKey;)Z
+#getMinOffloadingSize()I
+#getInstance()Lorg/apache/flink/runtime/blob/VoidBlobWriter;

+###org/apache/flink/runtime/blob/FileSystemBlobStore
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Ljava/lang/String;)V
+#put(Ljava/io/File;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;)Z
+#get(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;Ljava/io/File;)Z
+#delete(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/blob/BlobKey;)Z
+#deleteAll(Lorg/apache/flink/api/common/JobID;)Z
+#closeAndCleanupAllData()V
+#close()V

+###org/apache/flink/runtime/rest/messages/LogInfo
@1.14.0
+#<init>(Ljava/lang/String;J)V
+#getName()Ljava/lang/String;
+#getSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#<init>(Ljava/lang/String;JJ)V
+#getMtime()J
-#<init>(Ljava/lang/String;J)V

+###org/apache/flink/runtime/rest/messages/ThreadDumpInfo$ThreadInfo
@1.15.0
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/ThreadDumpInfo$ThreadInfo;
+#getThreadName()Ljava/lang/String;
+#getStringifiedThreadInfo()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/ThreadDumpInfo
@1.15.0
+#getThreadInfos()Ljava/util/Collection;
+#create(Ljava/util/Collection;)Lorg/apache/flink/runtime/rest/messages/ThreadDumpInfo;
+#dumpAndCreate(I)Lorg/apache/flink/runtime/rest/messages/ThreadDumpInfo;

+###org/apache/flink/runtime/rest/messages/ResponseBody
@1.14.0

+###org/apache/flink/runtime/rest/messages/job/UpperLimitExceptionParameter
@1.14.0
+#<init>()V
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Integer;
+#convertValueToString(Ljava/lang/Integer;)Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/job/JobExceptionsMessageParameters
@1.14.0
+#<init>()V
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/savepoints/SavepointDisposalRequest
@1.14.0
+#<init>(Ljava/lang/String;)V
+#getSavepointPath()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/savepoints/SavepointDisposalTriggerHeaders
@1.14.0
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/savepoints/SavepointDisposalTriggerHeaders;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;
@1.16.0
+#operationId()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/savepoints/SavepointTriggerMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/savepoints/stop/StopWithSavepointRequestBody
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/Boolean;)V
+#getTargetDirectory()Ljava/lang/String;
+#shouldDrain()Z
@1.15.0
+#<init>(Ljava/lang/String;Ljava/lang/Boolean;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/rest/messages/TriggerId;)V
+#getTargetDirectory()Ljava/util/Optional;
+#getTriggerId()Ljava/util/Optional;
+#getFormatType()Lorg/apache/flink/core/execution/SavepointFormatType;
-#<init>(Ljava/lang/String;Ljava/lang/Boolean;)V
-#getTargetDirectory()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/savepoints/stop/StopWithSavepointTriggerHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/savepoints/SavepointTriggerMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/savepoints/stop/StopWithSavepointTriggerHeaders;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;
@1.16.0
+#operationId()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/savepoints/SavepointTriggerRequestBody
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/Boolean;)V
+#getTargetDirectory()Ljava/lang/String;
+#isCancelJob()Z
@1.15.0
+#<init>(Ljava/lang/String;Ljava/lang/Boolean;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/rest/messages/TriggerId;)V
+#getTargetDirectory()Ljava/util/Optional;
+#getTriggerId()Ljava/util/Optional;
+#getFormatType()Lorg/apache/flink/core/execution/SavepointFormatType;
-#<init>(Ljava/lang/String;Ljava/lang/Boolean;)V
-#getTargetDirectory()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/savepoints/SavepointInfo
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/util/SerializedThrowable;)V
+#getLocation()Ljava/lang/String;
+#getFailureCause()Lorg/apache/flink/util/SerializedThrowable;

+###org/apache/flink/runtime/rest/messages/job/savepoints/SavepointStatusMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/savepoints/SavepointTriggerHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/savepoints/SavepointTriggerMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/savepoints/SavepointTriggerHeaders;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;
@1.16.0
+#operationId()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/savepoints/SavepointDisposalStatusHeaders
@1.14.0
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/savepoints/SavepointDisposalStatusMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/savepoints/SavepointDisposalStatusHeaders;
+#getValueClass()Ljava/lang/Class;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/savepoints/SavepointDisposalStatusMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/savepoints/SavepointStatusHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/savepoints/SavepointStatusMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/savepoints/SavepointStatusHeaders;
+#getValueClass()Ljava/lang/Class;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/metrics/AggregatedTaskManagerMetricsHeaders
@1.14.0
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/metrics/AggregateTaskManagerMetricsParameters;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/metrics/AggregatedTaskManagerMetricsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/metrics/AbstractAggregatedMetricsHeaders
@1.14.0
+#<init>()V
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getRequestClass()Ljava/lang/Class;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;

+###org/apache/flink/runtime/rest/messages/job/metrics/AggregatedMetricsResponseBody$Serializer
@1.14.0
+#serialize(Lorg/apache/flink/runtime/rest/messages/job/metrics/AggregatedMetricsResponseBody;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/job/metrics/AggregatedMetricsResponseBody$Deserializer
@1.14.0
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/runtime/rest/messages/job/metrics/AggregatedMetricsResponseBody;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/job/metrics/AggregatedMetricsResponseBody
@1.14.0
+#<init>(Ljava/util/Collection;)V
+#getMetrics()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/AbstractAggregatedMetricsParameters
@1.14.0
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/AggregateTaskManagerMetricsParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/TaskManagersFilterQueryParameter
@1.14.0
+#convertStringToValue(Ljava/lang/String;)Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#convertValueToString(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/job/metrics/AggregatedMetric
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/Double;)V
+#<init>(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#getMin()Ljava/lang/Double;
+#getMax()Ljava/lang/Double;
+#getSum()Ljava/lang/Double;
+#getAvg()Ljava/lang/Double;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/metrics/MetricsFilterParameter
@1.14.0
+#<init>()V
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/String;
+#convertValueToString(Ljava/lang/String;)Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/job/metrics/MetricsAggregationParameter$AggregationMode
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/messages/job/metrics/MetricsAggregationParameter$AggregationMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/job/metrics/MetricsAggregationParameter$AggregationMode;

+###org/apache/flink/runtime/rest/messages/job/metrics/MetricsAggregationParameter
@1.14.0
+#convertStringToValue(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/job/metrics/MetricsAggregationParameter$AggregationMode;
+#convertValueToString(Lorg/apache/flink/runtime/rest/messages/job/metrics/MetricsAggregationParameter$AggregationMode;)Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/job/metrics/MetricCollectionResponseBody$Serializer
@1.14.0
+#serialize(Lorg/apache/flink/runtime/rest/messages/job/metrics/MetricCollectionResponseBody;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/job/metrics/MetricCollectionResponseBody$Deserializer
@1.14.0
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/runtime/rest/messages/job/metrics/MetricCollectionResponseBody;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/job/metrics/MetricCollectionResponseBody
@1.14.0
+#<init>(Ljava/util/Collection;)V
+#getMetrics()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/TaskManagerMetricsMessageParameters
@1.14.0
+#<init>()V
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/Metric
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/metrics/AbstractMetricsHeaders
@1.14.0
+#<init>()V
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/metrics/JobVertexMetricsHeaders
@1.14.0
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/metrics/JobVertexMetricsMessageParameters;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/metrics/JobVertexMetricsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/metrics/JobVertexMetricsMessageParameters
@1.14.0
+#<init>()V
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/IOMetricsInfo
@1.14.0
+#<init>(JZJZJZJZ)V
+#getBytesRead()J
+#isBytesReadComplete()Z
+#getBytesWritten()J
+#isBytesWrittenComplete()Z
+#getRecordsRead()J
+#isRecordsReadComplete()Z
+#getRecordsWritten()J
+#isRecordsWrittenComplete()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.16.0
+#<init>(JZJZJZJZJJD)V
+#getAccumulatedBackpressured()J
+#getAccumulatedBusy()D
+#getAccumulatedIdle()J
-#<init>(JZJZJZJZ)V

+###org/apache/flink/runtime/rest/messages/job/metrics/AggregatedJobMetricsParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/JobsFilterQueryParameter
@1.14.0
+#convertStringToValue(Ljava/lang/String;)Lorg/apache/flink/api/common/JobID;
+#convertValueToString(Lorg/apache/flink/api/common/JobID;)Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/job/metrics/AggregatedSubtaskMetricsParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/SubtasksFilterQueryParameter
@1.14.0
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/String;
+#convertValueToString(Ljava/lang/String;)Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/job/metrics/JobVertexWatermarksHeaders
@1.14.0
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobVertexMessageParameters;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/metrics/JobManagerMetricsHeaders
@1.14.0
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/metrics/JobManagerMetricsMessageParameters;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/metrics/JobManagerMetricsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/metrics/JobManagerMetricsMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/JobMetricsMessageParameters
@1.14.0
+#<init>()V
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/TaskManagerMetricsHeaders
@1.14.0
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/metrics/TaskManagerMetricsMessageParameters;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/metrics/TaskManagerMetricsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/metrics/JobMetricsHeaders
@1.14.0
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/metrics/JobMetricsMessageParameters;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/metrics/JobMetricsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/metrics/SubtaskMetricsMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/metrics/AggregatedJobMetricsHeaders
@1.14.0
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/metrics/AggregatedJobMetricsParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/metrics/AggregatedJobMetricsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/metrics/SubtaskMetricsHeaders
@1.14.0
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/metrics/SubtaskMetricsMessageParameters;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/metrics/SubtaskMetricsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/metrics/AggregatedSubtaskMetricsHeaders
@1.14.0
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/metrics/AggregatedSubtaskMetricsParameters;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/metrics/AggregatedSubtaskMetricsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/JobExecutionResultResponseBody
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus;Lorg/apache/flink/runtime/jobmaster/JobResult;)V
+#inProgress()Lorg/apache/flink/runtime/rest/messages/job/JobExecutionResultResponseBody;
+#created(Lorg/apache/flink/runtime/jobmaster/JobResult;)Lorg/apache/flink/runtime/rest/messages/job/JobExecutionResultResponseBody;
+#getStatus()Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus;
+#getJobExecutionResult()Lorg/apache/flink/runtime/jobmaster/JobResult;
+#queueStatus()Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus;
+#resource()Lorg/apache/flink/runtime/jobmaster/JobResult;
+#resource()Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/job/SubtaskAttemptPathParameter
@1.14.0
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/SubtaskExecutionAttemptDetailsHeaders
@1.14.0
+#<init>()V
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/SubtaskAttemptMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/SubtaskExecutionAttemptDetailsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/SubtaskExecutionAttemptDetailsInfo
@1.14.0
+#<init>(ILorg/apache/flink/runtime/execution/ExecutionState;ILjava/lang/String;JJJLorg/apache/flink/runtime/rest/messages/job/metrics/IOMetricsInfo;Ljava/lang/String;)V
+#getSubtaskIndex()I
+#getStatus()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getAttempt()I
+#getHost()Ljava/lang/String;
+#getStartTime()J
+#getStartTimeCompatible()J
+#getEndTime()J
+#getDuration()J
+#getIoMetricsInfo()Lorg/apache/flink/runtime/rest/messages/job/metrics/IOMetricsInfo;
+#getTaskmanagerId()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#create(Lorg/apache/flink/runtime/executiongraph/AccessExecution;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/rest/messages/job/SubtaskExecutionAttemptDetailsInfo;
@1.16.0
+#<init>(ILorg/apache/flink/runtime/execution/ExecutionState;ILjava/lang/String;JJJLorg/apache/flink/runtime/rest/messages/job/metrics/IOMetricsInfo;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;)V
+#getStatusDuration()Ljava/util/Map;
+#getStatusDuration(Lorg/apache/flink/runtime/execution/ExecutionState;)J
+#getOtherConcurrentAttempts()Ljava/util/List;
+#create(Lorg/apache/flink/runtime/executiongraph/AccessExecution;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/util/List;)Lorg/apache/flink/runtime/rest/messages/job/SubtaskExecutionAttemptDetailsInfo;
-#<init>(ILorg/apache/flink/runtime/execution/ExecutionState;ILjava/lang/String;JJJLorg/apache/flink/runtime/rest/messages/job/metrics/IOMetricsInfo;Ljava/lang/String;)V
-#create(Lorg/apache/flink/runtime/executiongraph/AccessExecution;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/rest/messages/job/SubtaskExecutionAttemptDetailsInfo;

+###org/apache/flink/runtime/rest/messages/job/SubtaskAttemptMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/SubtaskMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/UserAccumulator
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/job/SubtasksAllAccumulatorsInfo$SubtaskAccumulatorsInfo
@1.14.0
+#<init>(IILjava/lang/String;Ljava/util/Collection;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/job/SubtasksAllAccumulatorsInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILjava/util/Collection;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/job/JobDetailsHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/JobDetailsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/JobDetailsInfo$JobVertexDetailsInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;IILorg/apache/flink/runtime/execution/ExecutionState;JJJLjava/util/Map;Lorg/apache/flink/runtime/rest/messages/job/metrics/IOMetricsInfo;)V
+#getJobVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getName()Ljava/lang/String;
+#getMaxParallelism()I
+#getParallelism()I
+#getExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getStartTime()J
+#getEndTime()J
+#getDuration()J
+#getTasksPerState()Ljava/util/Map;
+#getJobVertexMetrics()Lorg/apache/flink/runtime/rest/messages/job/metrics/IOMetricsInfo;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/job/JobDetailsInfo
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/api/common/JobStatus;JJJJJLjava/util/Map;Ljava/util/Collection;Ljava/util/Map;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getName()Ljava/lang/String;
+#isStoppable()Z
+#getJobStatus()Lorg/apache/flink/api/common/JobStatus;
+#getStartTime()J
+#getEndTime()J
+#getMaxParallelism()J
+#getDuration()J
+#getNow()J
+#getTimestamps()Ljava/util/Map;
+#getJobVertexInfos()Ljava/util/Collection;
+#getJobVerticesPerState()Ljava/util/Map;
+#getJsonPlan()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/coordination/ClientCoordinationResponseBody
@1.14.0
+#<init>(Lorg/apache/flink/util/SerializedValue;)V
+#getSerializedCoordinationResponse()Lorg/apache/flink/util/SerializedValue;

+###org/apache/flink/runtime/rest/messages/job/coordination/ClientCoordinationMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/coordination/ClientCoordinationRequestBody
@1.14.0
+#<init>(Lorg/apache/flink/util/SerializedValue;)V
+#getSerializedCoordinationRequest()Lorg/apache/flink/util/SerializedValue;

+###org/apache/flink/runtime/rest/messages/job/coordination/ClientCoordinationHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/coordination/ClientCoordinationMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/coordination/ClientCoordinationHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/JobSubmitRequestBody$DistributedCacheFile
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/JobSubmitRequestBody
@1.14.0
+#<init>(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/JobSubmitResponseBody
@1.14.0
+#<init>(Ljava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/flink/runtime/rest/messages/job/JobSubmitHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/JobSubmitHeaders;
+#getDescription()Ljava/lang/String;
+#acceptsFileUploads()Z
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;
@1.16.0
+#operationId()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/job/SubtaskCurrentAttemptDetailsHeaders
@1.14.0
+#<init>()V
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/SubtaskMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/SubtaskCurrentAttemptDetailsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/SubtaskExecutionAttemptAccumulatorsInfo
@1.14.0
+#<init>(IILjava/lang/String;Ljava/util/Collection;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/job/SubtaskExecutionAttemptAccumulatorsHeaders
@1.14.0
+#<init>()V
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/SubtaskAttemptMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/SubtaskExecutionAttemptAccumulatorsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/JobExecutionResultHeaders
@1.14.0
+#<init>()V
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/JobExecutionResultHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/MessageQueryParameter
@1.14.0
+#convertFromString(Ljava/lang/String;)Ljava/util/List;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;
+#convertToString(Ljava/util/List;)Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertFromString(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/MessageParameter$MessageParameterRequisiteness
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/messages/MessageParameter$MessageParameterRequisiteness;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/MessageParameter$MessageParameterRequisiteness;

+###org/apache/flink/runtime/rest/messages/MessageParameter
@1.14.0
+#isResolved()Z
+#resolve(Ljava/lang/Object;)V
+#resolveFromString(Ljava/lang/String;)V
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#isMandatory()Z
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/ConversionException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/rest/messages/RequestBody
@1.14.0

+###org/apache/flink/runtime/rest/messages/MessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;
+#isResolved()Z
+#resolveUrl(Ljava/lang/String;Lorg/apache/flink/runtime/rest/messages/MessageParameters;)Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/EmptyRequestBody
@1.14.0
+#getInstance()Lorg/apache/flink/runtime/rest/messages/EmptyRequestBody;

+###org/apache/flink/runtime/rest/messages/JobMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$Counts
@1.14.0
+#<init>(JJIJJ)V
+#getNumberRestoredCheckpoints()J
+#getTotalNumberCheckpoints()J
+#getNumberInProgressCheckpoints()I
+#getNumberCompletedCheckpoints()J
+#getNumberFailedCheckpoints()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$Summary
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;)V
+#getStateSize()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#getDuration()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;)V
-#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;)V

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$LatestCheckpoints
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$CompletedCheckpointStatistics;Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$CompletedCheckpointStatistics;Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$FailedCheckpointStatistics;Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$RestoredCheckpointStatistics;)V
+#getCompletedCheckpointStatistics()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$CompletedCheckpointStatistics;
+#getSavepointStatistics()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$CompletedCheckpointStatistics;
+#getFailedCheckpointStatistics()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$FailedCheckpointStatistics;
+#getRestoredCheckpointStatistics()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$RestoredCheckpointStatistics;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$RestoredCheckpointStatistics
@1.14.0
+#<init>(JJZLjava/lang/String;)V
+#getId()J
+#getRestoreTimestamp()J
+#isSavepoint()Z
+#getExternalPath()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$Counts;Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$Summary;Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$LatestCheckpoints;Ljava/util/List;)V
+#getCounts()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$Counts;
+#getSummary()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$Summary;
+#getLatestCheckpoints()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatistics$LatestCheckpoints;
+#getHistory()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$CompletedCheckpointStatistics
@1.14.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;ZJJJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$RestAPICheckpointType;Ljava/util/Map;Ljava/lang/String;Z)V
+#getExternalPath()Ljava/lang/String;
+#isDiscarded()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;ZJJJJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$RestAPICheckpointType;Ljava/util/Map;Ljava/lang/String;Z)V
-#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;ZJJJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$RestAPICheckpointType;Ljava/util/Map;Ljava/lang/String;Z)V

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$FailedCheckpointStatistics
@1.14.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;ZJJJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$RestAPICheckpointType;Ljava/util/Map;JLjava/lang/String;)V
+#getFailureTimestamp()J
+#getFailureMessage()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;ZJJJJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$RestAPICheckpointType;Ljava/util/Map;JLjava/lang/String;)V
-#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;ZJJJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$RestAPICheckpointType;Ljava/util/Map;JLjava/lang/String;)V

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$PendingCheckpointStatistics
@1.14.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;ZJJJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$RestAPICheckpointType;Ljava/util/Map;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;ZJJJJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$RestAPICheckpointType;Ljava/util/Map;)V
-#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;ZJJJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$RestAPICheckpointType;Ljava/util/Map;)V

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics
@1.14.0
+#getId()J
+#getStatus()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;
+#isSavepoint()Z
+#getTriggerTimestamp()J
+#getLatestAckTimestamp()J
+#getStateSize()J
+#getDuration()J
+#getNumSubtasks()I
+#getNumAckSubtasks()I
+#getCheckpointType()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics$RestAPICheckpointType;
+#getCheckpointStatisticsPerTask()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#generateCheckpointStatistics(Lorg/apache/flink/runtime/checkpoint/AbstractCheckpointStats;Z)Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatistics;
@1.15.0
+#getCheckpointedSize()J

+###org/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto
@1.14.0
+#valueOf(Lorg/apache/flink/runtime/checkpoint/StatsSummary;)Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#valueOf(Lorg/apache/flink/runtime/checkpoint/StatsSummarySnapshot;)Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#<init>(JJJDDDDD)V
+#getMinimum()J
+#getMaximum()J
+#getAverage()J
+#getP50()D
+#getP90()D
+#getP95()D
+#getP99()D
+#getP999()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatistics
@1.14.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;JJJJJJII)V
+#getLatestAckTimestamp()J
+#getStateSize()J
+#getDuration()J
+#getNumSubtasks()I
+#getNumAckSubtasks()I
+#getCheckpointId()J
+#getCheckpointStatus()Lorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;JJJJJJJII)V
+#getCheckpointedSize()J
-#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;JJJJJJII)V

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointIdPathParameter
@1.14.0
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$Summary
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$CheckpointDuration;Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$CheckpointAlignment;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;)V
+#getStateSize()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#getDuration()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#getCheckpointDuration()Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$CheckpointDuration;
+#getCheckpointAlignment()Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$CheckpointAlignment;
+#getCheckpointStartDelay()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$CheckpointDuration;Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$CheckpointAlignment;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;)V
+#getCheckpointedSize()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
-#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$CheckpointDuration;Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$CheckpointAlignment;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;)V

+###org/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$CheckpointDuration
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;)V
+#getSynchronousDuration()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#getAsynchronousDuration()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$CheckpointAlignment
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;)V
+#getBufferedData()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#getProcessedData()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#getPersistedData()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#getDuration()Lorg/apache/flink/runtime/rest/messages/checkpoints/StatsSummaryDto;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails
@1.14.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;JJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$Summary;Ljava/util/List;)V
+#getSummary()Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$Summary;
+#getSubtaskCheckpointStatistics()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;JJJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$Summary;Ljava/util/List;)V
-#<init>(JLorg/apache/flink/runtime/checkpoint/CheckpointStatsStatus;JJJJJJIILorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsWithSubtaskDetails$Summary;Ljava/util/List;)V

+###org/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics$CheckpointDuration
@1.14.0
+#<init>(JJ)V
+#getSyncDuration()J
+#getAsyncDuration()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics$CheckpointAlignment
@1.14.0
+#<init>(JJJJ)V
+#getAlignmentDuration()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics
@1.14.0
+#<init>(IJJJLorg/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics$CheckpointDuration;Lorg/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics$CheckpointAlignment;JZZ)V
+#getAckTimestamp()J
+#getDuration()J
+#getStateSize()J
+#getCheckpointDuration()Lorg/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics$CheckpointDuration;
+#getAlignment()Lorg/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics$CheckpointAlignment;
+#getStartDelay()J
+#getUnalignedCheckpoint()Z
+#isAborted()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#<init>(IJJJJLorg/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics$CheckpointDuration;Lorg/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics$CheckpointAlignment;JZZ)V
+#getCheckpointedSize()J
-#<init>(IJJJLorg/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics$CheckpointDuration;Lorg/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$CompletedSubtaskCheckpointStatistics$CheckpointAlignment;JZZ)V

+###org/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics$PendingSubtaskCheckpointStatistics
@1.14.0
+#<init>(I)V

+###org/apache/flink/runtime/rest/messages/checkpoints/SubtaskCheckpointStatistics
@1.14.0
+#getIndex()I
+#getCheckpointStatus()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatisticDetailsHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointStatisticDetailsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatisticsHeaders
@1.14.0
+#<init>()V
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointingStatisticsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ExternalizedCheckpointInfo
@1.14.0
+#<init>(ZZ)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingMode
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingMode;

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingModeSerializer
@1.14.0
+#<init>()V
+#serialize(Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingMode;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingModeDeserializer
@1.14.0
+#<init>()V
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingMode;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingMode;JJJILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ExternalizedCheckpointInfo;Ljava/lang/String;Ljava/lang/String;ZIJ)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.3
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingMode;JJJILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ExternalizedCheckpointInfo;Ljava/lang/String;Ljava/lang/String;ZIJZ)V
-#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingMode;JJJILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ExternalizedCheckpointInfo;Ljava/lang/String;Ljava/lang/String;ZIJ)V
@1.16.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingMode;JJJILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ExternalizedCheckpointInfo;Ljava/lang/String;Ljava/lang/String;ZIJZZJLjava/lang/String;)V
-#<init>(Lorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ProcessingMode;JJJILorg/apache/flink/runtime/rest/messages/checkpoints/CheckpointConfigInfo$ExternalizedCheckpointInfo;Ljava/lang/String;Ljava/lang/String;ZIJZ)V

+###org/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/checkpoints/TaskCheckpointStatisticsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/MessageHeaders
@1.14.0
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getResponseTypeParameters()Ljava/util/Collection;
+#getDescription()Ljava/lang/String;
@1.16.0
+#operationId()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/UntypedResponseMessageHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;
+#acceptsFileUploads()Z

+###org/apache/flink/runtime/rest/messages/MessagePathParameter
@1.14.0

+###org/apache/flink/runtime/rest/messages/JobIDPathParameter
@1.14.0
+#<init>()V
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/TriggerId$TriggerIdSerializer
@1.14.0
+#serialize(Lorg/apache/flink/runtime/rest/messages/TriggerId;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/TriggerId$TriggerIdDeserializer
@1.14.0
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/runtime/rest/messages/TriggerId;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/TriggerId
@1.14.0
+#<init>()V
+#fromHexString(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/TriggerId;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;IIJIILorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;)V
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;IIJIILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;)V
+#getResourceId()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getAddress()Ljava/lang/String;
+#getDataPort()I
+#getJmxPort()I
+#getLastHeartbeat()J
+#getNumberSlots()I
+#getNumberAvailableSlots()I
+#getTotalResource()Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;
+#getFreeResource()Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;
+#getHardwareDescription()Lorg/apache/flink/runtime/instance/HardwareDescription;
+#getMemoryConfiguration()Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.16.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;IIJIILorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Ljava/lang/Boolean;)V
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;IIJIILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Ljava/lang/Boolean;)V
+#getBlocked()Z
-#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;IIJIILorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;)V
-#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;IIJIILorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;)V

+###org/apache/flink/runtime/rest/messages/taskmanager/SlotInfo
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getResource()Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerDetailsInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;IIJIILorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Ljava/util/Collection;Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMetricsInfo;)V
+#<init>(Lorg/apache/flink/runtime/resourcemanager/TaskManagerInfoWithSlots;Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMetricsInfo;)V
+#getTaskManagerMetricsInfo()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMetricsInfo;
+#getAllocatedSlots()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.16.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;IIJIILorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Ljava/lang/Boolean;Ljava/util/Collection;Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMetricsInfo;)V
-#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;IIJIILorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/taskexecutor/TaskExecutorMemoryConfiguration;Ljava/util/Collection;Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMetricsInfo;)V

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMetricsInfo$GarbageCollectorInfo
@1.14.0
+#<init>(Ljava/lang/String;JJ)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMetricsInfo
@1.14.0
+#<init>(JJJJJJJJJJJJJJJJJJLjava/util/List;)V
+#<init>(JJJJJJJJJJJJJJJJJJJJLjava/util/List;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#empty()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMetricsInfo;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerIdPathParameter
@1.14.0
+#<init>()V
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerThreadDumpHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerThreadDumpHeaders;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagersHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagersHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagersInfo
@1.14.0
+#<init>(Ljava/util/Collection;)V
+#getTaskManagerInfos()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerCustomLogHeaders
@1.14.0
+#<init>()V
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerFileMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerCustomLogHeaders;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerFileMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerLogFileHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerLogFileHeaders;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerDetailsHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerDetailsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerLogsHeaders
@1.14.0
+#getInstance()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerLogsHeaders;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getDescription()Ljava/lang/String;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/taskmanager/TaskManagerStdoutFileHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/taskmanager/TaskManagerStdoutFileHeaders;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/ResourceProfileInfo
@1.14.0
+#<init>(DIIIILjava/util/Map;)V
+#fromResrouceProfile(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/rest/messages/ResourceProfileInfo;
+#getCpu()D
+#getTaskHeapMB()I
+#getTaskOffHeapMB()I
+#getManagedMB()I
+#getNetworkMB()I
+#getExtendedResources()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/EmptyMessageParameters
@1.14.0
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;

+###org/apache/flink/runtime/rest/messages/JobAccumulatorsInfo$JobAccumulator
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/rest/messages/JobAccumulatorsInfo$UserTaskAccumulator
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/JobAccumulatorsInfo
@1.14.0
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/Map;)V
+#getJobAccumulators()Ljava/util/List;
+#getUserAccumulators()Ljava/util/List;
+#getSerializedUserAccumulators()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/JobAccumulatorsMessageParameters
@1.14.0
+#<init>()V
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/AccumulatorsIncludeSerializedValueQueryParameter
@1.14.0
+#<init>()V
+#convertValueToString(Ljava/lang/Boolean;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Boolean;
+#getDescription()Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/EmptyResponseBody
@1.14.0
+#getInstance()Lorg/apache/flink/runtime/rest/messages/EmptyResponseBody;

+###org/apache/flink/runtime/rest/messages/cluster/JobManagerLogFileHeader
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/cluster/JobManagerLogFileHeader;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/cluster/JobManagerLogListHeaders
@1.14.0
+#getInstance()Lorg/apache/flink/runtime/rest/messages/cluster/JobManagerLogListHeaders;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getDescription()Ljava/lang/String;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/cluster/ShutdownHeaders
@1.14.0
+#<init>()V
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/cluster/ShutdownHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;
@1.16.0
+#operationId()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/cluster/FileMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/cluster/JobManagerCustomLogHeaders
@1.14.0
+#getInstance()Lorg/apache/flink/runtime/rest/messages/cluster/JobManagerCustomLogHeaders;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/cluster/FileMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/cluster/JobManagerStdoutFileHeader
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/cluster/JobManagerStdoutFileHeader;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/cluster/JobManagerThreadDumpHeaders
@1.15.0
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/cluster/JobManagerThreadDumpHeaders;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/json/SerializedValueSerializer
@1.14.0
+#<init>()V
+#<init>(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JavaType;)V
+#serialize(Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/json/JobResultSerializer
@1.14.0
+#<init>()V
+#serialize(Lorg/apache/flink/runtime/jobmaster/JobResult;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/json/JobIDSerializer
@1.14.0
+#serialize(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/json/SerializedThrowableSerializer
@1.14.0
+#<init>()V
+#serialize(Lorg/apache/flink/util/SerializedThrowable;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/json/SerializedThrowableDeserializer
@1.14.0
+#<init>()V
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/util/SerializedThrowable;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/json/ResourceIDDeserializer
@1.14.0
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/json/JobResultDeserializer
@1.14.0
+#<init>()V
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/runtime/jobmaster/JobResult;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/json/JobIDDeserializer
@1.14.0
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/api/common/JobID;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/json/SerializedValueDeserializer
@1.14.0
+#<init>()V
+#<init>(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JavaType;)V
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/util/SerializedValue;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/json/RawJsonDeserializer
@1.14.0
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/String;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/json/JobVertexIDSerializer
@1.14.0
+#<init>()V
+#serialize(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/json/JobVertexIDKeyDeserializer
@1.14.0
+#<init>()V
+#deserializeKey(Ljava/lang/String;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/json/JobVertexIDKeySerializer
@1.14.0
+#<init>()V
+#serialize(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/json/JobVertexIDDeserializer
@1.14.0
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/json/ResourceIDSerializer
@1.14.0
+#serialize(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/queue/AsynchronouslyCreatedResource
@1.14.0
+#queueStatus()Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus;
+#resource()Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/queue/QueueStatus$Id
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus$Id;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus$Id;

+###org/apache/flink/runtime/rest/messages/queue/QueueStatus
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus$Id;)V
+#inProgress()Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus;
+#completed()Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus;
+#getId()Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus$Id;

+###org/apache/flink/runtime/rest/messages/LogListInfo
@1.14.0
+#<init>(Ljava/util/Collection;)V
+#getLogInfos()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#empty()Lorg/apache/flink/runtime/rest/messages/LogListInfo;

+###org/apache/flink/runtime/rest/messages/dataset/ClusterDataSetDeleteTriggerMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/dataset/ClusterDataSetIdPathParameter
@1.14.0
+#<init>()V
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/dataset/ClusterDataSetDeleteStatusMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/dataset/ClusterDataSetListResponseBody
@1.14.0
+#from(Ljava/util/Map;)Lorg/apache/flink/runtime/rest/messages/dataset/ClusterDataSetListResponseBody;
+#getDataSets()Ljava/util/List;

+###org/apache/flink/runtime/rest/messages/dataset/ClusterDataSetDeleteStatusHeaders
@1.14.0
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getDescription()Ljava/lang/String;
+#getValueClass()Ljava/lang/Class;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/dataset/ClusterDataSetDeleteStatusMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/dataset/ClusterDataSetDeleteTriggerHeaders
@1.14.0
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/dataset/ClusterDataSetDeleteTriggerMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;
@1.16.0
+#operationId()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/dataset/ClusterDataSetListHeaders
@1.14.0
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getDescription()Ljava/lang/String;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/TriggerIdPathParameter
@1.14.0
+#<init>()V
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobVertexMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/JobVertexIdPathParameter
@1.14.0
+#<init>()V
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/ClusterConfigurationInfoEntry
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.16.0
-###org/apache/flink/runtime/rest/messages/ClusterConfigurationInfoEntry

+###org/apache/flink/runtime/rest/messages/YarnCancelJobTerminationHeaders
@1.14.0
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/YarnCancelJobTerminationHeaders;
@1.16.0
+#getSupportedAPIVersions()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/JobVertexBackPressureHeaders
@1.14.0
+#<init>()V
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobVertexMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$SubtaskBackPressureInfo
@1.14.0
+#<init>(ILorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureLevel;DDD)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getSubtask()I
+#getBackpressureLevel()Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureLevel;
+#getBackPressuredRatio()D
+#getIdleRatio()D
+#getBusyRatio()D
@1.16.0
+#<init>(ILjava/lang/Integer;Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureLevel;DDDLjava/util/List;)V
+#getAttemptNumber()Ljava/lang/Integer;
+#getOtherConcurrentAttempts()Ljava/util/List;
-#<init>(ILorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureLevel;DDD)V

+###org/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureStatus
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureStatus;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureLevel
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureLevel;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureLevel;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureStatus;Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureLevel;Ljava/lang/Long;Ljava/util/List;)V
+#deprecated()Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getStatus()Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureStatus;
+#getBackpressureLevel()Lorg/apache/flink/runtime/rest/messages/JobVertexBackPressureInfo$VertexBackPressureLevel;
+#getEndTimestamp()Ljava/lang/Long;
+#getSubtasks()Ljava/util/List;

+###org/apache/flink/runtime/rest/messages/SubtaskIndexPathParameter
@1.14.0
+#<init>()V
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobVertexFlameGraphParameters
@1.14.0
+#<init>()V
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/FlameGraphTypeQueryParameter$Type
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/messages/FlameGraphTypeQueryParameter$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/FlameGraphTypeQueryParameter$Type;

+###org/apache/flink/runtime/rest/messages/FlameGraphTypeQueryParameter
@1.14.0
+#<init>()V
+#convertStringToValue(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/FlameGraphTypeQueryParameter$Type;
+#convertValueToString(Lorg/apache/flink/runtime/rest/messages/FlameGraphTypeQueryParameter$Type;)Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/DashboardConfiguration$Features
@1.14.0
+#<init>(ZZ)V
+#isWebSubmitEnabled()Z
+#isWebCancelEnabled()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.16.0
+#<init>(ZZZ)V
+#isHistoryServer()Z
-#<init>(ZZ)V

+###org/apache/flink/runtime/rest/messages/DashboardConfiguration
@1.14.0
+#<init>(JLjava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/apache/flink/runtime/rest/messages/DashboardConfiguration$Features;)V
+#getRefreshInterval()J
+#getTimeZoneOffset()I
+#getTimeZoneName()Ljava/lang/String;
+#getFlinkVersion()Ljava/lang/String;
+#getFlinkRevision()Ljava/lang/String;
+#getFeatures()Lorg/apache/flink/runtime/rest/messages/DashboardConfiguration$Features;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#from(JLjava/time/ZonedDateTime;ZZ)Lorg/apache/flink/runtime/rest/messages/DashboardConfiguration;
@1.16.0
+#from(JLjava/time/ZonedDateTime;ZZZ)Lorg/apache/flink/runtime/rest/messages/DashboardConfiguration;
-#from(JLjava/time/ZonedDateTime;ZZ)Lorg/apache/flink/runtime/rest/messages/DashboardConfiguration;

+###org/apache/flink/runtime/rest/messages/JobVertexAccumulatorsHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobVertexMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobVertexAccumulatorsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/JobVertexAccumulatorsInfo
@1.14.0
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/RescalingParallelismQueryParameter
@1.14.0
+#<init>()V
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Integer;
+#convertValueToString(Ljava/lang/Integer;)Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/OperatorIDPathParameter
@1.14.0
+#<init>()V
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobVertexDetailsInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;IIJLjava/util/List;)V
+#getSubtasks()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/JobCancellationHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobCancellationMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobCancellationHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;
@1.16.0
+#operationId()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobCancellationMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;
+#getQueryParameters()Ljava/util/Collection;
@1.15.0
+#resolveJobId(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/rest/messages/JobCancellationMessageParameters;
+#resolveTerminationMode(Lorg/apache/flink/runtime/rest/messages/TerminationModeQueryParameter$TerminationMode;)Lorg/apache/flink/runtime/rest/messages/JobCancellationMessageParameters;

+###org/apache/flink/runtime/rest/messages/TerminationModeQueryParameter$TerminationMode
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/messages/TerminationModeQueryParameter$TerminationMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/TerminationModeQueryParameter$TerminationMode;

+###org/apache/flink/runtime/rest/messages/TerminationModeQueryParameter
@1.14.0
+#<init>()V
+#convertStringToValue(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/TerminationModeQueryParameter$TerminationMode;
+#convertValueToString(Lorg/apache/flink/runtime/rest/messages/TerminationModeQueryParameter$TerminationMode;)Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#convertValueToString(Ljava/lang/Object;)Ljava/lang/String;
+#convertStringToValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/JobVertexTaskManagersInfo$TaskManagersInfo
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/execution/ExecutionState;JJJLorg/apache/flink/runtime/rest/messages/job/metrics/IOMetricsInfo;Ljava/util/Map;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.16.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/execution/ExecutionState;JJJLorg/apache/flink/runtime/rest/messages/job/metrics/IOMetricsInfo;Ljava/util/Map;Ljava/lang/String;Lorg/apache/flink/runtime/rest/messages/AggregatedTaskDetailsInfo;)V
-#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/execution/ExecutionState;JJJLorg/apache/flink/runtime/rest/messages/job/metrics/IOMetricsInfo;Ljava/util/Map;Ljava/lang/String;)V

+###org/apache/flink/runtime/rest/messages/JobVertexTaskManagersInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;JLjava/util/Collection;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/ClusterConfigurationInfo
@1.14.0
+#<init>()V
+#<init>(I)V
+#from(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/rest/messages/ClusterConfigurationInfo;
@1.16.0
-###org/apache/flink/runtime/rest/messages/ClusterConfigurationInfo

+###org/apache/flink/runtime/rest/messages/YarnStopJobTerminationHeaders
@1.14.0
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/YarnStopJobTerminationHeaders;
@1.16.0
+#getSupportedAPIVersions()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/JobVertexDetailsHeaders
@1.14.0
+#<init>()V
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobVertexMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobVertexDetailsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/JobPlanInfo$RawJson$Serializer
@1.14.0
+#<init>()V
+#serialize(Lorg/apache/flink/runtime/rest/messages/JobPlanInfo$RawJson;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/JobPlanInfo$RawJson$Deserializer
@1.14.0
+#<init>()V
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/runtime/rest/messages/JobPlanInfo$RawJson;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/JobPlanInfo$RawJson
@1.14.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobPlanInfo
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/runtime/rest/messages/JobPlanInfo$RawJson;)V
+#getJsonPlan()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/SubtasksAllAccumulatorsHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobVertexMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/SubtasksAllAccumulatorsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/JobVertexTaskManagersHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobVertexMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobVertexTaskManagersHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/LogFileNamePathParameter
@1.14.0
+#<init>()V
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobExceptionsInfoWithHistory$JobExceptionHistory
@1.14.0
+#<init>(Ljava/util/List;Z)V
+#getEntries()Ljava/util/List;
+#isTruncated()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobExceptionsInfoWithHistory$ExceptionInfo
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;J)V
+#<init>(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;)V
+#getExceptionName()Ljava/lang/String;
+#getStacktrace()Ljava/lang/String;
+#getTimestamp()J
+#getTaskName()Ljava/lang/String;
+#getLocation()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobExceptionsInfoWithHistory$RootExceptionInfo
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;JLjava/util/Collection;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
+#getConcurrentExceptions()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobExceptionsInfoWithHistory
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/Long;Ljava/util/List;ZLorg/apache/flink/runtime/rest/messages/JobExceptionsInfoWithHistory$JobExceptionHistory;)V
+#<init>()V
+#getExceptionHistory()Lorg/apache/flink/runtime/rest/messages/JobExceptionsInfoWithHistory$JobExceptionHistory;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/JobExceptionsInfoWithHistory$JobExceptionHistory;)V
-#<init>()V

+###org/apache/flink/runtime/rest/messages/JobExceptionsInfo$ExecutionExceptionInfo
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobExceptionsInfo
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/Long;Ljava/util/List;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getRootException()Ljava/lang/String;
+#getRootTimestamp()Ljava/lang/Long;
+#getAllExceptions()Ljava/util/List;
+#isTruncated()Z

+###org/apache/flink/runtime/rest/messages/JobsOverviewHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobsOverviewHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/JobConfigHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobConfigHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/JobConfigInfo$Serializer
@1.14.0
+#<init>()V
+#serialize(Lorg/apache/flink/runtime/rest/messages/JobConfigInfo;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonGenerator;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/SerializerProvider;)V

+###org/apache/flink/runtime/rest/messages/JobConfigInfo$Deserializer
@1.14.0
+#<init>()V
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Lorg/apache/flink/runtime/rest/messages/JobConfigInfo;
+#deserialize(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonParser;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/messages/JobConfigInfo$ExecutionConfigInfo
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLjava/util/Map;)V
+#getExecutionMode()Ljava/lang/String;
+#getRestartStrategy()Ljava/lang/String;
+#getParallelism()I
+#isObjectReuse()Z
+#getGlobalJobParameters()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#from(Lorg/apache/flink/api/common/ArchivedExecutionConfig;)Lorg/apache/flink/runtime/rest/messages/JobConfigInfo$ExecutionConfigInfo;

+###org/apache/flink/runtime/rest/messages/JobConfigInfo
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/rest/messages/JobConfigInfo$ExecutionConfigInfo;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getJobName()Ljava/lang/String;
+#getExecutionConfigInfo()Lorg/apache/flink/runtime/rest/messages/JobConfigInfo$ExecutionConfigInfo;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/SubtasksTimesInfo$SubtaskTimeInfo
@1.14.0
+#<init>(ILjava/lang/String;JLjava/util/Map;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/SubtasksTimesInfo
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;JLjava/util/List;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/messages/JobIdsWithStatusesOverviewHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobIdsWithStatusesOverviewHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/ClusterOverviewHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/ClusterOverviewHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/JobVertexFlameGraphHeaders
@1.14.0
+#<init>()V
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobVertexFlameGraphParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobVertexFlameGraphHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/DashboardConfigurationHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/DashboardConfigurationHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/ErrorResponseBody
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/List;)V

+###org/apache/flink/runtime/rest/messages/SubtasksTimesHeaders
@1.14.0
+#<init>()V
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobVertexMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/SubtasksTimesHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/JobExceptionsHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/job/JobExceptionsMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobExceptionsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/JobPlanHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobPlanHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/ClusterConfigurationInfoHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/ClusterConfigurationInfoHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/JobAccumulatorsHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobAccumulatorsMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobAccumulatorsHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/handler/job/checkpoints/CheckpointingStatisticsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/checkpoints/CheckpointStatsCache
@1.14.0
+#<init>(I)V
+#tryAdd(Lorg/apache/flink/runtime/checkpoint/AbstractCheckpointStats;)V
+#tryGet(J)Lorg/apache/flink/runtime/checkpoint/AbstractCheckpointStats;

+###org/apache/flink/runtime/rest/handler/job/checkpoints/CheckpointStatisticDetailsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rest/handler/job/checkpoints/CheckpointStatsCache;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/checkpoints/AbstractCheckpointHandler
@1.14.0

+###org/apache/flink/runtime/rest/handler/job/checkpoints/TaskCheckpointStatisticDetailsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rest/handler/job/checkpoints/CheckpointStatsCache;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/checkpoints/CheckpointConfigHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/AbstractAccessExecutionGraphHandler
@1.14.0

+###org/apache/flink/runtime/rest/handler/job/AbstractExecutionGraphHandler
@1.14.0

+###org/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey
@1.14.0
+#of(Lorg/apache/flink/runtime/rest/messages/TriggerId;Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/handler/job/JobAccumulatorsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/metrics/TaskManagerMetricsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/metrics/AbstractMetricsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/metrics/AggregatingTaskManagersMetricsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/metrics/AbstractAggregatingMetricsHandler
@1.14.0

+###org/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleAccumulatorFactory
@1.14.0
+#get(D)Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator;

+###org/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleMaximumFactory
@1.14.0
+#get(D)Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleMaximum;
+#get()Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleMaximumFactory;
+#get(D)Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator;

+###org/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleMinimumFactory
@1.14.0
+#get(D)Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleMinimum;
+#get()Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleMinimumFactory;
+#get(D)Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator;

+###org/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleSumFactory
@1.14.0
+#get(D)Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleSum;
+#get()Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleSumFactory;
+#get(D)Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator;

+###org/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleAverageFactory
@1.14.0
+#get(D)Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleAverage;
+#get()Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleAverageFactory;
+#get(D)Lorg/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator;

+###org/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleMaximum
@1.14.0
+#add(D)V
+#getValue()D
+#getName()Ljava/lang/String;

+###org/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleMinimum
@1.14.0
+#add(D)V
+#getValue()D
+#getName()Ljava/lang/String;

+###org/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleSum
@1.14.0
+#add(D)V
+#getValue()D
+#getName()Ljava/lang/String;

+###org/apache/flink/runtime/rest/handler/job/metrics/DoubleAccumulator$DoubleAverage
@1.14.0
+#add(D)V
+#getValue()D
+#getName()Ljava/lang/String;

+###org/apache/flink/runtime/rest/handler/job/metrics/JobVertexMetricsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/metrics/AggregatingSubtasksMetricsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/metrics/JobMetricsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/metrics/JobVertexWatermarksHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/rest/handler/job/metrics/JobManagerMetricsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/metrics/AggregatingJobsMetricsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/metrics/SubtaskMetricsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/savepoints/SavepointHandlers$StopWithSavepointHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/job/savepoints/SavepointHandlers;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/job/savepoints/SavepointHandlers$SavepointTriggerHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/job/savepoints/SavepointHandlers;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/job/savepoints/SavepointHandlers$SavepointStatusHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/job/savepoints/SavepointHandlers;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V
+#closeHandlerAsync()Ljava/util/concurrent/CompletableFuture;
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V
-#<init>(Lorg/apache/flink/runtime/rest/handler/job/savepoints/SavepointHandlers;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V
-#closeHandlerAsync()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/job/savepoints/SavepointHandlers
@1.14.0
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/runtime/rest/handler/job/savepoints/SavepointDisposalHandlers$SavepointDisposalTriggerHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/job/savepoints/SavepointDisposalHandlers;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/job/savepoints/SavepointDisposalHandlers$SavepointDisposalStatusHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/job/savepoints/SavepointDisposalHandlers;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V
+#closeHandlerAsync()Ljava/util/concurrent/CompletableFuture;
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/job/savepoints/SavepointDisposalHandlers
@1.14.0
+#<init>()V
@1.15.0
+#<init>(Ljava/time/Duration;)V
-#<init>()V

+###org/apache/flink/runtime/rest/handler/job/rescaling/RescalingTriggerHeaders
@1.14.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/handler/job/rescaling/RescalingTriggerMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/handler/job/rescaling/RescalingTriggerHeaders;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;
@1.16.0
+#operationId()Ljava/lang/String;

+###org/apache/flink/runtime/rest/handler/job/rescaling/RescalingTriggerMessageParameters
@1.14.0
+#<init>()V
+#getQueryParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/rescaling/RescalingHandlers$RescalingTriggerHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/job/rescaling/RescalingHandlers;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/job/rescaling/RescalingHandlers$RescalingStatusHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/job/rescaling/RescalingHandlers;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;
+#closeHandlerAsync()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/job/rescaling/RescalingHandlers
@1.14.0
+#<init>()V
@1.15.0
+#<init>(Ljava/time/Duration;)V
-#<init>()V

+###org/apache/flink/runtime/rest/handler/job/rescaling/RescalingStatusMessageParameters
@1.14.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/rescaling/RescalingStatusHeaders
@1.14.0
+#getValueClass()Ljava/lang/Class;
+#getRequestClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/handler/job/rescaling/RescalingStatusMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/handler/job/rescaling/RescalingStatusHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/handler/job/SubtaskCurrentAttemptDetailsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/AbstractSubtaskHandler
@1.14.0

+###org/apache/flink/runtime/rest/handler/job/AbstractJobVertexHandler
@1.14.0

+###org/apache/flink/runtime/rest/handler/job/JobVertexDetailsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/JobVertexTaskManagersHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/JobsOverviewHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/JobSubmitHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;)V

+###org/apache/flink/runtime/rest/handler/job/JobPlanHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/SubtaskExecutionAttemptAccumulatorsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/AbstractSubtaskAttemptHandler
@1.14.0

+###org/apache/flink/runtime/rest/handler/job/SubtasksAllAccumulatorsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/rest/handler/job/JobExceptionsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/JobDetailsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/JobCancellationHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/messages/TerminationModeQueryParameter$TerminationMode;)V
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/job/SubtaskExecutionAttemptDetailsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/JobVertexBackPressureHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/job/JobVertexFlameGraphHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTracker;)V
+#close()V
+#disabledHandler(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)Lorg/apache/flink/runtime/rest/handler/AbstractRestHandler;

+###org/apache/flink/runtime/rest/handler/job/JobConfigHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/JobVertexAccumulatorsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/rest/handler/job/JobIdsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;)V

+###org/apache/flink/runtime/rest/handler/job/coordination/ClientCoordinationHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;)V

+###org/apache/flink/runtime/rest/handler/job/JobExecutionResultHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V

+###org/apache/flink/runtime/rest/handler/job/SubtasksTimesHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Ljava/util/concurrent/Executor;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/AbstractRestHandler
@1.14.0
+#getMessageHeaders()Lorg/apache/flink/runtime/rest/messages/MessageHeaders;

+###org/apache/flink/runtime/rest/handler/AbstractHandler
@1.14.0
+#closeAsync()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/LeaderRetrievalHandler
@1.14.0

+###org/apache/flink/runtime/rest/handler/router/RoutedRequest
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/router/RouteResult;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpRequest;)V
+#getRouteResult()Lorg/apache/flink/runtime/rest/handler/router/RouteResult;
+#getRequest()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpRequest;
+#getPath()Ljava/lang/String;
+#refCnt()I
+#release()Z
+#release(I)Z
+#retain()Lorg/apache/flink/shaded/netty4/io/netty/util/ReferenceCounted;
+#retain(I)Lorg/apache/flink/shaded/netty4/io/netty/util/ReferenceCounted;
+#touch()Lorg/apache/flink/shaded/netty4/io/netty/util/ReferenceCounted;
+#touch(Ljava/lang/Object;)Lorg/apache/flink/shaded/netty4/io/netty/util/ReferenceCounted;

+###org/apache/flink/runtime/rest/handler/router/RouteResult
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/lang/Object;)V
+#uri()Ljava/lang/String;
+#decodedPath()Ljava/lang/String;
+#pathParams()Ljava/util/Map;
+#queryParams()Ljava/util/Map;
+#target()Ljava/lang/Object;
+#queryParam(Ljava/lang/String;)Ljava/lang/String;
+#param(Ljava/lang/String;)Ljava/lang/String;
+#params(Ljava/lang/String;)Ljava/util/List;

+###org/apache/flink/runtime/rest/handler/router/Router
@1.14.0
+#<init>()V
+#notFound()Ljava/lang/Object;
+#size()I
+#addRoute(Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpMethod;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#notFound(Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#removePathPattern(Ljava/lang/String;)V
+#route(Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpMethod;Ljava/lang/String;)Lorg/apache/flink/runtime/rest/handler/router/RouteResult;
+#route(Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpMethod;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/flink/runtime/rest/handler/router/RouteResult;
+#allowedMethods(Ljava/lang/String;)Ljava/util/Set;
+#allAllowedMethods()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#addConnect(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#addDelete(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#addGet(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#addHead(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#addOptions(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#addPatch(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#addPost(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#addPut(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#addTrace(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;
+#addAny(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/router/Router;

+###org/apache/flink/runtime/rest/handler/router/RouterHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/router/Router;Ljava/util/Map;)V
+#getName()Ljava/lang/String;

+###org/apache/flink/runtime/rest/handler/RestHandlerSpecification
@1.14.0
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getSupportedAPIVersions()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache
@1.14.0
+#size()I
+#getExecutionGraphInfo(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;
+#cleanup()V
+#close()V

+###org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher
@1.14.0
+#getMetricStore()Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore;
+#update()V
+#getLastUpdateTime()J

+###org/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$ComponentMetricStore
@1.14.0
+#getMetric(Ljava/lang/String;)Ljava/lang/String;
+#getMetric(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$TaskManagerMetricStore
@1.14.0

+###org/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$TaskMetricStore
@1.14.0
+#getSubtaskMetricStore(I)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$ComponentMetricStore;
+#getAllSubtaskMetricStores()Ljava/util/Map;
@1.16.0
+#getSubtaskMetricStore(I)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$SubtaskMetricStore;
-#getSubtaskMetricStore(I)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$ComponentMetricStore;

+###org/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore
@1.14.0
+#<init>()V
+#getJobManagerMetricStore()Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$ComponentMetricStore;
+#getTaskManagerMetricStore(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$TaskManagerMetricStore;
+#getJobMetricStore(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$ComponentMetricStore;
+#getTaskMetricStore(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$TaskMetricStore;
+#getSubtaskMetricStore(Ljava/lang/String;Ljava/lang/String;I)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$ComponentMetricStore;
+#getJobs()Ljava/util/Map;
+#getTaskManagers()Ljava/util/Map;
+#getJobManager()Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$ComponentMetricStore;[deprecated]
+#add(Lorg/apache/flink/runtime/metrics/dump/MetricDump;)V
@1.16.0
+#updateCurrentExecutionAttempts(Ljava/util/Collection;)V
+#getRepresentativeAttempts()Ljava/util/Map;
+#getSubtaskAttemptMetricStore(Ljava/lang/String;Ljava/lang/String;II)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$ComponentMetricStore;

+###org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;J)V
+#getMetricStore()Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore;
+#update()V
+#getLastUpdateTime()J
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Ljava/util/concurrent/ExecutorService;)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl;

+###org/apache/flink/runtime/rest/handler/legacy/metrics/VoidMetricFetcher
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/handler/legacy/metrics/VoidMetricFetcher;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/VoidMetricFetcher;
+#getMetricStore()Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore;
+#update()V
+#getLastUpdateTime()J

+###org/apache/flink/runtime/rest/handler/legacy/messages/ClusterOverviewWithVersion
@1.14.0
+#<init>(IIIIIIILjava/lang/String;Ljava/lang/String;)V
+#<init>(IIILorg/apache/flink/runtime/messages/webmonitor/JobsOverview;Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;Ljava/lang/String;Ljava/lang/String;)V
+#fromStatusOverview(Lorg/apache/flink/runtime/messages/webmonitor/ClusterOverview;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/runtime/rest/handler/legacy/messages/ClusterOverviewWithVersion;
+#getVersion()Ljava/lang/String;
+#getCommitId()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.16.0
+#<init>(IIILjava/lang/Integer;Ljava/lang/Integer;IIIILjava/lang/String;Ljava/lang/String;)V
-#<init>(IIIIIIILjava/lang/String;Ljava/lang/String;)V
-#<init>(IIILorg/apache/flink/runtime/messages/webmonitor/JobsOverview;Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/flink/runtime/rest/handler/legacy/files/StaticFileServerHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/io/File;)V
+#exceptionCaught(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
+#sendNotModified(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;)V
+#setDateHeader(Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/FullHttpResponse;)V
+#setDateAndCacheHeaders(Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponse;Ljava/io/File;)V
+#setContentTypeHeader(Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponse;Ljava/io/File;)V
+#checkFileValidity(Ljava/io/File;Ljava/io/File;Lorg/slf4j/Logger;)V

+###org/apache/flink/runtime/rest/handler/legacy/files/WebContentHandlerSpecification
@1.14.0
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/handler/legacy/files/WebContentHandlerSpecification;
@1.16.0
+#getSupportedAPIVersions()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/legacy/JsonFactory
@1.14.0

+###org/apache/flink/runtime/rest/handler/legacy/DefaultExecutionGraphCache
@1.14.0
+#<init>(Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)V
+#close()V
+#size()I
+#getExecutionGraphInfo(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;
+#cleanup()V

+###org/apache/flink/runtime/rest/handler/HandlerRequest
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/RequestBody;Lorg/apache/flink/runtime/rest/messages/MessageParameters;)V
+#<init>(Lorg/apache/flink/runtime/rest/messages/RequestBody;Lorg/apache/flink/runtime/rest/messages/MessageParameters;Ljava/util/Map;Ljava/util/Map;)V
+#<init>(Lorg/apache/flink/runtime/rest/messages/RequestBody;Lorg/apache/flink/runtime/rest/messages/MessageParameters;Ljava/util/Map;Ljava/util/Map;Ljava/util/Collection;)V
+#getRequestBody()Lorg/apache/flink/runtime/rest/messages/RequestBody;
+#getPathParameter(Ljava/lang/Class;)Ljava/lang/Object;
+#getQueryParameter(Ljava/lang/Class;)Ljava/util/List;
+#getUploadedFiles()Ljava/util/Collection;
@1.15.0
+#create(Lorg/apache/flink/runtime/rest/messages/RequestBody;Lorg/apache/flink/runtime/rest/messages/MessageParameters;)Lorg/apache/flink/runtime/rest/handler/HandlerRequest;
+#create(Lorg/apache/flink/runtime/rest/messages/RequestBody;Lorg/apache/flink/runtime/rest/messages/MessageParameters;Ljava/util/Collection;)Lorg/apache/flink/runtime/rest/handler/HandlerRequest;
+#resolveParametersAndCreate(Lorg/apache/flink/runtime/rest/messages/RequestBody;Lorg/apache/flink/runtime/rest/messages/MessageParameters;Ljava/util/Map;Ljava/util/Map;Ljava/util/Collection;)Lorg/apache/flink/runtime/rest/handler/HandlerRequest;
-#<init>(Lorg/apache/flink/runtime/rest/messages/RequestBody;Lorg/apache/flink/runtime/rest/messages/MessageParameters;)V
-#<init>(Lorg/apache/flink/runtime/rest/messages/RequestBody;Lorg/apache/flink/runtime/rest/messages/MessageParameters;Ljava/util/Map;Ljava/util/Map;)V
-#<init>(Lorg/apache/flink/runtime/rest/messages/RequestBody;Lorg/apache/flink/runtime/rest/messages/MessageParameters;Ljava/util/Map;Ljava/util/Map;Ljava/util/Collection;)V

+###org/apache/flink/runtime/rest/handler/RestHandlerException$LoggingBehavior
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/handler/RestHandlerException$LoggingBehavior;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/handler/RestHandlerException$LoggingBehavior;

+###org/apache/flink/runtime/rest/handler/RestHandlerException
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;Lorg/apache/flink/runtime/rest/handler/RestHandlerException$LoggingBehavior;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;Ljava/lang/Throwable;)V
+#getHttpResponseStatus()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#logException()Z

+###org/apache/flink/runtime/rest/handler/FileUploads
@1.14.0
+#<init>(Ljava/nio/file/Path;)V
+#getUploadedFiles()Ljava/util/Collection;
+#close()V

+###org/apache/flink/runtime/rest/handler/async/OperationKey
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/TriggerId;)V
+#getTriggerId()Lorg/apache/flink/runtime/rest/messages/TriggerId;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/handler/async/OperationResult
@1.15.0
+#isFinished()Z
+#getStatus()Lorg/apache/flink/runtime/rest/handler/async/OperationResultStatus;
+#getResult()Ljava/lang/Object;
+#getThrowable()Ljava/lang/Throwable;
+#failure(Ljava/lang/Throwable;)Lorg/apache/flink/runtime/rest/handler/async/OperationResult;
+#success(Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/async/OperationResult;
+#inProgress()Lorg/apache/flink/runtime/rest/handler/async/OperationResult;
+#equals(Ljava/lang/Object;)Z
@1.16.0
+#success(Ljava/io/Serializable;)Lorg/apache/flink/runtime/rest/handler/async/OperationResult;
-#success(Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/async/OperationResult;

+###org/apache/flink/runtime/rest/handler/async/OperationResultStatus
@1.15.0
+#values()[Lorg/apache/flink/runtime/rest/handler/async/OperationResultStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/handler/async/OperationResultStatus;

+###org/apache/flink/runtime/rest/handler/async/CompletedOperationCache
@1.15.0
+#<init>(Ljava/time/Duration;)V
+#registerOngoingOperation(Lorg/apache/flink/runtime/rest/handler/async/OperationKey;Ljava/util/concurrent/CompletableFuture;)V
+#containsOperation(Lorg/apache/flink/runtime/rest/handler/async/OperationKey;)Z
+#get(Lorg/apache/flink/runtime/rest/handler/async/OperationKey;)Ljava/util/Optional;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/async/AsynchronousOperationTriggerMessageHeaders
@1.14.0
+#<init>()V
+#getResponseClass()Ljava/lang/Class;
+#getDescription()Ljava/lang/String;

+###org/apache/flink/runtime/rest/handler/async/TriggerResponse
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/messages/TriggerId;)V
+#getTriggerId()Lorg/apache/flink/runtime/rest/messages/TriggerId;

+###org/apache/flink/runtime/rest/handler/async/AbstractAsynchronousOperationHandlers$TriggerHandler
@1.14.0
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/async/AbstractAsynchronousOperationHandlers$StatusHandler
@1.14.0
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;
+#closeHandlerAsync()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/async/AbstractAsynchronousOperationHandlers
@1.14.0
+#<init>()V
@1.15.0
-#<init>()V

+###org/apache/flink/runtime/rest/handler/async/AsynchronousOperationResult
@1.14.0
+#queueStatus()Lorg/apache/flink/runtime/rest/messages/queue/QueueStatus;
+#resource()Ljava/lang/Object;
+#inProgress()Lorg/apache/flink/runtime/rest/handler/async/AsynchronousOperationResult;
+#completed(Ljava/lang/Object;)Lorg/apache/flink/runtime/rest/handler/async/AsynchronousOperationResult;

+###org/apache/flink/runtime/rest/handler/async/AsynchronousOperationInfo
@1.14.0
+#getFailureCause()Lorg/apache/flink/util/SerializedThrowable;
+#completeExceptional(Lorg/apache/flink/util/SerializedThrowable;)Lorg/apache/flink/runtime/rest/handler/async/AsynchronousOperationInfo;
+#complete()Lorg/apache/flink/runtime/rest/handler/async/AsynchronousOperationInfo;

+###org/apache/flink/runtime/rest/handler/async/AsynchronousOperationStatusMessageHeaders
@1.14.0
+#<init>()V
+#getValueClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseTypeParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/HandlerRequestException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/rest/handler/RestHandlerConfiguration
@1.14.0
+#<init>(JILorg/apache/flink/api/common/time/Time;Ljava/io/File;ZZ)V
+#getRefreshInterval()J
+#getMaxCheckpointStatisticCacheEntries()I
+#getTimeout()Lorg/apache/flink/api/common/time/Time;
+#getWebUiDir()Ljava/io/File;
+#isWebSubmitEnabled()Z
+#isWebCancelEnabled()Z
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/rest/handler/RestHandlerConfiguration;

+###org/apache/flink/runtime/rest/handler/dataset/ClusterDataSetDeleteHandlers$ClusterDataSetDeleteTriggerHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/dataset/ClusterDataSetDeleteHandlers;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;)V
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/dataset/ClusterDataSetDeleteHandlers$ClusterDataSetDeleteStatusHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rest/handler/dataset/ClusterDataSetDeleteHandlers;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;)V
+#closeHandlerAsync()Ljava/util/concurrent/CompletableFuture;
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/dataset/ClusterDataSetDeleteHandlers
@1.14.0
+#<init>()V
@1.15.0
+#<init>(Ljava/time/Duration;)V
-#<init>()V

+###org/apache/flink/runtime/rest/handler/dataset/ClusterDataSetListHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;)V

+###org/apache/flink/runtime/rest/handler/cluster/ClusterOverviewHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;)V
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/cluster/DashboardConfigHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;JZZ)V
+#handleRequest(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Lorg/apache/flink/runtime/webmonitor/RestfulGateway;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/handler/cluster/JobManagerThreadDumpHandler
@1.15.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;)V

+###org/apache/flink/runtime/rest/handler/cluster/ShutdownHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;)V

+###org/apache/flink/runtime/rest/handler/cluster/JobManagerCustomLogHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/UntypedResponseMessageHeaders;Ljava/io/File;)V

+###org/apache/flink/runtime/rest/handler/cluster/AbstractJobManagerFileHandler
@1.14.0

+###org/apache/flink/runtime/rest/handler/cluster/JobManagerLogFileHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/UntypedResponseMessageHeaders;Ljava/io/File;)V

+###org/apache/flink/runtime/rest/handler/cluster/ClusterConfigHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/configuration/Configuration;)V

+###org/apache/flink/runtime/rest/handler/cluster/JobManagerLogListHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Ljava/io/File;)V

+###org/apache/flink/runtime/rest/handler/util/HandlerRequestUtils
@1.14.0
+#<init>()V
+#getQueryParameter(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Ljava/lang/Class;)Ljava/lang/Object;
+#getQueryParameter(Lorg/apache/flink/runtime/rest/handler/HandlerRequest;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#fromRequestBodyOrQueryParameter(Ljava/lang/Object;Lorg/apache/flink/util/function/SupplierWithException;Ljava/lang/Object;Lorg/slf4j/Logger;)Ljava/lang/Object;

+###org/apache/flink/runtime/rest/handler/util/HandlerRedirectUtils
@1.14.0
+#<init>()V
+#getRedirectResponse(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;)Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponse;
+#getResponse(Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;Ljava/lang/String;)Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponse;

+###org/apache/flink/runtime/rest/handler/util/KeepAliveWrite
@1.14.0
+#<init>()V
+#flush(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpRequest;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponse;)Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelFuture;
+#flush(Lorg/apache/flink/shaded/netty4/io/netty/channel/Channel;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpRequest;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponse;)Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelFuture;

+###org/apache/flink/runtime/rest/handler/util/HandlerUtils
@1.14.0
+#<init>()V
+#sendResponse(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpRequest;Lorg/apache/flink/runtime/rest/messages/ResponseBody;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;
+#sendErrorResponse(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpRequest;Lorg/apache/flink/runtime/rest/messages/ErrorResponseBody;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;
+#sendErrorResponse(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;ZLorg/apache/flink/runtime/rest/messages/ErrorResponseBody;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;
+#sendResponse(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpRequest;Ljava/lang/String;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;
+#sendResponse(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;ZLjava/lang/String;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;
+#transferFile(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;Ljava/io/File;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpRequest;)V

+###org/apache/flink/runtime/rest/handler/util/MimeTypes
@1.14.0
+#getMimeTypeForExtension(Ljava/lang/String;)Ljava/lang/String;
+#getMimeTypeForFileName(Ljava/lang/String;)Ljava/lang/String;
+#getDefaultMimeType()Ljava/lang/String;

+###org/apache/flink/runtime/rest/handler/util/MutableIOMetrics
@1.14.0
+#<init>()V
+#isNumBytesInComplete()Z
+#isNumBytesOutComplete()Z
+#isNumRecordsInComplete()Z
+#isNumRecordsOutComplete()Z
+#addIOMetrics(Lorg/apache/flink/runtime/executiongraph/AccessExecution;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/flink/runtime/rest/handler/taskmanager/TaskManagerStdoutFileHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/UntypedResponseMessageHeaders;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/TransientBlobService;Lorg/apache/flink/api/common/time/Time;)V

+###org/apache/flink/runtime/rest/handler/taskmanager/AbstractTaskManagerFileHandler
@1.14.0

+###org/apache/flink/runtime/rest/handler/taskmanager/TaskManagerDetailsHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;)V

+###org/apache/flink/runtime/rest/handler/taskmanager/TaskManagerLogListHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;)V

+###org/apache/flink/runtime/rest/handler/taskmanager/TaskManagerThreadDumpHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;)V

+###org/apache/flink/runtime/rest/handler/taskmanager/TaskManagerCustomLogHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/UntypedResponseMessageHeaders;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/TransientBlobService;Lorg/apache/flink/api/common/time/Time;)V

+###org/apache/flink/runtime/rest/handler/taskmanager/TaskManagersHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;)V

+###org/apache/flink/runtime/rest/handler/taskmanager/TaskManagerLogFileHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/UntypedResponseMessageHeaders;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/TransientBlobService;Lorg/apache/flink/api/common/time/Time;)V

+###org/apache/flink/runtime/rest/handler/resourcemanager/AbstractResourceManagerHandler
@1.14.0
+#getResourceManagerGateway(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;)Lorg/apache/flink/runtime/resourcemanager/ResourceManagerGateway;

+###org/apache/flink/runtime/rest/handler/WebHandler
@1.14.0
+#getPaths()[Ljava/lang/String;
@1.16.0
-###org/apache/flink/runtime/rest/handler/WebHandler

+###org/apache/flink/runtime/rest/handler/PipelineErrorHandler
@1.14.0
+#<init>(Lorg/slf4j/Logger;Ljava/util/Map;)V
+#exceptionCaught(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/rest/HttpMethodWrapper
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getNettyHttpMethod()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpMethod;

+###org/apache/flink/runtime/rest/versioning/RestAPIVersion$RestAPIVersionComparator
@1.14.0
+#<init>()V
+#compare(Lorg/apache/flink/runtime/rest/versioning/RestAPIVersion;Lorg/apache/flink/runtime/rest/versioning/RestAPIVersion;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@1.16.0
-###org/apache/flink/runtime/rest/versioning/RestAPIVersion$RestAPIVersionComparator

+###org/apache/flink/runtime/rest/versioning/RestAPIVersion
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/versioning/RestAPIVersion;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/versioning/RestAPIVersion;
+#getURLVersionPrefix()Ljava/lang/String;
+#isDefaultVersion()Z
+#isStableVersion()Z
+#fromURLVersionPrefix(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/versioning/RestAPIVersion;
+#getLatestVersion(Ljava/util/Collection;)Lorg/apache/flink/runtime/rest/versioning/RestAPIVersion;
@1.16.0
-#values()[Lorg/apache/flink/runtime/rest/versioning/RestAPIVersion;
-#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/versioning/RestAPIVersion;
-#fromURLVersionPrefix(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/versioning/RestAPIVersion;

+###org/apache/flink/runtime/rest/RestService
@1.15.0
+#getRestPort()I

+###org/apache/flink/runtime/rest/FileUploadHandler
@1.14.0
+#<init>(Ljava/nio/file/Path;)V
+#getMultipartFileUploads(Lorg/apache/flink/shaded/netty4/io/netty/channel/ChannelHandlerContext;)Lorg/apache/flink/runtime/rest/handler/FileUploads;

+###org/apache/flink/runtime/rest/RestEndpointFactory
@1.14.0
+#createRestEndpoint(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/webmonitor/retriever/LeaderGatewayRetriever;Lorg/apache/flink/runtime/webmonitor/retriever/LeaderGatewayRetriever;Lorg/apache/flink/runtime/blob/TransientBlobService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/webmonitor/WebMonitorEndpoint;
+#createExecutionGraphCache(Lorg/apache/flink/runtime/rest/handler/RestHandlerConfiguration;)Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;

+###org/apache/flink/runtime/rest/RestServerEndpoint$RestHandlerUrlComparator$CaseInsensitiveOrderComparator
@1.14.0
+#<init>()V
+#compare(Ljava/lang/String;Ljava/lang/String;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/flink/runtime/rest/RestServerEndpoint$RestHandlerUrlComparator
@1.14.0
+#<init>()V
+#compare(Lorg/apache/flink/api/java/tuple/Tuple2;Lorg/apache/flink/api/java/tuple/Tuple2;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/flink/runtime/rest/RestServerEndpoint
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
+#start()V
+#getServerAddress()Ljava/net/InetSocketAddress;
+#getRestBaseUrl()Ljava/lang/String;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#getRestPort()I

+###org/apache/flink/runtime/rest/RestClient
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;)V
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#shutdown(Lorg/apache/flink/api/common/time/Time;)V
+#sendRequest(Ljava/lang/String;ILorg/apache/flink/runtime/rest/messages/MessageHeaders;)Ljava/util/concurrent/CompletableFuture;
+#sendRequest(Ljava/lang/String;ILorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/messages/MessageParameters;Lorg/apache/flink/runtime/rest/messages/RequestBody;)Ljava/util/concurrent/CompletableFuture;
+#sendRequest(Ljava/lang/String;ILorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/messages/MessageParameters;Lorg/apache/flink/runtime/rest/messages/RequestBody;Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
+#sendRequest(Ljava/lang/String;ILorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/runtime/rest/messages/MessageParameters;Lorg/apache/flink/runtime/rest/messages/RequestBody;Ljava/util/Collection;Lorg/apache/flink/runtime/rest/versioning/RestAPIVersion;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/rest/FileUpload
@1.14.0
+#<init>(Ljava/nio/file/Path;Ljava/lang/String;)V
+#getFile()Ljava/nio/file/Path;
+#getContentType()Ljava/lang/String;

+###org/apache/flink/runtime/rest/util/RestClientException
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;)V
+#getHttpResponseStatus()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;

+###org/apache/flink/runtime/rest/util/RestConstants
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/util/RestConstants;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/util/RestConstants;

+###org/apache/flink/runtime/rest/util/RestMapperUtils
@1.14.0
+#<init>()V
+#getStrictObjectMapper()Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/ObjectMapper;

+###org/apache/flink/runtime/rest/ConnectionException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/rest/ConnectionIdleException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/rest/NotFoundException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/rest/RestServerEndpointConfiguration
@1.14.0
+#getRestAddress()Ljava/lang/String;
+#getRestBindAddress()Ljava/lang/String;
+#getRestBindPortRange()Ljava/lang/String;
+#getSslHandlerFactory()Lorg/apache/flink/runtime/io/network/netty/SSLHandlerFactory;
+#getUploadDir()Ljava/nio/file/Path;
+#getMaxContentLength()I
+#getResponseHeaders()Ljava/util/Map;
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/rest/RestServerEndpointConfiguration;

+###org/apache/flink/runtime/rest/SessionRestEndpointFactory
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/SessionRestEndpointFactory;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/SessionRestEndpointFactory;
+#createRestEndpoint(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/webmonitor/retriever/LeaderGatewayRetriever;Lorg/apache/flink/runtime/webmonitor/retriever/LeaderGatewayRetriever;Lorg/apache/flink/runtime/blob/TransientBlobService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/webmonitor/WebMonitorEndpoint;

+###org/apache/flink/runtime/rest/JobRestEndpointFactory
@1.14.0
+#values()[Lorg/apache/flink/runtime/rest/JobRestEndpointFactory;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/JobRestEndpointFactory;
+#createRestEndpoint(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/webmonitor/retriever/LeaderGatewayRetriever;Lorg/apache/flink/runtime/webmonitor/retriever/LeaderGatewayRetriever;Lorg/apache/flink/runtime/blob/TransientBlobService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/webmonitor/WebMonitorEndpoint;

+###org/apache/flink/runtime/rest/ConnectionClosedException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/rest/RestClientConfiguration
@1.14.0
+#getSslHandlerFactory()Lorg/apache/flink/runtime/io/network/netty/SSLHandlerFactory;
+#getConnectionTimeout()J
+#getIdlenessTimeout()J
+#getMaxContentLength()I
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/rest/RestClientConfiguration;

+###org/apache/flink/runtime/rest/FlinkHttpObjectAggregator
@1.14.0
+#<init>(ILjava/util/Map;)V

+###org/apache/flink/runtime/operators/coordination/OperatorEvent
@1.14.0

+###org/apache/flink/runtime/operators/coordination/OperatorCoordinatorHolder
@1.14.0
+#lazyInitialize(Ljava/util/function/Consumer;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#coordinator()Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinator;
+#operatorId()Lorg/apache/flink/runtime/jobgraph/OperatorID;
+#maxParallelism()I
+#currentParallelism()I
+#start()V
+#close()V
+#handleEventFromOperator(ILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#subtaskFailed(ILjava/lang/Throwable;)V
+#subtaskReset(IJ)V
+#checkpointCoordinator(JLjava/util/concurrent/CompletableFuture;)V
+#notifyCheckpointComplete(J)V
+#notifyCheckpointAborted(J)V
+#resetToCheckpoint(J[B)V
+#afterSourceBarrierInjection(J)V
+#abortCurrentTriggering()V
+#create(Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinatorHolder;
@1.15.0
+#lazyInitialize(Lorg/apache/flink/runtime/scheduler/GlobalFailureHandler;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#create(Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/operators/coordination/CoordinatorStore;)Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinatorHolder;
-#lazyInitialize(Ljava/util/function/Consumer;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
-#create(Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinatorHolder;
@1.16.0
+#handleEventFromOperator(IILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#executionAttemptFailed(IILjava/lang/Throwable;)V
+#setupSubtaskGatewayForAttempts(ILjava/util/Set;)V
+#create(Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/operators/coordination/CoordinatorStore;Z)Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinatorHolder;
-#handleEventFromOperator(ILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
-#subtaskFailed(ILjava/lang/Throwable;)V
-#afterSourceBarrierInjection(J)V
-#create(Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/operators/coordination/CoordinatorStore;)Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinatorHolder;

+###org/apache/flink/runtime/operators/coordination/OperatorInfo
@1.14.0
+#operatorId()Lorg/apache/flink/runtime/jobgraph/OperatorID;
+#maxParallelism()I
+#currentParallelism()I
+#getIds(Ljava/util/Collection;)Ljava/util/Collection;

+###org/apache/flink/runtime/operators/coordination/CoordinatorStore
@1.15.0
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#apply(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
@1.16.0
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;

+###org/apache/flink/runtime/operators/coordination/OperatorCoordinator$Context
@1.14.0
+#getOperatorId()Lorg/apache/flink/runtime/jobgraph/OperatorID;
+#failJob(Ljava/lang/Throwable;)V
+#currentParallelism()I
+#getUserCodeClassloader()Ljava/lang/ClassLoader;
@1.15.0
+#getCoordinatorStore()Lorg/apache/flink/runtime/operators/coordination/CoordinatorStore;
@1.16.0
+#isConcurrentExecutionAttemptsSupported()Z

+###org/apache/flink/runtime/operators/coordination/OperatorCoordinator$SubtaskGateway
@1.14.0
+#sendEvent(Lorg/apache/flink/runtime/operators/coordination/OperatorEvent;)Ljava/util/concurrent/CompletableFuture;
+#getExecution()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getSubtask()I

+###org/apache/flink/runtime/operators/coordination/OperatorCoordinator$Provider
@1.14.0
+#getOperatorId()Lorg/apache/flink/runtime/jobgraph/OperatorID;
+#create(Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$Context;)Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinator;

+###org/apache/flink/runtime/operators/coordination/OperatorCoordinator
@1.14.0
+#start()V
+#close()V
+#handleEventFromOperator(ILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#checkpointCoordinator(JLjava/util/concurrent/CompletableFuture;)V
+#notifyCheckpointComplete(J)V
+#notifyCheckpointAborted(J)V
+#resetToCheckpoint(J[B)V
+#subtaskFailed(ILjava/lang/Throwable;)V
+#subtaskReset(IJ)V
+#subtaskReady(ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$SubtaskGateway;)V
@1.16.0
+#handleEventFromOperator(IILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#executionAttemptFailed(IILjava/lang/Throwable;)V
+#executionAttemptReady(IILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$SubtaskGateway;)V
-#handleEventFromOperator(ILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
-#subtaskFailed(ILjava/lang/Throwable;)V
-#subtaskReady(ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$SubtaskGateway;)V

+###org/apache/flink/runtime/operators/coordination/SubtaskAccess$SubtaskAccessFactory
@1.14.0
+#getAccessForSubtask(I)Lorg/apache/flink/runtime/operators/coordination/SubtaskAccess;
@1.16.0
+#getAccessesForSubtask(I)Ljava/util/Collection;
+#getAccessForAttempt(II)Lorg/apache/flink/runtime/operators/coordination/SubtaskAccess;
-#getAccessForSubtask(I)Lorg/apache/flink/runtime/operators/coordination/SubtaskAccess;

+###org/apache/flink/runtime/operators/coordination/util/IncompleteFuturesTracker
@1.14.0
+#<init>()V
+#trackFutureWhileIncomplete(Ljava/util/concurrent/CompletableFuture;)V
+#getCurrentIncompleteAndReset()Ljava/util/Collection;
+#failAllFutures(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/operators/coordination/CoordinationRequest
@1.14.0

+###org/apache/flink/runtime/operators/coordination/CoordinationResponse
@1.14.0

+###org/apache/flink/runtime/operators/coordination/ComponentClosingUtils
@1.14.0
+#closeAsyncWithTimeout(Ljava/lang/String;Ljava/lang/Runnable;Ljava/time/Duration;)Ljava/util/concurrent/CompletableFuture;
+#closeAsyncWithTimeout(Ljava/lang/String;Lorg/apache/flink/util/function/ThrowingRunnable;Ljava/time/Duration;)Ljava/util/concurrent/CompletableFuture;
@1.14.4
+#tryShutdownExecutorElegantly(Ljava/util/concurrent/ExecutorService;Ljava/time/Duration;)Z
+#shutdownExecutorForcefully(Ljava/util/concurrent/ExecutorService;Ljava/time/Duration;)Z
+#shutdownExecutorForcefully(Ljava/util/concurrent/ExecutorService;Ljava/time/Duration;Z)Z

+###org/apache/flink/runtime/operators/coordination/RecreateOnResetOperatorCoordinator$Provider
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/OperatorID;)V
+#getOperatorId()Lorg/apache/flink/runtime/jobgraph/OperatorID;
+#create(Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$Context;)Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinator;

+###org/apache/flink/runtime/operators/coordination/RecreateOnResetOperatorCoordinator
@1.14.0
+#start()V
+#close()V
+#handleEventFromOperator(ILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#subtaskFailed(ILjava/lang/Throwable;)V
+#subtaskReset(IJ)V
+#subtaskReady(ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$SubtaskGateway;)V
+#checkpointCoordinator(JLjava/util/concurrent/CompletableFuture;)V
+#notifyCheckpointComplete(J)V
+#resetToCheckpoint(J[B)V
+#getInternalCoordinator()Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinator;
@1.16.0
+#handleEventFromOperator(IILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#executionAttemptFailed(IILjava/lang/Throwable;)V
+#executionAttemptReady(IILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$SubtaskGateway;)V
-#handleEventFromOperator(ILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
-#subtaskFailed(ILjava/lang/Throwable;)V
-#subtaskReady(ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$SubtaskGateway;)V

+###org/apache/flink/runtime/operators/coordination/TaskNotRunningException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/execution/ExecutionState;)V

+###org/apache/flink/runtime/operators/coordination/CoordinationRequestHandler
@1.14.0
+#handleCoordinationRequest(Lorg/apache/flink/runtime/operators/coordination/CoordinationRequest;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/operators/coordination/OperatorEventGateway
@1.14.0
+#sendEventToCoordinator(Lorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V

+###org/apache/flink/runtime/operators/coordination/CoordinationRequestGateway
@1.14.0
+#sendCoordinationRequest(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/CoordinationRequest;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/operators/coordination/CoordinatorStoreImpl
@1.15.0
+#<init>()V
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#apply(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
@1.16.0
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;

+###org/apache/flink/runtime/operators/coordination/OperatorEventDispatcher
@1.14.0
+#registerEventHandler(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/OperatorEventHandler;)V
+#getOperatorEventGateway(Lorg/apache/flink/runtime/jobgraph/OperatorID;)Lorg/apache/flink/runtime/operators/coordination/OperatorEventGateway;

+###org/apache/flink/runtime/operators/coordination/OperatorEventHandler
@1.14.0
+#handleOperatorEvent(Lorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V

+###org/apache/flink/runtime/operators/BatchTask
@0.10.0
+#<init>()V
+#registerInputOutput()V
+#invoke()V
+#cancel()V
+#getLastTasksConfig()Lorg/apache/flink/runtime/operators/util/TaskConfig;
+#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext;
+#getTaskConfig()Lorg/apache/flink/runtime/operators/util/TaskConfig;
+#getTaskManagerInfo()Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;
+#getMemoryManager()Lorg/apache/flink/runtime/memory/MemoryManager;
+#getIOManager()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;
+#getStub()Lorg/apache/flink/api/common/functions/Function;
+#getOutputCollector()Lorg/apache/flink/util/Collector;
+#getOwningNepheleTask()Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;
+#formatLogString(Ljava/lang/String;)Ljava/lang/String;
+#getInput(I)Lorg/apache/flink/util/MutableObjectIterator;
+#getInputSerializer(I)Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;
+#getDriverComparator(I)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#constructLogString(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)Ljava/lang/String;
+#logAndThrowException(Ljava/lang/Exception;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#getOutputCollector(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/ClassLoader;Ljava/util/List;IILorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)Lorg/apache/flink/util/Collector;
+#initOutputs(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;Ljava/util/Map;)Lorg/apache/flink/util/Collector;
+#openUserCode(Lorg/apache/flink/api/common/functions/Function;Lorg/apache/flink/configuration/Configuration;)V
+#closeUserCode(Lorg/apache/flink/api/common/functions/Function;)V
+#openChainedTasks(Ljava/util/List;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#closeChainedTasks(Ljava/util/List;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#cancelChainedTasks(Ljava/util/List;)V
+#instantiateUserCode(Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Object;
+#clearWriters(Ljava/util/List;)V
+#clearReaders([Lorg/apache/flink/runtime/io/network/api/reader/MutableReader;)V
+#getStub()Ljava/lang/Object;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/execution/Environment;)V
+#cancel()Ljava/util/concurrent/Future;
+#createRuntimeContext(Lorg/apache/flink/metrics/groups/OperatorMetricGroup;)Lorg/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext;
+#getContainingTask()Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;
+#getMetricGroup()Lorg/apache/flink/metrics/groups/OperatorMetricGroup;
+#getOutputCollector(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/ClassLoader;Ljava/util/List;II)Lorg/apache/flink/util/Collector;
+#initOutputs(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/util/UserCodeClassLoader;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;)Lorg/apache/flink/util/Collector;
-#<init>()V
-#registerInputOutput()V
-#cancel()V
-#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext;
-#getOwningNepheleTask()Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;
-#getOutputCollector(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/ClassLoader;Ljava/util/List;IILorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)Lorg/apache/flink/util/Collector;
-#initOutputs(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;Ljava/util/Map;)Lorg/apache/flink/util/Collector;
@1.15.0
+#cancel()V
-#cancel()Ljava/util/concurrent/Future;

+###org/apache/flink/runtime/operators/TaskContext
@0.10.0
+#getTaskConfig()Lorg/apache/flink/runtime/operators/util/TaskConfig;
+#getTaskManagerInfo()Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;
+#getUserCodeClassLoader()Ljava/lang/ClassLoader;
+#getMemoryManager()Lorg/apache/flink/runtime/memory/MemoryManager;
+#getIOManager()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;
+#getInput(I)Lorg/apache/flink/util/MutableObjectIterator;
+#getInputSerializer(I)Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;
+#getDriverComparator(I)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#getStub()Ljava/lang/Object;
+#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
+#getOutputCollector()Lorg/apache/flink/util/Collector;
+#getOwningNepheleTask()Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;
+#formatLogString(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
+#getContainingTask()Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;
+#getMetricGroup()Lorg/apache/flink/metrics/groups/OperatorMetricGroup;
-#getOwningNepheleTask()Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;

+###org/apache/flink/runtime/operators/Driver
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
+#getNumberOfInputs()I
+#getNumberOfDriverComparators()I
+#getStubType()Ljava/lang/Class;
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V

+###org/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext
@0.8.0
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;)V
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Ljava/util/Map;)V
+#getBroadcastVariable(Ljava/lang/String;)Ljava/util/List;
+#getBroadcastVariableWithInitializer(Ljava/lang/String;Lorg/apache/flink/api/common/functions/BroadcastVariableInitializer;)Ljava/lang/Object;
+#setBroadcastVariable(Ljava/lang/String;Lorg/apache/flink/runtime/broadcast/BroadcastVariableMaterialization;)V
+#clearBroadcastVariable(Ljava/lang/String;)V
+#clearAllBroadcastVariables()V
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;)V
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Ljava/util/Map;)V
@0.10.0
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;)V
@1.14.0
+#<init>(Lorg/apache/flink/api/common/TaskInfo;Lorg/apache/flink/util/UserCodeClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/groups/OperatorMetricGroup;Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/api/common/JobID;)V
+#hasBroadcastVariable(Ljava/lang/String;)Z
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getExternalResourceInfos(Ljava/lang/String;)Ljava/util/Set;
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;)V

+###org/apache/flink/runtime/operators/util/CloseableInputProvider
@0.6-hadoop2-incubating
+#getIterator()Lorg/apache/flink/util/MutableObjectIterator;

+###org/apache/flink/runtime/operators/util/TaskConfig
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#setTaskName(Ljava/lang/String;)V
+#getTaskName()Ljava/lang/String;
+#hasStubWrapper()Z
+#setStubWrapper(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;)V
+#getStubWrapper(Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#setStubParameters(Lorg/apache/flink/configuration/Configuration;)V
+#getStubParameters()Lorg/apache/flink/configuration/Configuration;
+#setStubParameter(Ljava/lang/String;Ljava/lang/String;)V
+#getStubParameter(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#setDriver(Ljava/lang/Class;)V
+#getDriver()Ljava/lang/Class;
+#setDriverStrategy(Lorg/apache/flink/runtime/operators/DriverStrategy;)V
+#getDriverStrategy()Lorg/apache/flink/runtime/operators/DriverStrategy;
+#setDriverComparator(Lorg/apache/flink/api/common/typeutils/TypeComparatorFactory;I)V
+#getDriverComparator(ILjava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeComparatorFactory;
+#setDriverPairComparator(Lorg/apache/flink/api/common/typeutils/TypePairComparatorFactory;)V
+#getPairComparatorFactory(Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypePairComparatorFactory;
+#setInputLocalStrategy(ILorg/apache/flink/runtime/operators/util/LocalStrategy;)V
+#getInputLocalStrategy(I)Lorg/apache/flink/runtime/operators/util/LocalStrategy;
+#setInputSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;I)V
+#setBroadcastInputSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;I)V
+#getInputSerializer(ILjava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;
+#getBroadcastInputSerializer(ILjava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;
+#setInputComparator(Lorg/apache/flink/api/common/typeutils/TypeComparatorFactory;I)V
+#getInputComparator(ILjava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeComparatorFactory;
+#getNumInputs()I
+#getNumBroadcastInputs()I
+#getGroupSize(I)I
+#getBroadcastGroupSize(I)I
+#addInputToGroup(I)V
+#addBroadcastInputToGroup(I)V
+#setInputAsynchronouslyMaterialized(IZ)V
+#isInputAsynchronouslyMaterialized(I)Z
+#setInputCached(IZ)V
+#isInputCached(I)Z
+#setRelativeInputMaterializationMemory(ID)V
+#getRelativeInputMaterializationMemory(I)D
+#setBroadcastInputName(Ljava/lang/String;I)V
+#getBroadcastInputName(I)Ljava/lang/String;
+#addOutputShipStrategy(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;)V
+#getNumOutputs()I
+#getOutputShipStrategy(I)Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;
+#setOutputSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;)V
+#getOutputSerializer(Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;
+#setOutputComparator(Lorg/apache/flink/api/common/typeutils/TypeComparatorFactory;I)V
+#getOutputComparator(ILjava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeComparatorFactory;
+#setOutputDataDistribution(Lorg/apache/flink/api/common/distributions/DataDistribution;I)V
+#getOutputDataDistribution(ILjava/lang/ClassLoader;)Lorg/apache/flink/api/common/distributions/DataDistribution;
+#setRelativeMemoryDriver(D)V
+#getRelativeMemoryDriver()D
+#setRelativeMemoryInput(ID)V
+#getRelativeMemoryInput(I)D
+#setFilehandlesDriver(I)V
+#getFilehandlesDriver()I
+#setFilehandlesInput(II)V
+#getFilehandlesInput(I)I
+#setSpillingThresholdDriver(F)V
+#getSpillingThresholdDriver()F
+#setSpillingThresholdInput(IF)V
+#getSpillingThresholdInput(I)F
+#getNumberOfChainedStubs()I
+#addChainedTask(Ljava/lang/Class;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/String;)V
+#getChainedStubConfig(I)Lorg/apache/flink/runtime/operators/util/TaskConfig;
+#getChainedTask(I)Ljava/lang/Class;
+#getChainedTaskName(I)Ljava/lang/String;
+#setNumberOfIterations(I)V
+#getNumberOfIterations()I
+#setIterationHeadPartialSolutionOrWorksetInputIndex(I)V
+#getIterationHeadPartialSolutionOrWorksetInputIndex()I
+#setIterationHeadSolutionSetInputIndex(I)V
+#getIterationHeadSolutionSetInputIndex()I
+#setRelativeBackChannelMemory(D)V
+#getRelativeBackChannelMemory()D
+#setRelativeSolutionSetMemory(D)V
+#getRelativeSolutionSetMemory()D
+#isIterativeInputGate(I)Z
+#setGateIterativeWithNumberOfEventsUntilInterrupt(II)V
+#getNumberOfEventsUntilInterruptInIterativeGate(I)I
+#setBroadcastGateIterativeWithNumberOfEventsUntilInterrupt(II)V
+#getNumberOfEventsUntilInterruptInIterativeBroadcastGate(I)I
+#setIterationId(I)V
+#getIterationId()I
+#setIsWorksetIteration()V
+#getIsWorksetIteration()Z
+#setIterationHeadIndexOfSyncOutput(I)V
+#getIterationHeadIndexOfSyncOutput()I
+#setIterationHeadFinalOutputConfig(Lorg/apache/flink/runtime/operators/util/TaskConfig;)V
+#getIterationHeadFinalOutputConfig()Lorg/apache/flink/runtime/operators/util/TaskConfig;
+#setSolutionSetSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;)V
+#getSolutionSetSerializer(Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;
+#setSolutionSetComparator(Lorg/apache/flink/api/common/typeutils/TypeComparatorFactory;)V
+#getSolutionSetComparator(Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeComparatorFactory;
+#addIterationAggregator(Ljava/lang/String;Lorg/apache/flink/api/common/aggregators/Aggregator;)V
+#addIterationAggregators(Ljava/util/Collection;)V
+#getIterationAggregators()Ljava/util/Collection;
+#setConvergenceCriterion(Ljava/lang/String;Lorg/apache/flink/api/common/aggregators/ConvergenceCriterion;)V
+#getConvergenceCriterion()Lorg/apache/flink/api/common/aggregators/ConvergenceCriterion;
+#usesConvergenceCriterion()Z
+#getConvergenceCriterionAggregatorName()Ljava/lang/String;
+#setIsSolutionSetUpdate()V
+#getIsSolutionSetUpdate()Z
+#setIsSolutionSetUpdateWithoutReprobe()V
+#getIsSolutionSetUpdateWithoutReprobe()Z
+#setWaitForSolutionSetUpdate()V
+#getWaitForSolutionSetUpdate()Z
+#setIsWorksetUpdate()V
+#getIsWorksetUpdate()Z
@0.7.0-hadoop2-incubating
+#setMutableObjectMode(Z)V
+#getMutableObjectMode()Z
+#getIterationAggregators(Ljava/lang/ClassLoader;)Ljava/util/Collection;
+#getConvergenceCriterion(Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/aggregators/ConvergenceCriterion;
+#setSolutionSetUnmanaged(Z)V
+#isSolutionSetUnmanaged()Z
-#getIterationAggregators()Ljava/util/Collection;
-#getConvergenceCriterion()Lorg/apache/flink/api/common/aggregators/ConvergenceCriterion;
@0.8.0
+#setOutputPartitioner(Lorg/apache/flink/api/common/functions/Partitioner;I)V
+#getOutputPartitioner(ILjava/lang/ClassLoader;)Lorg/apache/flink/api/common/functions/Partitioner;
@1.14.0
+#setUseLargeRecordHandler(Z)V
+#getUseLargeRecordHandler()Z
+#setImplicitConvergenceCriterion(Ljava/lang/String;Lorg/apache/flink/api/common/aggregators/ConvergenceCriterion;)V
+#getImplicitConvergenceCriterion(Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/aggregators/ConvergenceCriterion;
+#usesImplicitConvergenceCriterion()Z
+#getImplicitConvergenceCriterionAggregatorName()Ljava/lang/String;

+###org/apache/flink/runtime/operators/util/LocalStrategy
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/operators/util/LocalStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/util/LocalStrategy;
+#dams()Z
+#requiresComparator()Z

+###org/apache/flink/runtime/operators/util/JoinTaskIterator
@0.6-hadoop2-incubating
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V

+###org/apache/flink/runtime/operators/util/BloomFilter
@0.10.0
+#<init>(II)V
+#setBitsLocation(Lorg/apache/flink/core/memory/MemorySegment;I)V
+#optimalNumOfBits(JD)I
+#estimateFalsePositiveProbability(JI)D
+#addHash(I)V
+#testHash(I)Z
+#reset()V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/operators/util/BitSet
@1.14.0
+#<init>(I)V
+#setMemorySegment(Lorg/apache/flink/core/memory/MemorySegment;I)V
+#set(I)V
+#get(I)Z
+#bitSize()I
+#clear()V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/operators/util/CoGroupTaskIterator
@0.6-hadoop2-incubating
+#open()V
+#close()V
+#next()Z
+#getValues1()Ljava/lang/Iterable;
+#getValues2()Ljava/lang/Iterable;

+###org/apache/flink/runtime/operators/util/metrics/CountingIterable
@1.14.0
+#<init>(Ljava/lang/Iterable;Lorg/apache/flink/metrics/Counter;)V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/runtime/operators/util/metrics/CountingIterator
@1.14.0
+#<init>(Ljava/util/Iterator;Lorg/apache/flink/metrics/Counter;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/apache/flink/runtime/operators/util/metrics/CountingMutableObjectIterator
@1.14.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/metrics/Counter;)V
+#next(Ljava/lang/Object;)Ljava/lang/Object;
+#next()Ljava/lang/Object;

+###org/apache/flink/runtime/operators/util/metrics/CountingCollector
@1.14.0
+#<init>(Lorg/apache/flink/util/Collector;Lorg/apache/flink/metrics/Counter;)V
+#collect(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/runtime/operators/util/ReaderIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/api/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#next(Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/api/reader/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#next()Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/io/network/api/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V

+###org/apache/flink/runtime/operators/util/SimpleCloseableInputProvider
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;)V
+#close()V
+#getIterator()Lorg/apache/flink/util/MutableObjectIterator;

+###org/apache/flink/runtime/operators/util/CorruptConfigurationException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/operators/TempBarrier
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;I)V
+#startReading()V
+#getIterator()Lorg/apache/flink/util/MutableObjectIterator;
+#close()V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;I)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;I)V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILjava/util/List;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;I)V

+###org/apache/flink/runtime/operators/resettable/SpillingResettableMutableObjectIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Ljava/util/List;)V
+#open()V
+#reset()V
+#close()Ljava/util/List;
+#next(Ljava/lang/Object;)Ljava/lang/Object;
+#consumeAndCacheRemainingData()V
@0.9.0-milestone-1
+#next()Ljava/lang/Object;
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Ljava/util/List;)V
-#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
-#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Ljava/util/List;)V

+###org/apache/flink/runtime/operators/resettable/NonReusingBlockResettableIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#reopen(Ljava/util/Iterator;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#reset()V
+#nextBlock()Z
+#hasFurtherInput()Z
+#close()V
+#open()V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/memory/MemoryManager;Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#<init>(Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
-#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
-#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V

+###org/apache/flink/runtime/operators/resettable/BlockResettableMutableObjectIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#next(Ljava/lang/Object;)Ljava/lang/Object;
+#reset()V
+#nextBlock()Z
+#hasFurtherInput()Z
+#close()V
+#open()V
@0.9.0-milestone-1
+#next()Ljava/lang/Object;
@0.10.0
+#<init>(Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
-#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V

+###org/apache/flink/runtime/operators/resettable/SpillingResettableIterator
@0.6-hadoop2-incubating
+#<init>(Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#<init>(Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Ljava/util/List;)V
+#open()V
+#reset()V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#close()Ljava/util/List;
@0.10.0
+#<init>(Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#<init>(Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Ljava/util/List;)V
-#<init>(Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
-#<init>(Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Ljava/util/List;)V

+###org/apache/flink/runtime/operators/resettable/ReusingBlockResettableIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#hasNext()Z
@0.10.0
+#<init>(Lorg/apache/flink/runtime/memory/MemoryManager;Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#<init>(Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
-#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
-#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V

+###org/apache/flink/runtime/operators/chaining/ChainedDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/String;Lorg/apache/flink/util/Collector;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;)V
+#setup(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#openTask()V
+#closeTask()V
+#cancelTask()V
+#getStub()Lorg/apache/flink/api/common/functions/Function;
+#getTaskName()Ljava/lang/String;
+#collect(Ljava/lang/Object;)V
+#setOutputCollector(Lorg/apache/flink/util/Collector;)V
+#getOutputCollector()Lorg/apache/flink/util/Collector;
+#getTaskConfig()Lorg/apache/flink/runtime/operators/util/TaskConfig;
@0.9.0-milestone-1
+#setup(Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/String;Lorg/apache/flink/util/Collector;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;)V
-#setup(Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/String;Lorg/apache/flink/util/Collector;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;)V
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/String;Lorg/apache/flink/util/Collector;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;)V
-#setup(Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/String;Lorg/apache/flink/util/Collector;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;)V
@1.14.0
+#setup(Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/String;Lorg/apache/flink/util/Collector;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/util/UserCodeClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;)V
+#getIOMetrics()Lorg/apache/flink/runtime/metrics/groups/InternalOperatorIOMetricGroup;
-#setup(Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/String;Lorg/apache/flink/util/Collector;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;)V

+###org/apache/flink/runtime/operators/chaining/ChainedAllReduceDriver
@0.9.0
+#<init>()V
+#setup(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#openTask()V
+#closeTask()V
+#cancelTask()V
+#getStub()Lorg/apache/flink/api/common/functions/Function;
+#getTaskName()Ljava/lang/String;
+#collect(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/runtime/operators/chaining/ChainedTerminationCriterionDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#openTask()V
+#closeTask()V
+#cancelTask()V
+#getStub()Lorg/apache/flink/api/common/functions/RichFunction;
+#getTaskName()Ljava/lang/String;
+#collect(Ljava/lang/Object;)V
+#close()V
+#getStub()Lorg/apache/flink/api/common/functions/Function;
@1.16.0
-###org/apache/flink/runtime/operators/chaining/ChainedTerminationCriterionDriver

+###org/apache/flink/runtime/operators/chaining/SynchronousChainedCombineDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#openTask()V
+#closeTask()V
+#cancelTask()V
+#getStub()Lorg/apache/flink/api/common/functions/Function;
+#getTaskName()Ljava/lang/String;
+#collect(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/runtime/operators/chaining/ChainedFlatMapDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#openTask()V
+#closeTask()V
+#cancelTask()V
+#getStub()Lorg/apache/flink/api/common/functions/Function;
+#getTaskName()Ljava/lang/String;
+#collect(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/runtime/operators/chaining/ChainedMapDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#openTask()V
+#closeTask()V
+#cancelTask()V
+#getStub()Lorg/apache/flink/api/common/functions/Function;
+#getTaskName()Ljava/lang/String;
+#collect(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/runtime/operators/chaining/ChainedReduceCombineDriver
@1.14.0
+#<init>()V
+#getStub()Lorg/apache/flink/api/common/functions/Function;
+#getTaskName()Ljava/lang/String;
+#setup(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#openTask()V
+#collect(Ljava/lang/Object;)V
+#close()V
+#closeTask()V
+#cancelTask()V

+###org/apache/flink/runtime/operators/chaining/ExceptionInChainedStubException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;Ljava/lang/Exception;)V
+#getTaskName()Ljava/lang/String;
+#getWrappedException()Ljava/lang/Exception;
+#exceptionUnwrap(Ljava/lang/Exception;)Ljava/lang/Exception;

+###org/apache/flink/runtime/operators/DamBehavior
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/operators/DamBehavior;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/DamBehavior;
+#isMaterializing()Z

+###org/apache/flink/runtime/operators/DriverStrategy
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/operators/DriverStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/DriverStrategy;
+#getDriverClass()Ljava/lang/Class;
+#getPushChainDriverClass()Ljava/lang/Class;
+#getNumInputs()I
+#firstDam()Lorg/apache/flink/runtime/operators/DamBehavior;
+#secondDam()Lorg/apache/flink/runtime/operators/DamBehavior;
+#damOnInput(I)Lorg/apache/flink/runtime/operators/DamBehavior;
+#isMaterializing()Z
+#requiresComparator()Z
@0.7.0-hadoop2-incubating
+#getNumRequiredComparators()I
-#requiresComparator()Z

+###org/apache/flink/runtime/operators/shipping/ShipStrategyType
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;
+#isNetworkStrategy()Z
+#requiresComparator()Z

+###org/apache/flink/runtime/operators/shipping/OutputCollector
@0.6-hadoop2-incubating
+#<init>(Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#addWriter(Lorg/apache/flink/runtime/io/network/api/RecordWriter;)V
+#collect(Ljava/lang/Object;)V
+#close()V
+#getWriters()Ljava/util/List;
@0.9.0-milestone-1
-#addWriter(Lorg/apache/flink/runtime/io/network/api/RecordWriter;)V

+###org/apache/flink/runtime/operators/shipping/OutputEmitter
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;)V
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
+#selectChannels(Lorg/apache/flink/runtime/plugable/SerializationDelegate;I)[I
+#selectChannels(Lorg/apache/flink/core/io/IOReadableWritable;I)[I
@0.8.0
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/functions/Partitioner;)V
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/functions/Partitioner;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;I)V
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;ILorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/functions/Partitioner;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
+#setup(I)V
+#selectChannel(Lorg/apache/flink/runtime/plugable/SerializationDelegate;)I
+#isBroadcast()Z
+#selectChannel(Lorg/apache/flink/core/io/IOReadableWritable;)I
-#<init>()V
-#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;)V
-#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
-#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/functions/Partitioner;)V
-#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/functions/Partitioner;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
-#selectChannels(Lorg/apache/flink/runtime/plugable/SerializationDelegate;I)[I
-#selectChannels(Lorg/apache/flink/core/io/IOReadableWritable;I)[I

+###org/apache/flink/runtime/operators/sort/ReusingMergeOuterJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V

+###org/apache/flink/runtime/operators/sort/AbstractMergeOuterJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z

+###org/apache/flink/runtime/operators/sort/AbstractMergeIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#open()V
+#close()V
+#abort()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z

+###org/apache/flink/runtime/operators/sort/InMemorySorter
@0.6-hadoop2-incubating
+#reset()V
+#isEmpty()Z
+#dispose()Ljava/util/List;
+#getCapacity()J
+#getOccupancy()J
+#getRecord(Ljava/lang/Object;I)Ljava/lang/Object;
+#write(Ljava/lang/Object;)Z
+#getIterator()Lorg/apache/flink/util/MutableObjectIterator;
+#writeToOutput(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelWriterOutputView;)V
+#writeToOutput(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelWriterOutputView;II)V
@0.9.0-milestone-1
+#getNumRecordBytes()J
+#writeToOutput(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelWriterOutputView;Lorg/apache/flink/runtime/operators/sort/LargeRecordHandler;)V
@0.10.0
+#dispose()V
+#getRecord(I)Ljava/lang/Object;
-#dispose()Ljava/util/List;
-#getNumRecordBytes()J

+###org/apache/flink/runtime/operators/sort/IndexedSortable
@0.6-hadoop2-incubating
+#compare(II)I
+#swap(II)V
+#size()I
@1.14.0
+#compare(IIII)I
+#swap(IIII)V
+#recordSize()I
+#recordsPerSegment()I

+###org/apache/flink/runtime/operators/sort/QuickSort
@0.6-hadoop2-incubating
+#<init>()V
+#sort(Lorg/apache/flink/runtime/operators/sort/IndexedSortable;II)V
+#sort(Lorg/apache/flink/runtime/operators/sort/IndexedSortable;)V

+###org/apache/flink/runtime/operators/sort/IndexedSorter
@0.6-hadoop2-incubating
+#sort(Lorg/apache/flink/runtime/operators/sort/IndexedSortable;II)V
+#sort(Lorg/apache/flink/runtime/operators/sort/IndexedSortable;)V

+###org/apache/flink/runtime/operators/sort/LargeRecordHandler
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/List;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;I)V
+#addRecord(Ljava/lang/Object;)J
+#finishWriteAndSortKeys(Ljava/util/List;)Lorg/apache/flink/util/MutableObjectIterator;
+#close()V
+#hasData()Z
@0.10.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/memory/MemoryManager;Ljava/util/List;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;I)V
-#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/List;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;I)V
@1.14.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/memory/MemoryManager;Ljava/util/List;Lorg/apache/flink/runtime/jobgraph/tasks/TaskInvokable;ILorg/apache/flink/api/common/ExecutionConfig;)V
-#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/memory/MemoryManager;Ljava/util/List;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;I)V

+###org/apache/flink/runtime/operators/sort/Sorter
@0.6-hadoop2-incubating
+#getIterator()Lorg/apache/flink/util/MutableObjectIterator;
@1.14.0
-#getIterator()Lorg/apache/flink/util/MutableObjectIterator;

+###org/apache/flink/runtime/operators/sort/PushSorter
@1.14.0
+#writeRecord(Ljava/lang/Object;)V
+#finishReading()V

+###org/apache/flink/runtime/operators/sort/StageRunner$SortStage
@1.14.0
+#values()[Lorg/apache/flink/runtime/operators/sort/StageRunner$SortStage;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/sort/StageRunner$SortStage;

+###org/apache/flink/runtime/operators/sort/StageRunner$StageMessageDispatcher
@1.14.0
+#send(Lorg/apache/flink/runtime/operators/sort/StageRunner$SortStage;Lorg/apache/flink/runtime/operators/sort/CircularElement;)V
+#take(Lorg/apache/flink/runtime/operators/sort/StageRunner$SortStage;)Lorg/apache/flink/runtime/operators/sort/CircularElement;
+#poll(Lorg/apache/flink/runtime/operators/sort/StageRunner$SortStage;)Lorg/apache/flink/runtime/operators/sort/CircularElement;
+#sendResult(Lorg/apache/flink/util/MutableObjectIterator;)V

+###org/apache/flink/runtime/operators/sort/StageRunner
@1.14.0
+#start()V

+###org/apache/flink/runtime/operators/sort/FixedLengthRecordSorter
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;)V
+#reset()V
+#isEmpty()Z
+#dispose()Ljava/util/List;
+#getCapacity()J
+#getOccupancy()J
+#getRecord(Ljava/lang/Object;I)Ljava/lang/Object;
+#write(Ljava/lang/Object;)Z
+#compare(II)I
+#swap(II)V
+#size()I
+#getIterator()Lorg/apache/flink/util/MutableObjectIterator;
+#writeToOutput(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelWriterOutputView;)V
+#writeToOutput(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelWriterOutputView;II)V
@0.9.0-milestone-1
+#getNumRecordBytes()J
+#writeToOutput(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelWriterOutputView;Lorg/apache/flink/runtime/operators/sort/LargeRecordHandler;)V
@0.10.0
+#dispose()V
+#getRecord(I)Ljava/lang/Object;
-#dispose()Ljava/util/List;
-#getNumRecordBytes()J
@1.14.0
+#recordSize()I
+#recordsPerSegment()I
+#compare(IIII)I
+#swap(IIII)V

+###org/apache/flink/runtime/operators/sort/ReusingMergeInnerJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V

+###org/apache/flink/runtime/operators/sort/AbstractMergeInnerJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z

+###org/apache/flink/runtime/operators/sort/NonReusingMergeInnerJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V

+###org/apache/flink/runtime/operators/sort/MergeIterator
@0.6-hadoop2-incubating
+#<init>(Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#next(Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0-milestone-1
+#<init>(Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#next()Ljava/lang/Object;
-#<init>(Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V

+###org/apache/flink/runtime/operators/sort/ExceptionHandler
@0.6-hadoop2-incubating
+#handleException(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/operators/sort/PartialOrderPriorityQueue
@0.6-hadoop2-incubating
+#<init>(Ljava/util/Comparator;I)V
+#remainingCapacity()I
+#put(Ljava/lang/Object;)V
+#offer(Ljava/lang/Object;)Z
+#peek()Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#adjustTop()V
+#size()I
+#clear()V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/runtime/operators/sort/ExternalSorterBuilder
@1.14.0
+#maxNumFileHandles(I)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#objectReuse(Z)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#largeRecords(Z)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#enableSpilling(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#enableSpilling(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;D)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#memoryFraction(D)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#memory(Ljava/util/List;)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#sortBuffers(I)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#withCombiner(Lorg/apache/flink/api/common/functions/GroupCombineFunction;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#withCombiner(Lorg/apache/flink/api/common/functions/GroupCombineFunction;)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#sorterFactory(Lorg/apache/flink/runtime/operators/sort/InMemorySorterFactory;)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#build(Lorg/apache/flink/util/MutableObjectIterator;)Lorg/apache/flink/runtime/operators/sort/ExternalSorter;
+#build()Lorg/apache/flink/runtime/operators/sort/PushSorter;

+###org/apache/flink/runtime/operators/sort/InMemorySorterFactory
@1.14.0
+#create(Ljava/util/List;)Lorg/apache/flink/runtime/operators/sort/InMemorySorter;

+###org/apache/flink/runtime/operators/sort/ExternalSorter
@1.14.0
+#close()V
+#isClosed()Z
+#getIterator()Lorg/apache/flink/util/MutableObjectIterator;
+#newBuilder(Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/jobgraph/tasks/TaskInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;
+#newBuilder(Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;)Lorg/apache/flink/runtime/operators/sort/ExternalSorterBuilder;

+###org/apache/flink/runtime/operators/sort/NormalizedKeySorter
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;)V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;I)V
+#reset()V
+#isEmpty()Z
+#dispose()Ljava/util/List;
+#getCapacity()J
+#getOccupancy()J
+#getRecord(Ljava/lang/Object;I)Ljava/lang/Object;
+#write(Ljava/lang/Object;)Z
+#compare(II)I
+#swap(II)V
+#size()I
+#getIterator()Lorg/apache/flink/util/MutableObjectIterator;
+#writeToOutput(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelWriterOutputView;)V
+#writeToOutput(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelWriterOutputView;II)V
@0.9.0-milestone-1
+#getNumRecordBytes()J
+#writeToOutput(Lorg/apache/flink/runtime/io/disk/iomanager/ChannelWriterOutputView;Lorg/apache/flink/runtime/operators/sort/LargeRecordHandler;)V
@0.10.0
+#dispose()V
+#getRecord(I)Ljava/lang/Object;
-#dispose()Ljava/util/List;
-#getNumRecordBytes()J
@1.14.0
+#recordSize()I
+#recordsPerSegment()I
+#compare(IIII)I
+#swap(IIII)V

+###org/apache/flink/runtime/operators/sort/HeapSort
@0.6-hadoop2-incubating
+#<init>()V
+#sort(Lorg/apache/flink/runtime/operators/sort/IndexedSortable;II)V
+#sort(Lorg/apache/flink/runtime/operators/sort/IndexedSortable;)V

+###org/apache/flink/runtime/operators/sort/NonReusingSortMergeCoGroupIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)V
+#open()V
+#close()V
+#getValues1()Ljava/lang/Iterable;
+#getValues2()Ljava/lang/Iterable;
+#next()Z

+###org/apache/flink/runtime/operators/sort/NonReusingMergeOuterJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V

+###org/apache/flink/runtime/operators/sort/DefaultInMemorySorterFactory
@1.14.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;I)V
+#create(Ljava/util/List;)Lorg/apache/flink/runtime/operators/sort/InMemorySorter;

+###org/apache/flink/runtime/operators/sort/ReusingSortMergeCoGroupIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)V
+#open()V
+#close()V
+#getValues1()Ljava/lang/Iterable;
+#getValues2()Ljava/lang/Iterable;
+#next()Z

+###org/apache/flink/runtime/operators/hash/ReusingBuildFirstReOpenableHashJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZ)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
@1.14.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZZ)V
-#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V

+###org/apache/flink/runtime/operators/hash/ReusingBuildFirstHashJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V
@1.14.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZZ)V
-#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V

+###org/apache/flink/runtime/operators/hash/HashJoinIteratorBase
@0.10.0
+#<init>()V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZ)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;

+###org/apache/flink/runtime/operators/hash/ReOpenableMutableHashTable
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;)V
+#open(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;)V
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
+#close()V
@0.10.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Z)V
-#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;)V
@1.14.0
+#open(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Z)V
-#open(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;)V

+###org/apache/flink/runtime/operators/hash/MutableHashTable$HashBucketIterator
@0.6-hadoop2-incubating
+#next(Ljava/lang/Object;)Ljava/lang/Object;
+#writeBack(Ljava/lang/Object;)V
+#reset()V
@0.9.0-milestone-1
+#next()Ljava/lang/Object;

+###org/apache/flink/runtime/operators/hash/MutableHashTable$UnmatchedBuildIterator
@1.14.0
+#next(Ljava/lang/Object;)Ljava/lang/Object;
+#next()Ljava/lang/Object;
+#back()V

+###org/apache/flink/runtime/operators/hash/MutableHashTable$ProbeIterator
@0.6-hadoop2-incubating
+#next()Ljava/lang/Object;
+#getCurrent()Ljava/lang/Object;

+###org/apache/flink/runtime/operators/hash/MutableHashTable
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;)V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;I)V
+#open(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;)V
+#nextRecord()Z
+#getMatchesFor(Ljava/lang/Object;)Lorg/apache/flink/runtime/operators/hash/MutableHashTable$HashBucketIterator;
+#getCurrentProbeRecord()Ljava/lang/Object;
+#getBuildSideIterator()Lorg/apache/flink/runtime/operators/hash/MutableHashTable$HashBucketIterator;
+#getPartitionEntryIterator()Lorg/apache/flink/util/MutableObjectIterator;
+#close()V
+#abort()V
+#getFreedMemory()Ljava/util/List;
+#nextSegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getNumWriteBehindBuffers(I)I
+#getPartitioningFanOutNoEstimates(I)I
+#getInitialTableSize(IIII)I
+#assignPartition(IB)B
+#hash(II)I
+#getProbeSideComparator()Lorg/apache/flink/api/common/typeutils/TypeComparator;
@0.9.1
-#getPartitionEntryIterator()Lorg/apache/flink/util/MutableObjectIterator;
@0.10.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Z)V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;IZ)V
-#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;I)V
@1.14.0
+#open(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Z)V
+#getBuildSideIterator()Lorg/apache/flink/util/MutableObjectIterator;
-#getBuildSideIterator()Lorg/apache/flink/runtime/operators/hash/MutableHashTable$HashBucketIterator;

+###org/apache/flink/runtime/operators/hash/HashPartition$BuildSideBuffer
@0.6-hadoop2-incubating

+###org/apache/flink/runtime/operators/hash/HashPartition
@0.6-hadoop2-incubating
+#getPartitionNumber()I
+#getRecursionLevel()I
+#isInMemory()Z
+#getBuildSideBlockCount()I
+#getProbeSideBlockCount()I
+#getBuildSideRecordCount()J
+#getProbeSideRecordCount()J
+#getBuildSideChannel()Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
+#getProbeSideChannel()Lorg/apache/flink/runtime/io/disk/iomanager/BlockChannelWriter;
+#insertIntoBuildBuffer(Ljava/lang/Object;)J
+#insertIntoProbeBuffer(Ljava/lang/Object;)V
+#spillPartition(Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)I
+#finalizeBuildPhase(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/Channel$Enumerator;Ljava/util/concurrent/LinkedBlockingQueue;)V
+#finalizeProbePhase(Ljava/util/List;Ljava/util/List;)I
+#clearAllMemory(Ljava/util/List;)V
+#prepareProbePhase(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/Channel$Enumerator;Ljava/util/concurrent/LinkedBlockingQueue;)V
+#setReadPosition(J)V
@0.8.0
+#spillPartition(Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)I
+#finalizeBuildPhase(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$Enumerator;Ljava/util/concurrent/LinkedBlockingQueue;)V
+#prepareProbePhase(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$Enumerator;Ljava/util/concurrent/LinkedBlockingQueue;)V
-#spillPartition(Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;Ljava/util/concurrent/LinkedBlockingQueue;)I
-#finalizeBuildPhase(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/Channel$Enumerator;Ljava/util/concurrent/LinkedBlockingQueue;)V
-#prepareProbePhase(Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/disk/iomanager/Channel$Enumerator;Ljava/util/concurrent/LinkedBlockingQueue;)V
@0.10.0
+#getNumOccupiedMemorySegments()I
@1.14.0
+#finalizeProbePhase(Ljava/util/List;Ljava/util/List;Z)I
-#finalizeProbePhase(Ljava/util/List;Ljava/util/List;)I

+###org/apache/flink/runtime/operators/hash/ReusingBuildSecondHashJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V
@1.14.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZZ)V
-#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V

+###org/apache/flink/runtime/operators/hash/AbstractMutableHashTable
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#getBuildSideSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getBuildSideComparator()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#open()V
+#close()V
+#abort()V
+#buildTable(Lorg/apache/flink/util/MutableObjectIterator;)V
+#getFreeMemory()Ljava/util/List;
+#insert(Ljava/lang/Object;)V
+#insertOrReplaceRecord(Ljava/lang/Object;Ljava/lang/Object;)V
+#getEntryIterator()Lorg/apache/flink/util/MutableObjectIterator;
+#getProber(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)Lorg/apache/flink/runtime/operators/hash/AbstractHashTableProber;
@0.9.1
+#insertOrReplaceRecord(Ljava/lang/Object;)V
-#buildTable(Lorg/apache/flink/util/MutableObjectIterator;)V
-#insertOrReplaceRecord(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/flink/runtime/operators/hash/AbstractHashTableProber
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)V
+#getMatchFor(Ljava/lang/Object;Ljava/lang/Object;)Z
+#updateMatch(Ljava/lang/Object;)V
@0.6.1-hadoop2-incubating
+#getMatchFor(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#getMatchFor(Ljava/lang/Object;Ljava/lang/Object;)Z
@1.14.0
+#getMatchFor(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/runtime/operators/hash/ReusingBuildSecondReOpenableHashJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZ)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
@1.14.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZZ)V
-#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V

+###org/apache/flink/runtime/operators/hash/InMemoryPartition
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/memorymanager/ListMemorySegmentSource;II)V
+#getPartitionNumber()I
+#setPartitionNumber(I)V
+#getBlockCount()I
+#getRecordCount()J
+#resetRecordCounter()V
+#resetRWViews()V
+#pushDownPages()V
+#resetOverflowBuckets()Ljava/util/ArrayList;
+#isCompacted()Z
+#setCompaction(Z)V
+#appendRecord(Ljava/lang/Object;)J
+#readRecordAt(JLjava/lang/Object;)V
+#overwriteRecordAt(JLjava/lang/Object;)V[deprecated]
+#clearAllMemory(Ljava/util/List;)V
+#allocateSegments(I)V
+#toString()Ljava/lang/String;
@0.6.1-hadoop2-incubating
+#readRecordAt(JLjava/lang/Object;)Ljava/lang/Object;
-#readRecordAt(JLjava/lang/Object;)V
@0.9.0-milestone-1
+#readRecordAt(J)Ljava/lang/Object;
@0.9.1
+#setIsCompacted(Z)V
-#setCompaction(Z)V
@0.10.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/memory/ListMemorySegmentSource;II)V
-#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/memorymanager/ListMemorySegmentSource;II)V

+###org/apache/flink/runtime/operators/hash/NonReusingBuildSecondHashJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V
@1.14.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZZ)V
-#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V

+###org/apache/flink/runtime/operators/hash/CompactingHashTable$EntryIterator
@0.6-hadoop2-incubating
+#next(Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0-milestone-1
+#next()Ljava/lang/Object;

+###org/apache/flink/runtime/operators/hash/CompactingHashTable$HashTableProber
@0.6-hadoop2-incubating
+#getMatchFor(Ljava/lang/Object;Ljava/lang/Object;)Z
+#updateMatch(Ljava/lang/Object;)V
@0.6.1-hadoop2-incubating
+#getMatchFor(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#getMatchFor(Ljava/lang/Object;Ljava/lang/Object;)Z
@0.9.0-milestone-1
+#getMatchFor(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/runtime/operators/hash/CompactingHashTable
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;)V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;I)V
+#open()V
+#close()V
+#abort()V
+#getFreeMemory()Ljava/util/List;
+#buildTable(Lorg/apache/flink/util/MutableObjectIterator;)V
+#insert(Ljava/lang/Object;)V
+#getProber(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)Lorg/apache/flink/runtime/operators/hash/CompactingHashTable$HashTableProber;
+#getEntryIterator()Lorg/apache/flink/util/MutableObjectIterator;
+#insertOrReplaceRecord(Ljava/lang/Object;Ljava/lang/Object;)V
+#getProber(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)Lorg/apache/flink/runtime/operators/hash/AbstractHashTableProber;
@0.9.0-milestone-1
+#buildTableWithUniqueKey(Lorg/apache/flink/util/MutableObjectIterator;)V
@0.9.1
+#insertOrReplaceRecord(Ljava/lang/Object;)V
-#buildTable(Lorg/apache/flink/util/MutableObjectIterator;)V
-#insertOrReplaceRecord(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/flink/runtime/operators/hash/InPlaceMutableHashTable$HashTableProber
@1.14.0
+#<init>(Lorg/apache/flink/runtime/operators/hash/InPlaceMutableHashTable;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)V
+#getMatchFor(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getMatchFor(Ljava/lang/Object;)Ljava/lang/Object;
+#updateMatch(Ljava/lang/Object;)V
+#insertAfterNoMatch(Ljava/lang/Object;)V

+###org/apache/flink/runtime/operators/hash/InPlaceMutableHashTable$EntryIterator
@1.14.0
+#<init>(Lorg/apache/flink/runtime/operators/hash/InPlaceMutableHashTable;)V
+#next(Ljava/lang/Object;)Ljava/lang/Object;
+#next()Ljava/lang/Object;

+###org/apache/flink/runtime/operators/hash/InPlaceMutableHashTable$ReduceFacade
@1.14.0
+#<init>(Lorg/apache/flink/runtime/operators/hash/InPlaceMutableHashTable;Lorg/apache/flink/api/common/functions/ReduceFunction;Lorg/apache/flink/util/Collector;Z)V
+#updateTableEntryWithReduce(Ljava/lang/Object;)V
+#emit()V
+#emitAndReset()V

+###org/apache/flink/runtime/operators/hash/InPlaceMutableHashTable
@1.14.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;)V
+#getCapacity()J
+#getOccupancy()J
+#open()V
+#close()V
+#abort()V
+#getFreeMemory()Ljava/util/List;
+#insertOrReplaceRecord(Ljava/lang/Object;)V
+#insert(Ljava/lang/Object;)V
+#getEntryIterator()Lorg/apache/flink/runtime/operators/hash/InPlaceMutableHashTable$EntryIterator;
+#getProber(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)Lorg/apache/flink/runtime/operators/hash/InPlaceMutableHashTable$HashTableProber;
+#getProber(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)Lorg/apache/flink/runtime/operators/hash/AbstractHashTableProber;
+#getEntryIterator()Lorg/apache/flink/util/MutableObjectIterator;

+###org/apache/flink/runtime/operators/hash/NonReusingBuildFirstHashJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V
@1.14.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZZ)V
-#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V

+###org/apache/flink/runtime/operators/hash/ReOpenableHashPartition
@0.6-hadoop2-incubating
+#finalizeProbePhase(Ljava/util/List;Ljava/util/List;)I
+#clearAllMemory(Ljava/util/List;)V
@1.14.0
+#finalizeProbePhase(Ljava/util/List;Ljava/util/List;Z)I
-#finalizeProbePhase(Ljava/util/List;Ljava/util/List;)I

+###org/apache/flink/runtime/operators/hash/NonReusingBuildSecondReOpenableHashJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZ)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
@1.14.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZZ)V
-#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V

+###org/apache/flink/runtime/operators/hash/NonReusingBuildFirstReOpenableHashJoinIterator
@0.10.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZ)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
@1.14.0
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZZ)V
-#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;DZZ)V

+###org/apache/flink/runtime/operators/GroupReduceCombineDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
+#getOversizedRecordCount()J
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/ResettableDriver
@0.10.0
+#isInputResettable(I)Z
+#initialize()V
+#reset()V
+#teardown()V

+###org/apache/flink/runtime/operators/FlatMapDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/AllGroupReduceDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/GroupReduceDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/DataSourceTask
@0.6-hadoop2-incubating
+#<init>()V
+#registerInputOutput()V
+#invoke()V
+#cancel()V
+#setUserCodeClassLoader(Ljava/lang/ClassLoader;)V
@0.7.0-hadoop2-incubating
-#setUserCodeClassLoader(Ljava/lang/ClassLoader;)V
@0.10.0
+#createRuntimeContext()Lorg/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/execution/Environment;)V
+#cancel()Ljava/util/concurrent/Future;
-#<init>()V
-#registerInputOutput()V
-#cancel()V
@1.15.0
+#cancel()V
-#cancel()Ljava/util/concurrent/Future;

+###org/apache/flink/runtime/operators/CoGroupRawDriver$SimpleIterable$SimpleIterator
@0.9.0
+#<init>(Lorg/apache/flink/runtime/operators/CoGroupRawDriver$SimpleIterable;Ljava/lang/Object;Lorg/apache/flink/util/MutableObjectIterator;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/apache/flink/runtime/operators/CoGroupRawDriver$SimpleIterable
@0.9.0
+#<init>(Ljava/lang/Object;Lorg/apache/flink/util/MutableObjectIterator;)V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/runtime/operators/CoGroupRawDriver
@0.9.0
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getNumberOfDriverComparators()I
+#getStubType()Ljava/lang/Class;
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/MapDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/MapPartitionDriver
@0.7.0-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#getNumberOfDriverComparators()I
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/LeftOuterJoinDriver
@0.10.0
+#<init>()V

+###org/apache/flink/runtime/operators/AbstractOuterJoinDriver
@0.10.0
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#getNumberOfDriverComparators()I
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V

+###org/apache/flink/runtime/operators/NoOpDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/JoinWithSolutionSetFirstDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#isInputResettable(I)Z
+#initialize()V
+#prepare()V
+#run()V
+#cleanup()V
+#reset()V
+#teardown()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/DataSinkTask
@0.6-hadoop2-incubating
+#<init>()V
+#registerInputOutput()V
+#invoke()V
+#cancel()V
+#setUserCodeClassLoader(Ljava/lang/ClassLoader;)V
@0.7.0-hadoop2-incubating
-#setUserCodeClassLoader(Ljava/lang/ClassLoader;)V
@0.10.0
+#createRuntimeContext()Lorg/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/execution/Environment;)V
+#cancel()Ljava/util/concurrent/Future;
-#<init>()V
-#registerInputOutput()V
-#cancel()V
@1.15.0
+#cancel()V
-#cancel()Ljava/util/concurrent/Future;

+###org/apache/flink/runtime/operators/UnionWithTempOperator
@0.9.0-milestone-1
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getNumberOfDriverComparators()I
+#getStubType()Ljava/lang/Class;
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/CoGroupDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/FullOuterJoinDriver
@0.10.0
+#<init>()V

+###org/apache/flink/runtime/operators/BuildSecondCachedJoinDriver
@0.10.0
+#<init>()V

+###org/apache/flink/runtime/operators/AbstractCachedBuildSideJoinDriver
@0.10.0
+#isInputResettable(I)Z
+#initialize()V
+#prepare()V
+#run()V
+#cleanup()V
+#reset()V
+#teardown()V
+#cancel()V

+###org/apache/flink/runtime/operators/JoinDriver
@0.10.0
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#getNumberOfDriverComparators()I
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V

+###org/apache/flink/runtime/operators/RightOuterJoinDriver
@0.10.0
+#<init>()V

+###org/apache/flink/runtime/operators/udf/RemoveRangeIndex
@1.14.0
+#<init>()V
+#map(Lorg/apache/flink/api/java/tuple/Tuple2;)Ljava/lang/Object;
+#map(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/runtime/operators/udf/RangeBoundaryBuilder
@1.14.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeComparatorFactory;I)V
+#mapPartition(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/runtime/operators/udf/AssignRangeIndex
@1.14.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeComparatorFactory;)V
+#mapPartition(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/runtime/operators/ReduceDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/ReduceCombineDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/CoGroupWithSolutionSetSecondDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#isInputResettable(I)Z
+#initialize()V
+#prepare()V
+#run()V
+#cleanup()V
+#reset()V
+#teardown()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/BuildFirstCachedJoinDriver
@0.10.0
+#<init>()V

+###org/apache/flink/runtime/operators/NoOpChainedDriver
@1.14.0
+#<init>()V
+#setup(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#openTask()V
+#closeTask()V
+#cancelTask()V
+#getStub()Lorg/apache/flink/api/common/functions/Function;
+#getTaskName()Ljava/lang/String;
+#collect(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/runtime/operators/CoGroupWithSolutionSetFirstDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#isInputResettable(I)Z
+#initialize()V
+#prepare()V
+#run()V
+#cleanup()V
+#reset()V
+#teardown()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/CrossDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/JoinWithSolutionSetSecondDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#isInputResettable(I)Z
+#initialize()V
+#prepare()V
+#run()V
+#cleanup()V
+#reset()V
+#teardown()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/AllGroupCombineDriver
@0.9.0-milestone-1
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#getNumberOfDriverComparators()I
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/operators/AllReduceDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V

+###org/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoSamplesRequest
@1.14.0
+#<init>(IILjava/time/Duration;I)V
+#getRequestId()I
+#getNumSamples()I
+#getDelayBetweenSamples()Ljava/time/Duration;
+#getMaxStackTraceDepth()I

+###org/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTracker
@1.14.0
+#getVertexStats(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/AccessExecutionJobVertex;)Ljava/util/Optional;
+#shutDown()V

+###org/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoStats
@1.14.0
+#<init>(IJJLjava/util/Map;)V
+#getRequestId()I
+#getStartTime()J
+#getEndTime()J
+#getSamplesBySubtask()Ljava/util/Map;
+#getNumberOfSubtasks()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoRequestCoordinator
@1.14.0
+#<init>(Ljava/util/concurrent/Executor;Ljava/time/Duration;)V
+#triggerThreadInfoRequest(Ljava/util/Map;ILjava/time/Duration;I)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraphFactory
@1.14.0
+#<init>()V
+#createFullFlameGraphFrom(Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoStats;)Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraph;
+#createOffCpuFlameGraph(Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoStats;)Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraph;
+#createOnCpuFlameGraph(Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoStats;)Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraph;

+###org/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraph$Node
@1.14.0
+#getStackTraceLocation()Ljava/lang/String;
+#getHitCount()I
+#getChildren()Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraph
@1.14.0
+#<init>(JLorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraph$Node;)V
+#getEndTime()J
+#getRoot()Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraph$Node;
+#toString()Ljava/lang/String;
+#terminated()Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraph;
+#disabled()Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraph;
+#waiting()Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexFlameGraph;

+###org/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTrackerBuilder
@1.14.0
+#setCoordinator(Lorg/apache/flink/runtime/webmonitor/threadinfo/ThreadInfoRequestCoordinator;)Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTrackerBuilder;
+#setCleanUpInterval(Ljava/time/Duration;)Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTrackerBuilder;
+#setNumSamples(I)Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTrackerBuilder;
+#setStatsRefreshInterval(Ljava/time/Duration;)Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTrackerBuilder;
+#setDelayBetweenSamples(Ljava/time/Duration;)Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTrackerBuilder;
+#setMaxThreadInfoDepth(I)Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTrackerBuilder;
+#build()Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTracker;
+#newBuilder(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Ljava/util/function/Function;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/flink/api/common/time/Time;)Lorg/apache/flink/runtime/webmonitor/threadinfo/JobVertexThreadInfoTrackerBuilder;

+###org/apache/flink/runtime/webmonitor/retriever/LeaderGatewayRetriever
@1.14.0
+#<init>()V
+#getFuture()Ljava/util/concurrent/CompletableFuture;
+#notifyNewLeaderAddress(Ljava/util/concurrent/CompletableFuture;)V

+###org/apache/flink/runtime/webmonitor/retriever/LeaderRetriever
@1.14.0
+#<init>()V
+#getLeaderNow()Ljava/util/Optional;
+#getLeaderFuture()Ljava/util/concurrent/CompletableFuture;
+#notifyLeaderAddress(Ljava/lang/String;Ljava/util/UUID;)V
+#handleError(Ljava/lang/Exception;)V

+###org/apache/flink/runtime/webmonitor/retriever/GatewayRetriever
@1.14.0
+#getFuture()Ljava/util/concurrent/CompletableFuture;
+#getNow()Ljava/util/Optional;

+###org/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceGateway
@1.14.0
+#queryMetrics(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever
@1.14.0
+#retrieveService(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/webmonitor/retriever/impl/RpcGatewayRetriever
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;Ljava/lang/Class;Ljava/util/function/Function;Lorg/apache/flink/util/concurrent/RetryStrategy;)V

+###org/apache/flink/runtime/webmonitor/retriever/impl/RpcMetricQueryServiceRetriever
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcService;)V
+#retrieveService(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/webmonitor/RestfulGateway
@1.14.0
+#cancelJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestExecutionGraphInfo(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobResult(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestMultipleJobDetails(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestClusterOverview(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestMetricQueryServiceAddresses(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerMetricQueryServiceAddresses(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#disposeSavepoint(Ljava/lang/String;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobStatus(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#shutDownCluster()Ljava/util/concurrent/CompletableFuture;
+#deliverCoordinationRequestToCoordinator(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#requestThreadDump(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Lorg/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Lorg/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey;Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;Lorg/apache/flink/runtime/dispatcher/TriggerSavepointMode;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#getTriggeredSavepointStatus(Lorg/apache/flink/runtime/rest/handler/job/AsynchronousJobOperationKey;)Ljava/util/concurrent/CompletableFuture;
-#triggerSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
-#stopWithSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/webmonitor/history/OnlyExecutionGraphJsonArchivist
@1.14.0
+#archiveJsonWithPath(Lorg/apache/flink/runtime/executiongraph/AccessExecutionGraph;)Ljava/util/Collection;
+#archiveJsonWithPath(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)Ljava/util/Collection;

+###org/apache/flink/runtime/webmonitor/history/JsonArchivist
@1.14.0
+#archiveJsonWithPath(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)Ljava/util/Collection;

+###org/apache/flink/runtime/webmonitor/history/ArchivedJson
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/rest/messages/ResponseBody;)V
+#getPath()Ljava/lang/String;
+#getJson()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/webmonitor/history/HistoryServerUtils
@1.14.0
+#values()[Lorg/apache/flink/runtime/webmonitor/history/HistoryServerUtils;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/webmonitor/history/HistoryServerUtils;
+#isSSLEnabled(Lorg/apache/flink/configuration/Configuration;)Z
+#getHistoryServerURL(Lorg/apache/flink/configuration/Configuration;)Ljava/util/Optional;

+###org/apache/flink/runtime/webmonitor/WebMonitorEndpoint
@1.14.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rest/handler/RestHandlerConfiguration;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/TransientBlobService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcher;Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/rest/handler/legacy/ExecutionGraphCache;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V
+#startInternal()V
+#grantLeadership(Ljava/util/UUID;)V
+#revokeLeadership()V
+#getDescription()Ljava/lang/String;
+#handleError(Ljava/lang/Exception;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)Ljava/util/Collection;
+#createExecutorService(IILjava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;

+###org/apache/flink/runtime/webmonitor/stats/JobVertexStatsTracker
@1.14.0
+#getVertexStats(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/AccessExecutionJobVertex;)Ljava/util/Optional;
+#shutDown()V

+###org/apache/flink/runtime/webmonitor/stats/Statistics
@1.14.0
+#getEndTime()J

+###org/apache/flink/runtime/webmonitor/stats/TaskStatsRequestCoordinator$PendingStatsRequest
@1.14.0
+#getStatsFuture()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/webmonitor/stats/TaskStatsRequestCoordinator
@1.14.0
+#<init>(Ljava/util/concurrent/Executor;Ljava/time/Duration;)V
+#handleFailedResponse(ILjava/lang/Throwable;)V
+#shutDown()V
+#handleSuccessfulResponse(ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Object;)V
+#getNumberOfPendingRequests()I
@1.16.0
+#handleSuccessfulResponse(ILorg/apache/flink/shaded/guava30/com/google/common/collect/ImmutableSet;Ljava/lang/Object;)V
-#handleSuccessfulResponse(ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Object;)V

+###org/apache/flink/runtime/webmonitor/WebMonitorExtension$EmptyWebMonitorExtension
@1.14.0
+#values()[Lorg/apache/flink/runtime/webmonitor/WebMonitorExtension$EmptyWebMonitorExtension;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/webmonitor/WebMonitorExtension$EmptyWebMonitorExtension;
+#getHandlers()Ljava/util/Collection;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/webmonitor/WebMonitorExtension
@1.14.0
+#getHandlers()Ljava/util/Collection;
+#empty()Lorg/apache/flink/runtime/webmonitor/WebMonitorExtension;

+###org/apache/flink/runtime/webmonitor/WebMonitorUtils$LogFileLocation
@0.10.2
+#find(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/webmonitor/WebMonitorUtils$LogFileLocation;

+###org/apache/flink/runtime/webmonitor/WebMonitorUtils
@0.10.0
+#startWebRuntimeMonitor(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lakka/actor/ActorSystem;)Lorg/apache/flink/runtime/webmonitor/WebMonitor;
+#fromKeyValueJsonArray(Lorg/codehaus/jettison/json/JSONArray;)Ljava/util/Map;
+#createDetailsForJob(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
@1.14.0
+#tryLoadWebContent(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/io/File;)Ljava/util/Optional;
+#loadWebSubmissionExtension(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Ljava/util/concurrent/CompletableFuture;Ljava/nio/file/Path;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/webmonitor/WebMonitorExtension;
+#fromKeyValueJsonArray(Ljava/lang/String;)Ljava/util/Map;
-#startWebRuntimeMonitor(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lakka/actor/ActorSystem;)Lorg/apache/flink/runtime/webmonitor/WebMonitor;
-#fromKeyValueJsonArray(Lorg/codehaus/jettison/json/JSONArray;)Ljava/util/Map;
-#createDetailsForJob(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
@1.16.0
-#fromKeyValueJsonArray(Ljava/lang/String;)Ljava/util/Map;

+###org/apache/flink/runtime/shuffle/ShuffleDescriptor
@1.14.0
+#getResultPartitionID()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#isUnknown()Z
+#storesLocalResourcesOn()Ljava/util/Optional;

+###org/apache/flink/runtime/shuffle/PartitionDescriptor
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;ILorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;II)V
+#getResultId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getTotalNumberOfPartitions()I
+#getPartitionId()Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;
+#getPartitionType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
+#getNumberOfSubpartitions()I
+#toString()Ljava/lang/String;
+#from(Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;)Lorg/apache/flink/runtime/shuffle/PartitionDescriptor;
@1.16.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;ILorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;IIZZ)V
+#isBroadcast()Z
+#isAllToAllDistribution()Z
-#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;ILorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;II)V

+###org/apache/flink/runtime/shuffle/ShuffleMaster
@1.14.0
+#start()V
+#close()V
+#registerJob(Lorg/apache/flink/runtime/shuffle/JobShuffleContext;)V
+#unregisterJob(Lorg/apache/flink/api/common/JobID;)V
+#registerPartitionWithProducer(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/shuffle/PartitionDescriptor;Lorg/apache/flink/runtime/shuffle/ProducerDescriptor;)Ljava/util/concurrent/CompletableFuture;
+#releasePartitionExternally(Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;)V
+#computeShuffleMemorySizeForTask(Lorg/apache/flink/runtime/shuffle/TaskInputsOutputsDescriptor;)Lorg/apache/flink/configuration/MemorySize;

+###org/apache/flink/runtime/shuffle/JobShuffleContext
@1.14.0
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#stopTrackingAndReleasePartitions(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/shuffle/ProducerDescriptor
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/net/InetAddress;I)V
+#getProducerLocation()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getProducerExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getAddress()Ljava/net/InetAddress;
+#getDataPort()I
+#create(Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/shuffle/ProducerDescriptor;

+###org/apache/flink/runtime/shuffle/TaskInputsOutputsDescriptor
@1.14.0
+#getInputChannelNums()Ljava/util/Map;
+#getSubpartitionNums()Ljava/util/Map;
+#getPartitionTypes()Ljava/util/Map;
+#from(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Lorg/apache/flink/runtime/shuffle/TaskInputsOutputsDescriptor;
@1.16.0
+#getInputGateNums()I
+#from(ILjava/util/Map;Ljava/util/Map;Ljava/util/Map;)Lorg/apache/flink/runtime/shuffle/TaskInputsOutputsDescriptor;
-#from(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Lorg/apache/flink/runtime/shuffle/TaskInputsOutputsDescriptor;

+###org/apache/flink/runtime/shuffle/NettyShuffleDescriptor$PartitionConnectionInfo
@1.14.0
+#getConnectionId()Lorg/apache/flink/runtime/io/network/ConnectionID;
@1.16.1
+#getAddress()Ljava/net/InetSocketAddress;
+#getConnectionIndex()I
-#getConnectionId()Lorg/apache/flink/runtime/io/network/ConnectionID;

+###org/apache/flink/runtime/shuffle/NettyShuffleDescriptor$NetworkPartitionConnectionInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/ConnectionID;)V
+#getConnectionId()Lorg/apache/flink/runtime/io/network/ConnectionID;
@1.16.1
+#<init>(Ljava/net/InetSocketAddress;I)V
+#getAddress()Ljava/net/InetSocketAddress;
+#getConnectionIndex()I
-#<init>(Lorg/apache/flink/runtime/io/network/ConnectionID;)V
-#getConnectionId()Lorg/apache/flink/runtime/io/network/ConnectionID;

+###org/apache/flink/runtime/shuffle/NettyShuffleDescriptor$LocalExecutionPartitionConnectionInfo
@1.14.0
+#values()[Lorg/apache/flink/runtime/shuffle/NettyShuffleDescriptor$LocalExecutionPartitionConnectionInfo;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/shuffle/NettyShuffleDescriptor$LocalExecutionPartitionConnectionInfo;
+#getConnectionId()Lorg/apache/flink/runtime/io/network/ConnectionID;
@1.16.1
+#getAddress()Ljava/net/InetSocketAddress;
+#getConnectionIndex()I
-#getConnectionId()Lorg/apache/flink/runtime/io/network/ConnectionID;

+###org/apache/flink/runtime/shuffle/NettyShuffleDescriptor
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/shuffle/NettyShuffleDescriptor$PartitionConnectionInfo;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#getConnectionId()Lorg/apache/flink/runtime/io/network/ConnectionID;
+#getResultPartitionID()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#storesLocalResourcesOn()Ljava/util/Optional;
+#isLocalTo(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z

+###org/apache/flink/runtime/shuffle/ShuffleServiceOptions
@1.14.0

+###org/apache/flink/runtime/shuffle/ShuffleServiceLoader
@1.14.0
+#values()[Lorg/apache/flink/runtime/shuffle/ShuffleServiceLoader;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/shuffle/ShuffleServiceLoader;
+#loadShuffleServiceFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/shuffle/ShuffleServiceFactory;

+###org/apache/flink/runtime/shuffle/ShuffleServiceFactory
@1.14.0
+#createShuffleMaster(Lorg/apache/flink/runtime/shuffle/ShuffleMasterContext;)Lorg/apache/flink/runtime/shuffle/ShuffleMaster;
+#createShuffleEnvironment(Lorg/apache/flink/runtime/shuffle/ShuffleEnvironmentContext;)Lorg/apache/flink/runtime/shuffle/ShuffleEnvironment;

+###org/apache/flink/runtime/shuffle/ShuffleMasterContext
@1.14.0
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#onFatalError(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/shuffle/ShuffleEnvironmentContext
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/configuration/MemorySize;ZLjava/net/InetAddress;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/concurrent/Executor;)V
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getTaskExecutorResourceId()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getNetworkMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#isLocalCommunicationOnly()Z
+#getHostAddress()Ljava/net/InetAddress;
+#getEventPublisher()Lorg/apache/flink/runtime/io/network/TaskEventPublisher;
+#getParentMetricGroup()Lorg/apache/flink/metrics/MetricGroup;
+#getIoExecutor()Ljava/util/concurrent/Executor;
@1.16.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/configuration/MemorySize;ZLjava/net/InetAddress;I[Ljava/lang/String;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/concurrent/Executor;)V
+#getNumberOfSlots()I
+#getTmpDirPaths()[Ljava/lang/String;
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/configuration/MemorySize;ZLjava/net/InetAddress;Lorg/apache/flink/runtime/io/network/TaskEventPublisher;Lorg/apache/flink/metrics/MetricGroup;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/shuffle/ShuffleEnvironment
@1.14.0
+#start()I
+#createShuffleIOOwnerContext(Ljava/lang/String;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/metrics/MetricGroup;)Lorg/apache/flink/runtime/shuffle/ShuffleIOOwnerContext;
+#createResultPartitionWriters(Lorg/apache/flink/runtime/shuffle/ShuffleIOOwnerContext;Ljava/util/List;)Ljava/util/List;
+#releasePartitionsLocally(Ljava/util/Collection;)V
+#getPartitionsOccupyingLocalResources()Ljava/util/Collection;
+#createInputGates(Lorg/apache/flink/runtime/shuffle/ShuffleIOOwnerContext;Lorg/apache/flink/runtime/io/network/partition/PartitionProducerStateProvider;Ljava/util/List;)Ljava/util/List;
+#updatePartitionInfo(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/executiongraph/PartitionInfo;)Z

+###org/apache/flink/runtime/shuffle/ShuffleIOOwnerContext
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/metrics/MetricGroup;)V
+#getOwnerName()Ljava/lang/String;
+#getExecutionAttemptID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getParentGroup()Lorg/apache/flink/metrics/MetricGroup;
+#getOutputGroup()Lorg/apache/flink/metrics/MetricGroup;
+#getInputGroup()Lorg/apache/flink/metrics/MetricGroup;

+###org/apache/flink/runtime/shuffle/ShuffleMasterContextImpl
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#onFatalError(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/shuffle/ShuffleUtils
@1.14.0
+#applyWithShuffleTypeCheck(Ljava/lang/Class;Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object;

+###org/apache/flink/runtime/shuffle/UnknownShuffleDescriptor
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#getResultPartitionID()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#isUnknown()Z
+#storesLocalResourcesOn()Ljava/util/Optional;

+###org/apache/flink/runtime/shuffle/JobShuffleContextImpl
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/JobMasterGateway;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#stopTrackingAndReleasePartitions(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/shuffle/NettyShuffleUtils
@1.14.0
+#getNetworkBuffersPerInputChannel(I)I
+#getMinMaxFloatingBuffersPerInputGate(I)Lorg/apache/commons/lang3/tuple/Pair;
+#getMinMaxNetworkBuffersPerResultPartition(IIIIILorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/commons/lang3/tuple/Pair;
+#computeNetworkBuffersForAnnouncing(IIIIIILjava/util/Map;Ljava/util/Map;)I

+###org/apache/flink/runtime/shuffle/NettyShuffleMaster
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
+#registerPartitionWithProducer(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/shuffle/PartitionDescriptor;Lorg/apache/flink/runtime/shuffle/ProducerDescriptor;)Ljava/util/concurrent/CompletableFuture;
+#releasePartitionExternally(Lorg/apache/flink/runtime/shuffle/ShuffleDescriptor;)V
+#computeShuffleMemorySizeForTask(Lorg/apache/flink/runtime/shuffle/TaskInputsOutputsDescriptor;)Lorg/apache/flink/configuration/MemorySize;

+###org/apache/flink/runtime/execution/ExecutionState
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/execution/ExecutionState;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/execution/ExecutionState;
@0.9.0-milestone-1
+#isTerminal()Z

+###org/apache/flink/runtime/execution/Environment
@0.6-hadoop2-incubating
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getTaskConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getCurrentNumberOfSubtasks()I
+#getIndexInSubtaskGroup()I
+#userThreadStarted(Ljava/lang/Thread;)V
+#userThreadFinished(Ljava/lang/Thread;)V
+#getInputSplitProvider()Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;
+#getIOManager()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;
+#getMemoryManager()Lorg/apache/flink/runtime/memorymanager/MemoryManager;
+#getTaskName()Ljava/lang/String;
+#getNextUnboundInputGateID()Lorg/apache/flink/runtime/io/network/gates/GateID;
+#getNumberOfOutputGates()I
+#getNumberOfInputGates()I
+#getNumberOfOutputChannels()I
+#getNumberOfInputChannels()I
+#createAndRegisterOutputGate()Lorg/apache/flink/runtime/io/network/gates/OutputGate;
+#createAndRegisterInputGate()Lorg/apache/flink/runtime/io/network/gates/InputGate;
+#getOutputChannelIDs()Ljava/util/Set;
+#getInputChannelIDs()Ljava/util/Set;
+#getOutputGateIDs()Ljava/util/Set;
+#getInputGateIDs()Ljava/util/Set;
+#getOutputChannelIDsOfGate(Lorg/apache/flink/runtime/io/network/gates/GateID;)Ljava/util/Set;
+#getInputChannelIDsOfGate(Lorg/apache/flink/runtime/io/network/gates/GateID;)Ljava/util/Set;
+#getAccumulatorProtocolProxy()Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;
+#getOutputBufferProvider()Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider;
+#getCopyTask()Ljava/util/Map;
@0.7.0-hadoop2-incubating
+#getUserClassLoader()Ljava/lang/ClassLoader;
-#userThreadStarted(Ljava/lang/Thread;)V
-#userThreadFinished(Ljava/lang/Thread;)V
@0.8.0
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getBroadcastVariableManager()Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;
@0.9.0-milestone-1
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getNumberOfSubtasks()I
+#getTaskNameWithSubtasks()Ljava/lang/String;
+#getJobManager()Lakka/actor/ActorRef;
+#getWriter(I)Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
+#getAllWriters()[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
+#getInputGate(I)Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;
+#getAllInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
-#getCurrentNumberOfSubtasks()I
-#getNextUnboundInputGateID()Lorg/apache/flink/runtime/io/network/gates/GateID;
-#getNumberOfOutputGates()I
-#getNumberOfInputGates()I
-#getNumberOfOutputChannels()I
-#getNumberOfInputChannels()I
-#createAndRegisterOutputGate()Lorg/apache/flink/runtime/io/network/gates/OutputGate;
-#createAndRegisterInputGate()Lorg/apache/flink/runtime/io/network/gates/InputGate;
-#getOutputChannelIDs()Ljava/util/Set;
-#getInputChannelIDs()Ljava/util/Set;
-#getOutputGateIDs()Ljava/util/Set;
-#getInputGateIDs()Ljava/util/Set;
-#getOutputChannelIDsOfGate(Lorg/apache/flink/runtime/io/network/gates/GateID;)Ljava/util/Set;
-#getInputChannelIDsOfGate(Lorg/apache/flink/runtime/io/network/gates/GateID;)Ljava/util/Set;
-#getAccumulatorProtocolProxy()Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;
-#getOutputBufferProvider()Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider;
@0.9.0
+#getExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getDistributedCacheEntries()Ljava/util/Map;
+#reportAccumulators(Ljava/util/Map;)V
+#acknowledgeCheckpoint(J)V
+#acknowledgeCheckpoint(JLorg/apache/flink/runtime/state/StateHandle;)V
-#getJobManager()Lakka/actor/ActorRef;
-#getCopyTask()Ljava/util/Map;
@0.10.0
+#getTaskManagerInfo()Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;
+#getMemoryManager()Lorg/apache/flink/runtime/memory/MemoryManager;
+#getAccumulatorRegistry()Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry;
-#getMemoryManager()Lorg/apache/flink/runtime/memorymanager/MemoryManager;
-#reportAccumulators(Ljava/util/Map;)V
@1.14.0
+#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
+#getMetricGroup()Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
+#getTaskInfo()Lorg/apache/flink/api/common/TaskInfo;
+#getOperatorCoordinatorEventGateway()Lorg/apache/flink/runtime/jobgraph/tasks/TaskOperatorEventGateway;
+#getUserCodeClassLoader()Lorg/apache/flink/util/UserCodeClassLoader;
+#getTaskStateManager()Lorg/apache/flink/runtime/state/TaskStateManager;
+#getGlobalAggregateManager()Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;
+#getExternalResourceInfoProvider()Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;
+#getTaskKvStateRegistry()Lorg/apache/flink/runtime/query/TaskKvStateRegistry;
+#acknowledgeCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#acknowledgeCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#declineCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V
+#failExternally(Ljava/lang/Throwable;)V
+#getInputGate(I)Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;
+#getAllInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;
+#getTaskEventDispatcher()Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;
+#getThroughputCalculator()Lorg/apache/flink/runtime/throughput/ThroughputCalculator;
+#setMainMailboxExecutor(Lorg/apache/flink/api/common/operators/MailboxExecutor;)V
+#getMainMailboxExecutor()Lorg/apache/flink/api/common/operators/MailboxExecutor;
+#setAsyncOperationsThreadPool(Ljava/util/concurrent/ExecutorService;)V
+#getAsyncOperationsThreadPool()Ljava/util/concurrent/ExecutorService;
-#getNumberOfSubtasks()I
-#getIndexInSubtaskGroup()I
-#getTaskName()Ljava/lang/String;
-#getTaskNameWithSubtasks()Ljava/lang/String;
-#getUserClassLoader()Ljava/lang/ClassLoader;
-#acknowledgeCheckpoint(J)V
-#acknowledgeCheckpoint(JLorg/apache/flink/runtime/state/StateHandle;)V
-#getInputGate(I)Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;
-#getAllInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;
@1.15.0
+#setCheckpointStorageAccess(Lorg/apache/flink/runtime/state/CheckpointStorageAccess;)V
+#getCheckpointStorageAccess()Lorg/apache/flink/runtime/state/CheckpointStorageAccess;
-#getThroughputCalculator()Lorg/apache/flink/runtime/throughput/ThroughputCalculator;

+###org/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderHandle
@1.14.0
+#getOrResolveClassLoader(Ljava/util/Collection;Ljava/util/Collection;)Lorg/apache/flink/util/UserCodeClassLoader;

+###org/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderLease
@1.14.0
+#release()V

+###org/apache/flink/runtime/execution/librarycache/LibraryCacheManager
@0.6-hadoop2-incubating
+#register(Lorg/apache/flink/runtime/jobgraph/JobID;[Lorg/apache/flink/core/fs/Path;)V
+#register(Lorg/apache/flink/runtime/jobgraph/JobID;[Ljava/lang/String;)V
+#unregister(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#contains(Ljava/lang/String;)Lorg/apache/flink/core/fs/Path;
+#getClassLoader(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/lang/ClassLoader;
+#getRequiredJarFiles(Lorg/apache/flink/runtime/jobgraph/JobID;)[Ljava/lang/String;
+#writeLibraryToStream(Ljava/lang/String;Ljava/io/DataOutput;)V
+#readLibraryFromStream(Ljava/io/DataInput;)V
+#addLibrary(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/core/fs/Path;JLjava/io/DataInput;)V
@0.7.0-hadoop2-incubating
+#getFile(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/File;
+#register(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
+#shutdown()V
-#register(Lorg/apache/flink/runtime/jobgraph/JobID;[Lorg/apache/flink/core/fs/Path;)V
-#register(Lorg/apache/flink/runtime/jobgraph/JobID;[Ljava/lang/String;)V
-#contains(Ljava/lang/String;)Lorg/apache/flink/core/fs/Path;
-#getRequiredJarFiles(Lorg/apache/flink/runtime/jobgraph/JobID;)[Ljava/lang/String;
-#writeLibraryToStream(Ljava/lang/String;Ljava/io/DataOutput;)V
-#readLibraryFromStream(Ljava/io/DataInput;)V
-#addLibrary(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/core/fs/Path;JLjava/io/DataInput;)V
@0.8.0
+#registerJob(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
+#registerTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
+#unregisterTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#unregisterJob(Lorg/apache/flink/runtime/jobgraph/JobID;)V
-#register(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
-#unregister(Lorg/apache/flink/runtime/jobgraph/JobID;)V
@0.9.0-milestone-1
+#getClassLoader(Lorg/apache/flink/api/common/JobID;)Ljava/lang/ClassLoader;
+#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)V
+#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
+#unregisterTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#unregisterJob(Lorg/apache/flink/api/common/JobID;)V
-#getClassLoader(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/lang/ClassLoader;
-#registerJob(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
-#registerTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
-#unregisterTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#unregisterJob(Lorg/apache/flink/runtime/jobgraph/JobID;)V
@0.10.0
+#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;Ljava/util/Collection;)V
+#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;Ljava/util/Collection;)V
-#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)V
-#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
@1.14.0
+#registerClassLoaderLease(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderLease;
-#getClassLoader(Lorg/apache/flink/api/common/JobID;)Ljava/lang/ClassLoader;
-#getFile(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/File;
-#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;Ljava/util/Collection;)V
-#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;Ljava/util/Collection;)V
-#unregisterTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#unregisterJob(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ResolveOrder
@1.14.0
+#values()[Lorg/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ResolveOrder;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ResolveOrder;
+#fromString(Ljava/lang/String;)Lorg/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ResolveOrder;
@1.16.0
-###org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ResolveOrder

+###org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ParentFirstClassLoader
@1.14.0
@1.16.0
-###org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ParentFirstClassLoader

+###org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders
@1.14.0
+#parentFirst([Ljava/net/URL;Ljava/lang/ClassLoader;Ljava/util/function/Consumer;Z)Ljava/net/URLClassLoader;
+#childFirst([Ljava/net/URL;Ljava/lang/ClassLoader;[Ljava/lang/String;Ljava/util/function/Consumer;Z)Ljava/net/URLClassLoader;
+#create(Lorg/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ResolveOrder;[Ljava/net/URL;Ljava/lang/ClassLoader;[Ljava/lang/String;Ljava/util/function/Consumer;Z)Ljava/net/URLClassLoader;
@1.16.0
-###org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders

+###org/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager$ClassLoaderFactory
@1.14.0
+#createClassLoader([Ljava/net/URL;)Ljava/net/URLClassLoader;

+###org/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/blob/BlobService;Lorg/apache/flink/configuration/Configuration;)V
+#register(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
+#unregister(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#getClassLoader(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/lang/ClassLoader;
+#getFile(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/File;
+#getBlobServerPort()I
+#shutdown()V
+#run()V
@0.8.0
+#registerJob(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
+#registerTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
+#unregisterJob(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#unregisterTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#getNumberOfReferenceHolders(Lorg/apache/flink/runtime/jobgraph/JobID;)I
-#register(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
-#unregister(Lorg/apache/flink/runtime/jobgraph/JobID;)V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/blob/BlobService;J)V
+#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)V
+#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
+#unregisterJob(Lorg/apache/flink/api/common/JobID;)V
+#unregisterTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#getClassLoader(Lorg/apache/flink/api/common/JobID;)Ljava/lang/ClassLoader;
+#getNumberOfReferenceHolders(Lorg/apache/flink/api/common/JobID;)I
-#<init>(Lorg/apache/flink/runtime/blob/BlobService;Lorg/apache/flink/configuration/Configuration;)V
-#registerJob(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
-#registerTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
-#unregisterJob(Lorg/apache/flink/runtime/jobgraph/JobID;)V
-#unregisterTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#getClassLoader(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/lang/ClassLoader;
-#getNumberOfReferenceHolders(Lorg/apache/flink/runtime/jobgraph/JobID;)I
@0.10.0
+#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;Ljava/util/Collection;)V
+#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;Ljava/util/Collection;)V
-#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)V
-#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/blob/PermanentBlobService;Lorg/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager$ClassLoaderFactory;)V
+#registerClassLoaderLease(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderLease;
+#defaultClassLoaderFactory(Lorg/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ResolveOrder;[Ljava/lang/String;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Z)Lorg/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager$ClassLoaderFactory;
-#<init>(Lorg/apache/flink/runtime/blob/BlobService;J)V
-#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;Ljava/util/Collection;)V
-#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;Ljava/util/Collection;)V
-#unregisterJob(Lorg/apache/flink/api/common/JobID;)V
-#unregisterTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#getClassLoader(Lorg/apache/flink/api/common/JobID;)Ljava/lang/ClassLoader;
-#getFile(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/File;
-#getBlobServerPort()I
-#run()V
-#getNumberOfReferenceHolders(Lorg/apache/flink/api/common/JobID;)I
@1.16.0
+#defaultClassLoaderFactory(Lorg/apache/flink/util/FlinkUserCodeClassLoaders$ResolveOrder;[Ljava/lang/String;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Z)Lorg/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager$ClassLoaderFactory;
-#defaultClassLoaderFactory(Lorg/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders$ResolveOrder;[Ljava/lang/String;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Z)Lorg/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager$ClassLoaderFactory;

+###org/apache/flink/runtime/execution/SuppressRestartsException
@1.14.0
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/execution/CancelTaskException
@0.6-hadoop2-incubating
+#<init>()V
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;)V
@0.10.0
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/scheduler/strategy/ConsumerVertexGroup
@1.14.0
+#fromMultipleVertices(Ljava/util/List;)Lorg/apache/flink/runtime/scheduler/strategy/ConsumerVertexGroup;
+#fromSingleVertex(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/scheduler/strategy/ConsumerVertexGroup;
+#iterator()Ljava/util/Iterator;
+#size()I
+#isEmpty()Z
+#getFirst()Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;

+###org/apache/flink/runtime/scheduler/strategy/ExecutionVertexID
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;I)V
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getSubtaskIndex()I
+#writeTo(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)V
+#fromByteBuf(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup
@1.14.0
+#fromMultiplePartitions(Ljava/util/List;)Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;
+#fromSinglePartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;
+#iterator()Ljava/util/Iterator;
+#size()I
+#isEmpty()Z
+#getFirst()Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;
+#getIntermediateDataSetID()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#partitionUnfinished()I
+#partitionFinished()I
+#getNumberOfUnfinishedPartitions()I
+#areAllPartitionsFinished()Z
@1.16.0
+#fromMultiplePartitions(ILjava/util/List;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;
+#fromSinglePartition(ILorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;
+#getNumConsumers()I
+#getResultPartitionType()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;
-#fromMultiplePartitions(Ljava/util/List;)Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;
-#fromSinglePartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Lorg/apache/flink/runtime/scheduler/strategy/ConsumedPartitionGroup;

+###org/apache/flink/runtime/scheduler/strategy/SchedulingTopology
@1.14.0
+#getVertex(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/scheduler/strategy/SchedulingExecutionVertex;
+#getResultPartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Lorg/apache/flink/runtime/scheduler/strategy/SchedulingResultPartition;
@1.15.0
+#registerSchedulingTopologyListener(Lorg/apache/flink/runtime/scheduler/SchedulingTopologyListener;)V

+###org/apache/flink/runtime/scheduler/strategy/SchedulingExecutionVertex
@1.14.0
+#getState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getConsumedPartitionGroups()Ljava/util/List;

+###org/apache/flink/runtime/scheduler/strategy/SchedulingResultPartition
@1.14.0
+#getResultId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#getState()Lorg/apache/flink/runtime/scheduler/strategy/ResultPartitionState;
+#getConsumerVertexGroups()Ljava/util/List;
+#getConsumedPartitionGroups()Ljava/util/List;
@1.15.0
+#getConsumerVertexGroup()Ljava/util/Optional;
-#getConsumerVertexGroups()Ljava/util/List;
@1.16.0
+#getConsumerVertexGroups()Ljava/util/List;
-#getConsumerVertexGroup()Ljava/util/Optional;

+###org/apache/flink/runtime/scheduler/strategy/SchedulingPipelinedRegion
@1.14.0
+#getAllBlockingConsumedPartitionGroups()Ljava/lang/Iterable;
@1.16.0
+#getAllNonPipelinedConsumedPartitionGroups()Ljava/lang/Iterable;
+#getAllReleaseBySchedulerConsumedPartitionGroups()Ljava/lang/Iterable;
-#getAllBlockingConsumedPartitionGroups()Ljava/lang/Iterable;

+###org/apache/flink/runtime/scheduler/strategy/ResultPartitionState
@1.14.0
+#values()[Lorg/apache/flink/runtime/scheduler/strategy/ResultPartitionState;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/scheduler/strategy/ResultPartitionState;

+###org/apache/flink/runtime/scheduler/strategy/SchedulingStrategyFactory
@1.14.0
+#createInstance(Lorg/apache/flink/runtime/scheduler/SchedulerOperations;Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)Lorg/apache/flink/runtime/scheduler/strategy/SchedulingStrategy;

+###org/apache/flink/runtime/scheduler/strategy/SchedulingStrategy
@1.14.0
+#startScheduling()V
+#restartTasks(Ljava/util/Set;)V
+#onExecutionStateChange(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#onPartitionConsumable(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)V

+###org/apache/flink/runtime/scheduler/strategy/PipelinedRegionSchedulingStrategy$Factory
@1.14.0
+#<init>()V
+#createInstance(Lorg/apache/flink/runtime/scheduler/SchedulerOperations;Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)Lorg/apache/flink/runtime/scheduler/strategy/SchedulingStrategy;

+###org/apache/flink/runtime/scheduler/strategy/PipelinedRegionSchedulingStrategy
@1.14.0
+#<init>(Lorg/apache/flink/runtime/scheduler/SchedulerOperations;Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)V
+#startScheduling()V
+#restartTasks(Ljava/util/Set;)V
+#onExecutionStateChange(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#onPartitionConsumable(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)V

+###org/apache/flink/runtime/scheduler/strategy/VertexwiseSchedulingStrategy$Factory
@1.15.0
+#<init>()V
+#createInstance(Lorg/apache/flink/runtime/scheduler/SchedulerOperations;Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)Lorg/apache/flink/runtime/scheduler/strategy/SchedulingStrategy;

+###org/apache/flink/runtime/scheduler/strategy/VertexwiseSchedulingStrategy
@1.15.0
+#<init>(Lorg/apache/flink/runtime/scheduler/SchedulerOperations;Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;)V
+#startScheduling()V
+#restartTasks(Ljava/util/Set;)V
+#onExecutionStateChange(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#onPartitionConsumable(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)V
+#notifySchedulingTopologyUpdated(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;Ljava/util/List;)V

+###org/apache/flink/runtime/scheduler/VertexParallelismInformation
@1.14.0
+#getParallelism()I
+#getMaxParallelism()I
+#setMaxParallelism(I)V
+#canRescaleMaxParallelism(I)Z
@1.15.0
+#setParallelism(I)V

+###org/apache/flink/runtime/scheduler/GlobalFailureHandler
@1.15.0
+#handleGlobalFailure(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/scheduler/ExecutionGraphInfo
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;Ljava/lang/Iterable;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getArchivedExecutionGraph()Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;
+#getExceptionHistory()Ljava/lang/Iterable;

+###org/apache/flink/runtime/scheduler/exceptionhistory/RootExceptionHistoryEntry
@1.14.0
+#fromFailureHandlingResultSnapshot(Lorg/apache/flink/runtime/scheduler/exceptionhistory/FailureHandlingResultSnapshot;)Lorg/apache/flink/runtime/scheduler/exceptionhistory/RootExceptionHistoryEntry;
+#fromGlobalFailure(Ljava/lang/Throwable;JLjava/lang/Iterable;)Lorg/apache/flink/runtime/scheduler/exceptionhistory/RootExceptionHistoryEntry;
+#<init>(Ljava/lang/Throwable;JLjava/lang/String;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Ljava/util/Set;)V
+#getConcurrentExceptions()Ljava/lang/Iterable;
@1.14.3
+#fromGlobalFailure(Lorg/apache/flink/runtime/executiongraph/ErrorInfo;)Lorg/apache/flink/runtime/scheduler/exceptionhistory/RootExceptionHistoryEntry;
@1.15.0
+#fromExceptionHistoryEntry(Lorg/apache/flink/runtime/scheduler/exceptionhistory/ExceptionHistoryEntry;Ljava/lang/Iterable;)Lorg/apache/flink/runtime/scheduler/exceptionhistory/RootExceptionHistoryEntry;
+#<init>(Ljava/lang/Throwable;JLjava/lang/String;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Ljava/lang/Iterable;)V
-#<init>(Ljava/lang/Throwable;JLjava/lang/String;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Ljava/util/Set;)V

+###org/apache/flink/runtime/scheduler/exceptionhistory/ExceptionHistoryEntry$ArchivedTaskManagerLocation
@1.14.0
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getAddress()Ljava/lang/String;
+#getPort()I
+#getHostname()Ljava/lang/String;
+#getFQDNHostname()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/scheduler/exceptionhistory/ExceptionHistoryEntry
@1.14.0
+#create(Lorg/apache/flink/runtime/executiongraph/AccessExecution;Ljava/lang/String;)Lorg/apache/flink/runtime/scheduler/exceptionhistory/ExceptionHistoryEntry;
+#isGlobal()Z
+#getFailingTaskName()Ljava/lang/String;
+#getTaskManagerLocation()Lorg/apache/flink/runtime/scheduler/exceptionhistory/ExceptionHistoryEntry$ArchivedTaskManagerLocation;
@1.15.0
+#createGlobal(Ljava/lang/Throwable;)Lorg/apache/flink/runtime/scheduler/exceptionhistory/ExceptionHistoryEntry;

+###org/apache/flink/runtime/scheduler/exceptionhistory/FailureHandlingResultSnapshot
@1.14.0
+#create(Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailureHandlingResult;Ljava/util/function/Function;)Lorg/apache/flink/runtime/scheduler/exceptionhistory/FailureHandlingResultSnapshot;
+#getRootCauseExecution()Ljava/util/Optional;
+#getRootCause()Ljava/lang/Throwable;
+#getTimestamp()J
+#getConcurrentlyFailedExecution()Ljava/lang/Iterable;

+###org/apache/flink/runtime/scheduler/InternalFailuresListener
@1.14.0
+#notifyTaskFailure(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;ZZ)V
+#notifyGlobalFailure(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/scheduler/SchedulingTopologyListener
@1.15.0
+#notifySchedulingTopologyUpdated(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;Ljava/util/List;)V

+###org/apache/flink/runtime/scheduler/adaptivebatch/AdaptiveBatchScheduler
@1.15.0
+#startSchedulingInternal()V
+#computeVertexParallelismStoreForDynamicGraph(Ljava/lang/Iterable;I)Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;
@1.16.0
+#<init>(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Ljava/util/function/Consumer;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/scheduler/strategy/SchedulingStrategyFactory;Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailoverStrategy$Factory;Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;Lorg/apache/flink/runtime/scheduler/ExecutionOperations;Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersioner;Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocatorFactory;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/scheduler/ExecutionGraphFactory;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/scheduler/adaptivebatch/VertexParallelismDecider;I)V
-#startSchedulingInternal()V

+###org/apache/flink/runtime/scheduler/adaptivebatch/VertexParallelismDecider
@1.15.0
+#decideParallelismForVertex(Ljava/util/List;)I

+###org/apache/flink/runtime/scheduler/adaptivebatch/forwardgroup/ForwardGroup
@1.15.0
+#<init>(Ljava/util/Set;)V
+#setParallelism(I)V
+#isParallelismDecided()Z
+#getParallelism()I
+#size()I
+#getJobVertexIds()Ljava/util/Set;

+###org/apache/flink/runtime/scheduler/adaptivebatch/forwardgroup/ForwardGroupComputeUtil
@1.15.0
+#<init>()V
+#computeForwardGroups(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/util/Map;

+###org/apache/flink/runtime/scheduler/adaptivebatch/BlockingResultInfo
@1.15.0
+#getBlockingPartitionSizes()Ljava/util/List;
+#isBroadcast()Z
+#createFromIntermediateResult(Lorg/apache/flink/runtime/executiongraph/IntermediateResult;)Lorg/apache/flink/runtime/scheduler/adaptivebatch/BlockingResultInfo;

+###org/apache/flink/runtime/scheduler/adaptivebatch/DefaultVertexParallelismDecider
@1.15.0
+#decideParallelismForVertex(Ljava/util/List;)I

+###org/apache/flink/runtime/scheduler/adaptivebatch/AdaptiveBatchSchedulerFactory
@1.15.0
+#<init>()V
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
+#getSchedulerType()Lorg/apache/flink/configuration/JobManagerOptions$SchedulerType;
@1.16.0
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/blocklist/BlocklistOperations;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
-#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;

+###org/apache/flink/runtime/scheduler/DefaultScheduler
@1.14.0
+#handleGlobalFailure(Ljava/lang/Throwable;)V
+#allocateSlotsAndDeploy(Ljava/util/List;)V

+###org/apache/flink/runtime/scheduler/SchedulerBase
@1.14.0
+#<init>(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersioner;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/scheduler/ExecutionGraphFactory;)V
+#getDefaultMaxParallelism(Lorg/apache/flink/runtime/jobgraph/JobVertex;)I
+#computeVertexParallelismStore(Ljava/lang/Iterable;Ljava/util/function/Function;)Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;
+#computeVertexParallelismStore(Ljava/lang/Iterable;)Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;
+#computeVertexParallelismStore(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;
+#getExecutionVertex(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getExecutionJobVertex(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;
+#getExecutionGraph()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#startScheduling()V
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#cancel()V
+#getJobTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#updateTaskExecutionState(Lorg/apache/flink/runtime/executiongraph/TaskExecutionStateTransition;)Z
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/jobmaster/SerializedInputSplit;
+#requestPartitionState(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Lorg/apache/flink/runtime/execution/ExecutionState;
+#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#requestJob()Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;
+#requestJobStatus()Lorg/apache/flink/api/common/JobStatus;
+#requestJobDetails()Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#requestKvStateLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/query/KvStateLocation;
+#notifyKvStateRegistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/queryablestate/KvStateID;Ljava/net/InetSocketAddress;)V
+#notifyKvStateUnregistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;)V
+#updateAccumulators(Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;)V
+#triggerSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
+#stopCheckpointScheduler()V
+#startCheckpointScheduler()V
+#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#declineCheckpoint(Lorg/apache/flink/runtime/messages/checkpoint/DeclineCheckpoint;)V
+#reportCheckpointMetrics(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#stopWithSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
+#deliverOperatorEventToCoordinator(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#deliverCoordinationRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/CoordinationRequest;)Ljava/util/concurrent/CompletableFuture;
@1.14.3
+#<init>(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersioner;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/scheduler/ExecutionGraphFactory;)V
-#<init>(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersioner;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/scheduler/ExecutionGraphFactory;)V
@1.15.0
+#<init>(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersioner;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/scheduler/ExecutionGraphFactory;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;)V
+#computeVertexParallelismStore(Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/function/Function;)Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;
+#registerJobMetrics(Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/runtime/executiongraph/JobStatusProvider;Lorg/apache/flink/metrics/Gauge;Lorg/apache/flink/runtime/scheduler/metrics/DeploymentStateTimeMetrics;Ljava/util/function/Consumer;JLorg/apache/flink/configuration/MetricOptions$JobStatusMetricsSettings;)V
+#triggerSavepoint(Ljava/lang/String;ZLorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint()Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Ljava/lang/String;ZLorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
-#<init>(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersioner;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/scheduler/ExecutionGraphFactory;)V
-#triggerSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
-#stopWithSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#getExceptionHistory()Ljava/lang/Iterable;
-#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V

+###org/apache/flink/runtime/scheduler/SchedulerNG
@1.14.0
+#startScheduling()V
+#cancel()V
+#getJobTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#handleGlobalFailure(Ljava/lang/Throwable;)V
+#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)Z
+#updateTaskExecutionState(Lorg/apache/flink/runtime/executiongraph/TaskExecutionStateTransition;)Z
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/jobmaster/SerializedInputSplit;
+#requestPartitionState(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Lorg/apache/flink/runtime/execution/ExecutionState;
+#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#requestJob()Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;
+#requestJobStatus()Lorg/apache/flink/api/common/JobStatus;
+#requestJobDetails()Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#requestKvStateLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/query/KvStateLocation;
+#notifyKvStateRegistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/queryablestate/KvStateID;Ljava/net/InetSocketAddress;)V
+#notifyKvStateUnregistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;)V
+#updateAccumulators(Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;)V
+#triggerSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
+#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#reportCheckpointMetrics(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#declineCheckpoint(Lorg/apache/flink/runtime/messages/checkpoint/DeclineCheckpoint;)V
+#stopWithSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
+#deliverOperatorEventToCoordinator(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#deliverCoordinationRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/CoordinationRequest;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#triggerSavepoint(Ljava/lang/String;ZLorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint()Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Ljava/lang/String;ZLorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
-#handleGlobalFailure(Ljava/lang/Throwable;)V
-#triggerSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
-#stopWithSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
@1.16.0
-#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V

+###org/apache/flink/runtime/scheduler/SchedulerOperations
@1.14.0
+#allocateSlotsAndDeploy(Ljava/util/List;)V

+###org/apache/flink/runtime/scheduler/ExecutionVertexOperations
@1.15.0
+#deploy(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#cancel(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Ljava/util/concurrent/CompletableFuture;
+#markFailed(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Ljava/lang/Throwable;)V
@1.16.0
-###org/apache/flink/runtime/scheduler/ExecutionVertexOperations

+###org/apache/flink/runtime/scheduler/ExecutionVertexVersioner
@1.14.0
+#<init>()V
+#recordModification(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersion;
+#recordVertexModifications(Ljava/util/Collection;)Ljava/util/Map;
+#isModified(Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersion;)Z
+#getUnmodifiedExecutionVertices(Ljava/util/Set;)Ljava/util/Set;
@1.16.0
+#getExecutionVertexVersions(Ljava/util/Collection;)Ljava/util/Map;

+###org/apache/flink/runtime/scheduler/ExecutionSlotAllocatorFactory
@1.14.0
+#createInstance(Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocationContext;)Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocator;

+###org/apache/flink/runtime/scheduler/ExecutionGraphFactory
@1.14.0
+#createAndRestoreExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
@1.15.0
+#createAndRestoreExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
-#createAndRestoreExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;

+###org/apache/flink/runtime/scheduler/VertexParallelismStore
@1.14.0
+#getParallelismInfo(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/scheduler/VertexParallelismInformation;

+###org/apache/flink/runtime/scheduler/ExecutionSlotAllocator
@1.14.0
+#allocateSlotsFor(Ljava/util/List;)Ljava/util/List;
+#cancel(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)V
@1.16.0
+#cancel(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#cancel(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)V

+###org/apache/flink/runtime/scheduler/ExecutionVertexVersion
@1.14.0
+#getExecutionVertexId()Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;
+#getVersion()J

+###org/apache/flink/runtime/scheduler/ExecutionVertexDeploymentOption
@1.14.0
+#<init>(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Lorg/apache/flink/runtime/scheduler/DeploymentOption;)V
+#getExecutionVertexId()Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;
+#getDeploymentOption()Lorg/apache/flink/runtime/scheduler/DeploymentOption;
@1.16.0
-###org/apache/flink/runtime/scheduler/ExecutionVertexDeploymentOption

+###org/apache/flink/runtime/scheduler/StateLocationRetriever
@1.14.0
+#getStateLocation(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Ljava/util/Optional;

+###org/apache/flink/runtime/scheduler/InputsLocationsRetriever
@1.14.0
+#getConsumedResultPartitionsProducers(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Ljava/util/Collection;
+#getTaskManagerLocation(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Ljava/util/Optional;

+###org/apache/flink/runtime/scheduler/KvStateHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#requestKvStateLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/query/KvStateLocation;
+#notifyKvStateRegistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/queryablestate/KvStateID;Ljava/net/InetSocketAddress;)V
+#notifyKvStateUnregistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;)V

+###org/apache/flink/runtime/scheduler/ExecutionGraphHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/slf4j/Logger;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#reportCheckpointMetrics(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#declineCheckpoint(Lorg/apache/flink/runtime/messages/checkpoint/DeclineCheckpoint;)V
+#requestPartitionState(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Lorg/apache/flink/runtime/execution/ExecutionState;
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/jobmaster/SerializedInputSplit;

+###org/apache/flink/runtime/scheduler/OperatorCoordinatorHandler
@1.14.0
+#initializeOperatorCoordinators(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#startAllOperatorCoordinators()V
+#disposeAllOperatorCoordinators()V
+#deliverOperatorEventToCoordinator(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#deliverCoordinationRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/CoordinationRequest;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#registerAndStartNewCoordinators(Ljava/util/Collection;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V

+###org/apache/flink/runtime/scheduler/metrics/DeploymentStateTimeMetrics
@1.15.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobType;Lorg/apache/flink/configuration/MetricOptions$JobStatusMetricsSettings;)V
+#getCurrentTime()J
+#getTotalTime()J
+#getBinary()J
+#registerMetrics(Lorg/apache/flink/metrics/MetricGroup;)V
+#onStateUpdate(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/execution/ExecutionState;)V

+###org/apache/flink/runtime/scheduler/metrics/StateTimeMetric
@1.15.0
+#getCurrentTime()J
+#getTotalTime()J
+#getBinary()J
+#register(Lorg/apache/flink/configuration/MetricOptions$JobStatusMetricsSettings;Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/runtime/scheduler/metrics/StateTimeMetric;Ljava/lang/String;)V
+#getStateMetricName(Ljava/lang/String;)Ljava/lang/String;
+#getCurrentTimeMetricName(Ljava/lang/String;)Ljava/lang/String;
+#getTotalTimeMetricName(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/flink/runtime/scheduler/metrics/MetricsRegistrar
@1.15.0
+#registerMetrics(Lorg/apache/flink/metrics/MetricGroup;)V

+###org/apache/flink/runtime/scheduler/metrics/JobStatusMetrics
@1.15.0
+#<init>(JLorg/apache/flink/configuration/MetricOptions$JobStatusMetricsSettings;)V
+#registerMetrics(Lorg/apache/flink/metrics/MetricGroup;)V
+#jobStatusChanges(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/JobStatus;J)V

+###org/apache/flink/runtime/scheduler/DeploymentOption
@1.14.0
+#<init>(Z)V
+#notifyPartitionDataAvailable()Z
@1.16.0
-###org/apache/flink/runtime/scheduler/DeploymentOption

+###org/apache/flink/runtime/scheduler/ExecutionGraphToInputsLocationsRetrieverAdapter
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#getConsumedResultPartitionsProducers(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Ljava/util/Collection;
+#getTaskManagerLocation(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Ljava/util/Optional;

+###org/apache/flink/runtime/scheduler/adaptive/StateTransitions$ToCancelling
@1.15.0
+#goToCanceling(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/util/List;)V

+###org/apache/flink/runtime/scheduler/adaptive/StateTransitions$ToCreatingExecutionGraph
@1.15.0
+#goToCreatingExecutionGraph()V

+###org/apache/flink/runtime/scheduler/adaptive/StateTransitions$ToExecuting
@1.15.0
+#goToExecuting(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/util/List;)V

+###org/apache/flink/runtime/scheduler/adaptive/StateTransitions$ToFinished
@1.15.0
+#goToFinished(Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;)V

+###org/apache/flink/runtime/scheduler/adaptive/StateTransitions$ToFailing
@1.15.0
+#goToFailing(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/lang/Throwable;Ljava/util/List;)V

+###org/apache/flink/runtime/scheduler/adaptive/StateTransitions$ToRestarting
@1.15.0
+#goToRestarting(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/time/Duration;Ljava/util/List;)V

+###org/apache/flink/runtime/scheduler/adaptive/StateTransitions$ToStopWithSavepoint
@1.15.0
+#goToStopWithSavepoint(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Lorg/apache/flink/runtime/checkpoint/CheckpointScheduling;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/scheduler/adaptive/StateTransitions$ToWaitingForResources
@1.15.0
+#goToWaitingForResources()V

+###org/apache/flink/runtime/scheduler/adaptive/StateTransitions
@1.15.0

+###org/apache/flink/runtime/scheduler/adaptive/StateFactory
@1.14.0
+#getStateClass()Ljava/lang/Class;
+#getState()Lorg/apache/flink/runtime/scheduler/adaptive/State;

+###org/apache/flink/runtime/scheduler/adaptive/AdaptiveScheduler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool;Lorg/apache/flink/runtime/scheduler/adaptive/allocator/SlotAllocator;Ljava/util/concurrent/Executor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Ljava/time/Duration;Ljava/time/Duration;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/scheduler/ExecutionGraphFactory;)V
+#startScheduling()V
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#cancel()V
+#getJobTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#handleGlobalFailure(Ljava/lang/Throwable;)V
+#updateTaskExecutionState(Lorg/apache/flink/runtime/executiongraph/TaskExecutionStateTransition;)Z
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/jobmaster/SerializedInputSplit;
+#requestPartitionState(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Lorg/apache/flink/runtime/execution/ExecutionState;
+#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
+#requestJob()Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;
+#requestJobStatus()Lorg/apache/flink/api/common/JobStatus;
+#requestJobDetails()Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#requestKvStateLocation(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/query/KvStateLocation;
+#notifyKvStateRegistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/queryablestate/KvStateID;Ljava/net/InetSocketAddress;)V
+#notifyKvStateUnregistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;)V
+#updateAccumulators(Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;)V
+#triggerSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
+#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#reportCheckpointMetrics(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#declineCheckpoint(Lorg/apache/flink/runtime/messages/checkpoint/DeclineCheckpoint;)V
+#stopWithSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
+#deliverOperatorEventToCoordinator(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#deliverCoordinationRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/CoordinationRequest;)Ljava/util/concurrent/CompletableFuture;
+#hasDesiredResources(Lorg/apache/flink/runtime/util/ResourceCounter;)Z
+#hasSufficientResources()Z
+#getArchivedExecutionGraph(Lorg/apache/flink/api/common/JobStatus;Ljava/lang/Throwable;)Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;
+#goToWaitingForResources()V
+#goToExecuting(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#goToExecuting(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;)V
+#goToCanceling(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;)V
+#goToRestarting(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/time/Duration;)V
+#goToFailing(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/lang/Throwable;)V
+#goToStopWithSavepoint(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Lorg/apache/flink/runtime/checkpoint/CheckpointScheduling;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
+#goToFinished(Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;)V
+#goToCreatingExecutionGraph()V
+#tryToAssignSlots(Lorg/apache/flink/runtime/scheduler/adaptive/CreatingExecutionGraph$ExecutionGraphWithVertexParallelism;)Lorg/apache/flink/runtime/scheduler/adaptive/CreatingExecutionGraph$AssignmentResult;
+#canScaleUp(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Z
+#onFinished(Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;)V
+#howToHandleFailure(Ljava/lang/Throwable;)Lorg/apache/flink/runtime/scheduler/adaptive/Executing$FailureResult;
+#getMainThreadExecutor()Ljava/util/concurrent/Executor;
+#isState(Lorg/apache/flink/runtime/scheduler/adaptive/State;)Z
+#runIfState(Lorg/apache/flink/runtime/scheduler/adaptive/State;Ljava/lang/Runnable;)V
+#runIfState(Lorg/apache/flink/runtime/scheduler/adaptive/State;Ljava/lang/Runnable;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
@1.14.3
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool;Lorg/apache/flink/runtime/scheduler/adaptive/allocator/SlotAllocator;Ljava/util/concurrent/Executor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Ljava/time/Duration;Ljava/time/Duration;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/scheduler/ExecutionGraphFactory;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool;Lorg/apache/flink/runtime/scheduler/adaptive/allocator/SlotAllocator;Ljava/util/concurrent/Executor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Ljava/time/Duration;Ljava/time/Duration;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/scheduler/ExecutionGraphFactory;)V
@1.15.0
+#archiveFailure(Lorg/apache/flink/runtime/scheduler/exceptionhistory/RootExceptionHistoryEntry;)V
+#triggerSavepoint(Ljava/lang/String;ZLorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint()Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Ljava/lang/String;ZLorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
+#goToExecuting(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/util/List;)V
+#goToCanceling(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/util/List;)V
+#goToRestarting(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/time/Duration;Ljava/util/List;)V
+#goToFailing(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/lang/Throwable;Ljava/util/List;)V
+#goToStopWithSavepoint(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Lorg/apache/flink/runtime/checkpoint/CheckpointScheduling;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;
+#howToHandleFailure(Ljava/lang/Throwable;)Lorg/apache/flink/runtime/scheduler/adaptive/FailureResult;
+#getIOExecutor()Ljava/util/concurrent/Executor;
+#getMainThreadExecutor()Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;
-#triggerSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
-#stopWithSavepoint(Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
-#goToExecuting(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
-#goToExecuting(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;)V
-#goToCanceling(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;)V
-#goToRestarting(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/time/Duration;)V
-#goToFailing(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Ljava/lang/Throwable;)V
-#goToStopWithSavepoint(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/ExecutionGraphHandler;Lorg/apache/flink/runtime/scheduler/OperatorCoordinatorHandler;Lorg/apache/flink/runtime/checkpoint/CheckpointScheduling;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
-#howToHandleFailure(Ljava/lang/Throwable;)Lorg/apache/flink/runtime/scheduler/adaptive/Executing$FailureResult;
@1.16.0
-#notifyPartitionDataAvailable(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V

+###org/apache/flink/runtime/scheduler/adaptive/CreatingExecutionGraph
@1.14.0
+#<init>(Lorg/apache/flink/runtime/scheduler/adaptive/CreatingExecutionGraph$Context;Ljava/util/concurrent/CompletableFuture;Lorg/slf4j/Logger;)V
+#cancel()V
+#suspend(Ljava/lang/Throwable;)V
+#getJobStatus()Lorg/apache/flink/api/common/JobStatus;
+#getJob()Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionGraph;
+#handleGlobalFailure(Ljava/lang/Throwable;)V
+#getLogger()Lorg/slf4j/Logger;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/scheduler/adaptive/CreatingExecutionGraph$Context;Ljava/util/concurrent/CompletableFuture;Lorg/slf4j/Logger;Lorg/apache/flink/runtime/scheduler/adaptive/CreatingExecutionGraph$OperatorCoordinatorHandlerFactory;)V
-#<init>(Lorg/apache/flink/runtime/scheduler/adaptive/CreatingExecutionGraph$Context;Ljava/util/concurrent/CompletableFuture;Lorg/slf4j/Logger;)V

+###org/apache/flink/runtime/scheduler/adaptive/JobGraphJobInformation
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;)V
+#getSlotSharingGroups()Ljava/util/Collection;
+#getVertexInformation(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/scheduler/adaptive/allocator/JobInformation$VertexInformation;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getName()Ljava/lang/String;
+#getCheckpointingSettings()Lorg/apache/flink/runtime/jobgraph/tasks/JobCheckpointingSettings;
+#getVertices()Ljava/lang/Iterable;
+#copyJobGraph()Lorg/apache/flink/runtime/jobgraph/JobGraph;

+###org/apache/flink/runtime/scheduler/adaptive/allocator/JobInformation$VertexInformation
@1.14.0
+#getJobVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getParallelism()I
+#getSlotSharingGroup()Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup;

+###org/apache/flink/runtime/scheduler/adaptive/allocator/JobInformation
@1.14.0
+#getSlotSharingGroups()Ljava/util/Collection;
+#getVertexInformation(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/scheduler/adaptive/allocator/JobInformation$VertexInformation;

+###org/apache/flink/runtime/scheduler/adaptive/allocator/SlotAllocator
@1.14.0
+#calculateRequiredSlots(Ljava/lang/Iterable;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#determineParallelism(Lorg/apache/flink/runtime/scheduler/adaptive/allocator/JobInformation;Ljava/util/Collection;)Ljava/util/Optional;
+#tryReserveResources(Lorg/apache/flink/runtime/scheduler/adaptive/allocator/VertexParallelism;)Ljava/util/Optional;

+###org/apache/flink/runtime/scheduler/adaptive/allocator/VertexParallelism
@1.14.0
+#getMaxParallelismForVertices()Ljava/util/Map;
+#getParallelism(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)I

+###org/apache/flink/runtime/scheduler/adaptive/allocator/ReservedSlots
@1.14.0
+#getSlotFor(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/jobmaster/LogicalSlot;
+#create(Ljava/util/Map;)Lorg/apache/flink/runtime/scheduler/adaptive/allocator/ReservedSlots;

+###org/apache/flink/runtime/scheduler/adaptive/allocator/SlotSharingSlotAllocator
@1.14.0
+#createSlotSharingSlotAllocator(Lorg/apache/flink/runtime/scheduler/adaptive/allocator/ReserveSlotFunction;Lorg/apache/flink/runtime/scheduler/adaptive/allocator/FreeSlotFunction;Lorg/apache/flink/runtime/scheduler/adaptive/allocator/IsSlotAvailableAndFreeFunction;)Lorg/apache/flink/runtime/scheduler/adaptive/allocator/SlotSharingSlotAllocator;
+#calculateRequiredSlots(Ljava/lang/Iterable;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#determineParallelism(Lorg/apache/flink/runtime/scheduler/adaptive/allocator/JobInformation;Ljava/util/Collection;)Ljava/util/Optional;
+#tryReserveResources(Lorg/apache/flink/runtime/scheduler/adaptive/allocator/VertexParallelism;)Ljava/util/Optional;

+###org/apache/flink/runtime/scheduler/adaptive/allocator/ReserveSlotFunction
@1.14.0
+#reserveSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlot;

+###org/apache/flink/runtime/scheduler/adaptive/allocator/FreeSlotFunction
@1.14.0
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;J)V

+###org/apache/flink/runtime/scheduler/adaptive/allocator/IsSlotAvailableAndFreeFunction
@1.14.0
+#isSlotAvailableAndFree(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;)Z

+###org/apache/flink/runtime/scheduler/adaptive/allocator/VertexParallelismWithSlotSharing
@1.14.0
+#getMaxParallelismForVertices()Ljava/util/Map;
+#getParallelism(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)I

+###org/apache/flink/runtime/scheduler/adaptive/scalingpolicy/ScaleUpController
@1.14.0
+#canScaleUp(II)Z

+###org/apache/flink/runtime/scheduler/adaptive/scalingpolicy/ReactiveScaleUpController
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
+#canScaleUp(II)Z

+###org/apache/flink/runtime/scheduler/adaptive/AdaptiveSchedulerFactory
@1.14.0
+#<init>(Ljava/time/Duration;Ljava/time/Duration;)V
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
+#getSchedulerType()Lorg/apache/flink/configuration/JobManagerOptions$SchedulerType;
+#createSlotSharingSlotAllocator(Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool;)Lorg/apache/flink/runtime/scheduler/adaptive/allocator/SlotSharingSlotAllocator;
@1.16.0
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/blocklist/BlocklistOperations;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
-#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;

+###org/apache/flink/runtime/scheduler/adaptive/FailureResultUtil
@1.15.0
+#<init>()V
+#restartOrFail(Lorg/apache/flink/runtime/scheduler/adaptive/FailureResult;Lorg/apache/flink/runtime/scheduler/adaptive/StateTransitions$ToRestarting;Lorg/apache/flink/runtime/scheduler/adaptive/StateWithExecutionGraph;)V

+###org/apache/flink/runtime/scheduler/DefaultVertexParallelismInfo
@1.14.0
+#<init>(IILjava/util/function/Function;)V
+#getParallelism()I
+#getMaxParallelism()I
+#setMaxParallelism(I)V
+#canRescaleMaxParallelism(I)Z
@1.15.0
+#setParallelism(I)V

+###org/apache/flink/runtime/scheduler/adapter/DefaultExecutionTopology
@1.14.0
+#getVertices()Ljava/lang/Iterable;
+#getVertex(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/scheduler/adapter/DefaultExecutionVertex;
+#getResultPartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Lorg/apache/flink/runtime/scheduler/adapter/DefaultResultPartition;
+#getAllPipelinedRegions()Ljava/lang/Iterable;
+#getPipelinedRegionOfVertex(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/scheduler/adapter/DefaultSchedulingPipelinedRegion;
+#getEdgeManager()Lorg/apache/flink/runtime/executiongraph/EdgeManager;
+#fromExecutionGraph(Lorg/apache/flink/runtime/executiongraph/DefaultExecutionGraph;)Lorg/apache/flink/runtime/scheduler/adapter/DefaultExecutionTopology;
+#getResultPartition(Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;)Lorg/apache/flink/runtime/scheduler/strategy/SchedulingResultPartition;
+#getVertex(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/scheduler/strategy/SchedulingExecutionVertex;
+#getPipelinedRegionOfVertex(Lorg/apache/flink/runtime/topology/VertexID;)Lorg/apache/flink/runtime/topology/PipelinedRegion;
@1.15.0
+#registerSchedulingTopologyListener(Lorg/apache/flink/runtime/scheduler/SchedulingTopologyListener;)V
+#notifyExecutionGraphUpdated(Lorg/apache/flink/runtime/executiongraph/DefaultExecutionGraph;Ljava/util/List;)V

+###org/apache/flink/runtime/scheduler/adapter/DefaultSchedulingPipelinedRegion
@1.14.0
+#<init>(Ljava/util/Set;Ljava/util/function/Function;)V
+#getVertices()Ljava/lang/Iterable;
+#getVertex(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/scheduler/adapter/DefaultExecutionVertex;
+#getAllBlockingConsumedPartitionGroups()Ljava/lang/Iterable;
+#contains(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Z
+#contains(Lorg/apache/flink/runtime/topology/VertexID;)Z
+#getVertex(Lorg/apache/flink/runtime/topology/VertexID;)Lorg/apache/flink/runtime/topology/Vertex;
@1.16.0
+#getAllNonPipelinedConsumedPartitionGroups()Ljava/lang/Iterable;
+#getAllReleaseBySchedulerConsumedPartitionGroups()Ljava/lang/Iterable;
-#getAllBlockingConsumedPartitionGroups()Ljava/lang/Iterable;

+###org/apache/flink/runtime/scheduler/DefaultExecutionVertexOperations
@1.15.0
+#<init>()V
+#deploy(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#cancel(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Ljava/util/concurrent/CompletableFuture;
+#markFailed(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Ljava/lang/Throwable;)V
@1.16.0
-###org/apache/flink/runtime/scheduler/DefaultExecutionVertexOperations

+###org/apache/flink/runtime/scheduler/PreferredLocationsRetriever
@1.14.0
+#getPreferredLocations(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/util/Set;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/scheduler/SsgNetworkMemoryCalculationUtils
@1.14.0
@1.15.0
+#enrichNetworkMemory(Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup;Ljava/util/function/Function;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;)V

+###org/apache/flink/runtime/scheduler/stopwithsavepoint/StopWithSavepointTerminationHandlerImpl
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/scheduler/SchedulerNG;Lorg/slf4j/Logger;)V
+#getSavepointPath()Ljava/util/concurrent/CompletableFuture;
+#handleSavepointCreation(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Ljava/lang/Throwable;)V
+#handleExecutionsTermination(Ljava/util/Collection;)V

+###org/apache/flink/runtime/scheduler/stopwithsavepoint/StopWithSavepointTerminationHandler
@1.14.0
+#getSavepointPath()Ljava/util/concurrent/CompletableFuture;
+#handleSavepointCreation(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;Ljava/lang/Throwable;)V
+#handleExecutionsTermination(Ljava/util/Collection;)V

+###org/apache/flink/runtime/scheduler/stopwithsavepoint/StopWithSavepointTerminationManager
@1.14.0
+#<init>(Lorg/apache/flink/runtime/scheduler/stopwithsavepoint/StopWithSavepointTerminationHandler;)V
+#stopWithSavepoint(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)Ljava/util/concurrent/CompletableFuture;
+#checkStopWithSavepointPreconditions(Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/slf4j/Logger;)V
@1.15.0
+#checkSavepointActionPreconditions(Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/slf4j/Logger;)V
-#checkStopWithSavepointPreconditions(Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Lorg/slf4j/Logger;)V

+###org/apache/flink/runtime/scheduler/stopwithsavepoint/StopWithSavepointStoppingException
@1.15.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/JobID;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/JobID;Ljava/lang/Throwable;)V
+#getSavepointPath()Ljava/lang/String;

+###org/apache/flink/runtime/scheduler/SchedulerNGFactory
@1.14.0
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
+#getSchedulerType()Lorg/apache/flink/configuration/JobManagerOptions$SchedulerType;
@1.16.0
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/blocklist/BlocklistOperations;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
-#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;

+###org/apache/flink/runtime/scheduler/SyncPreferredLocationsRetriever
@1.14.0
+#getPreferredLocations(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/util/Set;)Ljava/util/Collection;

+###org/apache/flink/runtime/scheduler/SharedSlotProfileRetriever$SharedSlotProfileRetrieverFactory
@1.14.0
+#createFromBulk(Ljava/util/Set;)Lorg/apache/flink/runtime/scheduler/SharedSlotProfileRetriever;

+###org/apache/flink/runtime/scheduler/SlotSharingStrategy$Factory
@1.14.0
+#create(Lorg/apache/flink/runtime/scheduler/strategy/SchedulingTopology;Ljava/util/Set;Ljava/util/Set;)Lorg/apache/flink/runtime/scheduler/SlotSharingStrategy;

+###org/apache/flink/runtime/scheduler/SlotSharingExecutionSlotAllocatorFactory
@1.15.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotProvider;ZLorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotRequestBulkChecker;Lorg/apache/flink/api/common/time/Time;)V
+#createInstance(Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocationContext;)Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocator;

+###org/apache/flink/runtime/scheduler/DefaultExecutionGraphFactory
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;)V
+#createAndRestoreExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
@1.15.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Z)V
+#createAndRestoreExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Lorg/apache/flink/runtime/executiongraph/ExecutionStateUpdateListener;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
-#createAndRestoreExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptorFactory$PartitionLocationConstraint;JLorg/apache/flink/runtime/executiongraph/VertexAttemptNumberStore;Lorg/apache/flink/runtime/scheduler/VertexParallelismStore;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
@1.16.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;ZLorg/apache/flink/runtime/executiongraph/ExecutionJobVertex$Factory;)V
-#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Z)V

+###org/apache/flink/runtime/scheduler/SchedulerUtils
@1.14.0
+#createCompletedCheckpointStoreIfCheckpointingIsEnabled(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
+#createCheckpointIDCounterIfCheckpointingIsEnabled(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;)Lorg/apache/flink/runtime/checkpoint/CheckpointIDCounter;
@1.15.0
+#createCompletedCheckpointStoreIfCheckpointingIsEnabled(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Ljava/util/concurrent/Executor;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#createCompletedCheckpointStoreIfCheckpointingIsEnabled(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;

+###org/apache/flink/runtime/scheduler/DefaultVertexParallelismStore
@1.14.0
+#<init>()V
+#setParallelismInfo(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/scheduler/VertexParallelismInformation;)V
+#getParallelismInfo(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/scheduler/VertexParallelismInformation;

+###org/apache/flink/runtime/scheduler/MutableVertexParallelismStore
@1.14.0
+#setParallelismInfo(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/scheduler/VertexParallelismInformation;)V

+###org/apache/flink/runtime/scheduler/DefaultOperatorCoordinatorHandler
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Ljava/util/function/Consumer;)V
+#initializeOperatorCoordinators(Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#startAllOperatorCoordinators()V
+#disposeAllOperatorCoordinators()V
+#deliverOperatorEventToCoordinator(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#deliverCoordinationRequestToCoordinator(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/CoordinationRequest;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/GlobalFailureHandler;)V
+#registerAndStartNewCoordinators(Ljava/util/Collection;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Ljava/util/function/Consumer;)V

+###org/apache/flink/runtime/scheduler/DefaultSchedulerComponents
@1.14.0

+###org/apache/flink/runtime/scheduler/DefaultSchedulerFactory
@1.14.0
+#<init>()V
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
+#getSchedulerType()Lorg/apache/flink/configuration/JobManagerOptions$SchedulerType;
@1.16.0
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/blocklist/BlocklistOperations;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;
-#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmaster/slotpool/SlotPoolService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/blob/BlobWriter;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/runtime/io/network/partition/JobMasterPartitionTracker;Lorg/apache/flink/runtime/jobmaster/ExecutionDeploymentTracker;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;)Lorg/apache/flink/runtime/scheduler/SchedulerNG;

+###org/apache/flink/runtime/scheduler/JobStatusStore
@1.15.0
+#<init>(J)V
+#jobStatusChanges(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/JobStatus;J)V
+#getState()Lorg/apache/flink/api/common/JobStatus;
+#getStatusTimestamp(Lorg/apache/flink/api/common/JobStatus;)J

+###org/apache/flink/runtime/scheduler/DefaultPreferredLocationsRetriever
@1.14.0
+#getPreferredLocations(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;Ljava/util/Set;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/scheduler/UpdateSchedulerNgOnInternalFailuresListener
@1.14.0
+#<init>(Lorg/apache/flink/runtime/scheduler/SchedulerNG;)V
+#notifyTaskFailure(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;ZZ)V
+#notifyGlobalFailure(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/util/IntArrayList
@0.6-hadoop2-incubating
+#<init>(I)V
+#size()I
+#add(I)Z
+#removeInt(I)I
+#clear()V
+#isEmpty()Z
@0.9.0-milestone-1
+#removeLast()I
-#removeInt(I)I
@1.14.0
+#toArray()[I

+###org/apache/flink/runtime/util/EvictingBoundedList
@1.14.0
+#<init>(I)V
+#<init>(Lorg/apache/flink/runtime/util/EvictingBoundedList;)V
+#<init>(ILjava/lang/Object;)V
+#size()I
+#isEmpty()Z
+#add(Ljava/lang/Object;)Z
+#clear()V
+#get(I)Ljava/lang/Object;
+#getSizeLimit()I
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#getDefaultElement()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
@1.15.0
+#isDroppedIndex(I)Z
@1.16.0
-###org/apache/flink/runtime/util/EvictingBoundedList

+###org/apache/flink/runtime/util/event/EventListener
@0.9.0-milestone-1
+#onEvent(Ljava/lang/Object;)V

+###org/apache/flink/runtime/util/event/NotificationListener
@0.9.0-milestone-1
+#onNotification()V

+###org/apache/flink/runtime/util/ResettableMutableObjectIterator
@0.6-hadoop2-incubating
+#reset()V

+###org/apache/flink/runtime/util/NonClosingOutputStreamDecorator
@1.15.0
+#<init>(Ljava/io/OutputStream;)V
+#close()V

+###org/apache/flink/runtime/util/ForwardingOutputStream
@1.14.0
+#<init>(Ljava/io/OutputStream;)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#flush()V
+#close()V

+###org/apache/flink/runtime/util/NonClosingInputStreamDecorator
@1.14.0
+#<init>(Ljava/io/InputStream;)V
+#close()V

+###org/apache/flink/runtime/util/ForwardingInputStream
@1.14.0
+#<init>(Ljava/io/InputStream;)V
+#read()I
+#read([B)I
+#read([BII)I
+#skip(J)J
+#available()I
+#close()V
+#mark(I)V
+#reset()V
+#markSupported()Z

+###org/apache/flink/runtime/util/Hardware
@1.14.0
+#getNumberCPUCores()I
+#getSizeOfPhysicalMemory()J

+###org/apache/flink/runtime/util/config/memory/JvmMetaspaceAndOverheadOptions
@1.14.0
+#<init>(Lorg/apache/flink/configuration/ConfigOption;Lorg/apache/flink/configuration/ConfigOption;Lorg/apache/flink/configuration/ConfigOption;Lorg/apache/flink/configuration/ConfigOption;)V

+###org/apache/flink/runtime/util/config/memory/ProcessMemoryOptions
@1.14.0
+#<init>(Ljava/util/List;Lorg/apache/flink/configuration/ConfigOption;Lorg/apache/flink/configuration/ConfigOption;Lorg/apache/flink/runtime/util/config/memory/JvmMetaspaceAndOverheadOptions;)V

+###org/apache/flink/runtime/util/config/memory/LegacyMemoryOptions
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/configuration/ConfigOption;Lorg/apache/flink/configuration/ConfigOption;)V

+###org/apache/flink/runtime/util/config/memory/ProcessMemoryUtils
@1.14.0
+#<init>(Lorg/apache/flink/runtime/util/config/memory/ProcessMemoryOptions;Lorg/apache/flink/runtime/util/config/memory/FlinkMemoryUtils;)V
+#memoryProcessSpecFromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/util/config/memory/CommonProcessMemorySpec;
+#deriveJvmMetaspaceAndOverheadFromTotalFlinkMemory(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/util/config/memory/JvmMetaspaceAndOverhead;
+#getMemorySizeFromConfig(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/ConfigOption;)Lorg/apache/flink/configuration/MemorySize;
+#getRangeFraction(Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/ConfigOption;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/util/config/memory/RangeFraction;
+#deriveWithFraction(Ljava/lang/String;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/runtime/util/config/memory/RangeFraction;)Lorg/apache/flink/configuration/MemorySize;
+#deriveWithInverseFraction(Ljava/lang/String;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/runtime/util/config/memory/RangeFraction;)Lorg/apache/flink/configuration/MemorySize;
+#generateJvmParametersStr(Lorg/apache/flink/runtime/util/config/memory/ProcessMemorySpec;)Ljava/lang/String;
+#generateJvmParametersStr(Lorg/apache/flink/runtime/util/config/memory/ProcessMemorySpec;Z)Ljava/lang/String;

+###org/apache/flink/runtime/util/config/memory/FlinkMemory
@1.14.0
+#getJvmHeapMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getJvmDirectMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getTotalFlinkMemorySize()Lorg/apache/flink/configuration/MemorySize;

+###org/apache/flink/runtime/util/config/memory/taskmanager/TaskExecutorFlinkMemory
@1.14.0
+#<init>(Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;)V
+#getFrameworkHeap()Lorg/apache/flink/configuration/MemorySize;
+#getFrameworkOffHeap()Lorg/apache/flink/configuration/MemorySize;
+#getTaskHeap()Lorg/apache/flink/configuration/MemorySize;
+#getTaskOffHeap()Lorg/apache/flink/configuration/MemorySize;
+#getNetwork()Lorg/apache/flink/configuration/MemorySize;
+#getManaged()Lorg/apache/flink/configuration/MemorySize;
+#getJvmHeapMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getJvmDirectMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getTotalFlinkMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/util/config/memory/taskmanager/TaskExecutorFlinkMemoryUtils
@1.14.0
+#<init>()V
+#deriveFromRequiredFineGrainedOptions(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/util/config/memory/taskmanager/TaskExecutorFlinkMemory;
+#deriveFromTotalFlinkMemory(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/util/config/memory/taskmanager/TaskExecutorFlinkMemory;
+#getFrameworkHeapMemorySize(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/MemorySize;
+#getFrameworkOffHeapMemorySize(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/MemorySize;
+#deriveFromTotalFlinkMemory(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/util/config/memory/FlinkMemory;
+#deriveFromRequiredFineGrainedOptions(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/util/config/memory/FlinkMemory;

+###org/apache/flink/runtime/util/config/memory/MemoryBackwardsCompatibilityUtils
@1.14.0
+#<init>(Lorg/apache/flink/runtime/util/config/memory/LegacyMemoryOptions;)V
+#getConfWithLegacyHeapSizeMappedToNewConfigOption(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/ConfigOption;)Lorg/apache/flink/configuration/Configuration;

+###org/apache/flink/runtime/util/config/memory/CommonProcessMemorySpec
@1.14.0
+#getFlinkMemory()Lorg/apache/flink/runtime/util/config/memory/FlinkMemory;
+#getJvmMetaspaceAndOverhead()Lorg/apache/flink/runtime/util/config/memory/JvmMetaspaceAndOverhead;
+#getJvmHeapMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getJvmDirectMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getJvmMetaspaceSize()Lorg/apache/flink/configuration/MemorySize;
+#getJvmOverheadSize()Lorg/apache/flink/configuration/MemorySize;
+#getTotalFlinkMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getTotalProcessMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/util/config/memory/ProcessMemorySpec
@1.14.0
+#getJvmHeapMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getJvmDirectMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getJvmMetaspaceSize()Lorg/apache/flink/configuration/MemorySize;
+#getJvmOverheadSize()Lorg/apache/flink/configuration/MemorySize;
+#getTotalFlinkMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getTotalProcessMemorySize()Lorg/apache/flink/configuration/MemorySize;

+###org/apache/flink/runtime/util/config/memory/FlinkMemoryUtils
@1.14.0
+#deriveFromRequiredFineGrainedOptions(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/util/config/memory/FlinkMemory;
+#deriveFromTotalFlinkMemory(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/util/config/memory/FlinkMemory;

+###org/apache/flink/runtime/util/config/memory/JvmMetaspaceAndOverhead
@1.14.0
+#<init>(Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;)V
+#getMetaspace()Lorg/apache/flink/configuration/MemorySize;
+#getOverhead()Lorg/apache/flink/configuration/MemorySize;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/util/config/memory/RangeFraction
@1.14.0
+#getMinSize()Lorg/apache/flink/configuration/MemorySize;
+#getMaxSize()Lorg/apache/flink/configuration/MemorySize;
+#getFraction()D

+###org/apache/flink/runtime/util/config/memory/jobmanager/JobManagerFlinkMemory
@1.14.0
+#<init>(Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;)V
+#getJvmHeapMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getJvmDirectMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#getTotalFlinkMemorySize()Lorg/apache/flink/configuration/MemorySize;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/util/config/memory/jobmanager/JobManagerFlinkMemoryUtils
@1.14.0
+#<init>()V
+#deriveFromRequiredFineGrainedOptions(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/util/config/memory/jobmanager/JobManagerFlinkMemory;
+#deriveFromTotalFlinkMemory(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/util/config/memory/jobmanager/JobManagerFlinkMemory;
+#deriveFromTotalFlinkMemory(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/runtime/util/config/memory/FlinkMemory;
+#deriveFromRequiredFineGrainedOptions(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/util/config/memory/FlinkMemory;

+###org/apache/flink/runtime/util/config/memory/ManagedMemoryUtils
@1.14.0
+#values()[Lorg/apache/flink/runtime/util/config/memory/ManagedMemoryUtils;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/util/config/memory/ManagedMemoryUtils;
+#convertToFractionOfSlot(Lorg/apache/flink/core/memory/ManagedMemoryUseCase;DLjava/util/Set;Lorg/apache/flink/configuration/Configuration;Ljava/util/Optional;Ljava/lang/ClassLoader;)D
+#getFractionRoundedDown(JJ)D
+#validateUseCaseWeightsNotConflict(Ljava/util/Map;Ljava/util/Map;)V

+###org/apache/flink/runtime/util/KeyGroupedIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#nextKey()Z
+#getComparatorWithCurrentReference()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#getCurrent()Ljava/lang/Object;
+#getValues()Lorg/apache/flink/runtime/util/KeyGroupedIterator$ValuesIterator;
@0.9.0-milestone-1
-###org/apache/flink/runtime/util/KeyGroupedIterator

+###org/apache/flink/runtime/util/MemoryBlockIterator
@0.6-hadoop2-incubating
+#nextBlock()Z

+###org/apache/flink/runtime/util/ResettableIterator
@0.6-hadoop2-incubating
+#reset()V

+###org/apache/flink/runtime/util/ResourceCounter
@1.14.0
+#getResourceCount(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)I
+#getTotalResourceCount()I
+#add(Lorg/apache/flink/runtime/util/ResourceCounter;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#add(Ljava/util/Map;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#add(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;I)Lorg/apache/flink/runtime/util/ResourceCounter;
+#subtract(Lorg/apache/flink/runtime/util/ResourceCounter;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#subtract(Ljava/util/Map;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#subtract(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;I)Lorg/apache/flink/runtime/util/ResourceCounter;
+#getResourcesWithCount()Ljava/util/Collection;
+#containsResource(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)Z
+#getResources()Ljava/util/Set;
+#isEmpty()Z
+#empty()Lorg/apache/flink/runtime/util/ResourceCounter;
+#withResources(Ljava/util/Map;)Lorg/apache/flink/runtime/util/ResourceCounter;
+#withResource(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;I)Lorg/apache/flink/runtime/util/ResourceCounter;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/util/BoundedFIFOQueue
@1.14.0
+#<init>(I)V
+#add(Ljava/lang/Object;)V
+#size()I
+#iterator()Ljava/util/Iterator;
@1.15.0
+#toArrayList()Ljava/util/ArrayList;

+###org/apache/flink/runtime/util/LongArrayList
@0.6-hadoop2-incubating
+#<init>(I)V
+#size()I
+#add(J)Z
+#removeLong(I)J
+#clear()V
+#isEmpty()Z
@1.14.0
+#toArray()[J

+###org/apache/flink/runtime/util/DualKeyLinkedMap
@1.14.0
+#<init>(I)V
+#size()I
+#getValueByKeyA(Ljava/lang/Object;)Ljava/lang/Object;
+#getValueByKeyB(Ljava/lang/Object;)Ljava/lang/Object;
+#getKeyAByKeyB(Ljava/lang/Object;)Ljava/lang/Object;
+#getKeyBByKeyA(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#containsKeyA(Ljava/lang/Object;)Z
+#containsKeyB(Ljava/lang/Object;)Z
+#removeKeyA(Ljava/lang/Object;)Ljava/lang/Object;
+#removeKeyB(Ljava/lang/Object;)Ljava/lang/Object;
+#values()Ljava/util/Collection;
+#keySetA()Ljava/util/Set;
+#keySetB()Ljava/util/Set;
+#clear()V
@1.16.0
+#<init>()V
-#<init>(I)V

+###org/apache/flink/runtime/util/ClusterUncaughtExceptionHandler
@1.14.0
+#<init>(Lorg/apache/flink/configuration/ClusterOptions$UncaughtExceptionHandleMode;)V
+#uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/util/SlotSelectionStrategyUtils
@1.15.0
+#selectSlotSelectionStrategy(Lorg/apache/flink/runtime/jobgraph/JobType;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobmaster/slotpool/SlotSelectionStrategy;

+###org/apache/flink/runtime/util/LeaderConnectionInfo
@0.10.0
+#<init>(Ljava/lang/String;Ljava/util/UUID;)V
+#getAddress()Ljava/lang/String;
+#getLeaderSessionID()Ljava/util/UUID;
@1.14.0
+#<init>(Ljava/util/UUID;Ljava/lang/String;)V
+#getLeaderSessionId()Ljava/util/UUID;
+#toString()Ljava/lang/String;
-#<init>(Ljava/lang/String;Ljava/util/UUID;)V
-#getLeaderSessionID()Ljava/util/UUID;

+###org/apache/flink/runtime/util/EmptyIterator
@0.6-hadoop2-incubating
+#<init>()V
+#get()Lorg/apache/flink/runtime/util/EmptyIterator;
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/runtime/util/NonReusingKeyGroupedIterator$ValuesIterator
@0.9.0-milestone-1
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/runtime/util/NonReusingKeyGroupedIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#nextKey()Z
+#getCurrent()Ljava/lang/Object;
+#getComparatorWithCurrentReference()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#getValues()Lorg/apache/flink/runtime/util/NonReusingKeyGroupedIterator$ValuesIterator;
@0.10.0
+#getValues()Ljava/util/Iterator;

+###org/apache/flink/runtime/util/SignalHandler
@0.9.0-milestone-1
+#<init>()V
+#register(Lorg/slf4j/Logger;)V

+###org/apache/flink/runtime/util/EnvironmentInformation$RevisionInformation
@0.6-hadoop2-incubating
+#<init>()V
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
-#<init>()V

+###org/apache/flink/runtime/util/EnvironmentInformation
@0.6-hadoop2-incubating
+#getVersion()Ljava/lang/String;
+#getRevisionInformation()Lorg/apache/flink/runtime/util/EnvironmentInformation$RevisionInformation;
+#getUserRunning()Ljava/lang/String;
+#getMaxJvmMemory()J
+#getJvmVersion()Ljava/lang/String;
+#getJvmStartupOptions()Ljava/lang/String;
+#logEnvironmentInfo(Lorg/apache/commons/logging/Log;Ljava/lang/String;)V
+#main([Ljava/lang/String;)V
@0.7.0-hadoop2-incubating
+#getMaxJvmHeapMemory()J
+#getSizeOfFreeHeapMemoryWithDefrag()J
+#getSizeOfFreeHeapMemory()J
+#logEnvironmentInfo(Lorg/slf4j/Logger;Ljava/lang/String;)V
-#getMaxJvmMemory()J
-#logEnvironmentInfo(Lorg/apache/commons/logging/Log;Ljava/lang/String;)V
@0.8.0
+#getTemporaryFileDirectory()Ljava/lang/String;
@0.9.0-milestone-1
+#getJvmStartupOptionsArray()[Ljava/lang/String;
+#logEnvironmentInfo(Lorg/slf4j/Logger;Ljava/lang/String;[Ljava/lang/String;)V
+#checkJavaVersion()V
-#logEnvironmentInfo(Lorg/slf4j/Logger;Ljava/lang/String;)V
-#main([Ljava/lang/String;)V
@0.10.0
+#getOpenFileHandlesLimit()J
@1.14.0
+#getScalaVersion()Ljava/lang/String;
+#getBuildTime()Ljava/time/Instant;
+#getBuildTimeString()Ljava/lang/String;
+#getGitCommitId()Ljava/lang/String;
+#getGitCommitIdAbbrev()Ljava/lang/String;
+#getGitCommitTime()Ljava/time/Instant;
+#getGitCommitTimeString()Ljava/lang/String;
+#getHadoopUser()Ljava/lang/String;
+#getHadoopVersionString()Ljava/lang/String;
-#getUserRunning()Ljava/lang/String;
-#checkJavaVersion()V

+###org/apache/flink/runtime/util/StateHandleStoreUtils
@1.14.0
+#<init>()V
+#serializeOrDiscard(Lorg/apache/flink/runtime/state/StateObject;)[B
+#deserialize([B)Ljava/io/Serializable;

+###org/apache/flink/runtime/util/ReusingKeyGroupedIterator$ValuesIterator
@0.9.0-milestone-1
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/runtime/util/ReusingKeyGroupedIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#nextKey()Z
+#getComparatorWithCurrentReference()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#getCurrent()Ljava/lang/Object;
+#getValues()Lorg/apache/flink/runtime/util/ReusingKeyGroupedIterator$ValuesIterator;
@0.10.0
+#getValues()Ljava/util/Iterator;

+###org/apache/flink/runtime/util/OperatorSubtaskDescriptionText
@1.14.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/OperatorID;Ljava/lang/String;II)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/util/ClassLoaderUtil
@0.10.0
+#getUserCodeClassLoaderInfo(Ljava/lang/ClassLoader;)Ljava/lang/String;
+#validateClassLoadable(Ljava/lang/ClassNotFoundException;Ljava/lang/ClassLoader;)Z
@1.14.0
+#formatURL(Ljava/net/URL;)Ljava/lang/String;
@1.16.0
-###org/apache/flink/runtime/util/ClassLoaderUtil

+###org/apache/flink/runtime/util/SingleElementIterator
@0.6-hadoop2-incubating
+#<init>()V
+#set(Ljava/lang/Object;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/runtime/util/bash/BashJavaUtils$Command
@1.14.0
+#values()[Lorg/apache/flink/runtime/util/bash/BashJavaUtils$Command;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/util/bash/BashJavaUtils$Command;

+###org/apache/flink/runtime/util/bash/BashJavaUtils
@1.14.0
+#main([Ljava/lang/String;)V

+###org/apache/flink/runtime/util/bash/FlinkConfigLoader
@1.14.0
+#loadConfiguration([Ljava/lang/String;)Lorg/apache/flink/configuration/Configuration;

+###org/apache/flink/runtime/util/RegularToMutableObjectIterator
@0.6-hadoop2-incubating
+#<init>(Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#next(Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0-milestone-1
+#next()Ljava/lang/Object;

+###org/apache/flink/runtime/util/JvmUtils
@1.14.0
+#createThreadDump()Ljava/util/Collection;
+#createThreadInfoSample(JI)Ljava/util/Optional;
@1.16.0
+#createThreadInfoSample(Ljava/util/Collection;I)Ljava/util/Collection;

+###org/apache/flink/runtime/util/ResourceManagerUtils
@1.15.0
+#<init>()V
+#parseRestBindPortFromWebInterfaceUrl(Ljava/lang/String;)Ljava/lang/Integer;

+###org/apache/flink/runtime/util/LeaderRetrievalUtils$LeaderConnectionInfoListener
@0.10.0
+#<init>()V
+#getLeaderConnectionInfoFuture()Lscala/concurrent/Future;
+#notifyLeaderAddress(Ljava/lang/String;Ljava/util/UUID;)V
+#handleError(Ljava/lang/Exception;)V
@1.14.0
+#getLeaderConnectionInfoFuture()Ljava/util/concurrent/CompletableFuture;
-#getLeaderConnectionInfoFuture()Lscala/concurrent/Future;

+###org/apache/flink/runtime/util/LeaderRetrievalUtils
@0.10.0
+#createLeaderRetrievalService(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#retrieveLeaderGateway(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/runtime/instance/ActorGateway;
+#retrieveLeaderConnectionInfo(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/runtime/util/LeaderConnectionInfo;
+#findConnectingAddress(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lscala/concurrent/duration/FiniteDuration;)Ljava/net/InetAddress;
@1.14.0
+#retrieveLeaderConnectionInfo(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Ljava/time/Duration;)Lorg/apache/flink/runtime/util/LeaderConnectionInfo;
+#findConnectingAddress(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Ljava/time/Duration;Lorg/apache/flink/runtime/rpc/RpcSystemUtils;)Ljava/net/InetAddress;
-#createLeaderRetrievalService(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
-#retrieveLeaderGateway(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/runtime/instance/ActorGateway;
-#retrieveLeaderConnectionInfo(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/runtime/util/LeaderConnectionInfo;
-#findConnectingAddress(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lscala/concurrent/duration/FiniteDuration;)Ljava/net/InetAddress;

+###org/apache/flink/runtime/util/EmptyMutableObjectIterator
@0.6-hadoop2-incubating
+#<init>()V
+#get()Lorg/apache/flink/util/MutableObjectIterator;
+#next(Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0-milestone-1
+#next()Ljava/lang/Object;

+###org/apache/flink/runtime/util/ReusingMutableToRegularIteratorWrapper
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/runtime/util/JvmShutdownSafeguard
@1.14.0
+#run()V
+#installAsShutdownHook(Lorg/slf4j/Logger;)V
+#installAsShutdownHook(Lorg/slf4j/Logger;J)V

+###org/apache/flink/runtime/util/ConfigurationParserUtils
@1.14.0
+#<init>()V
+#getSlot(Lorg/apache/flink/configuration/Configuration;)I
+#checkConfigParameter(ZLjava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V
+#getPageSize(Lorg/apache/flink/configuration/Configuration;)I
+#loadCommonConfiguration([Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/configuration/Configuration;

+###org/apache/flink/runtime/util/ZooKeeperUtils$SecureAclProvider
@1.14.0
+#<init>()V
+#getDefaultAcl()Ljava/util/List;
+#getAclForPath(Ljava/lang/String;)Ljava/util/List;

+###org/apache/flink/runtime/util/ZooKeeperUtils$ZkClientACLMode
@1.14.0
+#values()[Lorg/apache/flink/runtime/util/ZooKeeperUtils$ZkClientACLMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/util/ZooKeeperUtils$ZkClientACLMode;
+#fromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/util/ZooKeeperUtils$ZkClientACLMode;

+###org/apache/flink/runtime/util/ZooKeeperUtils
@0.10.0
+#startCuratorFramework(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;
+#isZooKeeperRecoveryMode(Lorg/apache/flink/configuration/Configuration;)Z
+#getZooKeeperEnsemble(Lorg/apache/flink/configuration/Configuration;)Ljava/lang/String;
+#createLeaderRetrievalService(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalService;
+#createLeaderElectionService(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionService;
+#createLeaderElectionService(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionService;
+#createSubmittedJobGraphs(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobmanager/ZooKeeperSubmittedJobGraphStore;
+#createCompletedCheckpoints(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/api/common/JobID;ILjava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
+#createCheckpointIDCounter(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/checkpoint/ZooKeeperCheckpointIDCounter;
@1.14.0
+#getLeaderPathForResourceManager()Ljava/lang/String;
+#getLeaderPathForDispatcher()Ljava/lang/String;
+#getLeaderPathForRestServer()Ljava/lang/String;
+#getLeaderPathForJobManager(Lorg/apache/flink/api/common/JobID;)Ljava/lang/String;
+#getLeaderPathForJob(Lorg/apache/flink/api/common/JobID;)Ljava/lang/String;
+#getJobsPath()Ljava/lang/String;
+#getCheckpointIdCounterPath()Ljava/lang/String;
+#generateConnectionInformationPath(Ljava/lang/String;)Ljava/lang/String;
+#generateLeaderLatchPath(Ljava/lang/String;)Ljava/lang/String;
+#startCuratorFramework(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;
+#createLeaderRetrievalService(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderretrieval/DefaultLeaderRetrievalService;
+#createLeaderRetrievalService(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/DefaultLeaderRetrievalService;
+#createLeaderRetrievalDriverFactory(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriverFactory;
+#createLeaderRetrievalDriverFactory(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriverFactory;
+#createLeaderElectionService(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderelection/DefaultLeaderElectionService;
+#createLeaderElectionService(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/DefaultLeaderElectionService;
+#createLeaderElectionDriverFactory(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionDriverFactory;
+#createLeaderElectionDriverFactory(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionDriverFactory;
+#createJobGraphs(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
+#createCompletedCheckpoints(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;ILjava/util/concurrent/Executor;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
+#getPathForJob(Lorg/apache/flink/api/common/JobID;)Ljava/lang/String;
+#createZooKeeperStateHandleStore(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/persistence/RetrievableStateStorageHelper;)Lorg/apache/flink/runtime/zookeeper/ZooKeeperStateHandleStore;
+#createCheckpointIDCounter(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/checkpoint/ZooKeeperCheckpointIDCounter;
+#createFileSystemStateStorage(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)Lorg/apache/flink/runtime/persistence/filesystem/FileSystemStateStorageHelper;
+#generateZookeeperPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#trimStartingSlash(Ljava/lang/String;)Ljava/lang/String;
+#useNamespaceAndEnsurePath(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;
+#createTreeCache(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/util/function/RunnableWithException;)Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/recipes/cache/TreeCache;
-#startCuratorFramework(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;
-#createLeaderRetrievalService(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalService;
-#createLeaderElectionService(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionService;
-#createLeaderElectionService(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionService;
-#createSubmittedJobGraphs(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobmanager/ZooKeeperSubmittedJobGraphStore;
-#createCompletedCheckpoints(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/api/common/JobID;ILjava/lang/ClassLoader;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#createCheckpointIDCounter(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/checkpoint/ZooKeeperCheckpointIDCounter;
@1.14.3
+#startCuratorFramework(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/highavailability/zookeeper/CuratorFrameworkWithUnhandledErrorListener;
+#startCuratorFramework(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFrameworkFactory$Builder;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/highavailability/zookeeper/CuratorFrameworkWithUnhandledErrorListener;
-#startCuratorFramework(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;
@1.15.0
+#getSingleLeaderElectionPathForJobManager(Lorg/apache/flink/api/common/JobID;)Ljava/lang/String;
+#getLeaderPath()Ljava/lang/String;
+#getDispatcherNode()Ljava/lang/String;
+#getResourceManagerNode()Ljava/lang/String;
+#getRestServerNode()Ljava/lang/String;
+#getLeaderLatchPath()Ljava/lang/String;
+#startCuratorFramework(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFrameworkFactory$Builder;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/highavailability/zookeeper/CuratorFrameworkWithUnhandledErrorListener;
+#createLeaderRetrievalService(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderretrieval/DefaultLeaderRetrievalService;
+#createLeaderRetrievalService(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/DefaultLeaderRetrievalService;
+#createLeaderRetrievalDriverFactory(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriverFactory;
+#createLeaderRetrievalDriverFactory(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriverFactory;
+#createLeaderElectionService(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderelection/DefaultLeaderElectionService;
+#createLeaderElectionService(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/DefaultLeaderElectionService;
+#createLeaderElectionDriverFactory(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionDriverFactory;
+#createLeaderElectionDriverFactory(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionDriverFactory;
+#writeLeaderInformationToZooKeeper(Lorg/apache/flink/runtime/leaderelection/LeaderInformation;Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/util/function/BooleanSupplier;Ljava/lang/String;)V
+#readLeaderInformation([B)Lorg/apache/flink/runtime/leaderelection/LeaderInformation;
+#createJobGraphs(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
+#createCompletedCheckpoints(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;ILorg/apache/flink/runtime/state/SharedStateRegistryFactory;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/jobgraph/RestoreMode;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
+#createZooKeeperStateHandleStore(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/persistence/RetrievableStateStorageHelper;)Lorg/apache/flink/runtime/zookeeper/ZooKeeperStateHandleStore;
+#createCheckpointIDCounter(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/checkpoint/ZooKeeperCheckpointIDCounter;
+#generateZookeeperPath([Ljava/lang/String;)Ljava/lang/String;
+#splitZooKeeperPath(Ljava/lang/String;)[Ljava/lang/String;
+#useNamespaceAndEnsurePath(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;
+#createTreeCache(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/util/function/RunnableWithException;)Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/recipes/cache/TreeCache;
+#deleteZNode(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
-#startCuratorFramework(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFrameworkFactory$Builder;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/highavailability/zookeeper/CuratorFrameworkWithUnhandledErrorListener;
-#createLeaderRetrievalService(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderretrieval/DefaultLeaderRetrievalService;
-#createLeaderRetrievalService(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/DefaultLeaderRetrievalService;
-#createLeaderRetrievalDriverFactory(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriverFactory;
-#createLeaderRetrievalDriverFactory(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriverFactory;
-#createLeaderElectionService(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderelection/DefaultLeaderElectionService;
-#createLeaderElectionService(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/DefaultLeaderElectionService;
-#createLeaderElectionDriverFactory(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionDriverFactory;
-#createLeaderElectionDriverFactory(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionDriverFactory;
-#createJobGraphs(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
-#createCompletedCheckpoints(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;ILjava/util/concurrent/Executor;)Lorg/apache/flink/runtime/checkpoint/CompletedCheckpointStore;
-#createZooKeeperStateHandleStore(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/persistence/RetrievableStateStorageHelper;)Lorg/apache/flink/runtime/zookeeper/ZooKeeperStateHandleStore;
-#createCheckpointIDCounter(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;)Lorg/apache/flink/runtime/checkpoint/ZooKeeperCheckpointIDCounter;
-#generateZookeeperPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#useNamespaceAndEnsurePath(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;
-#createTreeCache(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/util/function/RunnableWithException;)Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/recipes/cache/TreeCache;

+###org/apache/flink/runtime/util/NonReusingMutableToRegularIteratorWrapper
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/runtime/util/Runnables
@1.14.0
+#<init>()V
+#assertNoException(Ljava/lang/Runnable;)V
+#withUncaughtExceptionHandler(Ljava/lang/Runnable;Ljava/lang/Thread$UncaughtExceptionHandler;)Ljava/lang/Runnable;

+###org/apache/flink/runtime/taskmanager/TaskManagerLocation$HostNameSupplier
@1.14.0
+#getHostName()Ljava/lang/String;
+#getFqdnHostName()Ljava/lang/String;

+###org/apache/flink/runtime/taskmanager/TaskManagerLocation$DefaultHostNameSupplier
@1.14.0
+#<init>(Ljava/net/InetAddress;)V
+#getHostName()Ljava/lang/String;
+#getFqdnHostName()Ljava/lang/String;

+###org/apache/flink/runtime/taskmanager/TaskManagerLocation$IpOnlyHostNameSupplier
@1.14.0
+#<init>(Ljava/net/InetAddress;)V
+#getHostName()Ljava/lang/String;
+#getFqdnHostName()Ljava/lang/String;

+###org/apache/flink/runtime/taskmanager/TaskManagerLocation$ResolutionMode
@1.14.0
+#values()[Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation$ResolutionMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation$ResolutionMode;

+###org/apache/flink/runtime/taskmanager/TaskManagerLocation
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/net/InetAddress;ILorg/apache/flink/runtime/taskmanager/TaskManagerLocation$HostNameSupplier;)V
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/net/InetAddress;I)V
+#fromUnresolvedLocation(Lorg/apache/flink/runtime/taskmanager/UnresolvedTaskManagerLocation;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation$ResolutionMode;)Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#dataPort()I
+#address()Ljava/net/InetAddress;
+#addressString()Ljava/lang/String;
+#getFQDNHostname()Ljava/lang/String;
+#getHostname()Ljava/lang/String;
+#getHostName(Ljava/net/InetAddress;)Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;)I
+#compareTo(Ljava/lang/Object;)I
@1.16.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/net/InetAddress;ILorg/apache/flink/runtime/taskmanager/TaskManagerLocation$HostNameSupplier;Ljava/lang/String;)V
+#getNodeId()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/net/InetAddress;ILorg/apache/flink/runtime/taskmanager/TaskManagerLocation$HostNameSupplier;)V

+###org/apache/flink/runtime/taskmanager/UnresolvedTaskManagerLocation
@1.14.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;I)V
+#getResourceID()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getExternalAddress()Ljava/lang/String;
+#getDataPort()I
@1.16.0
+#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;ILjava/lang/String;)V
+#getNodeId()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/String;I)V

+###org/apache/flink/runtime/taskmanager/TaskExecutionState
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#<init>()V
+#getDescription()Ljava/lang/String;
+#getID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
+#getExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/Throwable;)V
+#getError()Ljava/lang/Throwable;
+#getID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
-#getDescription()Ljava/lang/String;
-#getID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/Throwable;)V
+#getError(Ljava/lang/ClassLoader;)Ljava/lang/Throwable;
+#getJobID()Lorg/apache/flink/api/common/JobID;
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/Throwable;)V
-#<init>()V
-#getError()Ljava/lang/Throwable;
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/Throwable;Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;)V
+#getAccumulators()Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/Throwable;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/Throwable;Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;Lorg/apache/flink/runtime/executiongraph/IOMetrics;)V
+#getIOMetrics()Lorg/apache/flink/runtime/executiongraph/IOMetrics;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/Throwable;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/Throwable;Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;)V
-#getJobID()Lorg/apache/flink/api/common/JobID;

+###org/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo
@0.10.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)V
+#getHostname()Ljava/lang/String;
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
@1.14.0
+#getTmpDirectories()[Ljava/lang/String;
+#shouldExitJvmOnOutOfMemoryError()Z
+#getTaskManagerExternalAddress()Ljava/lang/String;
+#getTaskManagerBindAddress()Ljava/lang/String;
-#<init>(Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)V
-#getHostname()Ljava/lang/String;
@1.15.0
+#getTmpWorkingDirectory()Ljava/io/File;

+###org/apache/flink/runtime/taskmanager/TaskManagerActions
@1.14.0
+#notifyFatalError(Ljava/lang/String;Ljava/lang/Throwable;)V
+#failTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;)V
+#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V

+###org/apache/flink/runtime/taskmanager/CheckpointResponder
@1.14.0
+#acknowledgeCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#reportCheckpointMetrics(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#declineCheckpoint(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V

+###org/apache/flink/runtime/taskmanager/TaskActions
@1.14.0
+#failExternally(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/taskmanager/NettyShuffleEnvironmentConfiguration
@1.14.0
+#<init>(IIIIIILjava/time/Duration;ZLorg/apache/flink/runtime/io/network/netty/NettyConfig;[Ljava/lang/String;Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;ZLjava/lang/String;IJII)V
+#numNetworkBuffers()I
+#networkBufferSize()I
+#partitionRequestInitialBackoff()I
+#partitionRequestMaxBackoff()I
+#networkBuffersPerChannel()I
+#floatingNetworkBuffersPerGate()I
+#batchShuffleReadMemoryBytes()J
+#sortShuffleMinBuffers()I
+#sortShuffleMinParallelism()I
+#getRequestSegmentsTimeout()Ljava/time/Duration;
+#nettyConfig()Lorg/apache/flink/runtime/io/network/netty/NettyConfig;
+#isNetworkDetailedMetrics()Z
+#getTempDirs()[Ljava/lang/String;
+#getBlockingSubpartitionType()Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;
+#isBlockingShuffleCompressionEnabled()Z
+#isSSLEnabled()Z
+#getCompressionCodec()Ljava/lang/String;
+#getMaxBuffersPerChannel()I
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/MemorySize;ZLjava/net/InetAddress;)Lorg/apache/flink/runtime/taskmanager/NettyShuffleEnvironmentConfiguration;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.15.0
+#<init>(IIIIIILjava/time/Duration;ZLorg/apache/flink/runtime/io/network/netty/NettyConfig;[Ljava/lang/String;Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;ZLjava/lang/String;IJIILorg/apache/flink/runtime/throughput/BufferDebloatConfiguration;IZ)V
+#isConnectionReuseEnabled()Z
+#getDebloatConfiguration()Lorg/apache/flink/runtime/throughput/BufferDebloatConfiguration;
+#getMaxNumberOfConnections()I
-#<init>(IIIIIILjava/time/Duration;ZLorg/apache/flink/runtime/io/network/netty/NettyConfig;[Ljava/lang/String;Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;ZLjava/lang/String;IJII)V
@1.16.0
+#<init>(IIIIIILjava/time/Duration;ZLorg/apache/flink/runtime/io/network/netty/NettyConfig;[Ljava/lang/String;Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;ZLjava/lang/String;IJIILorg/apache/flink/runtime/throughput/BufferDebloatConfiguration;IZI)V
+#isBatchShuffleCompressionEnabled()Z
+#getMaxOverdraftBuffersPerGate()I
-#<init>(IIIIIILjava/time/Duration;ZLorg/apache/flink/runtime/io/network/netty/NettyConfig;[Ljava/lang/String;Lorg/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionType;ZLjava/lang/String;IJIILorg/apache/flink/runtime/throughput/BufferDebloatConfiguration;IZ)V
-#isBlockingShuffleCompressionEnabled()Z

+###org/apache/flink/runtime/taskmanager/AsyncExceptionHandler
@1.15.0
+#handleAsyncException(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/taskmanager/Task$NotifyCheckpointOperation
@1.15.0
+#values()[Lorg/apache/flink/runtime/taskmanager/Task$NotifyCheckpointOperation;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/taskmanager/Task$NotifyCheckpointOperation;

+###org/apache/flink/runtime/taskmanager/Task
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/RuntimeEnvironment;Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getVertexID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
+#getEnvironment()Lorg/apache/flink/runtime/execution/Environment;
+#markAsFailed()V
+#cancelExecution()V
+#killExecution()V
+#isTerminated()Z
+#startExecution()V
+#registerProfiler(Lorg/apache/flink/runtime/profiling/TaskManagerProfiler;Lorg/apache/flink/configuration/Configuration;)V
+#unregisterMemoryManager(Lorg/apache/flink/runtime/memorymanager/MemoryManager;)V
+#unregisterProfiler(Lorg/apache/flink/runtime/profiling/TaskManagerProfiler;)V
+#getExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#executionStateChanged(Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#userThreadStarted(Ljava/lang/Thread;)V
+#userThreadFinished(Ljava/lang/Thread;)V
+#registerExecutionListener(Lorg/apache/flink/runtime/execution/ExecutionListener;)V
+#unregisterExecutionListener(Lorg/apache/flink/runtime/execution/ExecutionListener;)V
+#isCanceled()Z
+#getRuntimeEnvironment()Lorg/apache/flink/runtime/execution/RuntimeEnvironment;
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;IILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
+#getVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getSubtaskIndex()I
+#getNumberOfSubtasks()I
+#getExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#setEnvironment(Lorg/apache/flink/runtime/execution/RuntimeEnvironment;)V
+#getEnvironment()Lorg/apache/flink/runtime/execution/RuntimeEnvironment;
+#isCanceledOrFailed()Z
+#getTaskName()Ljava/lang/String;
+#getTaskNameWithSubtasks()Ljava/lang/String;
+#markAsFinished()Z
+#markFailed(Ljava/lang/Throwable;)V
+#failExternally(Ljava/lang/Throwable;)V
+#cancelingDone()V
+#startExecution()Z
+#toString()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/RuntimeEnvironment;Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#getVertexID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
-#getEnvironment()Lorg/apache/flink/runtime/execution/Environment;
-#markAsFailed()V
-#killExecution()V
-#isTerminated()Z
-#startExecution()V
-#executionStateChanged(Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
-#userThreadStarted(Ljava/lang/Thread;)V
-#userThreadFinished(Ljava/lang/Thread;)V
-#isCanceled()Z
-#getRuntimeEnvironment()Lorg/apache/flink/runtime/execution/RuntimeEnvironment;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;IILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;Lakka/actor/ActorRef;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getFailureCause()Ljava/lang/Throwable;
+#getInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
+#getWriters()[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
+#getProducedPartitions()[Lorg/apache/flink/runtime/io/network/partition/ResultPartition;
+#registerExecutionListener(Lakka/actor/ActorRef;)V
+#unregisterExecutionListener(Lakka/actor/ActorRef;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;IILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
-#registerExecutionListener(Lorg/apache/flink/runtime/execution/ExecutionListener;)V
-#unregisterExecutionListener(Lorg/apache/flink/runtime/execution/ExecutionListener;)V
@0.9.0
+#<init>(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lakka/actor/ActorRef;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;Lorg/apache/flink/runtime/filecache/FileCache;)V
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getIndexInSubtaskGroup()I
+#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getTaskConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getAllWriters()[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
+#getAllInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
+#getInputGateById(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
+#getExecutingThread()Ljava/lang/Thread;
+#startTaskThread()V
+#run()V
+#triggerCheckpointBarrier(JJ)V
+#confirmCheckpoint(JJ)V
+#onPartitionStateUpdate(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#getTaskNameWithSubtask(Ljava/lang/String;II)Ljava/lang/String;
+#getTaskNameWithSubtaskAndID(Ljava/lang/String;IILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Ljava/lang/String;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;IILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;Lakka/actor/ActorRef;)V
-#getVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
-#getSubtaskIndex()I
-#setEnvironment(Lorg/apache/flink/runtime/execution/RuntimeEnvironment;)V
-#getEnvironment()Lorg/apache/flink/runtime/execution/RuntimeEnvironment;
-#markAsFinished()Z
-#markFailed(Ljava/lang/Throwable;)V
-#cancelingDone()V
-#startExecution()Z
-#unregisterMemoryManager(Lorg/apache/flink/runtime/memorymanager/MemoryManager;)V
-#registerProfiler(Lorg/apache/flink/runtime/profiling/TaskManagerProfiler;Lorg/apache/flink/configuration/Configuration;)V
-#unregisterProfiler(Lorg/apache/flink/runtime/profiling/TaskManagerProfiler;)V
-#getInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
-#getWriters()[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
@0.10.0
+#<init>(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/instance/ActorGateway;Lorg/apache/flink/runtime/instance/ActorGateway;Lscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;Lorg/apache/flink/runtime/filecache/FileCache;Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;)V
+#getAccumulatorRegistry()Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry;
+#registerExecutionListener(Lorg/apache/flink/runtime/instance/ActorGateway;)V
+#notifyCheckpointComplete(J)V
-#<init>(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lakka/actor/ActorRef;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;Lorg/apache/flink/runtime/filecache/FileCache;)V
-#registerExecutionListener(Lakka/actor/ActorRef;)V
-#unregisterExecutionListener(Lakka/actor/ActorRef;)V
-#confirmCheckpoint(JJ)V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/JobInformation;Lorg/apache/flink/runtime/executiongraph/TaskInformation;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;IILjava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/shuffle/ShuffleEnvironment;Lorg/apache/flink/runtime/taskexecutor/KvStateService;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/state/TaskStateManager;Lorg/apache/flink/runtime/taskmanager/TaskManagerActions;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/jobgraph/tasks/TaskOperatorEventGateway;Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderHandle;Lorg/apache/flink/runtime/filecache/FileCache;Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;Lorg/apache/flink/runtime/taskexecutor/PartitionProducerStateChecker;Ljava/util/concurrent/Executor;)V
+#getAllocationId()Lorg/apache/flink/runtime/clusterframework/types/AllocationID;
+#getTaskInfo()Lorg/apache/flink/api/common/TaskInfo;
+#getMetricGroup()Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#isBackPressured()Z
+#setupPartitionsAndGates([Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;)V
+#requestPartitionProducerState(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Ljava/util/function/Consumer;)V
+#triggerCheckpointBarrier(JJLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)V
+#notifyCheckpointAborted(JJ)V
+#deliverOperatorEvent(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)V
+#logTaskThreadStackTrace(Ljava/lang/Thread;Ljava/lang/String;JLjava/lang/String;)V
-#<init>(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/instance/ActorGateway;Lorg/apache/flink/runtime/instance/ActorGateway;Lscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;Lorg/apache/flink/runtime/filecache/FileCache;Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;)V
-#getIndexInSubtaskGroup()I
-#getNumberOfSubtasks()I
-#getTaskName()Ljava/lang/String;
-#getTaskNameWithSubtasks()Ljava/lang/String;
-#getAllWriters()[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
-#getAllInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
-#getProducedPartitions()[Lorg/apache/flink/runtime/io/network/partition/ResultPartition;
-#getInputGateById(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
-#registerExecutionListener(Lorg/apache/flink/runtime/instance/ActorGateway;)V
-#triggerCheckpointBarrier(JJ)V
-#onPartitionStateUpdate(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
-#getTaskNameWithSubtask(Ljava/lang/String;II)Ljava/lang/String;
-#getTaskNameWithSubtaskAndID(Ljava/lang/String;IILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Ljava/lang/String;
@1.15.0
+#notifyCheckpointSubsumed(J)V
@1.16.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/JobInformation;Lorg/apache/flink/runtime/executiongraph/TaskInformation;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/shuffle/ShuffleEnvironment;Lorg/apache/flink/runtime/taskexecutor/KvStateService;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/state/TaskStateManager;Lorg/apache/flink/runtime/taskmanager/TaskManagerActions;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/jobgraph/tasks/TaskOperatorEventGateway;Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderHandle;Lorg/apache/flink/runtime/filecache/FileCache;Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;Lorg/apache/flink/runtime/taskexecutor/PartitionProducerStateChecker;Ljava/util/concurrent/Executor;)V
-#<init>(Lorg/apache/flink/runtime/executiongraph/JobInformation;Lorg/apache/flink/runtime/executiongraph/TaskInformation;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;IILjava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/shuffle/ShuffleEnvironment;Lorg/apache/flink/runtime/taskexecutor/KvStateService;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/state/TaskStateManager;Lorg/apache/flink/runtime/taskmanager/TaskManagerActions;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/jobgraph/tasks/TaskOperatorEventGateway;Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager$ClassLoaderHandle;Lorg/apache/flink/runtime/filecache/FileCache;Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;Lorg/apache/flink/runtime/taskexecutor/PartitionProducerStateChecker;Ljava/util/concurrent/Executor;)V

+###org/apache/flink/runtime/taskmanager/MemoryLogger
@0.9.0
+#<init>(Lorg/slf4j/Logger;J)V
+#<init>(Lorg/slf4j/Logger;JLakka/actor/ActorSystem;)V
+#shutdown()V
+#run()V
+#getMemoryUsageStatsAsString(Ljava/lang/management/MemoryMXBean;)Ljava/lang/String;
+#getMemoryPoolStatsAsString(Ljava/util/List;)Ljava/lang/String;
+#getGarbageCollectorStatsAsString(Ljava/util/List;)Ljava/lang/String;
@0.10.0
-#<init>(Lorg/slf4j/Logger;J)V
@1.14.0
+#startIfConfigured(Lorg/slf4j/Logger;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/CompletableFuture;)V
+#<init>(Lorg/slf4j/Logger;JLjava/util/concurrent/CompletableFuture;)V
+#getDirectMemoryStatsAsString(Ljava/lang/management/BufferPoolMXBean;)Ljava/lang/String;
-#<init>(Lorg/slf4j/Logger;JLakka/actor/ActorSystem;)V

+###org/apache/flink/runtime/taskmanager/DispatcherThreadFactory
@0.10.0
+#<init>(Ljava/lang/ThreadGroup;Ljava/lang/String;)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;

+###org/apache/flink/runtime/taskmanager/InputGateWithMetrics
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;Lorg/apache/flink/metrics/Counter;Lorg/apache/flink/runtime/throughput/ThroughputCalculator;)V
+#getAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#resumeConsumption(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#acknowledgeAllRecordsProcessed(Lorg/apache/flink/runtime/checkpoint/channel/InputChannelInfo;)V
+#getNumberOfInputChannels()I
+#getChannel(I)Lorg/apache/flink/runtime/io/network/partition/consumer/InputChannel;
+#getGateIndex()I
+#getUnfinishedChannels()Ljava/util/List;
+#getBuffersInUseCount()I
+#announceBufferSize(I)V
+#isFinished()Z
+#hasReceivedEndOfData()Z
+#setup()V
+#getStateConsumedFuture()Ljava/util/concurrent/CompletableFuture;
+#requestPartitions()V
+#setChannelStateWriter(Lorg/apache/flink/runtime/checkpoint/channel/ChannelStateWriter;)V
+#getNext()Ljava/util/Optional;
+#pollNext()Ljava/util/Optional;
+#sendTaskEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
+#close()V
+#getPriorityEventAvailableFuture()Ljava/util/concurrent/CompletableFuture;
+#finishReadRecoveredState()V
@1.15.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;Lorg/apache/flink/metrics/Counter;)V
+#triggerDebloating()V
+#hasReceivedEndOfData()Lorg/apache/flink/runtime/io/PullingAsyncDataInput$EndOfDataStatus;
-#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;Lorg/apache/flink/metrics/Counter;Lorg/apache/flink/runtime/throughput/ThroughputCalculator;)V
-#getBuffersInUseCount()I
-#announceBufferSize(I)V
-#hasReceivedEndOfData()Z

+###org/apache/flink/runtime/taskmanager/NoOpTaskActions
@1.14.0
+#<init>()V
+#failExternally(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/taskmanager/ConsumableNotifyingResultPartitionWriterDecorator
@1.14.0
+#decorate(Ljava/util/Collection;[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;Lorg/apache/flink/runtime/taskmanager/TaskActions;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;)[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
@1.16.0
-###org/apache/flink/runtime/taskmanager/ConsumableNotifyingResultPartitionWriterDecorator

+###org/apache/flink/runtime/taskmanager/RuntimeEnvironment
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Ljava/util/Map;[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;Lakka/actor/ActorRef;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#getTaskName()Ljava/lang/String;
+#getTaskNameWithSubtasks()Ljava/lang/String;
+#getNumberOfSubtasks()I
+#getIndexInSubtaskGroup()I
+#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getTaskConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getUserClassLoader()Ljava/lang/ClassLoader;
+#getMemoryManager()Lorg/apache/flink/runtime/memorymanager/MemoryManager;
+#getIOManager()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;
+#getBroadcastVariableManager()Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;
+#getInputSplitProvider()Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;
+#getDistributedCacheEntries()Ljava/util/Map;
+#getWriter(I)Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
+#getAllWriters()[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
+#getInputGate(I)Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;
+#getAllInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;
+#reportAccumulators(Ljava/util/Map;)V
+#acknowledgeCheckpoint(J)V
+#acknowledgeCheckpoint(JLorg/apache/flink/runtime/state/StateHandle;)V
@0.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Ljava/util/Map;[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;Lorg/apache/flink/runtime/instance/ActorGateway;Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;)V
+#getTaskManagerInfo()Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;
+#getMemoryManager()Lorg/apache/flink/runtime/memory/MemoryManager;
+#getAccumulatorRegistry()Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Ljava/util/Map;[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;Lakka/actor/ActorRef;)V
-#getMemoryManager()Lorg/apache/flink/runtime/memorymanager/MemoryManager;
-#reportAccumulators(Ljava/util/Map;)V
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/api/common/TaskInfo;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/UserCodeClassLoader;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/state/TaskStateManager;Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Ljava/util/Map;[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;[Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/jobgraph/tasks/TaskOperatorEventGateway;Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/throughput/ThroughputCalculator;)V
+#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
+#getTaskInfo()Lorg/apache/flink/api/common/TaskInfo;
+#getMetricGroup()Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;
+#getUserCodeClassLoader()Lorg/apache/flink/util/UserCodeClassLoader;
+#getTaskStateManager()Lorg/apache/flink/runtime/state/TaskStateManager;
+#getGlobalAggregateManager()Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;
+#getTaskKvStateRegistry()Lorg/apache/flink/runtime/query/TaskKvStateRegistry;
+#getInputGate(I)Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;
+#getAllInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;
+#getTaskEventDispatcher()Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;
+#getExternalResourceInfoProvider()Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;
+#acknowledgeCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;)V
+#acknowledgeCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointMetrics;Lorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#declineCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V
+#getOperatorCoordinatorEventGateway()Lorg/apache/flink/runtime/jobgraph/tasks/TaskOperatorEventGateway;
+#failExternally(Ljava/lang/Throwable;)V
+#setMainMailboxExecutor(Lorg/apache/flink/api/common/operators/MailboxExecutor;)V
+#getMainMailboxExecutor()Lorg/apache/flink/api/common/operators/MailboxExecutor;
+#setAsyncOperationsThreadPool(Ljava/util/concurrent/ExecutorService;)V
+#getAsyncOperationsThreadPool()Ljava/util/concurrent/ExecutorService;
+#getThroughputCalculator()Lorg/apache/flink/runtime/throughput/ThroughputCalculator;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/String;Ljava/lang/String;IILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Ljava/util/Map;[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;Lorg/apache/flink/runtime/instance/ActorGateway;Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;)V
-#getTaskName()Ljava/lang/String;
-#getTaskNameWithSubtasks()Ljava/lang/String;
-#getNumberOfSubtasks()I
-#getIndexInSubtaskGroup()I
-#getUserClassLoader()Ljava/lang/ClassLoader;
-#getInputGate(I)Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;
-#getAllInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;
-#acknowledgeCheckpoint(J)V
-#acknowledgeCheckpoint(JLorg/apache/flink/runtime/state/StateHandle;)V
@1.15.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/api/common/TaskInfo;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/UserCodeClassLoader;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/state/TaskStateManager;Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Ljava/util/Map;[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;[Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/jobgraph/tasks/TaskOperatorEventGateway;Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;)V
+#setCheckpointStorageAccess(Lorg/apache/flink/runtime/state/CheckpointStorageAccess;)V
+#getCheckpointStorageAccess()Lorg/apache/flink/runtime/state/CheckpointStorageAccess;
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/ExecutionConfig;Lorg/apache/flink/api/common/TaskInfo;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/UserCodeClassLoader;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/state/TaskStateManager;Lorg/apache/flink/runtime/taskexecutor/GlobalAggregateManager;Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry;Lorg/apache/flink/runtime/query/TaskKvStateRegistry;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Ljava/util/Map;[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;[Lorg/apache/flink/runtime/io/network/partition/consumer/IndexedInputGate;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/taskmanager/CheckpointResponder;Lorg/apache/flink/runtime/jobgraph/tasks/TaskOperatorEventGateway;Lorg/apache/flink/runtime/taskmanager/TaskManagerRuntimeInfo;Lorg/apache/flink/runtime/metrics/groups/TaskMetricGroup;Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;Lorg/apache/flink/runtime/throughput/ThroughputCalculator;)V
-#getThroughputCalculator()Lorg/apache/flink/runtime/throughput/ThroughputCalculator;

+###org/apache/flink/runtime/taskmanager/AsynchronousException
@1.15.0
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/JobException
@0.7.0-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>([Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
+#addVertexToGroup(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
+#removeVertexFromGroup(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
+#getJobVertexIds()Ljava/util/Set;
+#getTaskAssignment()Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment;
+#toString()Ljava/lang/String;
@0.8.0
+#clearTaskAssignment()V
@0.9.0
+#getTaskAssignment()Lorg/apache/flink/runtime/instance/SlotSharingGroupAssignment;
-#getTaskAssignment()Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment;
@1.14.0
+#getSlotSharingGroupId()Lorg/apache/flink/runtime/instance/SlotSharingGroupId;
+#setResourceProfile(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
-#<init>([Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
-#getTaskAssignment()Lorg/apache/flink/runtime/instance/SlotSharingGroupAssignment;
-#clearTaskAssignment()V

+###org/apache/flink/runtime/jobmanager/scheduler/CoLocationGroup
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>([Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#addVertex(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#mergeInto(Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationGroup;)V
+#getLocationConstraint(I)Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;
+#ensureConstraints(I)V
+#getId()Lorg/apache/flink/runtime/AbstractID;
@0.8.0
+#resetConstraints()V
-#ensureConstraints(I)V
@0.9.0-milestone-1
+#getId()Lorg/apache/flink/util/AbstractID;
-#getId()Lorg/apache/flink/runtime/AbstractID;
@0.9.0
+#<init>([Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#addVertex(Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
-#<init>([Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#addVertex(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
@1.14.0
+#getVertexIds()Ljava/util/List;
-#<init>()V
-#<init>([Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
-#addVertex(Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
-#mergeInto(Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationGroup;)V
-#resetConstraints()V

+###org/apache/flink/runtime/jobmanager/scheduler/Locality
@0.7.0-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;

+###org/apache/flink/runtime/jobmanager/scheduler/CoLocationGroupImpl
@1.14.0
+#<init>([Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#addVertex(Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#getVertexIds()Ljava/util/List;
+#getLocationConstraint(I)Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;
+#mergeInto(Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationGroupImpl;)V
+#getId()Lorg/apache/flink/util/AbstractID;

+###org/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint
@0.7.0-hadoop2-incubating
+#getSharedSlot()Lorg/apache/flink/runtime/jobmanager/scheduler/SharedSlot;
+#getLocation()Lorg/apache/flink/runtime/instance/Instance;
+#setSharedSlot(Lorg/apache/flink/runtime/jobmanager/scheduler/SharedSlot;)V
+#isUnassigned()Z
+#getGroupId()Lorg/apache/flink/runtime/AbstractID;
@0.8.0
+#isUnassignedOrDisposed()Z
@0.8.1
+#getSharedSlot()Lorg/apache/flink/runtime/instance/SharedSlot;
+#setSharedSlot(Lorg/apache/flink/runtime/instance/SharedSlot;)V
+#toString()Ljava/lang/String;
-#getSharedSlot()Lorg/apache/flink/runtime/jobmanager/scheduler/SharedSlot;
-#setSharedSlot(Lorg/apache/flink/runtime/jobmanager/scheduler/SharedSlot;)V
@0.9.0-milestone-1
+#getGroupId()Lorg/apache/flink/util/AbstractID;
-#getGroupId()Lorg/apache/flink/runtime/AbstractID;
@0.9.0
+#isAssigned()Z
+#isAssignedAndAlive()Z
+#lockLocation()V
-#isUnassigned()Z
-#isUnassignedOrDisposed()Z
@1.14.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#getSharedSlot()Lorg/apache/flink/runtime/instance/SharedSlot;
-#getGroupId()Lorg/apache/flink/util/AbstractID;
-#isAssigned()Z
-#isAssignedAndAlive()Z
-#getLocation()Lorg/apache/flink/runtime/instance/Instance;
-#setSharedSlot(Lorg/apache/flink/runtime/instance/SharedSlot;)V
-#lockLocation()V
-#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobmanager/scheduler/NoResourceAvailableException
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/jobmanager/scheduler/ScheduledUnit;)V
+#<init>(Ljava/lang/String;)V
@0.8.1
+#<init>(III)V
@0.9.0-milestone-1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#withoutStackTrace(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/scheduler/NoResourceAvailableException;
-#<init>(Lorg/apache/flink/runtime/jobmanager/scheduler/ScheduledUnit;)V
-#<init>(III)V

+###org/apache/flink/runtime/jobmanager/scheduler/LocationPreferenceConstraint
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobmanager/scheduler/LocationPreferenceConstraint;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/scheduler/LocationPreferenceConstraint;

+###org/apache/flink/runtime/jobmanager/slots/TaskManagerGateway
@1.14.0
+#getAddress()Ljava/lang/String;
+#submitTask(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#updatePartitions(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Iterable;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#releasePartitions(Lorg/apache/flink/api/common/JobID;Ljava/util/Set;)V
+#notifyCheckpointComplete(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;JJ)V
+#notifyCheckpointAborted(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;JJJ)V
+#triggerCheckpoint(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;JJLorg/apache/flink/runtime/checkpoint/CheckpointOptions;)Ljava/util/concurrent/CompletableFuture;
+#freeSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#sendOperatorEventToTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#notifyCheckpointOnComplete(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;JJJ)V
-#notifyCheckpointComplete(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/api/common/JobID;JJ)V

+###org/apache/flink/runtime/jobmanager/JobGraphStore$JobGraphListener
@1.14.0
+#onAddedJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#onRemovedJobGraph(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/jobmanager/JobGraphStore
@1.14.0
+#start(Lorg/apache/flink/runtime/jobmanager/JobGraphStore$JobGraphListener;)V
+#stop()V
+#recoverJobGraph(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#getJobIds()Ljava/util/Collection;

+###org/apache/flink/runtime/jobmanager/JobGraphWriter
@1.14.0
+#putJobGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#releaseJobGraph(Lorg/apache/flink/api/common/JobID;)V
@1.15.0
+#localCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#globalCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
-#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
-#releaseJobGraph(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/jobmanager/PartitionProducerDisposedException
@1.14.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V

+###org/apache/flink/runtime/jobmanager/JobPersistenceComponentFactory
@1.15.0
+#createJobGraphStore()Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
+#createJobResultStore()Lorg/apache/flink/runtime/highavailability/JobResultStore;

+###org/apache/flink/runtime/jobmanager/OnCompletionActions
@1.14.0
+#jobReachedGloballyTerminalState(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)V
+#jobMasterFailed(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/jobmanager/ZooKeeperJobGraphStoreUtil
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobmanager/ZooKeeperJobGraphStoreUtil;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/ZooKeeperJobGraphStoreUtil;
+#jobIDToName(Lorg/apache/flink/api/common/JobID;)Ljava/lang/String;
+#nameToJobID(Ljava/lang/String;)Lorg/apache/flink/api/common/JobID;

+###org/apache/flink/runtime/jobmanager/JobGraphStoreUtil
@1.14.0
+#jobIDToName(Lorg/apache/flink/api/common/JobID;)Ljava/lang/String;
+#nameToJobID(Ljava/lang/String;)Lorg/apache/flink/api/common/JobID;

+###org/apache/flink/runtime/jobmanager/HighAvailabilityMode
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobmanager/HighAvailabilityMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/HighAvailabilityMode;
+#fromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobmanager/HighAvailabilityMode;
+#isHighAvailabilityModeActivated(Lorg/apache/flink/configuration/Configuration;)Z

+###org/apache/flink/runtime/jobmanager/ZooKeeperJobGraphStoreWatcher
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/recipes/cache/PathChildrenCache;)V
+#start(Lorg/apache/flink/runtime/jobmanager/JobGraphStore$JobGraphListener;)V
+#stop()V
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/recipes/cache/PathChildrenCache;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/recipes/cache/PathChildrenCache;)V

+###org/apache/flink/runtime/jobmanager/JobGraphStoreWatcher
@1.14.0
+#start(Lorg/apache/flink/runtime/jobmanager/JobGraphStore$JobGraphListener;)V
+#stop()V

+###org/apache/flink/runtime/jobmanager/StandaloneJobGraphStore
@1.14.0
+#<init>()V
+#start(Lorg/apache/flink/runtime/jobmanager/JobGraphStore$JobGraphListener;)V
+#stop()V
+#putJobGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#releaseJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#getJobIds()Ljava/util/Collection;
+#recoverJobGraph(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobgraph/JobGraph;
@1.15.0
-#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
-#releaseJobGraph(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/jobmanager/HaServicesJobPersistenceComponentFactory
@1.15.0
+#<init>(Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;)V
+#createJobGraphStore()Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
+#createJobResultStore()Lorg/apache/flink/runtime/highavailability/JobResultStore;

+###org/apache/flink/runtime/jobmanager/JobManagerProcessUtils
@1.14.0
+#processSpecFromConfigWithNewOptionToInterpretLegacyHeap(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/configuration/ConfigOption;)Lorg/apache/flink/runtime/jobmanager/JobManagerProcessSpec;
+#createDefaultJobManagerProcessSpec(I)Lorg/apache/flink/runtime/jobmanager/JobManagerProcessSpec;
+#generateJvmParametersStr(Lorg/apache/flink/runtime/jobmanager/JobManagerProcessSpec;Lorg/apache/flink/configuration/Configuration;)Ljava/lang/String;
+#generateDynamicConfigsStr(Lorg/apache/flink/runtime/jobmanager/JobManagerProcessSpec;)Ljava/lang/String;

+###org/apache/flink/runtime/jobmanager/JobManagerProcessSpec
@1.14.0
+#<init>(Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;Lorg/apache/flink/configuration/MemorySize;)V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/jobmanager/DefaultJobGraphStore
@1.14.0
+#<init>(Lorg/apache/flink/runtime/persistence/StateHandleStore;Lorg/apache/flink/runtime/jobmanager/JobGraphStoreWatcher;Lorg/apache/flink/runtime/jobmanager/JobGraphStoreUtil;)V
+#start(Lorg/apache/flink/runtime/jobmanager/JobGraphStore$JobGraphListener;)V
+#stop()V
+#recoverJobGraph(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#putJobGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#releaseJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#getJobIds()Ljava/util/Collection;
+#onAddedJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#onRemovedJobGraph(Lorg/apache/flink/api/common/JobID;)V
@1.15.0
+#globalCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#localCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
-#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
-#releaseJobGraph(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/jobmanager/ThrowingJobGraphWriter
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobmanager/ThrowingJobGraphWriter;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/ThrowingJobGraphWriter;
+#putJobGraph(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#releaseJobGraph(Lorg/apache/flink/api/common/JobID;)V
@1.15.0
-#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
-#releaseJobGraph(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/jobmanager/NoOpJobGraphStoreWatcher
@1.14.0
+#values()[Lorg/apache/flink/runtime/jobmanager/NoOpJobGraphStoreWatcher;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/NoOpJobGraphStoreWatcher;
+#start(Lorg/apache/flink/runtime/jobmanager/JobGraphStore$JobGraphListener;)V
+#stop()V

+###org/apache/flink/runtime/OperatorIDPair
@1.14.0
+#of(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/jobgraph/OperatorID;)Lorg/apache/flink/runtime/OperatorIDPair;
+#generatedIDOnly(Lorg/apache/flink/runtime/jobgraph/OperatorID;)Lorg/apache/flink/runtime/OperatorIDPair;
+#getGeneratedOperatorID()Lorg/apache/flink/runtime/jobgraph/OperatorID;
+#getUserDefinedOperatorID()Ljava/util/Optional;

+###org/apache/flink/runtime/accumulators/StringifiedAccumulatorResult
@0.9.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getValue()Ljava/lang/String;
@0.10.0
+#stringifyAccumulatorResults(Ljava/util/Map;)[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;

+###org/apache/flink/runtime/accumulators/AccumulatorSnapshot
@0.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Map;Ljava/util/Map;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getExecutionAttemptID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#deserializeFlinkAccumulators()Ljava/util/Map;
+#deserializeUserAccumulators(Ljava/lang/ClassLoader;)Ljava/util/Map;
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Map;)V
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Map;Ljava/util/Map;)V
-#deserializeFlinkAccumulators()Ljava/util/Map;

+###org/apache/flink/runtime/accumulators/AccumulatorRegistry
@0.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#getSnapshot()Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;
+#getUserMap()Ljava/util/Map;
+#getReadWriteReporter()Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;
@1.14.0
-#getReadWriteReporter()Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;

+###org/apache/flink/runtime/memory/AbstractPagedInputView
@0.10.0
+#getCurrentSegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getCurrentPositionInSegment()I
+#getCurrentSegmentLimit()I
+#read([B)I
+#read([BII)I
+#readFully([B)V
+#readFully([BII)V
+#readBoolean()Z
+#readByte()B
+#readUnsignedByte()I
+#readShort()S
+#readUnsignedShort()I
+#readChar()C
+#readInt()I
+#readLong()J
+#readFloat()F
+#readDouble()D
+#readLine()Ljava/lang/String;
+#readUTF()Ljava/lang/String;
+#skipBytes(I)I
+#skipBytesToRead(I)V
@1.14.0
+#advance()V
+#getHeaderLength()I

+###org/apache/flink/runtime/memory/MemoryManager
@0.10.0
+#<init>(JI)V
+#<init>(JIILorg/apache/flink/core/memory/MemoryType;Z)V
+#shutdown()V
+#isShutdown()Z
+#verifyEmpty()Z
+#allocatePages(Ljava/lang/Object;I)Ljava/util/List;
+#allocatePages(Ljava/lang/Object;Ljava/util/List;I)V
+#release(Lorg/apache/flink/core/memory/MemorySegment;)V
+#release(Ljava/util/Collection;)V
+#releaseAll(Ljava/lang/Object;)V
+#getMemoryType()Lorg/apache/flink/core/memory/MemoryType;
+#isPreAllocated()Z
+#getPageSize()I
+#getMemorySize()J
+#getTotalNumPages()I
+#computeNumberOfPages(D)I
+#computeMemorySize(D)J
+#roundDownToPageSizeMultiple(J)J
@1.14.0
+#allocatePages(Ljava/lang/Object;Ljava/util/Collection;I)V
+#reserveMemory(Ljava/lang/Object;J)V
+#releaseMemory(Ljava/lang/Object;J)V
+#releaseAllMemory(Ljava/lang/Object;)V
+#getSharedMemoryResourceForManagedMemory(Ljava/lang/String;Lorg/apache/flink/util/function/LongFunctionWithException;D)Lorg/apache/flink/runtime/memory/OpaqueMemoryResource;
+#getExternalSharedMemoryResource(Ljava/lang/String;Lorg/apache/flink/util/function/LongFunctionWithException;J)Lorg/apache/flink/runtime/memory/OpaqueMemoryResource;
+#availableMemory()J
+#create(JI)Lorg/apache/flink/runtime/memory/MemoryManager;
-#<init>(JI)V
-#<init>(JIILorg/apache/flink/core/memory/MemoryType;Z)V
-#allocatePages(Ljava/lang/Object;Ljava/util/List;I)V
-#getMemoryType()Lorg/apache/flink/core/memory/MemoryType;
-#isPreAllocated()Z
-#getTotalNumPages()I
-#roundDownToPageSizeMultiple(J)J

+###org/apache/flink/runtime/memory/MemoryAllocationException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/memory/MemoryReservationException
@1.14.0

+###org/apache/flink/runtime/memory/OpaqueMemoryResource
@1.14.0
+#<init>(Ljava/lang/Object;JLorg/apache/flink/util/function/ThrowingRunnable;)V
+#getResourceHandle()Ljava/lang/Object;
+#getSize()J
+#close()V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/memory/AbstractPagedOutputView
@0.10.0
+#getCurrentSegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getCurrentPositionInSegment()I
+#getSegmentSize()I
+#write(I)V
+#write([B)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeShort(I)V
+#writeChar(I)V
+#writeInt(I)V
+#writeLong(J)V
+#writeFloat(F)V
+#writeDouble(D)V
+#writeBytes(Ljava/lang/String;)V
+#writeChars(Ljava/lang/String;)V
+#writeUTF(Ljava/lang/String;)V
+#skipBytesToWrite(I)V
+#write(Lorg/apache/flink/core/memory/DataInputView;I)V
@1.14.0
+#advance()V
+#getHeaderLength()I
+#write(Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/runtime/memory/ListMemorySegmentSource
@0.10.0
+#<init>(Ljava/util/List;)V
+#nextSegment()Lorg/apache/flink/core/memory/MemorySegment;

+###org/apache/flink/runtime/leaderretrieval/LeaderRetrievalListener
@0.10.0
+#notifyLeaderAddress(Ljava/lang/String;Ljava/util/UUID;)V
+#handleError(Ljava/lang/Exception;)V

+###org/apache/flink/runtime/leaderretrieval/LeaderRetrievalService
@0.10.0
+#start(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalListener;)V
+#stop()V

+###org/apache/flink/runtime/leaderretrieval/LeaderRetrievalException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/leaderretrieval/LeaderRetrievalDriver
@1.14.0
+#close()V

+###org/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver$LeaderInformationClearancePolicy
@1.14.0
+#values()[Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver$LeaderInformationClearancePolicy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver$LeaderInformationClearancePolicy;

+###org/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalEventHandler;Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver$LeaderInformationClearancePolicy;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V
+#close()V
+#unhandledError(Ljava/lang/String;Ljava/lang/Throwable;)V
+#toString()Ljava/lang/String;
+#getConnectionInformationPath()Ljava/lang/String;
@1.14.3
-#unhandledError(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalEventHandler;Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver$LeaderInformationClearancePolicy;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalEventHandler;Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver$LeaderInformationClearancePolicy;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V

+###org/apache/flink/runtime/leaderretrieval/LeaderRetrievalEventHandler
@1.14.0
+#notifyLeaderAddress(Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V

+###org/apache/flink/runtime/leaderretrieval/DefaultLeaderRetrievalService
@1.14.0
+#<init>(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalDriverFactory;)V
+#start(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalListener;)V
+#stop()V
+#notifyLeaderAddress(Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V

+###org/apache/flink/runtime/leaderretrieval/LeaderRetrievalDriverFactory
@1.14.0
+#createLeaderRetrievalDriver(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalEventHandler;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalDriver;

+###org/apache/flink/runtime/leaderretrieval/StandaloneLeaderRetrievalService
@0.10.0
+#<init>(Ljava/lang/String;)V
+#start(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalListener;)V
+#stop()V
@1.14.0
*#<init>(Ljava/lang/String;)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/util/UUID;)V

+###org/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriverFactory
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver$LeaderInformationClearancePolicy;)V
+#createLeaderRetrievalDriver(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalEventHandler;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver;
+#createLeaderRetrievalDriver(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalEventHandler;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalDriver;
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver$LeaderInformationClearancePolicy;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver$LeaderInformationClearancePolicy;)V

+###org/apache/flink/runtime/client/JobExecutionException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;Z)V
+#isJobCanceledByUser()Z
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/Throwable;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
-#<init>(Ljava/lang/String;Z)V
-#isJobCanceledByUser()Z

+###org/apache/flink/runtime/client/JobSubmissionException
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V

+###org/apache/flink/runtime/client/ClientUtils
@1.14.0
+#values()[Lorg/apache/flink/runtime/client/ClientUtils;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/client/ClientUtils;
+#extractAndUploadJobGraphFiles(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/util/function/SupplierWithException;)V
+#uploadJobGraphFiles(Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/flink/util/function/SupplierWithException;)V

+###org/apache/flink/runtime/client/JobStatusMessage
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobStatus;J)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getJobName()Ljava/lang/String;
+#getJobState()Lorg/apache/flink/runtime/jobgraph/JobStatus;
+#getStartTime()J
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/api/common/JobStatus;J)V
+#getJobState()Lorg/apache/flink/api/common/JobStatus;
-#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobStatus;J)V
-#getJobState()Lorg/apache/flink/runtime/jobgraph/JobStatus;

+###org/apache/flink/runtime/client/JobCancellationException
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/client/DuplicateJobSubmissionException
@1.14.0
+#of(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/client/DuplicateJobSubmissionException;
+#ofGloballyTerminated(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/client/DuplicateJobSubmissionException;
+#isGloballyTerminated()Z

+###org/apache/flink/runtime/client/JobInitializationException
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/client/SerializedJobExecutionResult
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;JLjava/util/Map;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getNetRuntime()J
+#getNetRuntime(Ljava/util/concurrent/TimeUnit;)J
+#getSerializedAccumulatorResults()Ljava/util/Map;
+#toJobExecutionResult(Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/JobExecutionResult;

+###org/apache/flink/runtime/query/KvStateLocationRegistry
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;)V
+#getKvStateLocation(Ljava/lang/String;)Lorg/apache/flink/runtime/query/KvStateLocation;
+#notifyKvStateRegistered(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/queryablestate/KvStateID;Ljava/net/InetSocketAddress;)V
+#notifyKvStateUnregistered(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;)V

+###org/apache/flink/runtime/query/TaskKvStateRegistry
@1.14.0
+#registerKvState(Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/runtime/state/internal/InternalKvState;Ljava/lang/ClassLoader;)V
+#unregisterAll()V

+###org/apache/flink/runtime/query/KvStateLocation
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILjava/lang/String;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getNumKeyGroups()I
+#getRegistrationName()Ljava/lang/String;
+#getNumRegisteredKeyGroups()I
+#getKvStateID(I)Lorg/apache/flink/queryablestate/KvStateID;
+#getKvStateServerAddress(I)Ljava/net/InetSocketAddress;
+#registerKvState(Lorg/apache/flink/runtime/state/KeyGroupRange;Lorg/apache/flink/queryablestate/KvStateID;Ljava/net/InetSocketAddress;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/query/KvStateRegistry
@1.14.0
+#<init>()V
+#registerListener(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/query/KvStateRegistryListener;)V
+#unregisterListener(Lorg/apache/flink/api/common/JobID;)V
+#registerKvState(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/runtime/state/internal/InternalKvState;Ljava/lang/ClassLoader;)Lorg/apache/flink/queryablestate/KvStateID;
+#unregisterKvState(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/queryablestate/KvStateID;)V
+#getKvState(Lorg/apache/flink/queryablestate/KvStateID;)Lorg/apache/flink/runtime/query/KvStateEntry;
+#createTaskRegistry(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/query/TaskKvStateRegistry;

+###org/apache/flink/runtime/query/KvStateEntry
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/internal/InternalKvState;Ljava/lang/ClassLoader;)V
+#getState()Lorg/apache/flink/runtime/state/internal/InternalKvState;
+#getUserClassLoader()Ljava/lang/ClassLoader;
+#getInfoForCurrentThread()Lorg/apache/flink/runtime/query/KvStateInfo;
+#clear()V
+#getCacheSize()I

+###org/apache/flink/runtime/query/KvStateRegistryListener
@1.14.0
+#notifyKvStateRegistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;Lorg/apache/flink/queryablestate/KvStateID;)V
+#notifyKvStateUnregistered(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/state/KeyGroupRange;Ljava/lang/String;)V

+###org/apache/flink/runtime/query/KvStateInfo
@1.14.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getNamespaceSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getStateValueSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#duplicate()Lorg/apache/flink/runtime/query/KvStateInfo;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/query/UnknownKvStateLocation
@1.14.0
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/runtime/query/QueryableStateUtils
@1.14.0
+#<init>()V
+#createKvStateClientProxy(Ljava/lang/String;Ljava/util/Iterator;IILorg/apache/flink/queryablestate/network/stats/KvStateRequestStats;)Lorg/apache/flink/runtime/query/KvStateClientProxy;
+#createKvStateServer(Ljava/lang/String;Ljava/util/Iterator;IILorg/apache/flink/runtime/query/KvStateRegistry;Lorg/apache/flink/queryablestate/network/stats/KvStateRequestStats;)Lorg/apache/flink/runtime/query/KvStateServer;

+###org/apache/flink/runtime/query/KvStateClientProxy
@1.14.0
+#updateKvStateLocationOracle(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmaster/KvStateLocationOracle;)V
+#getKvStateLocationOracle(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/jobmaster/KvStateLocationOracle;

+###org/apache/flink/runtime/query/KvStateServer
@1.14.0
+#getServerAddress()Ljava/net/InetSocketAddress;
+#start()V
+#shutdown()V

+###org/apache/flink/runtime/broadcast/BroadcastVariableManager
@0.8.0
+#<init>()V
+#materializeBroadcastVariable(Ljava/lang/String;ILorg/apache/flink/runtime/operators/RegularPactTask;Lorg/apache/flink/runtime/io/network/api/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;)Lorg/apache/flink/runtime/broadcast/BroadcastVariableMaterialization;
+#releaseReference(Ljava/lang/String;ILorg/apache/flink/runtime/operators/RegularPactTask;)V
+#releaseReference(Lorg/apache/flink/runtime/broadcast/BroadcastVariableKey;Lorg/apache/flink/runtime/operators/RegularPactTask;)V
+#releaseAllReferencesFromTask(Lorg/apache/flink/runtime/operators/RegularPactTask;)V
+#getNumberOfVariablesWithReferences()I
@0.9.0-milestone-1
+#materializeBroadcastVariable(Ljava/lang/String;ILorg/apache/flink/runtime/operators/RegularPactTask;Lorg/apache/flink/runtime/io/network/api/reader/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;)Lorg/apache/flink/runtime/broadcast/BroadcastVariableMaterialization;
-#materializeBroadcastVariable(Ljava/lang/String;ILorg/apache/flink/runtime/operators/RegularPactTask;Lorg/apache/flink/runtime/io/network/api/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;)Lorg/apache/flink/runtime/broadcast/BroadcastVariableMaterialization;
@0.10.0
+#materializeBroadcastVariable(Ljava/lang/String;ILorg/apache/flink/runtime/operators/BatchTask;Lorg/apache/flink/runtime/io/network/api/reader/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;)Lorg/apache/flink/runtime/broadcast/BroadcastVariableMaterialization;
+#releaseReference(Ljava/lang/String;ILorg/apache/flink/runtime/operators/BatchTask;)V
+#releaseReference(Lorg/apache/flink/runtime/broadcast/BroadcastVariableKey;Lorg/apache/flink/runtime/operators/BatchTask;)V
+#releaseAllReferencesFromTask(Lorg/apache/flink/runtime/operators/BatchTask;)V
-#materializeBroadcastVariable(Ljava/lang/String;ILorg/apache/flink/runtime/operators/RegularPactTask;Lorg/apache/flink/runtime/io/network/api/reader/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;)Lorg/apache/flink/runtime/broadcast/BroadcastVariableMaterialization;
-#releaseReference(Ljava/lang/String;ILorg/apache/flink/runtime/operators/RegularPactTask;)V
-#releaseReference(Lorg/apache/flink/runtime/broadcast/BroadcastVariableKey;Lorg/apache/flink/runtime/operators/RegularPactTask;)V
-#releaseAllReferencesFromTask(Lorg/apache/flink/runtime/operators/RegularPactTask;)V

+###org/apache/flink/runtime/broadcast/BroadcastVariableKey
@0.8.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;I)V
+#getVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getName()Ljava/lang/String;
+#getSuperstep()I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization
@0.8.0
+#<init>(Lorg/apache/flink/runtime/broadcast/BroadcastVariableKey;)V
+#materializeVariable(Lorg/apache/flink/runtime/io/network/api/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/runtime/operators/RegularPactTask;)V
+#decrementReference(Lorg/apache/flink/runtime/operators/RegularPactTask;)Z
+#decrementReferenceIfHeld(Lorg/apache/flink/runtime/operators/RegularPactTask;)Z
+#getVariable()Ljava/util/List;
+#getVariable(Lorg/apache/flink/api/common/functions/BroadcastVariableInitializer;)Ljava/lang/Object;
@0.9.0-milestone-1
+#materializeVariable(Lorg/apache/flink/runtime/io/network/api/reader/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/runtime/operators/RegularPactTask;)V
-#materializeVariable(Lorg/apache/flink/runtime/io/network/api/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/runtime/operators/RegularPactTask;)V
@0.10.0
+#materializeVariable(Lorg/apache/flink/runtime/io/network/api/reader/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/runtime/operators/BatchTask;)V
+#decrementReference(Lorg/apache/flink/runtime/operators/BatchTask;)Z
+#decrementReferenceIfHeld(Lorg/apache/flink/runtime/operators/BatchTask;)Z
-#materializeVariable(Lorg/apache/flink/runtime/io/network/api/reader/MutableReader;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/runtime/operators/RegularPactTask;)V
-#decrementReference(Lorg/apache/flink/runtime/operators/RegularPactTask;)Z
-#decrementReferenceIfHeld(Lorg/apache/flink/runtime/operators/RegularPactTask;)Z

+###org/apache/flink/runtime/broadcast/MaterializationExpiredException
@0.8.0
+#<init>()V

+###org/apache/flink/runtime/broadcast/InitializationTypeConflictException
@0.8.0
+#<init>(Ljava/lang/Class;)V
+#getType()Ljava/lang/Class;

+###org/apache/flink/runtime/broadcast/DefaultBroadcastVariableInitializer
@0.8.0
+#initializeBroadcastVariable(Ljava/lang/Iterable;)Ljava/util/List;
+#instance()Lorg/apache/flink/runtime/broadcast/DefaultBroadcastVariableInitializer;
+#initializeBroadcastVariable(Ljava/lang/Iterable;)Ljava/lang/Object;

+###org/apache/flink/runtime/externalresource/ExternalResourceInfoProvider
@1.14.0
+#getExternalResourceInfos(Ljava/lang/String;)Ljava/util/Set;

+###org/apache/flink/runtime/externalresource/StaticExternalResourceInfoProvider
@1.14.0
+#<init>(Ljava/util/Map;)V
+#getExternalResourceInfos(Ljava/lang/String;)Ljava/util/Set;

+###org/apache/flink/runtime/externalresource/ExternalResourceUtils
@1.14.0
+#getExternalResourceConfigurationKeys(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)Ljava/util/Map;
+#createStaticExternalResourceInfoProviderFromConfig(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/core/plugin/PluginManager;)Lorg/apache/flink/runtime/externalresource/ExternalResourceInfoProvider;
+#getExternalResourcesCollection(Lorg/apache/flink/configuration/Configuration;)Ljava/util/Collection;
+#generateExternalResourcesString(Ljava/util/Collection;)Ljava/lang/String;

+###org/apache/flink/runtime/event/AbstractEvent
@0.10.0
+#<init>()V

+###org/apache/flink/runtime/event/RuntimeEvent
@0.10.0
+#<init>()V

+###org/apache/flink/runtime/event/TaskEvent
@0.10.0
+#<init>()V

+###org/apache/flink/runtime/throughput/ThroughputCalculator
@1.14.0
+#<init>(Lorg/apache/flink/util/clock/Clock;I)V
+#incomingDataSize(J)V
+#pauseMeasurement(J)V
+#resumeMeasurement(J)V
+#calculateThroughput()J
@1.15.0
+#<init>(Lorg/apache/flink/util/clock/Clock;)V
+#pauseMeasurement()V
+#resumeMeasurement()V
+#calculateThroughput(JJ)J
-#<init>(Lorg/apache/flink/util/clock/Clock;I)V
-#pauseMeasurement(J)V
-#resumeMeasurement(J)V

+###org/apache/flink/runtime/throughput/BufferDebloater
@1.15.0
+#<init>(IJIIIJ)V
+#recalculateBufferSize(JI)Ljava/util/OptionalInt;
+#getLastBufferSize()I
+#getLastEstimatedTimeToConsumeBuffers()Ljava/time/Duration;
@1.16.0
+#<init>(Ljava/lang/String;IJIIIJ)V
-#<init>(IJIIIJ)V

+###org/apache/flink/runtime/throughput/BufferSizeEMA
@1.15.0
+#<init>(IIJ)V
+#calculateBufferSize(JI)I

+###org/apache/flink/runtime/throughput/BufferDebloatConfiguration
@1.15.0
+#isEnabled()Z
+#getTargetTotalBufferSize()Ljava/time/Duration;
+#getMaxBufferSize()I
+#getMinBufferSize()I
+#getBufferDebloatThresholdPercentages()I
+#getNumberOfSamples()I
+#fromConfiguration(Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/runtime/throughput/BufferDebloatConfiguration;

+###org/apache/flink/runtime/source/coordinator/SourceCoordinatorProvider$CoordinatorExecutorThreadFactory
@1.14.0
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
+#uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/source/coordinator/SourceCoordinatorProvider
@1.14.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/connector/source/Source;I)V
+#getCoordinator(Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$Context;)Lorg/apache/flink/runtime/operators/coordination/OperatorCoordinator;
@1.15.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/connector/source/Source;ILorg/apache/flink/api/common/eventtime/WatermarkAlignmentParams;)V
-#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/connector/source/Source;I)V
@1.16.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/connector/source/Source;ILorg/apache/flink/api/common/eventtime/WatermarkAlignmentParams;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/api/connector/source/Source;ILorg/apache/flink/api/common/eventtime/WatermarkAlignmentParams;)V

+###org/apache/flink/runtime/source/coordinator/SplitAssignmentTracker
@1.14.0
+#<init>()V
+#onCheckpoint(J)V
+#onCheckpointComplete(J)V
+#recordSplitAssignment(Lorg/apache/flink/api/connector/source/SplitsAssignment;)V
+#getAndRemoveUncheckpointedAssignment(IJ)Ljava/util/List;

+###org/apache/flink/runtime/source/coordinator/SourceCoordinatorSerdeUtils
@1.14.0

+###org/apache/flink/runtime/source/coordinator/SourceCoordinator
@1.14.0
+#<init>(Ljava/lang/String;Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/api/connector/source/Source;Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorContext;)V
+#start()V
+#close()V
+#handleEventFromOperator(ILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#subtaskFailed(ILjava/lang/Throwable;)V
+#subtaskReset(IJ)V
+#subtaskReady(ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$SubtaskGateway;)V
+#checkpointCoordinator(JLjava/util/concurrent/CompletableFuture;)V
+#notifyCheckpointComplete(J)V
+#notifyCheckpointAborted(J)V
+#resetToCheckpoint(J[B)V
@1.14.4
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/connector/source/Source;Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorContext;)V
-#<init>(Ljava/lang/String;Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/api/connector/source/Source;Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorContext;)V
@1.15.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/connector/source/Source;Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorContext;Lorg/apache/flink/runtime/operators/coordination/CoordinatorStore;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/connector/source/Source;Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorContext;Lorg/apache/flink/runtime/operators/coordination/CoordinatorStore;Lorg/apache/flink/api/common/eventtime/WatermarkAlignmentParams;)V
-#<init>(Ljava/lang/String;Lorg/apache/flink/api/connector/source/Source;Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorContext;)V
@1.16.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/connector/source/Source;Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorContext;Lorg/apache/flink/runtime/operators/coordination/CoordinatorStore;Lorg/apache/flink/api/common/eventtime/WatermarkAlignmentParams;Ljava/lang/String;)V
+#handleEventFromOperator(IILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
+#executionAttemptFailed(IILjava/lang/Throwable;)V
+#executionAttemptReady(IILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$SubtaskGateway;)V
-#<init>(Ljava/lang/String;Lorg/apache/flink/api/connector/source/Source;Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorContext;Lorg/apache/flink/runtime/operators/coordination/CoordinatorStore;Lorg/apache/flink/api/common/eventtime/WatermarkAlignmentParams;)V
-#handleEventFromOperator(ILorg/apache/flink/runtime/operators/coordination/OperatorEvent;)V
-#subtaskFailed(ILjava/lang/Throwable;)V
-#subtaskReady(ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$SubtaskGateway;)V

+###org/apache/flink/runtime/source/coordinator/SourceCoordinatorContext
@1.14.0
+#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorProvider$CoordinatorExecutorThreadFactory;ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$Context;Lorg/apache/flink/core/io/SimpleVersionedSerializer;)V
+#metricGroup()Lorg/apache/flink/metrics/groups/SplitEnumeratorMetricGroup;
+#sendEventToSourceReader(ILorg/apache/flink/api/connector/source/SourceEvent;)V
+#currentParallelism()I
+#registeredReaders()Ljava/util/Map;
+#assignSplits(Lorg/apache/flink/api/connector/source/SplitsAssignment;)V
+#signalNoMoreSplits(I)V
+#callAsync(Ljava/util/concurrent/Callable;Ljava/util/function/BiConsumer;JJ)V
+#callAsync(Ljava/util/concurrent/Callable;Ljava/util/function/BiConsumer;)V
+#runInCoordinatorThread(Ljava/lang/Runnable;)V
+#close()V
@1.14.4
+#<init>(Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorProvider$CoordinatorExecutorThreadFactory;ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$Context;Lorg/apache/flink/core/io/SimpleVersionedSerializer;)V
-#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorProvider$CoordinatorExecutorThreadFactory;ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$Context;Lorg/apache/flink/core/io/SimpleVersionedSerializer;)V
@1.16.0
+#<init>(Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorProvider$CoordinatorExecutorThreadFactory;ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$Context;Lorg/apache/flink/core/io/SimpleVersionedSerializer;Z)V
+#sendEventToSourceReader(IILorg/apache/flink/api/connector/source/SourceEvent;)V
+#registeredReadersOfAttempts()Ljava/util/Map;
-#<init>(Lorg/apache/flink/runtime/source/coordinator/SourceCoordinatorProvider$CoordinatorExecutorThreadFactory;ILorg/apache/flink/runtime/operators/coordination/OperatorCoordinator$Context;Lorg/apache/flink/core/io/SimpleVersionedSerializer;)V
@1.16.1
+#signalIntermediateNoMoreSplits(I)V

+###org/apache/flink/runtime/source/coordinator/ExecutorNotifier
@1.14.0
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;)V
+#notifyReadyAsync(Ljava/util/concurrent/Callable;Ljava/util/function/BiConsumer;)V
+#notifyReadyAsync(Ljava/util/concurrent/Callable;Ljava/util/function/BiConsumer;JJ)V
+#close()V
@1.14.4
-#close()V

+###org/apache/flink/runtime/source/event/RequestSplitEvent
@1.14.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#hostName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/source/event/ReaderRegistrationEvent
@1.14.0
+#<init>(ILjava/lang/String;)V
+#subtaskId()I
+#location()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/source/event/AddSplitEvent
@1.14.0
+#<init>(Ljava/util/List;Lorg/apache/flink/core/io/SimpleVersionedSerializer;)V
+#splits(Lorg/apache/flink/core/io/SimpleVersionedSerializer;)Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/source/event/ReportedWatermarkEvent
@1.15.0
+#<init>(J)V
+#getWatermark()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/source/event/NoMoreSplitsEvent
@1.14.0
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/source/event/WatermarkAlignmentEvent
@1.15.0
+#<init>(J)V
+#getMaxWatermark()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/source/event/SourceEventWrapper
@1.14.0
+#<init>(Lorg/apache/flink/api/connector/source/SourceEvent;)V
+#getSourceEvent()Lorg/apache/flink/api/connector/source/SourceEvent;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/entrypoint/ClusterEntrypoint$ExecutionMode
@1.14.0
+#values()[Lorg/apache/flink/runtime/entrypoint/ClusterEntrypoint$ExecutionMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/entrypoint/ClusterEntrypoint$ExecutionMode;

+###org/apache/flink/runtime/entrypoint/ClusterEntrypoint$ShutdownBehaviour
@1.15.0
+#values()[Lorg/apache/flink/runtime/entrypoint/ClusterEntrypoint$ShutdownBehaviour;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/entrypoint/ClusterEntrypoint$ShutdownBehaviour;

+###org/apache/flink/runtime/entrypoint/ClusterEntrypoint
@1.14.0
+#getTerminationFuture()Ljava/util/concurrent/CompletableFuture;
+#startCluster()V
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#onFatalError(Ljava/lang/Throwable;)V
+#runClusterEntrypoint(Lorg/apache/flink/runtime/entrypoint/ClusterEntrypoint;)V
@1.15.0
+#getRestPort()I
+#getRpcPort()I
@1.15.3
+#parseArguments([Ljava/lang/String;)Lorg/apache/flink/runtime/entrypoint/EntrypointClusterConfiguration;

+###org/apache/flink/runtime/entrypoint/DeterminismEnvelope
@1.15.0
+#isDeterministic()Z
+#unwrap()Ljava/lang/Object;
+#map(Lorg/apache/flink/util/function/FunctionWithException;)Lorg/apache/flink/runtime/entrypoint/DeterminismEnvelope;
+#deterministicValue(Ljava/lang/Object;)Lorg/apache/flink/runtime/entrypoint/DeterminismEnvelope;
+#nondeterministicValue(Ljava/lang/Object;)Lorg/apache/flink/runtime/entrypoint/DeterminismEnvelope;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent
@1.14.0
+#getShutDownFuture()Ljava/util/concurrent/CompletableFuture;
+#stopApplication(Lorg/apache/flink/runtime/clusterframework/ApplicationStatus;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#stopProcess()Ljava/util/concurrent/CompletableFuture;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#getRestPort()I

+###org/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponentFactory
@1.14.0
+#create(Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent;
@1.15.0
+#create(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent;
-#create(Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent;
@1.16.0
+#create(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/security/token/DelegationTokenManager;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent;
-#create(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent;

+###org/apache/flink/runtime/entrypoint/component/DefaultDispatcherResourceManagerComponentFactory
@1.14.0
+#<init>(Lorg/apache/flink/runtime/dispatcher/runner/DispatcherRunnerFactory;Lorg/apache/flink/runtime/resourcemanager/ResourceManagerFactory;Lorg/apache/flink/runtime/rest/RestEndpointFactory;)V
+#create(Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent;
+#createSessionComponentFactory(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerFactory;)Lorg/apache/flink/runtime/entrypoint/component/DefaultDispatcherResourceManagerComponentFactory;
+#createJobComponentFactory(Lorg/apache/flink/runtime/resourcemanager/ResourceManagerFactory;Lorg/apache/flink/runtime/entrypoint/component/JobGraphRetriever;)Lorg/apache/flink/runtime/entrypoint/component/DefaultDispatcherResourceManagerComponentFactory;
@1.15.0
+#create(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent;
-#create(Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent;
@1.16.0
+#create(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/security/token/DelegationTokenManager;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent;
-#create(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/RpcService;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/metrics/MetricRegistry;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/webmonitor/retriever/MetricQueryServiceRetriever;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/entrypoint/component/DispatcherResourceManagerComponent;

+###org/apache/flink/runtime/entrypoint/component/JobGraphRetriever
@1.14.0
+#retrieveJobGraph(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobgraph/JobGraph;

+###org/apache/flink/runtime/entrypoint/component/AbstractUserClassPathJobGraphRetriever
@1.14.0

+###org/apache/flink/runtime/entrypoint/component/FileJobGraphRetriever
@1.14.0
+#<init>(Ljava/lang/String;Ljava/io/File;)V
+#retrieveJobGraph(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#createFrom(Lorg/apache/flink/configuration/Configuration;Ljava/io/File;)Lorg/apache/flink/runtime/entrypoint/component/FileJobGraphRetriever;

+###org/apache/flink/runtime/entrypoint/WorkingDirectory
@1.15.0
+#delete()V
+#getTmpDirectory()Ljava/io/File;
+#getLocalStateDirectory()Ljava/io/File;
+#getSlotAllocationSnapshotDirectory()Ljava/io/File;
+#createSubWorkingDirectory(Ljava/lang/String;)Lorg/apache/flink/runtime/entrypoint/WorkingDirectory;
+#toString()Ljava/lang/String;
+#create(Ljava/io/File;)Lorg/apache/flink/runtime/entrypoint/WorkingDirectory;
+#createIn(Ljava/io/File;Ljava/lang/String;)Lorg/apache/flink/runtime/entrypoint/WorkingDirectory;
+#getBlobStorageDirectory()Ljava/io/File;

+###org/apache/flink/runtime/entrypoint/ClusterEntrypointException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/entrypoint/EntrypointClusterConfiguration
@1.14.0
+#<init>(Ljava/lang/String;Ljava/util/Properties;[Ljava/lang/String;Ljava/lang/String;I)V
+#getRestPort()I
+#getHostname()Ljava/lang/String;

+###org/apache/flink/runtime/entrypoint/ClusterConfiguration
@1.14.0
+#<init>(Ljava/lang/String;Ljava/util/Properties;[Ljava/lang/String;)V
+#getConfigDir()Ljava/lang/String;
+#getDynamicProperties()Ljava/util/Properties;
+#getArgs()[Ljava/lang/String;

+###org/apache/flink/runtime/entrypoint/FlinkParseException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/entrypoint/JobClusterEntrypoint
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V

+###org/apache/flink/runtime/entrypoint/parser/CommandLineOptions
@1.14.0

+###org/apache/flink/runtime/entrypoint/parser/ParserResultFactory
@1.14.0
+#getOptions()Lorg/apache/commons/cli/Options;
+#createResult(Lorg/apache/commons/cli/CommandLine;)Ljava/lang/Object;

+###org/apache/flink/runtime/entrypoint/parser/CommandLineParser
@1.14.0
+#<init>(Lorg/apache/flink/runtime/entrypoint/parser/ParserResultFactory;)V
+#parse([Ljava/lang/String;)Ljava/lang/Object;
+#printHelp(Ljava/lang/String;)V

+###org/apache/flink/runtime/entrypoint/ClusterConfigurationParserFactory
@1.14.0
+#<init>()V
+#options()Lorg/apache/commons/cli/Options;
+#getOptions()Lorg/apache/commons/cli/Options;
+#createResult(Lorg/apache/commons/cli/CommandLine;)Lorg/apache/flink/runtime/entrypoint/ClusterConfiguration;
+#createResult(Lorg/apache/commons/cli/CommandLine;)Ljava/lang/Object;

+###org/apache/flink/runtime/entrypoint/StandaloneSessionClusterEntrypoint
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
+#main([Ljava/lang/String;)V

+###org/apache/flink/runtime/entrypoint/SessionClusterEntrypoint
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V

+###org/apache/flink/runtime/entrypoint/ClusterInformation
@1.14.0
+#<init>(Ljava/lang/String;I)V
+#getBlobServerHostname()Ljava/lang/String;
+#getBlobServerPort()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/entrypoint/DynamicParametersConfigurationParserFactory
@1.14.0
+#<init>()V
+#options()Lorg/apache/commons/cli/Options;
+#getOptions()Lorg/apache/commons/cli/Options;
+#createResult(Lorg/apache/commons/cli/CommandLine;)Lorg/apache/flink/configuration/Configuration;
+#createResult(Lorg/apache/commons/cli/CommandLine;)Ljava/lang/Object;

+###org/apache/flink/runtime/entrypoint/EntrypointClusterConfigurationParserFactory
@1.14.0
+#<init>()V
+#getOptions()Lorg/apache/commons/cli/Options;
+#createResult(Lorg/apache/commons/cli/CommandLine;)Lorg/apache/flink/runtime/entrypoint/EntrypointClusterConfiguration;
+#createResult(Lorg/apache/commons/cli/CommandLine;)Ljava/lang/Object;

+###org/apache/flink/runtime/entrypoint/ClusterEntrypointUtils
@1.14.0
+#parseParametersOrExit([Ljava/lang/String;Lorg/apache/flink/runtime/entrypoint/parser/ParserResultFactory;Ljava/lang/Class;)Ljava/lang/Object;
+#tryFindUserLibDirectory()Ljava/util/Optional;
+#getPoolSize(Lorg/apache/flink/configuration/Configuration;)I
+#configureUncaughtExceptionHandler(Lorg/apache/flink/configuration/Configuration;)V
@1.15.0
+#createTaskManagerWorkingDirectory(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/entrypoint/DeterminismEnvelope;)Lorg/apache/flink/runtime/entrypoint/DeterminismEnvelope;
+#generateTaskManagerWorkingDirectoryFile(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/io/File;
+#generateJobManagerWorkingDirectoryFile(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/io/File;
+#generateWorkingDirectoryFile(Lorg/apache/flink/configuration/Configuration;Ljava/util/Optional;Ljava/lang/String;)Ljava/io/File;
+#createJobManagerWorkingDirectory(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/entrypoint/DeterminismEnvelope;)Lorg/apache/flink/runtime/entrypoint/DeterminismEnvelope;

+###org/apache/flink/runtime/entrypoint/ClusterEntryPointExceptionUtils
@1.14.0
+#tryEnrichClusterEntryPointError(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/highavailability/HighAvailabilityServices
@1.14.0
+#getResourceManagerLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getDispatcherLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getJobManagerLeaderRetriever(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;[deprecated]
+#getJobManagerLeaderRetriever(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getWebMonitorLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;[deprecated]
+#getResourceManagerLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getDispatcherLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getJobManagerLeaderElectionService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getWebMonitorLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;[deprecated]
+#getCheckpointRecoveryFactory()Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;
+#getJobGraphStore()Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
+#getRunningJobsRegistry()Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry;
+#createBlobStore()Lorg/apache/flink/runtime/blob/BlobStore;
+#getClusterRestEndpointLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getClusterRestEndpointLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#close()V
+#closeAndCleanupAllData()V
+#cleanupJobData(Lorg/apache/flink/api/common/JobID;)V
@1.15.0
+#getJobResultStore()Lorg/apache/flink/runtime/highavailability/JobResultStore;
+#globalCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
-#getRunningJobsRegistry()Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry;
-#cleanupJobData(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/highavailability/ClientHighAvailabilityServices
@1.14.0
+#getClusterRestEndpointLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;

+###org/apache/flink/runtime/highavailability/JobResultStore
@1.15.0
+#createDirtyResult(Lorg/apache/flink/runtime/highavailability/JobResultEntry;)V
+#markResultAsClean(Lorg/apache/flink/api/common/JobID;)V
+#hasJobResultEntry(Lorg/apache/flink/api/common/JobID;)Z
+#hasDirtyJobResultEntry(Lorg/apache/flink/api/common/JobID;)Z
+#hasCleanJobResultEntry(Lorg/apache/flink/api/common/JobID;)Z
+#getDirtyResults()Ljava/util/Set;

+###org/apache/flink/runtime/highavailability/JobResultEntry
@1.15.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/JobResult;)V
+#getJobResult()Lorg/apache/flink/runtime/jobmaster/JobResult;
+#getJobId()Lorg/apache/flink/api/common/JobID;

+###org/apache/flink/runtime/highavailability/zookeeper/AbstractZooKeeperHaServices
@1.15.0
+#<init>(Lorg/apache/flink/runtime/highavailability/zookeeper/CuratorFrameworkWithUnhandledErrorListener;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobStoreService;)V
+#createCheckpointRecoveryFactory()Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;
+#createJobGraphStore()Lorg/apache/flink/runtime/jobmanager/JobGraphStore;

+###org/apache/flink/runtime/highavailability/zookeeper/CuratorFrameworkWithUnhandledErrorListener
@1.14.3
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/api/UnhandledErrorListener;)V
+#close()V
+#asCuratorFramework()Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/api/UnhandledErrorListener;)V
+#asCuratorFramework()Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/api/UnhandledErrorListener;)V
-#asCuratorFramework()Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;

+###org/apache/flink/runtime/highavailability/zookeeper/ZooKeeperClientHAServices
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)V
+#getClusterRestEndpointLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#close()V
@1.14.3
+#<init>(Lorg/apache/flink/runtime/highavailability/zookeeper/CuratorFrameworkWithUnhandledErrorListener;Lorg/apache/flink/configuration/Configuration;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)V

+###org/apache/flink/runtime/highavailability/zookeeper/ZooKeeperMultipleComponentLeaderElectionHaServices
@1.15.0
+#<init>(Lorg/apache/flink/runtime/highavailability/zookeeper/CuratorFrameworkWithUnhandledErrorListener;Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/blob/BlobStoreService;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)V

+###org/apache/flink/runtime/highavailability/zookeeper/ZooKeeperHaServices
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobStoreService;)V
+#createCheckpointRecoveryFactory()Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;
+#createJobGraphStore()Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
+#createRunningJobsRegistry()Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry;
+#internalClose()V
+#internalCleanup()V
+#internalCleanupJobData(Lorg/apache/flink/api/common/JobID;)V
+#getLeaderPathForJobManager(Lorg/apache/flink/api/common/JobID;)Ljava/lang/String;
@1.14.3
+#<init>(Lorg/apache/flink/runtime/highavailability/zookeeper/CuratorFrameworkWithUnhandledErrorListener;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobStoreService;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/blob/BlobStoreService;)V
@1.15.0
-#createCheckpointRecoveryFactory()Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;
-#createJobGraphStore()Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
-#createRunningJobsRegistry()Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry;
-#internalClose()V
-#internalCleanup()V
-#internalCleanupJobData(Lorg/apache/flink/api/common/JobID;)V
@1.16.0
-###org/apache/flink/runtime/highavailability/zookeeper/ZooKeeperHaServices

+###org/apache/flink/runtime/highavailability/AbstractHaServices
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/blob/BlobStoreService;)V
+#getResourceManagerLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getDispatcherLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getJobManagerLeaderRetriever(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getJobManagerLeaderRetriever(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getClusterRestEndpointLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getResourceManagerLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getDispatcherLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getJobManagerLeaderElectionService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getClusterRestEndpointLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getCheckpointRecoveryFactory()Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;
+#getJobGraphStore()Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
+#getRunningJobsRegistry()Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry;
+#createBlobStore()Lorg/apache/flink/runtime/blob/BlobStore;
+#close()V
+#closeAndCleanupAllData()V
+#cleanupJobData(Lorg/apache/flink/api/common/JobID;)V
@1.15.0
+#getJobResultStore()Lorg/apache/flink/runtime/highavailability/JobResultStore;
+#globalCleanupAsync(Lorg/apache/flink/api/common/JobID;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
-#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/blob/BlobStoreService;)V
-#getRunningJobsRegistry()Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry;
-#cleanupJobData(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/highavailability/FileSystemJobResultStore
@1.15.0
+#hasValidDirtyJobResultStoreEntryExtension(Ljava/lang/String;)Z
+#hasValidJobResultStoreEntryExtension(Ljava/lang/String;)Z
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/highavailability/FileSystemJobResultStore;
+#createDefaultJobResultStorePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#createDirtyResultInternal(Lorg/apache/flink/runtime/highavailability/JobResultEntry;)V
+#markResultAsCleanInternal(Lorg/apache/flink/api/common/JobID;)V
+#hasDirtyJobResultEntryInternal(Lorg/apache/flink/api/common/JobID;)Z
+#hasCleanJobResultEntryInternal(Lorg/apache/flink/api/common/JobID;)Z
+#getDirtyResultsInternal()Ljava/util/Set;

+###org/apache/flink/runtime/highavailability/AbstractThreadsafeJobResultStore
@1.15.0
+#<init>()V
+#createDirtyResult(Lorg/apache/flink/runtime/highavailability/JobResultEntry;)V
+#markResultAsClean(Lorg/apache/flink/api/common/JobID;)V
+#hasJobResultEntry(Lorg/apache/flink/api/common/JobID;)Z
+#hasDirtyJobResultEntry(Lorg/apache/flink/api/common/JobID;)Z
+#hasCleanJobResultEntry(Lorg/apache/flink/api/common/JobID;)Z
+#getDirtyResults()Ljava/util/Set;

+###org/apache/flink/runtime/highavailability/HighAvailabilityServicesFactory
@1.14.0
+#createHAServices(Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;)Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;
+#createClientHAServices(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/highavailability/ClientHighAvailabilityServices;

+###org/apache/flink/runtime/highavailability/nonha/embedded/HaLeadershipControl
@1.14.0
+#revokeDispatcherLeadership()Ljava/util/concurrent/CompletableFuture;
+#grantDispatcherLeadership()Ljava/util/concurrent/CompletableFuture;
+#revokeJobMasterLeadership(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#grantJobMasterLeadership(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#revokeResourceManagerLeadership()Ljava/util/concurrent/CompletableFuture;
+#grantResourceManagerLeadership()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/highavailability/nonha/embedded/EmbeddedLeaderService
@1.14.0
+#<init>(Ljava/util/concurrent/Executor;)V
+#shutdown()V
+#isShutdown()Z
+#createLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#createLeaderRetrievalService()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;

+###org/apache/flink/runtime/highavailability/nonha/embedded/EmbeddedJobResultStore
@1.15.0
+#<init>()V
+#createDirtyResultInternal(Lorg/apache/flink/runtime/highavailability/JobResultEntry;)V
+#markResultAsCleanInternal(Lorg/apache/flink/api/common/JobID;)V
+#hasDirtyJobResultEntryInternal(Lorg/apache/flink/api/common/JobID;)Z
+#hasCleanJobResultEntryInternal(Lorg/apache/flink/api/common/JobID;)Z
+#getDirtyResultsInternal()Ljava/util/Set;

+###org/apache/flink/runtime/highavailability/nonha/embedded/EmbeddedHaServices
@1.14.0
+#<init>(Ljava/util/concurrent/Executor;)V
+#getResourceManagerLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getDispatcherLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getResourceManagerLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getDispatcherLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getJobManagerLeaderRetriever(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getJobManagerLeaderRetriever(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getClusterRestEndpointLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getJobManagerLeaderElectionService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getClusterRestEndpointLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#close()V

+###org/apache/flink/runtime/highavailability/nonha/embedded/EmbeddedHaServicesWithLeadershipControl
@1.14.0
+#<init>(Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;)V
+#revokeDispatcherLeadership()Ljava/util/concurrent/CompletableFuture;
+#grantDispatcherLeadership()Ljava/util/concurrent/CompletableFuture;
+#revokeJobMasterLeadership(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#grantJobMasterLeadership(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#revokeResourceManagerLeadership()Ljava/util/concurrent/CompletableFuture;
+#grantResourceManagerLeadership()Ljava/util/concurrent/CompletableFuture;
+#getCheckpointRecoveryFactory()Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;

+###org/apache/flink/runtime/highavailability/nonha/standalone/StandaloneClientHAServices
@1.14.0
+#<init>(Ljava/lang/String;)V
+#getClusterRestEndpointLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#close()V

+###org/apache/flink/runtime/highavailability/nonha/standalone/StandaloneHaServices
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getResourceManagerLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getDispatcherLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getResourceManagerLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getDispatcherLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getJobManagerLeaderRetriever(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getJobManagerLeaderRetriever(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getJobManagerLeaderElectionService(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#getClusterRestEndpointLeaderRetriever()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#getClusterRestEndpointLeaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;

+###org/apache/flink/runtime/highavailability/nonha/AbstractNonHaServices
@1.14.0
+#<init>()V
+#getCheckpointRecoveryFactory()Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;
+#getJobGraphStore()Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
+#getRunningJobsRegistry()Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry;
+#createBlobStore()Lorg/apache/flink/runtime/blob/BlobStore;
+#close()V
+#closeAndCleanupAllData()V
@1.15.0
+#getJobResultStore()Lorg/apache/flink/runtime/highavailability/JobResultStore;
-#getRunningJobsRegistry()Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry;

+###org/apache/flink/runtime/highavailability/ClientHighAvailabilityServicesFactory
@1.14.0
+#create(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/highavailability/ClientHighAvailabilityServices;

+###org/apache/flink/runtime/highavailability/HighAvailabilityServicesUtils
@1.14.0
+#<init>()V
+#createAvailableOrEmbeddedServices(Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;
+#createHighAvailabilityServices(Lorg/apache/flink/configuration/Configuration;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/rpc/AddressResolution;Lorg/apache/flink/runtime/rpc/RpcSystemUtils;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;
+#createClientHAService(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/highavailability/ClientHighAvailabilityServices;
+#getJobManagerAddress(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/api/java/tuple/Tuple2;
+#getWebMonitorAddress(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/AddressResolution;)Ljava/lang/String;
+#getClusterHighAvailableStoragePath(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/core/fs/Path;

+###org/apache/flink/runtime/highavailability/DefaultClientHighAvailabilityServicesFactory
@1.14.0
+#<init>()V
+#create(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;)Lorg/apache/flink/runtime/highavailability/ClientHighAvailabilityServices;

+###org/apache/flink/runtime/highavailability/JobResultStoreOptions
@1.15.0
+#<init>()V

+###org/apache/flink/runtime/heartbeat/HeartbeatServices
@1.14.0
+#<init>(JJ)V
+#<init>(JJI)V
+#createHeartbeatManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatListener;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/heartbeat/HeartbeatManager;
+#createHeartbeatManagerSender(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatListener;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/heartbeat/HeartbeatManager;
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;

+###org/apache/flink/runtime/heartbeat/HeartbeatListener
@1.14.0
+#notifyHeartbeatTimeout(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#notifyTargetUnreachable(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#reportPayload(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Object;)V
+#retrievePayload(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Ljava/lang/Object;

+###org/apache/flink/runtime/heartbeat/HeartbeatManager
@1.14.0
+#monitorTarget(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatTarget;)V
+#unmonitorTarget(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#stop()V
+#getLastHeartbeatFrom(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)J

+###org/apache/flink/runtime/heartbeat/HeartbeatTarget
@1.14.0
+#receiveHeartbeat(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#requestHeartbeat(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/heartbeat/HeartbeatSender
@1.15.0
+#<init>()V
+#receiveHeartbeat(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/heartbeat/HeartbeatReceiver
@1.15.0
+#<init>()V
+#requestHeartbeat(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/heartbeat/HeartbeatManagerSenderImpl
@1.14.0
+#run()V

+###org/apache/flink/runtime/heartbeat/HeartbeatManagerImpl
@1.14.0
+#<init>(JILorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatListener;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/slf4j/Logger;)V
+#<init>(JILorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatListener;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/slf4j/Logger;Lorg/apache/flink/runtime/heartbeat/HeartbeatMonitor$Factory;)V
+#monitorTarget(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatTarget;)V
+#unmonitorTarget(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#stop()V
+#getLastHeartbeatFrom(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)J
+#receiveHeartbeat(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#requestHeartbeat(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/heartbeat/HeartbeatMonitor$Factory
@1.14.0
+#createHeartbeatMonitor(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatTarget;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Lorg/apache/flink/runtime/heartbeat/HeartbeatListener;JI)Lorg/apache/flink/runtime/heartbeat/HeartbeatMonitor;

+###org/apache/flink/runtime/heartbeat/HeartbeatMonitor
@1.14.0
+#getHeartbeatTarget()Lorg/apache/flink/runtime/heartbeat/HeartbeatTarget;
+#getHeartbeatTargetId()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#reportHeartbeat()V
+#cancel()V
+#getLastHeartbeat()J
+#reportHeartbeatRpcFailure()V
+#reportHeartbeatRpcSuccess()V

+###org/apache/flink/runtime/heartbeat/HeartbeatMonitorImpl
@1.14.0
+#getHeartbeatTarget()Lorg/apache/flink/runtime/heartbeat/HeartbeatTarget;
+#getHeartbeatTargetId()Lorg/apache/flink/runtime/clusterframework/types/ResourceID;
+#getLastHeartbeat()J
+#reportHeartbeatRpcFailure()V
+#reportHeartbeatRpcSuccess()V
+#reportHeartbeat()V
+#cancel()V
+#run()V
+#isCanceled()Z

+###org/apache/flink/runtime/heartbeat/NoOpHeartbeatManager
@1.14.0
+#monitorTarget(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Lorg/apache/flink/runtime/heartbeat/HeartbeatTarget;)V
+#unmonitorTarget(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)V
+#stop()V
+#getLastHeartbeatFrom(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)J
+#receiveHeartbeat(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#requestHeartbeat(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#getInstance()Lorg/apache/flink/runtime/heartbeat/NoOpHeartbeatManager;

+###org/apache/flink/runtime/security/contexts/SecurityContext
@1.14.0
+#runSecured(Ljava/util/concurrent/Callable;)Ljava/lang/Object;

+###org/apache/flink/runtime/security/contexts/HadoopSecurityContextFactory
@1.14.0
+#<init>()V
+#isCompatibleWith(Lorg/apache/flink/runtime/security/SecurityConfiguration;)Z
+#createContext(Lorg/apache/flink/runtime/security/SecurityConfiguration;)Lorg/apache/flink/runtime/security/contexts/SecurityContext;

+###org/apache/flink/runtime/security/contexts/SecurityContextFactory
@1.14.0
+#isCompatibleWith(Lorg/apache/flink/runtime/security/SecurityConfiguration;)Z
+#createContext(Lorg/apache/flink/runtime/security/SecurityConfiguration;)Lorg/apache/flink/runtime/security/contexts/SecurityContext;

+###org/apache/flink/runtime/security/contexts/NoOpSecurityContext
@1.14.0
+#<init>()V
+#runSecured(Ljava/util/concurrent/Callable;)Ljava/lang/Object;

+###org/apache/flink/runtime/security/contexts/NoOpSecurityContextFactory
@1.14.0
+#<init>()V
+#isCompatibleWith(Lorg/apache/flink/runtime/security/SecurityConfiguration;)Z
+#createContext(Lorg/apache/flink/runtime/security/SecurityConfiguration;)Lorg/apache/flink/runtime/security/contexts/SecurityContext;

+###org/apache/flink/runtime/security/contexts/HadoopSecurityContext
@1.14.0
+#<init>(Lorg/apache/hadoop/security/UserGroupInformation;)V
+#runSecured(Ljava/util/concurrent/Callable;)Ljava/lang/Object;

+###org/apache/flink/runtime/security/SecurityConfiguration
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/util/List;Ljava/util/List;)V
+#isZkSaslDisable()Z
+#getKeytab()Ljava/lang/String;
+#getPrincipal()Ljava/lang/String;
+#useTicketCache()Z
+#getFlinkConfig()Lorg/apache/flink/configuration/Configuration;
+#getSecurityContextFactories()Ljava/util/List;
+#getSecurityModuleFactories()Ljava/util/List;
+#getLoginContextNames()Ljava/util/List;
+#getZooKeeperServiceName()Ljava/lang/String;
+#getZooKeeperLoginContextName()Ljava/lang/String;

+###org/apache/flink/runtime/security/SecurityContextInitializeException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/security/modules/ZookeeperModuleFactory
@1.14.0
+#<init>()V
+#createModule(Lorg/apache/flink/runtime/security/SecurityConfiguration;)Lorg/apache/flink/runtime/security/modules/SecurityModule;

+###org/apache/flink/runtime/security/modules/SecurityModuleFactory
@1.14.0
+#createModule(Lorg/apache/flink/runtime/security/SecurityConfiguration;)Lorg/apache/flink/runtime/security/modules/SecurityModule;

+###org/apache/flink/runtime/security/modules/SecurityModule$SecurityInstallException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/security/modules/SecurityModule
@1.14.0
+#install()V
+#uninstall()V

+###org/apache/flink/runtime/security/modules/HadoopModule
@1.14.0
+#<init>(Lorg/apache/flink/runtime/security/SecurityConfiguration;Lorg/apache/hadoop/conf/Configuration;)V
+#getSecurityConfig()Lorg/apache/flink/runtime/security/SecurityConfiguration;
+#install()V
+#uninstall()V

+###org/apache/flink/runtime/security/modules/JaasModuleFactory
@1.14.0
+#<init>()V
+#createModule(Lorg/apache/flink/runtime/security/SecurityConfiguration;)Lorg/apache/flink/runtime/security/modules/SecurityModule;

+###org/apache/flink/runtime/security/modules/ZooKeeperModule
@1.14.0
+#<init>(Lorg/apache/flink/runtime/security/SecurityConfiguration;)V
+#install()V
+#uninstall()V

+###org/apache/flink/runtime/security/modules/JaasModule
@1.14.0
+#<init>(Lorg/apache/flink/runtime/security/SecurityConfiguration;)V
+#install()V
+#uninstall()V
+#getCurrentConfiguration()Lorg/apache/flink/runtime/security/DynamicConfiguration;
+#getAppConfigurationEntries(Lorg/apache/flink/runtime/security/SecurityConfiguration;)[Ljavax/security/auth/login/AppConfigurationEntry;

+###org/apache/flink/runtime/security/modules/HadoopModuleFactory
@1.14.0
+#<init>()V
+#createModule(Lorg/apache/flink/runtime/security/SecurityConfiguration;)Lorg/apache/flink/runtime/security/modules/SecurityModule;

+###org/apache/flink/runtime/security/SecurityFactoryServiceLoader
@1.14.0
+#<init>()V
+#findModuleFactory(Ljava/lang/String;)Lorg/apache/flink/runtime/security/modules/SecurityModuleFactory;
+#findContextFactory(Ljava/lang/String;)Lorg/apache/flink/runtime/security/contexts/SecurityContextFactory;

+###org/apache/flink/runtime/security/NoMatchSecurityFactoryException
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V

+###org/apache/flink/runtime/security/DynamicConfiguration
@1.14.0
+#<init>(Ljavax/security/auth/login/Configuration;)V
+#addAppConfigurationEntry(Ljava/lang/String;[Ljavax/security/auth/login/AppConfigurationEntry;)V
+#getAppConfigurationEntry(Ljava/lang/String;)[Ljavax/security/auth/login/AppConfigurationEntry;
+#refresh()V

+###org/apache/flink/runtime/security/KerberosUtils
@1.14.0
+#<init>()V
+#getKrb5LoginModuleName()Ljava/lang/String;
+#getDefaultKerberosInitAppEntryName()Ljava/lang/String;
+#ticketCacheEntry()Ljavax/security/auth/login/AppConfigurationEntry;
+#keytabEntry(Ljava/lang/String;Ljava/lang/String;)Ljavax/security/auth/login/AppConfigurationEntry;

+###org/apache/flink/runtime/security/SecurityUtils
@0.9.0-milestone-1
+#<init>()V
+#isSecurityEnabled()Z
+#runSecured(Lorg/apache/flink/runtime/security/SecurityUtils$FlinkSecuredRunner;)Ljava/lang/Object;
@0.10.0
-#<init>()V
@1.14.0
+#<init>()V
+#getInstalledContext()Lorg/apache/flink/runtime/security/contexts/SecurityContext;
+#getInstalledModules()Ljava/util/List;
+#install(Lorg/apache/flink/runtime/security/SecurityConfiguration;)V
-#isSecurityEnabled()Z
-#runSecured(Lorg/apache/flink/runtime/security/SecurityUtils$FlinkSecuredRunner;)Ljava/lang/Object;

+###org/apache/flink/runtime/leaderelection/LeaderElectionService
@0.10.0
+#start(Lorg/apache/flink/runtime/leaderelection/LeaderContender;)V
+#stop()V
+#confirmLeaderSessionID(Ljava/util/UUID;)V
+#hasLeadership()Z
@1.14.0
+#confirmLeadership(Ljava/util/UUID;Ljava/lang/String;)V
+#hasLeadership(Ljava/util/UUID;)Z
-#confirmLeaderSessionID(Ljava/util/UUID;)V
-#hasLeadership()Z

+###org/apache/flink/runtime/leaderelection/LeaderContender
@0.10.0
+#grantLeadership(Ljava/util/UUID;)V
+#revokeLeadership()V
+#getAddress()Ljava/lang/String;
+#handleError(Ljava/lang/Exception;)V
@1.14.0
+#getDescription()Ljava/lang/String;
-#getAddress()Ljava/lang/String;

+###org/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionDriver$Listener
@1.15.0
+#isLeader()V
+#notLeader()V
+#notifyLeaderInformationChange(Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V
+#notifyAllKnownLeaderInformation(Ljava/util/Collection;)V

+###org/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionDriver
@1.15.0
+#close()V
+#hasLeadership()Z
+#publishLeaderInformation(Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V
+#deleteLeaderInformation(Ljava/lang/String;)V

+###org/apache/flink/runtime/leaderelection/LeaderInformation
@1.14.0
+#getLeaderSessionID()Ljava/util/UUID;
+#getLeaderAddress()Ljava/lang/String;
+#isEmpty()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#known(Ljava/util/UUID;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/LeaderInformation;
+#empty()Lorg/apache/flink/runtime/leaderelection/LeaderInformation;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/leaderelection/LeaderInformationWithComponentId
@1.15.0
+#create(Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)Lorg/apache/flink/runtime/leaderelection/LeaderInformationWithComponentId;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/leaderelection/ZooKeeperMultipleComponentLeaderElectionDriverFactory
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;)V
+#create(Lorg/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionDriver$Listener;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperMultipleComponentLeaderElectionDriver;
+#create(Lorg/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionDriver$Listener;)Lorg/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionDriver;

+###org/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionDriverFactory
@1.15.0
+#create(Lorg/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionDriver$Listener;)Lorg/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionDriver;

+###org/apache/flink/runtime/leaderelection/ZooKeeperMultipleComponentLeaderElectionDriver
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionDriver$Listener;)V
+#close()V
+#hasLeadership()Z
+#publishLeaderInformation(Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V
+#deleteLeaderInformation(Ljava/lang/String;)V
+#isLeader()V
+#notLeader()V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/leaderelection/LeaderElectionDriver
@1.14.0
+#writeLeaderInformation(Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V
+#hasLeadership()Z
+#close()V

+###org/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionService
@1.15.0
+#close()V
+#createDriverFactory(Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/LeaderElectionDriverFactory;
+#publishLeaderInformation(Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V
+#registerLeaderElectionEventHandler(Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderElectionEventHandler;)V
+#unregisterLeaderElectionEventHandler(Ljava/lang/String;)V
+#hasLeadership(Ljava/lang/String;)Z

+###org/apache/flink/runtime/leaderelection/LeaderElectionEventHandler
@1.14.0
+#onGrantLeadership()V
+#onRevokeLeadership()V
+#onLeaderInformationChange(Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V
@1.15.0
+#onGrantLeadership(Ljava/util/UUID;)V
-#onGrantLeadership()V

+###org/apache/flink/runtime/leaderelection/LeaderElectionDriverFactory
@1.14.0
+#createLeaderElectionDriver(Lorg/apache/flink/runtime/leaderelection/LeaderElectionEventHandler;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/LeaderElectionDriver;

+###org/apache/flink/runtime/leaderelection/DefaultLeaderElectionService
@1.14.0
+#<init>(Lorg/apache/flink/runtime/leaderelection/LeaderElectionDriverFactory;)V
+#start(Lorg/apache/flink/runtime/leaderelection/LeaderContender;)V
+#stop()V
+#confirmLeadership(Ljava/util/UUID;Ljava/lang/String;)V
+#hasLeadership(Ljava/util/UUID;)Z
+#getLeaderSessionID()Ljava/util/UUID;
+#onGrantLeadership()V
+#onRevokeLeadership()V
+#onLeaderInformationChange(Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V
@1.15.0
+#onGrantLeadership(Ljava/util/UUID;)V
-#onGrantLeadership()V

+###org/apache/flink/runtime/leaderelection/DefaultMultipleComponentLeaderElectionService
@1.15.0
+#<init>(Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/leaderelection/MultipleComponentLeaderElectionDriverFactory;)V
+#close()V
+#createDriverFactory(Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/LeaderElectionDriverFactory;
+#publishLeaderInformation(Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V
+#registerLeaderElectionEventHandler(Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderElectionEventHandler;)V
+#unregisterLeaderElectionEventHandler(Ljava/lang/String;)V
+#hasLeadership(Ljava/lang/String;)Z
+#isLeader()V
+#notLeader()V
+#notifyLeaderInformationChange(Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V
+#notifyAllKnownLeaderInformation(Ljava/util/Collection;)V

+###org/apache/flink/runtime/leaderelection/StandaloneLeaderElectionService
@0.10.0
+#<init>()V
+#start(Lorg/apache/flink/runtime/leaderelection/LeaderContender;)V
+#stop()V
+#confirmLeaderSessionID(Ljava/util/UUID;)V
+#hasLeadership()Z
@1.14.0
+#confirmLeadership(Ljava/util/UUID;Ljava/lang/String;)V
+#hasLeadership(Ljava/util/UUID;)Z
-#confirmLeaderSessionID(Ljava/util/UUID;)V
-#hasLeadership()Z

+###org/apache/flink/runtime/leaderelection/LeaderElectionException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionDriver
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderElectionEventHandler;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Ljava/lang/String;)V
+#close()V
+#hasLeadership()Z
+#isLeader()V
+#notLeader()V
+#writeLeaderInformation(Lorg/apache/flink/runtime/leaderelection/LeaderInformation;)V
+#unhandledError(Ljava/lang/String;Ljava/lang/Throwable;)V
+#toString()Ljava/lang/String;
@1.14.3
-#unhandledError(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderElectionEventHandler;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/leaderelection/LeaderElectionEventHandler;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Ljava/lang/String;)V

+###org/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionDriverFactory
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#createLeaderElectionDriver(Lorg/apache/flink/runtime/leaderelection/LeaderElectionEventHandler;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionDriver;
+#createLeaderElectionDriver(Lorg/apache/flink/runtime/leaderelection/LeaderElectionEventHandler;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderelection/LeaderElectionDriver;
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V

+###org/apache/flink/runtime/registration/RegistrationResponse$Success
@1.14.0
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/registration/RegistrationResponse$Failure
@1.14.0
+#<init>(Ljava/lang/Throwable;)V
+#getReason()Lorg/apache/flink/util/SerializedThrowable;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/registration/RegistrationResponse$Rejection
@1.14.0
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/registration/RegistrationResponse
@1.14.0
+#<init>()V

+###org/apache/flink/runtime/registration/RetryingRegistrationConfiguration
@1.14.0
+#<init>(JJJJ)V
+#getInitialRegistrationTimeoutMillis()J
+#getMaxRegistrationTimeoutMillis()J
+#getErrorDelayMillis()J
+#getRefusedDelayMillis()J
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;
+#defaultConfiguration()Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;

+###org/apache/flink/runtime/registration/RegisteredRpcConnection
@1.14.0
+#<init>(Lorg/slf4j/Logger;Ljava/lang/String;Ljava/io/Serializable;Ljava/util/concurrent/Executor;)V
+#start()V
+#tryReconnect()Z
+#close()V
+#isClosed()Z
+#getTargetLeaderId()Ljava/io/Serializable;
+#getTargetAddress()Ljava/lang/String;
+#getTargetGateway()Lorg/apache/flink/runtime/rpc/RpcGateway;
+#isConnected()Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/registration/RetryingRegistration
@1.14.0
+#<init>(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/rpc/RpcService;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/io/Serializable;Lorg/apache/flink/runtime/registration/RetryingRegistrationConfiguration;)V
+#getFuture()Ljava/util/concurrent/CompletableFuture;
+#cancel()V
+#isCanceled()Z
+#startRegistration()V

+###org/apache/flink/runtime/registration/RegistrationConnectionListener
@1.14.0
+#onRegistrationSuccess(Lorg/apache/flink/runtime/registration/RegisteredRpcConnection;Lorg/apache/flink/runtime/registration/RegistrationResponse$Success;)V
+#onRegistrationFailure(Ljava/lang/Throwable;)V
+#onRegistrationRejection(Ljava/lang/String;Lorg/apache/flink/runtime/registration/RegistrationResponse$Rejection;)V

+###org/apache/flink/runtime/slots/ResourceRequirements
@1.14.0
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getTargetAddress()Ljava/lang/String;
+#getResourceRequirements()Ljava/util/Collection;
+#create(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/util/Collection;)Lorg/apache/flink/runtime/slots/ResourceRequirements;
+#empty(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/runtime/slots/ResourceRequirements;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/slots/ResourceRequirement
@1.14.0
+#getResourceProfile()Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;
+#getNumberOfRequiredSlots()I
+#create(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;I)Lorg/apache/flink/runtime/slots/ResourceRequirement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/slots/RequirementMatcher
@1.14.0
+#match(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/util/ResourceCounter;Ljava/util/function/Function;)Ljava/util/Optional;

+###org/apache/flink/runtime/slots/DefaultRequirementMatcher
@1.14.0
+#<init>()V
+#match(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;Lorg/apache/flink/runtime/util/ResourceCounter;Ljava/util/function/Function;)Ljava/util/Optional;

+###org/apache/flink/runtime/plugable/SerializationDelegate
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#setInstance(Ljava/lang/Object;)V
+#getInstance()Ljava/lang/Object;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/runtime/plugable/NonReusingDeserializationDelegate
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#setInstance(Ljava/lang/Object;)V
+#getInstance()Ljava/lang/Object;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/runtime/plugable/DeserializationDelegate
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#setInstance(Ljava/lang/Object;)V
+#getInstance()Ljava/lang/Object;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
@0.9.0-milestone-1
-#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/runtime/plugable/ReusingDeserializationDelegate
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#setInstance(Ljava/lang/Object;)V
+#getInstance()Ljava/lang/Object;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/runtime/throwable/ThrowableType
@1.14.0
+#values()[Lorg/apache/flink/runtime/throwable/ThrowableType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/throwable/ThrowableType;

+###org/apache/flink/runtime/throwable/ThrowableAnnotation
@1.14.0
+#value()Lorg/apache/flink/runtime/throwable/ThrowableType;

+###org/apache/flink/runtime/throwable/ThrowableClassifier
@1.14.0
+#<init>()V
+#getThrowableType(Ljava/lang/Throwable;)Lorg/apache/flink/runtime/throwable/ThrowableType;
+#findThrowableOfThrowableType(Ljava/lang/Throwable;Lorg/apache/flink/runtime/throwable/ThrowableType;)Ljava/util/Optional;

+###org/apache/flink/runtime/iterative/convergence/WorksetEmptyConvergenceCriterion
@0.6-hadoop2-incubating
+#<init>()V
+#isConverged(ILorg/apache/flink/types/LongValue;)Z
+#isConverged(ILorg/apache/flink/types/Value;)Z

+###org/apache/flink/runtime/iterative/event/TerminationEvent
@0.6-hadoop2-incubating
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/runtime/iterative/event/AllWorkersDoneEvent
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/util/Map;)V

+###org/apache/flink/runtime/iterative/event/IterationEventWithAggregators
@0.6-hadoop2-incubating
+#getAggregatorNames()[Ljava/lang/String;
+#getAggregates(Ljava/lang/ClassLoader;)[Lorg/apache/flink/types/Value;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/runtime/iterative/event/WorkerDoneEvent
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(ILjava/lang/String;Lorg/apache/flink/types/Value;)V
+#<init>(ILjava/util/Map;)V
+#getWorkerIndex()I
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/runtime/iterative/concurrent/SolutionSetUpdateBarrierBroker
@0.6-hadoop2-incubating
+#instance()Lorg/apache/flink/runtime/iterative/concurrent/Broker;

+###org/apache/flink/runtime/iterative/concurrent/Broker
@0.6-hadoop2-incubating
+#<init>()V
+#handIn(Ljava/lang/String;Ljava/lang/Object;)V
+#getAndRemove(Ljava/lang/String;)Ljava/lang/Object;
+#remove(Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/flink/runtime/iterative/concurrent/SolutionSetUpdateBarrier
@0.6-hadoop2-incubating
+#<init>()V
+#setup()V
+#waitForSolutionSetUpdate()V
+#notifySolutionSetUpdate()V

+###org/apache/flink/runtime/iterative/concurrent/BlockingBackChannel
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/iterative/io/SerializedUpdateBuffer;)V
+#getReadEndAfterSuperstepEnded()Lorg/apache/flink/core/memory/DataInputView;
+#getWriteEnd()Lorg/apache/flink/core/memory/DataOutputView;
+#notifyOfEndOfSuperstep()V

+###org/apache/flink/runtime/iterative/concurrent/SuperstepBarrier
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/ClassLoader;)V
+#setup()V
+#waitForOtherWorkers()V
+#getAggregatorNames()[Ljava/lang/String;
+#getAggregates()[Lorg/apache/flink/types/Value;
+#eventOccurred(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;)V
+#terminationSignaled()Z
@0.9.0-milestone-1
+#onEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
+#onEvent(Ljava/lang/Object;)V
-#eventOccurred(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;)V
@0.10.0
+#onEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
-#onEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V

+###org/apache/flink/runtime/iterative/concurrent/SuperstepKickoffLatchBroker
@0.6-hadoop2-incubating
+#instance()Lorg/apache/flink/runtime/iterative/concurrent/Broker;

+###org/apache/flink/runtime/iterative/concurrent/SuperstepKickoffLatch
@0.6-hadoop2-incubating
+#<init>()V
+#triggerNextSuperstep()V
+#signalTermination()V
+#awaitStartOfSuperstepOrTermination(I)Z

+###org/apache/flink/runtime/iterative/concurrent/SolutionSetBroker
@0.6-hadoop2-incubating
+#instance()Lorg/apache/flink/runtime/iterative/concurrent/Broker;

+###org/apache/flink/runtime/iterative/concurrent/IterationAggregatorBroker
@0.6-hadoop2-incubating
+#<init>()V
+#instance()Lorg/apache/flink/runtime/iterative/concurrent/IterationAggregatorBroker;

+###org/apache/flink/runtime/iterative/concurrent/BlockingBackChannelBroker
@0.6-hadoop2-incubating
+#instance()Lorg/apache/flink/runtime/iterative/concurrent/Broker;

+###org/apache/flink/runtime/iterative/task/AbstractIterativeTask
@0.10.0
+#<init>()V
+#run()V
+#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext;
+#brokerKey()Ljava/lang/String;
+#getIterationAggregators()Lorg/apache/flink/runtime/iterative/task/RuntimeAggregatorRegistry;
+#terminationRequested()Z
+#requestTermination()V
+#cancel()V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/execution/Environment;)V
+#createRuntimeContext(Lorg/apache/flink/metrics/groups/OperatorMetricGroup;)Lorg/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext;
+#terminationCompleted()V
+#cancel()Ljava/util/concurrent/Future;
-#<init>()V
-#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext;
-#cancel()V
@1.15.0
+#cancel()V
-#terminationCompleted()V
-#cancel()Ljava/util/concurrent/Future;

+###org/apache/flink/runtime/iterative/task/Terminable
@0.6-hadoop2-incubating
+#terminationRequested()Z
+#requestTermination()V
@1.14.0
+#terminationCompleted()V
@1.15.0
-#terminationCompleted()V

+###org/apache/flink/runtime/iterative/task/RuntimeAggregatorRegistry
@0.6-hadoop2-incubating
+#<init>(Ljava/util/Collection;)V
+#getPreviousGlobalAggregate(Ljava/lang/String;)Lorg/apache/flink/types/Value;
+#getAggregator(Ljava/lang/String;)Lorg/apache/flink/api/common/aggregators/Aggregator;
+#getAllAggregators()Ljava/util/Map;
+#updateGlobalAggregatesAndReset([Ljava/lang/String;[Lorg/apache/flink/types/Value;)V

+###org/apache/flink/runtime/iterative/task/IterationHeadTask
@0.10.0
+#<init>()V
+#run()V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/execution/Environment;)V
-#<init>()V

+###org/apache/flink/runtime/iterative/task/IterationTailTask
@0.10.0
+#<init>()V
+#run()V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/execution/Environment;)V
-#<init>()V

+###org/apache/flink/runtime/iterative/task/SyncEventHandler
@0.6-hadoop2-incubating
+#<init>(ILjava/util/Map;Ljava/lang/ClassLoader;)V
+#eventOccurred(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;)V
+#isEndOfSuperstep()Z
+#resetEndOfSuperstep()V
@0.9.0-milestone-1
+#onEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
+#onEvent(Ljava/lang/Object;)V
-#eventOccurred(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;)V
@0.10.0
+#onEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
-#onEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V

+###org/apache/flink/runtime/iterative/task/IterationIntermediateTask
@0.10.0
+#<init>()V
+#run()V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/execution/Environment;)V
-#<init>()V

+###org/apache/flink/runtime/iterative/task/IterationSynchronizationSinkTask
@0.6-hadoop2-incubating
+#<init>()V
+#registerInputOutput()V
+#invoke()V
+#terminationRequested()Z
+#requestTermination()V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/execution/Environment;)V
+#terminationCompleted()V
-#<init>()V
-#registerInputOutput()V
@1.15.0
-#terminationCompleted()V

+###org/apache/flink/runtime/iterative/io/SerializedUpdateBuffer
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/util/List;ILorg/apache/flink/runtime/io/disk/iomanager/IOManager;)V
+#flush()V
+#switchBuffers()Lorg/apache/flink/runtime/iterative/io/SerializedUpdateBuffer$ReadEnd;
+#close()Ljava/util/List;

+###org/apache/flink/runtime/iterative/io/SolutionSetFastUpdateOutputCollector
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/util/Collector;)V
+#collect(Ljava/lang/Object;)V
+#close()V
@0.9.1
+#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;)V
+#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;Lorg/apache/flink/util/Collector;)V
-#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
-#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/runtime/iterative/io/WorksetUpdateOutputCollector
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#<init>(Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/util/Collector;)V
+#collect(Ljava/lang/Object;)V
+#getElementsCollectedAndReset()J
+#close()V

+###org/apache/flink/runtime/iterative/io/SolutionSetUpdateOutputCollector
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/util/Collector;)V
+#collect(Ljava/lang/Object;)V
+#close()V
@0.9.1
+#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;)V
+#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;Lorg/apache/flink/util/Collector;)V
-#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
-#<init>(Lorg/apache/flink/runtime/operators/hash/CompactingHashTable;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/runtime/iterative/io/SolutionSetObjectsUpdateOutputCollector
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/JoinHashMap;)V
+#<init>(Lorg/apache/flink/api/common/operators/util/JoinHashMap;Lorg/apache/flink/util/Collector;)V
+#collect(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/runtime/iterative/io/HashPartitionIterator
@0.6-hadoop2-incubating
+#<init>(Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#next(Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0-milestone-1
+#next()Ljava/lang/Object;

+###org/apache/flink/runtime/persistence/StateHandleStore$NotExistException
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/runtime/persistence/StateHandleStore$AlreadyExistException
@1.14.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/runtime/persistence/StateHandleStore
@1.14.0
+#addAndLock(Ljava/lang/String;Ljava/io/Serializable;)Lorg/apache/flink/runtime/state/RetrievableStateHandle;
+#replace(Ljava/lang/String;Lorg/apache/flink/runtime/persistence/ResourceVersion;Ljava/io/Serializable;)V
+#exists(Ljava/lang/String;)Lorg/apache/flink/runtime/persistence/ResourceVersion;
+#getAndLock(Ljava/lang/String;)Lorg/apache/flink/runtime/state/RetrievableStateHandle;
+#getAllAndLock()Ljava/util/List;
+#getAllHandles()Ljava/util/Collection;
+#releaseAndTryRemove(Ljava/lang/String;)Z
+#releaseAndTryRemoveAll()V
+#clearEntries()V
+#release(Ljava/lang/String;)V
+#releaseAll()V

+###org/apache/flink/runtime/persistence/ResourceVersion
@1.14.0
+#isExisting()Z

+###org/apache/flink/runtime/persistence/PossibleInconsistentStateException
@1.14.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/persistence/IntegerResourceVersion
@1.14.0
+#compareTo(Lorg/apache/flink/runtime/persistence/IntegerResourceVersion;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isExisting()Z
+#toString()Ljava/lang/String;
+#getValue()I
+#notExisting()Lorg/apache/flink/runtime/persistence/IntegerResourceVersion;
+#valueOf(I)Lorg/apache/flink/runtime/persistence/IntegerResourceVersion;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/flink/runtime/persistence/StringResourceVersion
@1.14.0
+#compareTo(Lorg/apache/flink/runtime/persistence/StringResourceVersion;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isExisting()Z
+#toString()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#notExisting()Lorg/apache/flink/runtime/persistence/StringResourceVersion;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/persistence/StringResourceVersion;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/flink/runtime/persistence/RetrievableStateStorageHelper
@1.14.0
+#store(Ljava/io/Serializable;)Lorg/apache/flink/runtime/state/RetrievableStateHandle;

+###org/apache/flink/runtime/persistence/filesystem/FileSystemStateStorageHelper
@1.14.0
+#<init>(Lorg/apache/flink/core/fs/Path;Ljava/lang/String;)V
+#store(Ljava/io/Serializable;)Lorg/apache/flink/runtime/state/RetrievableStateHandle;

+###org/apache/flink/runtime/net/ConnectionUtils$LeaderConnectingAddressListener
@0.10.0
+#<init>()V
+#findConnectingAddress(Lscala/concurrent/duration/FiniteDuration;)Ljava/net/InetAddress;
+#findConnectingAddress(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;)Ljava/net/InetAddress;
+#notifyLeaderAddress(Ljava/lang/String;Ljava/util/UUID;)V
+#handleError(Ljava/lang/Exception;)V
@1.14.0
+#<init>(Lorg/apache/flink/runtime/rpc/RpcSystemUtils;)V
+#findConnectingAddress(Ljava/time/Duration;)Ljava/net/InetAddress;
+#findConnectingAddress(Ljava/time/Duration;Ljava/time/Duration;)Ljava/net/InetAddress;
-#<init>()V
-#findConnectingAddress(Lscala/concurrent/duration/FiniteDuration;)Ljava/net/InetAddress;
-#findConnectingAddress(Lscala/concurrent/duration/FiniteDuration;Lscala/concurrent/duration/FiniteDuration;)Ljava/net/InetAddress;

+###org/apache/flink/runtime/net/ConnectionUtils
@0.10.0
+#<init>()V
+#findConnectingAddress(Ljava/net/InetSocketAddress;JJ)Ljava/net/InetAddress;

+###org/apache/flink/runtime/net/RedirectingSslHandler
@1.14.0
+#<init>(Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;Lorg/apache/flink/runtime/io/network/netty/SSLHandlerFactory;)V

+###org/apache/flink/runtime/net/SSLUtils
@1.14.0
+#<init>()V
+#createSSLServerSocketFactory(Lorg/apache/flink/configuration/Configuration;)Ljavax/net/ServerSocketFactory;
+#createSSLClientSocketFactory(Lorg/apache/flink/configuration/Configuration;)Ljavax/net/SocketFactory;
+#createInternalServerSSLEngineFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/io/network/netty/SSLHandlerFactory;
+#createInternalClientSSLEngineFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/io/network/netty/SSLHandlerFactory;
+#createRestServerSSLEngineFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/io/network/netty/SSLHandlerFactory;
+#createRestClientSSLEngineFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/io/network/netty/SSLHandlerFactory;
+#createRestSSLContext(Lorg/apache/flink/configuration/Configuration;Z)Ljavax/net/ssl/SSLContext;
+#createRestNettySSLContext(Lorg/apache/flink/configuration/Configuration;ZLorg/apache/flink/shaded/netty4/io/netty/handler/ssl/ClientAuth;Lorg/apache/flink/shaded/netty4/io/netty/handler/ssl/SslProvider;)Lorg/apache/flink/shaded/netty4/io/netty/handler/ssl/SslContext;

+###org/apache/flink/runtime/minicluster/RpcServiceSharing
@1.14.0
+#values()[Lorg/apache/flink/runtime/minicluster/RpcServiceSharing;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/minicluster/RpcServiceSharing;

+###org/apache/flink/runtime/minicluster/MiniClusterJobClient$JobFinalizationBehavior
@1.14.0
+#values()[Lorg/apache/flink/runtime/minicluster/MiniClusterJobClient$JobFinalizationBehavior;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/minicluster/MiniClusterJobClient$JobFinalizationBehavior;

+###org/apache/flink/runtime/minicluster/MiniClusterJobClient
@1.14.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/minicluster/MiniCluster;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/minicluster/MiniClusterJobClient$JobFinalizationBehavior;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getJobStatus()Ljava/util/concurrent/CompletableFuture;
+#cancel()Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(ZLjava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#getAccumulators()Ljava/util/concurrent/CompletableFuture;
+#getJobExecutionResult()Ljava/util/concurrent/CompletableFuture;
+#sendCoordinationRequest(Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/runtime/operators/coordination/CoordinationRequest;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#stopWithSavepoint(ZLjava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
-#stopWithSavepoint(ZLjava/lang/String;)Ljava/util/concurrent/CompletableFuture;
-#triggerSavepoint(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/minicluster/MiniCluster$RpcServiceFactory
@1.14.0
+#createRpcService()Lorg/apache/flink/runtime/rpc/RpcService;

+###org/apache/flink/runtime/minicluster/MiniCluster$CommonRpcServiceFactory
@1.14.0
+#createRpcService()Lorg/apache/flink/runtime/rpc/RpcService;

+###org/apache/flink/runtime/minicluster/MiniCluster$DedicatedRpcServiceFactory
@1.14.0
+#createRpcService()Lorg/apache/flink/runtime/rpc/RpcService;

+###org/apache/flink/runtime/minicluster/MiniCluster$HaServices
@1.14.0
+#values()[Lorg/apache/flink/runtime/minicluster/MiniCluster$HaServices;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/minicluster/MiniCluster$HaServices;

+###org/apache/flink/runtime/minicluster/MiniCluster
@1.14.0
+#<init>(Lorg/apache/flink/runtime/minicluster/MiniClusterConfiguration;)V
+#getRestAddress()Ljava/util/concurrent/CompletableFuture;
+#getClusterInformation()Lorg/apache/flink/runtime/entrypoint/ClusterInformation;
+#isRunning()Z
+#start()V
+#getHaLeadershipControl()Ljava/util/Optional;
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#startTaskManager()V
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#terminateTaskManager(I)Ljava/util/concurrent/CompletableFuture;
+#getArchivedExecutionGraph(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#listJobs()Ljava/util/concurrent/CompletableFuture;
+#getJobStatus(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#cancelJob(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
+#disposeSavepoint(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#getExecutionGraph(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#deliverCoordinationRequestToCoordinator(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/OperatorID;Lorg/apache/flink/util/SerializedValue;)Ljava/util/concurrent/CompletableFuture;
+#runDetached(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#executeJobBlocking(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/api/common/JobExecutionResult;
+#submitJob(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Ljava/util/concurrent/CompletableFuture;
+#requestJobResult(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#requestClusterOverview()Ljava/util/concurrent/CompletableFuture;
@1.15.0
+#<init>(Lorg/apache/flink/runtime/minicluster/MiniClusterConfiguration;Ljava/util/function/Supplier;)V
+#overrideRestoreModeForChangelogStateBackend()V
+#triggerSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
+#triggerCheckpoint(Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;ZLorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
+#getResourceOverview()Ljava/util/concurrent/CompletableFuture;
-#triggerSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
-#stopWithSavepoint(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#invalidateClusterDataset(Lorg/apache/flink/util/AbstractID;)Ljava/util/concurrent/CompletableFuture;
+#listCompletedClusterDatasetIds()Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/minicluster/MiniClusterConfiguration$Builder
@1.14.0
+#<init>()V
+#setConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/minicluster/MiniClusterConfiguration$Builder;
+#setNumTaskManagers(I)Lorg/apache/flink/runtime/minicluster/MiniClusterConfiguration$Builder;
+#setNumSlotsPerTaskManager(I)Lorg/apache/flink/runtime/minicluster/MiniClusterConfiguration$Builder;
+#setRpcServiceSharing(Lorg/apache/flink/runtime/minicluster/RpcServiceSharing;)Lorg/apache/flink/runtime/minicluster/MiniClusterConfiguration$Builder;
+#setCommonBindAddress(Ljava/lang/String;)Lorg/apache/flink/runtime/minicluster/MiniClusterConfiguration$Builder;
+#setHaServices(Lorg/apache/flink/runtime/minicluster/MiniCluster$HaServices;)Lorg/apache/flink/runtime/minicluster/MiniClusterConfiguration$Builder;
+#build()Lorg/apache/flink/runtime/minicluster/MiniClusterConfiguration;
@1.15.1
+#withRandomPorts()Lorg/apache/flink/runtime/minicluster/MiniClusterConfiguration$Builder;

+###org/apache/flink/runtime/minicluster/MiniClusterConfiguration
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;ILorg/apache/flink/runtime/minicluster/RpcServiceSharing;Ljava/lang/String;Lorg/apache/flink/runtime/minicluster/MiniCluster$HaServices;)V
+#getRpcServiceSharing()Lorg/apache/flink/runtime/minicluster/RpcServiceSharing;
+#getNumTaskManagers()I
+#getJobManagerExternalAddress()Ljava/lang/String;
+#getTaskManagerExternalAddress()Ljava/lang/String;
+#getJobManagerExternalPortRange()Ljava/lang/String;
+#getTaskManagerExternalPortRange()Ljava/lang/String;
+#getJobManagerBindAddress()Ljava/lang/String;
+#getTaskManagerBindAddress()Ljava/lang/String;
+#getConfiguration()Lorg/apache/flink/configuration/UnmodifiableConfiguration;
+#getHaServices()Lorg/apache/flink/runtime/minicluster/MiniCluster$HaServices;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/history/FsJobArchivist
@1.14.0
+#archiveJob(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)Lorg/apache/flink/core/fs/Path;
+#getArchivedJsons(Lorg/apache/flink/core/fs/Path;)Ljava/util/Collection;

+###org/apache/flink/runtime/filecache/FileCache
@0.6-hadoop2-incubating
+#<init>()V
+#createTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/concurrent/FutureTask;
+#deleteTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#getTempDir(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;)Lorg/apache/flink/core/fs/Path;
+#shutdown()V
+#copy(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;Z)V
@0.9.0-milestone-1
+#createTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/FutureTask;
+#deleteTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/api/common/JobID;)V
+#getTempDir(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/core/fs/Path;
-#createTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/concurrent/FutureTask;
-#deleteTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/runtime/jobgraph/JobID;)V
-#getTempDir(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;)Lorg/apache/flink/core/fs/Path;
@0.9.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
+#createTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/Future;
+#deleteTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/JobID;)V
-#<init>()V
-#createTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/FutureTask;
-#deleteTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/api/common/JobID;)V
-#getTempDir(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)Lorg/apache/flink/core/fs/Path;
@1.14.0
+#<init>([Ljava/lang/String;Lorg/apache/flink/runtime/blob/PermanentBlobService;)V
+#createTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Ljava/util/concurrent/Future;
+#releaseJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#<init>(Lorg/apache/flink/configuration/Configuration;)V
-#createTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/api/common/JobID;)Ljava/util/concurrent/Future;
-#deleteTmpFile(Ljava/lang/String;Lorg/apache/flink/api/common/JobID;)V
-#copy(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;Z)V

+###org/apache/flink/runtime/zookeeper/FlinkZooKeeperQuorumPeer
@0.10.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#runFlinkZkQuorumPeer(Ljava/lang/String;I)V

+###org/apache/flink/runtime/zookeeper/ZooKeeperSharedValue
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/recipes/shared/SharedValue;)V
+#start()V
+#close()V
+#setValue([B)V
+#getValue()[B
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/recipes/shared/SharedValue;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/recipes/shared/SharedValue;)V

+###org/apache/flink/runtime/zookeeper/ZooKeeperSharedCount
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/recipes/shared/SharedCount;)V
+#start()V
+#close()V
+#getVersionedValue()Lorg/apache/flink/runtime/zookeeper/ZooKeeperVersionedValue;
+#trySetCount(Lorg/apache/flink/runtime/zookeeper/ZooKeeperVersionedValue;I)Z
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/recipes/shared/SharedCount;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/recipes/shared/SharedCount;)V

+###org/apache/flink/runtime/zookeeper/ZooKeeperVersionedValue
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/recipes/shared/VersionedValue;)V
+#getValue()Ljava/lang/Object;
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/recipes/shared/VersionedValue;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/recipes/shared/VersionedValue;)V

+###org/apache/flink/runtime/zookeeper/ZooKeeperStateHandleStore
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/runtime/zookeeper/StateStorageHelper;)V
+#add(Ljava/lang/String;Ljava/io/Serializable;)Lorg/apache/flink/runtime/state/StateHandle;
+#add(Ljava/lang/String;Ljava/io/Serializable;Lorg/apache/zookeeper/CreateMode;)Lorg/apache/flink/runtime/state/StateHandle;
+#replace(Ljava/lang/String;ILjava/io/Serializable;)V
+#exists(Ljava/lang/String;)I
+#get(Ljava/lang/String;)Lorg/apache/flink/runtime/state/StateHandle;
+#getAll()Ljava/util/List;
+#getAllSortedByName()Ljava/util/List;
+#remove(Ljava/lang/String;)V
+#remove(Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;)V
+#removeAndDiscardState(Ljava/lang/String;)V
+#removeAndDiscardAllState()V
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/runtime/persistence/RetrievableStateStorageHelper;)V
+#addAndLock(Ljava/lang/String;Ljava/io/Serializable;)Lorg/apache/flink/runtime/state/RetrievableStateHandle;
+#replace(Ljava/lang/String;Lorg/apache/flink/runtime/persistence/IntegerResourceVersion;Ljava/io/Serializable;)V
+#exists(Ljava/lang/String;)Lorg/apache/flink/runtime/persistence/IntegerResourceVersion;
+#getAndLock(Ljava/lang/String;)Lorg/apache/flink/runtime/state/RetrievableStateHandle;
+#getAllHandles()Ljava/util/Collection;
+#getAllAndLock()Ljava/util/List;
+#releaseAndTryRemove(Ljava/lang/String;)Z
+#releaseAndTryRemoveAll()V
+#release(Ljava/lang/String;)V
+#releaseAll()V
+#clearEntries()V
+#toString()Ljava/lang/String;
+#exists(Ljava/lang/String;)Lorg/apache/flink/runtime/persistence/ResourceVersion;
+#replace(Ljava/lang/String;Lorg/apache/flink/runtime/persistence/ResourceVersion;Ljava/io/Serializable;)V
-#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/runtime/zookeeper/StateStorageHelper;)V
-#add(Ljava/lang/String;Ljava/io/Serializable;)Lorg/apache/flink/runtime/state/StateHandle;
-#add(Ljava/lang/String;Ljava/io/Serializable;Lorg/apache/zookeeper/CreateMode;)Lorg/apache/flink/runtime/state/StateHandle;
-#replace(Ljava/lang/String;ILjava/io/Serializable;)V
-#exists(Ljava/lang/String;)I
-#get(Ljava/lang/String;)Lorg/apache/flink/runtime/state/StateHandle;
-#getAll()Ljava/util/List;
-#getAllSortedByName()Ljava/util/List;
-#remove(Ljava/lang/String;)V
-#remove(Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;)V
-#removeAndDiscardState(Ljava/lang/String;)V
-#removeAndDiscardAllState()V
@1.15.0
+#<init>(Lorg/apache/flink/shaded/curator5/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/runtime/persistence/RetrievableStateStorageHelper;)V
-#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/runtime/persistence/RetrievableStateStorageHelper;)V

+###org/apache/flink/runtime/concurrent/UnsupportedOperationExecutor
@1.14.0
+#values()[Lorg/apache/flink/runtime/concurrent/UnsupportedOperationExecutor;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/concurrent/UnsupportedOperationExecutor;
+#execute(Ljava/lang/Runnable;)V

+###org/apache/flink/runtime/clusterframework/overlays/HadoopUserOverlay$Builder
@1.14.0
+#<init>()V
+#fromEnvironment(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/clusterframework/overlays/HadoopUserOverlay$Builder;
+#build()Lorg/apache/flink/runtime/clusterframework/overlays/HadoopUserOverlay;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/HadoopUserOverlay$Builder

+###org/apache/flink/runtime/clusterframework/overlays/UserLibOverlay$Builder
@1.14.0
+#<init>()V
+#setUsrLibDirectory(Ljava/io/File;)Lorg/apache/flink/runtime/clusterframework/overlays/UserLibOverlay$Builder;
+#build()Lorg/apache/flink/runtime/clusterframework/overlays/UserLibOverlay;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/UserLibOverlay$Builder

+###org/apache/flink/runtime/clusterframework/overlays/KeytabOverlay$Builder
@1.14.0
+#<init>()V
+#fromEnvironment(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/clusterframework/overlays/KeytabOverlay$Builder;
+#build()Lorg/apache/flink/runtime/clusterframework/overlays/KeytabOverlay;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/KeytabOverlay$Builder

+###org/apache/flink/runtime/clusterframework/overlays/Krb5ConfOverlay
@1.14.0
+#<init>(Ljava/io/File;)V
+#<init>(Lorg/apache/flink/core/fs/Path;)V
+#configure(Lorg/apache/flink/runtime/clusterframework/ContainerSpecification;)V
+#newBuilder()Lorg/apache/flink/runtime/clusterframework/overlays/Krb5ConfOverlay$Builder;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/Krb5ConfOverlay

+###org/apache/flink/runtime/clusterframework/overlays/Krb5ConfOverlay$Builder
@1.14.0
+#<init>()V
+#fromEnvironmentOrConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/clusterframework/overlays/Krb5ConfOverlay$Builder;
+#build()Lorg/apache/flink/runtime/clusterframework/overlays/Krb5ConfOverlay;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/Krb5ConfOverlay$Builder

+###org/apache/flink/runtime/clusterframework/overlays/HadoopConfOverlay
@1.14.0
+#<init>(Ljava/io/File;)V
+#configure(Lorg/apache/flink/runtime/clusterframework/ContainerSpecification;)V
+#newBuilder()Lorg/apache/flink/runtime/clusterframework/overlays/HadoopConfOverlay$Builder;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/HadoopConfOverlay

+###org/apache/flink/runtime/clusterframework/overlays/FlinkDistributionOverlay$Builder
@1.14.0
+#<init>()V
+#fromEnvironment(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/clusterframework/overlays/FlinkDistributionOverlay$Builder;
+#build()Lorg/apache/flink/runtime/clusterframework/overlays/FlinkDistributionOverlay;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/FlinkDistributionOverlay$Builder

+###org/apache/flink/runtime/clusterframework/overlays/UserLibOverlay
@1.14.0
+#configure(Lorg/apache/flink/runtime/clusterframework/ContainerSpecification;)V
+#newBuilder()Lorg/apache/flink/runtime/clusterframework/overlays/UserLibOverlay$Builder;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/UserLibOverlay

+###org/apache/flink/runtime/clusterframework/overlays/SSLStoreOverlay
@1.14.0
+#<init>(Ljava/io/File;Ljava/io/File;)V
+#configure(Lorg/apache/flink/runtime/clusterframework/ContainerSpecification;)V
+#newBuilder()Lorg/apache/flink/runtime/clusterframework/overlays/SSLStoreOverlay$Builder;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/SSLStoreOverlay

+###org/apache/flink/runtime/clusterframework/overlays/CompositeContainerOverlay
@1.14.0
+#<init>([Lorg/apache/flink/runtime/clusterframework/overlays/ContainerOverlay;)V
+#<init>(Ljava/util/List;)V
+#configure(Lorg/apache/flink/runtime/clusterframework/ContainerSpecification;)V
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/CompositeContainerOverlay

+###org/apache/flink/runtime/clusterframework/overlays/FlinkDistributionOverlay
@1.14.0
+#configure(Lorg/apache/flink/runtime/clusterframework/ContainerSpecification;)V
+#newBuilder()Lorg/apache/flink/runtime/clusterframework/overlays/FlinkDistributionOverlay$Builder;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/FlinkDistributionOverlay

+###org/apache/flink/runtime/clusterframework/overlays/ContainerOverlay
@1.14.0
+#configure(Lorg/apache/flink/runtime/clusterframework/ContainerSpecification;)V
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/ContainerOverlay

+###org/apache/flink/runtime/clusterframework/overlays/SSLStoreOverlay$Builder
@1.14.0
+#<init>()V
+#fromEnvironment(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/clusterframework/overlays/SSLStoreOverlay$Builder;
+#build()Lorg/apache/flink/runtime/clusterframework/overlays/SSLStoreOverlay;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/SSLStoreOverlay$Builder

+###org/apache/flink/runtime/clusterframework/overlays/HadoopUserOverlay
@1.14.0
+#<init>(Lorg/apache/hadoop/security/UserGroupInformation;)V
+#configure(Lorg/apache/flink/runtime/clusterframework/ContainerSpecification;)V
+#newBuilder()Lorg/apache/flink/runtime/clusterframework/overlays/HadoopUserOverlay$Builder;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/HadoopUserOverlay

+###org/apache/flink/runtime/clusterframework/overlays/KeytabOverlay
@1.14.0
+#<init>(Ljava/io/File;)V
+#<init>(Lorg/apache/flink/core/fs/Path;)V
+#configure(Lorg/apache/flink/runtime/clusterframework/ContainerSpecification;)V
+#newBuilder()Lorg/apache/flink/runtime/clusterframework/overlays/KeytabOverlay$Builder;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/KeytabOverlay

+###org/apache/flink/runtime/clusterframework/overlays/HadoopConfOverlay$Builder
@1.14.0
+#<init>()V
+#fromEnvironment(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/clusterframework/overlays/HadoopConfOverlay$Builder;
+#build()Lorg/apache/flink/runtime/clusterframework/overlays/HadoopConfOverlay;
@1.15.0
-###org/apache/flink/runtime/clusterframework/overlays/HadoopConfOverlay$Builder

+###org/apache/flink/runtime/util/NonClosingOutpusStreamDecorator
@1.14.0
+#<init>(Ljava/io/OutputStream;)V
+#close()V
@1.15.0
-###org/apache/flink/runtime/util/NonClosingOutpusStreamDecorator

+###org/apache/flink/runtime/util/AtomicDisposableReferenceCounter
@0.8.0
+#<init>()V
+#incrementReferenceCounter()Z
+#decrementReferenceCounter()Z
@0.9.0-milestone-1
+#<init>(I)V
+#increment()Z
+#decrement()Z
+#get()I
+#isDisposed()Z
+#disposeIfNotUsed()Z
-#incrementReferenceCounter()Z
-#decrementReferenceCounter()Z
@1.15.0
-###org/apache/flink/runtime/util/AtomicDisposableReferenceCounter

+###org/apache/flink/runtime/highavailability/RunningJobsRegistry$JobSchedulingStatus
@1.14.0
+#values()[Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry$JobSchedulingStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry$JobSchedulingStatus;
@1.15.0
-###org/apache/flink/runtime/highavailability/RunningJobsRegistry$JobSchedulingStatus

+###org/apache/flink/runtime/highavailability/RunningJobsRegistry
@1.14.0
+#setJobRunning(Lorg/apache/flink/api/common/JobID;)V
+#setJobFinished(Lorg/apache/flink/api/common/JobID;)V
+#getJobSchedulingStatus(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry$JobSchedulingStatus;
+#clearJob(Lorg/apache/flink/api/common/JobID;)V
@1.15.0
-###org/apache/flink/runtime/highavailability/RunningJobsRegistry

+###org/apache/flink/runtime/highavailability/zookeeper/ZooKeeperRunningJobsRegistry
@1.14.0
+#<init>(Lorg/apache/flink/shaded/curator4/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/configuration/Configuration;)V
+#setJobRunning(Lorg/apache/flink/api/common/JobID;)V
+#setJobFinished(Lorg/apache/flink/api/common/JobID;)V
+#getJobSchedulingStatus(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry$JobSchedulingStatus;
+#clearJob(Lorg/apache/flink/api/common/JobID;)V
@1.15.0
-###org/apache/flink/runtime/highavailability/zookeeper/ZooKeeperRunningJobsRegistry

+###org/apache/flink/runtime/highavailability/nonha/standalone/StandaloneRunningJobsRegistry
@1.14.0
+#<init>()V
+#setJobRunning(Lorg/apache/flink/api/common/JobID;)V
+#setJobFinished(Lorg/apache/flink/api/common/JobID;)V
+#getJobSchedulingStatus(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/highavailability/RunningJobsRegistry$JobSchedulingStatus;
+#clearJob(Lorg/apache/flink/api/common/JobID;)V
@1.15.0
-###org/apache/flink/runtime/highavailability/nonha/standalone/StandaloneRunningJobsRegistry

+###org/apache/flink/runtime/rest/messages/taskmanager/ThreadDumpInfo$ThreadInfo
@1.14.0
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/runtime/rest/messages/taskmanager/ThreadDumpInfo$ThreadInfo;
+#getThreadName()Ljava/lang/String;
+#getStringifiedThreadInfo()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.15.0
-###org/apache/flink/runtime/rest/messages/taskmanager/ThreadDumpInfo$ThreadInfo

+###org/apache/flink/runtime/rest/messages/taskmanager/ThreadDumpInfo
@1.14.0
+#getThreadInfos()Ljava/util/Collection;
+#create(Ljava/util/Collection;)Lorg/apache/flink/runtime/rest/messages/taskmanager/ThreadDumpInfo;
@1.15.0
-###org/apache/flink/runtime/rest/messages/taskmanager/ThreadDumpInfo

+###org/apache/flink/runtime/io/network/partition/PartitionSortedBuffer
@1.14.0
+#<init>(Ljava/lang/Object;Lorg/apache/flink/runtime/io/network/buffer/BufferPool;III[I)V
+#append(Ljava/nio/ByteBuffer;ILorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)Z
+#copyIntoSegment(Lorg/apache/flink/core/memory/MemorySegment;)Lorg/apache/flink/runtime/io/network/partition/BufferWithChannel;
+#numRecords()J
+#numBytes()J
+#hasRemaining()Z
+#finish()V
+#isFinished()Z
+#release()V
+#isReleased()Z
@1.14.4
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/BufferPool;III[I)V
-#<init>(Ljava/lang/Object;Lorg/apache/flink/runtime/io/network/buffer/BufferPool;III[I)V
@1.15.0
-###org/apache/flink/runtime/io/network/partition/PartitionSortedBuffer

+###org/apache/flink/runtime/io/network/partition/SortBuffer
@1.14.0
+#append(Ljava/nio/ByteBuffer;ILorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)Z
+#copyIntoSegment(Lorg/apache/flink/core/memory/MemorySegment;)Lorg/apache/flink/runtime/io/network/partition/BufferWithChannel;
+#numRecords()J
+#numBytes()J
+#hasRemaining()Z
+#finish()V
+#isFinished()Z
+#release()V
+#isReleased()Z
@1.15.0
-###org/apache/flink/runtime/io/network/partition/SortBuffer

+###org/apache/flink/runtime/executiongraph/metrics/RestartTimeGauge
@1.14.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/JobStatusProvider;)V
+#getValue()Ljava/lang/Long;
+#getValue()Ljava/lang/Object;
@1.15.0
-###org/apache/flink/runtime/executiongraph/metrics/RestartTimeGauge

+###org/apache/flink/runtime/checkpoint/CheckpointType$PostCheckpointAction
@1.14.0
+#values()[Lorg/apache/flink/runtime/checkpoint/CheckpointType$PostCheckpointAction;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/CheckpointType$PostCheckpointAction;
@1.15.0
-###org/apache/flink/runtime/checkpoint/CheckpointType$PostCheckpointAction

+###org/apache/flink/runtime/jobmanager/JobGraphStoreFactory
@1.14.0
+#create()Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
@1.15.0
-###org/apache/flink/runtime/jobmanager/JobGraphStoreFactory

+###org/apache/flink/runtime/jobmanager/HaServicesJobGraphStoreFactory
@1.14.0
+#<init>(Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;)V
+#create()Lorg/apache/flink/runtime/jobmanager/JobGraphStore;
@1.15.0
-###org/apache/flink/runtime/jobmanager/HaServicesJobGraphStoreFactory

+###org/apache/flink/runtime/throughput/ThroughputEMA
@1.14.0
+#<init>(J)V
+#calculateThroughput(JJ)J
@1.15.0
-###org/apache/flink/runtime/throughput/ThroughputEMA

+###org/apache/flink/runtime/resourcemanager/ResourceManagerServices
@1.14.0
+#getLeaderID()Ljava/util/UUID;
+#allocateResource(Lorg/apache/flink/runtime/clusterframework/types/ResourceProfile;)V
+#getAsyncExecutor()Ljava/util/concurrent/Executor;
+#getMainThreadExecutor()Ljava/util/concurrent/Executor;
@1.15.0
-###org/apache/flink/runtime/resourcemanager/ResourceManagerServices

+###org/apache/flink/runtime/state/heap/NestedStateMapSnapshot
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/heap/NestedStateMap;)V
+#getIterator(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/state/StateSnapshotTransformer;)Ljava/util/Iterator;
+#writeState(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/runtime/state/StateSnapshotTransformer;)V
@1.15.0
-###org/apache/flink/runtime/state/heap/NestedStateMapSnapshot

+###org/apache/flink/runtime/state/heap/NestedStateMap
@1.14.0
+#<init>()V
+#size()I
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#putAndGetOld(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)V
+#removeAndGetOld(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#transform(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/flink/runtime/state/StateTransformationFunction;)V
+#iterator()Ljava/util/Iterator;
+#getKeys(Ljava/lang/Object;)Ljava/util/stream/Stream;
+#getStateIncrementalVisitor(I)Lorg/apache/flink/runtime/state/internal/InternalKvState$StateIncrementalVisitor;
+#sizeOfNamespace(Ljava/lang/Object;)I
+#stateSnapshot()Lorg/apache/flink/runtime/state/heap/StateMapSnapshot;
+#getNamespaceMap()Ljava/util/Map;
@1.15.0
-###org/apache/flink/runtime/state/heap/NestedStateMap

+###org/apache/flink/runtime/state/heap/NestedMapsStateTable
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/heap/InternalKeyContext;Lorg/apache/flink/runtime/state/RegisteredKeyValueStateBackendMetaInfo;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#stateSnapshot()Lorg/apache/flink/runtime/state/heap/NestedMapsStateTable$NestedMapsStateTableSnapshot;
+#stateSnapshot()Lorg/apache/flink/runtime/state/IterableStateSnapshot;
+#stateSnapshot()Lorg/apache/flink/runtime/state/StateSnapshot;
@1.15.0
-###org/apache/flink/runtime/state/heap/NestedMapsStateTable

+###org/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream
@1.14.0
+#<init>()V
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#close()V
@1.15.0
-###org/apache/flink/runtime/state/CheckpointStreamFactory$CheckpointStateOutputStream

+###org/apache/flink/runtime/state/SharedStateRegistry$Result
@1.14.0
+#<init>(Lorg/apache/flink/runtime/state/StreamStateHandle;I)V
+#getReference()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#getReferenceCount()I
+#toString()Ljava/lang/String;
@1.15.0
-###org/apache/flink/runtime/state/SharedStateRegistry$Result

+###org/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore
@1.14.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/highavailability/HighAvailabilityServices;Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/runtime/blob/BlobServer;Lorg/apache/flink/runtime/heartbeat/HeartbeatServices;Lorg/apache/flink/runtime/dispatcher/JobManagerMetricGroupFactory;Lorg/apache/flink/runtime/dispatcher/ExecutionGraphInfoStore;Lorg/apache/flink/runtime/rpc/FatalErrorHandler;Lorg/apache/flink/runtime/dispatcher/HistoryServerArchivist;Ljava/lang/String;Ljava/util/concurrent/Executor;Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;)V
+#getJobGraphWriter()Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;
+#from(Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServices;Lorg/apache/flink/runtime/jobmanager/JobGraphWriter;)Lorg/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore;
@1.15.0
-###org/apache/flink/runtime/dispatcher/PartialDispatcherServicesWithJobGraphStore

+###org/apache/flink/runtime/FlinkActor
@0.10.0
+#log()Lgrizzled/slf4j/Logger;
+#receive()Lscala/PartialFunction;
+#handleMessage()Lscala/PartialFunction;
+#decorateMessage(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/FlinkActor

+###org/apache/flink/runtime/jobgraph/OutputFormatVertex
@0.7.0-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
+#initializeOnMaster(Ljava/lang/ClassLoader;)V
@0.8.0
+#setFormatDescription(Ljava/lang/String;)V
+#getFormatDescription()Ljava/lang/String;
+#finalizeOnMaster(Ljava/lang/ClassLoader;)V
@1.14.0
-###org/apache/flink/runtime/jobgraph/OutputFormatVertex

+###org/apache/flink/runtime/jobgraph/ScheduleMode
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/runtime/jobgraph/ScheduleMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/ScheduleMode;
@1.14.0
-###org/apache/flink/runtime/jobgraph/ScheduleMode

+###org/apache/flink/runtime/jobgraph/JobStatus
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/jobgraph/JobStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/JobStatus;
@0.7.0-hadoop2-incubating
+#isTerminalState()Z
@1.14.0
-###org/apache/flink/runtime/jobgraph/JobStatus

+###org/apache/flink/runtime/jobgraph/InputFormatVertex
@0.7.0-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
+#initializeOnMaster(Ljava/lang/ClassLoader;)V
@0.8.0
+#setFormatDescription(Ljava/lang/String;)V
+#getFormatDescription()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/jobgraph/InputFormatVertex

+###org/apache/flink/runtime/jobgraph/tasks/JobSnapshottingSettings
@0.9.0
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;J)V
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;JJ)V
+#getVerticesToTrigger()Ljava/util/List;
+#getVerticesToAcknowledge()Ljava/util/List;
+#getVerticesToConfirm()Ljava/util/List;
+#getCheckpointInterval()J
+#getCheckpointTimeout()J
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/jobgraph/tasks/JobSnapshottingSettings

+###org/apache/flink/runtime/jobgraph/tasks/StatefulTask
@0.10.0
+#setInitialState(Lorg/apache/flink/runtime/state/StateHandle;)V
+#triggerCheckpoint(JJ)V
+#notifyCheckpointComplete(J)V
@1.14.0
-###org/apache/flink/runtime/jobgraph/tasks/StatefulTask

+###org/apache/flink/runtime/jobgraph/tasks/InputSplitIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;)V
+#hasNext()Z
+#next()Lorg/apache/flink/core/io/InputSplit;
+#remove()V
+#next()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/jobgraph/tasks/InputSplitIterator

+###org/apache/flink/runtime/util/DependencyVisitor$MethodVisitorImpl
@0.9.0
+#<init>(Lorg/apache/flink/runtime/util/DependencyVisitor;I)V
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/util/DependencyVisitor$MethodVisitorImpl

+###org/apache/flink/runtime/util/DependencyVisitor$AnnotationVisitorImpl
@0.9.0
+#<init>(Lorg/apache/flink/runtime/util/DependencyVisitor;I)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
@1.14.0
-###org/apache/flink/runtime/util/DependencyVisitor$AnnotationVisitorImpl

+###org/apache/flink/runtime/util/SerializedThrowable
@0.10.0
+#<init>(Ljava/lang/Throwable;)V
+#deserializeError(Ljava/lang/ClassLoader;)Ljava/lang/Throwable;
+#getStrigifiedStackTrace()Ljava/lang/String;
+#getCause()Ljava/lang/Throwable;
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V
+#toString()Ljava/lang/String;
+#getStackTrace()[Ljava/lang/StackTraceElement;
+#get(Ljava/lang/Throwable;Ljava/lang/ClassLoader;)Ljava/lang/Throwable;
@1.14.0
-###org/apache/flink/runtime/util/SerializedThrowable

+###org/apache/flink/runtime/util/SerializableHashMap
@0.6-hadoop2-incubating
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
@1.14.0
-###org/apache/flink/runtime/util/SerializableHashMap

+###org/apache/flink/runtime/util/LRUCache
@0.9.0-milestone-1
+#<init>()V
+#create()Lorg/apache/flink/runtime/util/LRUCache;
+#add(Ljava/lang/Object;)V
+#getLRU()Ljava/lang/Object;
+#removeLRU()Ljava/lang/Object;
+#isEmpty()Z
+#size()I
@1.14.0
-###org/apache/flink/runtime/util/LRUCache

+###org/apache/flink/runtime/util/IOUtils
@0.6-hadoop2-incubating
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;IZ)V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;)V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
+#readFully(Ljava/io/InputStream;[BII)V
+#skipFully(Ljava/io/InputStream;J)V
+#cleanup(Lorg/apache/commons/logging/Log;[Ljava/io/Closeable;)V
+#closeStream(Ljava/io/Closeable;)V
+#closeSocket(Ljava/net/Socket;)V
@0.7.0-hadoop2-incubating
+#cleanup(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
-#cleanup(Lorg/apache/commons/logging/Log;[Ljava/io/Closeable;)V
@1.14.0
-###org/apache/flink/runtime/util/IOUtils

+###org/apache/flink/runtime/util/LeaderRetrievalUtils$LeaderGatewayListener
@0.10.0
+#<init>(Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)V
+#notifyLeaderAddress(Ljava/lang/String;Ljava/util/UUID;)V
+#handleError(Ljava/lang/Exception;)V
+#getActorGatewayFuture()Lscala/concurrent/Future;
@1.14.0
-###org/apache/flink/runtime/util/LeaderRetrievalUtils$LeaderGatewayListener

+###org/apache/flink/runtime/util/StandaloneUtils
@0.10.0
+#createLeaderRetrievalService(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/leaderretrieval/StandaloneLeaderRetrievalService;
+#createLeaderRetrievalService(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)Lorg/apache/flink/runtime/leaderretrieval/StandaloneLeaderRetrievalService;
@1.14.0
-###org/apache/flink/runtime/util/StandaloneUtils

+###org/apache/flink/runtime/util/DependencyVisitor
@0.9.0
+#getPackages()Ljava/util/Set;
+#<init>(I)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#addNameSpace(Ljava/util/Set;)V
@1.14.0
-###org/apache/flink/runtime/util/DependencyVisitor

+###org/apache/flink/runtime/util/FileUtils
@0.6-hadoop2-incubating
+#getRandomFilename(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/util/FileUtils

+###org/apache/flink/runtime/util/LRUCacheMap
@0.9.0-milestone-1
+#<init>()V
+#create()Lorg/apache/flink/runtime/util/LRUCacheMap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getLRU()Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#removeLRU()Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#isEmpty()Z
+#size()I
@1.14.0
-###org/apache/flink/runtime/util/LRUCacheMap

+###org/apache/flink/runtime/util/SerializableHashSet
@0.6-hadoop2-incubating
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
@1.14.0
-###org/apache/flink/runtime/util/SerializableHashSet

+###org/apache/flink/runtime/util/ExecutorThreadFactory
@0.7.0-hadoop2-incubating
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
@1.14.0
-###org/apache/flink/runtime/util/ExecutorThreadFactory

+###org/apache/flink/runtime/util/SerializableArrayList
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(I)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.7.0-hadoop2-incubating
-#hashCode()I
@1.14.0
-###org/apache/flink/runtime/util/SerializableArrayList

+###org/apache/flink/runtime/util/DataOutputSerializer
@0.9.0-milestone-1
+#<init>(I)V
+#wrapAsByteBuffer()Ljava/nio/ByteBuffer;
+#getByteArray()[B
+#clear()V
+#length()I
+#pruneBuffer()V
+#toString()Ljava/lang/String;
+#write(I)V
+#write([B)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeBytes(Ljava/lang/String;)V
+#writeChar(I)V
+#writeChars(Ljava/lang/String;)V
+#writeDouble(D)V
+#writeFloat(F)V
+#writeInt(I)V
+#writeLong(J)V
+#writeShort(I)V
+#writeUTF(Ljava/lang/String;)V
+#skipBytesToWrite(I)V
+#write(Lorg/apache/flink/core/memory/DataInputView;I)V
@0.10.0
+#getCopyOfBuffer()[B
@1.14.0
-###org/apache/flink/runtime/util/DataOutputSerializer

+###org/apache/flink/runtime/util/UnionIterator
@0.10.0
+#<init>()V
+#clear()V
+#addList(Ljava/util/List;)V
+#iterator()Ljava/util/Iterator;
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
@1.14.0
-###org/apache/flink/runtime/util/UnionIterator

+###org/apache/flink/runtime/util/MathUtils
@0.6-hadoop2-incubating
+#log2floor(I)I
+#log2strict(I)I
+#roundDownToPowerOf2(I)I
+#checkedDownCast(J)I
@0.9.0-milestone-1
+#isPowerOf2(J)Z
@1.14.0
-###org/apache/flink/runtime/util/MathUtils

+###org/apache/flink/runtime/util/DataInputDeserializer
@0.9.0-milestone-1
+#<init>()V
+#<init>([BII)V
+#<init>(Ljava/nio/ByteBuffer;)V
+#setBuffer(Ljava/nio/ByteBuffer;)V
+#setBuffer([BII)V
+#releaseArrays()V
+#readBoolean()Z
+#readByte()B
+#readChar()C
+#readDouble()D
+#readFloat()F
+#readFully([B)V
+#readFully([BII)V
+#readInt()I
+#readLine()Ljava/lang/String;
+#readLong()J
+#readShort()S
+#readUTF()Ljava/lang/String;
+#readUnsignedByte()I
+#readUnsignedShort()I
+#skipBytes(I)I
+#skipBytesToRead(I)V
+#read([BII)I
+#read([B)I
@1.14.0
-###org/apache/flink/runtime/util/DataInputDeserializer

+###org/apache/flink/runtime/util/SerializableObject
@0.9.0
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/util/SerializableObject

+###org/apache/flink/runtime/util/JarFileCreator
@0.6-hadoop2-incubating
+#<init>(Ljava/io/File;)V
+#addClass(Ljava/lang/Class;)V
+#createJarFile()V
@0.9.0
+#addClass(Ljava/lang/Class;)Lorg/apache/flink/runtime/util/JarFileCreator;
+#addPackage(Ljava/lang/String;)Lorg/apache/flink/runtime/util/JarFileCreator;
+#addPackages([Ljava/lang/String;)Lorg/apache/flink/runtime/util/JarFileCreator;
-#addClass(Ljava/lang/Class;)V
@1.14.0
-###org/apache/flink/runtime/util/JarFileCreator

+###org/apache/flink/runtime/util/DependencyVisitor$SignatureVisitorImpl
@0.9.0
+#<init>(Lorg/apache/flink/runtime/util/DependencyVisitor;I)V
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/util/DependencyVisitor$SignatureVisitorImpl

+###org/apache/flink/runtime/util/DependencyVisitor$FieldVisitorImpl
@0.9.0
+#<init>(Lorg/apache/flink/runtime/util/DependencyVisitor;I)V
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
@1.14.0
-###org/apache/flink/runtime/util/DependencyVisitor$FieldVisitorImpl

+###org/apache/flink/runtime/LeaderSessionMessageFilter$$anonfun$receive$1
@0.10.0
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/LeaderSessionMessageFilter;)V
@1.14.0
-###org/apache/flink/runtime/LeaderSessionMessageFilter$$anonfun$receive$1

+###org/apache/flink/runtime/operators/util/BloomFilter$BitSet
@0.10.0
+#<init>(Lorg/apache/flink/runtime/operators/util/BloomFilter;I)V
+#setMemorySegment(Lorg/apache/flink/core/memory/MemorySegment;I)V
+#set(I)V
+#get(I)Z
+#bitSize()I
+#getMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
+#clear()V
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/operators/util/BloomFilter$BitSet

+###org/apache/flink/runtime/operators/util/TaskConfig$DelegatingConfiguration
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)V
+#getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#setString(Ljava/lang/String;Ljava/lang/String;)V
+#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
+#setClass(Ljava/lang/String;Ljava/lang/Class;)V
+#getInteger(Ljava/lang/String;I)I
+#setInteger(Ljava/lang/String;I)V
+#getLong(Ljava/lang/String;J)J
+#setLong(Ljava/lang/String;J)V
+#getBoolean(Ljava/lang/String;Z)Z
+#setBoolean(Ljava/lang/String;Z)V
+#getFloat(Ljava/lang/String;F)F
+#setFloat(Ljava/lang/String;F)V
+#getDouble(Ljava/lang/String;D)D
+#setDouble(Ljava/lang/String;D)V
+#getBytes(Ljava/lang/String;[B)[B
+#setBytes(Ljava/lang/String;[B)V
+#addAll(Lorg/apache/flink/configuration/Configuration;)V
+#addAll(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#keySet()Ljava/util/Set;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.7.0-hadoop2-incubating
+#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
-#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
-#getClassLoader()Ljava/lang/ClassLoader;
-#getClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
-#setClassLoader(Ljava/lang/ClassLoader;)V
@1.14.0
-###org/apache/flink/runtime/operators/util/TaskConfig$DelegatingConfiguration

+###org/apache/flink/runtime/operators/chaining/ChainedCollectorMapDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#openTask()V
+#closeTask()V
+#cancelTask()V
+#getStub()Lorg/apache/flink/api/common/functions/RichFunction;
+#getTaskName()Ljava/lang/String;
+#collect(Ljava/lang/Object;)V
+#close()V
+#getStub()Lorg/apache/flink/api/common/functions/Function;
@1.14.0
-###org/apache/flink/runtime/operators/chaining/ChainedCollectorMapDriver

+###org/apache/flink/runtime/operators/chaining/GroupCombineChainedDriver
@0.9.0-milestone-1
+#<init>()V
+#setup(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#openTask()V
+#closeTask()V
+#cancelTask()V
+#getStub()Lorg/apache/flink/api/common/functions/Function;
+#getTaskName()Ljava/lang/String;
+#collect(Ljava/lang/Object;)V
+#close()V
@1.14.0
-###org/apache/flink/runtime/operators/chaining/GroupCombineChainedDriver

+###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$ReadingThread
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/operators/sort/ExceptionHandler;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;Ljava/lang/Object;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;J)V
+#go()V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/operators/sort/ExceptionHandler;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;Lorg/apache/flink/runtime/operators/sort/LargeRecordHandler;Ljava/lang/Object;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;J)V
-#<init>(Lorg/apache/flink/runtime/operators/sort/ExceptionHandler;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;Ljava/lang/Object;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;J)V
@1.14.0
-###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$ReadingThread

+###org/apache/flink/runtime/operators/sort/CombiningUnilateralSortMerger$CombiningSpillingThread
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/operators/sort/CombiningUnilateralSortMerger;Lorg/apache/flink/runtime/operators/sort/ExceptionHandler;Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;Ljava/util/List;I)V
+#go()V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/operators/sort/CombiningUnilateralSortMerger;Lorg/apache/flink/runtime/operators/sort/ExceptionHandler;Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;Ljava/util/List;I)V
-#<init>(Lorg/apache/flink/runtime/operators/sort/CombiningUnilateralSortMerger;Lorg/apache/flink/runtime/operators/sort/ExceptionHandler;Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;Ljava/util/List;I)V
@1.14.0
-###org/apache/flink/runtime/operators/sort/CombiningUnilateralSortMerger$CombiningSpillingThread

+###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(I)V
@1.14.0
-###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues

+###org/apache/flink/runtime/operators/sort/CombiningUnilateralSortMerger
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/functions/FlatCombineFunction;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIF)V
+#<init>(Lorg/apache/flink/api/common/functions/FlatCombineFunction;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIIF)V
+#setUdfConfiguration(Lorg/apache/flink/configuration/Configuration;)V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/functions/GroupCombineFunction;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIF)V
+#<init>(Lorg/apache/flink/api/common/functions/GroupCombineFunction;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIIF)V
-#<init>(Lorg/apache/flink/api/common/functions/FlatCombineFunction;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIF)V
-#<init>(Lorg/apache/flink/api/common/functions/FlatCombineFunction;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIIF)V
@0.10.0
+#<init>(Lorg/apache/flink/api/common/functions/GroupCombineFunction;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIFZ)V
+#<init>(Lorg/apache/flink/api/common/functions/GroupCombineFunction;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIIFZ)V
-#<init>(Lorg/apache/flink/api/common/functions/GroupCombineFunction;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIF)V
-#<init>(Lorg/apache/flink/api/common/functions/GroupCombineFunction;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIIF)V
@1.14.0
-###org/apache/flink/runtime/operators/sort/CombiningUnilateralSortMerger

+###org/apache/flink/runtime/operators/sort/UnilateralSortMerger
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIF)V
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIIF)V
+#close()V
+#getIterator()Lorg/apache/flink/util/MutableObjectIterator;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;IIFZ)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIFZ)V
+#<init>(Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIIFZ)V
+#<init>(Lorg/apache/flink/runtime/memory/MemoryManager;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;IIFZZ)V
-#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIF)V
-#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;DIIF)V
-#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/List;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;IIFZ)V
@1.14.0
-###org/apache/flink/runtime/operators/sort/UnilateralSortMerger

+###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$SpillingThread
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger;Lorg/apache/flink/runtime/operators/sort/ExceptionHandler;Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;Ljava/util/List;I)V
+#go()V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger;Lorg/apache/flink/runtime/operators/sort/ExceptionHandler;Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;Ljava/util/List;I)V
-#<init>(Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger;Lorg/apache/flink/runtime/operators/sort/ExceptionHandler;Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Ljava/util/List;Ljava/util/List;I)V
@1.14.0
-###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$SpillingThread

+###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularElement
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(ILorg/apache/flink/runtime/operators/sort/InMemorySorter;)V
@0.10.0
+#<init>(ILorg/apache/flink/runtime/operators/sort/InMemorySorter;Ljava/util/List;)V
-#<init>(ILorg/apache/flink/runtime/operators/sort/InMemorySorter;)V
@1.14.0
-###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularElement

+###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$ChannelWithBlockCount
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;I)V
+#getChannel()Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;
+#getBlockCount()I
@0.8.0
+#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;I)V
+#getChannel()Lorg/apache/flink/runtime/io/disk/iomanager/FileIOChannel$ID;
-#<init>(Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;I)V
-#getChannel()Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;
@1.14.0
-###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$ChannelWithBlockCount

+###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$ThreadBase
@0.6-hadoop2-incubating
+#run()V
+#isRunning()Z
+#shutdown()V
+#uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$ThreadBase

+###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$SortingThread
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/operators/sort/ExceptionHandler;Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#go()V
@1.14.0
-###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$SortingThread

+###org/apache/flink/runtime/operators/shipping/RecordOutputCollector
@0.6-hadoop2-incubating
+#<init>(Ljava/util/List;)V
+#addWriter(Lorg/apache/flink/runtime/io/network/api/RecordWriter;)V
+#collect(Lorg/apache/flink/types/Record;)V
+#close()V
+#getWriters()Ljava/util/List;
+#collect(Ljava/lang/Object;)V
@0.9.0-milestone-1
+#addWriter(Lorg/apache/flink/runtime/io/network/api/writer/RecordWriter;)V
-#addWriter(Lorg/apache/flink/runtime/io/network/api/RecordWriter;)V
@1.14.0
-###org/apache/flink/runtime/operators/shipping/RecordOutputCollector

+###org/apache/flink/runtime/operators/shipping/RecordOutputEmitter
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;)V
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
+#selectChannels(Lorg/apache/flink/types/Record;I)[I
+#selectChannels(Lorg/apache/flink/core/io/IOReadableWritable;I)[I
@0.8.0
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/functions/Partitioner;)V
+#<init>(Lorg/apache/flink/runtime/operators/shipping/ShipStrategyType;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/functions/Partitioner;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
@1.14.0
-###org/apache/flink/runtime/operators/shipping/RecordOutputEmitter

+###org/apache/flink/runtime/operators/CollectorMapDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
+#setup(Lorg/apache/flink/runtime/operators/TaskContext;)V
-#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
@1.14.0
-###org/apache/flink/runtime/operators/CollectorMapDriver

+###org/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionService
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;)V
+#getLeaderSessionID()Ljava/util/UUID;
+#start(Lorg/apache/flink/runtime/leaderelection/LeaderContender;)V
+#stop()V
+#confirmLeaderSessionID(Ljava/util/UUID;)V
+#hasLeadership()Z
+#isLeader()V
+#notLeader()V
+#nodeChanged()V
@1.14.0
-###org/apache/flink/runtime/leaderelection/ZooKeeperLeaderElectionService

+###org/apache/flink/runtime/LogMessages$$anon$1$$anonfun$apply$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/LogMessages$$anon$1;Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/runtime/LogMessages$$anon$1$$anonfun$apply$1

+###org/apache/flink/runtime/LeaderSessionMessageFilter
@0.10.0
+#org$apache$flink$runtime$LeaderSessionMessageFilter$$super$receive()Lscala/PartialFunction;
+#org$apache$flink$runtime$LeaderSessionMessageFilter$$super$decorateMessage(Ljava/lang/Object;)Ljava/lang/Object;
+#leaderSessionID()Lscala/Option;
+#receive()Lscala/PartialFunction;
+#decorateMessage(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/LeaderSessionMessageFilter

+###org/apache/flink/runtime/LogMessages
@0.10.0
+#org$apache$flink$runtime$LogMessages$$super$receive()Lscala/PartialFunction;
+#receive()Lscala/PartialFunction;
@1.14.0
-###org/apache/flink/runtime/LogMessages

+###org/apache/flink/runtime/FlinkActor$class
@0.10.0
+#receive(Lorg/apache/flink/runtime/FlinkActor;)Lscala/PartialFunction;
+#decorateMessage(Lorg/apache/flink/runtime/FlinkActor;Ljava/lang/Object;)Ljava/lang/Object;
+#$init$(Lorg/apache/flink/runtime/FlinkActor;)V
@1.14.0
-###org/apache/flink/runtime/FlinkActor$class

+###org/apache/flink/runtime/security/SecurityUtils$FlinkSecuredRunner
@0.9.0-milestone-1
+#run()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/security/SecurityUtils$FlinkSecuredRunner

+###org/apache/flink/runtime/LogMessages$$anon$1$$anonfun$apply$2
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/LogMessages$$anon$1;Ljava/lang/Object;J)V
@1.14.0
-###org/apache/flink/runtime/LogMessages$$anon$1$$anonfun$apply$2

+###org/apache/flink/runtime/fs/maprfs/MapRFileSystem
@0.7.0-hadoop2-incubating
+#<init>()V
+#getWorkingDirectory()Lorg/apache/flink/core/fs/Path;
+#getUri()Ljava/net/URI;
+#initialize(Ljava/net/URI;)V
+#getFileStatus(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FileStatus;
+#getFileBlockLocations(Lorg/apache/flink/core/fs/FileStatus;JJ)[Lorg/apache/flink/core/fs/BlockLocation;
+#open(Lorg/apache/flink/core/fs/Path;I)Lorg/apache/flink/core/fs/FSDataInputStream;
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FSDataInputStream;
+#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#delete(Lorg/apache/flink/core/fs/Path;Z)Z
+#listStatus(Lorg/apache/flink/core/fs/Path;)[Lorg/apache/flink/core/fs/FileStatus;
+#mkdirs(Lorg/apache/flink/core/fs/Path;)Z
+#rename(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Z
+#getDefaultBlockSize()J
+#isDistributedFS()Z
@0.9.0-milestone-1
+#getHomeDirectory()Lorg/apache/flink/core/fs/Path;
@1.14.0
-###org/apache/flink/runtime/fs/maprfs/MapRFileSystem

+###org/apache/flink/runtime/fs/hdfs/HadoopBlockLocation
@0.8.0
+#<init>(Lorg/apache/hadoop/fs/BlockLocation;)V
+#getHosts()[Ljava/lang/String;
+#getLength()J
+#getOffset()J
+#compareTo(Lorg/apache/flink/core/fs/BlockLocation;)I
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/apache/flink/runtime/fs/hdfs/HadoopBlockLocation

+###org/apache/flink/runtime/fs/hdfs/HadoopFileStatus
@0.8.0
+#<init>(Lorg/apache/hadoop/fs/FileStatus;)V
+#getLen()J
+#getBlockSize()J
+#getAccessTime()J
+#getModificationTime()J
+#getReplication()S
+#getInternalFileStatus()Lorg/apache/hadoop/fs/FileStatus;
+#getPath()Lorg/apache/flink/core/fs/Path;
+#isDir()Z
@1.14.0
-###org/apache/flink/runtime/fs/hdfs/HadoopFileStatus

+###org/apache/flink/runtime/fs/hdfs/HadoopDataInputStream
@0.8.0
+#<init>(Lorg/apache/hadoop/fs/FSDataInputStream;)V
+#seek(J)V
+#read()I
+#close()V
+#read([BII)I
+#available()I
+#skip(J)J
@0.9.0-milestone-1
+#getPos()J
@0.10.0
+#getHadoopInputStream()Lorg/apache/hadoop/fs/FSDataInputStream;
@1.14.0
-###org/apache/flink/runtime/fs/hdfs/HadoopDataInputStream

+###org/apache/flink/runtime/fs/hdfs/HadoopDataOutputStream
@0.8.0
+#<init>(Lorg/apache/hadoop/fs/FSDataOutputStream;)V
+#write(I)V
+#write([BII)V
+#close()V
@0.10.0
+#flush()V
+#sync()V
+#getHadoopOutputStream()Lorg/apache/hadoop/fs/FSDataOutputStream;
@1.14.0
-###org/apache/flink/runtime/fs/hdfs/HadoopDataOutputStream

+###org/apache/flink/runtime/fs/hdfs/HadoopFileSystem
@0.8.0
+#<init>(Ljava/lang/Class;)V
+#getHadoopConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getWorkingDirectory()Lorg/apache/flink/core/fs/Path;
+#getUri()Ljava/net/URI;
+#initialize(Ljava/net/URI;)V
+#getFileStatus(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FileStatus;
+#getFileBlockLocations(Lorg/apache/flink/core/fs/FileStatus;JJ)[Lorg/apache/flink/core/fs/BlockLocation;
+#open(Lorg/apache/flink/core/fs/Path;I)Lorg/apache/flink/core/fs/FSDataInputStream;
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FSDataInputStream;
+#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#delete(Lorg/apache/flink/core/fs/Path;Z)Z
+#listStatus(Lorg/apache/flink/core/fs/Path;)[Lorg/apache/flink/core/fs/FileStatus;
+#mkdirs(Lorg/apache/flink/core/fs/Path;)Z
+#rename(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Z
+#getDefaultBlockSize()J
+#isDistributedFS()Z
+#getHadoopWrapperClassNameForFileSystem(Ljava/lang/String;)Ljava/lang/Class;
@0.9.0-milestone-1
+#getHomeDirectory()Lorg/apache/flink/core/fs/Path;
@0.10.0
+#getHadoopFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#open(Lorg/apache/flink/core/fs/Path;I)Lorg/apache/flink/runtime/fs/hdfs/HadoopDataInputStream;
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/runtime/fs/hdfs/HadoopDataInputStream;
+#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/runtime/fs/hdfs/HadoopDataOutputStream;
+#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/runtime/fs/hdfs/HadoopDataOutputStream;
@1.14.0
-###org/apache/flink/runtime/fs/hdfs/HadoopFileSystem

+###org/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalService
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#start(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalListener;)V
+#stop()V
+#nodeChanged()V
@1.14.0
-###org/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalService

+###org/apache/flink/runtime/LeaderSessionMessageFilter$$anonfun$org$apache$flink$runtime$LeaderSessionMessageFilter$$handleDiscardedMessage$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/LeaderSessionMessageFilter;Lscala/Option;Lorg/apache/flink/runtime/messages/JobManagerMessages$LeaderSessionMessage;)V
@1.14.0
-###org/apache/flink/runtime/LeaderSessionMessageFilter$$anonfun$org$apache$flink$runtime$LeaderSessionMessageFilter$$handleDiscardedMessage$1

+###org/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;
+#isSynchronous()Z
@1.14.0
-###org/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode

+###org/apache/flink/runtime/io/network/api/reader/BufferReader
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;)V
+#getNextBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
@0.10.0
+#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
@1.14.0
-###org/apache/flink/runtime/io/network/api/reader/BufferReader

+###org/apache/flink/runtime/io/network/api/serialization/AdaptiveSpanningRecordDeserializer
@0.9.0-milestone-1
+#<init>()V
+#setNextBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#getCurrentBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#setNextMemorySegment(Lorg/apache/flink/core/memory/MemorySegment;I)V
+#getNextRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/api/serialization/RecordDeserializer$DeserializationResult;
+#clear()V
+#hasUnfinishedData()Z
@0.10.0
+#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
@1.14.0
-###org/apache/flink/runtime/io/network/api/serialization/AdaptiveSpanningRecordDeserializer

+###org/apache/flink/runtime/io/network/api/serialization/SpanningRecordSerializer
@0.9.0-milestone-1
+#<init>()V
+#addRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/api/serialization/RecordSerializer$SerializationResult;
+#setNextBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Lorg/apache/flink/runtime/io/network/api/serialization/RecordSerializer$SerializationResult;
+#getCurrentBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#clear()V
+#hasData()Z
@0.9.0
+#clearCurrentBuffer()V
@0.10.0
+#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
@1.14.0
-###org/apache/flink/runtime/io/network/api/serialization/SpanningRecordSerializer

+###org/apache/flink/runtime/io/network/api/serialization/RecordSerializer$SerializationResult
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/runtime/io/network/api/serialization/RecordSerializer$SerializationResult;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/api/serialization/RecordSerializer$SerializationResult;
+#isFullRecord()Z
+#isFullBuffer()Z
@1.14.0
-###org/apache/flink/runtime/io/network/api/serialization/RecordSerializer$SerializationResult

+###org/apache/flink/runtime/io/network/api/serialization/RecordSerializer
@0.9.0-milestone-1
+#addRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/api/serialization/RecordSerializer$SerializationResult;
+#setNextBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)Lorg/apache/flink/runtime/io/network/api/serialization/RecordSerializer$SerializationResult;
+#getCurrentBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#clear()V
+#hasData()Z
@0.9.0
+#clearCurrentBuffer()V
@0.10.0
+#setReporter(Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter;)V
@1.14.0
-###org/apache/flink/runtime/io/network/api/serialization/RecordSerializer

+###org/apache/flink/runtime/io/network/buffer/BufferPoolOwner
@0.9.0-milestone-1
+#releaseMemory(I)V
@1.14.0
-###org/apache/flink/runtime/io/network/buffer/BufferPoolOwner

+###org/apache/flink/runtime/io/network/partition/consumer/UnknownInputChannel
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/io/network/ConnectionManager;)V
+#requestSubpartition(I)V
+#getNextBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
+#isReleased()Z
+#notifySubpartitionConsumed()V
+#releaseAllResources()V
+#toString()Ljava/lang/String;
+#toRemoteInputChannel(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;
+#toLocalInputChannel()Lorg/apache/flink/runtime/io/network/partition/consumer/LocalInputChannel;
@0.9.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/io/network/ConnectionManager;Lscala/Tuple2;)V
-#<init>(Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;Lorg/apache/flink/runtime/io/network/ConnectionManager;)V
@0.10.0
+#sendTaskEvent(Lorg/apache/flink/runtime/event/TaskEvent;)V
-#sendTaskEvent(Lorg/apache/flink/runtime/event/task/TaskEvent;)V
@1.14.0
-###org/apache/flink/runtime/io/network/partition/consumer/UnknownInputChannel

+###org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel$BufferReorderingException
@0.9.0-milestone-1
+#<init>(II)V
+#getMessage()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel$BufferReorderingException

+###org/apache/flink/runtime/io/network/NetworkEnvironment
@0.9.0-milestone-1
+#<init>(Lscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;)V
+#getPartitionManager()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;
+#getTaskEventDispatcher()Lorg/apache/flink/runtime/io/network/TaskEventDispatcher;
+#getConnectionManager()Lorg/apache/flink/runtime/io/network/ConnectionManager;
+#getNetworkBufferPool()Lorg/apache/flink/runtime/io/network/buffer/NetworkBufferPool;
+#getDefaultIOMode()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;
+#getPartitionConsumableNotifier()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionConsumableNotifier;
+#isAssociated()Z
+#associateWithTaskManagerAndJobManager(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)V
+#disassociate()V
+#registerTask(Lorg/apache/flink/runtime/taskmanager/Task;)V
+#unregisterTask(Lorg/apache/flink/runtime/taskmanager/Task;)V
+#hasReleasedAllResources()Z
+#shutdown()V
+#isShutdown()Z
@0.9.0
+#getPartitionStateChecker()Lorg/apache/flink/runtime/io/network/netty/PartitionStateChecker;
+#getPartitionRequestInitialAndMaxBackoff()Lscala/Tuple2;
-#hasReleasedAllResources()Z
@0.10.0
+#<init>(Lscala/concurrent/ExecutionContext;Lscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;)V
+#associateWithTaskManagerAndJobManager(Lorg/apache/flink/runtime/instance/ActorGateway;Lorg/apache/flink/runtime/instance/ActorGateway;)V
-#<init>(Lscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;)V
-#associateWithTaskManagerAndJobManager(Lakka/actor/ActorRef;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/io/network/NetworkEnvironment

+###org/apache/flink/runtime/io/network/netty/PartitionRequestClient
@0.9.0-milestone-1
+#requestSubpartition(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#sendTaskEvent(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/event/task/TaskEvent;Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
+#close(Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
@0.9.0
+#requestSubpartition(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;I)Lio/netty/channel/ChannelFuture;
-#requestSubpartition(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;ILorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
@0.10.0
+#sendTaskEvent(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/event/TaskEvent;Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
-#sendTaskEvent(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/event/task/TaskEvent;Lorg/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel;)V
@1.14.0
-###org/apache/flink/runtime/io/network/netty/PartitionRequestClient

+###org/apache/flink/runtime/io/network/netty/PartitionRequestClientHandler$StagedMessagesHandlerTask
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/netty/PartitionRequestClientHandler;)V
+#run()V
@1.14.0
-###org/apache/flink/runtime/io/network/netty/PartitionRequestClientHandler$StagedMessagesHandlerTask

+###org/apache/flink/runtime/io/network/netty/PartitionStateChecker
@0.9.0
+#triggerPartitionStateCheck(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
@1.14.0
-###org/apache/flink/runtime/io/network/netty/PartitionStateChecker

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$5$$anonfun$apply$2
@0.10.0
+#apply(Lakka/actor/ActorRef;)Lscala/concurrent/Future;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$5;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$5$$anonfun$apply$2

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$4
@0.10.0
+#apply()Lscala/collection/Seq;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$4

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster
@0.9.0-milestone-1
+#userConfiguration()Lorg/apache/flink/configuration/Configuration;
+#singleActorSystem()Z
+#LOG()Lorg/slf4j/Logger;
+#HOSTNAME()Ljava/lang/String;
+#timeout()Lscala/concurrent/duration/FiniteDuration;
+#configuration()Lorg/apache/flink/configuration/Configuration;
+#jobManagerActorSystem()Lakka/actor/ActorSystem;
+#jobManagerActorSystem_$eq(Lakka/actor/ActorSystem;)V
+#jobManagerActor()Lakka/actor/ActorRef;
+#jobManagerActor_$eq(Lakka/actor/ActorRef;)V
+#numTaskManagers()I
+#taskManagerActorSystems()Lscala/collection/immutable/IndexedSeq;
+#taskManagerActorSystems_$eq(Lscala/collection/immutable/IndexedSeq;)V
+#taskManagerActors()Lscala/collection/immutable/IndexedSeq;
+#taskManagerActors_$eq(Lscala/collection/immutable/IndexedSeq;)V
+#generateConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/Configuration;
+#startJobManager(Lakka/actor/ActorSystem;)Lakka/actor/ActorRef;
+#startTaskManager(ILakka/actor/ActorSystem;)Lakka/actor/ActorRef;
+#getJobManagerAkkaConfig()Lcom/typesafe/config/Config;
+#startJobManagerActorSystem()Lakka/actor/ActorSystem;
+#getTaskManagerAkkaConfig(I)Lcom/typesafe/config/Config;
+#startTaskManagerActorSystem(I)Lakka/actor/ActorSystem;
+#getJobManager()Lakka/actor/ActorRef;
+#getTaskManagers()Lscala/collection/immutable/IndexedSeq;
+#getTaskManagersAsJava()Ljava/util/List;
+#stop()V
+#shutdown()V
+#awaitTermination()V
+#waitForTaskManagersToBeRegistered()V
+#<init>(Lorg/apache/flink/configuration/Configuration;Z)V
@0.9.0
+#streamingMode()Lorg/apache/flink/runtime/StreamingMode;
+#hostname()Ljava/lang/String;
+#submitJobAndWait(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;
+#submitJobAndWait(Lorg/apache/flink/runtime/jobgraph/JobGraph;ZLscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;
+#submitJobDetached(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/api/common/JobSubmissionResult;
+#<init>(Lorg/apache/flink/configuration/Configuration;ZLorg/apache/flink/runtime/StreamingMode;)V
-#HOSTNAME()Ljava/lang/String;
@0.10.0
+#useSingleActorSystem()Z
+#leaderGateway()Lscala/concurrent/Promise;
+#leaderGateway_$eq(Lscala/concurrent/Promise;)V
+#leaderIndex()Lscala/concurrent/Promise;
+#leaderIndex_$eq(Lscala/concurrent/Promise;)V
+#futureLock()Ljava/lang/Object;
+#executionContext()Lscala/concurrent/ExecutionContextExecutor;
+#recoveryMode()Lorg/apache/flink/runtime/jobmanager/RecoveryMode;
+#numJobManagers()I
+#jobManagerActorSystems()Lscala/Option;
+#jobManagerActorSystems_$eq(Lscala/Option;)V
+#jobManagerActors()Lscala/Option;
+#jobManagerActors_$eq(Lscala/Option;)V
+#webMonitor()Lscala/Option;
+#webMonitor_$eq(Lscala/Option;)V
+#taskManagerActorSystems()Lscala/Option;
+#taskManagerActorSystems_$eq(Lscala/Option;)V
+#taskManagerActors()Lscala/Option;
+#taskManagerActors_$eq(Lscala/Option;)V
+#leaderRetrievalService()Lscala/Option;
+#leaderRetrievalService_$eq(Lscala/Option;)V
+#startJobManager(ILakka/actor/ActorSystem;)Lakka/actor/ActorRef;
+#getNumberOfJobManagers()I
+#getJobManagersAsJava()Ljava/util/List;
+#getTaskManagers()Lscala/collection/Seq;
+#getLeaderGatewayFuture()Lscala/concurrent/Future;
+#getLeaderGateway(Lscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/runtime/instance/ActorGateway;
+#getLeaderIndexFuture()Lscala/concurrent/Future;
+#getLeaderIndex(Lscala/concurrent/duration/FiniteDuration;)I
+#getJobManagerAkkaConfig(I)Lcom/typesafe/config/Config;
+#startJobManagerActorSystem(I)Lakka/actor/ActorSystem;
+#startJobClientActorSystem(Lorg/apache/flink/api/common/JobID;)Lakka/actor/ActorSystem;
+#start()V
+#start(Z)V
+#startWebServer(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Ljava/lang/String;)Lscala/Option;
+#running()Z
+#waitForTaskManagersToBeRegistered(Lscala/concurrent/duration/FiniteDuration;)V
+#submitJobAndWait(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/api/common/JobExecutionResult;
+#submitJobAndWait(Lorg/apache/flink/runtime/jobgraph/JobGraph;ZLscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/api/common/JobExecutionResult;
+#submitJobAndWait(Lorg/apache/flink/runtime/jobgraph/JobGraph;ZLscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;)Lorg/apache/flink/api/common/JobExecutionResult;
+#shutdownJobClientActorSystem(Lakka/actor/ActorSystem;)V
+#createLeaderRetrievalService()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#clearLeader()V
+#notifyLeaderAddress(Ljava/lang/String;Ljava/util/UUID;)V
+#handleError(Ljava/lang/Exception;)V
+#org$apache$flink$runtime$minicluster$FlinkMiniCluster$$singleActorSystem$1(Lscala/runtime/ObjectRef;Lscala/runtime/VolatileByteRef;)Lakka/actor/ActorSystem;
-#singleActorSystem()Z
-#jobManagerActorSystem()Lakka/actor/ActorSystem;
-#jobManagerActorSystem_$eq(Lakka/actor/ActorSystem;)V
-#jobManagerActor()Lakka/actor/ActorRef;
-#jobManagerActor_$eq(Lakka/actor/ActorRef;)V
-#taskManagerActorSystems()Lscala/collection/immutable/IndexedSeq;
-#taskManagerActorSystems_$eq(Lscala/collection/immutable/IndexedSeq;)V
-#taskManagerActors()Lscala/collection/immutable/IndexedSeq;
-#taskManagerActors_$eq(Lscala/collection/immutable/IndexedSeq;)V
-#startJobManager(Lakka/actor/ActorSystem;)Lakka/actor/ActorRef;
-#getJobManagerAkkaConfig()Lcom/typesafe/config/Config;
-#startJobManagerActorSystem()Lakka/actor/ActorSystem;
-#getJobManager()Lakka/actor/ActorRef;
-#getTaskManagers()Lscala/collection/immutable/IndexedSeq;
-#submitJobAndWait(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;
-#submitJobAndWait(Lorg/apache/flink/runtime/jobgraph/JobGraph;ZLscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$1
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorSystem;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@0.10.0
+#apply(Lorg/apache/flink/runtime/webmonitor/WebMonitor;)V
-#apply(Lakka/actor/ActorSystem;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$1

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$2
@0.10.0
+#apply(Lscala/collection/Seq;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$2

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$3$$anonfun$apply$4
@0.10.0
+#apply(Lakka/actor/ActorSystem;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$3;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$3$$anonfun$apply$4

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$2
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorRef;)Lscala/concurrent/Future;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@0.10.0
+#apply(I)Lscala/Tuple2;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;Lscala/collection/immutable/IndexedSeq;)V
-#apply(Lakka/actor/ActorRef;)Lscala/concurrent/Future;
-#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$2

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$getTaskManagersAsJava$1
@0.10.0
+#apply()Lscala/collection/Seq;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$getTaskManagersAsJava$1

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$getTaskManagers$1
@0.10.0
+#apply()Lscala/collection/Seq;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$getTaskManagers$1

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$7$$anonfun$apply$7
@0.10.0
+#apply(Lakka/actor/ActorRef;)Lscala/concurrent/Future;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$7;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$7$$anonfun$apply$7

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$3
@0.10.0
+#apply(Lscala/collection/Seq;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$3

+###org/apache/flink/runtime/minicluster/LocalFlinkMiniCluster
@0.9.0-milestone-1
+#$lessinit$greater$default$2()Z
+#main([Ljava/lang/String;)V
+#jobClientActorSystem()Lakka/actor/ActorSystem;
+#jobClient()Lscala/Option;
+#jobClient_$eq(Lscala/Option;)V
+#generateConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/Configuration;
+#startJobManager(Lakka/actor/ActorSystem;)Lakka/actor/ActorRef;
+#startTaskManager(ILakka/actor/ActorSystem;)Lakka/actor/ActorRef;
+#getJobClient()Lakka/actor/ActorRef;
+#getJobClientActorSystem()Lakka/actor/ActorSystem;
+#getJobManagerRPCPort()I
+#shutdown()V
+#awaitTermination()V
+#initializeIOFormatClasses(Lorg/apache/flink/configuration/Configuration;)V
+#setMemory(Lorg/apache/flink/configuration/Configuration;)V
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getDefaultConfig()Lorg/apache/flink/configuration/Configuration;
+#<init>(Lorg/apache/flink/configuration/Configuration;Z)V
@0.9.0
+#<init>(Lorg/apache/flink/configuration/Configuration;ZLorg/apache/flink/runtime/StreamingMode;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
-#$lessinit$greater$default$2()Z
-#jobClient()Lscala/Option;
-#jobClient_$eq(Lscala/Option;)V
-#getJobClient()Lakka/actor/ActorRef;
@0.10.0
+#startJobManager(ILakka/actor/ActorSystem;)Lakka/actor/ActorRef;
+#getLeaderRPCPort()I
+#getJobManagerName(I)Ljava/lang/String;
+#getArchiveName(I)Ljava/lang/String;
-#main([Ljava/lang/String;)V
-#jobClientActorSystem()Lakka/actor/ActorSystem;
-#startJobManager(Lakka/actor/ActorSystem;)Lakka/actor/ActorRef;
-#getJobClientActorSystem()Lakka/actor/ActorSystem;
-#getJobManagerRPCPort()I
-#shutdown()V
-#awaitTermination()V
-#getConfiguration()Lorg/apache/flink/configuration/Configuration;
@1.14.0
-###org/apache/flink/runtime/minicluster/LocalFlinkMiniCluster

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$5
@0.10.0
+#apply(Lscala/collection/Seq;)Lscala/collection/Seq;
+#org$apache$flink$runtime$minicluster$FlinkMiniCluster$$anonfun$$$outer()Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$5

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$6
@0.10.0
+#apply()Lscala/collection/Seq;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$6

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$10
@0.10.0
+#apply(Lscala/Tuple3;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$10

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$2$$anonfun$apply$3
@0.10.0
+#apply(Lakka/actor/ActorSystem;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$2;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$shutdown$2$$anonfun$apply$3

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$awaitTermination$2
@0.10.0
+#apply(Lscala/collection/Seq;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$awaitTermination$2

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$3
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorRef;)Lscala/concurrent/Future;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@0.10.0
+#apply(Lscala/collection/Seq;)Lscala/collection/Seq;
+#org$apache$flink$runtime$minicluster$FlinkMiniCluster$$anonfun$$$outer()Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;
-#apply(Lakka/actor/ActorRef;)Lscala/concurrent/Future;
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$3

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$11
@0.10.0
+#apply(Lscala/Tuple3;)Lscala/Tuple2;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$11

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$getJobManagersAsJava$1
@0.10.0
+#apply()Lscala/collection/Seq;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$getJobManagersAsJava$1

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$awaitTermination$1$$anonfun$apply$5
@0.10.0
+#apply(Lakka/actor/ActorSystem;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$awaitTermination$1;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$awaitTermination$1$$anonfun$apply$5

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$1
@0.9.0-milestone-1
+#apply(I)Lscala/Tuple2;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;Lscala/runtime/ObjectRef;Lscala/runtime/VolatileByteRef;)V
-#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$1

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$stop$1
@0.10.0
+#apply(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$stop$1

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$3$$anonfun$apply$1
@0.10.0
+#apply(Lakka/actor/ActorRef;)Lscala/concurrent/Future;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$3;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$3$$anonfun$apply$1

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$awaitTermination$1
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorSystem;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@0.10.0
+#apply(Lscala/collection/Seq;)V
-#apply(Lakka/actor/ActorSystem;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$awaitTermination$1

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$9
@0.10.0
+#apply(Lscala/Tuple2;)Lscala/Tuple3;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$9

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$7
@0.10.0
+#apply(Lscala/collection/Seq;)Lscala/collection/Seq;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;Lscala/concurrent/duration/FiniteDuration;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$7

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$awaitTermination$2$$anonfun$apply$6
@0.10.0
+#apply(Lakka/actor/ActorSystem;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$awaitTermination$2;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$awaitTermination$2$$anonfun$apply$6

+###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$8
@0.10.0
+#apply()Lscala/collection/Seq;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/minicluster/FlinkMiniCluster;)V
@1.14.0
-###org/apache/flink/runtime/minicluster/FlinkMiniCluster$$anonfun$8

+###org/apache/flink/runtime/yarn/AbstractFlinkYarnCluster
@0.9.0-milestone-1
+#<init>()V
+#getJobManagerAddress()Ljava/net/InetSocketAddress;
+#getWebInterfaceURL()Ljava/lang/String;
+#shutdown()V
+#hasBeenStopped()Z
+#getClusterStatus()Lorg/apache/flink/runtime/yarn/FlinkYarnClusterStatus;
+#hasFailed()Z
+#getDiagnostics()Ljava/lang/String;
+#getNewMessages()Ljava/util/List;
+#getApplicationId()Ljava/lang/String;
+#isDetached()Z
+#connectToCluster()V
+#disconnect()V
+#stopAfterJob(Lorg/apache/flink/api/common/JobID;)V
@0.9.0
+#shutdown(Z)V
-#shutdown()V
@0.10.0
+#getFlinkConfiguration()Lorg/apache/flink/configuration/Configuration;
@1.14.0
-###org/apache/flink/runtime/yarn/AbstractFlinkYarnCluster

+###org/apache/flink/runtime/yarn/AbstractFlinkYarnClient
@0.9.0-milestone-1
+#<init>()V
+#setJobManagerMemory(I)V
+#setTaskManagerMemory(I)V
+#setFlinkConfigurationObject(Lorg/apache/flink/configuration/Configuration;)V
+#setTaskManagerSlots(I)V
+#getTaskManagerSlots()I
+#setQueue(Ljava/lang/String;)V
+#setLocalJarPath(Lorg/apache/hadoop/fs/Path;)V
+#setConfigurationFilePath(Lorg/apache/hadoop/fs/Path;)V
+#setFlinkLoggingConfigurationPath(Lorg/apache/hadoop/fs/Path;)V
+#getFlinkLoggingConfigurationPath()Lorg/apache/hadoop/fs/Path;
+#setTaskManagerCount(I)V
+#getTaskManagerCount()I
+#setConfigurationDirectory(Ljava/lang/String;)V
+#setShipFiles(Ljava/util/List;)V
+#setDynamicPropertiesEncoded(Ljava/lang/String;)V
+#getDynamicPropertiesEncoded()Ljava/lang/String;
+#getClusterDescription()Ljava/lang/String;
+#deploy(Ljava/lang/String;)Lorg/apache/flink/runtime/yarn/AbstractFlinkYarnCluster;
+#setDetachedMode(Z)V
+#isDetached()Z
+#getSessionFilesDir()Ljava/lang/String;
@0.9.0
+#setStreamingMode(Z)V
@0.9.1
+#deploy()Lorg/apache/flink/runtime/yarn/AbstractFlinkYarnCluster;
+#setName(Ljava/lang/String;)V
-#deploy(Ljava/lang/String;)Lorg/apache/flink/runtime/yarn/AbstractFlinkYarnCluster;
@1.14.0
-###org/apache/flink/runtime/yarn/AbstractFlinkYarnClient

+###org/apache/flink/runtime/yarn/FlinkYarnClusterStatus
@0.9.0-milestone-1
+#<init>()V
+#<init>(II)V
+#getNumberOfTaskManagers()I
+#setNumberOfTaskManagers(I)V
+#getNumberOfSlots()I
+#setNumberOfSlots(I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/yarn/FlinkYarnClusterStatus

+###org/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/deployment/ResultPartitionLocation;)V
+#getConsumedPartitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#getConsumedPartitionLocation()Lorg/apache/flink/runtime/deployment/ResultPartitionLocation;
+#toString()Ljava/lang/String;
+#fromEdges([Lorg/apache/flink/runtime/executiongraph/ExecutionEdge;Lorg/apache/flink/runtime/instance/SimpleSlot;)[Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;
@1.14.0
-###org/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor

+###org/apache/flink/runtime/deployment/ResultPartitionLocation
@0.9.0-milestone-1
+#createRemote(Lorg/apache/flink/runtime/io/network/ConnectionID;)Lorg/apache/flink/runtime/deployment/ResultPartitionLocation;
+#createLocal()Lorg/apache/flink/runtime/deployment/ResultPartitionLocation;
+#createUnknown()Lorg/apache/flink/runtime/deployment/ResultPartitionLocation;
+#isLocal()Z
+#isRemote()Z
+#isUnknown()Z
+#getConnectionId()Lorg/apache/flink/runtime/io/network/ConnectionID;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/deployment/ResultPartitionLocation

+###org/apache/flink/runtime/deployment/PartialInputChannelDeploymentDescriptor
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;I)V
+#createInputChannelDeploymentDescriptor(Lorg/apache/flink/runtime/executiongraph/Execution;)Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;
+#getResultId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#fromEdge(Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;Lorg/apache/flink/runtime/executiongraph/Execution;)Lorg/apache/flink/runtime/deployment/PartialInputChannelDeploymentDescriptor;
@1.14.0
-###org/apache/flink/runtime/deployment/PartialInputChannelDeploymentDescriptor

+###org/apache/flink/runtime/process/ProcessReaper
@0.9.0-milestone-1
+#<init>(Lakka/actor/ActorRef;Lorg/slf4j/Logger;I)V
+#onReceive(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/runtime/process/ProcessReaper

+###org/apache/flink/runtime/executiongraph/ExecutionJobVertex$PredeterminedInputSplitAssigner
@0.9.0-milestone-1
+#<init>([Ljava/util/List;)V
+#getNextInputSplit(Ljava/lang/String;I)Lorg/apache/flink/core/io/InputSplit;
@1.14.0
-###org/apache/flink/runtime/executiongraph/ExecutionJobVertex$PredeterminedInputSplitAssigner

+###org/apache/flink/runtime/executiongraph/ExecutionEdge
@0.6-hadoop2-incubating
+#getInputGate()Lorg/apache/flink/runtime/executiongraph/ExecutionGate;
+#getOutputGate()Lorg/apache/flink/runtime/executiongraph/ExecutionGate;
+#getOutputChannelID()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#getInputChannelID()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#getOutputGateIndex()I
+#getInputGateIndex()I
+#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#getConnectionID()I
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;I)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;ILorg/apache/flink/runtime/io/network/channels/ChannelID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)V
+#getSource()Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;
+#getTarget()Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getInputNum()I
+#getInputChannelId()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#getOutputChannelId()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
-#getInputGate()Lorg/apache/flink/runtime/executiongraph/ExecutionGate;
-#getOutputGate()Lorg/apache/flink/runtime/executiongraph/ExecutionGate;
-#getOutputChannelID()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
-#getInputChannelID()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
-#getOutputGateIndex()I
-#getInputGateIndex()I
-#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
-#getConnectionID()I
@0.8.0
+#assignNewChannelIDs()V
-#<init>(Lorg/apache/flink/runtime/executiongraph/IntermediateResultPartition;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;ILorg/apache/flink/runtime/io/network/channels/ChannelID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)V
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
-#getInputChannelId()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
-#getOutputChannelId()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
-#assignNewChannelIDs()V
@1.14.0
-###org/apache/flink/runtime/executiongraph/ExecutionEdge

+###org/apache/flink/runtime/LeaderSessionMessageFilter$class
@0.10.0
+#receive(Lorg/apache/flink/runtime/LeaderSessionMessageFilter;)Lscala/PartialFunction;
+#org$apache$flink$runtime$LeaderSessionMessageFilter$$handleDiscardedMessage(Lorg/apache/flink/runtime/LeaderSessionMessageFilter;Lscala/Option;Lorg/apache/flink/runtime/messages/JobManagerMessages$LeaderSessionMessage;)V
+#decorateMessage(Lorg/apache/flink/runtime/LeaderSessionMessageFilter;Ljava/lang/Object;)Ljava/lang/Object;
+#$init$(Lorg/apache/flink/runtime/LeaderSessionMessageFilter;)V
@1.14.0
-###org/apache/flink/runtime/LeaderSessionMessageFilter$class

+###org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore
@0.10.0
+#<init>(ILjava/lang/ClassLoader;Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/zookeeper/StateStorageHelper;)V
+#recover()V
+#addCheckpoint(Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;)V
+#getLatestCheckpoint()Lorg/apache/flink/runtime/checkpoint/CompletedCheckpoint;
+#getAllCheckpoints()Ljava/util/List;
+#getNumberOfRetainedCheckpoints()I
+#discardAllCheckpoints()V
@1.14.0
-###org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore

+###org/apache/flink/runtime/checkpoint/StateForTask
@0.9.0
+#<init>(Lorg/apache/flink/runtime/util/SerializedValue;Lorg/apache/flink/runtime/jobgraph/JobVertexID;I)V
+#getState()Lorg/apache/flink/runtime/util/SerializedValue;
+#getOperatorId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getSubtask()I
+#discard(Ljava/lang/ClassLoader;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.10.0
+#<init>(Lorg/apache/flink/util/SerializedValue;Lorg/apache/flink/runtime/jobgraph/JobVertexID;I)V
+#getState()Lorg/apache/flink/util/SerializedValue;
-#<init>(Lorg/apache/flink/runtime/util/SerializedValue;Lorg/apache/flink/runtime/jobgraph/JobVertexID;I)V
-#getState()Lorg/apache/flink/runtime/util/SerializedValue;
@1.14.0
-###org/apache/flink/runtime/checkpoint/StateForTask

+###org/apache/flink/runtime/client/JobTimeoutException
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/client/JobTimeoutException

+###org/apache/flink/runtime/client/JobClientActorConnectionTimeoutException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/client/JobClientActorConnectionTimeoutException

+###org/apache/flink/runtime/client/JobClientActor
@0.9.0
+#<init>(Lakka/actor/ActorRef;Lorg/slf4j/Logger;Z)V
+#onReceive(Ljava/lang/Object;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lscala/concurrent/duration/FiniteDuration;Z)V
+#preStart()V
+#postStop()V
+#notifyLeaderAddress(Ljava/lang/String;Ljava/util/UUID;)V
+#handleError(Ljava/lang/Exception;)V
+#createJobClientActorProps(Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lscala/concurrent/duration/FiniteDuration;Z)Lakka/actor/Props;
-#<init>(Lakka/actor/ActorRef;Lorg/slf4j/Logger;Z)V
-#onReceive(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/runtime/client/JobClientActor

+###org/apache/flink/runtime/client/JobClientActorSubmissionTimeoutException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/client/JobClientActorSubmissionTimeoutException

+###org/apache/flink/runtime/client/JobClient
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/lang/ClassLoader;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/net/InetSocketAddress;Ljava/lang/ClassLoader;)V
+#close()V
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#submitJob()Lorg/apache/flink/runtime/client/JobSubmissionResult;
+#cancelJob()Lorg/apache/flink/runtime/client/JobCancelResult;
+#getJobProgress()Lorg/apache/flink/runtime/client/JobProgressResult;
+#submitJobAndWait()Lorg/apache/flink/api/common/JobExecutionResult;
+#getRecommendedPollingInterval()I
+#setConsoleStreamForReporting(Ljava/io/PrintStream;)V
@0.7.0-hadoop2-incubating
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/net/InetSocketAddress;Ljava/lang/ClassLoader;)V
@0.9.0-milestone-1
+#uploadJarFiles(Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/lang/String;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)V
+#submitJobDetached(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)V
+#submitJobAndWait(Lorg/apache/flink/runtime/jobgraph/JobGraph;ZLakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/api/common/JobExecutionResult;
+#getJobManagerUrlFromConfig(Lorg/apache/flink/configuration/Configuration;Z)Ljava/lang/String;
+#createJobClient(Ljava/lang/String;Lakka/actor/ActorSystem;Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorRef;
+#createJobClientFromConfig(Lorg/apache/flink/configuration/Configuration;ZLakka/actor/ActorSystem;)Lakka/actor/ActorRef;
+#startActorSystemAndActor(Lorg/apache/flink/configuration/Configuration;Z)Lscala/Tuple2;
+#JOB_CLIENT_NAME()Ljava/lang/String;
+#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
+#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
+#log()Lakka/event/LoggingAdapter;
+#receive()Lscala/PartialFunction;
+#context()Lakka/actor/ActorContext;
+#self()Lakka/actor/ActorRef;
+#akka$actor$Actor$_setter_$context_$eq(Lakka/actor/ActorContext;)V
+#akka$actor$Actor$_setter_$self_$eq(Lakka/actor/ActorRef;)V
+#sender()Lakka/actor/ActorRef;
+#aroundReceive(Lscala/PartialFunction;Ljava/lang/Object;)V
+#aroundPreStart()V
+#aroundPostStop()V
+#aroundPreRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#aroundPostRestart(Ljava/lang/Throwable;)V
+#supervisorStrategy()Lakka/actor/SupervisorStrategy;
+#preStart()V
+#postStop()V
+#preRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#postRestart(Ljava/lang/Throwable;)V
+#receiveWithLogMessages()Lscala/PartialFunction;
+#unhandled(Ljava/lang/Object;)V
+#<init>(Lakka/actor/ActorRef;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/lang/ClassLoader;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)V
-#close()V
-#getConfiguration()Lorg/apache/flink/configuration/Configuration;
-#submitJob()Lorg/apache/flink/runtime/client/JobSubmissionResult;
-#cancelJob()Lorg/apache/flink/runtime/client/JobCancelResult;
-#getJobProgress()Lorg/apache/flink/runtime/client/JobProgressResult;
-#submitJobAndWait()Lorg/apache/flink/api/common/JobExecutionResult;
-#getRecommendedPollingInterval()I
-#setConsoleStreamForReporting(Ljava/io/PrintStream;)V
@0.9.0
+#<init>()V
+#startJobClientActorSystem(Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorSystem;
+#getJobManagerAddress(Lorg/apache/flink/configuration/Configuration;)Ljava/net/InetSocketAddress;
+#submitJobAndWait(Lakka/actor/ActorSystem;Lakka/actor/ActorRef;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lscala/concurrent/duration/FiniteDuration;Z)Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;
+#submitJobDetached(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lscala/concurrent/duration/FiniteDuration;)V
+#uploadJarFiles(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)V
-#uploadJarFiles(Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/lang/String;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)V
-#submitJobDetached(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)V
-#submitJobAndWait(Lorg/apache/flink/runtime/jobgraph/JobGraph;ZLakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/api/common/JobExecutionResult;
-#getJobManagerUrlFromConfig(Lorg/apache/flink/configuration/Configuration;Z)Ljava/lang/String;
-#createJobClient(Ljava/lang/String;Lakka/actor/ActorSystem;Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorRef;
-#createJobClientFromConfig(Lorg/apache/flink/configuration/Configuration;ZLakka/actor/ActorSystem;)Lakka/actor/ActorRef;
-#startActorSystemAndActor(Lorg/apache/flink/configuration/Configuration;Z)Lscala/Tuple2;
-#JOB_CLIENT_NAME()Ljava/lang/String;
-#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
-#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
-#log()Lakka/event/LoggingAdapter;
-#receive()Lscala/PartialFunction;
-#context()Lakka/actor/ActorContext;
-#self()Lakka/actor/ActorRef;
-#akka$actor$Actor$_setter_$context_$eq(Lakka/actor/ActorContext;)V
-#akka$actor$Actor$_setter_$self_$eq(Lakka/actor/ActorRef;)V
-#sender()Lakka/actor/ActorRef;
-#aroundReceive(Lscala/PartialFunction;Ljava/lang/Object;)V
-#aroundPreStart()V
-#aroundPostStop()V
-#aroundPreRestart(Ljava/lang/Throwable;Lscala/Option;)V
-#aroundPostRestart(Ljava/lang/Throwable;)V
-#supervisorStrategy()Lakka/actor/SupervisorStrategy;
-#preStart()V
-#postStop()V
-#preRestart(Ljava/lang/Throwable;Lscala/Option;)V
-#postRestart(Ljava/lang/Throwable;)V
-#receiveWithLogMessages()Lscala/PartialFunction;
-#unhandled(Ljava/lang/Object;)V
-#<init>(Lakka/actor/ActorRef;)V
@0.10.0
+#submitJobAndWait(Lakka/actor/ActorSystem;Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lscala/concurrent/duration/FiniteDuration;ZLjava/lang/ClassLoader;)Lorg/apache/flink/api/common/JobExecutionResult;
+#submitJobDetached(Lorg/apache/flink/runtime/instance/ActorGateway;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lscala/concurrent/duration/FiniteDuration;Ljava/lang/ClassLoader;)V
+#uploadJarFiles(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/instance/ActorGateway;Lscala/concurrent/duration/FiniteDuration;)V
-#getJobManagerAddress(Lorg/apache/flink/configuration/Configuration;)Ljava/net/InetSocketAddress;
-#submitJobAndWait(Lakka/actor/ActorSystem;Lakka/actor/ActorRef;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lscala/concurrent/duration/FiniteDuration;Z)Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;
-#submitJobDetached(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lscala/concurrent/duration/FiniteDuration;)V
-#uploadJarFiles(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)V
@1.14.0
-###org/apache/flink/runtime/client/JobClient

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$25
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$25

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$handleMessage$1$$anonfun$applyOrElse$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$handleMessage$1$$anonfun$applyOrElse$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$10
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.10.0
+#apply()Ljava/lang/Throwable;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$10

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$1$$anonfun$apply$mcV$sp$21
@0.10.2
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$1$$anonfun$apply$mcV$sp$21

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$3
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$8
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$8

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$2
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$parseArgs$1
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration;)Lscala/Tuple4;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/String;)V
-#apply(Lorg/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration;)Lscala/Tuple4;
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$parseArgs$1

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$org$apache$flink$runtime$jobmanager$MemoryArchivist$$handleWebServerInfoMessage$3
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$org$apache$flink$runtime$jobmanager$MemoryArchivist$$handleWebServerInfoMessage$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$5
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/util/List;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/util/List;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1$$anonfun$apply$mcV$sp$23
@0.10.2
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1$$anonfun$apply$mcV$sp$23

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$handleMessage$1$$anonfun$applyOrElse$2
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$handleMessage$1;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$handleMessage$1$$anonfun$applyOrElse$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$liftedTree2$1$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$liftedTree2$1$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$1
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/instance/Instance;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
-#apply(Lorg/apache/flink/runtime/instance/Instance;)V
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$21
@0.10.0
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;)Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$21

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$5
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$14
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$14

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$11
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$11

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#org$apache$flink$runtime$jobmanager$JobManager$$anonfun$$anonfun$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$25
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/String;Lakka/actor/ActorRef;)V
@0.10.2
+#apply()Lscala/collection/Seq;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/String;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$25

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$22
@0.10.0
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;)Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$22

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$createJobStatusWithIDsOverview$1
@0.10.0
+#apply(Lscala/Tuple2;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$createJobStatusWithIDsOverview$1

+###org/apache/flink/runtime/jobmanager/ZooKeeperSubmittedJobGraphStore
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/runtime/zookeeper/StateStorageHelper;)V
+#start(Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraphStore$SubmittedJobGraphListener;)V
+#stop()V
+#recoverJobGraphs()Ljava/util/List;
+#recoverJobGraph(Lorg/apache/flink/api/common/JobID;)Lscala/Option;
+#putJobGraph(Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraph;)V
+#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#getPathForJob(Lorg/apache/flink/api/common/JobID;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/jobmanager/ZooKeeperSubmittedJobGraphStore

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$7
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$1

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$handleMessage$1
@0.10.0
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$handleMessage$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$onRemovedJobGraph$1
@0.10.0
+#apply(Lscala/Tuple2;)Lscala/concurrent/Future;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$onRemovedJobGraph$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$4
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$4
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$4

+###org/apache/flink/runtime/jobmanager/JobInfo$
@0.9.0-milestone-1
+#<clinit>()V
+#apply(Lakka/actor/ActorRef;J)Lorg/apache/flink/runtime/jobmanager/JobInfo;
@0.10.0
+#apply(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/akka/ListeningBehaviour;JJ)Lorg/apache/flink/runtime/jobmanager/JobInfo;
-#apply(Lakka/actor/ActorRef;J)Lorg/apache/flink/runtime/jobmanager/JobInfo;
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobInfo$

+###org/apache/flink/runtime/jobmanager/scheduler/SlotAvailabilityListener
@0.8.0
+#newSlotAvailable(Lorg/apache/flink/runtime/instance/Instance;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/scheduler/SlotAvailabilityListener

+###org/apache/flink/runtime/jobmanager/scheduler/SlotAllocationFutureAction
@0.7.0-hadoop2-incubating
+#slotAllocated(Lorg/apache/flink/runtime/instance/AllocatedSlot;)V
@0.8.1
+#slotAllocated(Lorg/apache/flink/runtime/instance/SimpleSlot;)V
-#slotAllocated(Lorg/apache/flink/runtime/instance/AllocatedSlot;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/scheduler/SlotAllocationFutureAction

+###org/apache/flink/runtime/jobmanager/scheduler/Scheduler
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#shutdown()V
+#getNumberOfAvailableSlots()I
+#getTotalNumberOfSlots()I
+#scheduleImmediately(Lorg/apache/flink/runtime/jobmanager/scheduler/ScheduledUnit;)Lorg/apache/flink/runtime/instance/AllocatedSlot;
+#scheduleQueued(Lorg/apache/flink/runtime/jobmanager/scheduler/ScheduledUnit;)Lorg/apache/flink/runtime/jobmanager/scheduler/SlotAllocationFuture;
+#newSlotAvailable(Lorg/apache/flink/runtime/instance/Instance;)V
+#newInstanceAvailable(Lorg/apache/flink/runtime/instance/Instance;)V
+#instanceDied(Lorg/apache/flink/runtime/instance/Instance;)V
+#getNumberOfAvailableInstances()I
+#getNumberOfInstancesWithAvailableSlots()I
+#getNumberOfUnconstrainedAssignments()I
+#getNumberOfLocalizedAssignments()I
+#getNumberOfNonLocalizedAssignments()I
@0.8.1
+#scheduleImmediately(Lorg/apache/flink/runtime/jobmanager/scheduler/ScheduledUnit;)Lorg/apache/flink/runtime/instance/SimpleSlot;
-#scheduleImmediately(Lorg/apache/flink/runtime/jobmanager/scheduler/ScheduledUnit;)Lorg/apache/flink/runtime/instance/AllocatedSlot;
@0.9.0-milestone-1
+#getInstancesByHost()Ljava/util/Map;
-#<init>(Ljava/util/concurrent/ExecutorService;)V
@0.10.0
+#<init>(Lscala/concurrent/ExecutionContext;)V
-#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/scheduler/Scheduler

+###org/apache/flink/runtime/jobmanager/scheduler/ScheduledUnit
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/Execution;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/Execution;Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/Execution;Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)V
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getTaskToExecute()Lorg/apache/flink/runtime/executiongraph/Execution;
+#getSlotSharingGroup()Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup;
+#getLocationConstraint()Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/jobmanager/scheduler/ScheduledUnit

+###org/apache/flink/runtime/jobmanager/scheduler/SetQueue
@0.7.0-hadoop2-incubating
+#<init>()V
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#size()I
+#clear()V
+#remove(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#containsAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/jobmanager/scheduler/SetQueue

+###org/apache/flink/runtime/jobmanager/scheduler/SlotAllocationFuture
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/instance/AllocatedSlot;)V
+#waitTillAllocated()Lorg/apache/flink/runtime/instance/AllocatedSlot;
+#waitTillAllocated(J)Lorg/apache/flink/runtime/instance/AllocatedSlot;
+#setFutureAction(Lorg/apache/flink/runtime/jobmanager/scheduler/SlotAllocationFutureAction;)V
+#setSlot(Lorg/apache/flink/runtime/instance/AllocatedSlot;)V
+#toString()Ljava/lang/String;
@0.8.1
+#<init>(Lorg/apache/flink/runtime/instance/SimpleSlot;)V
+#waitTillAllocated()Lorg/apache/flink/runtime/instance/SimpleSlot;
+#waitTillAllocated(J)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#setSlot(Lorg/apache/flink/runtime/instance/SimpleSlot;)V
-#<init>(Lorg/apache/flink/runtime/instance/AllocatedSlot;)V
-#waitTillAllocated()Lorg/apache/flink/runtime/instance/AllocatedSlot;
-#waitTillAllocated(J)Lorg/apache/flink/runtime/instance/AllocatedSlot;
-#setSlot(Lorg/apache/flink/runtime/instance/AllocatedSlot;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/scheduler/SlotAllocationFuture

+###org/apache/flink/runtime/jobmanager/scheduler/LifoSetQueue
@0.7.0-hadoop2-incubating
+#<init>()V
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#size()I
@1.14.0
-###org/apache/flink/runtime/jobmanager/scheduler/LifoSetQueue

+###org/apache/flink/runtime/jobmanager/scheduler/ResourceId
@0.7.0-hadoop2-incubating
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/scheduler/ResourceId

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$updateAccumulators$1$$anonfun$apply$3
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$updateAccumulators$1;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$updateAccumulators$1$$anonfun$apply$3

+###org/apache/flink/runtime/jobmanager/SubmittedJobGraphStore
@0.10.0
+#start(Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraphStore$SubmittedJobGraphListener;)V
+#stop()V
+#recoverJobGraphs()Ljava/util/List;
+#recoverJobGraph(Lorg/apache/flink/api/common/JobID;)Lscala/Option;
+#putJobGraph(Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraph;)V
+#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/SubmittedJobGraphStore

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$removeJob$2
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$removeJob$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$6
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$8
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$8

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1
@0.10.0
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#org$apache$flink$runtime$jobmanager$JobManager$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/JobManager;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$org$apache$flink$runtime$jobmanager$MemoryArchivist$$handleWebServerInfoMessage$4
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$org$apache$flink$runtime$jobmanager$MemoryArchivist$$handleWebServerInfoMessage$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$12
@0.10.2
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$12

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$org$apache$flink$runtime$jobmanager$MemoryArchivist$$handleWebServerInfoMessage$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$org$apache$flink$runtime$jobmanager$MemoryArchivist$$handleWebServerInfoMessage$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$6
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
@0.10.0
+#apply(Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;I)V
-#apply()Ljava/lang/String;
-#apply()Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$7
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$23
@0.10.0
+#apply()Lscala/collection/Seq;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@0.10.2
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lakka/actor/ActorRef;)V
-#apply()Lscala/collection/Seq;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$23

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$2
@0.10.0
+#apply()Lscala/collection/Seq;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$4
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$20
@0.10.0
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;)Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$20

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$7
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$liftedTree2$1$2
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$liftedTree2$1$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$12
@0.10.0
+#apply(Lscala/Tuple2;)Lorg/apache/flink/runtime/client/JobStatusMessage;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$12

+###org/apache/flink/runtime/jobmanager/SubmittedJobGraph
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/jobmanager/JobInfo;)V
+#getJobGraph()Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getJobInfo()Lorg/apache/flink/runtime/jobmanager/JobInfo;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/jobmanager/SubmittedJobGraph

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$6
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/messages/webmonitor/InfoMessage;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$4
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
-#apply(Lscala/Tuple2;)V
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$16
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1;Ljava/lang/Throwable;)V
@0.10.2
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1;)V
-#apply()Ljava/lang/Throwable;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$16

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$24
@0.10.0
+#apply()Lscala/collection/Seq;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$24

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$5
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/messages/webmonitor/InfoMessage;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$5

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$createJobsWithIDsOverview$1
@0.10.0
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$createJobsWithIDsOverview$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$4
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$11
@0.10.0
+#apply(Lscala/Tuple2;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$11

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$7
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;Ljava/util/List;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$15
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Exception;)V
@0.10.0
+#apply(Lscala/Tuple2;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
-#apply()Ljava/lang/Exception;
-#apply()Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$15

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$2
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$8
@0.10.0
+#apply(Lorg/apache/flink/runtime/webmonitor/WebMonitor;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$8

+###org/apache/flink/runtime/jobmanager/RecoveryMode
@0.10.0
+#values()[Lorg/apache/flink/runtime/jobmanager/RecoveryMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/RecoveryMode;
+#fromConfig(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/jobmanager/RecoveryMode;
+#isHighAvailabilityModeActivated(Lorg/apache/flink/configuration/Configuration;)Z
@1.14.0
-###org/apache/flink/runtime/jobmanager/RecoveryMode

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$1
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/messages/checkpoint/AcknowledgeCheckpoint;)V
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/checkpoint/CheckpointCoordinator;Lorg/apache/flink/runtime/messages/checkpoint/AcknowledgeCheckpoint;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/messages/checkpoint/AcknowledgeCheckpoint;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$org$apache$flink$runtime$jobmanager$MemoryArchivist$$handleWebServerInfoMessage$2
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$org$apache$flink$runtime$jobmanager$MemoryArchivist$$handleWebServerInfoMessage$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$5
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$5

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$preStart$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$preStart$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$9
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lscala/runtime/ObjectRef;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lscala/runtime/ObjectRef;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$9

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$23
@0.10.0
+#apply(ILorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;)Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$23

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1
@0.9.0-milestone-1
+#apply()Lscala/Tuple2;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/lang/ClassLoader;)V
@0.9.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
-#apply()Lscala/Tuple2;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/lang/ClassLoader;)V
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/jobmanager/JobInfo;ZLorg/apache/flink/api/common/JobID;Ljava/lang/String;Lscala/runtime/ObjectRef;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lcom/typesafe/config/Config;)V
@0.10.0
+#apply(Lscala/Tuple2;)Lscala/concurrent/Future;
+#org$apache$flink$runtime$jobmanager$JobManager$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/JobManager;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;Z)V
-#apply()Ljava/lang/String;
-#apply()Ljava/lang/Object;
-#<init>(Lcom/typesafe/config/Config;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$2
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$11
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$11

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$4
@0.9.0
+#apply(Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;I)V
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
-#apply(Lorg/apache/flink/runtime/jobgraph/JobVertex;)V
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;I)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$9
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$9

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$9
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$9

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#org$apache$flink$runtime$jobmanager$JobManager$$anonfun$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$1$$anonfun$apply$mcV$sp$22
@0.10.2
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$1;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$1$$anonfun$apply$mcV$sp$22

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$2
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
-#apply()Ljava/lang/Throwable;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$18
@0.10.2
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$18

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$11
@0.10.2
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$11

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$8
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$8

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5$$anonfun$apply$mcV$sp$3
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5;J)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5$$anonfun$apply$mcV$sp$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$13
@0.9.0
+#apply(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Lscala/runtime/ObjectRef;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lscala/runtime/ObjectRef;Lorg/apache/flink/api/common/JobID;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Lscala/runtime/ObjectRef;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$13

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$16;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobmanager/JobInfo;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$4
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/core/io/InputSplit;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$1
@0.10.0
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lakka/actor/ActorRef;Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$15
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
@0.10.2
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$15

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2$$anonfun$apply$mcV$sp$8
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2;Lscala/collection/mutable/Buffer;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2$$anonfun$apply$mcV$sp$8

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#org$apache$flink$runtime$jobmanager$JobManager$$anonfun$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$17
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lcom/typesafe/config/Config;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$17

+###org/apache/flink/runtime/jobmanager/JobManager$
@0.9.0-milestone-1
+#<clinit>()V
+#LOG()Lorg/slf4j/Logger;
+#STARTUP_FAILURE_RETURN_CODE()I
+#RUNTIME_FAILURE_RETURN_CODE()I
+#JOB_MANAGER_NAME()Ljava/lang/String;
+#EVENT_COLLECTOR_NAME()Ljava/lang/String;
+#ARCHIVE_NAME()Ljava/lang/String;
+#PROFILER_NAME()Ljava/lang/String;
+#main([Ljava/lang/String;)V
+#runJobManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Ljava/lang/String;I)V
+#parseArgs([Ljava/lang/String;)Lscala/Tuple4;
+#createJobManagerComponents(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple10;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;)Lscala/Tuple2;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lscala/Option;Lscala/Option;)Lscala/Tuple2;
+#startActor(Lakka/actor/Props;Lakka/actor/ActorSystem;)Lakka/actor/ActorRef;
+#getRemoteJobManagerAkkaURL(Ljava/net/InetSocketAddress;)Ljava/lang/String;
+#getLocalJobManagerAkkaURL()Ljava/lang/String;
+#getJobManagerRemoteReferenceFuture(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#getJobManagerRemoteReference(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#getJobManagerRemoteReference(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#getJobManagerRemoteReference(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorRef;
@0.9.0
+#LOG()Lgrizzled/slf4j/Logger;
+#runJobManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/String;I)V
+#parseArgs([Ljava/lang/String;)Lscala/Tuple5;
+#createJobManagerComponents(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple9;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lorg/apache/flink/runtime/StreamingMode;)Lscala/Tuple2;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lscala/Option;Lscala/Option;Lorg/apache/flink/runtime/StreamingMode;)Lscala/Tuple2;
-#LOG()Lorg/slf4j/Logger;
-#EVENT_COLLECTOR_NAME()Ljava/lang/String;
-#PROFILER_NAME()Ljava/lang/String;
-#runJobManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Ljava/lang/String;I)V
-#parseArgs([Ljava/lang/String;)Lscala/Tuple4;
-#createJobManagerComponents(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple10;
-#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;)Lscala/Tuple2;
-#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lscala/Option;Lscala/Option;)Lscala/Tuple2;
@0.10.0
+#startActorSystemAndJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/String;ILjava/lang/Class;Ljava/lang/Class;)Lscala/Tuple4;
+#createJobManagerComponents(Lorg/apache/flink/configuration/Configuration;Lscala/Option;)Lscala/Tuple11;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/Class;Ljava/lang/Class;)Lscala/Tuple2;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lscala/Option;Lscala/Option;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/Class;Ljava/lang/Class;)Lscala/Tuple2;
+#getRemoteJobManagerAkkaURL(Ljava/net/InetSocketAddress;Lscala/Option;)Ljava/lang/String;
+#getRemoteJobManagerAkkaURL(Lorg/apache/flink/configuration/Configuration;)Ljava/lang/String;
+#getRemoteJobManagerAkkaURL$default$2()Lscala/Option;
+#getLocalJobManagerAkkaURL(Lscala/Option;)Ljava/lang/String;
+#getLocalJobManagerAkkaURL$default$1()Lscala/Option;
+#getJobManagerAkkaURL(Lakka/actor/ActorSystem;Lscala/Option;)Ljava/lang/String;
+#getJobManagerAkkaURL$default$2()Lscala/Option;
+#getJobManagerActorRefFuture(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#getJobManagerActorRef(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#getJobManagerActorRef(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#getJobManagerActorRef(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorRef;
-#createJobManagerComponents(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple9;
-#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lorg/apache/flink/runtime/StreamingMode;)Lscala/Tuple2;
-#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lscala/Option;Lscala/Option;Lorg/apache/flink/runtime/StreamingMode;)Lscala/Tuple2;
-#getRemoteJobManagerAkkaURL(Ljava/net/InetSocketAddress;)Ljava/lang/String;
-#getLocalJobManagerAkkaURL()Ljava/lang/String;
-#getJobManagerRemoteReferenceFuture(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
-#getJobManagerRemoteReference(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
-#getJobManagerRemoteReference(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
-#getJobManagerRemoteReference(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorRef;
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
+#<init>(Ljava/lang/String;)V
-#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$onRemovedJobGraph$1$$anonfun$apply$2
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$onRemovedJobGraph$1;Lscala/Tuple2;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$onRemovedJobGraph$1$$anonfun$apply$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$getJobManagerAkkaURLHelper$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$getJobManagerAkkaURLHelper$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1$$anonfun$apply$mcV$sp$19
@0.10.2
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1$$anonfun$apply$mcV$sp$19

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleError$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleError$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$removeJob$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$removeJob$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$14
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
+#apply(Lscala/Tuple2;)Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
-#apply()Ljava/lang/String;
-#apply()Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$14

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$6
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lscala/Option;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$17
@0.10.2
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$17

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$3
@0.10.0
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lakka/actor/ActorRef;Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;III)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2$$anonfun$apply$mcV$sp$9
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2;Lscala/collection/mutable/Buffer;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2$$anonfun$apply$mcV$sp$9

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$parseArgs$2
@0.9.0-milestone-1
+#apply()Lscala/runtime/Nothing$;
+#apply()Ljava/lang/Object;
+#<init>(Lscopt/OptionParser;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$parseArgs$2

+###org/apache/flink/runtime/jobmanager/MemoryArchivist
@0.9.0-milestone-1
+#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
+#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
+#log()Lakka/event/LoggingAdapter;
+#receive()Lscala/PartialFunction;
+#context()Lakka/actor/ActorContext;
+#self()Lakka/actor/ActorRef;
+#akka$actor$Actor$_setter_$context_$eq(Lakka/actor/ActorContext;)V
+#akka$actor$Actor$_setter_$self_$eq(Lakka/actor/ActorRef;)V
+#sender()Lakka/actor/ActorRef;
+#aroundReceive(Lscala/PartialFunction;Ljava/lang/Object;)V
+#aroundPreStart()V
+#aroundPostStop()V
+#aroundPreRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#aroundPostRestart(Ljava/lang/Throwable;)V
+#supervisorStrategy()Lakka/actor/SupervisorStrategy;
+#preStart()V
+#postStop()V
+#preRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#postRestart(Ljava/lang/Throwable;)V
+#graphs()Lscala/collection/mutable/LinkedHashMap;
+#receiveWithLogMessages()Lscala/PartialFunction;
+#unhandled(Ljava/lang/Object;)V
+#getAllGraphs()Lscala/collection/Iterable;
+#getGraph(Lorg/apache/flink/api/common/JobID;)Lscala/Option;
+#org$apache$flink$runtime$jobmanager$MemoryArchivist$$trimHistory()V
+#<init>(I)V
@0.9.0
+#log()Lgrizzled/slf4j/Logger;
+#finishedCnt()I
+#finishedCnt_$eq(I)V
+#canceledCnt()I
+#canceledCnt_$eq(I)V
+#failedCnt()I
+#failedCnt_$eq(I)V
-#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
-#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
-#log()Lakka/event/LoggingAdapter;
-#getAllGraphs()Lscala/collection/Iterable;
-#getGraph(Lorg/apache/flink/api/common/JobID;)Lscala/Option;
@0.10.0
+#org$apache$flink$runtime$LogMessages$$super$receive()Lscala/PartialFunction;
+#decorateMessage(Ljava/lang/Object;)Ljava/lang/Object;
+#handleMessage()Lscala/PartialFunction;
+#org$apache$flink$runtime$jobmanager$MemoryArchivist$$handleWebServerInfoMessage(Lorg/apache/flink/runtime/messages/webmonitor/InfoMessage;Lakka/actor/ActorRef;)V
-#finishedCnt()I
-#finishedCnt_$eq(I)V
-#canceledCnt()I
-#canceledCnt_$eq(I)V
-#failedCnt()I
-#failedCnt_$eq(I)V
-#receiveWithLogMessages()Lscala/PartialFunction;
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$19
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@0.10.2
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$19

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/messages/accumulators/AccumulatorMessage;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$19
@0.9.0
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;)Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$19

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$18
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;)V
@0.10.2
+#apply()Ljava/lang/Throwable;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/Throwable;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$18

+###org/apache/flink/runtime/jobmanager/SubmittedJobGraphStore$SubmittedJobGraphListener
@0.10.0
+#onAddedJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#onRemovedJobGraph(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/SubmittedJobGraphStore$SubmittedJobGraphListener

+###org/apache/flink/runtime/jobmanager/JobManagerCliOptions
@0.9.0
+#<init>()V
+#getConfigDir()Ljava/lang/String;
+#setConfigDir(Ljava/lang/String;)V
+#getJobManagerMode()Lorg/apache/flink/runtime/jobmanager/JobManagerMode;
+#setJobManagerMode(Ljava/lang/String;)V
+#getStreamingMode()Lorg/apache/flink/runtime/StreamingMode;
+#setStreamingMode(Ljava/lang/String;)V
@0.10.0
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getWebUIPort()I
+#setWebUIPort(I)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManagerCliOptions

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$4
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$7
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.10.0
+#apply()Ljava/io/IOException;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/io/IOException;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$2
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;I)V
@0.9.0
+#apply()Lscala/Tuple2;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/lang/ClassLoader;)V
-#apply(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/ClassLoader;I)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;ZLorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
-#apply()Lscala/Tuple2;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/lang/ClassLoader;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$7$$anonfun$apply$4
@0.10.2
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$7;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$7$$anonfun$apply$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$10
@0.10.0
+#apply(Lorg/apache/flink/runtime/instance/Instance;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$10

+###org/apache/flink/runtime/jobmanager/JobInfo
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorRef;J)Lorg/apache/flink/runtime/jobmanager/JobInfo;
+#client()Lakka/actor/ActorRef;
+#start()J
+#end()J
+#end_$eq(J)V
+#duration()J
+#<init>(Lakka/actor/ActorRef;J)V
@0.10.0
+#apply(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/akka/ListeningBehaviour;JJ)Lorg/apache/flink/runtime/jobmanager/JobInfo;
+#listeningBehaviour()Lorg/apache/flink/runtime/akka/ListeningBehaviour;
+#sessionTimeout()J
+#sessionAlive()Z
+#sessionAlive_$eq(Z)V
+#lastActive()J
+#lastActive_$eq(J)V
+#toString()Ljava/lang/String;
+#setLastActive()V
+#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/akka/ListeningBehaviour;JJ)V
-#apply(Lakka/actor/ActorRef;J)Lorg/apache/flink/runtime/jobmanager/JobInfo;
-#<init>(Lakka/actor/ActorRef;J)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobInfo

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$5
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$10
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$10

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$5
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$6
@0.9.0
+#apply()Ljava/io/IOException;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/io/IOException;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
-#apply()Ljava/io/IOException;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/io/IOException;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$17
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/Throwable;)V
@0.10.2
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
-#apply()Ljava/lang/Throwable;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$17

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleError$2
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleError$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2$$anonfun$apply$mcV$sp$10
@0.10.0
+#apply(Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraph;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2$$anonfun$apply$mcV$sp$10

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$12
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$12

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$12
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$12

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$5
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/core/io/InputSplit;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$15
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$15

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$7
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$16
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
@0.10.2
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$16

+###org/apache/flink/runtime/jobmanager/JobManager
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/ExecutionMode;)V
+#shutdown()V
+#main([Ljava/lang/String;)V
+#initialize([Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/JobManager;
+#submitJob(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/client/JobSubmissionResult;
+#getInstanceManager()Lorg/apache/flink/runtime/instance/InstanceManager;
+#sendHeartbeat(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)V
+#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/types/IntegerRecord;)Lorg/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult;
+#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
+#cancelJob(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/client/JobCancelResult;
+#getJobProgress(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/client/JobProgressResult;
+#lookupConnectionInfo(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;
+#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
+#getNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/topology/NetworkTopology;
+#getRecommendedPollingInterval()Lorg/apache/flink/runtime/types/IntegerRecord;
+#getRecentJobs()Ljava/util/List;
+#getEvents(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/List;
+#killTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;)V
+#killInstance(Lorg/apache/flink/core/io/StringRecord;)V
+#isShutDown()Z
+#jobStatusHasChanged(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;Ljava/lang/String;)V
+#logBufferUtilization(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#getAvailableSlots()I
+#deploy(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/instance/Instance;Ljava/util/List;)V
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/types/IntegerRecord;)Lorg/apache/flink/runtime/jobmanager/splitassigner/InputSplitWrapper;
+#startInfoServer()V
+#getOldJobs()Ljava/util/List;
+#getArchive()Lorg/apache/flink/runtime/jobmanager/archive/ArchiveListener;
+#getNumberOfTaskTrackers()I
+#getInstances()Ljava/util/Map;
+#reportAccumulatorResult(Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;)V
+#getAccumulatorResults(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;
+#getAccumulators(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/Map;
@0.7.0-hadoop2-incubating
+#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)Z
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/core/io/InputSplit;
+#jobStatusHasChanged(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/JobStatus;Ljava/lang/String;)V
+#getTotalNumberOfRegisteredSlots()I
+#getNumberOfSlotsAvailableToScheduler()I
+#getNumberOfTaskManagers()I
+#getCurrentJobs()Ljava/util/Map;
+#getRecentExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#sendHeartbeat(Lorg/apache/flink/runtime/instance/InstanceID;)Z
+#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/instance/InstanceID;
+#getBlobServerPort()I
-#sendHeartbeat(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)V
-#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/types/IntegerRecord;)Lorg/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult;
-#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
-#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
-#getNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/topology/NetworkTopology;
-#killTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;)V
-#killInstance(Lorg/apache/flink/core/io/StringRecord;)V
-#jobStatusHasChanged(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;Ljava/lang/String;)V
-#logBufferUtilization(Lorg/apache/flink/runtime/jobgraph/JobID;)V
-#getAvailableSlots()I
-#deploy(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/instance/Instance;Ljava/util/List;)V
-#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/types/IntegerRecord;)Lorg/apache/flink/runtime/jobmanager/splitassigner/InputSplitWrapper;
-#getNumberOfTaskTrackers()I
@0.8.1
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/jobmanager/InputSplitWrapper;
-#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/core/io/InputSplit;
@0.9.0-milestone-1
+#getJobManagerRemoteReference(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorRef;
+#getJobManagerRemoteReference(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#getJobManagerRemoteReference(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#getJobManagerRemoteReferenceFuture(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#getLocalJobManagerAkkaURL()Ljava/lang/String;
+#getRemoteJobManagerAkkaURL(Ljava/net/InetSocketAddress;)Ljava/lang/String;
+#startActor(Lakka/actor/Props;Lakka/actor/ActorSystem;)Lakka/actor/ActorRef;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lscala/Option;Lscala/Option;)Lscala/Tuple2;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;)Lscala/Tuple2;
+#createJobManagerComponents(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple10;
+#parseArgs([Ljava/lang/String;)Lscala/Tuple4;
+#runJobManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Ljava/lang/String;I)V
+#PROFILER_NAME()Ljava/lang/String;
+#ARCHIVE_NAME()Ljava/lang/String;
+#EVENT_COLLECTOR_NAME()Ljava/lang/String;
+#JOB_MANAGER_NAME()Ljava/lang/String;
+#RUNTIME_FAILURE_RETURN_CODE()I
+#STARTUP_FAILURE_RETURN_CODE()I
+#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
+#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
+#log()Lakka/event/LoggingAdapter;
+#receive()Lscala/PartialFunction;
+#context()Lakka/actor/ActorContext;
+#self()Lakka/actor/ActorRef;
+#akka$actor$Actor$_setter_$context_$eq(Lakka/actor/ActorContext;)V
+#akka$actor$Actor$_setter_$self_$eq(Lakka/actor/ActorRef;)V
+#sender()Lakka/actor/ActorRef;
+#aroundReceive(Lscala/PartialFunction;Ljava/lang/Object;)V
+#aroundPreStart()V
+#aroundPostStop()V
+#aroundPreRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#aroundPostRestart(Ljava/lang/Throwable;)V
+#supervisorStrategy()Lakka/actor/SupervisorStrategy;
+#preRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#postRestart(Ljava/lang/Throwable;)V
+#flinkConfiguration()Lorg/apache/flink/configuration/Configuration;
+#instanceManager()Lorg/apache/flink/runtime/instance/InstanceManager;
+#scheduler()Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;
+#libraryCacheManager()Lorg/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager;
+#archive()Lakka/actor/ActorRef;
+#accumulatorManager()Lorg/apache/flink/runtime/jobmanager/accumulators/AccumulatorManager;
+#profiler()Lscala/Option;
+#defaultExecutionRetries()I
+#delayBetweenRetries()J
+#timeout()Lscala/concurrent/duration/FiniteDuration;
+#LOG()Lorg/slf4j/Logger;
+#currentJobs()Lscala/collection/mutable/HashMap;
+#preStart()V
+#postStop()V
+#receiveWithLogMessages()Lscala/PartialFunction;
+#org$apache$flink$runtime$jobmanager$JobManager$$submitJob(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)V
+#unhandled(Ljava/lang/Object;)V
+#org$apache$flink$runtime$jobmanager$JobManager$$removeJob(Lorg/apache/flink/api/common/JobID;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/instance/InstanceManager;Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Lorg/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager;Lakka/actor/ActorRef;Lorg/apache/flink/runtime/jobmanager/accumulators/AccumulatorManager;Lscala/Option;IJLscala/concurrent/duration/FiniteDuration;)V
-#<init>(Lorg/apache/flink/runtime/ExecutionMode;)V
-#shutdown()V
-#submitJob(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/client/JobSubmissionResult;
-#cancelJob(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/client/JobCancelResult;
-#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)Z
-#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/jobmanager/InputSplitWrapper;
-#jobStatusHasChanged(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobgraph/JobStatus;Ljava/lang/String;)V
-#getJobProgress(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/client/JobProgressResult;
-#lookupConnectionInfo(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;
-#isShutDown()Z
-#getInstanceManager()Lorg/apache/flink/runtime/instance/InstanceManager;
-#getRecommendedPollingInterval()Lorg/apache/flink/runtime/types/IntegerRecord;
-#getRecentJobs()Ljava/util/List;
-#getEvents(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/List;
-#getTotalNumberOfRegisteredSlots()I
-#getNumberOfSlotsAvailableToScheduler()I
-#startInfoServer()V
-#getOldJobs()Ljava/util/List;
-#getArchive()Lorg/apache/flink/runtime/jobmanager/archive/ArchiveListener;
-#getNumberOfTaskManagers()I
-#getInstances()Ljava/util/Map;
-#reportAccumulatorResult(Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;)V
-#getAccumulatorResults(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;
-#getAccumulators(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/Map;
-#getCurrentJobs()Ljava/util/Map;
-#getRecentExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
-#sendHeartbeat(Lorg/apache/flink/runtime/instance/InstanceID;)Z
-#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/instance/InstanceID;
-#initialize([Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/JobManager;
-#getBlobServerPort()I
@0.9.0
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lscala/Option;Lscala/Option;Lorg/apache/flink/runtime/StreamingMode;)Lscala/Tuple2;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lorg/apache/flink/runtime/StreamingMode;)Lscala/Tuple2;
+#createJobManagerComponents(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple9;
+#parseArgs([Ljava/lang/String;)Lscala/Tuple5;
+#runJobManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/String;I)V
+#LOG()Lgrizzled/slf4j/Logger;
+#log()Lgrizzled/slf4j/Logger;
+#mode()Lorg/apache/flink/runtime/StreamingMode;
+#org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage(Lorg/apache/flink/runtime/messages/checkpoint/AbstractCheckpointMessage;)V
+#org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage(Lorg/apache/flink/runtime/messages/accumulators/AccumulatorMessage;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/instance/InstanceManager;Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Lorg/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager;Lakka/actor/ActorRef;Lorg/apache/flink/runtime/jobmanager/accumulators/AccumulatorManager;IJLscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/StreamingMode;)V
-#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lscala/Option;Lscala/Option;)Lscala/Tuple2;
-#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;)Lscala/Tuple2;
-#createJobManagerComponents(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple10;
-#parseArgs([Ljava/lang/String;)Lscala/Tuple4;
-#runJobManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Ljava/lang/String;I)V
-#PROFILER_NAME()Ljava/lang/String;
-#EVENT_COLLECTOR_NAME()Ljava/lang/String;
-#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
-#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
-#log()Lakka/event/LoggingAdapter;
-#profiler()Lscala/Option;
-#LOG()Lorg/slf4j/Logger;
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/instance/InstanceManager;Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Lorg/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager;Lakka/actor/ActorRef;Lorg/apache/flink/runtime/jobmanager/accumulators/AccumulatorManager;Lscala/Option;IJLscala/concurrent/duration/FiniteDuration;)V
@0.10.0
+#getJobManagerAkkaURL$default$2()Lscala/Option;
+#getLocalJobManagerAkkaURL$default$1()Lscala/Option;
+#getRemoteJobManagerAkkaURL$default$2()Lscala/Option;
+#getJobManagerActorRef(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorRef;
+#getJobManagerActorRef(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#getJobManagerActorRef(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#getJobManagerActorRefFuture(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#getJobManagerAkkaURL(Lakka/actor/ActorSystem;Lscala/Option;)Ljava/lang/String;
+#getLocalJobManagerAkkaURL(Lscala/Option;)Ljava/lang/String;
+#getRemoteJobManagerAkkaURL(Lorg/apache/flink/configuration/Configuration;)Ljava/lang/String;
+#getRemoteJobManagerAkkaURL(Ljava/net/InetSocketAddress;Lscala/Option;)Ljava/lang/String;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lscala/Option;Lscala/Option;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/Class;Ljava/lang/Class;)Lscala/Tuple2;
+#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/Class;Ljava/lang/Class;)Lscala/Tuple2;
+#createJobManagerComponents(Lorg/apache/flink/configuration/Configuration;Lscala/Option;)Lscala/Tuple11;
+#startActorSystemAndJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/String;ILjava/lang/Class;Ljava/lang/Class;)Lscala/Tuple4;
+#org$apache$flink$runtime$LogMessages$$super$receive()Lscala/PartialFunction;
+#org$apache$flink$runtime$LeaderSessionMessageFilter$$super$receive()Lscala/PartialFunction;
+#org$apache$flink$runtime$LeaderSessionMessageFilter$$super$decorateMessage(Ljava/lang/Object;)Ljava/lang/Object;
+#decorateMessage(Ljava/lang/Object;)Ljava/lang/Object;
+#executionContext()Lscala/concurrent/ExecutionContext;
+#leaderElectionService()Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;
+#submittedJobGraphs()Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraphStore;
+#checkpointRecoveryFactory()Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;
+#recoveryMode()Lorg/apache/flink/runtime/jobmanager/RecoveryMode;
+#leaderSessionID()Lscala/Option;
+#leaderSessionID_$eq(Lscala/Option;)V
+#futuresToComplete()Lscala/Option;
+#futuresToComplete_$eq(Lscala/Option;)V
+#webMonitorPort()I
+#handleMessage()Lscala/PartialFunction;
+#org$apache$flink$runtime$jobmanager$JobManager$$submitJob(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/jobmanager/JobInfo;Z)V
+#org$apache$flink$runtime$jobmanager$JobManager$$submitJob$default$3()Z
+#org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage(Lorg/apache/flink/runtime/messages/webmonitor/InfoMessage;Lakka/actor/ActorRef;)V
+#org$apache$flink$runtime$jobmanager$JobManager$$removeJob(Lorg/apache/flink/api/common/JobID;Z)Lscala/Option;
+#org$apache$flink$runtime$jobmanager$JobManager$$cancelAndClearEverything(Ljava/lang/Throwable;Z)Lscala/collection/Seq;
+#grantLeadership(Ljava/util/UUID;)V
+#revokeLeadership()V
+#onAddedJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#onRemovedJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#getAddress()Ljava/lang/String;
+#handleError(Ljava/lang/Exception;)V
+#org$apache$flink$runtime$jobmanager$JobManager$$updateAccumulators(Lscala/collection/Seq;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Lscala/concurrent/ExecutionContext;Lorg/apache/flink/runtime/instance/InstanceManager;Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Lorg/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager;Lakka/actor/ActorRef;IJLscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/StreamingMode;Lorg/apache/flink/runtime/leaderelection/LeaderElectionService;Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraphStore;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;)V
-#getJobManagerRemoteReference(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorRef;
-#getJobManagerRemoteReference(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
-#getJobManagerRemoteReference(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
-#getJobManagerRemoteReferenceFuture(Ljava/net/InetSocketAddress;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
-#getLocalJobManagerAkkaURL()Ljava/lang/String;
-#getRemoteJobManagerAkkaURL(Ljava/net/InetSocketAddress;)Ljava/lang/String;
-#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lscala/Option;Lscala/Option;Lorg/apache/flink/runtime/StreamingMode;)Lscala/Tuple2;
-#startJobManagerActors(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Lorg/apache/flink/runtime/StreamingMode;)Lscala/Tuple2;
-#createJobManagerComponents(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple9;
-#accumulatorManager()Lorg/apache/flink/runtime/jobmanager/accumulators/AccumulatorManager;
-#receiveWithLogMessages()Lscala/PartialFunction;
-#org$apache$flink$runtime$jobmanager$JobManager$$submitJob(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)V
-#org$apache$flink$runtime$jobmanager$JobManager$$removeJob(Lorg/apache/flink/api/common/JobID;)V
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/instance/InstanceManager;Lorg/apache/flink/runtime/jobmanager/scheduler/Scheduler;Lorg/apache/flink/runtime/execution/librarycache/BlobLibraryCacheManager;Lakka/actor/ActorRef;Lorg/apache/flink/runtime/jobmanager/accumulators/AccumulatorManager;IJLscala/concurrent/duration/FiniteDuration;Lorg/apache/flink/runtime/StreamingMode;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$22
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lakka/actor/ActorRef;)V
@0.10.2
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/instance/InstanceID;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$22

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#org$apache$flink$runtime$jobmanager$JobManager$$anonfun$$anonfun$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$21
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/instance/InstanceID;)V
@0.10.2
+#apply()Ljava/lang/Throwable;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/Throwable;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/instance/InstanceID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$21

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#org$apache$flink$runtime$jobmanager$JobManager$$anonfun$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;Ljava/lang/Throwable;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/jobmanager/JobInfo;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$7
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$7

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$1
@0.10.0
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$3
@0.10.0
+#apply(Lorg/apache/flink/runtime/webmonitor/WebMonitor;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1
@0.9.0-milestone-1
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$3
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
-#apply(Lscala/Tuple2;)Z
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$updateAccumulators$1
@0.10.0
+#apply(Lorg/apache/flink/runtime/accumulators/AccumulatorSnapshot;)Ljava/lang/Object;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$updateAccumulators$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$9
@0.10.0
+#apply()Lscala/collection/Seq;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$9

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$createJobStatusOverview$1
@0.10.0
+#apply(Lscala/Tuple2;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lscala/runtime/IntRef;Lscala/runtime/IntRef;Lscala/runtime/IntRef;Lscala/runtime/IntRef;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$createJobStatusOverview$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$24
@0.10.0
+#apply()Lscala/runtime/Nothing$;
+#apply()Ljava/lang/Object;
+#<init>([Ljava/lang/String;Lscopt/OptionParser;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$24

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$4
@0.10.0
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lakka/actor/ActorRef;[Lorg/apache/flink/runtime/messages/webmonitor/JobDetails;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$13
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;)V
@0.10.2
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraph;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$13

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$6
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$3
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5$$anonfun$apply$mcV$sp$14
@0.10.2
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5$$anonfun$apply$mcV$sp$14

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$18
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$18

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$8
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
-#apply()Ljava/lang/Throwable;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$8

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2$$anonfun$apply$mcV$sp$7
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$2$$anonfun$apply$mcV$sp$2$$anonfun$apply$mcV$sp$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$10
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$10

+###org/apache/flink/runtime/jobmanager/JobManagerMode
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/runtime/jobmanager/JobManagerMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobmanager/JobManagerMode;
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManagerMode

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$2
@0.10.0
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lakka/actor/ActorRef;Lorg/apache/flink/runtime/messages/webmonitor/JobsWithIDsOverview;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleInfoRequestMessage$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$5
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$liftedTree1$1$2
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
-#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$liftedTree1$1$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$26
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$26

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$2
@0.9.0-milestone-1
+#run()V
+#run()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Ljava/lang/String;I)V
@0.9.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/String;I)V
-#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;Ljava/lang/String;I)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1$$anonfun$apply$mcV$sp$20
@0.10.2
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1$$anonfun$apply$mcV$sp$20

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$3
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$preStart$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$26
@0.10.2
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/String;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$26

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$20
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/Throwable;)V
@0.10.2
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;)V
-#apply()Ljava/lang/Throwable;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$20

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$6
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>()V
-#apply()Ljava/lang/Throwable;
-#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$main$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$2
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorRef;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.9.0
+#apply(Lorg/apache/flink/runtime/instance/Instance;)V
-#apply(Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$postStop$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$liftedTree1$1$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
-#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$liftedTree1$1$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$6
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$startActorSystemAndJobManagerActors$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1$$anonfun$apply$mcV$sp$24
@0.10.2
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1$$anonfun$apply$mcV$sp$24

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5$$anonfun$apply$mcV$sp$13
@0.10.2
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5$$anonfun$apply$mcV$sp$13

+###org/apache/flink/runtime/jobmanager/StandaloneSubmittedJobGraphStore
@0.10.0
+#<init>()V
+#start(Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraphStore$SubmittedJobGraphListener;)V
+#stop()V
+#putJobGraph(Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraph;)V
+#removeJobGraph(Lorg/apache/flink/api/common/JobID;)V
+#recoverJobGraph(Lorg/apache/flink/api/common/JobID;)Lscala/Option;
+#recoverJobGraphs()Ljava/util/List;
@1.14.0
-###org/apache/flink/runtime/jobmanager/StandaloneSubmittedJobGraphStore

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$7
@0.10.0
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;Lscala/Option;)V
@0.10.2
+#org$apache$flink$runtime$jobmanager$JobManager$$anonfun$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1;
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$6
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1;)V
@1.14.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$mcV$sp$6

+###org/apache/flink/runtime/execution/librarycache/FallbackLibraryCacheManager
@0.7.0-hadoop2-incubating
+#<init>()V
+#getClassLoader(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/lang/ClassLoader;
+#getFile(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/io/File;
+#register(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
+#unregister(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#shutdown()V
@0.8.0
+#registerJob(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
+#registerTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
+#unregisterJob(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#unregisterTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#register(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
-#unregister(Lorg/apache/flink/runtime/jobgraph/JobID;)V
@0.9.0-milestone-1
+#getClassLoader(Lorg/apache/flink/api/common/JobID;)Ljava/lang/ClassLoader;
+#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)V
+#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
+#unregisterJob(Lorg/apache/flink/api/common/JobID;)V
+#unregisterTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#getClassLoader(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/lang/ClassLoader;
-#registerJob(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Collection;)V
-#registerTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
-#unregisterJob(Lorg/apache/flink/runtime/jobgraph/JobID;)V
-#unregisterTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@0.10.0
+#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;Ljava/util/Collection;)V
+#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;Ljava/util/Collection;)V
-#registerJob(Lorg/apache/flink/api/common/JobID;Ljava/util/Collection;)V
-#registerTask(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/Collection;)V
@1.14.0
-###org/apache/flink/runtime/execution/librarycache/FallbackLibraryCacheManager

+###org/apache/flink/runtime/execution/ExecutionObserver
@0.6-hadoop2-incubating
+#executionStateChanged(Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#userThreadStarted(Ljava/lang/Thread;)V
+#userThreadFinished(Ljava/lang/Thread;)V
+#isCanceled()Z
@0.7.0-hadoop2-incubating
-#userThreadStarted(Ljava/lang/Thread;)V
-#userThreadFinished(Ljava/lang/Thread;)V
@1.14.0
-###org/apache/flink/runtime/execution/ExecutionObserver

+###org/apache/flink/runtime/state/StateHandle
@0.9.0-milestone-1
+#getState(Ljava/lang/ClassLoader;)Ljava/util/Map;
@0.9.0
+#getState()Ljava/lang/Object;
+#discardState()V
-#getState(Ljava/lang/ClassLoader;)Ljava/util/Map;
@0.10.0
+#getState(Ljava/lang/ClassLoader;)Ljava/lang/Object;
-#getState()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/state/StateHandle

+###org/apache/flink/runtime/state/LocalStateHandle
@0.9.0-milestone-1
+#<init>(Ljava/util/Map;)V
+#getState(Ljava/lang/ClassLoader;)Ljava/util/Map;
@0.9.0
+#<init>(Ljava/io/Serializable;)V
+#getState()Ljava/io/Serializable;
+#discardState()V
+#createProvider()Lorg/apache/flink/runtime/state/LocalStateHandle$LocalStateHandleProvider;
+#getState()Ljava/lang/Object;
-#<init>(Ljava/util/Map;)V
-#getState(Ljava/lang/ClassLoader;)Ljava/util/Map;
@0.10.0
+#getState(Ljava/lang/ClassLoader;)Ljava/io/Serializable;
+#getState(Ljava/lang/ClassLoader;)Ljava/lang/Object;
-#getState()Ljava/io/Serializable;
-#createProvider()Lorg/apache/flink/runtime/state/LocalStateHandle$LocalStateHandleProvider;
-#getState()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/state/LocalStateHandle

+###org/apache/flink/runtime/state/KvState
@0.10.0
+#setCurrentKey(Ljava/lang/Object;)V
+#shapshot(JJ)Lorg/apache/flink/runtime/state/KvStateSnapshot;
+#size()I
+#dispose()V
@1.14.0
-###org/apache/flink/runtime/state/KvState

+###org/apache/flink/runtime/state/StateUtils
@0.9.0
+#setOperatorState(Lorg/apache/flink/runtime/jobgraph/tasks/OperatorStateCarrier;Lorg/apache/flink/runtime/state/StateHandle;)V
@0.10.0
+#setOperatorState(Lorg/apache/flink/runtime/jobgraph/tasks/StatefulTask;Lorg/apache/flink/runtime/state/StateHandle;)V
-#setOperatorState(Lorg/apache/flink/runtime/jobgraph/tasks/OperatorStateCarrier;Lorg/apache/flink/runtime/state/StateHandle;)V
@1.14.0
-###org/apache/flink/runtime/state/StateUtils

+###org/apache/flink/runtime/state/SerializedCheckpointData
@0.10.0
+#<init>(J[BI)V
+#getCheckpointId()J
+#getSerializedData()[B
+#getNumIds()I
+#fromDeque(Ljava/util/ArrayDeque;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)[Lorg/apache/flink/runtime/state/SerializedCheckpointData;
+#fromDeque(Ljava/util/ArrayDeque;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/runtime/util/DataOutputSerializer;)[Lorg/apache/flink/runtime/state/SerializedCheckpointData;
+#toDeque([Lorg/apache/flink/runtime/state/SerializedCheckpointData;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Ljava/util/ArrayDeque;
@1.14.0
-###org/apache/flink/runtime/state/SerializedCheckpointData

+###org/apache/flink/runtime/state/StateBackend$CheckpointStateOutputView
@0.10.0
+#<init>(Lorg/apache/flink/runtime/state/StateBackend$CheckpointStateOutputStream;)V
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/StateHandle;
+#close()V
@1.14.0
-###org/apache/flink/runtime/state/StateBackend$CheckpointStateOutputView

+###org/apache/flink/runtime/state/memory/MemHeapKvState
@0.10.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;Ljava/util/HashMap;)V
+#shapshot(JJ)Lorg/apache/flink/runtime/state/memory/MemoryHeapKvStateSnapshot;
+#shapshot(JJ)Lorg/apache/flink/runtime/state/KvStateSnapshot;
@1.14.0
-###org/apache/flink/runtime/state/memory/MemHeapKvState

+###org/apache/flink/runtime/state/memory/MemoryHeapKvStateSnapshot
@0.10.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;[BI)V
+#restoreState(Lorg/apache/flink/runtime/state/memory/MemoryStateBackend;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/memory/MemHeapKvState;
+#discardState()V
+#restoreState(Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/KvState;
@1.14.0
-###org/apache/flink/runtime/state/memory/MemoryHeapKvStateSnapshot

+###org/apache/flink/runtime/state/memory/MemoryStateBackend$MemoryCheckpointOutputStream
@0.10.0
+#<init>(I)V
+#write(I)V
+#write([BII)V
+#close()V
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
+#closeAndGetBytes()[B
@1.14.0
-###org/apache/flink/runtime/state/memory/MemoryStateBackend$MemoryCheckpointOutputStream

+###org/apache/flink/runtime/state/memory/SerializedStateHandle
@0.10.0
+#<init>(Ljava/lang/Object;)V
+#getState(Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#discardState()V
@1.14.0
-###org/apache/flink/runtime/state/memory/SerializedStateHandle

+###org/apache/flink/runtime/state/KvStateSnapshot
@0.10.0
+#restoreState(Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/KvState;
+#discardState()V
@1.14.0
-###org/apache/flink/runtime/state/KvStateSnapshot

+###org/apache/flink/runtime/state/AbstractHeapKvState
@0.10.0
+#value()Ljava/lang/Object;
+#update(Ljava/lang/Object;)V
+#setCurrentKey(Ljava/lang/Object;)V
+#size()I
+#dispose()V
+#getKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getValueSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.14.0
-###org/apache/flink/runtime/state/AbstractHeapKvState

+###org/apache/flink/runtime/state/StateBackend$CheckpointStateOutputStream
@0.10.0
+#<init>()V
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
@1.14.0
-###org/apache/flink/runtime/state/StateBackend$CheckpointStateOutputStream

+###org/apache/flink/runtime/state/filesystem/FileSerializableStateHandle
@0.10.0
+#<init>(Lorg/apache/flink/core/fs/Path;)V
+#getState(Ljava/lang/ClassLoader;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/state/filesystem/FileSerializableStateHandle

+###org/apache/flink/runtime/state/filesystem/FileStreamStateHandle
@0.10.0
+#<init>(Lorg/apache/flink/core/fs/Path;)V
+#getState(Ljava/lang/ClassLoader;)Ljava/io/InputStream;
+#getState(Ljava/lang/ClassLoader;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/state/filesystem/FileStreamStateHandle

+###org/apache/flink/runtime/state/filesystem/AbstractFileState
@0.10.0
+#getFilePath()Lorg/apache/flink/core/fs/Path;
+#discardState()V
@1.14.0
-###org/apache/flink/runtime/state/filesystem/AbstractFileState

+###org/apache/flink/runtime/state/filesystem/FsStateBackend$FsCheckpointStateOutputStream
@0.10.0
+#write(I)V
+#write([BII)V
+#flush()V
+#close()V
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/filesystem/FileStreamStateHandle;
+#closeAndGetPath()Lorg/apache/flink/core/fs/Path;
+#closeAndGetHandle()Lorg/apache/flink/runtime/state/StreamStateHandle;
@1.14.0
-###org/apache/flink/runtime/state/filesystem/FsStateBackend$FsCheckpointStateOutputStream

+###org/apache/flink/runtime/state/filesystem/FsHeapKvStateSnapshot
@0.10.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/core/fs/Path;)V
+#restoreState(Lorg/apache/flink/runtime/state/filesystem/FsStateBackend;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/filesystem/FsHeapKvState;
+#restoreState(Lorg/apache/flink/runtime/state/StateBackend;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;Ljava/lang/ClassLoader;)Lorg/apache/flink/runtime/state/KvState;
@1.14.0
-###org/apache/flink/runtime/state/filesystem/FsHeapKvStateSnapshot

+###org/apache/flink/runtime/state/filesystem/FsHeapKvState
@0.10.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;Lorg/apache/flink/runtime/state/filesystem/FsStateBackend;)V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;Ljava/util/HashMap;Lorg/apache/flink/runtime/state/filesystem/FsStateBackend;)V
+#shapshot(JJ)Lorg/apache/flink/runtime/state/filesystem/FsHeapKvStateSnapshot;
+#shapshot(JJ)Lorg/apache/flink/runtime/state/KvStateSnapshot;
@1.14.0
-###org/apache/flink/runtime/state/filesystem/FsHeapKvState

+###org/apache/flink/runtime/accumulators/AccumulatorRegistry$Metric
@0.10.0
+#values()[Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Metric;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/accumulators/AccumulatorRegistry$Metric;
@1.14.0
-###org/apache/flink/runtime/accumulators/AccumulatorRegistry$Metric

+###org/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter
@0.10.0
+#reportNumRecordsIn(J)V
+#reportNumRecordsOut(J)V
+#reportNumBytesIn(J)V
+#reportNumBytesOut(J)V
@1.14.0
-###org/apache/flink/runtime/accumulators/AccumulatorRegistry$Reporter

+###org/apache/flink/runtime/blob/BlobCache
@0.7.0-hadoop2-incubating
+#<init>(Ljava/net/InetSocketAddress;)V
+#getURL(Lorg/apache/flink/runtime/blob/BlobKey;)Ljava/net/URL;
+#delete(Lorg/apache/flink/runtime/blob/BlobKey;)V
+#getPort()I
+#shutdown()V
@0.8.1
+#<init>(Ljava/net/InetSocketAddress;Lorg/apache/flink/configuration/Configuration;)V
-#<init>(Ljava/net/InetSocketAddress;)V
@0.9.0-milestone-1
+#getStorageDir()Ljava/io/File;
@1.14.0
-###org/apache/flink/runtime/blob/BlobCache

+###org/apache/flink/runtime/LogMessages$class
@0.10.0
+#receive(Lorg/apache/flink/runtime/LogMessages;)Lscala/PartialFunction;
+#$init$(Lorg/apache/flink/runtime/LogMessages;)V
@1.14.0
-###org/apache/flink/runtime/LogMessages$class

+###org/apache/flink/runtime/zookeeper/StateStorageHelper
@0.10.0
+#store(Ljava/io/Serializable;)Lorg/apache/flink/runtime/state/StateHandle;
@1.14.0
-###org/apache/flink/runtime/zookeeper/StateStorageHelper

+###org/apache/flink/runtime/zookeeper/filesystem/FileSystemStateStorageHelper
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/core/fs/Path;Ljava/lang/String;)V
+#store(Ljava/io/Serializable;)Lorg/apache/flink/runtime/state/StateHandle;
@1.14.0
-###org/apache/flink/runtime/zookeeper/filesystem/FileSystemStateStorageHelper

+###org/apache/flink/runtime/LogMessages$$anon$1
@0.10.0
+#orElse(Lscala/PartialFunction;)Lscala/PartialFunction;
+#andThen(Lscala/Function1;)Lscala/PartialFunction;
+#lift()Lscala/Function1;
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#runWith(Lscala/Function1;)Lscala/Function1;
+#apply$mcZD$sp(D)Z
+#apply$mcDD$sp(D)D
+#apply$mcFD$sp(D)F
+#apply$mcID$sp(D)I
+#apply$mcJD$sp(D)J
+#apply$mcVD$sp(D)V
+#apply$mcZF$sp(F)Z
+#apply$mcDF$sp(F)D
+#apply$mcFF$sp(F)F
+#apply$mcIF$sp(F)I
+#apply$mcJF$sp(F)J
+#apply$mcVF$sp(F)V
+#apply$mcZI$sp(I)Z
+#apply$mcDI$sp(I)D
+#apply$mcFI$sp(I)F
+#apply$mcII$sp(I)I
+#apply$mcJI$sp(I)J
+#apply$mcVI$sp(I)V
+#apply$mcZJ$sp(J)Z
+#apply$mcDJ$sp(J)D
+#apply$mcFJ$sp(J)F
+#apply$mcIJ$sp(J)I
+#apply$mcJJ$sp(J)J
+#apply$mcVJ$sp(J)V
+#compose(Lscala/Function1;)Lscala/Function1;
+#compose$mcZD$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcDD$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcFD$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcID$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcJD$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcVD$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcZF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcDF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcFF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcIF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcJF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcVF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcZI$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcDI$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcFI$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcII$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcJI$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcVI$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcZJ$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcDJ$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcFJ$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcIJ$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcJJ$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcVJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcZD$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcDD$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcFD$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcID$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcJD$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcVD$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcZF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcDF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcFF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcIF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcJF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcVF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcZI$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcDI$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcFI$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcII$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcJI$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcVI$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcZJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcDJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcFJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcIJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcJJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcVJ$sp(Lscala/Function1;)Lscala/Function1;
+#toString()Ljava/lang/String;
+#isDefinedAt(Ljava/lang/Object;)Z
+#apply(Ljava/lang/Object;)V
+#org$apache$flink$runtime$LogMessages$$anon$$$outer()Lorg/apache/flink/runtime/LogMessages;
+#andThen(Lscala/Function1;)Lscala/Function1;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/LogMessages;Lscala/PartialFunction;)V
@1.14.0
-###org/apache/flink/runtime/LogMessages$$anon$1

+###org/apache/flink/runtime/messages/TaskMessages$
@0.9.0-milestone-1
+#<clinit>()V
+#createUpdateTaskMultiplePartitionInfos(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/List;Ljava/util/List;)Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskMultiplePartitionInfos;
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$

+###org/apache/flink/runtime/messages/JobClientMessages
@0.9.0-milestone-1
@0.10.0
+#getConnectionTimeout()Ljava/lang/Object;
+#getSubmissionTimeout()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages

+###org/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager
@0.9.0-milestone-1
+#taskManager()Lakka/actor/ActorRef;
+#connectionInfo()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
+#resources()Lorg/apache/flink/runtime/instance/HardwareDescription;
+#numberOfSlots()I
+#copy(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager;
+#copy$default$1()Lakka/actor/ActorRef;
+#copy$default$2()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
+#copy$default$3()Lorg/apache/flink/runtime/instance/HardwareDescription;
+#copy$default$4()I
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
@0.10.0
+#copy(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager;
+#copy$default$1()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
+#copy$default$2()Lorg/apache/flink/runtime/instance/HardwareDescription;
+#copy$default$3()I
+#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
-#taskManager()Lakka/actor/ActorRef;
-#copy(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager;
-#copy$default$1()Lakka/actor/ActorRef;
-#copy$default$2()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
-#copy$default$3()Lorg/apache/flink/runtime/instance/HardwareDescription;
-#copy$default$4()I
-#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager

+###org/apache/flink/runtime/messages/JobManagerMessages$CancelJob
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$CancelJob;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$CancelJob

+###org/apache/flink/runtime/messages/JobClientMessages$SubmissionTimeout$
@0.10.0
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$SubmissionTimeout$

+###org/apache/flink/runtime/messages/JobManagerMessages$RunningJobsStatus$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lscala/collection/Iterable;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RunningJobsStatus;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RunningJobsStatus;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RunningJobsStatus$

+###org/apache/flink/runtime/messages/TaskManagerMessages$StackTrace
@0.9.0-milestone-1
+#instanceID()Lorg/apache/flink/runtime/instance/InstanceID;
+#stackTrace()Ljava/lang/String;
+#copy(Lorg/apache/flink/runtime/instance/InstanceID;Ljava/lang/String;)Lorg/apache/flink/runtime/messages/TaskManagerMessages$StackTrace;
+#copy$default$1()Lorg/apache/flink/runtime/instance/InstanceID;
+#copy$default$2()Ljava/lang/String;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/instance/InstanceID;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$StackTrace

+###org/apache/flink/runtime/messages/JobManagerMessages$JobNotFound$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobNotFound;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$JobNotFound;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobNotFound$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestJobManagerStatus$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestJobManagerStatus$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestNextInputSplit
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#vertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#executionAttempt()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestNextInputSplit;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#copy$default$3()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestNextInputSplit

+###org/apache/flink/runtime/messages/TaskMessages$PartitionState
@0.9.0
+#taskExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#taskResultId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#partitionId()Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;
+#state()Lorg/apache/flink/runtime/execution/ExecutionState;
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/execution/ExecutionState;)Lorg/apache/flink/runtime/messages/TaskMessages$PartitionState;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy$default$2()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#copy$default$3()Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;
+#copy$default$4()Lorg/apache/flink/runtime/execution/ExecutionState;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$PartitionState

+###org/apache/flink/runtime/messages/Messages$
@0.9.0-milestone-1
+#<clinit>()V
@0.9.0
+#getAcknowledge()Lorg/apache/flink/runtime/messages/Messages$Acknowledge$;
@1.14.0
-###org/apache/flink/runtime/messages/Messages$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestTaskManagerInstance$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestTaskManagerInstance;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestTaskManagerInstance;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestTaskManagerInstance$

+###org/apache/flink/runtime/messages/JobManagerMessages$ScheduleOrUpdateConsumers
@0.9.0-milestone-1
+#jobId()Lorg/apache/flink/api/common/JobID;
+#partitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ScheduleOrUpdateConsumers;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ScheduleOrUpdateConsumers

+###org/apache/flink/runtime/messages/JobManagerMessages$JobManagerStatus
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobManagerStatus

+###org/apache/flink/runtime/messages/JobManagerMessages$JobStatusResponse
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobStatusResponse

+###org/apache/flink/runtime/messages/JobManagerMessages$JobFound
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#executionGraph()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobFound;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobFound

+###org/apache/flink/runtime/messages/ExecutionGraphMessages$
@0.9.0-milestone-1
+#<clinit>()V
+#org$apache$flink$runtime$messages$ExecutionGraphMessages$$timestampToString(J)Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/messages/ExecutionGraphMessages$

+###org/apache/flink/runtime/messages/JobManagerMessages$RevokeLeadership$
@0.10.0
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RevokeLeadership$

+###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskSinglePartitionInfo
@0.9.0-milestone-1
+#executionID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#resultId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#partitionInfo()Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;)Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskSinglePartitionInfo;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy$default$2()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#copy$default$3()Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskSinglePartitionInfo

+###org/apache/flink/runtime/messages/JobClientMessages$ConnectionTimeout$
@0.10.0
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$ConnectionTimeout$

+###org/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration;
+#unapply(Lorg/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.10.0
+#apply(Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#apply(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration;
-#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration$

+###org/apache/flink/runtime/messages/JobManagerMessages$GrantLeadership
@0.10.0
+#leaderSessionID()Lscala/Option;
+#copy(Lscala/Option;)Lorg/apache/flink/runtime/messages/JobManagerMessages$GrantLeadership;
+#copy$default$1()Lscala/Option;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lscala/Option;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$GrantLeadership

+###org/apache/flink/runtime/messages/JobManagerMessages$JobResultFailure$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/util/SerializedThrowable;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobResultFailure;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$JobResultFailure;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobResultFailure$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestJob
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestJob;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestJob

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestTotalNumberOfSlots$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestTotalNumberOfSlots$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestWebMonitorPort$
@0.10.0
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestWebMonitorPort$

+###org/apache/flink/runtime/messages/RegistrationMessages
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestRunningJobsStatus$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestRunningJobsStatus$

+###org/apache/flink/runtime/messages/TaskManagerMessages$JobManagerLeaderAddress$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/String;Ljava/util/UUID;)Lorg/apache/flink/runtime/messages/TaskManagerMessages$JobManagerLeaderAddress;
+#unapply(Lorg/apache/flink/runtime/messages/TaskManagerMessages$JobManagerLeaderAddress;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$JobManagerLeaderAddress$

+###org/apache/flink/runtime/messages/TaskMessages$FailTask$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;)Lorg/apache/flink/runtime/messages/TaskMessages$FailTask;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$FailTask;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$FailTask$

+###org/apache/flink/runtime/messages/TaskMessages$TaskOperationResult
@0.9.0-milestone-1
+#executionID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#success()Z
+#description()Ljava/lang/String;
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ZLjava/lang/String;)Lorg/apache/flink/runtime/messages/TaskMessages$TaskOperationResult;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy$default$2()Z
+#copy$default$3()Ljava/lang/String;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ZLjava/lang/String;)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Z)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$TaskOperationResult

+###org/apache/flink/runtime/messages/JobManagerMessages$ResponseArchive
@0.10.0
+#actor()Lakka/actor/ActorRef;
+#copy(Lakka/actor/ActorRef;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ResponseArchive;
+#copy$default$1()Lakka/actor/ActorRef;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ResponseArchive

+###org/apache/flink/runtime/messages/TaskMessages$TaskInFinalState
@0.9.0
+#executionID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/TaskMessages$TaskInFinalState;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$TaskInFinalState

+###org/apache/flink/runtime/messages/JobManagerMessages$LeaderSessionMessage$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/util/UUID;Ljava/lang/Object;)Lorg/apache/flink/runtime/messages/JobManagerMessages$LeaderSessionMessage;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$LeaderSessionMessage;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$LeaderSessionMessage$

+###org/apache/flink/runtime/messages/RegistrationMessages$RefuseRegistration$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/String;)Lorg/apache/flink/runtime/messages/RegistrationMessages$RefuseRegistration;
+#unapply(Lorg/apache/flink/runtime/messages/RegistrationMessages$RefuseRegistration;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$RefuseRegistration$

+###org/apache/flink/runtime/messages/ArchiveMessages$ArchiveExecutionGraph
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#graph()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Lorg/apache/flink/runtime/messages/ArchiveMessages$ArchiveExecutionGraph;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$ArchiveExecutionGraph

+###org/apache/flink/runtime/messages/ArchiveMessages$RequestArchivedJob$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/ArchiveMessages$RequestArchivedJob;
+#unapply(Lorg/apache/flink/runtime/messages/ArchiveMessages$RequestArchivedJob;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$RequestArchivedJob$

+###org/apache/flink/runtime/messages/ArchiveMessages$RequestArchivedJobs$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$RequestArchivedJobs$

+###org/apache/flink/runtime/messages/JobManagerMessages$ResponseWebMonitorPort
@0.10.0
+#port()Ljava/lang/Integer;
+#copy(Ljava/lang/Integer;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ResponseWebMonitorPort;
+#copy$default$1()Ljava/lang/Integer;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/Integer;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ResponseWebMonitorPort

+###org/apache/flink/runtime/messages/TaskMessages$SubmitTask$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;)Lorg/apache/flink/runtime/messages/TaskMessages$SubmitTask;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$SubmitTask;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$SubmitTask$

+###org/apache/flink/runtime/messages/ExecutionGraphMessages
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/runtime/messages/ExecutionGraphMessages

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestPartitionState$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestPartitionState;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestPartitionState;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestPartitionState$

+###org/apache/flink/runtime/messages/JobClientMessages$SubmitJobDetached$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/messages/JobClientMessages$SubmitJobDetached;
+#unapply(Lorg/apache/flink/runtime/messages/JobClientMessages$SubmitJobDetached;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$SubmitJobDetached$

+###org/apache/flink/runtime/messages/ExecutionGraphMessages$JobStatusChanged$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;JLjava/lang/Throwable;)Lorg/apache/flink/runtime/messages/ExecutionGraphMessages$JobStatusChanged;
+#unapply(Lorg/apache/flink/runtime/messages/ExecutionGraphMessages$JobStatusChanged;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/ExecutionGraphMessages$JobStatusChanged$

+###org/apache/flink/runtime/messages/JobManagerMessages$RemoveJob$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Z)Lorg/apache/flink/runtime/messages/JobManagerMessages$RemoveJob;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RemoveJob;)Lscala/Option;
+#apply$default$2()Z
+#$lessinit$greater$default$2()Z
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RemoveJob$

+###org/apache/flink/runtime/messages/JobManagerMessages$RemoveCachedJob
@0.10.0
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RemoveCachedJob;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RemoveCachedJob

+###org/apache/flink/runtime/messages/TaskManagerMessages$FatalError$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/String;Ljava/lang/Throwable;)Lorg/apache/flink/runtime/messages/TaskManagerMessages$FatalError;
+#unapply(Lorg/apache/flink/runtime/messages/TaskManagerMessages$FatalError;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$FatalError$

+###org/apache/flink/runtime/messages/TaskManagerMessages$
@0.9.0-milestone-1
+#<clinit>()V
+#getNotifyWhenRegisteredAtJobManagerMessage()Lorg/apache/flink/runtime/messages/TaskManagerMessages$NotifyWhenRegisteredAtJobManager$;
+#getRegisteredAtJobManagerMessage()Lorg/apache/flink/runtime/messages/TaskManagerMessages$RegisteredAtJobManager$;
@0.10.0
+#getNotifyWhenRegisteredAtJobManagerMessage()Lorg/apache/flink/runtime/messages/TaskManagerMessages$NotifyWhenRegisteredAtAnyJobManager$;
-#getNotifyWhenRegisteredAtJobManagerMessage()Lorg/apache/flink/runtime/messages/TaskManagerMessages$NotifyWhenRegisteredAtJobManager$;
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$

+###org/apache/flink/runtime/messages/ExecutionGraphMessages$JobStatusChanged
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#newJobStatus()Lorg/apache/flink/runtime/jobgraph/JobStatus;
+#timestamp()J
+#error()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;JLjava/lang/Throwable;)Lorg/apache/flink/runtime/messages/ExecutionGraphMessages$JobStatusChanged;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/jobgraph/JobStatus;
+#copy$default$3()J
+#copy$default$4()Ljava/lang/Throwable;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;JLjava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/messages/ExecutionGraphMessages$JobStatusChanged

+###org/apache/flink/runtime/messages/RequiresLeaderSessionID
@0.10.0
@1.14.0
-###org/apache/flink/runtime/messages/RequiresLeaderSessionID

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestPartitionState
@0.9.0
+#jobId()Lorg/apache/flink/api/common/JobID;
+#partitionId()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#taskExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#taskResultId()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestPartitionState;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;
+#copy$default$3()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy$default$4()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestPartitionState

+###org/apache/flink/runtime/messages/TaskManagerMessages$RegisteredAtJobManager$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$RegisteredAtJobManager$

+###org/apache/flink/runtime/messages/ExecutionGraphMessages$ExecutionStateChanged
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#vertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#taskName()Ljava/lang/String;
+#totalNumberOfSubTasks()I
+#subtaskIndex()I
+#executionID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#newExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#timestamp()J
+#optionalMessage()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;IILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;JLjava/lang/String;)Lorg/apache/flink/runtime/messages/ExecutionGraphMessages$ExecutionStateChanged;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#copy$default$3()Ljava/lang/String;
+#copy$default$4()I
+#copy$default$5()I
+#copy$default$6()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy$default$7()Lorg/apache/flink/runtime/execution/ExecutionState;
+#copy$default$8()J
+#copy$default$9()Ljava/lang/String;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;IILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;JLjava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/messages/ExecutionGraphMessages$ExecutionStateChanged

+###org/apache/flink/runtime/messages/JobManagerMessages$RemoveCachedJob$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RemoveCachedJob;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RemoveCachedJob;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RemoveCachedJob$

+###org/apache/flink/runtime/messages/TaskManagerMessages$SendHeartbeat$
@0.9.0-milestone-1
+#<clinit>()V
+#get()Lorg/apache/flink/runtime/messages/TaskManagerMessages$SendHeartbeat$;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$SendHeartbeat$

+###org/apache/flink/runtime/messages/ArchiveMessages$RequestJobCounts$
@0.9.0
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$RequestJobCounts$

+###org/apache/flink/runtime/messages/ArchiveMessages$RequestArchivedJob
@0.9.0
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/ArchiveMessages$RequestArchivedJob;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$RequestArchivedJob

+###org/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/instance/InstanceID;[B)Lorg/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat;
+#unapply(Lorg/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.10.0
+#apply(Lorg/apache/flink/runtime/instance/InstanceID;[BLscala/collection/Seq;)Lorg/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#apply(Lorg/apache/flink/runtime/instance/InstanceID;[B)Lorg/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat;
-#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat$

+###org/apache/flink/runtime/messages/RegistrationMessages$TriggerTaskManagerRegistration
@0.9.0-milestone-1
+#jobManagerAkkaURL()Ljava/lang/String;
+#timeout()Lscala/concurrent/duration/FiniteDuration;
+#deadline()Lscala/Option;
+#attempt()I
+#copy(Ljava/lang/String;Lscala/concurrent/duration/FiniteDuration;Lscala/Option;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$TriggerTaskManagerRegistration;
+#copy$default$1()Ljava/lang/String;
+#copy$default$2()Lscala/concurrent/duration/FiniteDuration;
+#copy$default$3()Lscala/Option;
+#copy$default$4()I
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/String;Lscala/concurrent/duration/FiniteDuration;Lscala/Option;I)V
@0.10.0
+#jobManagerURL()Ljava/lang/String;
-#jobManagerAkkaURL()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$TriggerTaskManagerRegistration

+###org/apache/flink/runtime/messages/Messages$Disconnect$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/String;)Lorg/apache/flink/runtime/messages/Messages$Disconnect;
+#unapply(Lorg/apache/flink/runtime/messages/Messages$Disconnect;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/Messages$Disconnect$

+###org/apache/flink/runtime/messages/RegistrationMessages$TriggerTaskManagerRegistration$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/String;Lscala/concurrent/duration/FiniteDuration;Lscala/Option;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$TriggerTaskManagerRegistration;
+#unapply(Lorg/apache/flink/runtime/messages/RegistrationMessages$TriggerTaskManagerRegistration;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$TriggerTaskManagerRegistration$

+###org/apache/flink/runtime/messages/ArchiveMessages$ArchivedJobs
@0.9.0-milestone-1
+#jobs()Lscala/collection/Iterable;
+#asJavaIterable()Ljava/lang/Iterable;
+#asJavaCollection()Ljava/util/Collection;
+#copy(Lscala/collection/Iterable;)Lorg/apache/flink/runtime/messages/ArchiveMessages$ArchivedJobs;
+#copy$default$1()Lscala/collection/Iterable;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lscala/collection/Iterable;)V
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$ArchivedJobs

+###org/apache/flink/runtime/messages/JobManagerMessages$CancellationSuccess$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$CancellationSuccess;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$CancellationSuccess;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$CancellationSuccess$

+###org/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#runtime()J
+#accumulatorResults()Ljava/util/Map;
+#copy(Lorg/apache/flink/api/common/JobID;JLjava/util/Map;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()J
+#copy$default$3()Ljava/util/Map;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;JLjava/util/Map;)V
@0.9.0
+#result()Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;
+#copy(Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess;
+#copy$default$1()Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;
+#<init>(Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;)V
-#jobID()Lorg/apache/flink/api/common/JobID;
-#runtime()J
-#accumulatorResults()Ljava/util/Map;
-#copy(Lorg/apache/flink/api/common/JobID;JLjava/util/Map;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess;
-#copy$default$1()Lorg/apache/flink/api/common/JobID;
-#copy$default$2()J
-#copy$default$3()Ljava/util/Map;
-#<init>(Lorg/apache/flink/api/common/JobID;JLjava/util/Map;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess

+###org/apache/flink/runtime/messages/JobClientMessages$SubmitJobDetached
@0.9.0-milestone-1
+#jobGraph()Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#copy(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/messages/JobClientMessages$SubmitJobDetached;
+#copy$default$1()Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$SubmitJobDetached

+###org/apache/flink/runtime/messages/JobManagerMessages$ResponseLeaderSessionID$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/util/UUID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ResponseLeaderSessionID;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$ResponseLeaderSessionID;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ResponseLeaderSessionID$

+###org/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat
@0.9.0-milestone-1
+#instanceID()Lorg/apache/flink/runtime/instance/InstanceID;
+#metricsReport()[B
+#copy(Lorg/apache/flink/runtime/instance/InstanceID;[B)Lorg/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat;
+#copy$default$1()Lorg/apache/flink/runtime/instance/InstanceID;
+#copy$default$2()[B
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/instance/InstanceID;[B)V
@0.10.0
+#accumulators()Lscala/collection/Seq;
+#copy(Lorg/apache/flink/runtime/instance/InstanceID;[BLscala/collection/Seq;)Lorg/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat;
+#copy$default$3()Lscala/collection/Seq;
+#<init>(Lorg/apache/flink/runtime/instance/InstanceID;[BLscala/collection/Seq;)V
-#copy(Lorg/apache/flink/runtime/instance/InstanceID;[B)Lorg/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat;
-#<init>(Lorg/apache/flink/runtime/instance/InstanceID;[B)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$Heartbeat

+###org/apache/flink/runtime/messages/TaskMessages
@0.9.0-milestone-1
+#createUpdateTaskMultiplePartitionInfos(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/util/List;Ljava/util/List;)Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskMultiplePartitionInfos;
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestTaskManagerInstance
@0.10.0
+#instanceID()Lorg/apache/flink/runtime/instance/InstanceID;
+#copy(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestTaskManagerInstance;
+#copy$default$1()Lorg/apache/flink/runtime/instance/InstanceID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/instance/InstanceID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestTaskManagerInstance

+###org/apache/flink/runtime/messages/TaskMessages$TaskMessage
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$TaskMessage

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestNumberRegisteredTaskManager$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestNumberRegisteredTaskManager$

+###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskSinglePartitionInfo$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;)Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskSinglePartitionInfo;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskSinglePartitionInfo;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskSinglePartitionInfo$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestBlobManagerPort$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestBlobManagerPort$

+###org/apache/flink/runtime/messages/ArchiveMessages$ArchivedJobs$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lscala/collection/Iterable;)Lorg/apache/flink/runtime/messages/ArchiveMessages$ArchivedJobs;
+#unapply(Lorg/apache/flink/runtime/messages/ArchiveMessages$ArchivedJobs;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$ArchivedJobs$

+###org/apache/flink/runtime/messages/JobManagerMessages$JobManagerStatusAlive$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobManagerStatusAlive$

+###org/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration
@0.9.0-milestone-1
+#jobManager()Lakka/actor/ActorRef;
+#instanceID()Lorg/apache/flink/runtime/instance/InstanceID;
+#blobPort()I
+#copy(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration;
+#copy$default$1()Lakka/actor/ActorRef;
+#copy$default$2()Lorg/apache/flink/runtime/instance/InstanceID;
+#copy$default$3()I
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)V
@0.10.0
+#copy(Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration;
+#copy$default$1()Lorg/apache/flink/runtime/instance/InstanceID;
+#copy$default$2()I
+#<init>(Lorg/apache/flink/runtime/instance/InstanceID;I)V
-#jobManager()Lakka/actor/ActorRef;
-#copy(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration;
-#copy$default$1()Lakka/actor/ActorRef;
-#copy$default$2()Lorg/apache/flink/runtime/instance/InstanceID;
-#copy$default$3()I
-#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)V
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$AcknowledgeRegistration

+###org/apache/flink/runtime/messages/JobManagerMessages$JobSubmitSuccess$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobSubmitSuccess;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$JobSubmitSuccess;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobSubmitSuccess$

+###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskExecutionState$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskExecutionState;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskExecutionState;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskExecutionState$

+###org/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered;
+#unapply(Lorg/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.10.0
+#apply(Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#apply(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered;
-#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered$

+###org/apache/flink/runtime/messages/RegistrationMessages$RegistrationMessage
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$RegistrationMessage

+###org/apache/flink/runtime/messages/checkpoint/TriggerCheckpoint
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)V
+#getTimestamp()J
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/messages/checkpoint/TriggerCheckpoint

+###org/apache/flink/runtime/messages/checkpoint/NotifyCheckpointComplete
@0.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)V
+#getTimestamp()J
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/messages/checkpoint/NotifyCheckpointComplete

+###org/apache/flink/runtime/messages/TaskMessages$FailIntermediateResultPartitions$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/TaskMessages$FailIntermediateResultPartitions;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$FailIntermediateResultPartitions;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$FailIntermediateResultPartitions$

+###org/apache/flink/runtime/messages/JobManagerMessages
@0.9.0-milestone-1
+#getJobManagerStatusAlive()Ljava/lang/Object;
+#getRequestJobManagerStatus()Ljava/lang/Object;
+#getRequestRegisteredTaskManagers()Ljava/lang/Object;
+#getRequestRunningJobsStatus()Ljava/lang/Object;
+#getRequestRunningJobs()Ljava/lang/Object;
+#getRequestBlobManagerPort()Ljava/lang/Object;
+#getRequestTotalNumberOfSlots()Ljava/lang/Object;
+#getRequestNumberRegisteredTaskManager()Ljava/lang/Object;
@0.10.0
+#getRequestWebMonitorPort()Ljava/lang/Object;
+#getRecoverAllJobs()Ljava/lang/Object;
+#getRequestArchive()Ljava/lang/Object;
+#getRequestLeaderSessionID()Ljava/lang/Object;
+#getRequestJobStatus(Lorg/apache/flink/api/common/JobID;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages

+###org/apache/flink/runtime/messages/JobManagerMessages$TaskManagerInstance
@0.10.0
+#instance()Lscala/Option;
+#copy(Lscala/Option;)Lorg/apache/flink/runtime/messages/JobManagerMessages$TaskManagerInstance;
+#copy$default$1()Lscala/Option;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lscala/Option;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$TaskManagerInstance

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestJobStatus
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestJobStatus;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestJobStatus

+###org/apache/flink/runtime/messages/JobManagerMessages$SubmitJob
@0.9.0-milestone-1
+#jobGraph()Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#registerForEvents()Z
+#copy(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/runtime/messages/JobManagerMessages$SubmitJob;
+#copy$default$1()Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#copy$default$2()Z
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)V
@0.10.0
+#listeningBehaviour()Lorg/apache/flink/runtime/akka/ListeningBehaviour;
+#copy(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/akka/ListeningBehaviour;)Lorg/apache/flink/runtime/messages/JobManagerMessages$SubmitJob;
+#copy$default$2()Lorg/apache/flink/runtime/akka/ListeningBehaviour;
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/akka/ListeningBehaviour;)V
-#registerForEvents()Z
-#copy(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/runtime/messages/JobManagerMessages$SubmitJob;
-#copy$default$2()Z
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$SubmitJob

+###org/apache/flink/runtime/messages/Messages$Disconnect
@0.9.0-milestone-1
+#reason()Ljava/lang/String;
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/messages/Messages$Disconnect;
+#copy$default$1()Ljava/lang/String;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/messages/Messages$Disconnect

+###org/apache/flink/runtime/messages/JobManagerMessages$RecoverJob
@0.10.0
+#jobId()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RecoverJob;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RecoverJob

+###org/apache/flink/runtime/messages/JobManagerMessages$RunningJobs
@0.9.0-milestone-1
+#runningJobs()Lscala/collection/Iterable;
+#asJavaIterable()Ljava/lang/Iterable;
+#copy(Lscala/collection/Iterable;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RunningJobs;
+#copy$default$1()Lscala/collection/Iterable;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lscala/collection/Iterable;)V
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RunningJobs

+###org/apache/flink/runtime/messages/TaskManagerMessages$NotifyWhenRegisteredAtAnyJobManager$
@0.10.0
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$NotifyWhenRegisteredAtAnyJobManager$

+###org/apache/flink/runtime/messages/JobManagerMessages$CurrentJobStatus
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#status()Lorg/apache/flink/runtime/jobgraph/JobStatus;
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;)Lorg/apache/flink/runtime/messages/JobManagerMessages$CurrentJobStatus;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/jobgraph/JobStatus;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$CurrentJobStatus

+###org/apache/flink/runtime/messages/JobManagerMessages$JobResponse
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobResponse

+###org/apache/flink/runtime/messages/JobManagerMessages$TaskManagerInstance$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lscala/Option;)Lorg/apache/flink/runtime/messages/JobManagerMessages$TaskManagerInstance;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$TaskManagerInstance;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$TaskManagerInstance$

+###org/apache/flink/runtime/messages/JobManagerMessages$
@0.9.0-milestone-1
+#<clinit>()V
+#getRequestNumberRegisteredTaskManager()Ljava/lang/Object;
+#getRequestTotalNumberOfSlots()Ljava/lang/Object;
+#getRequestBlobManagerPort()Ljava/lang/Object;
+#getRequestRunningJobs()Ljava/lang/Object;
+#getRequestRunningJobsStatus()Ljava/lang/Object;
+#getRequestRegisteredTaskManagers()Ljava/lang/Object;
+#getRequestJobManagerStatus()Ljava/lang/Object;
+#getJobManagerStatusAlive()Ljava/lang/Object;
@0.10.0
+#getRequestJobStatus(Lorg/apache/flink/api/common/JobID;)Ljava/lang/Object;
+#getRequestLeaderSessionID()Ljava/lang/Object;
+#getRequestArchive()Ljava/lang/Object;
+#getRecoverAllJobs()Ljava/lang/Object;
+#getRequestWebMonitorPort()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$

+###org/apache/flink/runtime/messages/JobClientMessages$
@0.9.0-milestone-1
+#<clinit>()V
@0.10.0
+#getSubmissionTimeout()Ljava/lang/Object;
+#getConnectionTimeout()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$

+###org/apache/flink/runtime/messages/TaskManagerMessages$StackTrace$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/instance/InstanceID;Ljava/lang/String;)Lorg/apache/flink/runtime/messages/TaskManagerMessages$StackTrace;
+#unapply(Lorg/apache/flink/runtime/messages/TaskManagerMessages$StackTrace;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$StackTrace$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestRunningJobs$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestRunningJobs$

+###org/apache/flink/runtime/messages/Messages
@0.9.0-milestone-1
@0.9.0
+#getAcknowledge()Lorg/apache/flink/runtime/messages/Messages$Acknowledge$;
@1.14.0
-###org/apache/flink/runtime/messages/Messages

+###org/apache/flink/runtime/messages/RegistrationMessages$RefuseRegistration
@0.9.0-milestone-1
+#reason()Ljava/lang/String;
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/messages/RegistrationMessages$RefuseRegistration;
+#copy$default$1()Ljava/lang/String;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$RefuseRegistration

+###org/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait;
+#unapply(Lorg/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait;)Lscala/Option;
+#$lessinit$greater$default$2()Z
+#apply$default$2()Z
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
+#apply(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#apply(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait;
-#$lessinit$greater$default$2()Z
-#apply$default$2()Z
-#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait$

+###org/apache/flink/runtime/messages/accumulators/RequestAccumulatorResultsStringified
@0.9.0
+#andThen(Lscala/Function1;)Lscala/Function1;
+#compose(Lscala/Function1;)Lscala/Function1;
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/accumulators/RequestAccumulatorResultsStringified;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/RequestAccumulatorResultsStringified

+###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsErroneous$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Ljava/lang/Exception;)Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultsErroneous;
+#unapply(Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultsErroneous;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsErroneous$

+###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsErroneous
@0.9.0
+#tupled()Lscala/Function1;
+#curried()Lscala/Function1;
+#jobID()Lorg/apache/flink/api/common/JobID;
+#cause()Ljava/lang/Exception;
+#copy(Lorg/apache/flink/api/common/JobID;Ljava/lang/Exception;)Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultsErroneous;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Ljava/lang/Exception;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsErroneous

+###org/apache/flink/runtime/messages/accumulators/AccumulatorResultStringsFound$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;)Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultStringsFound;
+#unapply(Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultStringsFound;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/AccumulatorResultStringsFound$

+###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsFound$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;)Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultsFound;
+#unapply(Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultsFound;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsFound$

+###org/apache/flink/runtime/messages/accumulators/RequestAccumulatorResults
@0.9.0
+#andThen(Lscala/Function1;)Lscala/Function1;
+#compose(Lscala/Function1;)Lscala/Function1;
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/accumulators/RequestAccumulatorResults;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/RequestAccumulatorResults

+###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsResponse
@0.9.0
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsResponse

+###org/apache/flink/runtime/messages/accumulators/RequestAccumulatorResults$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/accumulators/RequestAccumulatorResults;
+#unapply(Lorg/apache/flink/runtime/messages/accumulators/RequestAccumulatorResults;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/RequestAccumulatorResults$

+###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsFound
@0.9.0
+#tupled()Lscala/Function1;
+#curried()Lscala/Function1;
+#jobID()Lorg/apache/flink/api/common/JobID;
+#result()Ljava/util/Map;
+#copy(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;)Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultsFound;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Ljava/util/Map;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;)V
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsFound

+###org/apache/flink/runtime/messages/accumulators/AccumulatorResultStringsFound
@0.9.0
+#tupled()Lscala/Function1;
+#curried()Lscala/Function1;
+#jobID()Lorg/apache/flink/api/common/JobID;
+#result()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#copy(Lorg/apache/flink/api/common/JobID;[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;)Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultStringsFound;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;)V
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/AccumulatorResultStringsFound

+###org/apache/flink/runtime/messages/accumulators/AccumulatorMessage
@0.9.0
+#jobID()Lorg/apache/flink/api/common/JobID;
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/AccumulatorMessage

+###org/apache/flink/runtime/messages/accumulators/RequestAccumulatorResultsStringified$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/accumulators/RequestAccumulatorResultsStringified;
+#unapply(Lorg/apache/flink/runtime/messages/accumulators/RequestAccumulatorResultsStringified;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/RequestAccumulatorResultsStringified$

+###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsNotFound$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultsNotFound;
+#unapply(Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultsNotFound;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsNotFound$

+###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsNotFound
@0.9.0
+#andThen(Lscala/Function1;)Lscala/Function1;
+#compose(Lscala/Function1;)Lscala/Function1;
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/accumulators/AccumulatorResultsNotFound;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/accumulators/AccumulatorResultsNotFound

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestNextInputSplit$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestNextInputSplit;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestNextInputSplit;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestNextInputSplit$

+###org/apache/flink/runtime/messages/JobClientMessages$JobManagerActorRef$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lakka/actor/ActorRef;)Lorg/apache/flink/runtime/messages/JobClientMessages$JobManagerActorRef;
+#unapply(Lorg/apache/flink/runtime/messages/JobClientMessages$JobManagerActorRef;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$JobManagerActorRef$

+###org/apache/flink/runtime/messages/JobManagerMessages$RecoverJob$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RecoverJob;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RecoverJob;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RecoverJob$

+###org/apache/flink/runtime/messages/JobManagerMessages$RegisteredTaskManagers$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lscala/collection/Iterable;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RegisteredTaskManagers;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RegisteredTaskManagers;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RegisteredTaskManagers$

+###org/apache/flink/runtime/messages/JobManagerMessages$RemoveJob
@0.10.0
+#jobID()Lorg/apache/flink/api/common/JobID;
+#removeJobFromStateBackend()Z
+#copy(Lorg/apache/flink/api/common/JobID;Z)Lorg/apache/flink/runtime/messages/JobManagerMessages$RemoveJob;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Z
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Z)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RemoveJob

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestJob$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestJob;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestJob;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestJob$

+###org/apache/flink/runtime/messages/JobManagerMessages$CancellationSuccess
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$CancellationSuccess;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$CancellationSuccess

+###org/apache/flink/runtime/messages/JobManagerMessages$CurrentJobStatus$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;)Lorg/apache/flink/runtime/messages/JobManagerMessages$CurrentJobStatus;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$CurrentJobStatus;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$CurrentJobStatus$

+###org/apache/flink/runtime/messages/JobClientMessages$JobManagerActorRef
@0.10.0
+#jobManager()Lakka/actor/ActorRef;
+#copy(Lakka/actor/ActorRef;)Lorg/apache/flink/runtime/messages/JobClientMessages$JobManagerActorRef;
+#copy$default$1()Lakka/actor/ActorRef;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$JobManagerActorRef

+###org/apache/flink/runtime/messages/JobManagerMessages$CancelJob$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$CancelJob;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$CancelJob;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$CancelJob$

+###org/apache/flink/runtime/messages/JobManagerMessages$CancellationFailure
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#cause()Ljava/lang/Throwable;
+#copy(Lorg/apache/flink/api/common/JobID;Ljava/lang/Throwable;)Lorg/apache/flink/runtime/messages/JobManagerMessages$CancellationFailure;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Ljava/lang/Throwable;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$CancellationFailure

+###org/apache/flink/runtime/messages/JobManagerMessages$JobSubmitSuccess
@0.10.0
+#jobId()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobSubmitSuccess;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobSubmitSuccess

+###org/apache/flink/runtime/messages/TaskMessages$TaskOperationResult$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ZLjava/lang/String;)Lorg/apache/flink/runtime/messages/TaskMessages$TaskOperationResult;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$TaskOperationResult;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$TaskOperationResult$

+###org/apache/flink/runtime/messages/ExecutionGraphMessages$ExecutionStateChanged$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;IILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;JLjava/lang/String;)Lorg/apache/flink/runtime/messages/ExecutionGraphMessages$ExecutionStateChanged;
+#unapply(Lorg/apache/flink/runtime/messages/ExecutionGraphMessages$ExecutionStateChanged;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/ExecutionGraphMessages$ExecutionStateChanged$

+###org/apache/flink/runtime/messages/TaskMessages$SubmitTask
@0.9.0-milestone-1
+#tasks()Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;
+#copy(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;)Lorg/apache/flink/runtime/messages/TaskMessages$SubmitTask;
+#copy$default$1()Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$SubmitTask

+###org/apache/flink/runtime/messages/LeaderSessionMessageDecorator
@0.10.0
+#<init>(Ljava/util/UUID;)V
+#decorate(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/LeaderSessionMessageDecorator

+###org/apache/flink/runtime/messages/JobManagerMessages$RunningJobsStatus
@0.9.0-milestone-1
+#runningJobs()Lscala/collection/Iterable;
+#getStatusMessages()Ljava/util/List;
+#copy(Lscala/collection/Iterable;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RunningJobsStatus;
+#copy$default$1()Lscala/collection/Iterable;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lscala/collection/Iterable;)V
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RunningJobsStatus

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestLeaderSessionID$
@0.10.0
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestLeaderSessionID$

+###org/apache/flink/runtime/messages/MessageDecorator
@0.10.0
+#decorate(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/MessageDecorator

+###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskMultiplePartitionInfos
@0.9.0-milestone-1
+#executionID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#partitionInfos()Lscala/collection/Seq;
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lscala/collection/Seq;)Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskMultiplePartitionInfos;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy$default$2()Lscala/collection/Seq;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lscala/collection/Seq;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskMultiplePartitionInfos

+###org/apache/flink/runtime/messages/ArchiveMessages$
@0.9.0-milestone-1
+#<clinit>()V
+#getRequestArchivedJobs()Ljava/lang/Object;
@0.9.0
+#getRequestJobCounts()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestStackTrace
@0.9.0-milestone-1
+#instanceID()Lorg/apache/flink/runtime/instance/InstanceID;
+#copy(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestStackTrace;
+#copy$default$1()Lorg/apache/flink/runtime/instance/InstanceID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/instance/InstanceID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestStackTrace

+###org/apache/flink/runtime/messages/JobManagerMessages$RegisteredTaskManagers
@0.9.0-milestone-1
+#taskManagers()Lscala/collection/Iterable;
+#asJavaIterable()Ljava/lang/Iterable;
+#asJavaCollection()Ljava/util/Collection;
+#copy(Lscala/collection/Iterable;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RegisteredTaskManagers;
+#copy$default$1()Lscala/collection/Iterable;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lscala/collection/Iterable;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RegisteredTaskManagers

+###org/apache/flink/runtime/messages/TaskMessages$PartitionState$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/IntermediateResultPartitionID;Lorg/apache/flink/runtime/execution/ExecutionState;)Lorg/apache/flink/runtime/messages/TaskMessages$PartitionState;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$PartitionState;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$PartitionState$

+###org/apache/flink/runtime/messages/ArchiveMessages$ArchiveExecutionGraph$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Lorg/apache/flink/runtime/messages/ArchiveMessages$ArchiveExecutionGraph;
+#unapply(Lorg/apache/flink/runtime/messages/ArchiveMessages$ArchiveExecutionGraph;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$ArchiveExecutionGraph$

+###org/apache/flink/runtime/messages/JobManagerMessages$RecoverAllJobs$
@0.10.0
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RecoverAllJobs$

+###org/apache/flink/runtime/messages/JobManagerMessages$NextInputSplit
@0.9.0-milestone-1
+#splitData()[B
+#copy([B)Lorg/apache/flink/runtime/messages/JobManagerMessages$NextInputSplit;
+#copy$default$1()[B
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>([B)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$NextInputSplit

+###org/apache/flink/runtime/messages/JobClientMessages$JobManagerLeaderAddress
@0.10.0
+#address()Ljava/lang/String;
+#leaderSessionID()Ljava/util/UUID;
+#copy(Ljava/lang/String;Ljava/util/UUID;)Lorg/apache/flink/runtime/messages/JobClientMessages$JobManagerLeaderAddress;
+#copy$default$1()Ljava/lang/String;
+#copy$default$2()Ljava/util/UUID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/String;Ljava/util/UUID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$JobManagerLeaderAddress

+###org/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered
@0.9.0-milestone-1
+#jobManager()Lakka/actor/ActorRef;
+#instanceID()Lorg/apache/flink/runtime/instance/InstanceID;
+#blobPort()I
+#copy(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered;
+#copy$default$1()Lakka/actor/ActorRef;
+#copy$default$2()Lorg/apache/flink/runtime/instance/InstanceID;
+#copy$default$3()I
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)V
@0.10.0
+#copy(Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered;
+#copy$default$1()Lorg/apache/flink/runtime/instance/InstanceID;
+#copy$default$2()I
+#<init>(Lorg/apache/flink/runtime/instance/InstanceID;I)V
-#jobManager()Lakka/actor/ActorRef;
-#copy(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered;
-#copy$default$1()Lakka/actor/ActorRef;
-#copy$default$2()Lorg/apache/flink/runtime/instance/InstanceID;
-#copy$default$3()I
-#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceID;I)V
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$AlreadyRegistered

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestRegisteredTaskManagers$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestRegisteredTaskManagers$

+###org/apache/flink/runtime/messages/TaskMessages$CancelTask$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/TaskMessages$CancelTask;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$CancelTask;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$CancelTask$

+###org/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager;
+#unapply(Lorg/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.10.0
+#apply(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#apply(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager;
-#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$RegisterTaskManager$

+###org/apache/flink/runtime/messages/JobManagerMessages$LeaderSessionMessage
@0.10.0
+#leaderSessionID()Ljava/util/UUID;
+#message()Ljava/lang/Object;
+#copy(Ljava/util/UUID;Ljava/lang/Object;)Lorg/apache/flink/runtime/messages/JobManagerMessages$LeaderSessionMessage;
+#copy$default$1()Ljava/util/UUID;
+#copy$default$2()Ljava/lang/Object;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/util/UUID;Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$LeaderSessionMessage

+###org/apache/flink/runtime/messages/JobManagerMessages$ResponseArchive$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lakka/actor/ActorRef;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ResponseArchive;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$ResponseArchive;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ResponseArchive$

+###org/apache/flink/runtime/messages/RegistrationMessages$
@0.9.0-milestone-1
+#<clinit>()V
@1.14.0
-###org/apache/flink/runtime/messages/RegistrationMessages$

+###org/apache/flink/runtime/messages/ArchiveMessages
@0.9.0-milestone-1
+#getRequestArchivedJobs()Ljava/lang/Object;
@0.9.0
+#getRequestJobCounts()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages

+###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskExecutionState
@0.9.0-milestone-1
+#taskExecutionState()Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;
+#copy(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskExecutionState;
+#copy$default$1()Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskExecutionState

+###org/apache/flink/runtime/messages/JobManagerMessages$RecoverSubmittedJob$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraph;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RecoverSubmittedJob;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RecoverSubmittedJob;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RecoverSubmittedJob$

+###org/apache/flink/runtime/messages/ArchiveMessages$ArchivedJob$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lscala/Option;)Lorg/apache/flink/runtime/messages/ArchiveMessages$ArchivedJob;
+#unapply(Lorg/apache/flink/runtime/messages/ArchiveMessages$ArchivedJob;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$ArchivedJob$

+###org/apache/flink/runtime/messages/webmonitor/StatusOverview
@0.10.0
+#<init>(IIIIIII)V
+#<init>(IIILorg/apache/flink/runtime/messages/webmonitor/JobsOverview;Lorg/apache/flink/runtime/messages/webmonitor/JobsOverview;)V
+#getNumTaskManagersConnected()I
+#getNumSlotsTotal()I
+#getNumSlotsAvailable()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/messages/webmonitor/StatusOverview

+###org/apache/flink/runtime/messages/webmonitor/JobsWithIDsOverview
@0.10.0
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#<init>(Lorg/apache/flink/runtime/messages/webmonitor/JobsWithIDsOverview;Lorg/apache/flink/runtime/messages/webmonitor/JobsWithIDsOverview;)V
+#getJobsRunningOrPending()Ljava/util/List;
+#getJobsFinished()Ljava/util/List;
+#getJobsCancelled()Ljava/util/List;
+#getJobsFailed()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/messages/webmonitor/JobsWithIDsOverview

+###org/apache/flink/runtime/messages/ArchiveMessages$ArchivedJob
@0.9.0
+#job()Lscala/Option;
+#copy(Lscala/Option;)Lorg/apache/flink/runtime/messages/ArchiveMessages$ArchivedJob;
+#copy$default$1()Lscala/Option;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lscala/Option;)V
@1.14.0
-###org/apache/flink/runtime/messages/ArchiveMessages$ArchivedJob

+###org/apache/flink/runtime/messages/JobManagerMessages$ResponseLeaderSessionID
@0.10.0
+#leaderSessionID()Ljava/util/UUID;
+#copy(Ljava/util/UUID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ResponseLeaderSessionID;
+#copy$default$1()Ljava/util/UUID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/util/UUID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ResponseLeaderSessionID

+###org/apache/flink/runtime/messages/JobClientMessages$JobManagerLeaderAddress$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/String;Ljava/util/UUID;)Lorg/apache/flink/runtime/messages/JobClientMessages$JobManagerLeaderAddress;
+#unapply(Lorg/apache/flink/runtime/messages/JobClientMessages$JobManagerLeaderAddress;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$JobManagerLeaderAddress$

+###org/apache/flink/runtime/messages/TaskManagerMessages$SendStackTrace$
@0.9.0-milestone-1
+#<clinit>()V
+#get()Lorg/apache/flink/runtime/messages/TaskManagerMessages$SendStackTrace$;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$SendStackTrace$

+###org/apache/flink/runtime/messages/TaskMessages$TaskInFinalState$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/TaskMessages$TaskInFinalState;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$TaskInFinalState;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$TaskInFinalState$

+###org/apache/flink/runtime/messages/TaskManagerMessages$FatalError
@0.9.0
+#description()Ljava/lang/String;
+#cause()Ljava/lang/Throwable;
+#copy(Ljava/lang/String;Ljava/lang/Throwable;)Lorg/apache/flink/runtime/messages/TaskManagerMessages$FatalError;
+#copy$default$1()Ljava/lang/String;
+#copy$default$2()Ljava/lang/Throwable;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$FatalError

+###org/apache/flink/runtime/messages/Messages$Acknowledge$
@0.9.0-milestone-1
+#<clinit>()V
+#get()Lorg/apache/flink/runtime/messages/Messages$Acknowledge$;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@0.9.0
-#get()Lorg/apache/flink/runtime/messages/Messages$Acknowledge$;
@1.14.0
-###org/apache/flink/runtime/messages/Messages$Acknowledge$

+###org/apache/flink/runtime/messages/JobManagerMessages$RecoverSubmittedJob
@0.10.0
+#submittedJobGraph()Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraph;
+#copy(Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraph;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RecoverSubmittedJob;
+#copy$default$1()Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraph;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/jobmanager/SubmittedJobGraph;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RecoverSubmittedJob

+###org/apache/flink/runtime/messages/JobManagerMessages$JobNotFound
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobNotFound;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobNotFound

+###org/apache/flink/runtime/messages/TaskManagerMessages$JobManagerLeaderAddress
@0.10.0
+#jobManagerAddress()Ljava/lang/String;
+#leaderSessionID()Ljava/util/UUID;
+#copy(Ljava/lang/String;Ljava/util/UUID;)Lorg/apache/flink/runtime/messages/TaskManagerMessages$JobManagerLeaderAddress;
+#copy$default$1()Ljava/lang/String;
+#copy$default$2()Ljava/util/UUID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/String;Ljava/util/UUID;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$JobManagerLeaderAddress

+###org/apache/flink/runtime/messages/JobManagerMessages$ScheduleOrUpdateConsumers$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ScheduleOrUpdateConsumers;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$ScheduleOrUpdateConsumers;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ScheduleOrUpdateConsumers$

+###org/apache/flink/runtime/messages/TaskManagerMessages
@0.9.0-milestone-1
+#getRegisteredAtJobManagerMessage()Lorg/apache/flink/runtime/messages/TaskManagerMessages$RegisteredAtJobManager$;
+#getNotifyWhenRegisteredAtJobManagerMessage()Lorg/apache/flink/runtime/messages/TaskManagerMessages$NotifyWhenRegisteredAtJobManager$;
@0.10.0
+#getNotifyWhenRegisteredAtJobManagerMessage()Lorg/apache/flink/runtime/messages/TaskManagerMessages$NotifyWhenRegisteredAtAnyJobManager$;
-#getNotifyWhenRegisteredAtJobManagerMessage()Lorg/apache/flink/runtime/messages/TaskManagerMessages$NotifyWhenRegisteredAtJobManager$;
@1.14.0
-###org/apache/flink/runtime/messages/TaskManagerMessages

+###org/apache/flink/runtime/messages/TaskMessages$UpdatePartitionInfo
@0.9.0-milestone-1
+#executionID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$UpdatePartitionInfo

+###org/apache/flink/runtime/messages/JobManagerMessages$GrantLeadership$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lscala/Option;)Lorg/apache/flink/runtime/messages/JobManagerMessages$GrantLeadership;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$GrantLeadership;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$GrantLeadership$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestArchive$
@0.10.0
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestArchive$

+###org/apache/flink/runtime/messages/TaskMessages$$anonfun$createUpdateTaskMultiplePartitionInfos$1
@0.9.0-milestone-1
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$$anonfun$createUpdateTaskMultiplePartitionInfos$1

+###org/apache/flink/runtime/messages/JobManagerMessages$SubmitJob$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/runtime/messages/JobManagerMessages$SubmitJob;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$SubmitJob;)Lscala/Option;
+#apply$default$2()Z
+#$lessinit$greater$default$2()Z
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-#apply$default$2()Z
-#$lessinit$greater$default$2()Z
@0.10.0
+#apply(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lorg/apache/flink/runtime/akka/ListeningBehaviour;)Lorg/apache/flink/runtime/messages/JobManagerMessages$SubmitJob;
-#apply(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/runtime/messages/JobManagerMessages$SubmitJob;
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$SubmitJob$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestStackTrace$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestStackTrace;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestStackTrace;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestStackTrace$

+###org/apache/flink/runtime/messages/TaskMessages$CancelTask
@0.9.0-milestone-1
+#attemptID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/TaskMessages$CancelTask;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$CancelTask

+###org/apache/flink/runtime/messages/JobManagerMessages$CancellationResponse
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$CancellationResponse

+###org/apache/flink/runtime/messages/JobManagerMessages$RunningJobs$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lscala/collection/Iterable;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RunningJobs;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RunningJobs;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RunningJobs$

+###org/apache/flink/runtime/messages/JobManagerMessages$JobResultFailure
@0.10.0
+#cause()Lorg/apache/flink/runtime/util/SerializedThrowable;
+#copy(Lorg/apache/flink/runtime/util/SerializedThrowable;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobResultFailure;
+#copy$default$1()Lorg/apache/flink/runtime/util/SerializedThrowable;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/util/SerializedThrowable;)V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobResultFailure

+###org/apache/flink/runtime/messages/JobManagerMessages$CancellationFailure$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Ljava/lang/Throwable;)Lorg/apache/flink/runtime/messages/JobManagerMessages$CancellationFailure;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$CancellationFailure;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$CancellationFailure$

+###org/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;JLjava/util/Map;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
+#apply(Lorg/apache/flink/runtime/client/SerializedJobExecutionResult;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#apply(Lorg/apache/flink/api/common/JobID;JLjava/util/Map;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess;
-#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobResultSuccess$

+###org/apache/flink/runtime/messages/JobManagerMessages$NextInputSplit$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply([B)Lorg/apache/flink/runtime/messages/JobManagerMessages$NextInputSplit;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$NextInputSplit;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$NextInputSplit$

+###org/apache/flink/runtime/messages/TaskMessages$FailTask
@0.9.0-milestone-1
+#executionID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#cause()Ljava/lang/Throwable;
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;)Lorg/apache/flink/runtime/messages/TaskMessages$FailTask;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy$default$2()Ljava/lang/Throwable;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$FailTask

+###org/apache/flink/runtime/messages/TaskMessages$FailIntermediateResultPartitions
@0.9.0-milestone-1
+#executionID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/TaskMessages$FailIntermediateResultPartitions;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$FailIntermediateResultPartitions

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestJobStatus$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestJobStatus;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestJobStatus;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestJobStatus$

+###org/apache/flink/runtime/messages/JobManagerMessages$JobFound$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Lorg/apache/flink/runtime/messages/JobManagerMessages$JobFound;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$JobFound;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$JobFound$

+###org/apache/flink/runtime/messages/JobManagerMessages$ResponseWebMonitorPort$
@0.10.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/Integer;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ResponseWebMonitorPort;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$ResponseWebMonitorPort;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ResponseWebMonitorPort$

+###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskMultiplePartitionInfos$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lscala/collection/Seq;)Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskMultiplePartitionInfos;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskMultiplePartitionInfos;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/messages/TaskMessages$UpdateTaskMultiplePartitionInfos$

+###org/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait
@0.9.0-milestone-1
+#jobGraph()Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#listenToEvents()Z
+#copy(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait;
+#copy$default$1()Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#copy$default$2()Z
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)V
@0.9.0
+#copy(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait;
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
-#listenToEvents()Z
-#copy(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)Lorg/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait;
-#copy$default$2()Z
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;Z)V
@1.14.0
-###org/apache/flink/runtime/messages/JobClientMessages$SubmitJobAndWait

+###org/apache/flink/runtime/akka/serialization/WritableSerializer
@0.9.0-milestone-1
+#INITIAL_BUFFER_SIZE()I
+#fromBinaryJava([BLjava/lang/Class;)Ljava/lang/Object;
+#includeManifest()Z
+#toBinary(Ljava/lang/Object;)[B
+#identifier()I
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/akka/serialization/WritableSerializer

+###org/apache/flink/runtime/akka/serialization/IOReadableWritableSerializer
@0.9.0-milestone-1
+#INITIAL_BUFFER_SIZE()I
+#fromBinaryJava([BLjava/lang/Class;)Ljava/lang/Object;
+#includeManifest()Z
+#toBinary(Ljava/lang/Object;)[B
+#identifier()I
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/akka/serialization/IOReadableWritableSerializer

+###org/apache/flink/runtime/akka/RemoteAddressExtension$
@0.10.0
+#<clinit>()V
@1.14.0
-###org/apache/flink/runtime/akka/RemoteAddressExtension$

+###org/apache/flink/runtime/akka/RemoteAddressExtensionImplementation
@0.10.0
+#address()Lakka/actor/Address;
+#<init>(Lakka/actor/ExtendedActorSystem;)V
@1.14.0
-###org/apache/flink/runtime/akka/RemoteAddressExtensionImplementation

+###org/apache/flink/runtime/akka/ListeningBehaviour
@0.10.0
+#values()[Lorg/apache/flink/runtime/akka/ListeningBehaviour;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/akka/ListeningBehaviour;
@1.14.0
-###org/apache/flink/runtime/akka/ListeningBehaviour

+###org/apache/flink/runtime/akka/AkkaUtils
@0.9.0-milestone-1
+#getDefaultLookupTimeout()Lscala/concurrent/duration/FiniteDuration;
+#getLookupTimeout(Lorg/apache/flink/configuration/Configuration;)Lscala/concurrent/duration/FiniteDuration;
+#getDefaultTimeout()Lscala/concurrent/duration/FiniteDuration;
+#getTimeout(Lorg/apache/flink/configuration/Configuration;)Lscala/concurrent/duration/FiniteDuration;
+#retry(Lakka/actor/ActorRef;Ljava/lang/Object;ILscala/concurrent/ExecutionContext;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#retry(Ljava/util/concurrent/Callable;ILscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
+#retry(Lscala/Function0;ILscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
+#getReference(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#getChild(Lakka/actor/ActorRef;Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#getLogLevel()Ljava/lang/String;
+#getDefaultAkkaConfig()Lcom/typesafe/config/Config;
+#getAkkaConfig(Lorg/apache/flink/configuration/Configuration;Lscala/Option;)Lcom/typesafe/config/Config;
+#createDefaultActorSystem()Lakka/actor/ActorSystem;
+#createActorSystem(Lcom/typesafe/config/Config;)Lakka/actor/ActorSystem;
+#createActorSystem(Lorg/apache/flink/configuration/Configuration;Lscala/Option;)Lakka/actor/ActorSystem;
+#createLocalActorSystem(Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorSystem;
+#globalExecutionContext_$eq(Lscala/concurrent/ExecutionContext;)V
+#globalExecutionContext()Lscala/concurrent/ExecutionContext;
+#INF_TIMEOUT()Lscala/concurrent/duration/FiniteDuration;
+#LOG()Lorg/slf4j/Logger;
@0.10.0
+#getInetSockeAddressFromAkkaURL(Ljava/lang/String;)Ljava/net/InetSocketAddress;
+#getAkkaURL(Lakka/actor/ActorSystem;Ljava/lang/String;)Ljava/lang/String;
+#getAkkaURL(Lakka/actor/ActorSystem;Lakka/actor/ActorRef;)Ljava/lang/String;
+#getAddress(Lakka/actor/ActorSystem;)Lakka/actor/Address;
+#getActorRef(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#getActorRefFuture(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
-#getReference(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
-#globalExecutionContext_$eq(Lscala/concurrent/ExecutionContext;)V
-#globalExecutionContext()Lscala/concurrent/ExecutionContext;
@1.14.0
-###org/apache/flink/runtime/akka/AkkaUtils

+###org/apache/flink/runtime/akka/AkkaUtils$$anonfun$retry$1
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Throwable;)Z
+#isDefinedAt(Ljava/lang/Object;)Z
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#<init>(Lscala/Function0;ILscala/concurrent/ExecutionContext;)V
@1.14.0
-###org/apache/flink/runtime/akka/AkkaUtils$$anonfun$retry$1

+###org/apache/flink/runtime/akka/AkkaUtils$$anonfun$retry$3
@0.9.0-milestone-1
+#apply()Ljava/lang/Object;
+#<init>(Ljava/util/concurrent/Callable;)V
@1.14.0
-###org/apache/flink/runtime/akka/AkkaUtils$$anonfun$retry$3

+###org/apache/flink/runtime/akka/FlinkUntypedActor
@0.10.0
+#<init>()V
+#onReceive(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/runtime/akka/FlinkUntypedActor

+###org/apache/flink/runtime/akka/RemoteAddressExtension
@0.10.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#get(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
+#apply(Lakka/actor/ActorSystem;)Lakka/actor/Extension;
+#createExtension(Lakka/actor/ExtendedActorSystem;)Lakka/actor/Extension;
+#lookup()Lakka/actor/ExtensionId;
@1.14.0
-###org/apache/flink/runtime/akka/RemoteAddressExtension

+###org/apache/flink/runtime/akka/AkkaUtils$$anonfun$retry$2
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Throwable;)Z
+#isDefinedAt(Ljava/lang/Object;)Z
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#<init>(Lakka/actor/ActorRef;Ljava/lang/Object;ILscala/concurrent/ExecutionContext;Lscala/concurrent/duration/FiniteDuration;)V
@1.14.0
-###org/apache/flink/runtime/akka/AkkaUtils$$anonfun$retry$2

+###org/apache/flink/runtime/akka/AkkaUtils$
@0.9.0-milestone-1
+#<clinit>()V
+#LOG()Lorg/slf4j/Logger;
+#INF_TIMEOUT()Lscala/concurrent/duration/FiniteDuration;
+#globalExecutionContext()Lscala/concurrent/ExecutionContext;
+#globalExecutionContext_$eq(Lscala/concurrent/ExecutionContext;)V
+#createLocalActorSystem(Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorSystem;
+#createActorSystem(Lorg/apache/flink/configuration/Configuration;Lscala/Option;)Lakka/actor/ActorSystem;
+#createActorSystem(Lcom/typesafe/config/Config;)Lakka/actor/ActorSystem;
+#createDefaultActorSystem()Lakka/actor/ActorSystem;
+#getAkkaConfig(Lorg/apache/flink/configuration/Configuration;Lscala/Option;)Lcom/typesafe/config/Config;
+#getDefaultAkkaConfig()Lcom/typesafe/config/Config;
+#getLogLevel()Ljava/lang/String;
+#getChild(Lakka/actor/ActorRef;Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#getReference(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#retry(Lscala/Function0;ILscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
+#retry(Ljava/util/concurrent/Callable;ILscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
+#retry(Lakka/actor/ActorRef;Ljava/lang/Object;ILscala/concurrent/ExecutionContext;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#getTimeout(Lorg/apache/flink/configuration/Configuration;)Lscala/concurrent/duration/FiniteDuration;
+#getDefaultTimeout()Lscala/concurrent/duration/FiniteDuration;
+#getLookupTimeout(Lorg/apache/flink/configuration/Configuration;)Lscala/concurrent/duration/FiniteDuration;
+#getDefaultLookupTimeout()Lscala/concurrent/duration/FiniteDuration;
@0.10.0
+#getActorRefFuture(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#getActorRef(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#getAddress(Lakka/actor/ActorSystem;)Lakka/actor/Address;
+#getAkkaURL(Lakka/actor/ActorSystem;Lakka/actor/ActorRef;)Ljava/lang/String;
+#getAkkaURL(Lakka/actor/ActorSystem;Ljava/lang/String;)Ljava/lang/String;
+#getInetSockeAddressFromAkkaURL(Ljava/lang/String;)Ljava/net/InetSocketAddress;
-#globalExecutionContext()Lscala/concurrent/ExecutionContext;
-#globalExecutionContext_$eq(Lscala/concurrent/ExecutionContext;)V
-#getReference(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
@1.14.0
-###org/apache/flink/runtime/akka/AkkaUtils$

+###org/apache/flink/runtime/webmonitor/WebMonitor
@0.10.0
+#start(Ljava/lang/String;)V
+#stop()V
+#getServerPort()I
@1.14.0
-###org/apache/flink/runtime/webmonitor/WebMonitor

+###org/apache/flink/runtime/StreamingMode
@0.9.0
+#values()[Lorg/apache/flink/runtime/StreamingMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/StreamingMode;
@1.14.0
-###org/apache/flink/runtime/StreamingMode

+###org/apache/flink/runtime/instance/Slot
@0.8.1
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/AbstractID;)V
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getInstance()Lorg/apache/flink/runtime/instance/Instance;
+#getSlotNumber()I
+#getGroupID()Lorg/apache/flink/runtime/AbstractID;
+#getParent()Lorg/apache/flink/runtime/instance/SharedSlot;
+#getRoot()Lorg/apache/flink/runtime/instance/Slot;
+#getNumberLeaves()I
+#isAlive()Z
+#isCanceled()Z
+#isReleased()Z
+#cancel()V
+#releaseSlot()V
+#markReleased()Z
+#markCancelled()Z
+#markDead()Z
+#isDead()Z
+#markDisposed()Z
+#isDisposed()Z
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/util/AbstractID;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getGroupID()Lorg/apache/flink/util/AbstractID;
+#getStatus()I
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/AbstractID;)V
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
-#getGroupID()Lorg/apache/flink/runtime/AbstractID;
@0.9.0
+#getRootSlotNumber()I
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/util/AbstractID;)V
-#getStatus()I
-#cancel()V
-#markReleased()Z
-#markCancelled()Z
-#markDead()Z
-#isDead()Z
-#markDisposed()Z
-#isDisposed()Z
@1.14.0
-###org/apache/flink/runtime/instance/Slot

+###org/apache/flink/runtime/instance/Hardware
@0.6-hadoop2-incubating
+#<init>()V
+#getNumberCPUCores()I
@0.7.0-hadoop2-incubating
+#getSizeOfPhysicalMemory()J
-#<init>()V
@1.14.0
-###org/apache/flink/runtime/instance/Hardware

+###org/apache/flink/runtime/instance/InstanceManager
@0.6-hadoop2-incubating
+#shutdown()V
+#releaseAllocatedResource(Lorg/apache/flink/runtime/instance/AllocatedResource;)V
+#reportHeartBeat(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)V
+#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
+#requestInstance(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/configuration/Configuration;I)V
+#getNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/topology/NetworkTopology;
+#setInstanceListener(Lorg/apache/flink/runtime/instance/InstanceListener;)V
+#getInstanceByName(Ljava/lang/String;)Lorg/apache/flink/runtime/instance/Instance;
+#getNumberOfTaskTrackers()I
+#getNumberOfSlots()I
+#getInstances()Ljava/util/Map;
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>(J)V
+#<init>(JJ)V
+#reportHeartBeat(Lorg/apache/flink/runtime/instance/InstanceID;)Z
+#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/instance/InstanceID;
+#getNumberOfRegisteredTaskManagers()I
+#getTotalNumberOfSlots()I
+#getAllRegisteredInstances()Ljava/util/Map;
+#addInstanceListener(Lorg/apache/flink/runtime/instance/InstanceListener;)V
+#removeInstanceListener(Lorg/apache/flink/runtime/instance/InstanceListener;)V
-#releaseAllocatedResource(Lorg/apache/flink/runtime/instance/AllocatedResource;)V
-#reportHeartBeat(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)V
-#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
-#requestInstance(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/configuration/Configuration;I)V
-#getNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/topology/NetworkTopology;
-#setInstanceListener(Lorg/apache/flink/runtime/instance/InstanceListener;)V
-#getInstanceByName(Ljava/lang/String;)Lorg/apache/flink/runtime/instance/Instance;
-#getNumberOfTaskTrackers()I
-#getNumberOfSlots()I
-#getInstances()Ljava/util/Map;
@0.8.0
+#getHeartbeatTimeout()J
+#killTaskManagers()V
@0.9.0-milestone-1
+#reportHeartBeat(Lorg/apache/flink/runtime/instance/InstanceID;[B)Z
+#registerTaskManager(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/instance/InstanceID;
+#unregisterTaskManager(Lakka/actor/ActorRef;)V
+#isRegistered(Lakka/actor/ActorRef;)Z
+#getAllRegisteredInstances()Ljava/util/Collection;
+#getRegisteredInstanceById(Lorg/apache/flink/runtime/instance/InstanceID;)Lorg/apache/flink/runtime/instance/Instance;
+#getRegisteredInstance(Lakka/actor/ActorRef;)Lorg/apache/flink/runtime/instance/Instance;
-#<init>(J)V
-#<init>(JJ)V
-#getHeartbeatTimeout()J
-#killTaskManagers()V
-#reportHeartBeat(Lorg/apache/flink/runtime/instance/InstanceID;)Z
-#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/instance/InstanceID;
-#getAllRegisteredInstances()Ljava/util/Map;
@0.10.0
+#registerTaskManager(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;ILjava/util/UUID;)Lorg/apache/flink/runtime/instance/InstanceID;
+#unregisterTaskManager(Lakka/actor/ActorRef;Z)V
+#unregisterAllTaskManagers()V
+#getNumberOfAvailableSlots()I
-#registerTaskManager(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/instance/InstanceID;
-#unregisterTaskManager(Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/instance/InstanceManager

+###org/apache/flink/runtime/instance/InstanceListener
@0.6-hadoop2-incubating
+#resourcesAllocated(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/List;)V
+#allocatedResourcesDied(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/List;)V
@0.7.0-hadoop2-incubating
+#newInstanceAvailable(Lorg/apache/flink/runtime/instance/Instance;)V
+#instanceDied(Lorg/apache/flink/runtime/instance/Instance;)V
-#resourcesAllocated(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/List;)V
-#allocatedResourcesDied(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/List;)V
@1.14.0
-###org/apache/flink/runtime/instance/InstanceListener

+###org/apache/flink/runtime/instance/ActorGateway
@0.10.0
+#ask(Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#tell(Ljava/lang/Object;)V
+#tell(Ljava/lang/Object;Lorg/apache/flink/runtime/instance/ActorGateway;)V
+#forward(Ljava/lang/Object;Lorg/apache/flink/runtime/instance/ActorGateway;)V
+#retry(Ljava/lang/Object;ILscala/concurrent/duration/FiniteDuration;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
+#path()Ljava/lang/String;
+#actor()Lakka/actor/ActorRef;
+#leaderSessionID()Ljava/util/UUID;
@1.14.0
-###org/apache/flink/runtime/instance/ActorGateway

+###org/apache/flink/runtime/instance/InstanceConnectionInfo
@0.6-hadoop2-incubating
+#<init>(Ljava/net/InetAddress;II)V
+#<init>(Ljava/net/InetAddress;Ljava/lang/String;Ljava/lang/String;II)V
+#<init>()V
+#ipcPort()I
+#dataPort()I
+#address()Ljava/net/InetAddress;
+#hostname()Ljava/lang/String;
+#domainName()Ljava/lang/String;
+#getInetAdress()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)I
+#compareTo(Ljava/lang/Object;)I
@0.7.0-hadoop2-incubating
+#getFQDNHostname()Ljava/lang/String;
+#getHostname()Ljava/lang/String;
-#<init>(Ljava/net/InetAddress;Ljava/lang/String;Ljava/lang/String;II)V
-#hostname()Ljava/lang/String;
-#domainName()Ljava/lang/String;
@0.9.0-milestone-1
+#<init>(Ljava/net/InetAddress;I)V
-#<init>(Ljava/net/InetAddress;II)V
-#ipcPort()I
@1.14.0
-###org/apache/flink/runtime/instance/InstanceConnectionInfo

+###org/apache/flink/runtime/instance/SharedSlot
@0.8.1
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment;Lorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/AbstractID;)V
+#getSubSlots()Ljava/util/Set;
+#freeSubSlot(Lorg/apache/flink/runtime/instance/Slot;)I
+#getNumberLeaves()I
+#cancel()V
+#releaseSlot()V
+#allocateSubSlot(Lorg/apache/flink/runtime/AbstractID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#allocateSharedSlot(Lorg/apache/flink/runtime/AbstractID;)Lorg/apache/flink/runtime/instance/SharedSlot;
+#disposeChild(Lorg/apache/flink/runtime/instance/SimpleSlot;)V
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment;Lorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/util/AbstractID;)V
+#allocateSubSlot(Lorg/apache/flink/util/AbstractID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#allocateSharedSlot(Lorg/apache/flink/util/AbstractID;)Lorg/apache/flink/runtime/instance/SharedSlot;
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment;Lorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/AbstractID;)V
-#allocateSubSlot(Lorg/apache/flink/runtime/AbstractID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
-#allocateSharedSlot(Lorg/apache/flink/runtime/AbstractID;)Lorg/apache/flink/runtime/instance/SharedSlot;
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/instance/SlotSharingGroupAssignment;)V
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/instance/SlotSharingGroupAssignment;Lorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/util/AbstractID;)V
+#isRootAndEmpty()Z
+#hasChildren()Z
-#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment;Lorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/util/AbstractID;)V
-#getSubSlots()Ljava/util/Set;
-#freeSubSlot(Lorg/apache/flink/runtime/instance/Slot;)I
-#cancel()V
-#allocateSubSlot(Lorg/apache/flink/util/AbstractID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
-#allocateSharedSlot(Lorg/apache/flink/util/AbstractID;)Lorg/apache/flink/runtime/instance/SharedSlot;
-#disposeChild(Lorg/apache/flink/runtime/instance/SimpleSlot;)V
@1.14.0
-###org/apache/flink/runtime/instance/SharedSlot

+###org/apache/flink/runtime/instance/SlotSharingGroupAssignment
@0.9.0
+#<init>()V
+#getNumberOfSlots()I
+#getNumberOfAvailableSlotsForGroup(Lorg/apache/flink/util/AbstractID;)I
+#addSharedSlotAndAllocateSubSlot(Lorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#addSharedSlotAndAllocateSubSlot(Lorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#getSlotForTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#getSlotForTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)Lorg/apache/flink/runtime/instance/SimpleSlot;
@1.14.0
-###org/apache/flink/runtime/instance/SlotSharingGroupAssignment

+###org/apache/flink/runtime/instance/SimpleSlot
@0.8.1
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/AbstractID;)V
+#getNumberLeaves()I
+#getExecution()Lorg/apache/flink/runtime/executiongraph/Execution;
+#getLocality()Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;
+#setLocality(Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;)V
+#setExecutedVertex(Lorg/apache/flink/runtime/executiongraph/Execution;)Z
+#cancel()V
+#releaseSlot()V
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/util/AbstractID;)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/instance/Instance;ILorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/AbstractID;)V
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/Instance;I)V
+#getExecutedVertex()Lorg/apache/flink/runtime/executiongraph/Execution;
-#getExecution()Lorg/apache/flink/runtime/executiongraph/Execution;
-#cancel()V
@1.14.0
-###org/apache/flink/runtime/instance/SimpleSlot

+###org/apache/flink/runtime/instance/InstanceDiedException
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/instance/Instance;)V
+#getInstance()Lorg/apache/flink/runtime/instance/Instance;
@1.14.0
-###org/apache/flink/runtime/instance/InstanceDiedException

+###org/apache/flink/runtime/instance/Instance
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/topology/NetworkNode;Lorg/apache/flink/runtime/topology/NetworkTopology;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
+#getInstanceConnectionInfo()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
+#getHardwareDescription()Lorg/apache/flink/runtime/instance/HardwareDescription;
+#checkLibraryAvailability(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#submitTasks(Ljava/util/List;)Ljava/util/List;
+#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskCancelResult;
+#killTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskKillResult;
+#reportHeartBeat()V
+#isStillAlive(J)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#logBufferUtilization()V
+#killTaskManager()V
+#invalidateLookupCacheEntries(Ljava/util/Set;)V
+#destroyProxies()V
+#getNumberOfSlots()I
+#getNumberOfAvailableSlots()I
+#allocateSlot(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/instance/AllocatedResource;
+#releaseSlot(Lorg/apache/flink/runtime/instance/AllocationID;)V
+#getAllocatedSlots()Ljava/util/Collection;
+#removeAllocatedSlots()Ljava/util/Collection;
+#getLastHeartBeat()J
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
+#getId()Lorg/apache/flink/runtime/instance/InstanceID;
+#getResources()Lorg/apache/flink/runtime/instance/HardwareDescription;
+#getTotalNumberOfSlots()I
+#isAlive()Z
+#markDead()V
+#getTaskManagerProxy()Lorg/apache/flink/runtime/protocols/TaskOperationProtocol;
+#isStillAlive(JJ)Z
+#allocateSlot(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/instance/AllocatedSlot;
+#returnAllocatedSlot(Lorg/apache/flink/runtime/instance/AllocatedSlot;)Z
+#cancelAndReleaseAllSlots()V
+#getNumberOfAllocatedSlots()I
+#hasResourcesAvailable()Z
+#setSlotAvailabilityListener(Lorg/apache/flink/runtime/jobmanager/scheduler/SlotAvailablilityListener;)V
+#removeSlotListener()V
+#toString()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/topology/NetworkNode;Lorg/apache/flink/runtime/topology/NetworkTopology;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
-#getHardwareDescription()Lorg/apache/flink/runtime/instance/HardwareDescription;
-#checkLibraryAvailability(Lorg/apache/flink/runtime/jobgraph/JobID;)V
-#submitTasks(Ljava/util/List;)Ljava/util/List;
-#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskCancelResult;
-#killTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskKillResult;
-#isStillAlive(J)Z
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#logBufferUtilization()V
-#killTaskManager()V
-#invalidateLookupCacheEntries(Ljava/util/Set;)V
-#destroyProxies()V
-#getNumberOfSlots()I
-#allocateSlot(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/instance/AllocatedResource;
-#releaseSlot(Lorg/apache/flink/runtime/instance/AllocationID;)V
-#getAllocatedSlots()Ljava/util/Collection;
-#removeAllocatedSlots()Ljava/util/Collection;
@0.8.0
+#stopInstance()V
+#setSlotAvailabilityListener(Lorg/apache/flink/runtime/jobmanager/scheduler/SlotAvailabilityListener;)V
-#setSlotAvailabilityListener(Lorg/apache/flink/runtime/jobmanager/scheduler/SlotAvailablilityListener;)V
@0.8.1
+#allocateSimpleSlot(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#allocateSimpleSlot(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/AbstractID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#allocateSharedSlot(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment;Lorg/apache/flink/runtime/AbstractID;)Lorg/apache/flink/runtime/instance/SharedSlot;
+#returnAllocatedSlot(Lorg/apache/flink/runtime/instance/Slot;)Z
-#allocateSlot(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/instance/AllocatedSlot;
-#returnAllocatedSlot(Lorg/apache/flink/runtime/instance/AllocatedSlot;)Z
@0.9.0-milestone-1
+#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
+#setMetricsReport([B)V
+#getLastMetricsReport()[B
+#allocateSimpleSlot(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#allocateSimpleSlot(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/util/AbstractID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#allocateSharedSlot(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment;Lorg/apache/flink/util/AbstractID;)Lorg/apache/flink/runtime/instance/SharedSlot;
+#getTaskManager()Lakka/actor/ActorRef;
+#getPath()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
-#stopInstance()V
-#getTaskManagerProxy()Lorg/apache/flink/runtime/protocols/TaskOperationProtocol;
-#allocateSimpleSlot(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
-#allocateSimpleSlot(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/AbstractID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
-#allocateSharedSlot(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment;Lorg/apache/flink/runtime/AbstractID;)Lorg/apache/flink/runtime/instance/SharedSlot;
@0.9.0
+#allocateSharedSlot(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/instance/SlotSharingGroupAssignment;)Lorg/apache/flink/runtime/instance/SharedSlot;
-#allocateSimpleSlot(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/util/AbstractID;)Lorg/apache/flink/runtime/instance/SimpleSlot;
-#allocateSharedSlot(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment;Lorg/apache/flink/util/AbstractID;)Lorg/apache/flink/runtime/instance/SharedSlot;
@0.10.0
+#<init>(Lorg/apache/flink/runtime/instance/ActorGateway;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
+#getActorGateway()Lorg/apache/flink/runtime/instance/ActorGateway;
-#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/InstanceID;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
-#getTaskManager()Lakka/actor/ActorRef;
-#getPath()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/instance/Instance

+###org/apache/flink/runtime/instance/AkkaActorGateway
@0.10.0
+#<init>(Lakka/actor/ActorRef;Ljava/util/UUID;)V
+#ask(Ljava/lang/Object;Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/Future;
+#tell(Ljava/lang/Object;)V
+#tell(Ljava/lang/Object;Lorg/apache/flink/runtime/instance/ActorGateway;)V
+#forward(Ljava/lang/Object;Lorg/apache/flink/runtime/instance/ActorGateway;)V
+#retry(Ljava/lang/Object;ILscala/concurrent/duration/FiniteDuration;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
+#path()Ljava/lang/String;
+#actor()Lakka/actor/ActorRef;
+#leaderSessionID()Ljava/util/UUID;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/runtime/instance/AkkaActorGateway

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$5
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorRef;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$anonfun$$$outer()Lorg/apache/flink/runtime/taskmanager/TaskManager;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskExecutionState;Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#apply(Lakka/actor/ActorRef;)V
-#org$apache$flink$runtime$taskmanager$TaskManager$$anonfun$$$outer()Lorg/apache/flink/runtime/taskmanager/TaskManager;
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskExecutionState;Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$5

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleJobManagerDisconnect$2
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleJobManagerDisconnect$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$5
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/blob/BlobService;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.9.0
+#apply(Lakka/actor/ActorRef;)V
-#apply(Lorg/apache/flink/runtime/blob/BlobService;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$5

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$13
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(J)V
@0.10.0
+#<init>(FJ)V
-#<init>(J)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$13

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleJobManagerDisconnect$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleJobManagerDisconnect$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$3
@0.9.0-milestone-1
+#getValue()D
+#getValue()Ljava/lang/Object;
+#<init>()V
@0.9.0
+#<init>(Lscala/Option;)V
-#<init>()V
@0.10.0
+#<init>(Ljava/lang/management/OperatingSystemMXBean;Lscala/Option;)V
-#<init>(Lscala/Option;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendStackTrace$2
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendStackTrace$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$6
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$6

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$6
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$6

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$cancelAndClearEverything$1
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/taskmanager/Task;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Throwable;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#apply(Lorg/apache/flink/runtime/taskmanager/Task;)V
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$cancelAndClearEverything$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$4
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$1
@0.9.0-milestone-1
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$5
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$5

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$4
@0.9.0
+#apply(Lscala/concurrent/duration/Deadline;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
-#apply(Lscala/concurrent/duration/Deadline;)Z
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$13
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$13

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$checkTempDirs$1
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$checkTempDirs$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$2
@0.9.0-milestone-1
+#apply(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/Deadline;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lscala/concurrent/duration/FiniteDuration;)V
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#apply(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/Deadline;
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lscala/concurrent/duration/FiniteDuration;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$2

+###org/apache/flink/runtime/taskmanager/TaskManager
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/ExecutionMode;)V
+#main([Ljava/lang/String;)V
+#tryToConnect(Ljava/net/InetAddress;Ljava/net/SocketAddress;I)Z
+#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskCancelResult;
+#killTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskKillResult;
+#submitTasks(Ljava/util/List;)Ljava/util/List;
+#getLibraryCacheProfile(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheProfileRequest;)Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheProfileResponse;
+#updateLibraryCache(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheUpdate;)V
+#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#shutdown()V
+#isShutDown()Z
+#logBufferUtilization()V
+#killTaskManager()V
+#invalidateLookupCacheEntries(Ljava/util/Set;)V
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/ExecutionMode;Lorg/apache/flink/runtime/protocols/JobManagerProtocol;Lorg/apache/flink/runtime/protocols/InputSplitProviderProtocol;Lorg/apache/flink/runtime/protocols/ChannelLookupProtocol;Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;Ljava/net/InetSocketAddress;Ljava/net/InetAddress;)V
+#getConnectionInfo()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
+#getExecutionMode()Lorg/apache/flink/runtime/ExecutionMode;
+#getRegisteredId()Lorg/apache/flink/runtime/instance/InstanceID;
+#isRegistered()Z
+#getAllRunningTasks()Ljava/util/Map;
+#getChannelManager()Lorg/apache/flink/runtime/io/network/ChannelManager;
+#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/taskmanager/TaskOperationResult;
+#submitTask(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;)Lorg/apache/flink/runtime/taskmanager/TaskOperationResult;
+#notifyExecutionStateChange(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/Throwable;)V
+#cancelAndClearEverything(Ljava/lang/Throwable;)V
+#createTaskManager(Lorg/apache/flink/runtime/ExecutionMode;)Lorg/apache/flink/runtime/taskmanager/TaskManager;
+#createTaskManager(Lorg/apache/flink/runtime/ExecutionMode;Ljava/net/InetSocketAddress;)Lorg/apache/flink/runtime/taskmanager/TaskManager;
+#createTaskManager(Lorg/apache/flink/runtime/ExecutionMode;Ljava/net/InetSocketAddress;Ljava/net/InetAddress;)Lorg/apache/flink/runtime/taskmanager/TaskManager;
-#<init>(Lorg/apache/flink/runtime/ExecutionMode;)V
-#tryToConnect(Ljava/net/InetAddress;Ljava/net/SocketAddress;I)Z
-#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskCancelResult;
-#killTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskKillResult;
-#submitTasks(Ljava/util/List;)Ljava/util/List;
-#getLibraryCacheProfile(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheProfileRequest;)Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheProfileResponse;
-#updateLibraryCache(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheUpdate;)V
-#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
-#logBufferUtilization()V
-#killTaskManager()V
-#invalidateLookupCacheEntries(Ljava/util/Set;)V
@0.8.0
+#getBroadcastVariableManager()Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;
+#killTaskManager()V
@0.9.0-milestone-1
+#parseTaskManagerConfiguration(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Z)Lscala/Tuple3;
+#getTaskManagerRemoteReference(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#startTaskManagerComponentsAndActor(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Ljava/lang/String;Lscala/Option;Lscala/Option;ZLjava/lang/Class;)Lakka/actor/ActorRef;
+#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;Ljava/lang/Class;)V
+#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;)V
+#selectNetworkInterfaceAndPort(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;I)Lscala/Tuple2;
+#selectNetworkInterfaceAndRunTaskManager(Lorg/apache/flink/configuration/Configuration;Ljava/lang/Class;)V
+#parseArgsAndLoadConfig([Ljava/lang/String;)Lorg/apache/flink/configuration/Configuration;
+#HEARTBEAT_INTERVAL()Lscala/concurrent/duration/FiniteDuration;
+#DELAY_AFTER_REFUSED_REGISTRATION()Lscala/concurrent/duration/FiniteDuration;
+#MAX_REGISTRATION_TIMEOUT()Lscala/concurrent/duration/FiniteDuration;
+#INITIAL_REGISTRATION_TIMEOUT()Lscala/concurrent/duration/FiniteDuration;
+#STARTUP_CONNECT_LOG_SUPPRESS()J
+#MAX_STARTUP_CONNECT_TIME()J
+#PROFILER_NAME()Ljava/lang/String;
+#TASK_MANAGER_NAME()Ljava/lang/String;
+#RUNTIME_FAILURE_RETURN_CODE()I
+#STARTUP_FAILURE_RETURN_CODE()I
+#LOG()Lorg/slf4j/Logger;
+#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
+#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
+#log()Lakka/event/LoggingAdapter;
+#receive()Lscala/PartialFunction;
+#context()Lakka/actor/ActorContext;
+#self()Lakka/actor/ActorRef;
+#akka$actor$Actor$_setter_$context_$eq(Lakka/actor/ActorContext;)V
+#akka$actor$Actor$_setter_$self_$eq(Lakka/actor/ActorRef;)V
+#sender()Lakka/actor/ActorRef;
+#aroundReceive(Lscala/PartialFunction;Ljava/lang/Object;)V
+#aroundPreStart()V
+#aroundPostStop()V
+#aroundPreRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#aroundPostRestart(Ljava/lang/Throwable;)V
+#supervisorStrategy()Lakka/actor/SupervisorStrategy;
+#preRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#postRestart(Ljava/lang/Throwable;)V
+#config()Lorg/apache/flink/runtime/taskmanager/TaskManagerConfiguration;
+#connectionInfo()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
+#jobManagerAkkaURL()Ljava/lang/String;
+#memoryManager()Lorg/apache/flink/runtime/memorymanager/MemoryManager;
+#ioManager()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;
+#network()Lorg/apache/flink/runtime/io/network/NetworkEnvironment;
+#numberOfSlots()I
+#org$apache$flink$runtime$taskmanager$TaskManager$$LOG()Lorg/slf4j/Logger;
+#askTimeout()Lakka/util/Timeout;
+#resources()Lorg/apache/flink/runtime/instance/HardwareDescription;
+#runningTasks()Lscala/collection/mutable/HashMap;
+#bcVarManager()Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;
+#fileCache()Lorg/apache/flink/runtime/filecache/FileCache;
+#org$apache$flink$runtime$taskmanager$TaskManager$$waitForRegistration()Lscala/collection/mutable/Set;
+#org$apache$flink$runtime$taskmanager$TaskManager$$currentJobManager()Lscala/Option;
+#org$apache$flink$runtime$taskmanager$TaskManager$$instanceID()Lorg/apache/flink/runtime/instance/InstanceID;
+#preStart()V
+#postStop()V
+#receiveWithLogMessages()Lscala/PartialFunction;
+#unhandled(Ljava/lang/Object;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage(Lorg/apache/flink/runtime/messages/TaskMessages$TaskMessage;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage(Lorg/apache/flink/runtime/messages/CheckpointingMessages$CheckpointingMessage;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage(Lorg/apache/flink/runtime/messages/RegistrationMessages$RegistrationMessage;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$isConnected()Z
+#org$apache$flink$runtime$taskmanager$TaskManager$$handleJobManagerDisconnect(Lakka/actor/ActorRef;Ljava/lang/String;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$unregisterTaskAndNotifyFinalState(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$sendHeartbeatToJobManager()V
+#org$apache$flink$runtime$taskmanager$TaskManager$$sendStackTrace(Lakka/actor/ActorRef;)V
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerConfiguration;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Ljava/lang/String;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;I)V
-#<init>(Lorg/apache/flink/runtime/ExecutionMode;Lorg/apache/flink/runtime/protocols/JobManagerProtocol;Lorg/apache/flink/runtime/protocols/InputSplitProviderProtocol;Lorg/apache/flink/runtime/protocols/ChannelLookupProtocol;Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;Ljava/net/InetSocketAddress;Ljava/net/InetAddress;)V
-#shutdown()V
-#isShutDown()Z
-#getConnectionInfo()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
-#getExecutionMode()Lorg/apache/flink/runtime/ExecutionMode;
-#getRegisteredId()Lorg/apache/flink/runtime/instance/InstanceID;
-#isRegistered()Z
-#getAllRunningTasks()Ljava/util/Map;
-#getChannelManager()Lorg/apache/flink/runtime/io/network/ChannelManager;
-#getBroadcastVariableManager()Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;
-#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/taskmanager/TaskOperationResult;
-#submitTask(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;)Lorg/apache/flink/runtime/taskmanager/TaskOperationResult;
-#notifyExecutionStateChange(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/Throwable;)V
-#cancelAndClearEverything(Ljava/lang/Throwable;)V
-#createTaskManager(Lorg/apache/flink/runtime/ExecutionMode;)Lorg/apache/flink/runtime/taskmanager/TaskManager;
-#createTaskManager(Lorg/apache/flink/runtime/ExecutionMode;Ljava/net/InetSocketAddress;)Lorg/apache/flink/runtime/taskmanager/TaskManager;
-#createTaskManager(Lorg/apache/flink/runtime/ExecutionMode;Ljava/net/InetSocketAddress;Ljava/net/InetAddress;)Lorg/apache/flink/runtime/taskmanager/TaskManager;
-#killTaskManager()V
@0.9.0
+#startTaskManagerComponentsAndActor(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Ljava/lang/String;Lscala/Option;Lscala/Option;ZLorg/apache/flink/runtime/StreamingMode;Ljava/lang/Class;)Lakka/actor/ActorRef;
+#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/Class;)V
+#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/StreamingMode;)V
+#selectNetworkInterfaceAndRunTaskManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/Class;)V
+#parseArgsAndLoadConfig([Ljava/lang/String;)Lscala/Tuple2;
+#LOG()Lgrizzled/slf4j/Logger;
+#log()Lgrizzled/slf4j/Logger;
+#runningTasks()Ljava/util/HashMap;
+#org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage(Lorg/apache/flink/runtime/messages/checkpoint/AbstractCheckpointMessage;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$killTaskManagerFatal(Ljava/lang/String;Ljava/lang/Throwable;)V
-#startTaskManagerComponentsAndActor(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Ljava/lang/String;Lscala/Option;Lscala/Option;ZLjava/lang/Class;)Lakka/actor/ActorRef;
-#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;Ljava/lang/Class;)V
-#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;)V
-#selectNetworkInterfaceAndRunTaskManager(Lorg/apache/flink/configuration/Configuration;Ljava/lang/Class;)V
-#parseArgsAndLoadConfig([Ljava/lang/String;)Lorg/apache/flink/configuration/Configuration;
-#PROFILER_NAME()Ljava/lang/String;
-#LOG()Lorg/slf4j/Logger;
-#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
-#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
-#log()Lakka/event/LoggingAdapter;
-#org$apache$flink$runtime$taskmanager$TaskManager$$LOG()Lorg/slf4j/Logger;
-#runningTasks()Lscala/collection/mutable/HashMap;
-#org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage(Lorg/apache/flink/runtime/messages/CheckpointingMessages$CheckpointingMessage;)V
-#org$apache$flink$runtime$taskmanager$TaskManager$$unregisterTaskAndNotifyFinalState(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@0.10.0
+#getAndCheckJobManagerAddress(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple2;
+#parseTaskManagerConfiguration(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Z)Lscala/Tuple4;
+#selectNetworkInterfaceAndPort(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple2;
+#org$apache$flink$runtime$LogMessages$$super$receive()Lscala/PartialFunction;
+#org$apache$flink$runtime$LeaderSessionMessageFilter$$super$receive()Lscala/PartialFunction;
+#org$apache$flink$runtime$LeaderSessionMessageFilter$$super$decorateMessage(Ljava/lang/Object;)Ljava/lang/Object;
+#decorateMessage(Ljava/lang/Object;)Ljava/lang/Object;
+#memoryManager()Lorg/apache/flink/runtime/memory/MemoryManager;
+#leaderRetrievalService()Lorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;
+#currentJobManager()Lscala/Option;
+#currentJobManager_$eq(Lscala/Option;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$jobManagerAkkaURL()Lscala/Option;
+#leaderSessionID()Lscala/Option;
+#leaderSessionID_$eq(Lscala/Option;)V
+#handleMessage()Lscala/PartialFunction;
+#isConnected()Z
+#handleJobManagerDisconnect(Lakka/actor/ActorRef;Ljava/lang/String;)V
+#sendHeartbeatToJobManager()V
+#notifyLeaderAddress(Ljava/lang/String;Ljava/util/UUID;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$handleJobManagerLeaderAddress(Ljava/lang/String;Ljava/util/UUID;)V
+#triggerTaskManagerRegistration()V
+#handleError(Ljava/lang/Exception;)V
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerConfiguration;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/memory/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;ILorg/apache/flink/runtime/leaderretrieval/LeaderRetrievalService;)V
-#parseTaskManagerConfiguration(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Z)Lscala/Tuple3;
-#selectNetworkInterfaceAndPort(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;I)Lscala/Tuple2;
-#jobManagerAkkaURL()Ljava/lang/String;
-#memoryManager()Lorg/apache/flink/runtime/memorymanager/MemoryManager;
-#org$apache$flink$runtime$taskmanager$TaskManager$$currentJobManager()Lscala/Option;
-#receiveWithLogMessages()Lscala/PartialFunction;
-#org$apache$flink$runtime$taskmanager$TaskManager$$isConnected()Z
-#org$apache$flink$runtime$taskmanager$TaskManager$$handleJobManagerDisconnect(Lakka/actor/ActorRef;Ljava/lang/String;)V
-#org$apache$flink$runtime$taskmanager$TaskManager$$sendHeartbeatToJobManager()V
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerConfiguration;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Ljava/lang/String;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;I)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleError$2
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleError$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$3
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorRef;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.9.0
+#apply(Lakka/actor/Cancellable;)Z
-#apply(Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$1
@0.9.0-milestone-1
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/String;Lscala/Option;ILscala/concurrent/duration/FiniteDuration;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lscala/Option;)V
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/String;Lscala/Option;ILscala/concurrent/duration/FiniteDuration;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$1

+###org/apache/flink/runtime/taskmanager/TaskManagerConfiguration
@0.9.0-milestone-1
+#tupled()Lscala/Function1;
+#curried()Lscala/Function1;
+#tmpDirPaths()[Ljava/lang/String;
+#cleanupInterval()J
+#timeout()Lscala/concurrent/duration/FiniteDuration;
+#maxRegistrationDuration()Lscala/Option;
+#numberOfSlots()I
+#configuration()Lorg/apache/flink/configuration/Configuration;
+#copy([Ljava/lang/String;JLscala/concurrent/duration/FiniteDuration;Lscala/Option;ILorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/taskmanager/TaskManagerConfiguration;
+#copy$default$1()[Ljava/lang/String;
+#copy$default$2()J
+#copy$default$3()Lscala/concurrent/duration/FiniteDuration;
+#copy$default$4()Lscala/Option;
+#copy$default$5()I
+#copy$default$6()Lorg/apache/flink/configuration/Configuration;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>([Ljava/lang/String;JLscala/concurrent/duration/FiniteDuration;Lscala/Option;ILorg/apache/flink/configuration/Configuration;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManagerConfiguration

+###org/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;)Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;
+#unapply(Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;)Lscala/Option;
+#$lessinit$greater$default$4()Lscala/Option;
+#apply$default$4()Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0
+#apply(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;Lscala/Tuple2;)Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;
+#$lessinit$greater$default$5()Lscala/Tuple2;
+#apply$default$5()Lscala/Tuple2;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#apply(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;)Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;
-#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@0.10.0
+#apply(IILorg/apache/flink/core/memory/MemoryType;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;Lscala/Tuple2;)Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;
+#$lessinit$greater$default$5()Lscala/Option;
+#$lessinit$greater$default$6()Lscala/Tuple2;
+#apply$default$5()Lscala/Option;
+#apply$default$6()Lscala/Tuple2;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#apply(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;Lscala/Tuple2;)Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;
-#$lessinit$greater$default$4()Lscala/Option;
-#$lessinit$greater$default$5()Lscala/Tuple2;
-#apply$default$4()Lscala/Option;
-#apply$default$5()Lscala/Tuple2;
-#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration$

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$4
@0.9.0-milestone-1
+#run()V
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;JLorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
@0.9.0
+#run()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/StreamingMode;)V
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;JLorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$6
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
+#apply()Ljava/lang/Exception;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$6

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$15
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$15

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$3$$anonfun$getValue$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anon$3;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$3$$anonfun$getValue$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$selectNetworkInterfaceAndPort$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
+#<init>(Lscala/runtime/ObjectRef;Ljava/net/InetAddress;)V
-#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$selectNetworkInterfaceAndPort$2

+###org/apache/flink/runtime/taskmanager/TaskManager$
@0.9.0-milestone-1
+#<clinit>()V
+#LOG()Lorg/slf4j/Logger;
+#STARTUP_FAILURE_RETURN_CODE()I
+#RUNTIME_FAILURE_RETURN_CODE()I
+#TASK_MANAGER_NAME()Ljava/lang/String;
+#PROFILER_NAME()Ljava/lang/String;
+#MAX_STARTUP_CONNECT_TIME()J
+#STARTUP_CONNECT_LOG_SUPPRESS()J
+#INITIAL_REGISTRATION_TIMEOUT()Lscala/concurrent/duration/FiniteDuration;
+#MAX_REGISTRATION_TIMEOUT()Lscala/concurrent/duration/FiniteDuration;
+#DELAY_AFTER_REFUSED_REGISTRATION()Lscala/concurrent/duration/FiniteDuration;
+#HEARTBEAT_INTERVAL()Lscala/concurrent/duration/FiniteDuration;
+#main([Ljava/lang/String;)V
+#parseArgsAndLoadConfig([Ljava/lang/String;)Lorg/apache/flink/configuration/Configuration;
+#selectNetworkInterfaceAndRunTaskManager(Lorg/apache/flink/configuration/Configuration;Ljava/lang/Class;)V
+#selectNetworkInterfaceAndPort(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;I)Lscala/Tuple2;
+#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;)V
+#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;Ljava/lang/Class;)V
+#startTaskManagerComponentsAndActor(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Ljava/lang/String;Lscala/Option;Lscala/Option;ZLjava/lang/Class;)Lakka/actor/ActorRef;
+#getTaskManagerRemoteReference(Ljava/lang/String;Lakka/actor/ActorSystem;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#parseTaskManagerConfiguration(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Z)Lscala/Tuple3;
+#org$apache$flink$runtime$taskmanager$TaskManager$$getAndCheckJobManagerAddress(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple2;
+#org$apache$flink$runtime$taskmanager$TaskManager$$getMemoryUsageStatsAsString(Ljava/lang/management/MemoryMXBean;)Ljava/lang/String;
+#org$apache$flink$runtime$taskmanager$TaskManager$$getGarbageCollectorStatsAsString(Lscala/collection/Iterable;)Ljava/lang/String;
+#org$apache$flink$runtime$taskmanager$TaskManager$$createMetricsRegistry()Lcom/codahale/metrics/MetricRegistry;
@0.9.0
+#LOG()Lgrizzled/slf4j/Logger;
+#parseArgsAndLoadConfig([Ljava/lang/String;)Lscala/Tuple2;
+#selectNetworkInterfaceAndRunTaskManager(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/Class;)V
+#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/StreamingMode;)V
+#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/StreamingMode;Ljava/lang/Class;)V
+#startTaskManagerComponentsAndActor(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Ljava/lang/String;Lscala/Option;Lscala/Option;ZLorg/apache/flink/runtime/StreamingMode;Ljava/lang/Class;)Lakka/actor/ActorRef;
-#LOG()Lorg/slf4j/Logger;
-#PROFILER_NAME()Ljava/lang/String;
-#parseArgsAndLoadConfig([Ljava/lang/String;)Lorg/apache/flink/configuration/Configuration;
-#selectNetworkInterfaceAndRunTaskManager(Lorg/apache/flink/configuration/Configuration;Ljava/lang/Class;)V
-#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;)V
-#runTaskManager(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;Ljava/lang/Class;)V
-#startTaskManagerComponentsAndActor(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorSystem;Ljava/lang/String;Lscala/Option;Lscala/Option;ZLjava/lang/Class;)Lakka/actor/ActorRef;
-#org$apache$flink$runtime$taskmanager$TaskManager$$getMemoryUsageStatsAsString(Ljava/lang/management/MemoryMXBean;)Ljava/lang/String;
-#org$apache$flink$runtime$taskmanager$TaskManager$$getGarbageCollectorStatsAsString(Lscala/collection/Iterable;)Ljava/lang/String;
@0.10.0
+#selectNetworkInterfaceAndPort(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple2;
+#parseTaskManagerConfiguration(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Z)Lscala/Tuple4;
+#getAndCheckJobManagerAddress(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple2;
-#selectNetworkInterfaceAndPort(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;I)Lscala/Tuple2;
-#parseTaskManagerConfiguration(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Z)Lscala/Tuple3;
-#org$apache$flink$runtime$taskmanager$TaskManager$$getAndCheckJobManagerAddress(Lorg/apache/flink/configuration/Configuration;)Lscala/Tuple2;
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$1
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorRef;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lakka/actor/ActorRef;)V
-#apply(Lakka/actor/ActorRef;)V
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$4
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$4
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.9.0
+#apply(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
-#apply(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage$4
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$8
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
+#apply()Ljava/lang/Exception;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$8

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$8
@0.9.0-milestone-1
+#apply()Lscala/runtime/Nothing$;
+#apply()Ljava/lang/Object;
+#<init>([Ljava/lang/String;Lscopt/OptionParser;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$8

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$6
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/String;Lscala/concurrent/duration/FiniteDuration;I)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$6

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleError$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleError$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$4
@0.9.0-milestone-1
+#apply(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/Deadline;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
+#apply(Lscala/Tuple2;)Ljava/lang/String;
-#apply(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/Deadline;
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$10
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$10

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$9
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#apply()Ljava/lang/Exception;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$9

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$sendHeartbeatToJobManager$5
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$sendHeartbeatToJobManager$5

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$1
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Throwable;)Z
+#isDefinedAt(Ljava/lang/Object;)Z
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/taskmanager/Task;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/messages/TaskMessages$TaskMessage;)V
-#applyOrElse(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
-#isDefinedAt(Ljava/lang/Throwable;)Z
-#isDefinedAt(Ljava/lang/Object;)Z
-#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/taskmanager/Task;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$updateTaskInputPartitions$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$updateTaskInputPartitions$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendStackTrace$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendStackTrace$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$4
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$12
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
@0.10.0
+#<init>(FJ)V
-#<init>(Lorg/apache/flink/configuration/Configuration;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$12

+###org/apache/flink/runtime/taskmanager/TaskManagerCliOptions
@0.9.0
+#<init>()V
+#getConfigDir()Ljava/lang/String;
+#setConfigDir(Ljava/lang/String;)V
+#getMode()Lorg/apache/flink/runtime/StreamingMode;
+#setMode(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManagerCliOptions

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$8
@0.9.0
+#apply(Lakka/actor/ActorRef;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$8

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$unregisterTaskAndNotifyFinalState$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$unregisterTaskAndNotifyFinalState$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3
@0.9.0-milestone-1
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
+#apply(Lscala/Tuple2;)Lscala/collection/Iterable;
+#org$apache$flink$runtime$taskmanager$TaskManager$$anonfun$$$outer()Lorg/apache/flink/runtime/taskmanager/TaskManager;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/taskmanager/Task;)V
-#apply()Ljava/lang/String;
-#apply()Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$killTaskManagerFatal$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$killTaskManagerFatal$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$6
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$6

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$cancelAndClearEverything$2
@0.9.0
+#apply(Lorg/apache/flink/runtime/taskmanager/Task;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$cancelAndClearEverything$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$submitTask$1
@0.9.0-milestone-1
+#apply(Ljava/util/Map$Entry;)Ljava/util/concurrent/FutureTask;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/api/common/JobID;Ljava/util/HashMap;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/taskmanager/Task;)V
-#apply(Ljava/util/Map$Entry;)Ljava/util/concurrent/FutureTask;
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/api/common/JobID;Ljava/util/HashMap;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$submitTask$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$12
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$12

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleMessage$1;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$12
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
+#apply()Ljava/lang/Exception;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$12

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$4
@0.9.0-milestone-1
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/taskmanager/Task;)V
@0.9.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#apply()V
-#apply$mcV$sp()V
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/taskmanager/Task;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$5
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$5

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$14
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(FJ)V
@0.10.0
+#apply(Ljava/lang/reflect/Method;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
-#apply()Ljava/lang/String;
-#apply()Ljava/lang/Object;
-#<init>(FJ)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$14

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$6
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$6

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$6
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$6

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$9
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$9

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$14
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$14

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$4
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$5
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/net/InetSocketAddress;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$5

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$10
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
+#apply()Ljava/lang/Exception;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$10

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$7
@0.9.0
+#apply(Lorg/apache/flink/runtime/blob/BlobService;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$7

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$3$$anonfun$getValue$1
@0.9.0
+#apply()D
+#apply$mcD$sp()D
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anon$3;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$3$$anonfun$getValue$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$3$$anonfun$getValue$4
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anon$3;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$3$$anonfun$getValue$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$11
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#apply()Ljava/lang/Exception;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$11

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$11
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$11

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$13
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$13

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$2
@0.9.0-milestone-1
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lscala/Option;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#apply()V
-#apply$mcV$sp()V
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lscala/Option;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$9
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$9

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$3
@0.9.0-milestone-1
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Throwable;Lorg/apache/flink/runtime/taskmanager/Task;)V
@0.9.0
+#apply(Lakka/actor/ActorRef;)V
+#org$apache$flink$runtime$taskmanager$TaskManager$$anonfun$$$outer()Lorg/apache/flink/runtime/taskmanager/TaskManager;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/messages/TaskMessages$UpdateTaskExecutionState;Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
-#apply()V
-#apply$mcV$sp()V
-#apply()Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Throwable;Lorg/apache/flink/runtime/taskmanager/Task;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$3$$anonfun$getValue$2
@0.9.0
+#apply(Ljava/lang/reflect/Method;)D
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anon$3;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$3$$anonfun$getValue$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$parseTaskManagerConfiguration$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lscala/concurrent/duration/FiniteDuration;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$parseTaskManagerConfiguration$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$3$$anonfun$apply$2
@0.9.0
+#apply(Lscala/util/Try;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$3;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$3$$anonfun$apply$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$unregisterTaskAndNotifyFinalState$4
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$unregisterTaskAndNotifyFinalState$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$8
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$8

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$5
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$5

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$sendHeartbeatToJobManager$2
@0.10.0
+#apply(Lscala/Tuple2;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lscala/collection/mutable/Buffer;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$sendHeartbeatToJobManager$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$2
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
-#apply(Lakka/actor/ActorRef;)Lakka/actor/ActorRef;
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$2
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$sendHeartbeatToJobManager$3
@0.10.0
+#apply(Lakka/actor/ActorRef;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;[BLscala/collection/mutable/Buffer;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$sendHeartbeatToJobManager$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$sendHeartbeatToJobManager$4
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$sendHeartbeatToJobManager$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$killTaskManagerFatal$2
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$killTaskManagerFatal$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$unhandled$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$unhandled$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleCheckpointingMessage$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$4
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>()V
-#apply()Ljava/lang/Throwable;
-#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$2
@0.9.0-milestone-1
+#run()V
+#<init>(Lakka/actor/ActorSystem;J)V
@0.9.0
+#getValue()D
+#getValue()Ljava/lang/Object;
+#<init>()V
-#run()V
-#<init>(Lakka/actor/ActorSystem;J)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$selectNetworkInterfaceAndPort$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lscala/runtime/ObjectRef;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$selectNetworkInterfaceAndPort$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$9
@0.9.0-milestone-1
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
@0.9.0
+#apply()Lscala/runtime/Nothing$;
+#<init>([Ljava/lang/String;Lscopt/OptionParser;)V
-#apply()Ljava/lang/String;
-#<init>(Lorg/apache/flink/configuration/Configuration;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerCliOptions;)V
-#apply()Lscala/runtime/Nothing$;
-#<init>([Ljava/lang/String;Lscopt/OptionParser;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$9

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/String;I)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$sendHeartbeatToJobManager$1
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$sendHeartbeatToJobManager$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
+#<init>(J)V
-#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$8
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lakka/actor/ActorRef;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$8

+###org/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration
@0.9.0-milestone-1
+#apply$default$4()Lscala/Option;
+#$lessinit$greater$default$4()Lscala/Option;
+#tupled()Lscala/Function1;
+#curried()Lscala/Function1;
+#numNetworkBuffers()I
+#networkBufferSize()I
+#ioMode()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;
+#nettyConfig()Lscala/Option;
+#copy(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;)Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;
+#copy$default$1()I
+#copy$default$2()I
+#copy$default$3()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;
+#copy$default$4()Lscala/Option;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;)V
@0.9.0
+#apply$default$5()Lscala/Tuple2;
+#$lessinit$greater$default$5()Lscala/Tuple2;
+#partitionRequestInitialAndMaxBackoff()Lscala/Tuple2;
+#copy(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;Lscala/Tuple2;)Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;
+#copy$default$5()Lscala/Tuple2;
+#<init>(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;Lscala/Tuple2;)V
-#copy(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;)Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;
-#<init>(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;)V
@0.10.0
+#apply$default$6()Lscala/Tuple2;
+#apply$default$5()Lscala/Option;
+#$lessinit$greater$default$6()Lscala/Tuple2;
+#$lessinit$greater$default$5()Lscala/Option;
+#memoryType()Lorg/apache/flink/core/memory/MemoryType;
+#copy(IILorg/apache/flink/core/memory/MemoryType;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;Lscala/Tuple2;)Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;
+#copy$default$3()Lorg/apache/flink/core/memory/MemoryType;
+#copy$default$4()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;
+#copy$default$5()Lscala/Option;
+#copy$default$6()Lscala/Tuple2;
+#<init>(IILorg/apache/flink/core/memory/MemoryType;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;Lscala/Tuple2;)V
-#apply$default$5()Lscala/Tuple2;
-#apply$default$4()Lscala/Option;
-#$lessinit$greater$default$5()Lscala/Tuple2;
-#$lessinit$greater$default$4()Lscala/Option;
-#copy(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;Lscala/Tuple2;)Lorg/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration;
-#copy$default$3()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;
-#copy$default$4()Lscala/Option;
-#copy$default$5()Lscala/Tuple2;
-#<init>(IILorg/apache/flink/runtime/io/disk/iomanager/IOManager$IOMode;Lscala/Option;Lscala/Tuple2;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/NetworkEnvironmentConfiguration

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$7
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$7

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$liftedTree1$1$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$liftedTree1$1$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/StreamingMode;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$1

+###org/apache/flink/runtime/taskmanager/TaskInputSplitProvider
@0.6-hadoop2-incubating
+#getNextInputSplit()Lorg/apache/flink/core/io/InputSplit;
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/protocols/InputSplitProviderProtocol;Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@0.8.1
+#<init>(Lorg/apache/flink/runtime/protocols/InputSplitProviderProtocol;Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/ClassLoader;)V
-#<init>(Lorg/apache/flink/runtime/protocols/InputSplitProviderProtocol;Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@0.9.0-milestone-1
+#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/ClassLoader;Lakka/util/Timeout;)V
-#<init>(Lorg/apache/flink/runtime/protocols/InputSplitProviderProtocol;Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/ClassLoader;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/instance/ActorGateway;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/ClassLoader;Lscala/concurrent/duration/FiniteDuration;)V
-#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Ljava/lang/ClassLoader;Lakka/util/Timeout;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskInputSplitProvider

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleMessage$1
@0.10.0
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$handleMessage$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$2
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Throwable;)Z
+#isDefinedAt(Ljava/lang/Object;)Z
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/taskmanager/Task;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#applyOrElse(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
-#isDefinedAt(Ljava/lang/Throwable;)Z
-#isDefinedAt(Ljava/lang/Object;)Z
-#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/taskmanager/Task;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$5
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#apply()Ljava/lang/Exception;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$5

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$1
@0.9.0-milestone-1
+#apply(Lakka/actor/Cancellable;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
-#apply(Lakka/actor/Cancellable;)Z
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$10
@0.9.0-milestone-1
+#apply(Ljava/lang/management/GarbageCollectorMXBean;)Ljava/lang/String;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerCliOptions;)V
-#apply(Ljava/lang/management/GarbageCollectorMXBean;)Ljava/lang/String;
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>()V
@0.10.0
+#<init>(Lcom/typesafe/config/Config;)V
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerCliOptions;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$10

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$7
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$associateWithJobManager$7

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$6
@0.9.0
+#apply(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$disassociateFromJobManager$6

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$7
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$7

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$7
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@0.10.0
+#apply()Ljava/lang/String;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#apply()Ljava/lang/Exception;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$7

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1
@0.10.0
+#apply()V
+#apply$mcV$sp()V
+#org$apache$flink$runtime$taskmanager$TaskManager$$anonfun$$anonfun$$$outer()Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3;Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$3$$anonfun$apply$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$checkTempDirs$1$$anonfun$apply$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$checkTempDirs$1;JJDLjava/lang/String;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$checkTempDirs$1$$anonfun$apply$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$1
@0.9.0-milestone-1
+#apply(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/Deadline;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lscala/concurrent/duration/FiniteDuration;)V
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$11
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lcom/typesafe/config/Config;)V
@0.10.0
+#<init>(J)V
-#<init>(Lcom/typesafe/config/Config;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$11

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$5
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$preStart$5

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$4
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$runTaskManager$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$unregisterTaskAndNotifyFinalState$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/taskmanager/Task;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$unregisterTaskAndNotifyFinalState$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$main$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$submitTask$2
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#apply(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;)V
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$submitTask$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$1$$anonfun$7
@0.9.0-milestone-1
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration;)Lorg/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anon$1;)V
@0.9.0
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/TaskManagerCliOptions;)Lorg/apache/flink/runtime/taskmanager/TaskManagerCliOptions;
-#apply(Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration;)Lorg/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration;
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$1$$anonfun$7

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$unregisterTaskAndNotifyFinalState$2
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$unregisterTaskAndNotifyFinalState$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)Lscala/collection/Iterable;
+#org$apache$flink$runtime$taskmanager$TaskManager$$anonfun$$$outer()Lorg/apache/flink/runtime/taskmanager/TaskManager;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/taskmanager/Task;)V
@0.10.0
+#apply(Lscala/concurrent/duration/FiniteDuration;)Lscala/concurrent/duration/Deadline;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#apply(Lscala/Tuple2;)Lscala/collection/Iterable;
-#org$apache$flink$runtime$taskmanager$TaskManager$$anonfun$$$outer()Lorg/apache/flink/runtime/taskmanager/TaskManager;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/taskmanager/Task;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5

+###org/apache/flink/runtime/taskmanager/TaskManagerConfiguration$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply([Ljava/lang/String;JLscala/concurrent/duration/FiniteDuration;Lscala/Option;ILorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/taskmanager/TaskManagerConfiguration;
+#unapply(Lorg/apache/flink/runtime/taskmanager/TaskManagerConfiguration;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManagerConfiguration$

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$liftedTree1$1$2
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$liftedTree1$1$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$3
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$postStop$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$1$$anonfun$6
@0.10.0
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/TaskManagerCliOptions;)Lorg/apache/flink/runtime/taskmanager/TaskManagerCliOptions;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anon$1;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$1$$anonfun$6

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$submitTask$3
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$submitTask$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$3
@0.9.0-milestone-1
+#apply(Lscala/concurrent/duration/Deadline;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
-#apply(Lscala/concurrent/duration/Deadline;)Z
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
@0.10.0
+#apply(Lscala/concurrent/duration/Deadline;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#apply()Ljava/lang/String;
-#apply()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleRegistrationMessage$3

+###org/apache/flink/shaded/com/google/common/annotations/Beta
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/annotations/Beta

+###org/apache/flink/shaded/com/google/common/annotations/GwtCompatible
@0.9.0-milestone-1
+#serializable()Z
+#emulated()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/annotations/GwtCompatible

+###org/apache/flink/shaded/com/google/common/annotations/GwtIncompatible
@0.9.0-milestone-1
+#value()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/annotations/GwtIncompatible

+###org/apache/flink/shaded/com/google/common/annotations/VisibleForTesting
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/annotations/VisibleForTesting

+###org/apache/flink/shaded/com/google/common/base/Ascii
@0.9.0-milestone-1
+#toLowerCase(Ljava/lang/String;)Ljava/lang/String;
+#toLowerCase(Ljava/lang/CharSequence;)Ljava/lang/String;
+#toLowerCase(C)C
+#toUpperCase(Ljava/lang/String;)Ljava/lang/String;
+#toUpperCase(Ljava/lang/CharSequence;)Ljava/lang/String;
+#toUpperCase(C)C
+#isLowerCase(C)Z
+#isUpperCase(C)Z
+#truncate(Ljava/lang/CharSequence;ILjava/lang/String;)Ljava/lang/String;
+#equalsIgnoreCase(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Ascii

+###org/apache/flink/shaded/com/google/common/base/CaseFormat
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/base/CaseFormat;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/CaseFormat;
+#to(Lorg/apache/flink/shaded/com/google/common/base/CaseFormat;Ljava/lang/String;)Ljava/lang/String;
+#converterTo(Lorg/apache/flink/shaded/com/google/common/base/CaseFormat;)Lorg/apache/flink/shaded/com/google/common/base/Converter;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/CaseFormat

+###org/apache/flink/shaded/com/google/common/base/CharMatcher
@0.9.0-milestone-1
+#is(C)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#isNot(C)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#anyOf(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#noneOf(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#inRange(CC)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#forPredicate(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#matches(C)Z
+#negate()Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#and(Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#or(Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#precomputed()Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#matchesAnyOf(Ljava/lang/CharSequence;)Z
+#matchesAllOf(Ljava/lang/CharSequence;)Z
+#matchesNoneOf(Ljava/lang/CharSequence;)Z
+#indexIn(Ljava/lang/CharSequence;)I
+#indexIn(Ljava/lang/CharSequence;I)I
+#lastIndexIn(Ljava/lang/CharSequence;)I
+#countIn(Ljava/lang/CharSequence;)I
+#removeFrom(Ljava/lang/CharSequence;)Ljava/lang/String;
+#retainFrom(Ljava/lang/CharSequence;)Ljava/lang/String;
+#replaceFrom(Ljava/lang/CharSequence;C)Ljava/lang/String;
+#replaceFrom(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
+#trimFrom(Ljava/lang/CharSequence;)Ljava/lang/String;
+#trimLeadingFrom(Ljava/lang/CharSequence;)Ljava/lang/String;
+#trimTrailingFrom(Ljava/lang/CharSequence;)Ljava/lang/String;
+#collapseFrom(Ljava/lang/CharSequence;C)Ljava/lang/String;
+#trimAndCollapseFrom(Ljava/lang/CharSequence;C)Ljava/lang/String;
+#apply(Ljava/lang/Character;)Z[deprecated]
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/CharMatcher

+###org/apache/flink/shaded/com/google/common/base/Charsets
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Charsets

+###org/apache/flink/shaded/com/google/common/base/Converter
@0.9.0-milestone-1
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
+#convertAll(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#reverse()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#andThen(Lorg/apache/flink/shaded/com/google/common/base/Converter;)Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#equals(Ljava/lang/Object;)Z
+#from(Lorg/apache/flink/shaded/com/google/common/base/Function;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#identity()Lorg/apache/flink/shaded/com/google/common/base/Converter;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Converter

+###org/apache/flink/shaded/com/google/common/base/Defaults
@0.9.0-milestone-1
+#defaultValue(Ljava/lang/Class;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Defaults

+###org/apache/flink/shaded/com/google/common/base/Enums
@0.9.0-milestone-1
+#getField(Ljava/lang/Enum;)Ljava/lang/reflect/Field;
+#getIfPresent(Ljava/lang/Class;Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#stringConverter(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/base/Converter;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Enums

+###org/apache/flink/shaded/com/google/common/base/Equivalence$Wrapper
@0.9.0-milestone-1
+#get()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Equivalence$Wrapper

+###org/apache/flink/shaded/com/google/common/base/Equivalence
@0.9.0-milestone-1
+#equivalent(Ljava/lang/Object;Ljava/lang/Object;)Z
+#hash(Ljava/lang/Object;)I
+#onResultOf(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/base/Equivalence;
+#wrap(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Equivalence$Wrapper;
+#pairwise()Lorg/apache/flink/shaded/com/google/common/base/Equivalence;
+#equivalentTo(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#equals()Lorg/apache/flink/shaded/com/google/common/base/Equivalence;
+#identity()Lorg/apache/flink/shaded/com/google/common/base/Equivalence;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Equivalence

+###org/apache/flink/shaded/com/google/common/base/FinalizablePhantomReference
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/FinalizablePhantomReference

+###org/apache/flink/shaded/com/google/common/base/FinalizableReference
@0.9.0-milestone-1
+#finalizeReferent()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/FinalizableReference

+###org/apache/flink/shaded/com/google/common/base/FinalizableReferenceQueue
@0.9.0-milestone-1
+#<init>()V
+#close()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/FinalizableReferenceQueue

+###org/apache/flink/shaded/com/google/common/base/FinalizableSoftReference
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/FinalizableSoftReference

+###org/apache/flink/shaded/com/google/common/base/FinalizableWeakReference
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/FinalizableWeakReference

+###org/apache/flink/shaded/com/google/common/base/Function
@0.9.0-milestone-1
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Function

+###org/apache/flink/shaded/com/google/common/base/Functions
@0.9.0-milestone-1
+#toStringFunction()Lorg/apache/flink/shaded/com/google/common/base/Function;
+#identity()Lorg/apache/flink/shaded/com/google/common/base/Function;
+#forMap(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/base/Function;
+#forMap(Ljava/util/Map;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Function;
+#compose(Lorg/apache/flink/shaded/com/google/common/base/Function;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/base/Function;
+#forPredicate(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Function;
+#constant(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Function;
+#forSupplier(Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/base/Function;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Functions

+###org/apache/flink/shaded/com/google/common/base/Joiner$MapJoiner
@0.9.0-milestone-1
+#appendTo(Ljava/lang/Appendable;Ljava/util/Map;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;
+#join(Ljava/util/Map;)Ljava/lang/String;
+#appendTo(Ljava/lang/Appendable;Ljava/lang/Iterable;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;
+#appendTo(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;
+#join(Ljava/lang/Iterable;)Ljava/lang/String;
+#join(Ljava/util/Iterator;)Ljava/lang/String;
+#useForNull(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Joiner$MapJoiner;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Joiner$MapJoiner

+###org/apache/flink/shaded/com/google/common/base/Joiner
@0.9.0-milestone-1
+#on(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Joiner;
+#on(C)Lorg/apache/flink/shaded/com/google/common/base/Joiner;
+#appendTo(Ljava/lang/Appendable;Ljava/lang/Iterable;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/Appendable;[Ljava/lang/Object;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/Appendable;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;
+#appendTo(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;
+#appendTo(Ljava/lang/StringBuilder;[Ljava/lang/Object;)Ljava/lang/StringBuilder;
+#appendTo(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/StringBuilder;
+#join(Ljava/lang/Iterable;)Ljava/lang/String;
+#join(Ljava/util/Iterator;)Ljava/lang/String;
+#join([Ljava/lang/Object;)Ljava/lang/String;
+#join(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/String;
+#useForNull(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Joiner;
+#skipNulls()Lorg/apache/flink/shaded/com/google/common/base/Joiner;
+#withKeyValueSeparator(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Joiner$MapJoiner;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Joiner

+###org/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper
@0.9.0-milestone-1
+#omitNullValues()Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;Z)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;C)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;D)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;F)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;J)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(Z)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(C)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(D)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(F)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(I)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(J)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper

+###org/apache/flink/shaded/com/google/common/base/MoreObjects
@0.9.0-milestone-1
+#firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#toStringHelper(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#toStringHelper(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#toStringHelper(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/MoreObjects

+###org/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper
@0.9.0-milestone-1
+#omitNullValues()Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;Z)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;C)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;D)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;F)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;J)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(Z)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(C)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(D)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(F)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(I)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(J)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper

+###org/apache/flink/shaded/com/google/common/base/Objects
@0.9.0-milestone-1
+#equal(Ljava/lang/Object;Ljava/lang/Object;)Z
+#hashCode([Ljava/lang/Object;)I
+#toStringHelper(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;[deprecated]
+#toStringHelper(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;[deprecated]
+#toStringHelper(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;[deprecated]
+#firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Objects

+###org/apache/flink/shaded/com/google/common/base/Optional
@0.9.0-milestone-1
+#absent()Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#of(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#fromNullable(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#isPresent()Z
+#get()Ljava/lang/Object;
+#or(Ljava/lang/Object;)Ljava/lang/Object;
+#or(Lorg/apache/flink/shaded/com/google/common/base/Optional;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#or(Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Ljava/lang/Object;
+#orNull()Ljava/lang/Object;
+#asSet()Ljava/util/Set;
+#transform(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#presentInstances(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Optional

+###org/apache/flink/shaded/com/google/common/base/Preconditions
@0.9.0-milestone-1
+#checkArgument(Z)V
+#checkArgument(ZLjava/lang/Object;)V
+#checkArgument(ZLjava/lang/String;[Ljava/lang/Object;)V
+#checkState(Z)V
+#checkState(ZLjava/lang/Object;)V
+#checkState(ZLjava/lang/String;[Ljava/lang/Object;)V
+#checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;
+#checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#checkNotNull(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#checkElementIndex(II)I
+#checkElementIndex(IILjava/lang/String;)I
+#checkPositionIndex(II)I
+#checkPositionIndex(IILjava/lang/String;)I
+#checkPositionIndexes(III)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Preconditions

+###org/apache/flink/shaded/com/google/common/base/Predicate
@0.9.0-milestone-1
+#apply(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Predicate

+###org/apache/flink/shaded/com/google/common/base/Predicates
@0.9.0-milestone-1
+#alwaysTrue()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#alwaysFalse()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#isNull()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#notNull()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#not(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#and(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#and([Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#and(Lorg/apache/flink/shaded/com/google/common/base/Predicate;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#or(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#or([Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#or(Lorg/apache/flink/shaded/com/google/common/base/Predicate;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#equalTo(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#instanceOf(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#assignableFrom(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#in(Ljava/util/Collection;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#compose(Lorg/apache/flink/shaded/com/google/common/base/Predicate;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#containsPattern(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#contains(Ljava/util/regex/Pattern;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Predicates

+###org/apache/flink/shaded/com/google/common/base/Splitter$MapSplitter
@0.9.0-milestone-1
+#split(Ljava/lang/CharSequence;)Ljava/util/Map;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Splitter$MapSplitter

+###org/apache/flink/shaded/com/google/common/base/Splitter
@0.9.0-milestone-1
+#on(C)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#on(Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#on(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#on(Ljava/util/regex/Pattern;)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#onPattern(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#fixedLength(I)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#omitEmptyStrings()Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#limit(I)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#trimResults()Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#trimResults(Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#split(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
+#splitToList(Ljava/lang/CharSequence;)Ljava/util/List;
+#withKeyValueSeparator(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Splitter$MapSplitter;
+#withKeyValueSeparator(C)Lorg/apache/flink/shaded/com/google/common/base/Splitter$MapSplitter;
+#withKeyValueSeparator(Lorg/apache/flink/shaded/com/google/common/base/Splitter;)Lorg/apache/flink/shaded/com/google/common/base/Splitter$MapSplitter;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Splitter

+###org/apache/flink/shaded/com/google/common/base/StandardSystemProperty
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/base/StandardSystemProperty;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/StandardSystemProperty;
+#key()Ljava/lang/String;
+#value()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/StandardSystemProperty

+###org/apache/flink/shaded/com/google/common/base/Stopwatch
@0.9.0-milestone-1
+#createUnstarted()Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#createUnstarted(Lorg/apache/flink/shaded/com/google/common/base/Ticker;)Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#createStarted()Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#createStarted(Lorg/apache/flink/shaded/com/google/common/base/Ticker;)Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#isRunning()Z
+#start()Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#stop()Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#reset()Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#elapsed(Ljava/util/concurrent/TimeUnit;)J
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Stopwatch

+###org/apache/flink/shaded/com/google/common/base/Strings
@0.9.0-milestone-1
+#nullToEmpty(Ljava/lang/String;)Ljava/lang/String;
+#emptyToNull(Ljava/lang/String;)Ljava/lang/String;
+#isNullOrEmpty(Ljava/lang/String;)Z
+#padStart(Ljava/lang/String;IC)Ljava/lang/String;
+#padEnd(Ljava/lang/String;IC)Ljava/lang/String;
+#repeat(Ljava/lang/String;I)Ljava/lang/String;
+#commonPrefix(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
+#commonSuffix(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Strings

+###org/apache/flink/shaded/com/google/common/base/Supplier
@0.9.0-milestone-1
+#get()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Supplier

+###org/apache/flink/shaded/com/google/common/base/Suppliers
@0.9.0-milestone-1
+#compose(Lorg/apache/flink/shaded/com/google/common/base/Function;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/base/Supplier;
+#memoize(Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/base/Supplier;
+#memoizeWithExpiration(Lorg/apache/flink/shaded/com/google/common/base/Supplier;JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/base/Supplier;
+#ofInstance(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Supplier;
+#synchronizedSupplier(Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/base/Supplier;
+#supplierFunction()Lorg/apache/flink/shaded/com/google/common/base/Function;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Suppliers

+###org/apache/flink/shaded/com/google/common/base/Throwables
@0.9.0-milestone-1
+#propagateIfInstanceOf(Ljava/lang/Throwable;Ljava/lang/Class;)V
+#propagateIfPossible(Ljava/lang/Throwable;)V
+#propagateIfPossible(Ljava/lang/Throwable;Ljava/lang/Class;)V
+#propagateIfPossible(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/Class;)V
+#propagate(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#getRootCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#getCausalChain(Ljava/lang/Throwable;)Ljava/util/List;
+#getStackTraceAsString(Ljava/lang/Throwable;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Throwables

+###org/apache/flink/shaded/com/google/common/base/Ticker
@0.9.0-milestone-1
+#read()J
+#systemTicker()Lorg/apache/flink/shaded/com/google/common/base/Ticker;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Ticker

+###org/apache/flink/shaded/com/google/common/base/Utf8
@0.9.0-milestone-1
+#encodedLength(Ljava/lang/CharSequence;)I
+#isWellFormed([B)Z
+#isWellFormed([BII)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Utf8

+###org/apache/flink/shaded/com/google/common/base/Verify
@0.9.0-milestone-1
+#verify(Z)V
+#verify(ZLjava/lang/String;[Ljava/lang/Object;)V
+#verifyNotNull(Ljava/lang/Object;)Ljava/lang/Object;
+#verifyNotNull(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/Verify

+###org/apache/flink/shaded/com/google/common/base/VerifyException
@0.9.0-milestone-1
+#<init>()V
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/VerifyException

+###org/apache/flink/shaded/com/google/common/base/internal/Finalizer
@0.9.0-milestone-1
+#startFinalizer(Ljava/lang/Class;Ljava/lang/ref/ReferenceQueue;Ljava/lang/ref/PhantomReference;)V
+#run()V
+#getInheritableThreadLocalsField()Ljava/lang/reflect/Field;
@1.14.0
-###org/apache/flink/shaded/com/google/common/base/internal/Finalizer

+###org/apache/flink/shaded/com/google/common/cache/AbstractCache$SimpleStatsCounter
@0.9.0-milestone-1
+#<init>()V
+#recordHits(I)V
+#recordMisses(I)V
+#recordLoadSuccess(J)V
+#recordLoadException(J)V
+#recordEviction()V
+#snapshot()Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#incrementBy(Lorg/apache/flink/shaded/com/google/common/cache/AbstractCache$StatsCounter;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/AbstractCache$SimpleStatsCounter

+###org/apache/flink/shaded/com/google/common/cache/AbstractCache$StatsCounter
@0.9.0-milestone-1
+#recordHits(I)V
+#recordMisses(I)V
+#recordLoadSuccess(J)V
+#recordLoadException(J)V
+#recordEviction()V
+#snapshot()Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/AbstractCache$StatsCounter

+###org/apache/flink/shaded/com/google/common/cache/AbstractCache
@0.9.0-milestone-1
+#get(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#getAllPresent(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#cleanUp()V
+#size()J
+#invalidate(Ljava/lang/Object;)V
+#invalidateAll(Ljava/lang/Iterable;)V
+#invalidateAll()V
+#stats()Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#asMap()Ljava/util/concurrent/ConcurrentMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/AbstractCache

+###org/apache/flink/shaded/com/google/common/cache/AbstractLoadingCache
@0.9.0-milestone-1
+#getUnchecked(Ljava/lang/Object;)Ljava/lang/Object;
+#getAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#refresh(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/AbstractLoadingCache

+###org/apache/flink/shaded/com/google/common/cache/Cache
@0.9.0-milestone-1
+#getIfPresent(Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#getAllPresent(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#invalidate(Ljava/lang/Object;)V
+#invalidateAll(Ljava/lang/Iterable;)V
+#invalidateAll()V
+#size()J
+#stats()Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#asMap()Ljava/util/concurrent/ConcurrentMap;
+#cleanUp()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/Cache

+###org/apache/flink/shaded/com/google/common/cache/CacheBuilder
@0.9.0-milestone-1
+#newBuilder()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#from(Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilderSpec;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#from(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#initialCapacity(I)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#concurrencyLevel(I)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#maximumSize(J)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#maximumWeight(J)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#weigher(Lorg/apache/flink/shaded/com/google/common/cache/Weigher;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#weakKeys()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#weakValues()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#softValues()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#expireAfterWrite(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#expireAfterAccess(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#refreshAfterWrite(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#ticker(Lorg/apache/flink/shaded/com/google/common/base/Ticker;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#removalListener(Lorg/apache/flink/shaded/com/google/common/cache/RemovalListener;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#recordStats()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#build(Lorg/apache/flink/shaded/com/google/common/cache/CacheLoader;)Lorg/apache/flink/shaded/com/google/common/cache/LoadingCache;
+#build()Lorg/apache/flink/shaded/com/google/common/cache/Cache;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/CacheBuilder

+###org/apache/flink/shaded/com/google/common/cache/CacheBuilderSpec
@0.9.0-milestone-1
+#parse(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilderSpec;
+#disableCaching()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilderSpec;
+#toParsableString()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/CacheBuilderSpec

+###org/apache/flink/shaded/com/google/common/cache/CacheLoader$InvalidCacheLoadException
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/CacheLoader$InvalidCacheLoadException

+###org/apache/flink/shaded/com/google/common/cache/CacheLoader
@0.9.0-milestone-1
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#reload(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#from(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/cache/CacheLoader;
+#from(Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/cache/CacheLoader;
+#asyncReloading(Lorg/apache/flink/shaded/com/google/common/cache/CacheLoader;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/cache/CacheLoader;
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/CacheLoader

+###org/apache/flink/shaded/com/google/common/cache/CacheStats
@0.9.0-milestone-1
+#<init>(JJJJJJ)V
+#requestCount()J
+#hitCount()J
+#hitRate()D
+#missCount()J
+#missRate()D
+#loadCount()J
+#loadSuccessCount()J
+#loadExceptionCount()J
+#loadExceptionRate()D
+#totalLoadTime()J
+#averageLoadPenalty()D
+#evictionCount()J
+#minus(Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;)Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#plus(Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;)Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/CacheStats

+###org/apache/flink/shaded/com/google/common/cache/ForwardingCache$SimpleForwardingCache
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/ForwardingCache$SimpleForwardingCache

+###org/apache/flink/shaded/com/google/common/cache/ForwardingCache
@0.9.0-milestone-1
+#getIfPresent(Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#getAllPresent(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#invalidate(Ljava/lang/Object;)V
+#invalidateAll(Ljava/lang/Iterable;)V
+#invalidateAll()V
+#size()J
+#stats()Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#asMap()Ljava/util/concurrent/ConcurrentMap;
+#cleanUp()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/ForwardingCache

+###org/apache/flink/shaded/com/google/common/cache/ForwardingLoadingCache$SimpleForwardingLoadingCache
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/ForwardingLoadingCache$SimpleForwardingLoadingCache

+###org/apache/flink/shaded/com/google/common/cache/ForwardingLoadingCache
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getUnchecked(Ljava/lang/Object;)Ljava/lang/Object;
+#getAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#refresh(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/ForwardingLoadingCache

+###org/apache/flink/shaded/com/google/common/cache/LoadingCache
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getUnchecked(Ljava/lang/Object;)Ljava/lang/Object;
+#getAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#refresh(Ljava/lang/Object;)V
+#asMap()Ljava/util/concurrent/ConcurrentMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/LoadingCache

+###org/apache/flink/shaded/com/google/common/cache/RemovalCause
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/cache/RemovalCause;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/cache/RemovalCause;
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/RemovalCause

+###org/apache/flink/shaded/com/google/common/cache/RemovalListener
@0.9.0-milestone-1
+#onRemoval(Lorg/apache/flink/shaded/com/google/common/cache/RemovalNotification;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/RemovalListener

+###org/apache/flink/shaded/com/google/common/cache/RemovalListeners
@0.9.0-milestone-1
+#asynchronous(Lorg/apache/flink/shaded/com/google/common/cache/RemovalListener;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/cache/RemovalListener;
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/RemovalListeners

+###org/apache/flink/shaded/com/google/common/cache/RemovalNotification
@0.9.0-milestone-1
+#getCause()Lorg/apache/flink/shaded/com/google/common/cache/RemovalCause;
+#wasEvicted()Z
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/RemovalNotification

+###org/apache/flink/shaded/com/google/common/cache/Weigher
@0.9.0-milestone-1
+#weigh(Ljava/lang/Object;Ljava/lang/Object;)I
@1.14.0
-###org/apache/flink/shaded/com/google/common/cache/Weigher

+###org/apache/flink/shaded/com/google/common/collect/AbstractIterator
@0.9.0-milestone-1
+#hasNext()Z
+#next()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/AbstractIterator

+###org/apache/flink/shaded/com/google/common/collect/AbstractSequentialIterator
@0.9.0-milestone-1
+#hasNext()Z
+#next()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/AbstractSequentialIterator

+###org/apache/flink/shaded/com/google/common/collect/ArrayListMultimap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/ArrayListMultimap;
+#create(II)Lorg/apache/flink/shaded/com/google/common/collect/ArrayListMultimap;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ArrayListMultimap;
+#trimToSize()V
+#equals(Ljava/lang/Object;)Z
+#asMap()Ljava/util/Map;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;
+#removeAll(Ljava/lang/Object;)Ljava/util/List;
+#get(Ljava/lang/Object;)Ljava/util/List;
+#entries()Ljava/util/Collection;
+#values()Ljava/util/Collection;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#size()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ArrayListMultimap

+###org/apache/flink/shaded/com/google/common/collect/ArrayTable
@0.9.0-milestone-1
+#create(Ljava/lang/Iterable;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ArrayTable;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/ArrayTable;
+#rowKeyList()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#columnKeyList()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#at(II)Ljava/lang/Object;
+#set(IILjava/lang/Object;)Ljava/lang/Object;
+#toArray(Ljava/lang/Class;)[[Ljava/lang/Object;
+#clear()V[deprecated]
+#eraseAll()V
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsColumn(Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#erase(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#cellSet()Ljava/util/Set;
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#columnKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#columnMap()Ljava/util/Map;
+#row(Ljava/lang/Object;)Ljava/util/Map;
+#rowKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#rowMap()Ljava/util/Map;
+#values()Ljava/util/Collection;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#columnKeySet()Ljava/util/Set;
+#rowKeySet()Ljava/util/Set;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ArrayTable

+###org/apache/flink/shaded/com/google/common/collect/BiMap
@0.9.0-milestone-1
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#forcePut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#values()Ljava/util/Set;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/BiMap

+###org/apache/flink/shaded/com/google/common/collect/BinaryTreeTraverser
@0.9.0-milestone-1
+#<init>()V
+#leftChild(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#rightChild(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#children(Ljava/lang/Object;)Ljava/lang/Iterable;
+#inOrderTraversal(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/BinaryTreeTraverser

+###org/apache/flink/shaded/com/google/common/collect/BoundType
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/collect/BoundType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/BoundType;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/BoundType

+###org/apache/flink/shaded/com/google/common/collect/ClassToInstanceMap
@0.9.0-milestone-1
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ClassToInstanceMap

+###org/apache/flink/shaded/com/google/common/collect/Collections2
@0.9.0-milestone-1
+#filter(Ljava/util/Collection;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/Collection;
+#transform(Ljava/util/Collection;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/Collection;
+#orderedPermutations(Ljava/lang/Iterable;)Ljava/util/Collection;
+#orderedPermutations(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/util/Collection;
+#permutations(Ljava/util/Collection;)Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Collections2

+###org/apache/flink/shaded/com/google/common/collect/ComparisonChain
@0.9.0-milestone-1
+#start()Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(II)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(JJ)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(FF)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(DD)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compareTrueFirst(ZZ)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compareFalseFirst(ZZ)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#result()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ComparisonChain

+###org/apache/flink/shaded/com/google/common/collect/ComputationException
@0.9.0-milestone-1
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ComputationException

+###org/apache/flink/shaded/com/google/common/collect/ConcurrentHashMultiset
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/ConcurrentHashMultiset;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ConcurrentHashMultiset;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;)Lorg/apache/flink/shaded/com/google/common/collect/ConcurrentHashMultiset;
+#count(Ljava/lang/Object;)I
+#size()I
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#removeExactly(Ljava/lang/Object;I)Z
+#setCount(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;II)Z
+#createEntrySet()Ljava/util/Set;
+#isEmpty()Z
+#clear()V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#elementSet()Ljava/util/Set;
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#remove(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ConcurrentHashMultiset

+###org/apache/flink/shaded/com/google/common/collect/ContiguousSet
@0.9.0-milestone-1
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Range;Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#headSet(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#headSet(Ljava/lang/Comparable;Z)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#subSet(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#subSet(Ljava/lang/Comparable;ZLjava/lang/Comparable;Z)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#tailSet(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#tailSet(Ljava/lang/Comparable;Z)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#intersection(Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#range()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#range(Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#toString()Ljava/lang/String;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;[deprecated]
+#tailSet(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#tailSet(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#headSet(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#headSet(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ContiguousSet

+###org/apache/flink/shaded/com/google/common/collect/DiscreteDomain
@0.9.0-milestone-1
+#integers()Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;
+#longs()Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;
+#bigIntegers()Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;
+#next(Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#previous(Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#distance(Ljava/lang/Comparable;Ljava/lang/Comparable;)J
+#minValue()Ljava/lang/Comparable;
+#maxValue()Ljava/lang/Comparable;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/DiscreteDomain

+###org/apache/flink/shaded/com/google/common/collect/EnumBiMap
@0.9.0-milestone-1
+#create(Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/EnumBiMap;
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/EnumBiMap;
+#keyType()Ljava/lang/Class;
+#valueType()Ljava/lang/Class;
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Set;
+#keySet()Ljava/util/Set;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#clear()V
+#putAll(Ljava/util/Map;)V
+#containsValue(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/EnumBiMap

+###org/apache/flink/shaded/com/google/common/collect/EnumHashBiMap
@0.9.0-milestone-1
+#create(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/EnumHashBiMap;
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/EnumHashBiMap;
+#put(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
+#forcePut(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
+#keyType()Ljava/lang/Class;
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Set;
+#keySet()Ljava/util/Set;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#clear()V
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#forcePut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#containsValue(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/EnumHashBiMap

+###org/apache/flink/shaded/com/google/common/collect/EnumMultiset
@0.9.0-milestone-1
+#create(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/EnumMultiset;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/EnumMultiset;
+#create(Ljava/lang/Iterable;Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/EnumMultiset;
+#remove(Ljava/lang/Object;I)I
+#count(Ljava/lang/Object;)I
+#iterator()Ljava/util/Iterator;
+#size()I
+#clear()V
+#entrySet()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#elementSet()Ljava/util/Set;
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#remove(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/EnumMultiset

+###org/apache/flink/shaded/com/google/common/collect/EvictingQueue
@0.9.0-milestone-1
+#create(I)Lorg/apache/flink/shaded/com/google/common/collect/EvictingQueue;
+#remainingCapacity()I
+#offer(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/EvictingQueue

+###org/apache/flink/shaded/com/google/common/collect/FluentIterable
@0.9.0-milestone-1
+#from(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#from(Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;[deprecated]
+#of([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#toString()Ljava/lang/String;
+#size()I
+#contains(Ljava/lang/Object;)Z
+#cycle()Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#append(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#append([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#filter(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#filter(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#anyMatch(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#allMatch(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#firstMatch(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#transform(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#transformAndConcat(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#first()Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#last()Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#skip(I)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#limit(I)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#isEmpty()Z
+#toList()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#toSortedList(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#toSet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#toSortedSet(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#toMap(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#index(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#uniqueIndex(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#toArray(Ljava/lang/Class;)[Ljava/lang/Object;
+#copyInto(Ljava/util/Collection;)Ljava/util/Collection;
+#join(Lorg/apache/flink/shaded/com/google/common/base/Joiner;)Ljava/lang/String;
+#get(I)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/FluentIterable

+###org/apache/flink/shaded/com/google/common/collect/ForwardingBlockingDeque
@0.9.0-milestone-1
+#remainingCapacity()I
+#putFirst(Ljava/lang/Object;)V
+#putLast(Ljava/lang/Object;)V
+#offerFirst(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#offerLast(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#takeFirst()Ljava/lang/Object;
+#takeLast()Ljava/lang/Object;
+#pollFirst(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#pollLast(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#put(Ljava/lang/Object;)V
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#take()Ljava/lang/Object;
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#drainTo(Ljava/util/Collection;)I
+#drainTo(Ljava/util/Collection;I)I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingBlockingDeque

+###org/apache/flink/shaded/com/google/common/collect/ForwardingCollection
@0.9.0-milestone-1
+#iterator()Ljava/util/Iterator;
+#size()I
+#removeAll(Ljava/util/Collection;)Z
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingCollection

+###org/apache/flink/shaded/com/google/common/collect/ForwardingConcurrentMap
@0.9.0-milestone-1
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingConcurrentMap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingDeque
@0.9.0-milestone-1
+#addFirst(Ljava/lang/Object;)V
+#addLast(Ljava/lang/Object;)V
+#descendingIterator()Ljava/util/Iterator;
+#getFirst()Ljava/lang/Object;
+#getLast()Ljava/lang/Object;
+#offerFirst(Ljava/lang/Object;)Z
+#offerLast(Ljava/lang/Object;)Z
+#peekFirst()Ljava/lang/Object;
+#peekLast()Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;
+#pollLast()Ljava/lang/Object;
+#pop()Ljava/lang/Object;
+#push(Ljava/lang/Object;)V
+#removeFirst()Ljava/lang/Object;
+#removeLast()Ljava/lang/Object;
+#removeFirstOccurrence(Ljava/lang/Object;)Z
+#removeLastOccurrence(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingDeque

+###org/apache/flink/shaded/com/google/common/collect/ForwardingIterator
@0.9.0-milestone-1
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingIterator

+###org/apache/flink/shaded/com/google/common/collect/ForwardingList
@0.9.0-milestone-1
+#add(ILjava/lang/Object;)V
+#addAll(ILjava/util/Collection;)Z
+#get(I)Ljava/lang/Object;
+#indexOf(Ljava/lang/Object;)I
+#lastIndexOf(Ljava/lang/Object;)I
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#remove(I)Ljava/lang/Object;
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#subList(II)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingList

+###org/apache/flink/shaded/com/google/common/collect/ForwardingListIterator
@0.9.0-milestone-1
+#add(Ljava/lang/Object;)V
+#hasPrevious()Z
+#nextIndex()I
+#previous()Ljava/lang/Object;
+#previousIndex()I
+#set(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingListIterator

+###org/apache/flink/shaded/com/google/common/collect/ForwardingListMultimap
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/util/List;
+#removeAll(Ljava/lang/Object;)Ljava/util/List;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingListMultimap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardEntrySet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingMap;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardEntrySet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardKeySet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingMap;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardKeySet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardValues
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingMap;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardValues

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMap
@0.9.0-milestone-1
+#size()I
+#isEmpty()Z
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMapEntry
@0.9.0-milestone-1
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMapEntry

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMultimap
@0.9.0-milestone-1
+#asMap()Ljava/util/Map;
+#clear()V
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entries()Ljava/util/Collection;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#isEmpty()Z
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#size()I
+#values()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMultimap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMultiset$StandardElementSet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingMultiset;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMultiset$StandardElementSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMultiset
@0.9.0-milestone-1
+#count(Ljava/lang/Object;)I
+#add(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#elementSet()Ljava/util/Set;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#setCount(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;II)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMultiset

+###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap$StandardDescendingMap
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap$StandardDescendingMap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap$StandardNavigableKeySet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap$StandardNavigableKeySet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap
@0.9.0-milestone-1
+#lowerEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#lowerKey(Ljava/lang/Object;)Ljava/lang/Object;
+#floorEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#floorKey(Ljava/lang/Object;)Ljava/lang/Object;
+#ceilingEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#ceilingKey(Ljava/lang/Object;)Ljava/lang/Object;
+#higherEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#higherKey(Ljava/lang/Object;)Ljava/lang/Object;
+#firstEntry()Ljava/util/Map$Entry;
+#lastEntry()Ljava/util/Map$Entry;
+#pollFirstEntry()Ljava/util/Map$Entry;
+#pollLastEntry()Ljava/util/Map$Entry;
+#descendingMap()Ljava/util/NavigableMap;
+#navigableKeySet()Ljava/util/NavigableSet;
+#descendingKeySet()Ljava/util/NavigableSet;
+#subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
+#headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
+#tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableSet$StandardDescendingSet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingNavigableSet;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableSet$StandardDescendingSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableSet
@0.9.0-milestone-1
+#lower(Ljava/lang/Object;)Ljava/lang/Object;
+#floor(Ljava/lang/Object;)Ljava/lang/Object;
+#ceiling(Ljava/lang/Object;)Ljava/lang/Object;
+#higher(Ljava/lang/Object;)Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;
+#pollLast()Ljava/lang/Object;
+#descendingSet()Ljava/util/NavigableSet;
+#descendingIterator()Ljava/util/Iterator;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
+#headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingObject
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingObject

+###org/apache/flink/shaded/com/google/common/collect/ForwardingQueue
@0.9.0-milestone-1
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#remove()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#element()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingQueue

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSet
@0.9.0-milestone-1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSetMultimap
@0.9.0-milestone-1
+#<init>()V
+#entries()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#entries()Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSetMultimap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMap$StandardKeySet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingSortedMap;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMap$StandardKeySet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMap
@0.9.0-milestone-1
+#comparator()Ljava/util/Comparator;
+#firstKey()Ljava/lang/Object;
+#headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#lastKey()Ljava/lang/Object;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
+#tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset$StandardDescendingMultiset
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset$StandardDescendingMultiset

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset$StandardElementSet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset$StandardElementSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset
@0.9.0-milestone-1
+#elementSet()Ljava/util/NavigableSet;
+#comparator()Ljava/util/Comparator;
+#descendingMultiset()Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#firstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#lastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#pollFirstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#pollLastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#headMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#subMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#tailMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#elementSet()Ljava/util/Set;
+#elementSet()Ljava/util/SortedSet;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedSet
@0.9.0-milestone-1
+#comparator()Ljava/util/Comparator;
+#first()Ljava/lang/Object;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#last()Ljava/lang/Object;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedSetMultimap
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/util/SortedSet;
+#removeAll(Ljava/lang/Object;)Ljava/util/SortedSet;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/SortedSet;
+#valueComparator()Ljava/util/Comparator;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedSetMultimap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingTable
@0.9.0-milestone-1
+#cellSet()Ljava/util/Set;
+#clear()V
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#columnKeySet()Ljava/util/Set;
+#columnMap()Ljava/util/Map;
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsColumn(Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#row(Ljava/lang/Object;)Ljava/util/Map;
+#rowKeySet()Ljava/util/Set;
+#rowMap()Ljava/util/Map;
+#size()I
+#values()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingTable

+###org/apache/flink/shaded/com/google/common/collect/HashBasedTable
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/HashBasedTable;
+#create(II)Lorg/apache/flink/shaded/com/google/common/collect/HashBasedTable;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/HashBasedTable;
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsColumn(Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#columnMap()Ljava/util/Map;
+#rowMap()Ljava/util/Map;
+#values()Ljava/util/Collection;
+#columnKeySet()Ljava/util/Set;
+#rowKeySet()Ljava/util/Set;
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#row(Ljava/lang/Object;)Ljava/util/Map;
+#cellSet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#size()I
+#isEmpty()Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/HashBasedTable

+###org/apache/flink/shaded/com/google/common/collect/HashBiMap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/HashBiMap;
+#create(I)Lorg/apache/flink/shaded/com/google/common/collect/HashBiMap;
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/HashBiMap;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#forcePut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#size()I
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Set;
+#entrySet()Ljava/util/Set;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#values()Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/HashBiMap

+###org/apache/flink/shaded/com/google/common/collect/HashMultimap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/HashMultimap;
+#create(II)Lorg/apache/flink/shaded/com/google/common/collect/HashMultimap;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/HashMultimap;
+#equals(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#asMap()Ljava/util/Map;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#entries()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#values()Ljava/util/Collection;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#size()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/HashMultimap

+###org/apache/flink/shaded/com/google/common/collect/HashMultiset
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/HashMultiset;
+#create(I)Lorg/apache/flink/shaded/com/google/common/collect/HashMultiset;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/HashMultiset;
+#setCount(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#add(Ljava/lang/Object;I)I
+#count(Ljava/lang/Object;)I
+#iterator()Ljava/util/Iterator;
+#size()I
+#clear()V
+#entrySet()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#elementSet()Ljava/util/Set;
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#setCount(Ljava/lang/Object;II)Z
+#remove(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/HashMultiset

+###org/apache/flink/shaded/com/google/common/collect/ImmutableBiMap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap$Builder;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableBiMap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableBiMap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap$Builder;
+#copyOf(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#forcePut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#values()Ljava/util/Collection;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#values()Ljava/util/Set;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableBiMap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Class;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap$Builder;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap
@0.9.0-milestone-1
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap$Builder;
+#copyOf(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap;
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder
@0.9.0-milestone-1
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableCollection
@0.9.0-milestone-1
+#iterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z[deprecated]
+#remove(Ljava/lang/Object;)Z[deprecated]
+#addAll(Ljava/util/Collection;)Z[deprecated]
+#removeAll(Ljava/util/Collection;)Z[deprecated]
+#retainAll(Ljava/util/Collection;)Z[deprecated]
+#clear()V[deprecated]
+#asList()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#iterator()Ljava/util/Iterator;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableCollection

+###org/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder
@0.9.0-milestone-1
+#<init>()V
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$ArrayBasedBuilder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableList
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#copyOf(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#copyOf(Ljava/util/Collection;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#copyOf(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#copyOf([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#iterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#listIterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableListIterator;
+#listIterator(I)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableListIterator;
+#indexOf(Ljava/lang/Object;)I
+#lastIndexOf(Ljava/lang/Object;)I
+#contains(Ljava/lang/Object;)Z
+#subList(II)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#addAll(ILjava/util/Collection;)Z[deprecated]
+#set(ILjava/lang/Object;)Ljava/lang/Object;[deprecated]
+#add(ILjava/lang/Object;)V[deprecated]
+#remove(I)Ljava/lang/Object;[deprecated]
+#asList()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#reverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder;
+#iterator()Ljava/util/Iterator;
+#subList(II)Ljava/util/List;
+#listIterator(I)Ljava/util/ListIterator;
+#listIterator()Ljava/util/ListIterator;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableList

+###org/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#putAll(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#orderKeysBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#orderValuesBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#orderValuesBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#orderKeysBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#get(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#removeAll(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;[deprecated]
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;[deprecated]
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#get(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#removeAll(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;
+#removeAll(Ljava/lang/Object;)Ljava/util/List;
+#get(Ljava/lang/Object;)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#copyOf(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#remove(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#putAll(Ljava/util/Map;)V[deprecated]
+#clear()V[deprecated]
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#entrySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#keySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#asMultimap()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#keySet()Ljava/util/Set;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#orderKeysBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#orderValuesBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMultimap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#removeAll(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;[deprecated]
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;[deprecated]
+#clear()V[deprecated]
+#get(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z[deprecated]
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z[deprecated]
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z[deprecated]
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z[deprecated]
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#size()I
+#keySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#asMap()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#entries()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#asMap()Ljava/util/Map;
+#values()Ljava/util/Collection;
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#entries()Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#isEmpty()Z
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMultimap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder
@0.9.0-milestone-1
+#<init>()V
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#addCopies(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#setCount(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMultiset
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#copyOf([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#copyOf(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#copyOf(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#iterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#add(Ljava/lang/Object;I)I[deprecated]
+#remove(Ljava/lang/Object;I)I[deprecated]
+#setCount(Ljava/lang/Object;I)I[deprecated]
+#setCount(Ljava/lang/Object;II)Z[deprecated]
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#entrySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#iterator()Ljava/util/Iterator;
+#entrySet()Ljava/util/Set;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMultiset

+###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Lorg/apache/flink/shaded/com/google/common/collect/Range;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap;
+#of(Lorg/apache/flink/shaded/com/google/common/collect/Range;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap$Builder;
+#get(Ljava/lang/Comparable;)Ljava/lang/Object;
+#getEntry(Ljava/lang/Comparable;)Ljava/util/Map$Entry;
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#put(Lorg/apache/flink/shaded/com/google/common/collect/Range;Ljava/lang/Object;)V
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;)V
+#clear()V
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#asMapOfRanges()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#subRangeMap(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#subRangeMap(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;
+#asMapOfRanges()Ljava/util/Map;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet$Builder
@0.9.0-milestone-1
+#<init>()V
+#add(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet$Builder;
+#addAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
+#of(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
+#encloses(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Z
+#rangeContaining(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#isEmpty()Z
+#add(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#addAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#removeAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#asRanges()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#complement()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
+#subRangeSet(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
+#asSet(Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet$Builder;
+#equals(Ljava/lang/Object;)Z
+#enclosesAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Z
+#clear()V
+#contains(Ljava/lang/Comparable;)Z
+#subRangeSet(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#complement()Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#asRanges()Ljava/util/Set;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder
@0.9.0-milestone-1
+#<init>()V
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$ArrayBasedBuilder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSet
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#copyOf([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#copyOf(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#copyOf(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#copyOf(Ljava/util/Collection;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#iterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#iterator()Ljava/util/Iterator;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSet

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#putAll(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#orderKeysBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#orderValuesBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#orderValuesBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#orderKeysBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#get(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#removeAll(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;[deprecated]
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;[deprecated]
+#entries()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#entries()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#get(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#removeAll(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#entries()Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#entries()Ljava/util/Set;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Set;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder
@0.9.0-milestone-1
+#<init>(Ljava/util/Comparator;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#of(Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#of(Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#of(Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#of(Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#of(Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#copyOf(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#copyOf(Ljava/util/Map;Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#copyOfSorted(Ljava/util/SortedMap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#naturalOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#orderedBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#reverseOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#size()I
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#keySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#comparator()Ljava/util/Comparator;
+#firstKey()Ljava/lang/Object;
+#lastKey()Ljava/lang/Object;
+#headMap(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#headMap(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#tailMap(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#tailMap(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#lowerEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#lowerKey(Ljava/lang/Object;)Ljava/lang/Object;
+#floorEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#floorKey(Ljava/lang/Object;)Ljava/lang/Object;
+#ceilingEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#ceilingKey(Ljava/lang/Object;)Ljava/lang/Object;
+#higherEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#higherKey(Ljava/lang/Object;)Ljava/lang/Object;
+#firstEntry()Ljava/util/Map$Entry;
+#lastEntry()Ljava/util/Map$Entry;
+#pollFirstEntry()Ljava/util/Map$Entry;[deprecated]
+#pollLastEntry()Ljava/util/Map$Entry;[deprecated]
+#descendingMap()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#navigableKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#descendingKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#keySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#keySet()Ljava/util/Set;
+#tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
+#tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
+#headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
+#subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
+#descendingKeySet()Ljava/util/NavigableSet;
+#navigableKeySet()Ljava/util/NavigableSet;
+#descendingMap()Ljava/util/NavigableMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder
@0.9.0-milestone-1
+#<init>(Ljava/util/Comparator;)V
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#addCopies(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#setCount(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#setCount(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#addCopies(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOf([Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOf(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOf(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOf(Ljava/util/Comparator;Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOf(Ljava/util/Comparator;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOfSorted(Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#comparator()Ljava/util/Comparator;
+#elementSet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#descendingMultiset()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#pollFirstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;[deprecated]
+#pollLastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;[deprecated]
+#headMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#subMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#tailMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#orderedBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#reverseOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#naturalOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#elementSet()Ljava/util/Set;
+#tailMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#subMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#headMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#descendingMultiset()Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#elementSet()Ljava/util/NavigableSet;
+#elementSet()Ljava/util/SortedSet;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder
@0.9.0-milestone-1
+#<init>(Ljava/util/Comparator;)V
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$ArrayBasedBuilder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf([Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/util/Collection;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/util/Comparator;Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/util/Comparator;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/util/Comparator;Ljava/util/Collection;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOfSorted(Ljava/util/SortedSet;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#orderedBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#reverseOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#naturalOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#comparator()Ljava/util/Comparator;
+#iterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#headSet(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#headSet(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#tailSet(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#tailSet(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#lower(Ljava/lang/Object;)Ljava/lang/Object;
+#floor(Ljava/lang/Object;)Ljava/lang/Object;
+#ceiling(Ljava/lang/Object;)Ljava/lang/Object;
+#higher(Ljava/lang/Object;)Ljava/lang/Object;
+#first()Ljava/lang/Object;
+#last()Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;[deprecated]
+#pollLast()Ljava/lang/Object;[deprecated]
+#descendingSet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#descendingIterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#iterator()Ljava/util/Iterator;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
+#descendingIterator()Ljava/util/Iterator;
+#descendingSet()Ljava/util/NavigableSet;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet

+###org/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder
@0.9.0-milestone-1
+#<init>()V
+#orderRowsBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#orderColumnsBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#put(Lorg/apache/flink/shaded/com/google/common/collect/Table$Cell;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableTable
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#cellSet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#column(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#columnKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#columnMap()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#row(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#rowKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#rowMap()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#clear()V[deprecated]
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V[deprecated]
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#values()Ljava/util/Collection;
+#cellSet()Ljava/util/Set;
+#isEmpty()Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#columnKeySet()Ljava/util/Set;
+#rowKeySet()Ljava/util/Set;
+#containsColumn(Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#columnMap()Ljava/util/Map;
+#rowMap()Ljava/util/Map;
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#row(Ljava/lang/Object;)Ljava/util/Map;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableTable

+###org/apache/flink/shaded/com/google/common/collect/Interner
@0.9.0-milestone-1
+#intern(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Interner

+###org/apache/flink/shaded/com/google/common/collect/Interners
@0.9.0-milestone-1
+#newStrongInterner()Lorg/apache/flink/shaded/com/google/common/collect/Interner;
+#newWeakInterner()Lorg/apache/flink/shaded/com/google/common/collect/Interner;
+#asFunction(Lorg/apache/flink/shaded/com/google/common/collect/Interner;)Lorg/apache/flink/shaded/com/google/common/base/Function;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Interners

+###org/apache/flink/shaded/com/google/common/collect/Iterables
@0.9.0-milestone-1
+#unmodifiableIterable(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#unmodifiableIterable(Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;)Ljava/lang/Iterable;[deprecated]
+#size(Ljava/lang/Iterable;)I
+#contains(Ljava/lang/Iterable;Ljava/lang/Object;)Z
+#removeAll(Ljava/lang/Iterable;Ljava/util/Collection;)Z
+#retainAll(Ljava/lang/Iterable;Ljava/util/Collection;)Z
+#removeIf(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#elementsEqual(Ljava/lang/Iterable;Ljava/lang/Iterable;)Z
+#toString(Ljava/lang/Iterable;)Ljava/lang/String;
+#getOnlyElement(Ljava/lang/Iterable;)Ljava/lang/Object;
+#getOnlyElement(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;
+#toArray(Ljava/lang/Iterable;Ljava/lang/Class;)[Ljava/lang/Object;
+#addAll(Ljava/util/Collection;Ljava/lang/Iterable;)Z
+#frequency(Ljava/lang/Iterable;Ljava/lang/Object;)I
+#cycle(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#cycle([Ljava/lang/Object;)Ljava/lang/Iterable;
+#concat(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#concat(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#concat(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#concat([Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#concat(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#partition(Ljava/lang/Iterable;I)Ljava/lang/Iterable;
+#paddedPartition(Ljava/lang/Iterable;I)Ljava/lang/Iterable;
+#filter(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/lang/Iterable;
+#filter(Ljava/lang/Iterable;Ljava/lang/Class;)Ljava/lang/Iterable;
+#any(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#all(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#find(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/lang/Object;
+#find(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;Ljava/lang/Object;)Ljava/lang/Object;
+#tryFind(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#indexOf(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)I
+#transform(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/lang/Iterable;
+#get(Ljava/lang/Iterable;I)Ljava/lang/Object;
+#get(Ljava/lang/Iterable;ILjava/lang/Object;)Ljava/lang/Object;
+#getFirst(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;
+#getLast(Ljava/lang/Iterable;)Ljava/lang/Object;
+#getLast(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;
+#skip(Ljava/lang/Iterable;I)Ljava/lang/Iterable;
+#limit(Ljava/lang/Iterable;I)Ljava/lang/Iterable;
+#consumingIterable(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#isEmpty(Ljava/lang/Iterable;)Z
+#mergeSorted(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/lang/Iterable;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Iterables

+###org/apache/flink/shaded/com/google/common/collect/Iterators
@0.9.0-milestone-1
+#emptyIterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;[deprecated]
+#unmodifiableIterator(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#unmodifiableIterator(Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;[deprecated]
+#size(Ljava/util/Iterator;)I
+#contains(Ljava/util/Iterator;Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Iterator;Ljava/util/Collection;)Z
+#removeIf(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#retainAll(Ljava/util/Iterator;Ljava/util/Collection;)Z
+#elementsEqual(Ljava/util/Iterator;Ljava/util/Iterator;)Z
+#toString(Ljava/util/Iterator;)Ljava/lang/String;
+#getOnlyElement(Ljava/util/Iterator;)Ljava/lang/Object;
+#getOnlyElement(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
+#toArray(Ljava/util/Iterator;Ljava/lang/Class;)[Ljava/lang/Object;
+#addAll(Ljava/util/Collection;Ljava/util/Iterator;)Z
+#frequency(Ljava/util/Iterator;Ljava/lang/Object;)I
+#cycle(Ljava/lang/Iterable;)Ljava/util/Iterator;
+#cycle([Ljava/lang/Object;)Ljava/util/Iterator;
+#concat(Ljava/util/Iterator;Ljava/util/Iterator;)Ljava/util/Iterator;
+#concat(Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Iterator;)Ljava/util/Iterator;
+#concat(Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Iterator;)Ljava/util/Iterator;
+#concat([Ljava/util/Iterator;)Ljava/util/Iterator;
+#concat(Ljava/util/Iterator;)Ljava/util/Iterator;
+#partition(Ljava/util/Iterator;I)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#paddedPartition(Ljava/util/Iterator;I)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#filter(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#filter(Ljava/util/Iterator;Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#any(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#all(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#find(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/lang/Object;
+#find(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;Ljava/lang/Object;)Ljava/lang/Object;
+#tryFind(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#indexOf(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)I
+#transform(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/Iterator;
+#get(Ljava/util/Iterator;I)Ljava/lang/Object;
+#get(Ljava/util/Iterator;ILjava/lang/Object;)Ljava/lang/Object;
+#getNext(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
+#getLast(Ljava/util/Iterator;)Ljava/lang/Object;
+#getLast(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
+#advance(Ljava/util/Iterator;I)I
+#limit(Ljava/util/Iterator;I)Ljava/util/Iterator;
+#consumingIterator(Ljava/util/Iterator;)Ljava/util/Iterator;
+#forArray([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#singletonIterator(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#forEnumeration(Ljava/util/Enumeration;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#asEnumeration(Ljava/util/Iterator;)Ljava/util/Enumeration;
+#peekingIterator(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/PeekingIterator;
+#peekingIterator(Lorg/apache/flink/shaded/com/google/common/collect/PeekingIterator;)Lorg/apache/flink/shaded/com/google/common/collect/PeekingIterator;[deprecated]
+#mergeSorted(Ljava/lang/Iterable;Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Iterators

+###org/apache/flink/shaded/com/google/common/collect/LinkedHashMultimap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultimap;
+#create(II)Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultimap;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultimap;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#entries()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#clear()V
+#equals(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#asMap()Ljava/util/Map;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#entries()Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#containsKey(Ljava/lang/Object;)Z
+#size()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/LinkedHashMultimap

+###org/apache/flink/shaded/com/google/common/collect/LinkedHashMultiset
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultiset;
+#create(I)Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultiset;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultiset;
+#setCount(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#add(Ljava/lang/Object;I)I
+#count(Ljava/lang/Object;)I
+#iterator()Ljava/util/Iterator;
+#size()I
+#clear()V
+#entrySet()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#elementSet()Ljava/util/Set;
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#setCount(Ljava/lang/Object;II)Z
+#remove(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/LinkedHashMultiset

+###org/apache/flink/shaded/com/google/common/collect/LinkedListMultimap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/LinkedListMultimap;
+#create(I)Lorg/apache/flink/shaded/com/google/common/collect/LinkedListMultimap;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/LinkedListMultimap;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;
+#removeAll(Ljava/lang/Object;)Ljava/util/List;
+#clear()V
+#get(Ljava/lang/Object;)Ljava/util/List;
+#values()Ljava/util/List;
+#entries()Ljava/util/List;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#asMap()Ljava/util/Map;
+#values()Ljava/util/Collection;
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#entries()Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/LinkedListMultimap

+###org/apache/flink/shaded/com/google/common/collect/ListMultimap
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/util/List;
+#removeAll(Ljava/lang/Object;)Ljava/util/List;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;
+#asMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ListMultimap

+###org/apache/flink/shaded/com/google/common/collect/Lists
@0.9.0-milestone-1
+#newArrayList()Ljava/util/ArrayList;
+#newArrayList([Ljava/lang/Object;)Ljava/util/ArrayList;
+#newArrayList(Ljava/lang/Iterable;)Ljava/util/ArrayList;
+#newArrayList(Ljava/util/Iterator;)Ljava/util/ArrayList;
+#newArrayListWithCapacity(I)Ljava/util/ArrayList;
+#newArrayListWithExpectedSize(I)Ljava/util/ArrayList;
+#newLinkedList()Ljava/util/LinkedList;
+#newLinkedList(Ljava/lang/Iterable;)Ljava/util/LinkedList;
+#newCopyOnWriteArrayList()Ljava/util/concurrent/CopyOnWriteArrayList;
+#newCopyOnWriteArrayList(Ljava/lang/Iterable;)Ljava/util/concurrent/CopyOnWriteArrayList;
+#asList(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
+#asList(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
+#transform(Ljava/util/List;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/List;
+#partition(Ljava/util/List;I)Ljava/util/List;
+#charactersOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#charactersOf(Ljava/lang/CharSequence;)Ljava/util/List;
+#reverse(Ljava/util/List;)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Lists

+###org/apache/flink/shaded/com/google/common/collect/MapConstraint
@0.9.0-milestone-1
+#checkKeyValue(Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MapConstraint

+###org/apache/flink/shaded/com/google/common/collect/MapConstraints
@0.9.0-milestone-1
+#notNull()Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;
+#constrainedMap(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Ljava/util/Map;
+#constrainedMultimap(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#constrainedListMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#constrainedSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#constrainedSortedSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#constrainedBiMap(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MapConstraints

+###org/apache/flink/shaded/com/google/common/collect/MapDifference$ValueDifference
@0.9.0-milestone-1
+#leftValue()Ljava/lang/Object;
+#rightValue()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MapDifference$ValueDifference

+###org/apache/flink/shaded/com/google/common/collect/MapDifference
@0.9.0-milestone-1
+#areEqual()Z
+#entriesOnlyOnLeft()Ljava/util/Map;
+#entriesOnlyOnRight()Ljava/util/Map;
+#entriesInCommon()Ljava/util/Map;
+#entriesDiffering()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MapDifference

+###org/apache/flink/shaded/com/google/common/collect/MapMaker
@0.9.0-milestone-1
+#<init>()V
+#initialCapacity(I)Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;
+#concurrencyLevel(I)Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;
+#weakKeys()Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;
+#weakValues()Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;
+#softValues()Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;[deprecated]
+#makeMap()Ljava/util/concurrent/ConcurrentMap;
+#toString()Ljava/lang/String;
+#softValues()Lorg/apache/flink/shaded/com/google/common/collect/GenericMapMaker;
+#weakValues()Lorg/apache/flink/shaded/com/google/common/collect/GenericMapMaker;
+#weakKeys()Lorg/apache/flink/shaded/com/google/common/collect/GenericMapMaker;
+#concurrencyLevel(I)Lorg/apache/flink/shaded/com/google/common/collect/GenericMapMaker;
+#initialCapacity(I)Lorg/apache/flink/shaded/com/google/common/collect/GenericMapMaker;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MapMaker

+###org/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer
@0.9.0-milestone-1
+#transformEntry(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer

+###org/apache/flink/shaded/com/google/common/collect/Maps
@0.9.0-milestone-1
+#immutableEnumMap(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#newHashMap()Ljava/util/HashMap;
+#newHashMapWithExpectedSize(I)Ljava/util/HashMap;
+#newHashMap(Ljava/util/Map;)Ljava/util/HashMap;
+#newLinkedHashMap()Ljava/util/LinkedHashMap;
+#newLinkedHashMap(Ljava/util/Map;)Ljava/util/LinkedHashMap;
+#newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
+#newTreeMap()Ljava/util/TreeMap;
+#newTreeMap(Ljava/util/SortedMap;)Ljava/util/TreeMap;
+#newTreeMap(Ljava/util/Comparator;)Ljava/util/TreeMap;
+#newEnumMap(Ljava/lang/Class;)Ljava/util/EnumMap;
+#newEnumMap(Ljava/util/Map;)Ljava/util/EnumMap;
+#newIdentityHashMap()Ljava/util/IdentityHashMap;
+#difference(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/MapDifference;
+#difference(Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Equivalence;)Lorg/apache/flink/shaded/com/google/common/collect/MapDifference;
+#difference(Ljava/util/SortedMap;Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMapDifference;
+#asMap(Ljava/util/Set;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/Map;
+#asMap(Ljava/util/SortedSet;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/SortedMap;
+#asMap(Ljava/util/NavigableSet;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/NavigableMap;
+#toMap(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#toMap(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#uniqueIndex(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#uniqueIndex(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#fromProperties(Ljava/util/Properties;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#immutableEntry(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
+#asConverter(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;)Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#synchronizedBiMap(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#unmodifiableBiMap(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#transformValues(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/Map;
+#transformValues(Ljava/util/SortedMap;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/SortedMap;
+#transformValues(Ljava/util/NavigableMap;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/NavigableMap;
+#transformEntries(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer;)Ljava/util/Map;
+#transformEntries(Ljava/util/SortedMap;Lorg/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer;)Ljava/util/SortedMap;
+#transformEntries(Ljava/util/NavigableMap;Lorg/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer;)Ljava/util/NavigableMap;
+#filterKeys(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/Map;
+#filterKeys(Ljava/util/SortedMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/SortedMap;
+#filterKeys(Ljava/util/NavigableMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/NavigableMap;
+#filterKeys(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#filterValues(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/Map;
+#filterValues(Ljava/util/SortedMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/SortedMap;
+#filterValues(Ljava/util/NavigableMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/NavigableMap;
+#filterValues(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#filterEntries(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/Map;
+#filterEntries(Ljava/util/SortedMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/SortedMap;
+#filterEntries(Ljava/util/NavigableMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/NavigableMap;
+#filterEntries(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#unmodifiableNavigableMap(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;
+#synchronizedNavigableMap(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Maps

+###org/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder
@0.9.0-milestone-1
+#expectedSize(I)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder;
+#maximumSize(I)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder;
+#create()Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder

+###org/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue;
+#orderedBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder;
+#expectedSize(I)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder;
+#maximumSize(I)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder;
+#size()I
+#add(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;
+#removeFirst()Ljava/lang/Object;
+#peekFirst()Ljava/lang/Object;
+#pollLast()Ljava/lang/Object;
+#removeLast()Ljava/lang/Object;
+#peekLast()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#clear()V
+#toArray()[Ljava/lang/Object;
+#comparator()Ljava/util/Comparator;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue

+###org/apache/flink/shaded/com/google/common/collect/Multimap
@0.9.0-milestone-1
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#clear()V
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#keySet()Ljava/util/Set;
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#values()Ljava/util/Collection;
+#entries()Ljava/util/Collection;
+#asMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Multimap

+###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$ListMultimapBuilder
@0.9.0-milestone-1
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$ListMultimapBuilder

+###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys
@0.9.0-milestone-1
+#arrayListValues()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$ListMultimapBuilder;
+#arrayListValues(I)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$ListMultimapBuilder;
+#linkedListValues()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$ListMultimapBuilder;
+#hashSetValues()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder;
+#hashSetValues(I)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder;
+#linkedHashSetValues()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder;
+#linkedHashSetValues(I)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder;
+#treeSetValues()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SortedSetMultimapBuilder;
+#treeSetValues(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SortedSetMultimapBuilder;
+#enumSetValues(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys

+###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder
@0.9.0-milestone-1
+#build()Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder

+###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SortedSetMultimapBuilder
@0.9.0-milestone-1
+#build()Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SortedSetMultimapBuilder

+###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder
@0.9.0-milestone-1
+#hashKeys()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#hashKeys(I)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#linkedHashKeys()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#linkedHashKeys(I)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#treeKeys()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#treeKeys(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#enumKeys(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder

+###org/apache/flink/shaded/com/google/common/collect/Multimaps
@0.9.0-milestone-1
+#newMultimap(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#newListMultimap(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#newSetMultimap(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#newSortedSetMultimap(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#invertFrom(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#synchronizedMultimap(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#unmodifiableMultimap(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#unmodifiableMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;[deprecated]
+#synchronizedSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#unmodifiableSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#unmodifiableSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;[deprecated]
+#synchronizedSortedSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#unmodifiableSortedSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#synchronizedListMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#unmodifiableListMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#unmodifiableListMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;[deprecated]
+#asMap(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;)Ljava/util/Map;
+#asMap(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;)Ljava/util/Map;
+#asMap(Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;)Ljava/util/Map;
+#asMap(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Ljava/util/Map;
+#forMap(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#transformValues(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#transformEntries(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#transformValues(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#transformEntries(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;Lorg/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#index(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#index(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#filterKeys(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#filterKeys(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#filterKeys(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#filterValues(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#filterValues(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#filterEntries(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#filterEntries(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Multimaps

+###org/apache/flink/shaded/com/google/common/collect/Multiset$Entry
@0.9.0-milestone-1
+#getElement()Ljava/lang/Object;
+#getCount()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Multiset$Entry

+###org/apache/flink/shaded/com/google/common/collect/Multiset
@0.9.0-milestone-1
+#count(Ljava/lang/Object;)I
+#add(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;II)Z
+#elementSet()Ljava/util/Set;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Multiset

+###org/apache/flink/shaded/com/google/common/collect/Multisets
@0.9.0-milestone-1
+#unmodifiableMultiset(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#unmodifiableMultiset(Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;[deprecated]
+#unmodifiableSortedMultiset(Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#immutableEntry(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#filter(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#union(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#intersection(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#sum(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#difference(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#containsOccurrences(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Z
+#retainOccurrences(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Z
+#removeOccurrences(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Ljava/lang/Iterable;)Z
+#copyHighestCountFirst(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Multisets

+###org/apache/flink/shaded/com/google/common/collect/MutableClassToInstanceMap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/MutableClassToInstanceMap;
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/MutableClassToInstanceMap;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#entrySet()Ljava/util/Set;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/MutableClassToInstanceMap

+###org/apache/flink/shaded/com/google/common/collect/ObjectArrays
@0.9.0-milestone-1
+#newArray(Ljava/lang/Class;I)[Ljava/lang/Object;
+#newArray([Ljava/lang/Object;I)[Ljava/lang/Object;
+#concat([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Class;)[Ljava/lang/Object;
+#concat(Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
+#concat([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/ObjectArrays

+###org/apache/flink/shaded/com/google/common/collect/Ordering
@0.9.0-milestone-1
+#natural()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#from(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#from(Lorg/apache/flink/shaded/com/google/common/collect/Ordering;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;[deprecated]
+#explicit(Ljava/util/List;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#explicit(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#allEqual()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#usingToString()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#arbitrary()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#reverse()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#nullsFirst()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#nullsLast()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#onResultOf(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#compound(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#compound(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#lexicographical()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#min(Ljava/util/Iterator;)Ljava/lang/Object;
+#min(Ljava/lang/Iterable;)Ljava/lang/Object;
+#min(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#min(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#max(Ljava/util/Iterator;)Ljava/lang/Object;
+#max(Ljava/lang/Iterable;)Ljava/lang/Object;
+#max(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#max(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#leastOf(Ljava/lang/Iterable;I)Ljava/util/List;
+#leastOf(Ljava/util/Iterator;I)Ljava/util/List;
+#greatestOf(Ljava/lang/Iterable;I)Ljava/util/List;
+#greatestOf(Ljava/util/Iterator;I)Ljava/util/List;
+#sortedCopy(Ljava/lang/Iterable;)Ljava/util/List;
+#immutableSortedCopy(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#isOrdered(Ljava/lang/Iterable;)Z
+#isStrictlyOrdered(Ljava/lang/Iterable;)Z
+#binarySearch(Ljava/util/List;Ljava/lang/Object;)I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Ordering

+###org/apache/flink/shaded/com/google/common/collect/PeekingIterator
@0.9.0-milestone-1
+#peek()Ljava/lang/Object;
+#next()Ljava/lang/Object;
+#remove()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/PeekingIterator

+###org/apache/flink/shaded/com/google/common/collect/Queues
@0.9.0-milestone-1
+#newArrayBlockingQueue(I)Ljava/util/concurrent/ArrayBlockingQueue;
+#newArrayDeque()Ljava/util/ArrayDeque;
+#newArrayDeque(Ljava/lang/Iterable;)Ljava/util/ArrayDeque;
+#newConcurrentLinkedQueue()Ljava/util/concurrent/ConcurrentLinkedQueue;
+#newConcurrentLinkedQueue(Ljava/lang/Iterable;)Ljava/util/concurrent/ConcurrentLinkedQueue;
+#newLinkedBlockingDeque()Ljava/util/concurrent/LinkedBlockingDeque;
+#newLinkedBlockingDeque(I)Ljava/util/concurrent/LinkedBlockingDeque;
+#newLinkedBlockingDeque(Ljava/lang/Iterable;)Ljava/util/concurrent/LinkedBlockingDeque;
+#newLinkedBlockingQueue()Ljava/util/concurrent/LinkedBlockingQueue;
+#newLinkedBlockingQueue(I)Ljava/util/concurrent/LinkedBlockingQueue;
+#newLinkedBlockingQueue(Ljava/lang/Iterable;)Ljava/util/concurrent/LinkedBlockingQueue;
+#newPriorityBlockingQueue()Ljava/util/concurrent/PriorityBlockingQueue;
+#newPriorityBlockingQueue(Ljava/lang/Iterable;)Ljava/util/concurrent/PriorityBlockingQueue;
+#newPriorityQueue()Ljava/util/PriorityQueue;
+#newPriorityQueue(Ljava/lang/Iterable;)Ljava/util/PriorityQueue;
+#newSynchronousQueue()Ljava/util/concurrent/SynchronousQueue;
+#drain(Ljava/util/concurrent/BlockingQueue;Ljava/util/Collection;IJLjava/util/concurrent/TimeUnit;)I
+#drainUninterruptibly(Ljava/util/concurrent/BlockingQueue;Ljava/util/Collection;IJLjava/util/concurrent/TimeUnit;)I
+#synchronizedQueue(Ljava/util/Queue;)Ljava/util/Queue;
+#synchronizedDeque(Ljava/util/Deque;)Ljava/util/Deque;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Queues

+###org/apache/flink/shaded/com/google/common/collect/Range
@0.9.0-milestone-1
+#open(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#closed(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#closedOpen(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#openClosed(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#range(Ljava/lang/Comparable;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Comparable;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#lessThan(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#atMost(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#upTo(Ljava/lang/Comparable;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#greaterThan(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#atLeast(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#downTo(Ljava/lang/Comparable;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#all()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#singleton(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#encloseAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#hasLowerBound()Z
+#lowerEndpoint()Ljava/lang/Comparable;
+#lowerBoundType()Lorg/apache/flink/shaded/com/google/common/collect/BoundType;
+#hasUpperBound()Z
+#upperEndpoint()Ljava/lang/Comparable;
+#upperBoundType()Lorg/apache/flink/shaded/com/google/common/collect/BoundType;
+#isEmpty()Z
+#contains(Ljava/lang/Comparable;)Z
+#apply(Ljava/lang/Comparable;)Z[deprecated]
+#containsAll(Ljava/lang/Iterable;)Z
+#encloses(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Z
+#isConnected(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Z
+#intersection(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#span(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#canonical(Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Range

+###org/apache/flink/shaded/com/google/common/collect/RangeMap
@0.9.0-milestone-1
+#get(Ljava/lang/Comparable;)Ljava/lang/Object;
+#getEntry(Ljava/lang/Comparable;)Ljava/util/Map$Entry;
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#put(Lorg/apache/flink/shaded/com/google/common/collect/Range;Ljava/lang/Object;)V
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;)V
+#clear()V
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#asMapOfRanges()Ljava/util/Map;
+#subRangeMap(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/RangeMap

+###org/apache/flink/shaded/com/google/common/collect/RangeSet
@0.9.0-milestone-1
+#contains(Ljava/lang/Comparable;)Z
+#rangeContaining(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#encloses(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Z
+#enclosesAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Z
+#isEmpty()Z
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#asRanges()Ljava/util/Set;
+#complement()Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#subRangeSet(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#add(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#clear()V
+#addAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#removeAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/RangeSet

+###org/apache/flink/shaded/com/google/common/collect/RowSortedTable
@0.9.0-milestone-1
+#rowKeySet()Ljava/util/SortedSet;
+#rowMap()Ljava/util/SortedMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/RowSortedTable

+###org/apache/flink/shaded/com/google/common/collect/SetMultimap
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#entries()Ljava/util/Set;
+#asMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/SetMultimap

+###org/apache/flink/shaded/com/google/common/collect/Sets$SetView
@0.9.0-milestone-1
+#immutableCopy()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#copyInto(Ljava/util/Set;)Ljava/util/Set;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Sets$SetView

+###org/apache/flink/shaded/com/google/common/collect/Sets
@0.9.0-milestone-1
+#immutableEnumSet(Ljava/lang/Enum;[Ljava/lang/Enum;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#immutableEnumSet(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#newEnumSet(Ljava/lang/Iterable;Ljava/lang/Class;)Ljava/util/EnumSet;
+#newHashSet()Ljava/util/HashSet;
+#newHashSet([Ljava/lang/Object;)Ljava/util/HashSet;
+#newHashSetWithExpectedSize(I)Ljava/util/HashSet;
+#newHashSet(Ljava/lang/Iterable;)Ljava/util/HashSet;
+#newHashSet(Ljava/util/Iterator;)Ljava/util/HashSet;
+#newConcurrentHashSet()Ljava/util/Set;
+#newConcurrentHashSet(Ljava/lang/Iterable;)Ljava/util/Set;
+#newLinkedHashSet()Ljava/util/LinkedHashSet;
+#newLinkedHashSetWithExpectedSize(I)Ljava/util/LinkedHashSet;
+#newLinkedHashSet(Ljava/lang/Iterable;)Ljava/util/LinkedHashSet;
+#newTreeSet()Ljava/util/TreeSet;
+#newTreeSet(Ljava/lang/Iterable;)Ljava/util/TreeSet;
+#newTreeSet(Ljava/util/Comparator;)Ljava/util/TreeSet;
+#newIdentityHashSet()Ljava/util/Set;
+#newCopyOnWriteArraySet()Ljava/util/concurrent/CopyOnWriteArraySet;
+#newCopyOnWriteArraySet(Ljava/lang/Iterable;)Ljava/util/concurrent/CopyOnWriteArraySet;
+#complementOf(Ljava/util/Collection;)Ljava/util/EnumSet;
+#complementOf(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/EnumSet;
+#newSetFromMap(Ljava/util/Map;)Ljava/util/Set;
+#union(Ljava/util/Set;Ljava/util/Set;)Lorg/apache/flink/shaded/com/google/common/collect/Sets$SetView;
+#intersection(Ljava/util/Set;Ljava/util/Set;)Lorg/apache/flink/shaded/com/google/common/collect/Sets$SetView;
+#difference(Ljava/util/Set;Ljava/util/Set;)Lorg/apache/flink/shaded/com/google/common/collect/Sets$SetView;
+#symmetricDifference(Ljava/util/Set;Ljava/util/Set;)Lorg/apache/flink/shaded/com/google/common/collect/Sets$SetView;
+#filter(Ljava/util/Set;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/Set;
+#filter(Ljava/util/SortedSet;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/SortedSet;
+#filter(Ljava/util/NavigableSet;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/NavigableSet;
+#cartesianProduct(Ljava/util/List;)Ljava/util/Set;
+#cartesianProduct([Ljava/util/Set;)Ljava/util/Set;
+#powerSet(Ljava/util/Set;)Ljava/util/Set;
+#unmodifiableNavigableSet(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;
+#synchronizedNavigableSet(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Sets

+###org/apache/flink/shaded/com/google/common/collect/SortedLists$KeyAbsentBehavior
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/collect/SortedLists$KeyAbsentBehavior;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/SortedLists$KeyAbsentBehavior;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/SortedLists$KeyAbsentBehavior

+###org/apache/flink/shaded/com/google/common/collect/SortedLists$KeyPresentBehavior
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/collect/SortedLists$KeyPresentBehavior;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/SortedLists$KeyPresentBehavior;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/SortedLists$KeyPresentBehavior

+###org/apache/flink/shaded/com/google/common/collect/SortedMapDifference
@0.9.0-milestone-1
+#entriesOnlyOnLeft()Ljava/util/SortedMap;
+#entriesOnlyOnRight()Ljava/util/SortedMap;
+#entriesInCommon()Ljava/util/SortedMap;
+#entriesDiffering()Ljava/util/SortedMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/SortedMapDifference

+###org/apache/flink/shaded/com/google/common/collect/SortedMultiset
@0.9.0-milestone-1
+#comparator()Ljava/util/Comparator;
+#firstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#lastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#pollFirstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#pollLastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#elementSet()Ljava/util/NavigableSet;
+#entrySet()Ljava/util/Set;
+#iterator()Ljava/util/Iterator;
+#descendingMultiset()Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#headMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#subMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#tailMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/SortedMultiset

+###org/apache/flink/shaded/com/google/common/collect/SortedSetMultimap
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/util/SortedSet;
+#removeAll(Ljava/lang/Object;)Ljava/util/SortedSet;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/SortedSet;
+#asMap()Ljava/util/Map;
+#valueComparator()Ljava/util/Comparator;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/SortedSetMultimap

+###org/apache/flink/shaded/com/google/common/collect/Table$Cell
@0.9.0-milestone-1
+#getRowKey()Ljava/lang/Object;
+#getColumnKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Table$Cell

+###org/apache/flink/shaded/com/google/common/collect/Table
@0.9.0-milestone-1
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#containsColumn(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#size()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clear()V
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#row(Ljava/lang/Object;)Ljava/util/Map;
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#cellSet()Ljava/util/Set;
+#rowKeySet()Ljava/util/Set;
+#columnKeySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#rowMap()Ljava/util/Map;
+#columnMap()Ljava/util/Map;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Table

+###org/apache/flink/shaded/com/google/common/collect/Tables
@0.9.0-milestone-1
+#immutableCell(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/Table$Cell;
+#transpose(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/Table;
+#newCustomTable(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/collect/Table;
+#transformValues(Lorg/apache/flink/shaded/com/google/common/collect/Table;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/Table;
+#unmodifiableTable(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/Table;
+#unmodifiableRowSortedTable(Lorg/apache/flink/shaded/com/google/common/collect/RowSortedTable;)Lorg/apache/flink/shaded/com/google/common/collect/RowSortedTable;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/Tables

+###org/apache/flink/shaded/com/google/common/collect/TreeBasedTable
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/TreeBasedTable;
+#create(Ljava/util/Comparator;Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/TreeBasedTable;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/TreeBasedTable;)Lorg/apache/flink/shaded/com/google/common/collect/TreeBasedTable;
+#rowComparator()Ljava/util/Comparator;
+#columnComparator()Ljava/util/Comparator;
+#row(Ljava/lang/Object;)Ljava/util/SortedMap;
+#rowKeySet()Ljava/util/SortedSet;
+#rowMap()Ljava/util/SortedMap;
+#rowMap()Ljava/util/Map;
+#rowKeySet()Ljava/util/Set;
+#row(Ljava/lang/Object;)Ljava/util/Map;
+#columnMap()Ljava/util/Map;
+#values()Ljava/util/Collection;
+#columnKeySet()Ljava/util/Set;
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#cellSet()Ljava/util/Set;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#size()I
+#isEmpty()Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#containsValue(Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#containsColumn(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/TreeBasedTable

+###org/apache/flink/shaded/com/google/common/collect/TreeMultimap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/TreeMultimap;
+#create(Ljava/util/Comparator;Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/TreeMultimap;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/TreeMultimap;
+#keyComparator()Ljava/util/Comparator;
+#valueComparator()Ljava/util/Comparator;
+#get(Ljava/lang/Object;)Ljava/util/NavigableSet;
+#keySet()Ljava/util/NavigableSet;
+#asMap()Ljava/util/NavigableMap;
+#keySet()Ljava/util/SortedSet;
+#asMap()Ljava/util/SortedMap;
+#values()Ljava/util/Collection;
+#asMap()Ljava/util/Map;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/SortedSet;
+#removeAll(Ljava/lang/Object;)Ljava/util/SortedSet;
+#get(Ljava/lang/Object;)Ljava/util/SortedSet;
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#keySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#entries()Ljava/util/Set;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#size()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/TreeMultimap

+###org/apache/flink/shaded/com/google/common/collect/TreeMultiset
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/TreeMultiset;
+#create(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/TreeMultiset;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/TreeMultiset;
+#size()I
+#count(Ljava/lang/Object;)I
+#add(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;II)Z
+#headMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#tailMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#descendingMultiset()Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#subMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#pollLastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#pollFirstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#lastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#firstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#comparator()Ljava/util/Comparator;
+#elementSet()Ljava/util/NavigableSet;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#clear()V
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#remove(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/TreeMultiset

+###org/apache/flink/shaded/com/google/common/collect/TreeRangeMap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/TreeRangeMap;
+#get(Ljava/lang/Comparable;)Ljava/lang/Object;
+#getEntry(Ljava/lang/Comparable;)Ljava/util/Map$Entry;
+#put(Lorg/apache/flink/shaded/com/google/common/collect/Range;Ljava/lang/Object;)V
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;)V
+#clear()V
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#asMapOfRanges()Ljava/util/Map;
+#subRangeMap(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/TreeRangeMap

+###org/apache/flink/shaded/com/google/common/collect/TreeRangeSet
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/TreeRangeSet;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Lorg/apache/flink/shaded/com/google/common/collect/TreeRangeSet;
+#asRanges()Ljava/util/Set;
+#rangeContaining(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#encloses(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Z
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#add(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#complement()Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#subRangeSet(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#equals(Ljava/lang/Object;)Z
+#removeAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#addAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#enclosesAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Z
+#clear()V
+#isEmpty()Z
+#contains(Ljava/lang/Comparable;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/TreeRangeSet

+###org/apache/flink/shaded/com/google/common/collect/TreeTraverser
@0.9.0-milestone-1
+#<init>()V
+#children(Ljava/lang/Object;)Ljava/lang/Iterable;
+#preOrderTraversal(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#postOrderTraversal(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#breadthFirstTraversal(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/TreeTraverser

+###org/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator
@0.9.0-milestone-1
+#remove()V[deprecated]
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator

+###org/apache/flink/shaded/com/google/common/collect/UnmodifiableListIterator
@0.9.0-milestone-1
+#add(Ljava/lang/Object;)V[deprecated]
+#set(Ljava/lang/Object;)V[deprecated]
@1.14.0
-###org/apache/flink/shaded/com/google/common/collect/UnmodifiableListIterator

+###org/apache/flink/shaded/com/google/common/escape/ArrayBasedCharEscaper
@0.9.0-milestone-1
+#escape(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/escape/ArrayBasedCharEscaper

+###org/apache/flink/shaded/com/google/common/escape/ArrayBasedEscaperMap
@0.9.0-milestone-1
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/escape/ArrayBasedEscaperMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/escape/ArrayBasedEscaperMap

+###org/apache/flink/shaded/com/google/common/escape/ArrayBasedUnicodeEscaper
@0.9.0-milestone-1
+#escape(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/escape/ArrayBasedUnicodeEscaper

+###org/apache/flink/shaded/com/google/common/escape/CharEscaper
@0.9.0-milestone-1
+#escape(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/escape/CharEscaper

+###org/apache/flink/shaded/com/google/common/escape/CharEscaperBuilder
@0.9.0-milestone-1
+#<init>()V
+#addEscape(CLjava/lang/String;)Lorg/apache/flink/shaded/com/google/common/escape/CharEscaperBuilder;
+#addEscapes([CLjava/lang/String;)Lorg/apache/flink/shaded/com/google/common/escape/CharEscaperBuilder;
+#toArray()[[C
+#toEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
@1.14.0
-###org/apache/flink/shaded/com/google/common/escape/CharEscaperBuilder

+###org/apache/flink/shaded/com/google/common/escape/Escaper
@0.9.0-milestone-1
+#escape(Ljava/lang/String;)Ljava/lang/String;
+#asFunction()Lorg/apache/flink/shaded/com/google/common/base/Function;
@1.14.0
-###org/apache/flink/shaded/com/google/common/escape/Escaper

+###org/apache/flink/shaded/com/google/common/escape/Escapers$Builder
@0.9.0-milestone-1
+#setSafeRange(CC)Lorg/apache/flink/shaded/com/google/common/escape/Escapers$Builder;
+#setUnsafeReplacement(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/escape/Escapers$Builder;
+#addEscape(CLjava/lang/String;)Lorg/apache/flink/shaded/com/google/common/escape/Escapers$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
@1.14.0
-###org/apache/flink/shaded/com/google/common/escape/Escapers$Builder

+###org/apache/flink/shaded/com/google/common/escape/Escapers
@0.9.0-milestone-1
+#nullEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
+#builder()Lorg/apache/flink/shaded/com/google/common/escape/Escapers$Builder;
+#computeReplacement(Lorg/apache/flink/shaded/com/google/common/escape/CharEscaper;C)Ljava/lang/String;
+#computeReplacement(Lorg/apache/flink/shaded/com/google/common/escape/UnicodeEscaper;I)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/escape/Escapers

+###org/apache/flink/shaded/com/google/common/escape/UnicodeEscaper
@0.9.0-milestone-1
+#escape(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/escape/UnicodeEscaper

+###org/apache/flink/shaded/com/google/common/eventbus/AllowConcurrentEvents
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/eventbus/AllowConcurrentEvents

+###org/apache/flink/shaded/com/google/common/eventbus/AsyncEventBus
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Lorg/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionHandler;)V
+#<init>(Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/eventbus/AsyncEventBus

+###org/apache/flink/shaded/com/google/common/eventbus/DeadEvent
@0.9.0-milestone-1
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getSource()Ljava/lang/Object;
+#getEvent()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/eventbus/DeadEvent

+###org/apache/flink/shaded/com/google/common/eventbus/EventBus
@0.9.0-milestone-1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionHandler;)V
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
+#post(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/eventbus/EventBus

+###org/apache/flink/shaded/com/google/common/eventbus/Subscribe
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/eventbus/Subscribe

+###org/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionContext
@0.9.0-milestone-1
+#getEventBus()Lorg/apache/flink/shaded/com/google/common/eventbus/EventBus;
+#getEvent()Ljava/lang/Object;
+#getSubscriber()Ljava/lang/Object;
+#getSubscriberMethod()Ljava/lang/reflect/Method;
@1.14.0
-###org/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionContext

+###org/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionHandler
@0.9.0-milestone-1
+#handleException(Ljava/lang/Throwable;Lorg/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionContext;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionHandler

+###org/apache/flink/shaded/com/google/common/hash/AbstractStreamingHashFunction$AbstractStreamingHasher
@0.9.0-milestone-1
+#putBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putBytes([BII)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putUnencodedChars(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putByte(B)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putShort(S)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putChar(C)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putInt(I)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putLong(J)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putObject(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/hash/Funnel;)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#hash()Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#putUnencodedChars(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putChar(C)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putLong(J)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putInt(I)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putShort(S)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putBytes([BII)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putByte(B)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/AbstractStreamingHashFunction$AbstractStreamingHasher

+###org/apache/flink/shaded/com/google/common/hash/BloomFilter
@0.9.0-milestone-1
+#copy()Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;
+#mightContain(Ljava/lang/Object;)Z
+#apply(Ljava/lang/Object;)Z[deprecated]
+#put(Ljava/lang/Object;)Z
+#expectedFpp()D
+#isCompatible(Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;)Z
+#putAll(Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#create(Lorg/apache/flink/shaded/com/google/common/hash/Funnel;ID)Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;
+#create(Lorg/apache/flink/shaded/com/google/common/hash/Funnel;I)Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;
+#writeTo(Ljava/io/OutputStream;)V
+#readFrom(Ljava/io/InputStream;Lorg/apache/flink/shaded/com/google/common/hash/Funnel;)Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/BloomFilter

+###org/apache/flink/shaded/com/google/common/hash/Funnel
@0.9.0-milestone-1
+#funnel(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/Funnel

+###org/apache/flink/shaded/com/google/common/hash/Funnels
@0.9.0-milestone-1
+#byteArrayFunnel()Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#unencodedCharsFunnel()Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#stringFunnel(Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#integerFunnel()Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#sequentialFunnel(Lorg/apache/flink/shaded/com/google/common/hash/Funnel;)Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#longFunnel()Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#asOutputStream(Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;)Ljava/io/OutputStream;
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/Funnels

+###org/apache/flink/shaded/com/google/common/hash/HashCode
@0.9.0-milestone-1
+#bits()I
+#asInt()I
+#asLong()J
+#padToLong()J
+#asBytes()[B
+#writeBytesTo([BII)I
+#fromInt(I)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#fromLong(J)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#fromBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#fromString(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/HashCode

+###org/apache/flink/shaded/com/google/common/hash/HashFunction
@0.9.0-milestone-1
+#newHasher()Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#newHasher(I)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#hashInt(I)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashLong(J)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashBytes([BII)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashUnencodedChars(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashString(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashObject(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/hash/Funnel;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#bits()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/HashFunction

+###org/apache/flink/shaded/com/google/common/hash/Hasher
@0.9.0-milestone-1
+#putByte(B)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putBytes([BII)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putShort(S)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putInt(I)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putLong(J)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putFloat(F)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putDouble(D)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putBoolean(Z)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putChar(C)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putUnencodedChars(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putString(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putObject(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/hash/Funnel;)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#hash()Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/Hasher

+###org/apache/flink/shaded/com/google/common/hash/Hashing
@0.9.0-milestone-1
+#goodFastHash(I)Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#murmur3_32(I)Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#murmur3_32()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#murmur3_128(I)Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#murmur3_128()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#sipHash24()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#sipHash24(JJ)Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#md5()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#sha1()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#sha256()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#sha512()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#crc32c()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#crc32()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#adler32()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#consistentHash(Lorg/apache/flink/shaded/com/google/common/hash/HashCode;I)I
+#consistentHash(JI)I
+#combineOrdered(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#combineUnordered(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/Hashing

+###org/apache/flink/shaded/com/google/common/hash/HashingInputStream
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;Ljava/io/InputStream;)V
+#read()I
+#read([BII)I
+#markSupported()Z
+#mark(I)V
+#reset()V
+#hash()Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/HashingInputStream

+###org/apache/flink/shaded/com/google/common/hash/HashingOutputStream
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;Ljava/io/OutputStream;)V
+#write(I)V
+#write([BII)V
+#hash()Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#close()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/HashingOutputStream

+###org/apache/flink/shaded/com/google/common/hash/PrimitiveSink
@0.9.0-milestone-1
+#putByte(B)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putBytes([BII)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putShort(S)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putInt(I)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putLong(J)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putFloat(F)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putDouble(D)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putBoolean(Z)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putChar(C)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putUnencodedChars(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putString(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
@1.14.0
-###org/apache/flink/shaded/com/google/common/hash/PrimitiveSink

+###org/apache/flink/shaded/com/google/common/html/HtmlEscapers
@0.9.0-milestone-1
+#htmlEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
@1.14.0
-###org/apache/flink/shaded/com/google/common/html/HtmlEscapers

+###org/apache/flink/shaded/com/google/common/io/BaseEncoding$DecodingException
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/BaseEncoding$DecodingException

+###org/apache/flink/shaded/com/google/common/io/BaseEncoding
@0.9.0-milestone-1
+#encode([B)Ljava/lang/String;
+#encode([BII)Ljava/lang/String;
+#encodingStream(Ljava/io/Writer;)Ljava/io/OutputStream;
+#encodingSink(Lorg/apache/flink/shaded/com/google/common/io/CharSink;)Lorg/apache/flink/shaded/com/google/common/io/ByteSink;
+#decode(Ljava/lang/CharSequence;)[B
+#decodingStream(Ljava/io/Reader;)Ljava/io/InputStream;
+#decodingSource(Lorg/apache/flink/shaded/com/google/common/io/CharSource;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#omitPadding()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#withPadChar(C)Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#withSeparator(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#upperCase()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#lowerCase()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#base64()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#base64Url()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#base32()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#base32Hex()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#base16()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/BaseEncoding

+###org/apache/flink/shaded/com/google/common/io/ByteArrayDataInput
@0.9.0-milestone-1
+#readFully([B)V
+#readFully([BII)V
+#skipBytes(I)I
+#readBoolean()Z
+#readByte()B
+#readUnsignedByte()I
+#readShort()S
+#readUnsignedShort()I
+#readChar()C
+#readInt()I
+#readLong()J
+#readFloat()F
+#readDouble()D
+#readLine()Ljava/lang/String;
+#readUTF()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/ByteArrayDataInput

+###org/apache/flink/shaded/com/google/common/io/ByteArrayDataOutput
@0.9.0-milestone-1
+#write(I)V
+#write([B)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeShort(I)V
+#writeChar(I)V
+#writeInt(I)V
+#writeLong(J)V
+#writeFloat(F)V
+#writeDouble(D)V
+#writeChars(Ljava/lang/String;)V
+#writeUTF(Ljava/lang/String;)V
+#writeBytes(Ljava/lang/String;)V[deprecated]
+#toByteArray()[B
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/ByteArrayDataOutput

+###org/apache/flink/shaded/com/google/common/io/ByteProcessor
@0.9.0-milestone-1
+#processBytes([BII)Z
+#getResult()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/ByteProcessor

+###org/apache/flink/shaded/com/google/common/io/ByteSink
@0.9.0-milestone-1
+#asCharSink(Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/io/CharSink;
+#openStream()Ljava/io/OutputStream;
+#openBufferedStream()Ljava/io/OutputStream;
+#write([B)V
+#writeFrom(Ljava/io/InputStream;)J
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/ByteSink

+###org/apache/flink/shaded/com/google/common/io/ByteSource
@0.9.0-milestone-1
+#asCharSource(Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#openStream()Ljava/io/InputStream;
+#openBufferedStream()Ljava/io/InputStream;
+#slice(JJ)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#isEmpty()Z
+#size()J
+#copyTo(Ljava/io/OutputStream;)J
+#copyTo(Lorg/apache/flink/shaded/com/google/common/io/ByteSink;)J
+#read()[B
+#read(Lorg/apache/flink/shaded/com/google/common/io/ByteProcessor;)Ljava/lang/Object;
+#hash(Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#contentEquals(Lorg/apache/flink/shaded/com/google/common/io/ByteSource;)Z
+#concat(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#concat(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#concat([Lorg/apache/flink/shaded/com/google/common/io/ByteSource;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#wrap([B)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#empty()Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/ByteSource

+###org/apache/flink/shaded/com/google/common/io/ByteStreams
@0.9.0-milestone-1
+#copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J
+#copy(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/channels/WritableByteChannel;)J
+#toByteArray(Ljava/io/InputStream;)[B
+#newDataInput([B)Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataInput;
+#newDataInput([BI)Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataInput;
+#newDataInput(Ljava/io/ByteArrayInputStream;)Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataInput;
+#newDataOutput()Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataOutput;
+#newDataOutput(I)Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataOutput;
+#newDataOutput(Ljava/io/ByteArrayOutputStream;)Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataOutput;
+#nullOutputStream()Ljava/io/OutputStream;
+#limit(Ljava/io/InputStream;J)Ljava/io/InputStream;
+#readFully(Ljava/io/InputStream;[B)V
+#readFully(Ljava/io/InputStream;[BII)V
+#skipFully(Ljava/io/InputStream;J)V
+#readBytes(Ljava/io/InputStream;Lorg/apache/flink/shaded/com/google/common/io/ByteProcessor;)Ljava/lang/Object;
+#read(Ljava/io/InputStream;[BII)I
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/ByteStreams

+###org/apache/flink/shaded/com/google/common/io/CharSink
@0.9.0-milestone-1
+#openStream()Ljava/io/Writer;
+#openBufferedStream()Ljava/io/Writer;
+#write(Ljava/lang/CharSequence;)V
+#writeLines(Ljava/lang/Iterable;)V
+#writeLines(Ljava/lang/Iterable;Ljava/lang/String;)V
+#writeFrom(Ljava/lang/Readable;)J
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/CharSink

+###org/apache/flink/shaded/com/google/common/io/CharSource
@0.9.0-milestone-1
+#openStream()Ljava/io/Reader;
+#openBufferedStream()Ljava/io/BufferedReader;
+#copyTo(Ljava/lang/Appendable;)J
+#copyTo(Lorg/apache/flink/shaded/com/google/common/io/CharSink;)J
+#read()Ljava/lang/String;
+#readFirstLine()Ljava/lang/String;
+#readLines()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#readLines(Lorg/apache/flink/shaded/com/google/common/io/LineProcessor;)Ljava/lang/Object;
+#isEmpty()Z
+#concat(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#concat(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#concat([Lorg/apache/flink/shaded/com/google/common/io/CharSource;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#wrap(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#empty()Lorg/apache/flink/shaded/com/google/common/io/CharSource;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/CharSource

+###org/apache/flink/shaded/com/google/common/io/CharStreams
@0.9.0-milestone-1
+#copy(Ljava/lang/Readable;Ljava/lang/Appendable;)J
+#toString(Ljava/lang/Readable;)Ljava/lang/String;
+#readLines(Ljava/lang/Readable;)Ljava/util/List;
+#readLines(Ljava/lang/Readable;Lorg/apache/flink/shaded/com/google/common/io/LineProcessor;)Ljava/lang/Object;
+#skipFully(Ljava/io/Reader;J)V
+#nullWriter()Ljava/io/Writer;
+#asWriter(Ljava/lang/Appendable;)Ljava/io/Writer;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/CharStreams

+###org/apache/flink/shaded/com/google/common/io/Closeables
@0.9.0-milestone-1
+#close(Ljava/io/Closeable;Z)V
+#closeQuietly(Ljava/io/InputStream;)V
+#closeQuietly(Ljava/io/Reader;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/Closeables

+###org/apache/flink/shaded/com/google/common/io/Closer
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/io/Closer;
+#register(Ljava/io/Closeable;)Ljava/io/Closeable;
+#rethrow(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#rethrow(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/RuntimeException;
+#rethrow(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/RuntimeException;
+#close()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/Closer

+###org/apache/flink/shaded/com/google/common/io/CountingInputStream
@0.9.0-milestone-1
+#<init>(Ljava/io/InputStream;)V
+#getCount()J
+#read()I
+#read([BII)I
+#skip(J)J
+#mark(I)V
+#reset()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/CountingInputStream

+###org/apache/flink/shaded/com/google/common/io/CountingOutputStream
@0.9.0-milestone-1
+#<init>(Ljava/io/OutputStream;)V
+#getCount()J
+#write([BII)V
+#write(I)V
+#close()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/CountingOutputStream

+###org/apache/flink/shaded/com/google/common/io/FileBackedOutputStream
@0.9.0-milestone-1
+#<init>(I)V
+#<init>(IZ)V
+#asByteSource()Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#reset()V
+#write(I)V
+#write([B)V
+#write([BII)V
+#close()V
+#flush()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/FileBackedOutputStream

+###org/apache/flink/shaded/com/google/common/io/FileWriteMode
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/io/FileWriteMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/io/FileWriteMode;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/FileWriteMode

+###org/apache/flink/shaded/com/google/common/io/Files
@0.9.0-milestone-1
+#newReader(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;
+#newWriter(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/io/BufferedWriter;
+#asByteSource(Ljava/io/File;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#asByteSink(Ljava/io/File;[Lorg/apache/flink/shaded/com/google/common/io/FileWriteMode;)Lorg/apache/flink/shaded/com/google/common/io/ByteSink;
+#asCharSource(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#asCharSink(Ljava/io/File;Ljava/nio/charset/Charset;[Lorg/apache/flink/shaded/com/google/common/io/FileWriteMode;)Lorg/apache/flink/shaded/com/google/common/io/CharSink;
+#toByteArray(Ljava/io/File;)[B
+#toString(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#write([BLjava/io/File;)V
+#copy(Ljava/io/File;Ljava/io/OutputStream;)V
+#copy(Ljava/io/File;Ljava/io/File;)V
+#write(Ljava/lang/CharSequence;Ljava/io/File;Ljava/nio/charset/Charset;)V
+#append(Ljava/lang/CharSequence;Ljava/io/File;Ljava/nio/charset/Charset;)V
+#copy(Ljava/io/File;Ljava/nio/charset/Charset;Ljava/lang/Appendable;)V
+#equal(Ljava/io/File;Ljava/io/File;)Z
+#createTempDir()Ljava/io/File;
+#touch(Ljava/io/File;)V
+#createParentDirs(Ljava/io/File;)V
+#move(Ljava/io/File;Ljava/io/File;)V
+#readFirstLine(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#readLines(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/util/List;
+#readLines(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/flink/shaded/com/google/common/io/LineProcessor;)Ljava/lang/Object;
+#readBytes(Ljava/io/File;Lorg/apache/flink/shaded/com/google/common/io/ByteProcessor;)Ljava/lang/Object;
+#hash(Ljava/io/File;Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#map(Ljava/io/File;)Ljava/nio/MappedByteBuffer;
+#map(Ljava/io/File;Ljava/nio/channels/FileChannel$MapMode;)Ljava/nio/MappedByteBuffer;
+#map(Ljava/io/File;Ljava/nio/channels/FileChannel$MapMode;J)Ljava/nio/MappedByteBuffer;
+#simplifyPath(Ljava/lang/String;)Ljava/lang/String;
+#getFileExtension(Ljava/lang/String;)Ljava/lang/String;
+#getNameWithoutExtension(Ljava/lang/String;)Ljava/lang/String;
+#fileTreeTraverser()Lorg/apache/flink/shaded/com/google/common/collect/TreeTraverser;
+#isDirectory()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#isFile()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/Files

+###org/apache/flink/shaded/com/google/common/io/Flushables
@0.9.0-milestone-1
+#flush(Ljava/io/Flushable;Z)V
+#flushQuietly(Ljava/io/Flushable;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/Flushables

+###org/apache/flink/shaded/com/google/common/io/InputSupplier
@0.9.0-milestone-1
+#getInput()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/InputSupplier

+###org/apache/flink/shaded/com/google/common/io/LineProcessor
@0.9.0-milestone-1
+#processLine(Ljava/lang/String;)Z
+#getResult()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/LineProcessor

+###org/apache/flink/shaded/com/google/common/io/LineReader
@0.9.0-milestone-1
+#<init>(Ljava/lang/Readable;)V
+#readLine()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/LineReader

+###org/apache/flink/shaded/com/google/common/io/LittleEndianDataInputStream
@0.9.0-milestone-1
+#<init>(Ljava/io/InputStream;)V
+#readLine()Ljava/lang/String;
+#readFully([B)V
+#readFully([BII)V
+#skipBytes(I)I
+#readUnsignedByte()I
+#readUnsignedShort()I
+#readInt()I
+#readLong()J
+#readFloat()F
+#readDouble()D
+#readUTF()Ljava/lang/String;
+#readShort()S
+#readChar()C
+#readByte()B
+#readBoolean()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/LittleEndianDataInputStream

+###org/apache/flink/shaded/com/google/common/io/LittleEndianDataOutputStream
@0.9.0-milestone-1
+#<init>(Ljava/io/OutputStream;)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeBytes(Ljava/lang/String;)V[deprecated]
+#writeChar(I)V
+#writeChars(Ljava/lang/String;)V
+#writeDouble(D)V
+#writeFloat(F)V
+#writeInt(I)V
+#writeLong(J)V
+#writeShort(I)V
+#writeUTF(Ljava/lang/String;)V
+#close()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/LittleEndianDataOutputStream

+###org/apache/flink/shaded/com/google/common/io/OutputSupplier
@0.9.0-milestone-1
+#getOutput()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/OutputSupplier

+###org/apache/flink/shaded/com/google/common/io/PatternFilenameFilter
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/regex/Pattern;)V
+#accept(Ljava/io/File;Ljava/lang/String;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/PatternFilenameFilter

+###org/apache/flink/shaded/com/google/common/io/Resources
@0.9.0-milestone-1
+#asByteSource(Ljava/net/URL;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#asCharSource(Ljava/net/URL;Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#toByteArray(Ljava/net/URL;)[B
+#toString(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#readLines(Ljava/net/URL;Ljava/nio/charset/Charset;Lorg/apache/flink/shaded/com/google/common/io/LineProcessor;)Ljava/lang/Object;
+#readLines(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/util/List;
+#copy(Ljava/net/URL;Ljava/io/OutputStream;)V
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResource(Ljava/lang/Class;Ljava/lang/String;)Ljava/net/URL;
@1.14.0
-###org/apache/flink/shaded/com/google/common/io/Resources

+###org/apache/flink/shaded/com/google/common/math/BigIntegerMath
@0.9.0-milestone-1
+#isPowerOfTwo(Ljava/math/BigInteger;)Z
+#log2(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I
+#log10(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I
+#sqrt(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;
+#divide(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;
+#factorial(I)Ljava/math/BigInteger;
+#binomial(II)Ljava/math/BigInteger;
@1.14.0
-###org/apache/flink/shaded/com/google/common/math/BigIntegerMath

+###org/apache/flink/shaded/com/google/common/math/DoubleMath
@0.9.0-milestone-1
+#roundToInt(DLjava/math/RoundingMode;)I
+#roundToLong(DLjava/math/RoundingMode;)J
+#roundToBigInteger(DLjava/math/RoundingMode;)Ljava/math/BigInteger;
+#isPowerOfTwo(D)Z
+#log2(D)D
+#log2(DLjava/math/RoundingMode;)I
+#isMathematicalInteger(D)Z
+#factorial(I)D
+#fuzzyEquals(DDD)Z
+#fuzzyCompare(DDD)I
+#mean([D)D
+#mean([I)D
+#mean([J)D
+#mean(Ljava/lang/Iterable;)D
+#mean(Ljava/util/Iterator;)D
@1.14.0
-###org/apache/flink/shaded/com/google/common/math/DoubleMath

+###org/apache/flink/shaded/com/google/common/math/IntMath
@0.9.0-milestone-1
+#isPowerOfTwo(I)Z
+#log2(ILjava/math/RoundingMode;)I
+#log10(ILjava/math/RoundingMode;)I
+#pow(II)I
+#sqrt(ILjava/math/RoundingMode;)I
+#divide(IILjava/math/RoundingMode;)I
+#mod(II)I
+#gcd(II)I
+#checkedAdd(II)I
+#checkedSubtract(II)I
+#checkedMultiply(II)I
+#checkedPow(II)I
+#factorial(I)I
+#binomial(II)I
+#mean(II)I
@1.14.0
-###org/apache/flink/shaded/com/google/common/math/IntMath

+###org/apache/flink/shaded/com/google/common/math/LongMath
@0.9.0-milestone-1
+#isPowerOfTwo(J)Z
+#log2(JLjava/math/RoundingMode;)I
+#log10(JLjava/math/RoundingMode;)I
+#pow(JI)J
+#sqrt(JLjava/math/RoundingMode;)J
+#divide(JJLjava/math/RoundingMode;)J
+#mod(JI)I
+#mod(JJ)J
+#gcd(JJ)J
+#checkedAdd(JJ)J
+#checkedSubtract(JJ)J
+#checkedMultiply(JJ)J
+#checkedPow(JI)J
+#factorial(I)J
+#binomial(II)J
+#mean(JJ)J
@1.14.0
-###org/apache/flink/shaded/com/google/common/math/LongMath

+###org/apache/flink/shaded/com/google/common/net/HostAndPort
@0.9.0-milestone-1
+#getHostText()Ljava/lang/String;
+#hasPort()Z
+#getPort()I
+#getPortOrDefault(I)I
+#fromParts(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/net/HostAndPort;
+#fromHost(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/HostAndPort;
+#fromString(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/HostAndPort;
+#withDefaultPort(I)Lorg/apache/flink/shaded/com/google/common/net/HostAndPort;
+#requireBracketsForIPv6()Lorg/apache/flink/shaded/com/google/common/net/HostAndPort;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/net/HostAndPort

+###org/apache/flink/shaded/com/google/common/net/HostSpecifier
@0.9.0-milestone-1
+#fromValid(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/HostSpecifier;
+#from(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/HostSpecifier;
+#isValid(Ljava/lang/String;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/net/HostSpecifier

+###org/apache/flink/shaded/com/google/common/net/HttpHeaders
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/net/HttpHeaders

+###org/apache/flink/shaded/com/google/common/net/InetAddresses$TeredoInfo
@0.9.0-milestone-1
+#<init>(Ljava/net/Inet4Address;Ljava/net/Inet4Address;II)V
+#getServer()Ljava/net/Inet4Address;
+#getClient()Ljava/net/Inet4Address;
+#getPort()I
+#getFlags()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/net/InetAddresses$TeredoInfo

+###org/apache/flink/shaded/com/google/common/net/InetAddresses
@0.9.0-milestone-1
+#forString(Ljava/lang/String;)Ljava/net/InetAddress;
+#isInetAddress(Ljava/lang/String;)Z
+#toAddrString(Ljava/net/InetAddress;)Ljava/lang/String;
+#toUriString(Ljava/net/InetAddress;)Ljava/lang/String;
+#forUriString(Ljava/lang/String;)Ljava/net/InetAddress;
+#isUriInetAddress(Ljava/lang/String;)Z
+#isCompatIPv4Address(Ljava/net/Inet6Address;)Z
+#getCompatIPv4Address(Ljava/net/Inet6Address;)Ljava/net/Inet4Address;
+#is6to4Address(Ljava/net/Inet6Address;)Z
+#get6to4IPv4Address(Ljava/net/Inet6Address;)Ljava/net/Inet4Address;
+#isTeredoAddress(Ljava/net/Inet6Address;)Z
+#getTeredoInfo(Ljava/net/Inet6Address;)Lorg/apache/flink/shaded/com/google/common/net/InetAddresses$TeredoInfo;
+#isIsatapAddress(Ljava/net/Inet6Address;)Z
+#getIsatapIPv4Address(Ljava/net/Inet6Address;)Ljava/net/Inet4Address;
+#hasEmbeddedIPv4ClientAddress(Ljava/net/Inet6Address;)Z
+#getEmbeddedIPv4ClientAddress(Ljava/net/Inet6Address;)Ljava/net/Inet4Address;
+#isMappedIPv4Address(Ljava/lang/String;)Z
+#getCoercedIPv4Address(Ljava/net/InetAddress;)Ljava/net/Inet4Address;
+#coerceToInteger(Ljava/net/InetAddress;)I
+#fromInteger(I)Ljava/net/Inet4Address;
+#fromLittleEndianByteArray([B)Ljava/net/InetAddress;
+#decrement(Ljava/net/InetAddress;)Ljava/net/InetAddress;
+#increment(Ljava/net/InetAddress;)Ljava/net/InetAddress;
+#isMaximum(Ljava/net/InetAddress;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/net/InetAddresses

+###org/apache/flink/shaded/com/google/common/net/InternetDomainName
@0.9.0-milestone-1
+#from(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/InternetDomainName;
+#parts()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#isPublicSuffix()Z
+#hasPublicSuffix()Z
+#publicSuffix()Lorg/apache/flink/shaded/com/google/common/net/InternetDomainName;
+#isUnderPublicSuffix()Z
+#isTopPrivateDomain()Z
+#topPrivateDomain()Lorg/apache/flink/shaded/com/google/common/net/InternetDomainName;
+#hasParent()Z
+#parent()Lorg/apache/flink/shaded/com/google/common/net/InternetDomainName;
+#child(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/InternetDomainName;
+#isValid(Ljava/lang/String;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/com/google/common/net/InternetDomainName

+###org/apache/flink/shaded/com/google/common/net/MediaType
@0.9.0-milestone-1
+#type()Ljava/lang/String;
+#subtype()Ljava/lang/String;
+#parameters()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#charset()Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#withoutParameters()Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#withParameters(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#withParameter(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#withCharset(Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#hasWildcard()Z
+#is(Lorg/apache/flink/shaded/com/google/common/net/MediaType;)Z
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#parse(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/net/MediaType

+###org/apache/flink/shaded/com/google/common/net/PercentEscaper
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;Z)V
+#escape(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/net/PercentEscaper

+###org/apache/flink/shaded/com/google/common/net/UrlEscapers
@0.9.0-milestone-1
+#urlFormParameterEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
+#urlPathSegmentEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
+#urlFragmentEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
@1.14.0
-###org/apache/flink/shaded/com/google/common/net/UrlEscapers

+###org/apache/flink/shaded/com/google/common/primitives/Booleans
@0.9.0-milestone-1
+#hashCode(Z)I
+#compare(ZZ)I
+#contains([ZZ)Z
+#indexOf([ZZ)I
+#indexOf([Z[Z)I
+#lastIndexOf([ZZ)I
+#concat([[Z)[Z
+#ensureCapacity([ZII)[Z
+#join(Ljava/lang/String;[Z)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[Z
+#asList([Z)Ljava/util/List;
+#countTrue([Z)I
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/Booleans

+###org/apache/flink/shaded/com/google/common/primitives/Bytes
@0.9.0-milestone-1
+#hashCode(B)I
+#contains([BB)Z
+#indexOf([BB)I
+#indexOf([B[B)I
+#lastIndexOf([BB)I
+#concat([[B)[B
+#ensureCapacity([BII)[B
+#toArray(Ljava/util/Collection;)[B
+#asList([B)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/Bytes

+###org/apache/flink/shaded/com/google/common/primitives/Chars
@0.9.0-milestone-1
+#hashCode(C)I
+#checkedCast(J)C
+#saturatedCast(J)C
+#compare(CC)I
+#contains([CC)Z
+#indexOf([CC)I
+#indexOf([C[C)I
+#lastIndexOf([CC)I
+#min([C)C
+#max([C)C
+#concat([[C)[C
+#toByteArray(C)[B
+#fromByteArray([B)C
+#fromBytes(BB)C
+#ensureCapacity([CII)[C
+#join(Ljava/lang/String;[C)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[C
+#asList([C)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/Chars

+###org/apache/flink/shaded/com/google/common/primitives/Doubles
@0.9.0-milestone-1
+#hashCode(D)I
+#compare(DD)I
+#isFinite(D)Z
+#contains([DD)Z
+#indexOf([DD)I
+#indexOf([D[D)I
+#lastIndexOf([DD)I
+#min([D)D
+#max([D)D
+#concat([[D)[D
+#stringConverter()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#ensureCapacity([DII)[D
+#join(Ljava/lang/String;[D)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[D
+#asList([D)Ljava/util/List;
+#tryParse(Ljava/lang/String;)Ljava/lang/Double;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/Doubles

+###org/apache/flink/shaded/com/google/common/primitives/Floats
@0.9.0-milestone-1
+#hashCode(F)I
+#compare(FF)I
+#isFinite(F)Z
+#contains([FF)Z
+#indexOf([FF)I
+#indexOf([F[F)I
+#lastIndexOf([FF)I
+#min([F)F
+#max([F)F
+#concat([[F)[F
+#stringConverter()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#ensureCapacity([FII)[F
+#join(Ljava/lang/String;[F)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[F
+#asList([F)Ljava/util/List;
+#tryParse(Ljava/lang/String;)Ljava/lang/Float;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/Floats

+###org/apache/flink/shaded/com/google/common/primitives/Ints
@0.9.0-milestone-1
+#hashCode(I)I
+#checkedCast(J)I
+#saturatedCast(J)I
+#compare(II)I
+#contains([II)Z
+#indexOf([II)I
+#indexOf([I[I)I
+#lastIndexOf([II)I
+#min([I)I
+#max([I)I
+#concat([[I)[I
+#toByteArray(I)[B
+#fromByteArray([B)I
+#fromBytes(BBBB)I
+#stringConverter()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#ensureCapacity([III)[I
+#join(Ljava/lang/String;[I)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[I
+#asList([I)Ljava/util/List;
+#tryParse(Ljava/lang/String;)Ljava/lang/Integer;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/Ints

+###org/apache/flink/shaded/com/google/common/primitives/Longs
@0.9.0-milestone-1
+#hashCode(J)I
+#compare(JJ)I
+#contains([JJ)Z
+#indexOf([JJ)I
+#indexOf([J[J)I
+#lastIndexOf([JJ)I
+#min([J)J
+#max([J)J
+#concat([[J)[J
+#toByteArray(J)[B
+#fromByteArray([B)J
+#fromBytes(BBBBBBBB)J
+#tryParse(Ljava/lang/String;)Ljava/lang/Long;
+#stringConverter()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#ensureCapacity([JII)[J
+#join(Ljava/lang/String;[J)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[J
+#asList([J)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/Longs

+###org/apache/flink/shaded/com/google/common/primitives/Primitives
@0.9.0-milestone-1
+#allPrimitiveTypes()Ljava/util/Set;
+#allWrapperTypes()Ljava/util/Set;
+#isWrapperType(Ljava/lang/Class;)Z
+#wrap(Ljava/lang/Class;)Ljava/lang/Class;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Class;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/Primitives

+###org/apache/flink/shaded/com/google/common/primitives/Shorts
@0.9.0-milestone-1
+#hashCode(S)I
+#checkedCast(J)S
+#saturatedCast(J)S
+#compare(SS)I
+#contains([SS)Z
+#indexOf([SS)I
+#indexOf([S[S)I
+#lastIndexOf([SS)I
+#min([S)S
+#max([S)S
+#concat([[S)[S
+#toByteArray(S)[B
+#fromByteArray([B)S
+#fromBytes(BB)S
+#stringConverter()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#ensureCapacity([SII)[S
+#join(Ljava/lang/String;[S)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[S
+#asList([S)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/Shorts

+###org/apache/flink/shaded/com/google/common/primitives/SignedBytes
@0.9.0-milestone-1
+#checkedCast(J)B
+#saturatedCast(J)B
+#compare(BB)I
+#min([B)B
+#max([B)B
+#join(Ljava/lang/String;[B)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/SignedBytes

+###org/apache/flink/shaded/com/google/common/primitives/UnsignedBytes
@0.9.0-milestone-1
+#toInt(B)I
+#checkedCast(J)B
+#saturatedCast(J)B
+#compare(BB)I
+#min([B)B
+#max([B)B
+#toString(B)Ljava/lang/String;
+#toString(BI)Ljava/lang/String;
+#parseUnsignedByte(Ljava/lang/String;)B
+#parseUnsignedByte(Ljava/lang/String;I)B
+#join(Ljava/lang/String;[B)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/UnsignedBytes

+###org/apache/flink/shaded/com/google/common/primitives/UnsignedInteger
@0.9.0-milestone-1
+#fromIntBits(I)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#valueOf(J)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#valueOf(Ljava/math/BigInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#valueOf(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#plus(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#minus(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#times(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#dividedBy(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#mod(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#bigIntegerValue()Ljava/math/BigInteger;
+#compareTo(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toString(I)Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/UnsignedInteger

+###org/apache/flink/shaded/com/google/common/primitives/UnsignedInts
@0.9.0-milestone-1
+#compare(II)I
+#toLong(I)J
+#min([I)I
+#max([I)I
+#join(Ljava/lang/String;[I)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#divide(II)I
+#remainder(II)I
+#decode(Ljava/lang/String;)I
+#parseUnsignedInt(Ljava/lang/String;)I
+#parseUnsignedInt(Ljava/lang/String;I)I
+#toString(I)Ljava/lang/String;
+#toString(II)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/UnsignedInts

+###org/apache/flink/shaded/com/google/common/primitives/UnsignedLong
@0.9.0-milestone-1
+#fromLongBits(J)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#valueOf(J)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#valueOf(Ljava/math/BigInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#valueOf(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#plus(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#minus(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#times(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#dividedBy(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#mod(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#bigIntegerValue()Ljava/math/BigInteger;
+#compareTo(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toString(I)Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/UnsignedLong

+###org/apache/flink/shaded/com/google/common/primitives/UnsignedLongs
@0.9.0-milestone-1
+#compare(JJ)I
+#min([J)J
+#max([J)J
+#join(Ljava/lang/String;[J)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#divide(JJ)J
+#remainder(JJ)J
+#parseUnsignedLong(Ljava/lang/String;)J
+#decode(Ljava/lang/String;)J
+#parseUnsignedLong(Ljava/lang/String;I)J
+#toString(J)Ljava/lang/String;
+#toString(JI)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/primitives/UnsignedLongs

+###org/apache/flink/shaded/com/google/common/reflect/AbstractInvocationHandler
@0.9.0-milestone-1
+#<init>()V
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/AbstractInvocationHandler

+###org/apache/flink/shaded/com/google/common/reflect/ClassPath$ClassInfo
@0.9.0-milestone-1
+#getPackageName()Ljava/lang/String;
+#getSimpleName()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#load()Ljava/lang/Class;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/ClassPath$ClassInfo

+###org/apache/flink/shaded/com/google/common/reflect/ClassPath$ResourceInfo
@0.9.0-milestone-1
+#url()Ljava/net/URL;
+#getResourceName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/ClassPath$ResourceInfo

+###org/apache/flink/shaded/com/google/common/reflect/ClassPath
@0.9.0-milestone-1
+#from(Ljava/lang/ClassLoader;)Lorg/apache/flink/shaded/com/google/common/reflect/ClassPath;
+#getResources()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#getAllClasses()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#getTopLevelClasses()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#getTopLevelClasses(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#getTopLevelClassesRecursive(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/ClassPath

+###org/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap$Builder
@0.9.0-milestone-1
+#put(Ljava/lang/Class;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap$Builder;
+#put(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap$Builder

+###org/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap;
+#builder()Lorg/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap$Builder;
+#getInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Ljava/lang/Object;
+#putInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;Ljava/lang/Object;)Ljava/lang/Object;
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap

+###org/apache/flink/shaded/com/google/common/reflect/Invokable
@0.9.0-milestone-1
+#from(Ljava/lang/reflect/Method;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#from(Ljava/lang/reflect/Constructor;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#isOverridable()Z
+#isVarArgs()Z
+#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#getReturnType()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getParameters()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#getExceptionTypes()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#returning(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#returning(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#getDeclaringClass()Ljava/lang/Class;
+#getOwnerType()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/Invokable

+###org/apache/flink/shaded/com/google/common/reflect/MutableTypeToInstanceMap
@0.9.0-milestone-1
+#<init>()V
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Ljava/lang/Object;
+#putInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#entrySet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/MutableTypeToInstanceMap

+###org/apache/flink/shaded/com/google/common/reflect/Parameter
@0.9.0-milestone-1
+#getType()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getDeclaringInvokable()Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#isAnnotationPresent(Ljava/lang/Class;)Z
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getAnnotations()[Ljava/lang/annotation/Annotation;
+#getAnnotationsByType(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;
+#getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;
+#getDeclaredAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getDeclaredAnnotationsByType(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/Parameter

+###org/apache/flink/shaded/com/google/common/reflect/Reflection
@0.9.0-milestone-1
+#getPackageName(Ljava/lang/Class;)Ljava/lang/String;
+#getPackageName(Ljava/lang/String;)Ljava/lang/String;
+#initialize([Ljava/lang/Class;)V
+#newProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/Reflection

+###org/apache/flink/shaded/com/google/common/reflect/TypeParameter
@0.9.0-milestone-1
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/TypeParameter

+###org/apache/flink/shaded/com/google/common/reflect/TypeResolver
@0.9.0-milestone-1
+#<init>()V
+#where(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeResolver;
+#resolveType(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/TypeResolver

+###org/apache/flink/shaded/com/google/common/reflect/TypeToInstanceMap
@0.9.0-milestone-1
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Ljava/lang/Object;
+#putInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/TypeToInstanceMap

+###org/apache/flink/shaded/com/google/common/reflect/TypeToken$TypeSet
@0.9.0-milestone-1
+#interfaces()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken$TypeSet;
+#classes()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken$TypeSet;
+#rawTypes()Ljava/util/Set;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/TypeToken$TypeSet

+###org/apache/flink/shaded/com/google/common/reflect/TypeToken
@0.9.0-milestone-1
+#of(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#of(Ljava/lang/reflect/Type;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getRawType()Ljava/lang/Class;
+#getType()Ljava/lang/reflect/Type;
+#where(Lorg/apache/flink/shaded/com/google/common/reflect/TypeParameter;Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#where(Lorg/apache/flink/shaded/com/google/common/reflect/TypeParameter;Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#resolveType(Ljava/lang/reflect/Type;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getTypes()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken$TypeSet;
+#getSupertype(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getSubtype(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#isAssignableFrom(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Z
+#isAssignableFrom(Ljava/lang/reflect/Type;)Z
+#isArray()Z
+#isPrimitive()Z
+#wrap()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#unwrap()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getComponentType()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#method(Ljava/lang/reflect/Method;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#constructor(Ljava/lang/reflect/Constructor;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/reflect/TypeToken

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractCheckedFuture
@0.9.0-milestone-1
+#checkedGet()Ljava/lang/Object;
+#checkedGet(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractCheckedFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractExecutionThreadService
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
+#isRunning()Z
+#state()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
+#failureCause()Ljava/lang/Throwable;
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractExecutionThreadService

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractFuture
@0.9.0-milestone-1
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#get()Ljava/lang/Object;
+#isDone()Z
+#isCancelled()Z
+#cancel(Z)Z
+#addListener(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractIdleService
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
+#isRunning()Z
+#state()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
+#failureCause()Ljava/lang/Throwable;
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractIdleService

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractListeningExecutorService
@0.9.0-milestone-1
+#<init>()V
+#submit(Ljava/lang/Runnable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/util/concurrent/Callable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractListeningExecutorService

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule
@0.9.0-milestone-1
+#<init>(JLjava/util/concurrent/TimeUnit;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler
@0.9.0-milestone-1
+#<init>()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$Scheduler
@0.9.0-milestone-1
+#newFixedDelaySchedule(JJLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$Scheduler;
+#newFixedRateSchedule(JJLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$Scheduler;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$Scheduler

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
+#isRunning()Z
+#state()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
+#failureCause()Ljava/lang/Throwable;
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractService
@0.9.0-milestone-1
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
+#isRunning()Z
+#state()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#failureCause()Ljava/lang/Throwable;
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractService

+###org/apache/flink/shaded/com/google/common/util/concurrent/AsyncFunction
@0.9.0-milestone-1
+#apply(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AsyncFunction

+###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicDouble
@0.9.0-milestone-1
+#<init>(D)V
+#<init>()V
+#get()D
+#set(D)V
+#lazySet(D)V
+#getAndSet(D)D
+#compareAndSet(DD)Z
+#weakCompareAndSet(DD)Z
+#getAndAdd(D)D
+#addAndGet(D)D
+#toString()Ljava/lang/String;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicDouble

+###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicDoubleArray
@0.9.0-milestone-1
+#<init>(I)V
+#<init>([D)V
+#length()I
+#get(I)D
+#set(ID)V
+#lazySet(ID)V
+#getAndSet(ID)D
+#compareAndSet(IDD)Z
+#weakCompareAndSet(IDD)Z
+#getAndAdd(ID)D
+#addAndGet(ID)D
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicDoubleArray

+###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicLongMap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/util/concurrent/AtomicLongMap;
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/AtomicLongMap;
+#get(Ljava/lang/Object;)J
+#incrementAndGet(Ljava/lang/Object;)J
+#decrementAndGet(Ljava/lang/Object;)J
+#addAndGet(Ljava/lang/Object;J)J
+#getAndIncrement(Ljava/lang/Object;)J
+#getAndDecrement(Ljava/lang/Object;)J
+#getAndAdd(Ljava/lang/Object;J)J
+#put(Ljava/lang/Object;J)J
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)J
+#removeAllZeros()V
+#sum()J
+#asMap()Ljava/util/Map;
+#containsKey(Ljava/lang/Object;)Z
+#size()I
+#isEmpty()Z
+#clear()V
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicLongMap

+###org/apache/flink/shaded/com/google/common/util/concurrent/Atomics
@0.9.0-milestone-1
+#newReference()Ljava/util/concurrent/atomic/AtomicReference;
+#newReference(Ljava/lang/Object;)Ljava/util/concurrent/atomic/AtomicReference;
+#newReferenceArray(I)Ljava/util/concurrent/atomic/AtomicReferenceArray;
+#newReferenceArray([Ljava/lang/Object;)Ljava/util/concurrent/atomic/AtomicReferenceArray;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Atomics

+###org/apache/flink/shaded/com/google/common/util/concurrent/Callables
@0.9.0-milestone-1
+#returning(Ljava/lang/Object;)Ljava/util/concurrent/Callable;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Callables

+###org/apache/flink/shaded/com/google/common/util/concurrent/CheckedFuture
@0.9.0-milestone-1
+#checkedGet()Ljava/lang/Object;
+#checkedGet(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CheckedFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policies
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policies;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policies;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policies

+###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policy
@0.9.0-milestone-1
+#handlePotentialDeadlock(Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policy

+###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException
@0.9.0-milestone-1
+#getConflictingStackTrace()Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace;
+#getMessage()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException

+###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$WithExplicitOrdering
@0.9.0-milestone-1
+#newReentrantLock(Ljava/lang/Enum;)Ljava/util/concurrent/locks/ReentrantLock;
+#newReentrantLock(Ljava/lang/Enum;Z)Ljava/util/concurrent/locks/ReentrantLock;
+#newReentrantReadWriteLock(Ljava/lang/Enum;)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#newReentrantReadWriteLock(Ljava/lang/Enum;Z)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$WithExplicitOrdering

+###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory
@0.9.0-milestone-1
+#newInstance(Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policy;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory;
+#newReentrantLock(Ljava/lang/String;)Ljava/util/concurrent/locks/ReentrantLock;
+#newReentrantLock(Ljava/lang/String;Z)Ljava/util/concurrent/locks/ReentrantLock;
+#newReentrantReadWriteLock(Ljava/lang/String;)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#newReentrantReadWriteLock(Ljava/lang/String;Z)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#newInstanceWithExplicitOrdering(Ljava/lang/Class;Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policy;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$WithExplicitOrdering;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory

+###org/apache/flink/shaded/com/google/common/util/concurrent/ExecutionError
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;Ljava/lang/Error;)V
+#<init>(Ljava/lang/Error;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ExecutionError

+###org/apache/flink/shaded/com/google/common/util/concurrent/ExecutionList
@0.9.0-milestone-1
+#<init>()V
+#add(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
+#execute()V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ExecutionList

+###org/apache/flink/shaded/com/google/common/util/concurrent/FakeTimeLimiter
@0.9.0-milestone-1
+#<init>()V
+#newProxy(Ljava/lang/Object;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#callWithTimeout(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;Z)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/FakeTimeLimiter

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingBlockingQueue
@0.9.0-milestone-1
+#drainTo(Ljava/util/Collection;I)I
+#drainTo(Ljava/util/Collection;)I
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#put(Ljava/lang/Object;)V
+#remainingCapacity()I
+#take()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingBlockingQueue

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingCheckedFuture$SimpleForwardingCheckedFuture
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingCheckedFuture$SimpleForwardingCheckedFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingCheckedFuture
@0.9.0-milestone-1
+#<init>()V
+#checkedGet()Ljava/lang/Object;
+#checkedGet(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingCheckedFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingExecutorService
@0.9.0-milestone-1
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
+#invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
+#invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#isShutdown()Z
+#isTerminated()Z
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#execute(Ljava/lang/Runnable;)V
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingExecutorService

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingFuture$SimpleForwardingFuture
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingFuture$SimpleForwardingFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingFuture
@0.9.0-milestone-1
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListenableFuture$SimpleForwardingListenableFuture
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListenableFuture$SimpleForwardingListenableFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListenableFuture
@0.9.0-milestone-1
+#addListener(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListenableFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListeningExecutorService
@0.9.0-milestone-1
+#submit(Ljava/util/concurrent/Callable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListeningExecutorService

+###org/apache/flink/shaded/com/google/common/util/concurrent/FutureCallback
@0.9.0-milestone-1
+#onSuccess(Ljava/lang/Object;)V
+#onFailure(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/FutureCallback

+###org/apache/flink/shaded/com/google/common/util/concurrent/FutureFallback
@0.9.0-milestone-1
+#create(Ljava/lang/Throwable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/FutureFallback

+###org/apache/flink/shaded/com/google/common/util/concurrent/Futures
@0.9.0-milestone-1
+#makeChecked(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CheckedFuture;
+#immediateFuture(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#immediateCheckedFuture(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CheckedFuture;
+#immediateFailedFuture(Ljava/lang/Throwable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#immediateCancelledFuture()Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#immediateFailedCheckedFuture(Ljava/lang/Exception;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CheckedFuture;
+#withFallback(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/FutureFallback;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#withFallback(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/FutureFallback;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#transform(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/AsyncFunction;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#transform(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#transform(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#transform(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/base/Function;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#lazyTransform(Ljava/util/concurrent/Future;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/concurrent/Future;
+#dereference(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#allAsList([Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#allAsList(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#nonCancellationPropagating(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#successfulAsList([Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#successfulAsList(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#inCompletionOrder(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#addCallback(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/FutureCallback;)V
+#addCallback(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/FutureCallback;Ljava/util/concurrent/Executor;)V
+#get(Ljava/util/concurrent/Future;Ljava/lang/Class;)Ljava/lang/Object;
+#get(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Ljava/lang/Class;)Ljava/lang/Object;
+#getUnchecked(Ljava/util/concurrent/Future;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Futures

+###org/apache/flink/shaded/com/google/common/util/concurrent/JdkFutureAdapters
@0.9.0-milestone-1
+#listenInPoolThread(Ljava/util/concurrent/Future;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#listenInPoolThread(Ljava/util/concurrent/Future;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/JdkFutureAdapters

+###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture
@0.9.0-milestone-1
+#addListener(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableFutureTask
@0.9.0-milestone-1
+#create(Ljava/util/concurrent/Callable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFutureTask;
+#create(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFutureTask;
+#addListener(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableFutureTask

+###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ListeningExecutorService
@0.9.0-milestone-1
+#submit(Ljava/util/concurrent/Callable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ListeningExecutorService

+###org/apache/flink/shaded/com/google/common/util/concurrent/ListeningScheduledExecutorService
@0.9.0-milestone-1
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture;
+#schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture;
+#scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture;
+#scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ListeningScheduledExecutorService

+###org/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard
@0.9.0-milestone-1
+#isSatisfied()Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard

+###org/apache/flink/shaded/com/google/common/util/concurrent/Monitor
@0.9.0-milestone-1
+#<init>()V
+#<init>(Z)V
+#enter()V
+#enterInterruptibly()V
+#enter(JLjava/util/concurrent/TimeUnit;)Z
+#enterInterruptibly(JLjava/util/concurrent/TimeUnit;)Z
+#tryEnter()Z
+#enterWhen(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
+#enterWhenUninterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
+#enterWhen(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#enterWhenUninterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#enterIf(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)Z
+#enterIfInterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)Z
+#enterIf(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#enterIfInterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#tryEnterIf(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)Z
+#waitFor(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
+#waitForUninterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
+#waitFor(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#waitForUninterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#leave()V
+#isFair()Z
+#isOccupied()Z
+#isOccupiedByCurrentThread()Z
+#getOccupiedDepth()I
+#getQueueLength()I
+#hasQueuedThreads()Z
+#hasQueuedThread(Ljava/lang/Thread;)Z
+#hasWaiters(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)Z
+#getWaitQueueLength(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)I
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Monitor

+###org/apache/flink/shaded/com/google/common/util/concurrent/MoreExecutors
@0.9.0-milestone-1
+#getExitingExecutorService(Ljava/util/concurrent/ThreadPoolExecutor;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ExecutorService;
+#getExitingScheduledExecutorService(Ljava/util/concurrent/ScheduledThreadPoolExecutor;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledExecutorService;
+#addDelayedShutdownHook(Ljava/util/concurrent/ExecutorService;JLjava/util/concurrent/TimeUnit;)V
+#getExitingExecutorService(Ljava/util/concurrent/ThreadPoolExecutor;)Ljava/util/concurrent/ExecutorService;
+#getExitingScheduledExecutorService(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)Ljava/util/concurrent/ScheduledExecutorService;
+#sameThreadExecutor()Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListeningExecutorService;[deprecated]
+#newDirectExecutorService()Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListeningExecutorService;
+#directExecutor()Ljava/util/concurrent/Executor;
+#listeningDecorator(Ljava/util/concurrent/ExecutorService;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListeningExecutorService;
+#listeningDecorator(Ljava/util/concurrent/ScheduledExecutorService;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListeningScheduledExecutorService;
+#platformThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#shutdownAndAwaitTermination(Ljava/util/concurrent/ExecutorService;JLjava/util/concurrent/TimeUnit;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/MoreExecutors

+###org/apache/flink/shaded/com/google/common/util/concurrent/RateLimiter
@0.9.0-milestone-1
+#create(D)Lorg/apache/flink/shaded/com/google/common/util/concurrent/RateLimiter;
+#create(DJLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/RateLimiter;
+#setRate(D)V
+#getRate()D
+#acquire()D
+#acquire(I)D
+#tryAcquire(JLjava/util/concurrent/TimeUnit;)Z
+#tryAcquire(I)Z
+#tryAcquire()Z
+#tryAcquire(IJLjava/util/concurrent/TimeUnit;)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/RateLimiter

+###org/apache/flink/shaded/com/google/common/util/concurrent/Runnables
@0.9.0-milestone-1
+#doNothing()Ljava/lang/Runnable;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Runnables

+###org/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener
@0.9.0-milestone-1
+#<init>()V
+#starting()V
+#running()V
+#stopping(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;)V
+#terminated(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;)V
+#failed(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener

+###org/apache/flink/shaded/com/google/common/util/concurrent/Service$State
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Service$State

+###org/apache/flink/shaded/com/google/common/util/concurrent/Service
@0.9.0-milestone-1
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#isRunning()Z
+#state()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
+#failureCause()Ljava/lang/Throwable;
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Service

+###org/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager$Listener
@0.9.0-milestone-1
+#<init>()V
+#healthy()V
+#stopped()V
+#failure(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager$Listener

+###org/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager
@0.9.0-milestone-1
+#<init>(Ljava/lang/Iterable;)V
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager$Listener;Ljava/util/concurrent/Executor;)V
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager$Listener;)V
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager;
+#awaitHealthy()V
+#awaitHealthy(JLjava/util/concurrent/TimeUnit;)V
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager;
+#awaitStopped()V
+#awaitStopped(JLjava/util/concurrent/TimeUnit;)V
+#isHealthy()Z
+#servicesByState()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#startupTimes()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager

+###org/apache/flink/shaded/com/google/common/util/concurrent/SettableFuture
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/util/concurrent/SettableFuture;
+#set(Ljava/lang/Object;)Z
+#setException(Ljava/lang/Throwable;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/SettableFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/SimpleTimeLimiter
@0.9.0-milestone-1
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#<init>()V
+#newProxy(Ljava/lang/Object;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#callWithTimeout(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;Z)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/SimpleTimeLimiter

+###org/apache/flink/shaded/com/google/common/util/concurrent/Striped
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getAt(I)Ljava/lang/Object;
+#size()I
+#bulkGet(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#lock(I)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
+#lazyWeakLock(I)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
+#semaphore(II)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
+#lazyWeakSemaphore(II)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
+#readWriteLock(I)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
+#lazyWeakReadWriteLock(I)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Striped

+###org/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder
@0.9.0-milestone-1
+#<init>()V
+#setNameFormat(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder;
+#setDaemon(Z)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder;
+#setPriority(I)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder;
+#setUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder;
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder;
+#build()Ljava/util/concurrent/ThreadFactory;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder

+###org/apache/flink/shaded/com/google/common/util/concurrent/TimeLimiter
@0.9.0-milestone-1
+#newProxy(Ljava/lang/Object;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#callWithTimeout(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;Z)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/TimeLimiter

+###org/apache/flink/shaded/com/google/common/util/concurrent/UncaughtExceptionHandlers
@0.9.0-milestone-1
+#systemExit()Ljava/lang/Thread$UncaughtExceptionHandler;
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/UncaughtExceptionHandlers

+###org/apache/flink/shaded/com/google/common/util/concurrent/UncheckedExecutionException
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/UncheckedExecutionException

+###org/apache/flink/shaded/com/google/common/util/concurrent/UncheckedTimeoutException
@0.9.0-milestone-1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/UncheckedTimeoutException

+###org/apache/flink/shaded/com/google/common/util/concurrent/Uninterruptibles
@0.9.0-milestone-1
+#awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;)V
+#awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;JLjava/util/concurrent/TimeUnit;)Z
+#joinUninterruptibly(Ljava/lang/Thread;)V
+#getUninterruptibly(Ljava/util/concurrent/Future;)Ljava/lang/Object;
+#getUninterruptibly(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#joinUninterruptibly(Ljava/lang/Thread;JLjava/util/concurrent/TimeUnit;)V
+#takeUninterruptibly(Ljava/util/concurrent/BlockingQueue;)Ljava/lang/Object;
+#putUninterruptibly(Ljava/util/concurrent/BlockingQueue;Ljava/lang/Object;)V
+#sleepUninterruptibly(JLjava/util/concurrent/TimeUnit;)V
+#tryAcquireUninterruptibly(Ljava/util/concurrent/Semaphore;JLjava/util/concurrent/TimeUnit;)Z
+#tryAcquireUninterruptibly(Ljava/util/concurrent/Semaphore;IJLjava/util/concurrent/TimeUnit;)Z
@1.14.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Uninterruptibles

+###org/apache/flink/shaded/com/google/common/xml/XmlEscapers
@0.9.0-milestone-1
+#xmlContentEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
+#xmlAttributeEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
@1.14.0
-###org/apache/flink/shaded/com/google/common/xml/XmlEscapers

+###org/apache/flink/shaded/com/google/thirdparty/publicsuffix/PublicSuffixPatterns
@0.9.0-milestone-1
@1.14.0
-###org/apache/flink/shaded/com/google/thirdparty/publicsuffix/PublicSuffixPatterns

+###org/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor
@0.9.0
+#<init>(I)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor

+###org/apache/flink/shaded/org/objectweb/asm/Attribute
@0.9.0
+#isUnknown()Z
+#isCodeAttribute()Z
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/Attribute

+###org/apache/flink/shaded/org/objectweb/asm/ByteVector
@0.9.0
+#<init>()V
+#<init>(I)V
+#putByte(I)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
+#putShort(I)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
+#putInt(I)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
+#putLong(J)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
+#putUTF8(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
+#putByteArray([BII)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/ByteVector

+###org/apache/flink/shaded/org/objectweb/asm/ClassReader
@0.9.0
+#<init>([B)V
+#<init>([BII)V
+#getAccess()I
+#getClassName()Ljava/lang/String;
+#getSuperName()Ljava/lang/String;
+#getInterfaces()[Ljava/lang/String;
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/lang/String;)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;[Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;I)V
+#getItemCount()I
+#getItem(I)I
+#getMaxStringLength()I
+#readByte(I)I
+#readUnsignedShort(I)I
+#readShort(I)S
+#readInt(I)I
+#readLong(I)J
+#readUTF8(I[C)Ljava/lang/String;
+#readClass(I[C)Ljava/lang/String;
+#readConst(I[C)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/ClassReader

+###org/apache/flink/shaded/org/objectweb/asm/ClassVisitor
@0.9.0
+#<init>(I)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/ClassVisitor

+###org/apache/flink/shaded/org/objectweb/asm/ClassWriter
@0.9.0
+#<init>(I)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassReader;I)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
+#toByteArray()[B
+#newConst(Ljava/lang/Object;)I
+#newUTF8(Ljava/lang/String;)I
+#newClass(Ljava/lang/String;)I
+#newMethodType(Ljava/lang/String;)I
+#newHandle(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#newInvokeDynamic(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)I
+#newField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#newMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I
+#newNameType(Ljava/lang/String;Ljava/lang/String;)I
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/ClassWriter

+###org/apache/flink/shaded/org/objectweb/asm/FieldVisitor
@0.9.0
+#<init>(I)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/FieldVisitor

+###org/apache/flink/shaded/org/objectweb/asm/Handle
@0.9.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getTag()I
+#getOwner()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getDesc()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/Handle

+###org/apache/flink/shaded/org/objectweb/asm/Label
@0.9.0
+#<init>()V
+#getOffset()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/Label

+###org/apache/flink/shaded/org/objectweb/asm/MethodVisitor
@0.9.0
+#<init>(I)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/MethodVisitor

+###org/apache/flink/shaded/org/objectweb/asm/Opcodes
@0.9.0
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/Opcodes

+###org/apache/flink/shaded/org/objectweb/asm/Type
@0.9.0
+#getType(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getObjectType(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getMethodType(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getMethodType(Lorg/apache/flink/shaded/org/objectweb/asm/Type;[Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getType(Ljava/lang/Class;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getType(Ljava/lang/reflect/Constructor;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getType(Ljava/lang/reflect/Method;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getArgumentTypes(Ljava/lang/String;)[Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getArgumentTypes(Ljava/lang/reflect/Method;)[Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getReturnType(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getReturnType(Ljava/lang/reflect/Method;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getArgumentsAndReturnSizes(Ljava/lang/String;)I
+#getSort()I
+#getDimensions()I
+#getElementType()Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getClassName()Ljava/lang/String;
+#getInternalName()Ljava/lang/String;
+#getArgumentTypes()[Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getArgumentsAndReturnSizes()I
+#getDescriptor()Ljava/lang/String;
+#getMethodDescriptor(Lorg/apache/flink/shaded/org/objectweb/asm/Type;[Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Ljava/lang/String;
+#getInternalName(Ljava/lang/Class;)Ljava/lang/String;
+#getDescriptor(Ljava/lang/Class;)Ljava/lang/String;
+#getConstructorDescriptor(Ljava/lang/reflect/Constructor;)Ljava/lang/String;
+#getMethodDescriptor(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getSize()I
+#getOpcode(I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/Type

+###org/apache/flink/shaded/org/objectweb/asm/TypePath
@0.9.0
+#getLength()I
+#getStep(I)I
+#getStepArgument(I)I
+#fromString(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/TypePath;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/TypePath

+###org/apache/flink/shaded/org/objectweb/asm/TypeReference
@0.9.0
+#<init>(I)V
+#newTypeReference(I)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newTypeParameterReference(II)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newTypeParameterBoundReference(III)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newSuperTypeReference(I)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newFormalParameterReference(I)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newExceptionReference(I)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newTryCatchReference(I)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newTypeArgumentReference(II)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#getSort()I
+#getTypeParameterIndex()I
+#getTypeParameterBoundIndex()I
+#getSuperTypeIndex()I
+#getFormalParameterIndex()I
+#getExceptionIndex()I
+#getTryCatchBlockIndex()I
+#getTypeArgumentIndex()I
+#getValue()I
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/TypeReference

+###org/apache/flink/shaded/org/objectweb/asm/commons/AdviceAdapter
@0.9.0
+#visitCode()V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitInsn(I)V
+#visitVarInsn(II)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitIntInsn(II)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/AdviceAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/AnalyzerAdapter
@0.9.0
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitMaxs(II)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/AnalyzerAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/CodeSizeEvaluator
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#getMinSize()I
+#getMaxSize()I
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/CodeSizeEvaluator

+###org/apache/flink/shaded/org/objectweb/asm/commons/GeneratorAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/commons/Method;Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/commons/Method;Ljava/lang/String;[Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#push(Z)V
+#push(I)V
+#push(J)V
+#push(F)V
+#push(D)V
+#push(Ljava/lang/String;)V
+#push(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#push(Lorg/apache/flink/shaded/org/objectweb/asm/Handle;)V
+#loadThis()V
+#loadArg(I)V
+#loadArgs(II)V
+#loadArgs()V
+#loadArgArray()V
+#storeArg(I)V
+#getLocalType(I)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#loadLocal(I)V
+#loadLocal(ILorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#storeLocal(I)V
+#storeLocal(ILorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#arrayLoad(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#arrayStore(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#pop()V
+#pop2()V
+#dup()V
+#dup2()V
+#dupX1()V
+#dupX2()V
+#dup2X1()V
+#dup2X2()V
+#swap()V
+#swap(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#math(ILorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#not()V
+#iinc(II)V
+#cast(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#box(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#valueOf(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#unbox(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#newLabel()Lorg/apache/flink/shaded/org/objectweb/asm/Label;
+#mark(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#mark()Lorg/apache/flink/shaded/org/objectweb/asm/Label;
+#ifCmp(Lorg/apache/flink/shaded/org/objectweb/asm/Type;ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifICmp(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifZCmp(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifNull(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifNonNull(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#goTo(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ret(I)V
+#tableSwitch([ILorg/apache/flink/shaded/org/objectweb/asm/commons/TableSwitchGenerator;)V
+#tableSwitch([ILorg/apache/flink/shaded/org/objectweb/asm/commons/TableSwitchGenerator;Z)V
+#returnValue()V
+#getStatic(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#putStatic(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#getField(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#putField(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#invokeVirtual(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;)V
+#invokeConstructor(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;)V
+#invokeStatic(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;)V
+#invokeInterface(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;)V
+#invokeDynamic(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#newInstance(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#newArray(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#arrayLength()V
+#throwException()V
+#throwException(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/lang/String;)V
+#checkCast(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#instanceOf(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#monitorEnter()V
+#monitorExit()V
+#endMethod()V
+#catchException(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/GeneratorAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/InstructionAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#nop()V
+#aconst(Ljava/lang/Object;)V
+#iconst(I)V
+#lconst(J)V
+#fconst(F)V
+#dconst(D)V
+#tconst(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#hconst(Lorg/apache/flink/shaded/org/objectweb/asm/Handle;)V
+#load(ILorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#aload(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#store(ILorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#astore(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#pop()V
+#pop2()V
+#dup()V
+#dup2()V
+#dupX1()V
+#dupX2()V
+#dup2X1()V
+#dup2X2()V
+#swap()V
+#add(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#sub(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#mul(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#div(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#rem(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#neg(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#shl(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#shr(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#ushr(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#and(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#or(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#xor(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#iinc(II)V
+#cast(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#lcmp()V
+#cmpl(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#cmpg(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#ifeq(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifne(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#iflt(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifge(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifgt(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifle(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmpeq(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmpne(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmplt(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmpge(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmpgt(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmple(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifacmpeq(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifacmpne(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#goTo(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#jsr(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ret(I)V
+#tableswitch(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#lookupswitch(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#areturn(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#getstatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#putstatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getfield(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#putfield(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokevirtual(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokevirtual(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#invokespecial(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokespecial(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#invokestatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokestatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#invokeinterface(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokedynamic(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#anew(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#newarray(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#arraylength()V
+#athrow()V
+#checkcast(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#instanceOf(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#monitorenter()V
+#monitorexit()V
+#multianewarray(Ljava/lang/String;I)V
+#ifnull(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifnonnull(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#mark(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/InstructionAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/JSRInlinerAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/JSRInlinerAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/LocalVariablesSorter
@0.9.0
+#<init>(ILjava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#visitVarInsn(II)V
+#visitIincInsn(II)V
+#visitMaxs(II)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#newLocal(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)I
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/LocalVariablesSorter

+###org/apache/flink/shaded/org/objectweb/asm/commons/Method
@0.9.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Type;[Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#getMethod(Ljava/lang/reflect/Method;)Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;
+#getMethod(Ljava/lang/reflect/Constructor;)Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;
+#getMethod(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;
+#getMethod(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;
+#getName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getArgumentTypes()[Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/Method

+###org/apache/flink/shaded/org/objectweb/asm/commons/Remapper
@0.9.0
+#<init>()V
+#mapDesc(Ljava/lang/String;)Ljava/lang/String;
+#mapType(Ljava/lang/String;)Ljava/lang/String;
+#mapTypes([Ljava/lang/String;)[Ljava/lang/String;
+#mapMethodDesc(Ljava/lang/String;)Ljava/lang/String;
+#mapValue(Ljava/lang/Object;)Ljava/lang/Object;
+#mapSignature(Ljava/lang/String;Z)Ljava/lang/String;
+#mapMethodName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapInvokeDynamicMethodName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapFieldName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#map(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/Remapper

+###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingAnnotationAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Remapper;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingAnnotationAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingClassAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Remapper;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingClassAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingFieldAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Remapper;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingFieldAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingMethodAdapter
@0.9.0
+#<init>(ILjava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Remapper;)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingMethodAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingSignatureAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Remapper;)V
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitClassBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingSignatureAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/SerialVersionUIDAdder
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitEnd()V
+#hasSVUID()Z
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/SerialVersionUIDAdder

+###org/apache/flink/shaded/org/objectweb/asm/commons/SimpleRemapper
@0.9.0
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#mapMethodName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapInvokeDynamicMethodName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapFieldName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#map(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/SimpleRemapper

+###org/apache/flink/shaded/org/objectweb/asm/commons/StaticInitMerger
@0.9.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/StaticInitMerger

+###org/apache/flink/shaded/org/objectweb/asm/commons/TableSwitchGenerator
@0.9.0
+#generateCase(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#generateDefault()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/TableSwitchGenerator

+###org/apache/flink/shaded/org/objectweb/asm/commons/TryCatchBlockSorter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/TryCatchBlockSorter

+###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureReader
@0.9.0
+#<init>(Ljava/lang/String;)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;)V
+#acceptType(Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureReader

+###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor
@0.9.0
+#<init>(I)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor

+###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureWriter
@0.9.0
+#<init>()V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureWriter

+###org/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode
@0.9.0
+#getOpcode()I
+#getType()I
+#getPrevious()Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#getNext()Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/AnnotationNode
@0.9.0
+#<init>(Ljava/lang/String;)V
+#<init>(ILjava/lang/String;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
+#check(I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/AnnotationNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/ClassNode
@0.9.0
+#<init>()V
+#<init>(I)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
+#check(I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/ClassNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/FieldInsnNode
@0.9.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/FieldInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/FieldNode
@0.9.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitEnd()V
+#check(I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/FieldNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/FrameNode
@0.9.0
+#<init>(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/FrameNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/IincInsnNode
@0.9.0
+#<init>(II)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/IincInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/InnerClassNode
@0.9.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/InnerClassNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/InsnList
@0.9.0
+#<init>()V
+#size()I
+#getFirst()Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#getLast()Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#get(I)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#contains(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Z
+#indexOf(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#iterator()Ljava/util/ListIterator;
+#iterator(I)Ljava/util/ListIterator;
+#toArray()[Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#set(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#add(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#add(Lorg/apache/flink/shaded/org/objectweb/asm/tree/InsnList;)V
+#insert(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#insert(Lorg/apache/flink/shaded/org/objectweb/asm/tree/InsnList;)V
+#insert(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#insert(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/InsnList;)V
+#insertBefore(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#insertBefore(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/InsnList;)V
+#remove(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#clear()V
+#resetLabels()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/InsnList

+###org/apache/flink/shaded/org/objectweb/asm/tree/InsnNode
@0.9.0
+#<init>(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/InsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/IntInsnNode
@0.9.0
+#<init>(II)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/IntInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/InvokeDynamicInsnNode
@0.9.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/InvokeDynamicInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/JumpInsnNode
@0.9.0
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/JumpInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LabelNode
@0.9.0
+#<init>()V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#getType()I
+#getLabel()Lorg/apache/flink/shaded/org/objectweb/asm/Label;
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#resetLabel()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LabelNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LdcInsnNode
@0.9.0
+#<init>(Ljava/lang/Object;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LdcInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LineNumberNode
@0.9.0
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LineNumberNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LocalVariableAnnotationNode
@0.9.0
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[ILjava/lang/String;)V
+#<init>(IILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[ILjava/lang/String;)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;Z)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LocalVariableAnnotationNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LocalVariableNode
@0.9.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LocalVariableNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LookupSwitchInsnNode
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[I[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LookupSwitchInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/MethodInsnNode
@0.9.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/MethodInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/MethodNode
@0.9.0
+#<init>()V
+#<init>(I)V
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
+#check(I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/MethodNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/MultiANewArrayInsnNode
@0.9.0
+#<init>(Ljava/lang/String;I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/MultiANewArrayInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/ParameterNode
@0.9.0
+#<init>(Ljava/lang/String;I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/ParameterNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/TableSwitchInsnNode
@0.9.0
+#<init>(IILorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/TableSwitchInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/TryCatchBlockNode
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;Ljava/lang/String;)V
+#updateIndex(I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/TryCatchBlockNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/TypeAnnotationNode
@0.9.0
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;)V
+#<init>(IILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/TypeAnnotationNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/TypeInsnNode
@0.9.0
+#<init>(ILjava/lang/String;)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/TypeInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/VarInsnNode
@0.9.0
+#<init>(II)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/VarInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Analyzer
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Interpreter;)V
+#analyze(Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/tree/MethodNode;)[Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;
+#getFrames()[Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;
+#getHandlers(I)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Analyzer

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/AnalyzerException
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/lang/String;Ljava/lang/Object;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/AnalyzerException

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicInterpreter
@0.9.0
+#<init>()V
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#newOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)V
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicInterpreter

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#getType()Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getSize()I
+#isReference()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicVerifier
@0.9.0
+#<init>()V
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)V
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicVerifier

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame
@0.9.0
+#<init>(II)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;)V
+#init(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;
+#setReturn(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#getLocals()I
+#getMaxStackSize()I
+#getLocal(I)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#setLocal(ILorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#getStackSize()I
+#getStack(I)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#clearStack()V
+#pop()Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#push(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#execute(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Interpreter;)V
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Interpreter;)Z
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;[Z)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Interpreter
@0.9.0
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Interpreter

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SimpleVerifier
@0.9.0
+#<init>()V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/Type;Z)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/util/List;Z)V
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SimpleVerifier

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceInterpreter
@0.9.0
+#<init>()V
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#newOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)V
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceInterpreter

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue
@0.9.0
+#<init>(I)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#<init>(ILjava/util/Set;)V
+#getSize()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value
@0.9.0
+#getSize()I
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value

+###org/apache/flink/shaded/org/objectweb/asm/util/ASMifiable
@0.9.0
+#asmify(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/util/Map;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/ASMifiable

+###org/apache/flink/shaded/org/objectweb/asm/util/ASMifier
@0.9.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitClassAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitClassTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitClassAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitClassEnd()V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitAnnotationEnd()V
+#visitFieldAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitFieldTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitFieldAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitFieldEnd()V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitMethodAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitMethodTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitMethodAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitMethodEnd()V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitTypeAnnotation(Ljava/lang/String;ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/ASMifier

+###org/apache/flink/shaded/org/objectweb/asm/util/CheckAnnotationAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/CheckAnnotationAdapter

+###org/apache/flink/shaded/org/objectweb/asm/util/CheckClassAdapter
@0.9.0
+#main([Ljava/lang/String;)V
+#verify(Lorg/apache/flink/shaded/org/objectweb/asm/ClassReader;Ljava/lang/ClassLoader;ZLjava/io/PrintWriter;)V
+#verify(Lorg/apache/flink/shaded/org/objectweb/asm/ClassReader;ZLjava/io/PrintWriter;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;Z)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitEnd()V
+#checkClassSignature(Ljava/lang/String;)V
+#checkMethodSignature(Ljava/lang/String;)V
+#checkFieldSignature(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/CheckClassAdapter

+###org/apache/flink/shaded/org/objectweb/asm/util/CheckFieldAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/CheckFieldAdapter

+###org/apache/flink/shaded/org/objectweb/asm/util/CheckMethodAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;Ljava/util/Map;)V
+#<init>(ILjava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;Ljava/util/Map;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/CheckMethodAdapter

+###org/apache/flink/shaded/org/objectweb/asm/util/CheckSignatureAdapter
@0.9.0
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/CheckSignatureAdapter

+###org/apache/flink/shaded/org/objectweb/asm/util/Printer
@0.9.0
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitClassAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassEnd()V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitAnnotationEnd()V
+#visitFieldAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitFieldEnd()V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitMethodEnd()V
+#getText()Ljava/util/List;
+#print(Ljava/io/PrintWriter;)V
+#appendString(Ljava/lang/StringBuffer;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/Printer

+###org/apache/flink/shaded/org/objectweb/asm/util/Textifiable
@0.9.0
+#textify(Ljava/lang/StringBuffer;Ljava/util/Map;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/Textifiable

+###org/apache/flink/shaded/org/objectweb/asm/util/Textifier
@0.9.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitClassAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitClassTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitClassEnd()V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitAnnotationEnd()V
+#visitFieldAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitFieldTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitFieldEnd()V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitMethodAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitMethodTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitMethodAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitMethodEnd()V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/Textifier

+###org/apache/flink/shaded/org/objectweb/asm/util/TraceAnnotationVisitor
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/TraceAnnotationVisitor

+###org/apache/flink/shaded/org/objectweb/asm/util/TraceClassVisitor
@0.9.0
+#<init>(Ljava/io/PrintWriter;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;Ljava/io/PrintWriter;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;Ljava/io/PrintWriter;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/TraceClassVisitor

+###org/apache/flink/shaded/org/objectweb/asm/util/TraceFieldVisitor
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/TraceFieldVisitor

+###org/apache/flink/shaded/org/objectweb/asm/util/TraceMethodVisitor
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/TraceMethodVisitor

+###org/apache/flink/shaded/org/objectweb/asm/util/TraceSignatureVisitor
@0.9.0
+#<init>(I)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
+#getDeclaration()Ljava/lang/String;
+#getReturnType()Ljava/lang/String;
+#getExceptions()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/util/TraceSignatureVisitor

+###org/apache/flink/shaded/org/objectweb/asm/xml/ASMContentHandler$Rule
@0.9.0
+#begin(Ljava/lang/String;Lorg/xml/sax/Attributes;)V
+#end(Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/ASMContentHandler$Rule

+###org/apache/flink/shaded/org/objectweb/asm/xml/ASMContentHandler
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
+#endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/ASMContentHandler

+###org/apache/flink/shaded/org/objectweb/asm/xml/Processor
@0.9.0
+#<init>(IILjava/io/InputStream;Ljava/io/OutputStream;Ljavax/xml/transform/Source;)V
+#process()I
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/Processor

+###org/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter
@0.9.0
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter

+###org/apache/flink/shaded/org/objectweb/asm/xml/SAXAnnotationAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;Ljava/lang/String;IILjava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Ljava/lang/String;[Ljava/lang/String;[I)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/SAXAnnotationAdapter

+###org/apache/flink/shaded/org/objectweb/asm/xml/SAXClassAdapter
@0.9.0
+#<init>(Lorg/xml/sax/ContentHandler;Z)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/SAXClassAdapter

+###org/apache/flink/shaded/org/objectweb/asm/xml/SAXCodeAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;I)V
+#visitParameter(Ljava/lang/String;I)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitMaxs(II)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/SAXCodeAdapter

+###org/apache/flink/shaded/org/objectweb/asm/xml/SAXFieldAdapter
@0.9.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;Lorg/xml/sax/Attributes;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.14.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/SAXFieldAdapter

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/AfterConnectionEstablished
@0.10.0
+#execute(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/AfterConnectionEstablished

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicStats
@0.10.0
+#<init>()V
+#getOptimisticTries()I
+#getPromotedLockTries()I
+#getOptimisticTimeMs()J
+#getPromotedTimeMs()J
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicStats

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue
@0.10.0
+#succeeded()Z
+#preValue()Ljava/lang/Object;
+#postValue()Ljava/lang/Object;
+#getStats()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicStats;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/CachedAtomicInteger
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/DistributedAtomicInteger;I)V
+#next()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/CachedAtomicInteger

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/CachedAtomicLong
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/DistributedAtomicLong;I)V
+#next()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/CachedAtomicLong

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/DistributedAtomicInteger
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock;)V
+#get()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet(Ljava/lang/Integer;)V
+#compareAndSet(Ljava/lang/Integer;Ljava/lang/Integer;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#trySet(Ljava/lang/Integer;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#initialize(Ljava/lang/Integer;)Z
+#increment()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#decrement()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#add(Ljava/lang/Integer;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#subtract(Ljava/lang/Integer;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#subtract(Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet(Ljava/lang/Object;)V
+#initialize(Ljava/lang/Object;)Z
+#trySet(Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/DistributedAtomicInteger

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/DistributedAtomicLong
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock;)V
+#get()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet(Ljava/lang/Long;)V
+#compareAndSet(Ljava/lang/Long;Ljava/lang/Long;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#trySet(Ljava/lang/Long;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#initialize(Ljava/lang/Long;)Z
+#increment()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#decrement()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#add(Ljava/lang/Long;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#subtract(Ljava/lang/Long;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#subtract(Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet(Ljava/lang/Object;)V
+#initialize(Ljava/lang/Object;)Z
+#trySet(Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/DistributedAtomicLong

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/DistributedAtomicNumber
@0.10.0
+#get()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#trySet(Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#initialize(Ljava/lang/Object;)Z
+#forceSet(Ljava/lang/Object;)V
+#increment()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#decrement()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#subtract(Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/DistributedAtomicNumber

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/DistributedAtomicValue
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock;)V
+#get()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet([B)V
+#compareAndSet([B[B)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#trySet([B)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/AtomicValue;
+#initialize([B)Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/DistributedAtomicValue

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock$Builder
@0.10.0
+#build()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock;
+#lockPath(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock$Builder;
+#retryPolicy(Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock$Builder;
+#timeout(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock$Builder;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock$Builder

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock
@0.10.0
+#builder()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock$Builder;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/atomic/PromotedToLock

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/barriers/DistributedBarrier
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#setBarrier()V
+#removeBarrier()V
+#waitOnBarrier()V
+#waitOnBarrier(JLjava/util/concurrent/TimeUnit;)Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/barriers/DistributedBarrier

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/barriers/DistributedDoubleBarrier
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;I)V
+#enter()V
+#enter(JLjava/util/concurrent/TimeUnit;)Z
+#leave()V
+#leave(JLjava/util/concurrent/TimeUnit;)Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/barriers/DistributedDoubleBarrier

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/ChildData
@0.10.0
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;[B)V
+#compareTo(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/ChildData;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getPath()Ljava/lang/String;
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#getData()[B
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/ChildData

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/NodeCache
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Z)V
+#start()V
+#start(Z)V
+#close()V
+#getListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer;
+#rebuild()V
+#getCurrentData()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/ChildData;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/NodeCache

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/NodeCacheListener
@0.10.0
+#nodeChanged()V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/NodeCacheListener

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCache$StartMode
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCache$StartMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCache$StartMode;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCache$StartMode

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCache
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheMode;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheMode;Ljava/util/concurrent/ThreadFactory;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Z)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;ZLjava/util/concurrent/ThreadFactory;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;ZZLjava/util/concurrent/ThreadFactory;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;ZZLjava/util/concurrent/ExecutorService;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;ZZLorg/apache/flink/shaded/org/apache/curator/utils/CloseableExecutorService;)V
+#start()V
+#start(Z)V
+#start(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCache$StartMode;)V
+#rebuild()V
+#rebuildNode(Ljava/lang/String;)V
+#close()V
+#getListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer;
+#getCurrentData()Ljava/util/List;
+#getCurrentData(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/ChildData;
+#clearDataBytes(Ljava/lang/String;)V
+#clearDataBytes(Ljava/lang/String;I)Z
+#clearAndRefresh()V
+#clear()V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCache

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/ChildData;)V
+#getType()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type;
+#getData()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/ChildData;
+#getInitialData()Ljava/util/List;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheListener
@0.10.0
+#childEvent(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheListener

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheMode
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheMode;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/PathChildrenCacheMode

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache$Builder
@0.10.0
+#build()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache;
+#setCacheData(Z)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#setDataIsCompressed(Z)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#setExecutor(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#setExecutor(Ljava/util/concurrent/ExecutorService;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#setExecutor(Lorg/apache/flink/shaded/org/apache/curator/utils/CloseableExecutorService;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#setMaxDepth(I)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache$Builder;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache$Builder

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache
@0.10.0
+#newBuilder(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#start()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache;
+#close()V
+#getListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/Listenable;
+#getCurrentChildren(Ljava/lang/String;)Ljava/util/Map;
+#getCurrentData(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/ChildData;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCache

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheEvent$Type
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheEvent$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheEvent$Type;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheEvent$Type

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheEvent
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheEvent$Type;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/ChildData;)V
+#getType()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheEvent$Type;
+#getData()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/ChildData;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheEvent

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheListener
@0.10.0
+#childEvent(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheEvent;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/cache/TreeCacheListener

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/CancelLeadershipException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/CancelLeadershipException

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$State
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$State;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$State

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode;)V
+#start()V
+#close()V
+#close(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode;)V
+#addListener(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatchListener;)V
+#addListener(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatchListener;Ljava/util/concurrent/Executor;)V
+#removeListener(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatchListener;)V
+#await()V
+#await(JLjava/util/concurrent/TimeUnit;)Z
+#getId()Ljava/lang/String;
+#getState()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch$State;
+#getParticipants()Ljava/util/Collection;
+#getLeader()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/Participant;
+#hasLeadership()Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatchListener
@0.10.0
+#isLeader()V
+#notLeader()V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatchListener

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderSelector
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderSelectorListener;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/Executor;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderSelectorListener;)V[deprecated]
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderSelectorListener;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/utils/CloseableExecutorService;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderSelectorListener;)V
+#autoRequeue()V
+#setId(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#start()V
+#requeue()Z
+#internalRequeue()Z
+#close()V
+#getParticipants()Ljava/util/Collection;
+#getLeader()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/Participant;
+#hasLeadership()Z
+#interruptLeadership()V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderSelector

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderSelectorListener
@0.10.0
+#takeLeadership(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderSelectorListener

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderSelectorListenerAdapter
@0.10.0
+#<init>()V
+#stateChanged(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/org/apache/curator/framework/state/ConnectionState;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderSelectorListenerAdapter

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/Participant
@0.10.0
+#<init>(Ljava/lang/String;Z)V
+#getId()Ljava/lang/String;
+#isLeader()Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/leader/Participant

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/ChildReaper
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper$Mode;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper$Mode;I)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper$Mode;Ljava/util/concurrent/ScheduledExecutorService;I)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper$Mode;Ljava/util/concurrent/ScheduledExecutorService;ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper$Mode;Ljava/util/concurrent/ScheduledExecutorService;ILjava/lang/String;Ljava/util/Set;)V
+#start()V
+#close()V
+#addPath(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/ChildReaper;
+#removePath(Ljava/lang/String;)Z
+#setMaxChildren(I)V
+#newExecutorService()Ljava/util/concurrent/ScheduledExecutorService;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/ChildReaper

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessLock
@0.10.0
+#acquire()V
+#acquire(JLjava/util/concurrent/TimeUnit;)Z
+#release()V
+#isAcquiredInThisProcess()Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessLock

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessMultiLock
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/util/List;)V
+#<init>(Ljava/util/List;)V
+#acquire()V
+#acquire(JLjava/util/concurrent/TimeUnit;)Z
+#release()V
+#isAcquiredInThisProcess()Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessMultiLock

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessMutex
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/LockInternalsDriver;)V
+#acquire()V
+#acquire(JLjava/util/concurrent/TimeUnit;)Z
+#isAcquiredInThisProcess()Z
+#release()V
+#getParticipantNodes()Ljava/util/Collection;
+#makeRevocable(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/RevocationListener;)V
+#makeRevocable(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/RevocationListener;Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessMutex

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessReadWriteLock
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;[B)V
+#readLock()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessMutex;
+#writeLock()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessMutex;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessReadWriteLock

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessSemaphore
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;I)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCountReader;)V
+#returnAll(Ljava/util/Collection;)V
+#returnLease(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Lease;)V
+#acquire()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Lease;
+#acquire(I)Ljava/util/Collection;
+#acquire(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Lease;
+#acquire(IJLjava/util/concurrent/TimeUnit;)Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessSemaphore

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessSemaphoreMutex
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#acquire()V
+#acquire(JLjava/util/concurrent/TimeUnit;)Z
+#release()V
+#isAcquiredInThisProcess()Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessSemaphoreMutex

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessSemaphoreV2
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;I)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCountReader;)V
+#setNodeData([B)V
+#getParticipantNodes()Ljava/util/Collection;
+#returnAll(Ljava/util/Collection;)V
+#returnLease(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Lease;)V
+#acquire()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Lease;
+#acquire(I)Ljava/util/Collection;
+#acquire(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Lease;
+#acquire(IJLjava/util/concurrent/TimeUnit;)Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/InterProcessSemaphoreV2

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Lease
@0.10.0
+#close()V
+#getData()[B
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Lease

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/LockInternals
@0.10.0
+#clean()V
+#getParticipantNodes(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/LockInternalsSorter;)Ljava/util/Collection;
+#getSortedChildren(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/LockInternalsSorter;)Ljava/util/List;
+#getSortedChildren(Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/LockInternalsSorter;Ljava/util/List;)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/LockInternals

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/LockInternalsDriver
@0.10.0
+#getsTheLock(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/util/List;Ljava/lang/String;I)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/PredicateResults;
+#createsTheLock(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;[B)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/LockInternalsDriver

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/LockInternalsSorter
@0.10.0
+#fixForSorting(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/LockInternalsSorter

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/PredicateResults
@0.10.0
+#<init>(Ljava/lang/String;Z)V
+#getPathToWatch()Ljava/lang/String;
+#getsTheLock()Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/PredicateResults

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper$Mode
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper$Mode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper$Mode;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper$Mode

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;I)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ScheduledExecutorService;I)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ScheduledExecutorService;ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ScheduledExecutorService;ILorg/apache/flink/shaded/org/apache/curator/framework/recipes/leader/LeaderLatch;)V
+#addPath(Ljava/lang/String;)V
+#addPath(Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper$Mode;)V
+#removePath(Ljava/lang/String;)Z
+#start()V
+#close()V
+#newExecutorService()Ljava/util/concurrent/ScheduledExecutorService;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Reaper

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Revocable
@0.10.0
+#makeRevocable(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/RevocationListener;)V
+#makeRevocable(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/RevocationListener;Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Revocable

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/RevocationListener
@0.10.0
+#revocationRequested(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/RevocationListener

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Revoker
@0.10.0
+#attemptRevoke(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/Revoker

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/StandardLockInternalsDriver
@0.10.0
+#<init>()V
+#getsTheLock(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/util/List;Ljava/lang/String;I)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/locks/PredicateResults;
+#createsTheLock(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;[B)Ljava/lang/String;
+#fixForSorting(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#standardFixForSorting(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/locks/StandardLockInternalsDriver

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode$Mode
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode$Mode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode$Mode;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode$Mode

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode$Mode;Ljava/lang/String;[B)V
+#start()V
+#waitForInitialCreate(JLjava/util/concurrent/TimeUnit;)Z
+#close()V
+#getActualPath()Ljava/lang/String;
+#setData([B)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/BlockingQueueConsumer
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/state/ConnectionStateListener;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/state/ConnectionStateListener;I)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/state/ConnectionStateListener;Ljava/util/concurrent/BlockingQueue;)V
+#consumeMessage(Ljava/lang/Object;)V
+#getItems()Ljava/util/List;
+#size()I
+#take()Ljava/lang/Object;
+#take(ILjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#drainTo(Ljava/util/Collection;)I
+#stateChanged(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/org/apache/curator/framework/state/ConnectionState;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/BlockingQueueConsumer

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedDelayQueue
@0.10.0
+#start()V
+#close()V
+#put(Ljava/lang/Object;J)V
+#put(Ljava/lang/Object;JILjava/util/concurrent/TimeUnit;)Z
+#putMulti(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/MultiItem;J)V
+#putMulti(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/MultiItem;JILjava/util/concurrent/TimeUnit;)Z
+#setErrorMode(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/ErrorMode;)V
+#flushPuts(JLjava/util/concurrent/TimeUnit;)Z
+#getPutListenerContainer()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer;
+#getLastMessageCount()I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedDelayQueue

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedIdQueue
@0.10.0
+#start()V
+#close()V
+#getPutListenerContainer()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer;
+#setErrorMode(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/ErrorMode;)V
+#flushPuts(JLjava/util/concurrent/TimeUnit;)Z
+#getLastMessageCount()I
+#put(Ljava/lang/Object;Ljava/lang/String;)V
+#put(Ljava/lang/Object;Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)Z
+#remove(Ljava/lang/String;)I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedIdQueue

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedPriorityQueue
@0.10.0
+#start()V
+#close()V
+#put(Ljava/lang/Object;I)V
+#put(Ljava/lang/Object;IILjava/util/concurrent/TimeUnit;)Z
+#putMulti(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/MultiItem;I)V
+#putMulti(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/MultiItem;IILjava/util/concurrent/TimeUnit;)Z
+#setErrorMode(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/ErrorMode;)V
+#flushPuts(JLjava/util/concurrent/TimeUnit;)Z
+#getPutListenerContainer()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer;
+#getLastMessageCount()I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedPriorityQueue

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedQueue$ProcessType
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedQueue$ProcessType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedQueue$ProcessType;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedQueue$ProcessType

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedQueue
@0.10.0
+#start()V
+#close()V
+#getPutListenerContainer()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer;
+#setErrorMode(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/ErrorMode;)V
+#flushPuts(JLjava/util/concurrent/TimeUnit;)Z
+#put(Ljava/lang/Object;)V
+#put(Ljava/lang/Object;ILjava/util/concurrent/TimeUnit;)Z
+#putMulti(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/MultiItem;)V
+#putMulti(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/MultiItem;ILjava/util/concurrent/TimeUnit;)Z
+#getLastMessageCount()I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedQueue

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/ErrorMode
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/ErrorMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/ErrorMode;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/ErrorMode

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/MultiItem
@0.10.0
+#nextItem()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/MultiItem

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueAllocator
@0.10.0
+#allocateQueue(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBase;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueAllocator

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBase
@0.10.0
+#start()V
+#getPutListenerContainer()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer;
+#setErrorMode(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/ErrorMode;)V
+#flushPuts(JLjava/util/concurrent/TimeUnit;)Z
+#getLastMessageCount()I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBase

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBuilder
@0.10.0
+#builder(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueConsumer;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSerializer;Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBuilder;
+#buildQueue()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedQueue;
+#buildIdQueue()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedIdQueue;
+#buildPriorityQueue(I)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedPriorityQueue;
+#buildDelayQueue()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/DistributedDelayQueue;
+#threadFactory(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBuilder;
+#executor(Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBuilder;
+#lockPath(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBuilder;
+#maxItems(I)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBuilder;
+#putInBackground(Z)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBuilder;
+#finalFlushTime(ILjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBuilder;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueConsumer
@0.10.0
+#consumeMessage(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueConsumer

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueuePutListener
@0.10.0
+#putCompleted(Ljava/lang/Object;)V
+#putMultiCompleted(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/MultiItem;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueuePutListener

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSafety
@0.10.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueConsumer;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSafety

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSerializer
@0.10.0
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSerializer

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharder
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueAllocator;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies;)V
+#start()V
+#close()V
+#getQueue()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueBase;
+#getShardQty()I
+#getQueuePaths()Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharder

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder
@0.10.0
+#newQueueThreshold(I)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder;
+#thresholdCheckMs(I)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder;
+#maxQueues(I)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder;
+#threadFactory(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder;
+#build()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies
@0.10.0
+#builder()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/QueueSharderPolicies

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/SimpleDistributedQueue
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#element()[B
+#remove()[B
+#take()[B
+#offer([B)Z
+#peek()[B
+#poll(JLjava/util/concurrent/TimeUnit;)[B
+#poll()[B
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/queue/SimpleDistributedQueue

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCount
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;I)V
+#getCount()I
+#getVersionedValue()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/VersionedValue;
+#setCount(I)V
+#trySetCount(I)Z[deprecated]
+#trySetCount(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/VersionedValue;I)Z
+#addListener(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCountListener;)V
+#addListener(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCountListener;Ljava/util/concurrent/Executor;)V
+#removeListener(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCountListener;)V
+#start()V
+#close()V
+#removeListener(Ljava/lang/Object;)V
+#addListener(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V
+#addListener(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCount

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCountListener
@0.10.0
+#countHasChanged(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCountReader;I)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCountListener

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCountReader
@0.10.0
+#getCount()I
+#getVersionedValue()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/VersionedValue;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedCountReader

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedValue
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/lang/String;[B)V
+#getValue()[B
+#getVersionedValue()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/VersionedValue;
+#setValue([B)V
+#trySetValue([B)Z[deprecated]
+#trySetValue(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/VersionedValue;[B)Z
+#getListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer;
+#start()V
+#close()V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedValue

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedValueListener
@0.10.0
+#valueHasChanged(Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedValueReader;[B)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedValueListener

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedValueReader
@0.10.0
+#getValue()[B
+#getVersionedValue()Lorg/apache/flink/shaded/org/apache/curator/framework/recipes/shared/VersionedValue;
+#getListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/SharedValueReader

+###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/VersionedValue
@0.10.0
+#getVersion()I
+#getValue()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/recipes/shared/VersionedValue

+###org/apache/flink/shaded/org/apache/curator/framework/AuthInfo
@0.10.0
+#<init>(Ljava/lang/String;[B)V
+#getScheme()Ljava/lang/String;
+#getAuth()[B
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/AuthInfo

+###org/apache/flink/shaded/org/apache/curator/framework/CuratorFramework
@0.10.0
+#start()V
+#close()V
+#getState()Lorg/apache/flink/shaded/org/apache/curator/framework/imps/CuratorFrameworkState;
+#isStarted()Z
+#create()Lorg/apache/flink/shaded/org/apache/curator/framework/api/CreateBuilder;
+#delete()Lorg/apache/flink/shaded/org/apache/curator/framework/api/DeleteBuilder;
+#checkExists()Lorg/apache/flink/shaded/org/apache/curator/framework/api/ExistsBuilder;
+#getData()Lorg/apache/flink/shaded/org/apache/curator/framework/api/GetDataBuilder;
+#setData()Lorg/apache/flink/shaded/org/apache/curator/framework/api/SetDataBuilder;
+#getChildren()Lorg/apache/flink/shaded/org/apache/curator/framework/api/GetChildrenBuilder;
+#getACL()Lorg/apache/flink/shaded/org/apache/curator/framework/api/GetACLBuilder;
+#setACL()Lorg/apache/flink/shaded/org/apache/curator/framework/api/SetACLBuilder;
+#inTransaction()Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransaction;
+#sync(Ljava/lang/String;Ljava/lang/Object;)V
+#sync()Lorg/apache/flink/shaded/org/apache/curator/framework/api/SyncBuilder;
+#getConnectionStateListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/Listenable;
+#getCuratorListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/Listenable;
+#getUnhandledErrorListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/Listenable;
+#nonNamespaceView()Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;
+#usingNamespace(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;
+#getNamespace()Ljava/lang/String;
+#getZookeeperClient()Lorg/apache/flink/shaded/org/apache/curator/CuratorZookeeperClient;
+#newNamespaceAwareEnsurePath(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/utils/EnsurePath;
+#clearWatcherReferences(Lorg/apache/zookeeper/Watcher;)V
+#blockUntilConnected(ILjava/util/concurrent/TimeUnit;)Z
+#blockUntilConnected()V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/CuratorFramework

+###org/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder
@0.10.0
+#build()Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;
+#buildTemp()Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorTempFramework;
+#buildTemp(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorTempFramework;
+#authorization(Ljava/lang/String;[B)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#authorization(Ljava/util/List;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#connectString(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#ensembleProvider(Lorg/apache/flink/shaded/org/apache/curator/ensemble/EnsembleProvider;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#defaultData([B)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#namespace(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#sessionTimeoutMs(I)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#connectionTimeoutMs(I)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#maxCloseWaitMs(I)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#retryPolicy(Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#threadFactory(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#compressionProvider(Lorg/apache/flink/shaded/org/apache/curator/framework/api/CompressionProvider;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#zookeeperFactory(Lorg/apache/flink/shaded/org/apache/curator/utils/ZookeeperFactory;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#aclProvider(Lorg/apache/flink/shaded/org/apache/curator/framework/api/ACLProvider;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#canBeReadOnly(Z)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#getAclProvider()Lorg/apache/flink/shaded/org/apache/curator/framework/api/ACLProvider;
+#getZookeeperFactory()Lorg/apache/flink/shaded/org/apache/curator/utils/ZookeeperFactory;
+#getCompressionProvider()Lorg/apache/flink/shaded/org/apache/curator/framework/api/CompressionProvider;
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#getEnsembleProvider()Lorg/apache/flink/shaded/org/apache/curator/ensemble/EnsembleProvider;
+#getSessionTimeoutMs()I
+#getConnectionTimeoutMs()I
+#getMaxCloseWaitMs()I
+#getRetryPolicy()Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;
+#getNamespace()Ljava/lang/String;
+#getAuthScheme()Ljava/lang/String;[deprecated]
+#getAuthValue()[B[deprecated]
+#getAuthInfos()Ljava/util/List;
+#getDefaultData()[B
+#canBeReadOnly()Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder

+###org/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory
@0.10.0
+#builder()Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#newClient(Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;
+#newClient(Ljava/lang/String;IILorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory

+###org/apache/flink/shaded/org/apache/curator/framework/CuratorTempFramework
@0.10.0
+#close()V
+#inTransaction()Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransaction;
+#getData()Lorg/apache/flink/shaded/org/apache/curator/framework/api/TempGetDataBuilder;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/CuratorTempFramework

+###org/apache/flink/shaded/org/apache/curator/framework/api/ACLBackgroundPathAndBytesable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ACLBackgroundPathAndBytesable

+###org/apache/flink/shaded/org/apache/curator/framework/api/ACLBackgroundPathable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ACLBackgroundPathable

+###org/apache/flink/shaded/org/apache/curator/framework/api/ACLCreateModeBackgroundPathAndBytesable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ACLCreateModeBackgroundPathAndBytesable

+###org/apache/flink/shaded/org/apache/curator/framework/api/ACLCreateModePathAndBytesable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ACLCreateModePathAndBytesable

+###org/apache/flink/shaded/org/apache/curator/framework/api/ACLPathAndBytesable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ACLPathAndBytesable

+###org/apache/flink/shaded/org/apache/curator/framework/api/ACLProvider
@0.10.0
+#getDefaultAcl()Ljava/util/List;
+#getAclForPath(Ljava/lang/String;)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ACLProvider

+###org/apache/flink/shaded/org/apache/curator/framework/api/ACLVersionBackgroundPathable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ACLVersionBackgroundPathable

+###org/apache/flink/shaded/org/apache/curator/framework/api/ACLable
@0.10.0
+#withACL(Ljava/util/List;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ACLable

+###org/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback
@0.10.0
+#processResult(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/org/apache/curator/framework/api/CuratorEvent;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback

+###org/apache/flink/shaded/org/apache/curator/framework/api/BackgroundPathAndBytesable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/BackgroundPathAndBytesable

+###org/apache/flink/shaded/org/apache/curator/framework/api/BackgroundPathable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/BackgroundPathable

+###org/apache/flink/shaded/org/apache/curator/framework/api/BackgroundVersionable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/BackgroundVersionable

+###org/apache/flink/shaded/org/apache/curator/framework/api/Backgroundable
@0.10.0
+#inBackground()Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/Backgroundable

+###org/apache/flink/shaded/org/apache/curator/framework/api/ChildrenDeletable
@0.10.0
+#deletingChildrenIfNeeded()Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundVersionable;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ChildrenDeletable

+###org/apache/flink/shaded/org/apache/curator/framework/api/Compressible
@0.10.0
+#compressed()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/Compressible

+###org/apache/flink/shaded/org/apache/curator/framework/api/CompressionProvider
@0.10.0
+#compress(Ljava/lang/String;[B)[B
+#decompress(Ljava/lang/String;[B)[B
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/CompressionProvider

+###org/apache/flink/shaded/org/apache/curator/framework/api/CreateBackgroundModeACLable
@0.10.0
+#creatingParentsIfNeeded()Lorg/apache/flink/shaded/org/apache/curator/framework/api/ACLCreateModePathAndBytesable;
+#withProtectedEphemeralSequential()Lorg/apache/flink/shaded/org/apache/curator/framework/api/ACLPathAndBytesable;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/CreateBackgroundModeACLable

+###org/apache/flink/shaded/org/apache/curator/framework/api/CreateBuilder
@0.10.0
+#creatingParentsIfNeeded()Lorg/apache/flink/shaded/org/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable;
+#withProtectedEphemeralSequential()Lorg/apache/flink/shaded/org/apache/curator/framework/api/ACLPathAndBytesable;
+#withProtection()Lorg/apache/flink/shaded/org/apache/curator/framework/api/ACLCreateModeBackgroundPathAndBytesable;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/CreateBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/CreateModable
@0.10.0
+#withMode(Lorg/apache/zookeeper/CreateMode;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/CreateModable

+###org/apache/flink/shaded/org/apache/curator/framework/api/CreateModalPathAndBytesable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/CreateModalPathAndBytesable

+###org/apache/flink/shaded/org/apache/curator/framework/api/CuratorEvent
@0.10.0
+#getType()Lorg/apache/flink/shaded/org/apache/curator/framework/api/CuratorEventType;
+#getResultCode()I
+#getPath()Ljava/lang/String;
+#getContext()Ljava/lang/Object;
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#getData()[B
+#getName()Ljava/lang/String;
+#getChildren()Ljava/util/List;
+#getACLList()Ljava/util/List;
+#getWatchedEvent()Lorg/apache/zookeeper/WatchedEvent;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/CuratorEvent

+###org/apache/flink/shaded/org/apache/curator/framework/api/CuratorEventType
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/api/CuratorEventType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/api/CuratorEventType;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/CuratorEventType

+###org/apache/flink/shaded/org/apache/curator/framework/api/CuratorListener
@0.10.0
+#eventReceived(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/org/apache/curator/framework/api/CuratorEvent;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/CuratorListener

+###org/apache/flink/shaded/org/apache/curator/framework/api/CuratorWatcher
@0.10.0
+#process(Lorg/apache/zookeeper/WatchedEvent;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/CuratorWatcher

+###org/apache/flink/shaded/org/apache/curator/framework/api/Decompressible
@0.10.0
+#decompressed()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/Decompressible

+###org/apache/flink/shaded/org/apache/curator/framework/api/DeleteBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/DeleteBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/ExistsBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ExistsBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/GetACLBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/GetACLBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/GetChildrenBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/GetChildrenBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/GetDataBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/GetDataBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/GetDataWatchBackgroundStatable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/GetDataWatchBackgroundStatable

+###org/apache/flink/shaded/org/apache/curator/framework/api/Guaranteeable
@0.10.0
+#guaranteed()Lorg/apache/flink/shaded/org/apache/curator/framework/api/ChildrenDeletable;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/Guaranteeable

+###org/apache/flink/shaded/org/apache/curator/framework/api/PathAndBytesable
@0.10.0
+#forPath(Ljava/lang/String;[B)Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/PathAndBytesable

+###org/apache/flink/shaded/org/apache/curator/framework/api/Pathable
@0.10.0
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/Pathable

+###org/apache/flink/shaded/org/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable
@0.10.0
+#withProtection()Lorg/apache/flink/shaded/org/apache/curator/framework/api/ACLCreateModeBackgroundPathAndBytesable;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable

+###org/apache/flink/shaded/org/apache/curator/framework/api/SetACLBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/SetACLBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/SetDataBackgroundVersionable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/SetDataBackgroundVersionable

+###org/apache/flink/shaded/org/apache/curator/framework/api/SetDataBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/SetDataBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/StatPathable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/StatPathable

+###org/apache/flink/shaded/org/apache/curator/framework/api/Statable
@0.10.0
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/Statable

+###org/apache/flink/shaded/org/apache/curator/framework/api/SyncBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/SyncBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/TempGetDataBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/TempGetDataBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/UnhandledErrorListener
@0.10.0
+#unhandledError(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/UnhandledErrorListener

+###org/apache/flink/shaded/org/apache/curator/framework/api/Versionable
@0.10.0
+#withVersion(I)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/Versionable

+###org/apache/flink/shaded/org/apache/curator/framework/api/WatchPathable
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/WatchPathable

+###org/apache/flink/shaded/org/apache/curator/framework/api/Watchable
@0.10.0
+#watched()Ljava/lang/Object;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Ljava/lang/Object;
+#usingWatcher(Lorg/apache/flink/shaded/org/apache/curator/framework/api/CuratorWatcher;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/Watchable

+###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransaction
@0.10.0
+#create()Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionCreateBuilder;
+#delete()Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionDeleteBuilder;
+#setData()Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionSetDataBuilder;
+#check()Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionCheckBuilder;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransaction

+###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransactionBridge
@0.10.0
+#and()Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransactionFinal;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransactionBridge

+###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransactionFinal
@0.10.0
+#commit()Ljava/util/Collection;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransactionFinal

+###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransactionResult
@0.10.0
+#ofTypeAndPath(Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/OperationType;Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/OperationType;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)V
+#getType()Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/OperationType;
+#getForPath()Ljava/lang/String;
+#getResultPath()Ljava/lang/String;
+#getResultStat()Lorg/apache/zookeeper/data/Stat;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransactionResult

+###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/OperationType
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/OperationType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/OperationType;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/OperationType

+###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionCheckBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionCheckBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionCreateBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionCreateBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionDeleteBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionDeleteBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionSetDataBuilder
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/api/transaction/TransactionSetDataBuilder

+###org/apache/flink/shaded/org/apache/curator/framework/imps/CuratorFrameworkImpl
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;)V
+#clearWatcherReferences(Lorg/apache/zookeeper/Watcher;)V
+#getState()Lorg/apache/flink/shaded/org/apache/curator/framework/imps/CuratorFrameworkState;
+#isStarted()Z[deprecated]
+#blockUntilConnected(ILjava/util/concurrent/TimeUnit;)Z
+#blockUntilConnected()V
+#start()V
+#close()V
+#nonNamespaceView()Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;[deprecated]
+#getNamespace()Ljava/lang/String;
+#usingNamespace(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;
+#create()Lorg/apache/flink/shaded/org/apache/curator/framework/api/CreateBuilder;
+#delete()Lorg/apache/flink/shaded/org/apache/curator/framework/api/DeleteBuilder;
+#checkExists()Lorg/apache/flink/shaded/org/apache/curator/framework/api/ExistsBuilder;
+#getData()Lorg/apache/flink/shaded/org/apache/curator/framework/api/GetDataBuilder;
+#setData()Lorg/apache/flink/shaded/org/apache/curator/framework/api/SetDataBuilder;
+#getChildren()Lorg/apache/flink/shaded/org/apache/curator/framework/api/GetChildrenBuilder;
+#getACL()Lorg/apache/flink/shaded/org/apache/curator/framework/api/GetACLBuilder;
+#setACL()Lorg/apache/flink/shaded/org/apache/curator/framework/api/SetACLBuilder;
+#inTransaction()Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransaction;
+#getConnectionStateListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/Listenable;
+#getCuratorListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/Listenable;
+#getUnhandledErrorListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/Listenable;
+#sync(Ljava/lang/String;Ljava/lang/Object;)V
+#sync()Lorg/apache/flink/shaded/org/apache/curator/framework/api/SyncBuilder;
+#getZookeeperClient()Lorg/apache/flink/shaded/org/apache/curator/CuratorZookeeperClient;
+#newNamespaceAwareEnsurePath(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/utils/EnsurePath;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/imps/CuratorFrameworkImpl

+###org/apache/flink/shaded/org/apache/curator/framework/imps/CuratorFrameworkState
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/imps/CuratorFrameworkState;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/imps/CuratorFrameworkState;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/imps/CuratorFrameworkState

+###org/apache/flink/shaded/org/apache/curator/framework/imps/CuratorTempFrameworkImpl
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFrameworkFactory$Builder;J)V
+#close()V
+#inTransaction()Lorg/apache/flink/shaded/org/apache/curator/framework/api/transaction/CuratorTransaction;
+#getData()Lorg/apache/flink/shaded/org/apache/curator/framework/api/TempGetDataBuilder;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/imps/CuratorTempFrameworkImpl

+###org/apache/flink/shaded/org/apache/curator/framework/imps/DefaultACLProvider
@0.10.0
+#<init>()V
+#getDefaultAcl()Ljava/util/List;
+#getAclForPath(Ljava/lang/String;)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/imps/DefaultACLProvider

+###org/apache/flink/shaded/org/apache/curator/framework/imps/GzipCompressionProvider
@0.10.0
+#<init>()V
+#compress(Ljava/lang/String;[B)[B
+#decompress(Ljava/lang/String;[B)[B
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/imps/GzipCompressionProvider

+###org/apache/flink/shaded/org/apache/curator/framework/imps/SyncBuilderImpl
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/imps/CuratorFrameworkImpl;)V
+#inBackground()Lorg/apache/flink/shaded/org/apache/curator/framework/api/Pathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/flink/shaded/org/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/org/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/org/apache/curator/framework/api/Pathable;
+#performBackgroundOperation(Lorg/apache/flink/shaded/org/apache/curator/framework/imps/OperationAndData;)V
+#forPath(Ljava/lang/String;)Ljava/lang/Void;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/flink/shaded/org/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/imps/SyncBuilderImpl

+###org/apache/flink/shaded/org/apache/curator/framework/listen/Listenable
@0.10.0
+#addListener(Ljava/lang/Object;)V
+#addListener(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V
+#removeListener(Ljava/lang/Object;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/listen/Listenable

+###org/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer
@0.10.0
+#<init>()V
+#addListener(Ljava/lang/Object;)V
+#addListener(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V
+#removeListener(Ljava/lang/Object;)V
+#clear()V
+#size()I
+#forEach(Lorg/apache/flink/shaded/com/google/common/base/Function;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer

+###org/apache/flink/shaded/org/apache/curator/framework/listen/ListenerEntry
@0.10.0
+#<init>(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/listen/ListenerEntry

+###org/apache/flink/shaded/org/apache/curator/framework/state/ConnectionState
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/framework/state/ConnectionState;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/framework/state/ConnectionState;
+#isConnected()Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/state/ConnectionState

+###org/apache/flink/shaded/org/apache/curator/framework/state/ConnectionStateListener
@0.10.0
+#stateChanged(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Lorg/apache/flink/shaded/org/apache/curator/framework/state/ConnectionState;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/state/ConnectionStateListener

+###org/apache/flink/shaded/org/apache/curator/framework/state/ConnectionStateManager
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ThreadFactory;)V
+#start()V
+#close()V
+#getListenable()Lorg/apache/flink/shaded/org/apache/curator/framework/listen/ListenerContainer;
+#setToSuspended()Z
+#addStateChange(Lorg/apache/flink/shaded/org/apache/curator/framework/state/ConnectionState;)Z
+#blockUntilConnected(ILjava/util/concurrent/TimeUnit;)Z
+#isConnected()Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/framework/state/ConnectionStateManager

+###org/apache/flink/shaded/org/apache/curator/CuratorConnectionLossException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/CuratorConnectionLossException

+###org/apache/flink/shaded/org/apache/curator/CuratorZookeeperClient
@0.10.0
+#<init>(Ljava/lang/String;IILorg/apache/zookeeper/Watcher;Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/ensemble/EnsembleProvider;IILorg/apache/zookeeper/Watcher;Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)V
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/utils/ZookeeperFactory;Lorg/apache/flink/shaded/org/apache/curator/ensemble/EnsembleProvider;IILorg/apache/zookeeper/Watcher;Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;Z)V
+#getZooKeeper()Lorg/apache/zookeeper/ZooKeeper;
+#newRetryLoop()Lorg/apache/flink/shaded/org/apache/curator/RetryLoop;
+#newSessionFailRetryLoop(Lorg/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop$Mode;)Lorg/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop;
+#isConnected()Z
+#blockUntilConnectedOrTimedOut()Z
+#start()V
+#close()V
+#setRetryPolicy(Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)V
+#getRetryPolicy()Lorg/apache/flink/shaded/org/apache/curator/RetryPolicy;
+#startTracer(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/TimeTrace;
+#getTracerDriver()Lorg/apache/flink/shaded/org/apache/curator/drivers/TracerDriver;
+#setTracerDriver(Lorg/apache/flink/shaded/org/apache/curator/drivers/TracerDriver;)V
+#getCurrentConnectionString()Ljava/lang/String;
+#getConnectionTimeoutMs()I
+#getInstanceIndex()J
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/CuratorZookeeperClient

+###org/apache/flink/shaded/org/apache/curator/RetryLoop
@0.10.0
+#getDefaultRetrySleeper()Lorg/apache/flink/shaded/org/apache/curator/RetrySleeper;
+#callWithRetry(Lorg/apache/flink/shaded/org/apache/curator/CuratorZookeeperClient;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#shouldContinue()Z
+#markComplete()V
+#shouldRetry(I)Z
+#isRetryException(Ljava/lang/Throwable;)Z
+#takeException(Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/RetryLoop

+###org/apache/flink/shaded/org/apache/curator/RetryPolicy
@0.10.0
+#allowRetry(IJLorg/apache/flink/shaded/org/apache/curator/RetrySleeper;)Z
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/RetryPolicy

+###org/apache/flink/shaded/org/apache/curator/RetrySleeper
@0.10.0
+#sleepFor(JLjava/util/concurrent/TimeUnit;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/RetrySleeper

+###org/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop$Mode
@0.10.0
+#values()[Lorg/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop$Mode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop$Mode;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop$Mode

+###org/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop$SessionFailedException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop$SessionFailedException

+###org/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop
@0.10.0
+#callWithRetry(Lorg/apache/flink/shaded/org/apache/curator/CuratorZookeeperClient;Lorg/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop$Mode;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#start()V
+#shouldContinue()Z
+#close()V
+#takeException(Ljava/lang/Exception;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/SessionFailRetryLoop

+###org/apache/flink/shaded/org/apache/curator/TimeTrace
@0.10.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/drivers/TracerDriver;)V
+#commit()V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/TimeTrace

+###org/apache/flink/shaded/org/apache/curator/drivers/TracerDriver
@0.10.0
+#addTrace(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)V
+#addCount(Ljava/lang/String;I)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/drivers/TracerDriver

+###org/apache/flink/shaded/org/apache/curator/ensemble/EnsembleProvider
@0.10.0
+#start()V
+#getConnectionString()Ljava/lang/String;
+#close()V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/ensemble/EnsembleProvider

+###org/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/DefaultExhibitorRestClient
@0.10.0
+#<init>()V
+#<init>(Z)V
+#getRaw(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/DefaultExhibitorRestClient

+###org/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/ExhibitorEnsembleProvider
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/Exhibitors;Lorg/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/ExhibitorRestClient;Ljava/lang/String;ILorg/apache/flink/shaded/org/apache/curator/RetryPolicy;)V
+#setExhibitors(Lorg/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/Exhibitors;)V
+#pollForInitialEnsemble()V
+#start()V
+#close()V
+#getConnectionString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/ExhibitorEnsembleProvider

+###org/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/ExhibitorRestClient
@0.10.0
+#getRaw(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/ExhibitorRestClient

+###org/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/Exhibitors$BackupConnectionStringProvider
@0.10.0
+#getBackupConnectionString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/Exhibitors$BackupConnectionStringProvider

+###org/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/Exhibitors
@0.10.0
+#<init>(Ljava/util/Collection;ILorg/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/Exhibitors$BackupConnectionStringProvider;)V
+#getHostnames()Ljava/util/Collection;
+#getRestPort()I
+#getBackupConnectionString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/ensemble/exhibitor/Exhibitors

+###org/apache/flink/shaded/org/apache/curator/ensemble/fixed/FixedEnsembleProvider
@0.10.0
+#<init>(Ljava/lang/String;)V
+#start()V
+#close()V
+#getConnectionString()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/ensemble/fixed/FixedEnsembleProvider

+###org/apache/flink/shaded/org/apache/curator/retry/BoundedExponentialBackoffRetry
@0.10.0
+#<init>(III)V
+#getMaxSleepTimeMs()I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/retry/BoundedExponentialBackoffRetry

+###org/apache/flink/shaded/org/apache/curator/retry/ExponentialBackoffRetry
@0.10.0
+#<init>(II)V
+#<init>(III)V
+#getBaseSleepTimeMs()I
+#allowRetry(IJLorg/apache/flink/shaded/org/apache/curator/RetrySleeper;)Z
+#getN()I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/retry/ExponentialBackoffRetry

+###org/apache/flink/shaded/org/apache/curator/retry/RetryNTimes
@0.10.0
+#<init>(II)V
+#allowRetry(IJLorg/apache/flink/shaded/org/apache/curator/RetrySleeper;)Z
+#getN()I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/retry/RetryNTimes

+###org/apache/flink/shaded/org/apache/curator/retry/RetryOneTime
@0.10.0
+#<init>(I)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/retry/RetryOneTime

+###org/apache/flink/shaded/org/apache/curator/retry/RetryUntilElapsed
@0.10.0
+#<init>(II)V
+#allowRetry(IJLorg/apache/flink/shaded/org/apache/curator/RetrySleeper;)Z
+#getN()I
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/retry/RetryUntilElapsed

+###org/apache/flink/shaded/org/apache/curator/utils/CloseableExecutorService$InternalFutureTask
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/CloseableExecutorService$InternalFutureTask

+###org/apache/flink/shaded/org/apache/curator/utils/CloseableExecutorService$InternalScheduledFutureTask
@0.10.0
+#<init>(Lorg/apache/flink/shaded/org/apache/curator/utils/CloseableExecutorService;Ljava/util/concurrent/ScheduledFuture;)V
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#get()Ljava/lang/Void;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Void;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#get()Ljava/lang/Object;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/CloseableExecutorService$InternalScheduledFutureTask

+###org/apache/flink/shaded/org/apache/curator/utils/CloseableExecutorService
@0.10.0
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#<init>(Ljava/util/concurrent/ExecutorService;Z)V
+#isShutdown()Z
+#close()V
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/CloseableExecutorService

+###org/apache/flink/shaded/org/apache/curator/utils/CloseableScheduledExecutorService
@0.10.0
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;)V
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;Z)V
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
+#scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/CloseableScheduledExecutorService

+###org/apache/flink/shaded/org/apache/curator/utils/CloseableUtils
@0.10.0
+#<init>()V
+#closeQuietly(Ljava/io/Closeable;)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/CloseableUtils

+###org/apache/flink/shaded/org/apache/curator/utils/DebugUtils
@0.10.0
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/DebugUtils

+###org/apache/flink/shaded/org/apache/curator/utils/DefaultTracerDriver
@0.10.0
+#<init>()V
+#addTrace(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)V
+#addCount(Ljava/lang/String;I)V
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/DefaultTracerDriver

+###org/apache/flink/shaded/org/apache/curator/utils/DefaultZookeeperFactory
@0.10.0
+#<init>()V
+#newZooKeeper(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;Z)Lorg/apache/zookeeper/ZooKeeper;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/DefaultZookeeperFactory

+###org/apache/flink/shaded/org/apache/curator/utils/EnsurePath
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/org/apache/curator/utils/InternalACLProvider;)V
+#ensure(Lorg/apache/flink/shaded/org/apache/curator/CuratorZookeeperClient;)V
+#excludingLast()Lorg/apache/flink/shaded/org/apache/curator/utils/EnsurePath;
+#getPath()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/EnsurePath

+###org/apache/flink/shaded/org/apache/curator/utils/InternalACLProvider
@0.10.0
+#getDefaultAcl()Ljava/util/List;
+#getAclForPath(Ljava/lang/String;)Ljava/util/List;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/InternalACLProvider

+###org/apache/flink/shaded/org/apache/curator/utils/PathUtils
@0.10.0
+#<init>()V
+#validatePath(Ljava/lang/String;Z)V
+#validatePath(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/PathUtils

+###org/apache/flink/shaded/org/apache/curator/utils/ThreadUtils
@0.10.0
+#<init>()V
+#newSingleThreadExecutor(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;
+#newFixedThreadPool(ILjava/lang/String;)Ljava/util/concurrent/ExecutorService;
+#newSingleThreadScheduledExecutor(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;
+#newFixedThreadScheduledPool(ILjava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;
+#newThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
+#newGenericThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
+#getProcessName(Ljava/lang/Class;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/ThreadUtils

+###org/apache/flink/shaded/org/apache/curator/utils/ZKPaths$PathAndNode
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#getNode()Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/ZKPaths$PathAndNode

+###org/apache/flink/shaded/org/apache/curator/utils/ZKPaths
@0.10.0
+#fixForNamespace(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#fixForNamespace(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#getNodeFromPath(Ljava/lang/String;)Ljava/lang/String;
+#getPathAndNode(Ljava/lang/String;)Lorg/apache/flink/shaded/org/apache/curator/utils/ZKPaths$PathAndNode;
+#split(Ljava/lang/String;)Ljava/util/List;
+#mkdirs(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;)V
+#mkdirs(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;Z)V
+#mkdirs(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;ZLorg/apache/flink/shaded/org/apache/curator/utils/InternalACLProvider;)V
+#deleteChildren(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;Z)V
+#getSortedChildren(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;)Ljava/util/List;
+#makePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#makePath(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/ZKPaths

+###org/apache/flink/shaded/org/apache/curator/utils/ZookeeperFactory
@0.10.0
+#newZooKeeper(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;Z)Lorg/apache/zookeeper/ZooKeeper;
@1.14.0
-###org/apache/flink/shaded/org/apache/curator/utils/ZookeeperFactory

+###org/apache/jute/BinaryInputArchive
@0.10.0
+#getArchive(Ljava/io/InputStream;)Lorg/apache/jute/BinaryInputArchive;
+#<init>(Ljava/io/DataInput;)V
+#readByte(Ljava/lang/String;)B
+#readBool(Ljava/lang/String;)Z
+#readInt(Ljava/lang/String;)I
+#readLong(Ljava/lang/String;)J
+#readFloat(Ljava/lang/String;)F
+#readDouble(Ljava/lang/String;)D
+#readString(Ljava/lang/String;)Ljava/lang/String;
+#readBuffer(Ljava/lang/String;)[B
+#readRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startRecord(Ljava/lang/String;)V
+#endRecord(Ljava/lang/String;)V
+#startVector(Ljava/lang/String;)Lorg/apache/jute/Index;
+#endVector(Ljava/lang/String;)V
+#startMap(Ljava/lang/String;)Lorg/apache/jute/Index;
+#endMap(Ljava/lang/String;)V
@1.14.0
-###org/apache/jute/BinaryInputArchive

+###org/apache/jute/BinaryOutputArchive
@0.10.0
+#getArchive(Ljava/io/OutputStream;)Lorg/apache/jute/BinaryOutputArchive;
+#<init>(Ljava/io/DataOutput;)V
+#writeByte(BLjava/lang/String;)V
+#writeBool(ZLjava/lang/String;)V
+#writeInt(ILjava/lang/String;)V
+#writeLong(JLjava/lang/String;)V
+#writeFloat(FLjava/lang/String;)V
+#writeDouble(DLjava/lang/String;)V
+#writeString(Ljava/lang/String;Ljava/lang/String;)V
+#writeBuffer([BLjava/lang/String;)V
+#writeRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#endRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startVector(Ljava/util/List;Ljava/lang/String;)V
+#endVector(Ljava/util/List;Ljava/lang/String;)V
+#startMap(Ljava/util/TreeMap;Ljava/lang/String;)V
+#endMap(Ljava/util/TreeMap;Ljava/lang/String;)V
@1.14.0
-###org/apache/jute/BinaryOutputArchive

+###org/apache/jute/CsvOutputArchive
@0.10.0
+#<init>(Ljava/io/OutputStream;)V
+#writeByte(BLjava/lang/String;)V
+#writeBool(ZLjava/lang/String;)V
+#writeInt(ILjava/lang/String;)V
+#writeLong(JLjava/lang/String;)V
+#writeFloat(FLjava/lang/String;)V
+#writeDouble(DLjava/lang/String;)V
+#writeString(Ljava/lang/String;Ljava/lang/String;)V
+#writeBuffer([BLjava/lang/String;)V
+#writeRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#endRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startVector(Ljava/util/List;Ljava/lang/String;)V
+#endVector(Ljava/util/List;Ljava/lang/String;)V
+#startMap(Ljava/util/TreeMap;Ljava/lang/String;)V
+#endMap(Ljava/util/TreeMap;Ljava/lang/String;)V
@1.14.0
-###org/apache/jute/CsvOutputArchive

+###org/apache/jute/Index
@0.10.0
+#done()Z
+#incr()V
@1.14.0
-###org/apache/jute/Index

+###org/apache/jute/InputArchive
@0.10.0
+#readByte(Ljava/lang/String;)B
+#readBool(Ljava/lang/String;)Z
+#readInt(Ljava/lang/String;)I
+#readLong(Ljava/lang/String;)J
+#readFloat(Ljava/lang/String;)F
+#readDouble(Ljava/lang/String;)D
+#readString(Ljava/lang/String;)Ljava/lang/String;
+#readBuffer(Ljava/lang/String;)[B
+#readRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startRecord(Ljava/lang/String;)V
+#endRecord(Ljava/lang/String;)V
+#startVector(Ljava/lang/String;)Lorg/apache/jute/Index;
+#endVector(Ljava/lang/String;)V
+#startMap(Ljava/lang/String;)Lorg/apache/jute/Index;
+#endMap(Ljava/lang/String;)V
@1.14.0
-###org/apache/jute/InputArchive

+###org/apache/jute/OutputArchive
@0.10.0
+#writeByte(BLjava/lang/String;)V
+#writeBool(ZLjava/lang/String;)V
+#writeInt(ILjava/lang/String;)V
+#writeLong(JLjava/lang/String;)V
+#writeFloat(FLjava/lang/String;)V
+#writeDouble(DLjava/lang/String;)V
+#writeString(Ljava/lang/String;Ljava/lang/String;)V
+#writeBuffer([BLjava/lang/String;)V
+#writeRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#endRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startVector(Ljava/util/List;Ljava/lang/String;)V
+#endVector(Ljava/util/List;Ljava/lang/String;)V
+#startMap(Ljava/util/TreeMap;Ljava/lang/String;)V
+#endMap(Ljava/util/TreeMap;Ljava/lang/String;)V
@1.14.0
-###org/apache/jute/OutputArchive

+###org/apache/jute/Record
@0.10.0
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
@1.14.0
-###org/apache/jute/Record

+###org/apache/jute/RecordReader
@0.10.0
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#read(Lorg/apache/jute/Record;)V
@1.14.0
-###org/apache/jute/RecordReader

+###org/apache/jute/RecordWriter
@0.10.0
+#<init>(Ljava/io/OutputStream;Ljava/lang/String;)V
+#write(Lorg/apache/jute/Record;)V
@1.14.0
-###org/apache/jute/RecordWriter

+###org/apache/jute/Utils
@0.10.0
+#bufEquals([B[B)Z
+#compareBytes([BII[BII)I
@1.14.0
-###org/apache/jute/Utils

+###org/apache/jute/compiler/CSharpGenerator
@0.10.0
@1.14.0
-###org/apache/jute/compiler/CSharpGenerator

+###org/apache/jute/compiler/JBoolean
@0.10.0
+#<init>()V
+#getSignature()Ljava/lang/String;
+#genJavaCompareTo(Ljava/lang/String;)Ljava/lang/String;
+#genJavaHashCode(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JBoolean

+###org/apache/jute/compiler/JBuffer
@0.10.0
+#<init>()V
+#genCppGetSet(Ljava/lang/String;I)Ljava/lang/String;
+#getSignature()Ljava/lang/String;
+#genJavaReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genJavaWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaCompareTo(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaCompareTo(Ljava/lang/String;)Ljava/lang/String;
+#genJavaCompareToWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaEquals(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaHashCode(Ljava/lang/String;)Ljava/lang/String;
+#genJavaSlurpBytes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaCompareBytes()Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JBuffer

+###org/apache/jute/compiler/JByte
@0.10.0
+#<init>()V
+#getSignature()Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JByte

+###org/apache/jute/compiler/JDouble
@0.10.0
+#<init>()V
+#getSignature()Ljava/lang/String;
+#genJavaHashCode(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JDouble

+###org/apache/jute/compiler/JField
@0.10.0
+#<init>(Lorg/apache/jute/compiler/JType;Ljava/lang/String;)V
+#getSignature()Ljava/lang/String;
+#genCppDecl()Ljava/lang/String;
+#genCDecl()Ljava/lang/String;
+#genCsharpDecl()Ljava/lang/String;
+#genCsharpConstructorParam(Ljava/lang/String;)Ljava/lang/String;
+#genJavaDecl()Ljava/lang/String;
+#genJavaConstructorParam(Ljava/lang/String;)Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getCsharpName()Ljava/lang/String;
+#getTag()Ljava/lang/String;
+#getType()Lorg/apache/jute/compiler/JType;
+#genCppGetSet(I)Ljava/lang/String;
+#genCsharpConstructorSet(Ljava/lang/String;)Ljava/lang/String;
+#genCsharpGetSet(I)Ljava/lang/String;
+#genCsharpWriteMethodName()Ljava/lang/String;
+#genCsharpReadMethodName()Ljava/lang/String;
+#genCsharpCompareTo()Ljava/lang/String;
+#genCsharpEquals()Ljava/lang/String;
+#genCsharpHashCode()Ljava/lang/String;
+#genJavaGetSet(I)Ljava/lang/String;
+#genJavaWriteMethodName()Ljava/lang/String;
+#genJavaReadMethodName()Ljava/lang/String;
+#genJavaCompareTo()Ljava/lang/String;
+#genJavaEquals()Ljava/lang/String;
+#genJavaHashCode()Ljava/lang/String;
+#genJavaConstructorSet(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JField

+###org/apache/jute/compiler/JFile
@0.10.0
+#<init>(Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;)V
+#genCode(Ljava/lang/String;Ljava/io/File;)V
@1.14.0
-###org/apache/jute/compiler/JFile

+###org/apache/jute/compiler/JFloat
@0.10.0
+#<init>()V
+#getSignature()Ljava/lang/String;
+#genJavaHashCode(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JFloat

+###org/apache/jute/compiler/JInt
@0.10.0
+#<init>()V
+#getSignature()Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JInt

+###org/apache/jute/compiler/JLong
@0.10.0
+#<init>()V
+#getSignature()Ljava/lang/String;
+#genJavaHashCode(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JLong

+###org/apache/jute/compiler/JMap
@0.10.0
+#<init>(Lorg/apache/jute/compiler/JType;Lorg/apache/jute/compiler/JType;)V
+#getSignature()Ljava/lang/String;
+#genJavaCompareTo(Ljava/lang/String;)Ljava/lang/String;
+#genJavaReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genJavaReadMethod(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaWriteMethod(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genCsharpWriteWrapper(Ljava/lang/String;I)Ljava/lang/String;
+#genCsharpReadWrapper(Ljava/lang/String;IZ)Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JMap

+###org/apache/jute/compiler/JRecord
@0.10.0
+#<init>(Ljava/lang/String;Ljava/util/ArrayList;)V
+#getName()Ljava/lang/String;
+#getCsharpName()Ljava/lang/String;
+#getJavaFQName()Ljava/lang/String;
+#getCppFQName()Ljava/lang/String;
+#getJavaPackage()Ljava/lang/String;
+#getCppNameSpace()Ljava/lang/String;
+#getCsharpNameSpace()Ljava/lang/String;
+#getFields()Ljava/util/ArrayList;
+#getSignature()Ljava/lang/String;
+#genCppDecl(Ljava/lang/String;)Ljava/lang/String;
+#genJavaReadMethod(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genJavaWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genCsharpReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genCsharpWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genCCode(Ljava/io/FileWriter;Ljava/io/FileWriter;)V
+#genCppCode(Ljava/io/FileWriter;Ljava/io/FileWriter;)V
+#genJavaCode(Ljava/io/File;)V
+#genCsharpCode(Ljava/io/File;)V
+#getCsharpFQName(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JRecord

+###org/apache/jute/compiler/JString
@0.10.0
+#<init>()V
+#getSignature()Ljava/lang/String;
+#genJavaReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genJavaWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JString

+###org/apache/jute/compiler/JType
@0.10.0
+#genCsharpDecl(Ljava/lang/String;)Ljava/lang/String;
+#genCsharpConstructorParam(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JType

+###org/apache/jute/compiler/JVector
@0.10.0
+#<init>(Lorg/apache/jute/compiler/JType;)V
+#getSignature()Ljava/lang/String;
+#genJavaCompareTo(Ljava/lang/String;)Ljava/lang/String;
+#genJavaReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genJavaReadMethod(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaWriteMethod(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getElementType()Lorg/apache/jute/compiler/JType;
+#genCsharpWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genCsharpReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#extractVectorName(Lorg/apache/jute/compiler/JType;)Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/JVector

+###org/apache/jute/compiler/generated/ParseException
@0.10.0
+#<init>(Lorg/apache/jute/compiler/generated/Token;[[I[Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getMessage()Ljava/lang/String;
@1.14.0
-###org/apache/jute/compiler/generated/ParseException

+###org/apache/jute/compiler/generated/Rcc
@0.10.0
+#main([Ljava/lang/String;)V
+#parseFile(Ljava/io/File;)Lorg/apache/jute/compiler/JFile;
+#Input()Lorg/apache/jute/compiler/JFile;
+#Include()Lorg/apache/jute/compiler/JFile;
+#Module()Ljava/util/ArrayList;
+#ModuleName()Ljava/lang/String;
+#RecordList()Ljava/util/ArrayList;
+#Record()Lorg/apache/jute/compiler/JRecord;
+#Field()Lorg/apache/jute/compiler/JField;
+#Type()Lorg/apache/jute/compiler/JType;
+#Map()Lorg/apache/jute/compiler/JMap;
+#Vector()Lorg/apache/jute/compiler/JVector;
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#ReInit(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/Reader;)V
+#ReInit(Ljava/io/Reader;)V
+#<init>(Lorg/apache/jute/compiler/generated/RccTokenManager;)V
+#ReInit(Lorg/apache/jute/compiler/generated/RccTokenManager;)V
+#getNextToken()Lorg/apache/jute/compiler/generated/Token;
+#getToken(I)Lorg/apache/jute/compiler/generated/Token;
+#generateParseException()Lorg/apache/jute/compiler/generated/ParseException;
+#enable_tracing()V
+#disable_tracing()V
@1.14.0
-###org/apache/jute/compiler/generated/Rcc

+###org/apache/jute/compiler/generated/RccConstants
@0.10.0
@1.14.0
-###org/apache/jute/compiler/generated/RccConstants

+###org/apache/jute/compiler/generated/RccTokenManager
@0.10.0
+#setDebugStream(Ljava/io/PrintStream;)V
+#<init>(Lorg/apache/jute/compiler/generated/SimpleCharStream;)V
+#<init>(Lorg/apache/jute/compiler/generated/SimpleCharStream;I)V
+#ReInit(Lorg/apache/jute/compiler/generated/SimpleCharStream;)V
+#ReInit(Lorg/apache/jute/compiler/generated/SimpleCharStream;I)V
+#SwitchTo(I)V
+#getNextToken()Lorg/apache/jute/compiler/generated/Token;
@1.14.0
-###org/apache/jute/compiler/generated/RccTokenManager

+###org/apache/jute/compiler/generated/SimpleCharStream
@0.10.0
+#BeginToken()C
+#readChar()C
+#getColumn()I
+#getLine()I
+#getEndColumn()I
+#getEndLine()I
+#getBeginColumn()I
+#getBeginLine()I
+#backup(I)V
+#<init>(Ljava/io/Reader;III)V
+#<init>(Ljava/io/Reader;II)V
+#<init>(Ljava/io/Reader;)V
+#ReInit(Ljava/io/Reader;III)V
+#ReInit(Ljava/io/Reader;II)V
+#ReInit(Ljava/io/Reader;)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;III)V
+#<init>(Ljava/io/InputStream;III)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;II)V
+#<init>(Ljava/io/InputStream;II)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;III)V
+#ReInit(Ljava/io/InputStream;III)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;)V
+#ReInit(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;II)V
+#ReInit(Ljava/io/InputStream;II)V
+#GetImage()Ljava/lang/String;
+#GetSuffix(I)[C
+#Done()V
+#adjustBeginLineColumn(II)V
@1.14.0
-###org/apache/jute/compiler/generated/SimpleCharStream

+###org/apache/jute/compiler/generated/Token
@0.10.0
+#<init>()V
+#toString()Ljava/lang/String;
+#newToken(I)Lorg/apache/jute/compiler/generated/Token;
@1.14.0
-###org/apache/jute/compiler/generated/Token

+###org/apache/jute/compiler/generated/TokenMgrError
@0.10.0
+#getMessage()Ljava/lang/String;
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#<init>(ZIIILjava/lang/String;CI)V
@1.14.0
-###org/apache/jute/compiler/generated/TokenMgrError

+###org/apache/zookeeper/AsyncCallback$ACLCallback
@0.10.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/util/List;Lorg/apache/zookeeper/data/Stat;)V
@1.14.0
-###org/apache/zookeeper/AsyncCallback$ACLCallback

+###org/apache/zookeeper/AsyncCallback$Children2Callback
@0.10.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/util/List;Lorg/apache/zookeeper/data/Stat;)V
@1.14.0
-###org/apache/zookeeper/AsyncCallback$Children2Callback

+###org/apache/zookeeper/AsyncCallback$ChildrenCallback
@0.10.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/util/List;)V
@1.14.0
-###org/apache/zookeeper/AsyncCallback$ChildrenCallback

+###org/apache/zookeeper/AsyncCallback$DataCallback
@0.10.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;[BLorg/apache/zookeeper/data/Stat;)V
@1.14.0
-###org/apache/zookeeper/AsyncCallback$DataCallback

+###org/apache/zookeeper/AsyncCallback$StatCallback
@0.10.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/data/Stat;)V
@1.14.0
-###org/apache/zookeeper/AsyncCallback$StatCallback

+###org/apache/zookeeper/AsyncCallback$StringCallback
@0.10.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/AsyncCallback$StringCallback

+###org/apache/zookeeper/AsyncCallback$VoidCallback
@0.10.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;)V
@1.14.0
-###org/apache/zookeeper/AsyncCallback$VoidCallback

+###org/apache/zookeeper/AsyncCallback
@0.10.0
@1.14.0
-###org/apache/zookeeper/AsyncCallback

+###org/apache/zookeeper/ClientCnxn
@0.10.0
+#getSessionId()J
+#getSessionPasswd()[B
+#getSessionTimeout()I
+#toString()Ljava/lang/String;
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/client/HostProvider;ILorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/ClientWatchManager;Lorg/apache/zookeeper/ClientCnxnSocket;Z)V
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/client/HostProvider;ILorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/ClientWatchManager;Lorg/apache/zookeeper/ClientCnxnSocket;J[BZ)V
+#getDisableAutoResetWatch()Z
+#setDisableAutoResetWatch(Z)V
+#start()V
+#getLastZxid()J
+#disconnect()V
+#close()V
+#getXid()I
+#submitRequest(Lorg/apache/zookeeper/proto/RequestHeader;Lorg/apache/jute/Record;Lorg/apache/jute/Record;Lorg/apache/zookeeper/ZooKeeper$WatchRegistration;)Lorg/apache/zookeeper/proto/ReplyHeader;
+#enableWrite()V
+#sendPacket(Lorg/apache/jute/Record;Lorg/apache/jute/Record;Lorg/apache/zookeeper/AsyncCallback;I)V
+#addAuthInfo(Ljava/lang/String;[B)V
@1.14.0
-###org/apache/zookeeper/ClientCnxn

+###org/apache/zookeeper/ClientCnxnSocketNIO
@0.10.0
+#disableWrite()V
@1.14.0
-###org/apache/zookeeper/ClientCnxnSocketNIO

+###org/apache/zookeeper/ClientWatchManager
@0.10.0
+#materialize(Lorg/apache/zookeeper/Watcher$Event$KeeperState;Lorg/apache/zookeeper/Watcher$Event$EventType;Ljava/lang/String;)Ljava/util/Set;
@1.14.0
-###org/apache/zookeeper/ClientWatchManager

+###org/apache/zookeeper/CreateMode
@0.10.0
+#values()[Lorg/apache/zookeeper/CreateMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/CreateMode;
+#isEphemeral()Z
+#isSequential()Z
+#toFlag()I
+#fromFlag(I)Lorg/apache/zookeeper/CreateMode;
@1.14.0
-###org/apache/zookeeper/CreateMode

+###org/apache/zookeeper/Environment$Entry
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/Environment$Entry

+###org/apache/zookeeper/Environment
@0.10.0
+#<init>()V
+#list()Ljava/util/List;
+#logEnv(Ljava/lang/String;Lorg/slf4j/Logger;)V
@1.14.0
-###org/apache/zookeeper/Environment

+###org/apache/zookeeper/KeeperException$APIErrorException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$APIErrorException

+###org/apache/zookeeper/KeeperException$AuthFailedException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$AuthFailedException

+###org/apache/zookeeper/KeeperException$BadArgumentsException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/KeeperException$BadArgumentsException

+###org/apache/zookeeper/KeeperException$BadVersionException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/KeeperException$BadVersionException

+###org/apache/zookeeper/KeeperException$Code
@0.10.0
+#values()[Lorg/apache/zookeeper/KeeperException$Code;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/KeeperException$Code;
+#intValue()I
+#get(I)Lorg/apache/zookeeper/KeeperException$Code;
@1.14.0
-###org/apache/zookeeper/KeeperException$Code

+###org/apache/zookeeper/KeeperException$CodeDeprecated
@0.10.0
@1.14.0
-###org/apache/zookeeper/KeeperException$CodeDeprecated

+###org/apache/zookeeper/KeeperException$ConnectionLossException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$ConnectionLossException

+###org/apache/zookeeper/KeeperException$DataInconsistencyException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$DataInconsistencyException

+###org/apache/zookeeper/KeeperException$InvalidACLException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/KeeperException$InvalidACLException

+###org/apache/zookeeper/KeeperException$InvalidCallbackException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$InvalidCallbackException

+###org/apache/zookeeper/KeeperException$MarshallingErrorException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$MarshallingErrorException

+###org/apache/zookeeper/KeeperException$NoAuthException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$NoAuthException

+###org/apache/zookeeper/KeeperException$NoChildrenForEphemeralsException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/KeeperException$NoChildrenForEphemeralsException

+###org/apache/zookeeper/KeeperException$NoNodeException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/KeeperException$NoNodeException

+###org/apache/zookeeper/KeeperException$NodeExistsException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/KeeperException$NodeExistsException

+###org/apache/zookeeper/KeeperException$NotEmptyException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/KeeperException$NotEmptyException

+###org/apache/zookeeper/KeeperException$NotReadOnlyException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$NotReadOnlyException

+###org/apache/zookeeper/KeeperException$OperationTimeoutException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$OperationTimeoutException

+###org/apache/zookeeper/KeeperException$RuntimeInconsistencyException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$RuntimeInconsistencyException

+###org/apache/zookeeper/KeeperException$SessionExpiredException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$SessionExpiredException

+###org/apache/zookeeper/KeeperException$SessionMovedException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$SessionMovedException

+###org/apache/zookeeper/KeeperException$SystemErrorException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$SystemErrorException

+###org/apache/zookeeper/KeeperException$UnimplementedException
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/KeeperException$UnimplementedException

+###org/apache/zookeeper/KeeperException
@0.10.0
+#create(Lorg/apache/zookeeper/KeeperException$Code;Ljava/lang/String;)Lorg/apache/zookeeper/KeeperException;
+#create(ILjava/lang/String;)Lorg/apache/zookeeper/KeeperException;[deprecated]
+#create(I)Lorg/apache/zookeeper/KeeperException;[deprecated]
+#create(Lorg/apache/zookeeper/KeeperException$Code;)Lorg/apache/zookeeper/KeeperException;
+#setCode(I)V[deprecated]
+#<init>(Lorg/apache/zookeeper/KeeperException$Code;)V
+#getCode()I[deprecated]
+#code()Lorg/apache/zookeeper/KeeperException$Code;
+#getPath()Ljava/lang/String;
+#getMessage()Ljava/lang/String;
+#getResults()Ljava/util/List;
@1.14.0
-###org/apache/zookeeper/KeeperException

+###org/apache/zookeeper/Login
@0.10.0
+#<init>(Ljava/lang/String;Ljavax/security/auth/callback/CallbackHandler;)V
+#startThreadIfNeeded()V
+#shutdown()V
+#getSubject()Ljavax/security/auth/Subject;
+#getLoginContextName()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/Login

+###org/apache/zookeeper/MultiResponse
@0.10.0
+#<init>()V
+#add(Lorg/apache/zookeeper/OpResult;)V
+#iterator()Ljava/util/Iterator;
+#size()I
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#getResultList()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/zookeeper/MultiResponse

+###org/apache/zookeeper/MultiTransactionRecord
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#iterator()Ljava/util/Iterator;
+#add(Lorg/apache/zookeeper/Op;)V
+#size()I
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/zookeeper/MultiTransactionRecord

+###org/apache/zookeeper/Op$Check
@0.10.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;
@1.14.0
-###org/apache/zookeeper/Op$Check

+###org/apache/zookeeper/Op$Create
@0.10.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;
@1.14.0
-###org/apache/zookeeper/Op$Create

+###org/apache/zookeeper/Op$Delete
@0.10.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;
@1.14.0
-###org/apache/zookeeper/Op$Delete

+###org/apache/zookeeper/Op$SetData
@0.10.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;
@1.14.0
-###org/apache/zookeeper/Op$SetData

+###org/apache/zookeeper/Op
@0.10.0
+#create(Ljava/lang/String;[BLjava/util/List;I)Lorg/apache/zookeeper/Op;
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Lorg/apache/zookeeper/Op;
+#delete(Ljava/lang/String;I)Lorg/apache/zookeeper/Op;
+#setData(Ljava/lang/String;[BI)Lorg/apache/zookeeper/Op;
+#check(Ljava/lang/String;I)Lorg/apache/zookeeper/Op;
+#getType()I
+#getPath()Ljava/lang/String;
+#toRequestRecord()Lorg/apache/jute/Record;
@1.14.0
-###org/apache/zookeeper/Op

+###org/apache/zookeeper/OpResult$CheckResult
@0.10.0
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/zookeeper/OpResult$CheckResult

+###org/apache/zookeeper/OpResult$CreateResult
@0.10.0
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/zookeeper/OpResult$CreateResult

+###org/apache/zookeeper/OpResult$DeleteResult
@0.10.0
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/zookeeper/OpResult$DeleteResult

+###org/apache/zookeeper/OpResult$ErrorResult
@0.10.0
+#<init>(I)V
+#getErr()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/zookeeper/OpResult$ErrorResult

+###org/apache/zookeeper/OpResult$SetDataResult
@0.10.0
+#<init>(Lorg/apache/zookeeper/data/Stat;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/zookeeper/OpResult$SetDataResult

+###org/apache/zookeeper/OpResult
@0.10.0
+#getType()I
@1.14.0
-###org/apache/zookeeper/OpResult

+###org/apache/zookeeper/Quotas
@0.10.0
+#<init>()V
+#quotaPath(Ljava/lang/String;)Ljava/lang/String;
+#statPath(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/Quotas

+###org/apache/zookeeper/ServerAdminClient
@0.10.0
+#<init>()V
+#ruok(Ljava/lang/String;I)V
+#dump(Ljava/lang/String;I)V
+#stat(Ljava/lang/String;I)V
+#kill(Ljava/lang/String;I)V
+#setTraceMask(Ljava/lang/String;ILjava/lang/String;)V
+#getTraceMask(Ljava/lang/String;I)V
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/ServerAdminClient

+###org/apache/zookeeper/Shell$ExitCodeException
@0.10.0
+#<init>(ILjava/lang/String;)V
+#getExitCode()I
@1.14.0
-###org/apache/zookeeper/Shell$ExitCodeException

+###org/apache/zookeeper/Shell$ShellCommandExecutor
@0.10.0
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/lang/String;Ljava/io/File;)V
+#<init>([Ljava/lang/String;Ljava/io/File;Ljava/util/Map;)V
+#<init>([Ljava/lang/String;Ljava/io/File;Ljava/util/Map;J)V
+#execute()V
+#getOutput()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/Shell$ShellCommandExecutor

+###org/apache/zookeeper/Shell
@0.10.0
+#getGroupsCommand()[Ljava/lang/String;
+#getGroupsForUserCommand(Ljava/lang/String;)[Ljava/lang/String;
+#getGET_PERMISSION_COMMAND()[Ljava/lang/String;
+#getUlimitMemoryCommand(I)[Ljava/lang/String;
+#<init>()V
+#<init>(J)V
+#getProcess()Ljava/lang/Process;
+#getExitCode()I
+#isTimedOut()Z
+#execCommand([Ljava/lang/String;)Ljava/lang/String;
+#execCommand(Ljava/util/Map;[Ljava/lang/String;J)Ljava/lang/String;
+#execCommand(Ljava/util/Map;[Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/Shell

+###org/apache/zookeeper/StatsTrack
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getCount()I
+#setCount(I)V
+#getBytes()J
+#setBytes(J)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/StatsTrack

+###org/apache/zookeeper/Transaction
@0.10.0
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Lorg/apache/zookeeper/Transaction;
+#delete(Ljava/lang/String;I)Lorg/apache/zookeeper/Transaction;
+#check(Ljava/lang/String;I)Lorg/apache/zookeeper/Transaction;
+#setData(Ljava/lang/String;[BI)Lorg/apache/zookeeper/Transaction;
+#commit()Ljava/util/List;
@1.14.0
-###org/apache/zookeeper/Transaction

+###org/apache/zookeeper/Version
@0.10.0
+#<init>()V
+#getRevision()I
+#getBuildDate()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getVersionRevision()Ljava/lang/String;
+#getFullVersion()Ljava/lang/String;
+#printUsage()V
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/Version

+###org/apache/zookeeper/WatchedEvent
@0.10.0
+#<init>(Lorg/apache/zookeeper/Watcher$Event$EventType;Lorg/apache/zookeeper/Watcher$Event$KeeperState;Ljava/lang/String;)V
+#<init>(Lorg/apache/zookeeper/proto/WatcherEvent;)V
+#getState()Lorg/apache/zookeeper/Watcher$Event$KeeperState;
+#getType()Lorg/apache/zookeeper/Watcher$Event$EventType;
+#getPath()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getWrapper()Lorg/apache/zookeeper/proto/WatcherEvent;
@1.14.0
-###org/apache/zookeeper/WatchedEvent

+###org/apache/zookeeper/Watcher$Event$EventType
@0.10.0
+#values()[Lorg/apache/zookeeper/Watcher$Event$EventType;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/Watcher$Event$EventType;
+#getIntValue()I
+#fromInt(I)Lorg/apache/zookeeper/Watcher$Event$EventType;
@1.14.0
-###org/apache/zookeeper/Watcher$Event$EventType

+###org/apache/zookeeper/Watcher$Event$KeeperState
@0.10.0
+#values()[Lorg/apache/zookeeper/Watcher$Event$KeeperState;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/Watcher$Event$KeeperState;
+#getIntValue()I
+#fromInt(I)Lorg/apache/zookeeper/Watcher$Event$KeeperState;
@1.14.0
-###org/apache/zookeeper/Watcher$Event$KeeperState

+###org/apache/zookeeper/Watcher$Event
@0.10.0
@1.14.0
-###org/apache/zookeeper/Watcher$Event

+###org/apache/zookeeper/Watcher
@0.10.0
+#process(Lorg/apache/zookeeper/WatchedEvent;)V
@1.14.0
-###org/apache/zookeeper/Watcher

+###org/apache/zookeeper/ZKUtil
@0.10.0
+#<init>()V
+#deleteRecursive(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;)V
+#deleteRecursive(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
+#listSubTreeBFS(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;)Ljava/util/List;
@1.14.0
-###org/apache/zookeeper/ZKUtil

+###org/apache/zookeeper/ZooDefs$Ids
@0.10.0
@1.14.0
-###org/apache/zookeeper/ZooDefs$Ids

+###org/apache/zookeeper/ZooDefs$OpCode
@0.10.0
@1.14.0
-###org/apache/zookeeper/ZooDefs$OpCode

+###org/apache/zookeeper/ZooDefs$Perms
@0.10.0
@1.14.0
-###org/apache/zookeeper/ZooDefs$Perms

+###org/apache/zookeeper/ZooDefs
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/ZooDefs

+###org/apache/zookeeper/ZooKeeper$States
@0.10.0
+#values()[Lorg/apache/zookeeper/ZooKeeper$States;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/ZooKeeper$States;
+#isAlive()Z
+#isConnected()Z
@1.14.0
-###org/apache/zookeeper/ZooKeeper$States

+###org/apache/zookeeper/ZooKeeper
@0.10.0
+#getSaslClient()Lorg/apache/zookeeper/client/ZooKeeperSaslClient;
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;Z)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;J[B)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;J[BZ)V
+#getSessionId()J
+#getSessionPasswd()[B
+#getSessionTimeout()I
+#addAuthInfo(Ljava/lang/String;[B)V
+#register(Lorg/apache/zookeeper/Watcher;)V
+#close()V
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;Lorg/apache/zookeeper/AsyncCallback$StringCallback;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;I)V
+#multi(Ljava/lang/Iterable;)Ljava/util/List;
+#transaction()Lorg/apache/zookeeper/Transaction;
+#delete(Ljava/lang/String;ILorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
+#exists(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Lorg/apache/zookeeper/data/Stat;
+#exists(Ljava/lang/String;Z)Lorg/apache/zookeeper/data/Stat;
+#exists(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
+#exists(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
+#getData(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/data/Stat;)[B
+#getData(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B
+#getData(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
+#getData(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
+#setData(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;
+#setData(Ljava/lang/String;[BILorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
+#getACL(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#getACL(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/AsyncCallback$ACLCallback;Ljava/lang/Object;)V
+#setACL(Ljava/lang/String;Ljava/util/List;I)Lorg/apache/zookeeper/data/Stat;
+#setACL(Ljava/lang/String;Ljava/util/List;ILorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Ljava/util/List;
+#getChildren(Ljava/lang/String;Z)Ljava/util/List;
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$ChildrenCallback;Ljava/lang/Object;)V
+#getChildren(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$ChildrenCallback;Ljava/lang/Object;)V
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#getChildren(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$Children2Callback;Ljava/lang/Object;)V
+#getChildren(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$Children2Callback;Ljava/lang/Object;)V
+#sync(Ljava/lang/String;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
+#getState()Lorg/apache/zookeeper/ZooKeeper$States;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/ZooKeeper

+###org/apache/zookeeper/ZooKeeperMain
@0.10.0
+#getPrintWatches()Z
+#getCommands()Ljava/util/List;
+#printMessage(Ljava/lang/String;)V
+#main([Ljava/lang/String;)V
+#<init>([Ljava/lang/String;)V
+#<init>(Lorg/apache/zookeeper/ZooKeeper;)V
+#executeLine(Ljava/lang/String;)V
+#delQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;ZZ)Z
+#createQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;JI)Z
@1.14.0
-###org/apache/zookeeper/ZooKeeperMain

+###org/apache/zookeeper/client/ConnectStringParser
@0.10.0
+#<init>(Ljava/lang/String;)V
+#getChrootPath()Ljava/lang/String;
+#getServerAddresses()Ljava/util/ArrayList;
@1.14.0
-###org/apache/zookeeper/client/ConnectStringParser

+###org/apache/zookeeper/client/FourLetterWordMain
@0.10.0
+#<init>()V
+#send4LetterWord(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/client/FourLetterWordMain

+###org/apache/zookeeper/client/HostProvider
@0.10.0
+#size()I
+#next(J)Ljava/net/InetSocketAddress;
+#onConnected()V
@1.14.0
-###org/apache/zookeeper/client/HostProvider

+###org/apache/zookeeper/client/StaticHostProvider
@0.10.0
+#<init>(Ljava/util/Collection;)V
+#size()I
+#next(J)Ljava/net/InetSocketAddress;
+#onConnected()V
@1.14.0
-###org/apache/zookeeper/client/StaticHostProvider

+###org/apache/zookeeper/client/ZooKeeperSaslClient$ClientCallbackHandler
@0.10.0
+#<init>(Ljava/lang/String;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
@1.14.0
-###org/apache/zookeeper/client/ZooKeeperSaslClient$ClientCallbackHandler

+###org/apache/zookeeper/client/ZooKeeperSaslClient$SaslState
@0.10.0
+#values()[Lorg/apache/zookeeper/client/ZooKeeperSaslClient$SaslState;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/client/ZooKeeperSaslClient$SaslState;
@1.14.0
-###org/apache/zookeeper/client/ZooKeeperSaslClient$SaslState

+###org/apache/zookeeper/client/ZooKeeperSaslClient$ServerSaslResponseCallback
@0.10.0
+#<init>()V
+#processResult(ILjava/lang/String;Ljava/lang/Object;[BLorg/apache/zookeeper/data/Stat;)V
@1.14.0
-###org/apache/zookeeper/client/ZooKeeperSaslClient$ServerSaslResponseCallback

+###org/apache/zookeeper/client/ZooKeeperSaslClient
@0.10.0
+#isEnabled()Z
+#getSaslState()Lorg/apache/zookeeper/client/ZooKeeperSaslClient$SaslState;
+#getLoginContext()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#getConfigStatus()Ljava/lang/String;
+#isComplete()Z
+#isFailed()Z
+#respondToServer([BLorg/apache/zookeeper/ClientCnxn;)V
+#getKeeperState()Lorg/apache/zookeeper/Watcher$Event$KeeperState;
+#initialize(Lorg/apache/zookeeper/ClientCnxn;)V
+#clientTunneledAuthenticationInProgress()Z
@1.14.0
-###org/apache/zookeeper/client/ZooKeeperSaslClient

+###org/apache/zookeeper/common/AtomicFileOutputStream
@0.10.0
+#<init>(Ljava/io/File;)V
+#close()V
+#abort()V
@1.14.0
-###org/apache/zookeeper/common/AtomicFileOutputStream

+###org/apache/zookeeper/common/IOUtils
@0.10.0
+#<init>()V
+#closeStream(Ljava/io/Closeable;)V
+#cleanup(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;IZ)V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;I)V
@1.14.0
-###org/apache/zookeeper/common/IOUtils

+###org/apache/zookeeper/common/PathTrie
@0.10.0
+#<init>()V
+#addPath(Ljava/lang/String;)V
+#deletePath(Ljava/lang/String;)V
+#findMaxPrefix(Ljava/lang/String;)Ljava/lang/String;
+#clear()V
@1.14.0
-###org/apache/zookeeper/common/PathTrie

+###org/apache/zookeeper/common/PathUtils
@0.10.0
+#<init>()V
+#validatePath(Ljava/lang/String;Z)V
+#validatePath(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/common/PathUtils

+###org/apache/zookeeper/data/ACL
@0.10.0
+#<init>()V
+#<init>(ILorg/apache/zookeeper/data/Id;)V
+#getPerms()I
+#setPerms(I)V
+#getId()Lorg/apache/zookeeper/data/Id;
+#setId(Lorg/apache/zookeeper/data/Id;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/data/ACL

+###org/apache/zookeeper/data/Id
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getScheme()Ljava/lang/String;
+#setScheme(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/data/Id

+###org/apache/zookeeper/data/Stat
@0.10.0
+#<init>()V
+#<init>(JJJJIIIJIIJ)V
+#getCzxid()J
+#setCzxid(J)V
+#getMzxid()J
+#setMzxid(J)V
+#getCtime()J
+#setCtime(J)V
+#getMtime()J
+#setMtime(J)V
+#getVersion()I
+#setVersion(I)V
+#getCversion()I
+#setCversion(I)V
+#getAversion()I
+#setAversion(I)V
+#getEphemeralOwner()J
+#setEphemeralOwner(J)V
+#getDataLength()I
+#setDataLength(I)V
+#getNumChildren()I
+#setNumChildren(I)V
+#getPzxid()J
+#setPzxid(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/data/Stat

+###org/apache/zookeeper/data/StatPersisted
@0.10.0
+#<init>()V
+#<init>(JJJJIIIJJ)V
+#getCzxid()J
+#setCzxid(J)V
+#getMzxid()J
+#setMzxid(J)V
+#getCtime()J
+#setCtime(J)V
+#getMtime()J
+#setMtime(J)V
+#getVersion()I
+#setVersion(I)V
+#getCversion()I
+#setCversion(I)V
+#getAversion()I
+#setAversion(I)V
+#getEphemeralOwner()J
+#setEphemeralOwner(J)V
+#getPzxid()J
+#setPzxid(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/data/StatPersisted

+###org/apache/zookeeper/data/StatPersistedV1
@0.10.0
+#<init>()V
+#<init>(JJJJIIIJ)V
+#getCzxid()J
+#setCzxid(J)V
+#getMzxid()J
+#setMzxid(J)V
+#getCtime()J
+#setCtime(J)V
+#getMtime()J
+#setMtime(J)V
+#getVersion()I
+#setVersion(I)V
+#getCversion()I
+#setCversion(I)V
+#getAversion()I
+#setAversion(I)V
+#getEphemeralOwner()J
+#setEphemeralOwner(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/data/StatPersistedV1

+###org/apache/zookeeper/jmx/CommonNames
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/jmx/CommonNames

+###org/apache/zookeeper/jmx/MBeanRegistry
@0.10.0
+#getInstance()Lorg/apache/zookeeper/jmx/MBeanRegistry;
+#<init>()V
+#getPlatformMBeanServer()Ljavax/management/MBeanServer;
+#register(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
+#unregister(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
+#unregisterAll()V
+#makeFullPath(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/jmx/MBeanRegistry

+###org/apache/zookeeper/jmx/ManagedUtil
@0.10.0
+#<init>()V
+#registerLog4jMBeans()V
@1.14.0
-###org/apache/zookeeper/jmx/ManagedUtil

+###org/apache/zookeeper/jmx/ZKMBeanInfo
@0.10.0
+#getName()Ljava/lang/String;
+#isHidden()Z
@1.14.0
-###org/apache/zookeeper/jmx/ZKMBeanInfo

+###org/apache/zookeeper/proto/AuthPacket
@0.10.0
+#<init>()V
+#<init>(ILjava/lang/String;[B)V
+#getType()I
+#setType(I)V
+#getScheme()Ljava/lang/String;
+#setScheme(Ljava/lang/String;)V
+#getAuth()[B
+#setAuth([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/AuthPacket

+###org/apache/zookeeper/proto/CheckVersionRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/CheckVersionRequest

+###org/apache/zookeeper/proto/ConnectRequest
@0.10.0
+#<init>()V
+#<init>(IJIJ[B)V
+#getProtocolVersion()I
+#setProtocolVersion(I)V
+#getLastZxidSeen()J
+#setLastZxidSeen(J)V
+#getTimeOut()I
+#setTimeOut(I)V
+#getSessionId()J
+#setSessionId(J)V
+#getPasswd()[B
+#setPasswd([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/ConnectRequest

+###org/apache/zookeeper/proto/ConnectResponse
@0.10.0
+#<init>()V
+#<init>(IIJ[B)V
+#getProtocolVersion()I
+#setProtocolVersion(I)V
+#getTimeOut()I
+#setTimeOut(I)V
+#getSessionId()J
+#setSessionId(J)V
+#getPasswd()[B
+#setPasswd([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/ConnectResponse

+###org/apache/zookeeper/proto/CreateRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;[BLjava/util/List;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getFlags()I
+#setFlags(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/CreateRequest

+###org/apache/zookeeper/proto/CreateResponse
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/CreateResponse

+###org/apache/zookeeper/proto/DeleteRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/DeleteRequest

+###org/apache/zookeeper/proto/ErrorResponse
@0.10.0
+#<init>()V
+#<init>(I)V
+#getErr()I
+#setErr(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/ErrorResponse

+###org/apache/zookeeper/proto/ExistsRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getWatch()Z
+#setWatch(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/ExistsRequest

+###org/apache/zookeeper/proto/ExistsResponse
@0.10.0
+#<init>()V
+#<init>(Lorg/apache/zookeeper/data/Stat;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/ExistsResponse

+###org/apache/zookeeper/proto/GetACLRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetACLRequest

+###org/apache/zookeeper/proto/GetACLResponse
@0.10.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/zookeeper/data/Stat;)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetACLResponse

+###org/apache/zookeeper/proto/GetChildren2Request
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getWatch()Z
+#setWatch(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetChildren2Request

+###org/apache/zookeeper/proto/GetChildren2Response
@0.10.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/zookeeper/data/Stat;)V
+#getChildren()Ljava/util/List;
+#setChildren(Ljava/util/List;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetChildren2Response

+###org/apache/zookeeper/proto/GetChildrenRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getWatch()Z
+#setWatch(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetChildrenRequest

+###org/apache/zookeeper/proto/GetChildrenResponse
@0.10.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#getChildren()Ljava/util/List;
+#setChildren(Ljava/util/List;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetChildrenResponse

+###org/apache/zookeeper/proto/GetDataRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getWatch()Z
+#setWatch(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetDataRequest

+###org/apache/zookeeper/proto/GetDataResponse
@0.10.0
+#<init>()V
+#<init>([BLorg/apache/zookeeper/data/Stat;)V
+#getData()[B
+#setData([B)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetDataResponse

+###org/apache/zookeeper/proto/GetMaxChildrenRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetMaxChildrenRequest

+###org/apache/zookeeper/proto/GetMaxChildrenResponse
@0.10.0
+#<init>()V
+#<init>(I)V
+#getMax()I
+#setMax(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetMaxChildrenResponse

+###org/apache/zookeeper/proto/GetSASLRequest
@0.10.0
+#<init>()V
+#<init>([B)V
+#getToken()[B
+#setToken([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/GetSASLRequest

+###org/apache/zookeeper/proto/MultiHeader
@0.10.0
+#<init>()V
+#<init>(IZI)V
+#getType()I
+#setType(I)V
+#getDone()Z
+#setDone(Z)V
+#getErr()I
+#setErr(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/MultiHeader

+###org/apache/zookeeper/proto/ReplyHeader
@0.10.0
+#<init>()V
+#<init>(IJI)V
+#getXid()I
+#setXid(I)V
+#getZxid()J
+#setZxid(J)V
+#getErr()I
+#setErr(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/ReplyHeader

+###org/apache/zookeeper/proto/RequestHeader
@0.10.0
+#<init>()V
+#<init>(II)V
+#getXid()I
+#setXid(I)V
+#getType()I
+#setType(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/RequestHeader

+###org/apache/zookeeper/proto/SetACLRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/util/List;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/SetACLRequest

+###org/apache/zookeeper/proto/SetACLResponse
@0.10.0
+#<init>()V
+#<init>(Lorg/apache/zookeeper/data/Stat;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/SetACLResponse

+###org/apache/zookeeper/proto/SetDataRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;[BI)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/SetDataRequest

+###org/apache/zookeeper/proto/SetDataResponse
@0.10.0
+#<init>()V
+#<init>(Lorg/apache/zookeeper/data/Stat;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/SetDataResponse

+###org/apache/zookeeper/proto/SetMaxChildrenRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getMax()I
+#setMax(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/SetMaxChildrenRequest

+###org/apache/zookeeper/proto/SetSASLRequest
@0.10.0
+#<init>()V
+#<init>([B)V
+#getToken()[B
+#setToken([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/SetSASLRequest

+###org/apache/zookeeper/proto/SetSASLResponse
@0.10.0
+#<init>()V
+#<init>([B)V
+#getToken()[B
+#setToken([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/SetSASLResponse

+###org/apache/zookeeper/proto/SetWatches
@0.10.0
+#<init>()V
+#<init>(JLjava/util/List;Ljava/util/List;Ljava/util/List;)V
+#getRelativeZxid()J
+#setRelativeZxid(J)V
+#getDataWatches()Ljava/util/List;
+#setDataWatches(Ljava/util/List;)V
+#getExistWatches()Ljava/util/List;
+#setExistWatches(Ljava/util/List;)V
+#getChildWatches()Ljava/util/List;
+#setChildWatches(Ljava/util/List;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/SetWatches

+###org/apache/zookeeper/proto/SyncRequest
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/SyncRequest

+###org/apache/zookeeper/proto/SyncResponse
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/SyncResponse

+###org/apache/zookeeper/proto/WatcherEvent
@0.10.0
+#<init>()V
+#<init>(IILjava/lang/String;)V
+#getType()I
+#setType(I)V
+#getState()I
+#setState(I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/proto/WatcherEvent

+###org/apache/zookeeper/server/ByteBufferInputStream
@0.10.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#read()I
+#available()I
+#read([BII)I
+#read([B)I
+#skip(J)J
+#byteBuffer2Record(Ljava/nio/ByteBuffer;Lorg/apache/jute/Record;)V
@1.14.0
-###org/apache/zookeeper/server/ByteBufferInputStream

+###org/apache/zookeeper/server/ByteBufferOutputStream
@0.10.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#record2ByteBuffer(Lorg/apache/jute/Record;Ljava/nio/ByteBuffer;)V
@1.14.0
-###org/apache/zookeeper/server/ByteBufferOutputStream

+###org/apache/zookeeper/server/ConnectionBean
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/ServerCnxn;Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getSessionId()Ljava/lang/String;
+#getSourceIP()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getEphemeralNodes()[Ljava/lang/String;
+#getStartedTime()Ljava/lang/String;
+#terminateSession()V
+#terminateConnection()V
+#resetCounters()V
+#toString()Ljava/lang/String;
+#getOutstandingRequests()J
+#getPacketsReceived()J
+#getPacketsSent()J
+#getSessionTimeout()I
+#getMinLatency()J
+#getAvgLatency()J
+#getMaxLatency()J
+#getLastOperation()Ljava/lang/String;
+#getLastCxid()Ljava/lang/String;
+#getLastZxid()Ljava/lang/String;
+#getLastResponseTime()Ljava/lang/String;
+#getLastLatency()J
@1.14.0
-###org/apache/zookeeper/server/ConnectionBean

+###org/apache/zookeeper/server/ConnectionMXBean
@0.10.0
+#getSourceIP()Ljava/lang/String;
+#getSessionId()Ljava/lang/String;
+#getStartedTime()Ljava/lang/String;
+#getEphemeralNodes()[Ljava/lang/String;
+#getPacketsReceived()J
+#getPacketsSent()J
+#getOutstandingRequests()J
+#getSessionTimeout()I
+#terminateSession()V
+#terminateConnection()V
+#getMinLatency()J
+#getAvgLatency()J
+#getMaxLatency()J
+#getLastOperation()Ljava/lang/String;
+#getLastCxid()Ljava/lang/String;
+#getLastZxid()Ljava/lang/String;
+#getLastResponseTime()Ljava/lang/String;
+#getLastLatency()J
+#resetCounters()V
@1.14.0
-###org/apache/zookeeper/server/ConnectionMXBean

+###org/apache/zookeeper/server/DataNode
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/DataNode;[BLjava/lang/Long;Lorg/apache/zookeeper/data/StatPersisted;)V
+#addChild(Ljava/lang/String;)Z
+#removeChild(Ljava/lang/String;)Z
+#setChildren(Ljava/util/HashSet;)V
+#getChildren()Ljava/util/Set;
+#copyStat(Lorg/apache/zookeeper/data/Stat;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/DataNode

+###org/apache/zookeeper/server/DataTree$ProcessTxnResult
@0.10.0
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/zookeeper/server/DataTree$ProcessTxnResult

+###org/apache/zookeeper/server/DataTree
@0.10.0
+#getEphemerals(J)Ljava/util/HashSet;
+#getEphemeralsMap()Ljava/util/Map;
+#convertAcls(Ljava/util/List;)Ljava/lang/Long;
+#convertLong(Ljava/lang/Long;)Ljava/util/List;
+#getSessions()Ljava/util/Collection;
+#addDataNode(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)V
+#getNode(Ljava/lang/String;)Lorg/apache/zookeeper/server/DataNode;
+#getNodeCount()I
+#getWatchCount()I
+#getEphemeralsCount()I
+#approximateDataSize()J
+#<init>()V
+#copyStatPersisted(Lorg/apache/zookeeper/data/StatPersisted;Lorg/apache/zookeeper/data/StatPersisted;)V
+#copyStat(Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/data/Stat;)V
+#updateCount(Ljava/lang/String;I)V
+#updateBytes(Ljava/lang/String;J)V
+#createNode(Ljava/lang/String;[BLjava/util/List;JIJJ)Ljava/lang/String;
+#deleteNode(Ljava/lang/String;J)V
+#setData(Ljava/lang/String;[BIJJ)Lorg/apache/zookeeper/data/Stat;
+#getMaxPrefixWithQuota(Ljava/lang/String;)Ljava/lang/String;
+#getData(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)[B
+#statNode(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Lorg/apache/zookeeper/data/Stat;
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)Ljava/util/List;
+#setACL(Ljava/lang/String;Ljava/util/List;I)Lorg/apache/zookeeper/data/Stat;
+#getACL(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#dumpWatchesSummary(Ljava/io/PrintWriter;)V
+#dumpWatches(Ljava/io/PrintWriter;Z)V
+#dumpEphemerals(Ljava/io/PrintWriter;)V
+#removeCnxn(Lorg/apache/zookeeper/Watcher;)V
+#clear()V
+#setWatches(JLjava/util/List;Ljava/util/List;Ljava/util/List;Lorg/apache/zookeeper/Watcher;)V
+#setCversionPzxid(Ljava/lang/String;IJ)V
@1.14.0
-###org/apache/zookeeper/server/DataTree

+###org/apache/zookeeper/server/DataTreeBean
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/DataTree;)V
+#getNodeCount()I
+#approximateDataSize()J
+#countEphemerals()I
+#getWatchCount()I
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getLastZxid()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/DataTreeBean

+###org/apache/zookeeper/server/DataTreeMXBean
@0.10.0
+#getNodeCount()I
+#getLastZxid()Ljava/lang/String;
+#getWatchCount()I
+#approximateDataSize()J
+#countEphemerals()I
@1.14.0
-###org/apache/zookeeper/server/DataTreeMXBean

+###org/apache/zookeeper/server/DatadirCleanupManager$PurgeTaskStatus
@0.10.0
+#values()[Lorg/apache/zookeeper/server/DatadirCleanupManager$PurgeTaskStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/DatadirCleanupManager$PurgeTaskStatus;
@1.14.0
-###org/apache/zookeeper/server/DatadirCleanupManager$PurgeTaskStatus

+###org/apache/zookeeper/server/DatadirCleanupManager
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;II)V
+#start()V
+#shutdown()V
+#getPurgeTaskStatus()Lorg/apache/zookeeper/server/DatadirCleanupManager$PurgeTaskStatus;
+#getSnapDir()Ljava/lang/String;
+#getDataLogDir()Ljava/lang/String;
+#getPurgeInterval()I
+#getSnapRetainCount()I
@1.14.0
-###org/apache/zookeeper/server/DatadirCleanupManager

+###org/apache/zookeeper/server/FinalRequestProcessor
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/FinalRequestProcessor

+###org/apache/zookeeper/server/LogFormatter
@0.10.0
+#<init>()V
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/LogFormatter

+###org/apache/zookeeper/server/NIOServerCnxn
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SelectionKey;Lorg/apache/zookeeper/server/NIOServerCnxnFactory;)V
+#sendCloseSession()V
+#sendBuffer(Ljava/nio/ByteBuffer;)V
+#disableRecv()V
+#enableRecv()V
+#getOutstandingRequests()J
+#getSessionTimeout()I
+#toString()Ljava/lang/String;
+#close()V
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)V
+#process(Lorg/apache/zookeeper/WatchedEvent;)V
+#getSessionId()J
+#setSessionId(J)V
+#setSessionTimeout(I)V
+#getInterestOps()I
+#getRemoteSocketAddress()Ljava/net/InetSocketAddress;
@1.14.0
-###org/apache/zookeeper/server/NIOServerCnxn

+###org/apache/zookeeper/server/NIOServerCnxnFactory
@0.10.0
+#<init>()V
+#configure(Ljava/net/InetSocketAddress;I)V
+#getMaxClientCnxnsPerHost()I
+#setMaxClientCnxnsPerHost(I)V
+#start()V
+#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getLocalPort()I
+#run()V
+#closeAll()V
+#shutdown()V
+#closeSession(J)V
+#join()V
+#getConnections()Ljava/lang/Iterable;
@1.14.0
-###org/apache/zookeeper/server/NIOServerCnxnFactory

+###org/apache/zookeeper/server/NettyServerCnxn
@0.10.0
+#close()V
+#getSessionId()J
+#getSessionTimeout()I
+#process(Lorg/apache/zookeeper/WatchedEvent;)V
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)V
+#setSessionId(J)V
+#enableRecv()V
+#sendBuffer(Ljava/nio/ByteBuffer;)V
+#receiveMessage(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#disableRecv()V
+#getOutstandingRequests()J
+#setSessionTimeout(I)V
+#getInterestOps()I
+#getRemoteSocketAddress()Ljava/net/InetSocketAddress;
+#sendCloseSession()V
@1.14.0
-###org/apache/zookeeper/server/NettyServerCnxn

+###org/apache/zookeeper/server/NettyServerCnxnFactory
@0.10.0
+#closeAll()V
+#closeSession(J)V
+#configure(Ljava/net/InetSocketAddress;I)V
+#getMaxClientCnxnsPerHost()I
+#setMaxClientCnxnsPerHost(I)V
+#getLocalPort()I
+#join()V
+#shutdown()V
+#start()V
+#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getConnections()Ljava/lang/Iterable;
+#getLocalAddress()Ljava/net/InetSocketAddress;
@1.14.0
-###org/apache/zookeeper/server/NettyServerCnxnFactory

+###org/apache/zookeeper/server/ObserverBean
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/Observer;Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getPendingRevalidationCount()I
+#getQuorumAddress()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/ObserverBean

+###org/apache/zookeeper/server/PrepRequestProcessor
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#setFailCreate(Z)V
+#run()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/PrepRequestProcessor

+###org/apache/zookeeper/server/PurgeTxnLog
@0.10.0
+#<init>()V
+#purge(Ljava/io/File;Ljava/io/File;I)V
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/PurgeTxnLog

+###org/apache/zookeeper/server/Request
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/ServerCnxn;JIILjava/nio/ByteBuffer;Ljava/util/List;)V
+#getOwner()Ljava/lang/Object;
+#setOwner(Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#setException(Lorg/apache/zookeeper/KeeperException;)V
+#getException()Lorg/apache/zookeeper/KeeperException;
@1.14.0
-###org/apache/zookeeper/server/Request

+###org/apache/zookeeper/server/RequestProcessor$RequestProcessorException
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/zookeeper/server/RequestProcessor$RequestProcessorException

+###org/apache/zookeeper/server/RequestProcessor
@0.10.0
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/RequestProcessor

+###org/apache/zookeeper/server/ServerCnxn$CloseRequestException
@0.10.0
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/ServerCnxn$CloseRequestException

+###org/apache/zookeeper/server/ServerCnxn$EndOfStreamException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/ServerCnxn$EndOfStreamException

+###org/apache/zookeeper/server/ServerCnxn
@0.10.0
+#<init>()V
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)V
+#process(Lorg/apache/zookeeper/WatchedEvent;)V
+#getAuthInfo()Ljava/util/List;
+#addAuthInfo(Lorg/apache/zookeeper/data/Id;)V
+#removeAuthInfo(Lorg/apache/zookeeper/data/Id;)Z
+#resetStats()V
+#getEstablished()Ljava/util/Date;
+#getOutstandingRequests()J
+#getPacketsReceived()J
+#getPacketsSent()J
+#getMinLatency()J
+#getAvgLatency()J
+#getMaxLatency()J
+#getLastOperation()Ljava/lang/String;
+#getLastCxid()J
+#getLastZxid()J
+#getLastResponseTime()J
+#getLastLatency()J
+#toString()Ljava/lang/String;
+#getRemoteSocketAddress()Ljava/net/InetSocketAddress;
+#getInterestOps()I
@1.14.0
-###org/apache/zookeeper/server/ServerCnxn

+###org/apache/zookeeper/server/ServerCnxnFactory$PacketProcessor
@0.10.0
+#processPacket(Ljava/nio/ByteBuffer;Lorg/apache/zookeeper/server/ServerCnxn;)V
@1.14.0
-###org/apache/zookeeper/server/ServerCnxnFactory$PacketProcessor

+###org/apache/zookeeper/server/ServerCnxnFactory
@0.10.0
+#<init>()V
+#getLocalPort()I
+#getConnections()Ljava/lang/Iterable;
+#getNumAliveConnections()I
+#closeSession(J)V
+#configure(Ljava/net/InetSocketAddress;I)V
+#getMaxClientCnxnsPerHost()I
+#setMaxClientCnxnsPerHost(I)V
+#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#join()V
+#shutdown()V
+#start()V
+#setZooKeeperServer(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#closeAll()V
+#createFactory()Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#createFactory(II)Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#createFactory(Ljava/net/InetSocketAddress;I)Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#unregisterConnection(Lorg/apache/zookeeper/server/ServerCnxn;)V
+#registerConnection(Lorg/apache/zookeeper/server/ServerCnxn;)V
@1.14.0
-###org/apache/zookeeper/server/ServerCnxnFactory

+###org/apache/zookeeper/server/ServerConfig
@0.10.0
+#<init>()V
+#parse([Ljava/lang/String;)V
+#parse(Ljava/lang/String;)V
+#readFrom(Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;)V
+#getClientPortAddress()Ljava/net/InetSocketAddress;
+#getDataDir()Ljava/lang/String;
+#getDataLogDir()Ljava/lang/String;
+#getTickTime()I
+#getMaxClientCnxns()I
+#getMinSessionTimeout()I
+#getMaxSessionTimeout()I
@1.14.0
-###org/apache/zookeeper/server/ServerConfig

+###org/apache/zookeeper/server/ServerStats$Provider
@0.10.0
+#getOutstandingRequests()J
+#getLastProcessedZxid()J
+#getState()Ljava/lang/String;
+#getNumAliveConnections()I
@1.14.0
-###org/apache/zookeeper/server/ServerStats$Provider

+###org/apache/zookeeper/server/ServerStats
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/ServerStats$Provider;)V
+#getMinLatency()J
+#getAvgLatency()J
+#getMaxLatency()J
+#getOutstandingRequests()J
+#getLastProcessedZxid()J
+#getPacketsReceived()J
+#getPacketsSent()J
+#getServerState()Ljava/lang/String;
+#getNumAliveClientConnections()I
+#toString()Ljava/lang/String;
+#resetLatency()V
+#resetMaxLatency()V
+#incrementPacketsReceived()V
+#incrementPacketsSent()V
+#resetRequestCounters()V
+#reset()V
@1.14.0
-###org/apache/zookeeper/server/ServerStats

+###org/apache/zookeeper/server/SessionTracker$Session
@0.10.0
+#getSessionId()J
+#getTimeout()I
+#isClosing()Z
@1.14.0
-###org/apache/zookeeper/server/SessionTracker$Session

+###org/apache/zookeeper/server/SessionTracker$SessionExpirer
@0.10.0
+#expire(Lorg/apache/zookeeper/server/SessionTracker$Session;)V
+#getServerId()J
@1.14.0
-###org/apache/zookeeper/server/SessionTracker$SessionExpirer

+###org/apache/zookeeper/server/SessionTracker
@0.10.0
+#createSession(I)J
+#addSession(JI)V
+#touchSession(JI)Z
+#setSessionClosing(J)V
+#shutdown()V
+#removeSession(J)V
+#checkSession(JLjava/lang/Object;)V
+#setOwner(JLjava/lang/Object;)V
+#dumpSessions(Ljava/io/PrintWriter;)V
@1.14.0
-###org/apache/zookeeper/server/SessionTracker

+###org/apache/zookeeper/server/SessionTrackerImpl$SessionImpl
@0.10.0
+#getSessionId()J
+#getTimeout()I
+#isClosing()Z
@1.14.0
-###org/apache/zookeeper/server/SessionTrackerImpl$SessionImpl

+###org/apache/zookeeper/server/SessionTrackerImpl
@0.10.0
+#initializeNextSession(J)J
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;IJ)V
+#dumpSessions(Ljava/io/PrintWriter;)V
+#toString()Ljava/lang/String;
+#run()V
+#touchSession(JI)Z
+#setSessionClosing(J)V
+#removeSession(J)V
+#shutdown()V
+#createSession(I)J
+#addSession(JI)V
+#checkSession(JLjava/lang/Object;)V
+#setOwner(JLjava/lang/Object;)V
@1.14.0
-###org/apache/zookeeper/server/SessionTrackerImpl

+###org/apache/zookeeper/server/SnapshotFormatter
@0.10.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#run(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/SnapshotFormatter

+###org/apache/zookeeper/server/SyncRequestProcessor
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#setSnapCount(I)V
+#getSnapCount()I
+#run()V
+#shutdown()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
@1.14.0
-###org/apache/zookeeper/server/SyncRequestProcessor

+###org/apache/zookeeper/server/TraceFormatter
@0.10.0
+#<init>()V
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/TraceFormatter

+###org/apache/zookeeper/server/UnimplementedRequestProcessor
@0.10.0
+#<init>()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/UnimplementedRequestProcessor

+###org/apache/zookeeper/server/WatchManager
@0.10.0
+#<init>()V
+#size()I
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)V
+#removeWatcher(Lorg/apache/zookeeper/Watcher;)V
+#triggerWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$Event$EventType;)Ljava/util/Set;
+#triggerWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$Event$EventType;Ljava/util/Set;)Ljava/util/Set;
+#toString()Ljava/lang/String;
+#dumpWatches(Ljava/io/PrintWriter;Z)V
@1.14.0
-###org/apache/zookeeper/server/WatchManager

+###org/apache/zookeeper/server/ZKDatabase
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;)V
+#isInitialized()Z
+#clear()V
+#getDataTree()Lorg/apache/zookeeper/server/DataTree;
+#getmaxCommittedLog()J
+#getminCommittedLog()J
+#getLogLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#getCommittedLog()Ljava/util/LinkedList;
+#getDataTreeLastProcessedZxid()J
+#setDataTreeInit(Z)V
+#getSessions()Ljava/util/Collection;
+#getSessionWithTimeOuts()Ljava/util/concurrent/ConcurrentHashMap;
+#loadDataBase()J
+#addCommittedProposal(Lorg/apache/zookeeper/server/Request;)V
+#removeCnxn(Lorg/apache/zookeeper/server/ServerCnxn;)V
+#killSession(JJ)V
+#dumpEphemerals(Ljava/io/PrintWriter;)V
+#getNodeCount()I
+#getEphemerals(J)Ljava/util/HashSet;
+#setlastProcessedZxid(J)V
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
+#statNode(Ljava/lang/String;Lorg/apache/zookeeper/server/ServerCnxn;)Lorg/apache/zookeeper/data/Stat;
+#getNode(Ljava/lang/String;)Lorg/apache/zookeeper/server/DataNode;
+#convertLong(Ljava/lang/Long;)Ljava/util/List;
+#getData(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)[B
+#setWatches(JLjava/util/List;Ljava/util/List;Ljava/util/List;Lorg/apache/zookeeper/Watcher;)V
+#getACL(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)Ljava/util/List;
+#isSpecialPath(Ljava/lang/String;)Z
+#getAclSize()I
+#truncateLog(J)Z
+#deserializeSnapshot(Lorg/apache/jute/InputArchive;)V
+#serializeSnapshot(Lorg/apache/jute/OutputArchive;)V
+#append(Lorg/apache/zookeeper/server/Request;)Z
+#rollLog()V
+#commit()V
+#close()V
@1.14.0
-###org/apache/zookeeper/server/ZKDatabase

+###org/apache/zookeeper/server/ZooKeeperSaslServer
@0.10.0
+#evaluateResponse([B)[B
+#isComplete()Z
+#getAuthorizationID()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/ZooKeeperSaslServer

+###org/apache/zookeeper/server/ZooKeeperServer$BasicDataTreeBuilder
@0.10.0
+#<init>()V
+#build()Lorg/apache/zookeeper/server/DataTree;
@1.14.0
-###org/apache/zookeeper/server/ZooKeeperServer$BasicDataTreeBuilder

+###org/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder
@0.10.0
+#build()Lorg/apache/zookeeper/server/DataTree;
@1.14.0
-###org/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder

+###org/apache/zookeeper/server/ZooKeeperServer$MissingSessionException
@0.10.0
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/ZooKeeperServer$MissingSessionException

+###org/apache/zookeeper/server/ZooKeeperServer
@0.10.0
+#<init>()V
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;Lorg/apache/zookeeper/server/ZKDatabase;)V
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;ILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;)V
+#serverStats()Lorg/apache/zookeeper/server/ServerStats;
+#dumpConf(Ljava/io/PrintWriter;)V
+#<init>(Ljava/io/File;Ljava/io/File;I)V
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;Lorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;)V
+#getZKDatabase()Lorg/apache/zookeeper/server/ZKDatabase;
+#setZKDatabase(Lorg/apache/zookeeper/server/ZKDatabase;)V
+#loadData()V
+#takeSnapshot()V
+#getZxid()J
+#setZxid(J)V
+#closeSession(J)V
+#expire(Lorg/apache/zookeeper/server/SessionTracker$Session;)V
+#startdata()V
+#startup()V
+#isRunning()Z
+#shutdown()V
+#incInProcess()V
+#decInProcess()V
+#getInProcess()I
+#setOwner(JLjava/lang/Object;)V
+#reopenSession(Lorg/apache/zookeeper/server/ServerCnxn;J[BI)V
+#finishSessionInit(Lorg/apache/zookeeper/server/ServerCnxn;Z)V
+#closeSession(Lorg/apache/zookeeper/server/ServerCnxn;Lorg/apache/zookeeper/proto/RequestHeader;)V
+#getServerId()J
+#submitRequest(Lorg/apache/zookeeper/server/Request;)V
+#getSnapCount()I
+#getGlobalOutstandingLimit()I
+#setServerCnxnFactory(Lorg/apache/zookeeper/server/ServerCnxnFactory;)V
+#getServerCnxnFactory()Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#getLastProcessedZxid()J
+#getOutstandingRequests()J
+#truncateLog(J)V
+#getTickTime()I
+#setTickTime(I)V
+#getMinSessionTimeout()I
+#setMinSessionTimeout(I)V
+#getMaxSessionTimeout()I
+#setMaxSessionTimeout(I)V
+#getClientPort()I
+#setTxnLogFactory(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;)V
+#getTxnLogFactory()Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;
+#getState()Ljava/lang/String;
+#dumpEphemerals(Ljava/io/PrintWriter;)V
+#getNumAliveConnections()I
+#processConnectRequest(Lorg/apache/zookeeper/server/ServerCnxn;Ljava/nio/ByteBuffer;)V
+#shouldThrottle(J)Z
+#processPacket(Lorg/apache/zookeeper/server/ServerCnxn;Ljava/nio/ByteBuffer;)V
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
@1.14.0
-###org/apache/zookeeper/server/ZooKeeperServer

+###org/apache/zookeeper/server/ZooKeeperServerBean
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getClientPort()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getStartTime()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getAvgRequestLatency()J
+#getMaxRequestLatency()J
+#getMinRequestLatency()J
+#getOutstandingRequests()J
+#getTickTime()I
+#setTickTime(I)V
+#getMaxClientCnxnsPerHost()I
+#setMaxClientCnxnsPerHost(I)V
+#getMinSessionTimeout()I
+#setMinSessionTimeout(I)V
+#getMaxSessionTimeout()I
+#setMaxSessionTimeout(I)V
+#getPacketsReceived()J
+#getPacketsSent()J
+#resetLatency()V
+#resetMaxLatency()V
+#resetStatistics()V
+#getNumAliveConnections()J
@1.14.0
-###org/apache/zookeeper/server/ZooKeeperServerBean

+###org/apache/zookeeper/server/ZooKeeperServerMXBean
@0.10.0
+#getClientPort()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getStartTime()Ljava/lang/String;
+#getMinRequestLatency()J
+#getAvgRequestLatency()J
+#getMaxRequestLatency()J
+#getPacketsReceived()J
+#getPacketsSent()J
+#getOutstandingRequests()J
+#getTickTime()I
+#setTickTime(I)V
+#getMaxClientCnxnsPerHost()I
+#setMaxClientCnxnsPerHost(I)V
+#getMinSessionTimeout()I
+#setMinSessionTimeout(I)V
+#getMaxSessionTimeout()I
+#setMaxSessionTimeout(I)V
+#resetStatistics()V
+#resetLatency()V
+#resetMaxLatency()V
+#getNumAliveConnections()J
@1.14.0
-###org/apache/zookeeper/server/ZooKeeperServerMXBean

+###org/apache/zookeeper/server/ZooKeeperServerMain
@0.10.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#runFromConfig(Lorg/apache/zookeeper/server/ServerConfig;)V
@1.14.0
-###org/apache/zookeeper/server/ZooKeeperServerMain

+###org/apache/zookeeper/server/ZooTrace
@0.10.0
+#<init>()V
+#getTextTraceLevel()J
+#setTextTraceLevel(J)V
+#isTraceEnabled(Lorg/slf4j/Logger;J)Z
+#logTraceMessage(Lorg/slf4j/Logger;JLjava/lang/String;)V
+#logQuorumPacket(Lorg/slf4j/Logger;JCLorg/apache/zookeeper/server/quorum/QuorumPacket;)V
+#logRequest(Lorg/slf4j/Logger;JCLorg/apache/zookeeper/server/Request;Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/ZooTrace

+###org/apache/zookeeper/server/auth/AuthenticationProvider
@0.10.0
+#getScheme()Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z
@1.14.0
-###org/apache/zookeeper/server/auth/AuthenticationProvider

+###org/apache/zookeeper/server/auth/DigestAuthenticationProvider
@0.10.0
+#<init>()V
+#getScheme()Ljava/lang/String;
+#generateDigest(Ljava/lang/String;)Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/auth/DigestAuthenticationProvider

+###org/apache/zookeeper/server/auth/DigestLoginModule
@0.10.0
+#<init>()V
+#abort()Z
+#commit()Z
+#initialize(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;Ljava/util/Map;Ljava/util/Map;)V
+#logout()Z
+#login()Z
@1.14.0
-###org/apache/zookeeper/server/auth/DigestLoginModule

+###org/apache/zookeeper/server/auth/IPAuthenticationProvider
@0.10.0
+#<init>()V
+#getScheme()Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z
@1.14.0
-###org/apache/zookeeper/server/auth/IPAuthenticationProvider

+###org/apache/zookeeper/server/auth/KerberosName$BadFormatString
@0.10.0
@1.14.0
-###org/apache/zookeeper/server/auth/KerberosName$BadFormatString

+###org/apache/zookeeper/server/auth/KerberosName$NoMatchingRule
@0.10.0
@1.14.0
-###org/apache/zookeeper/server/auth/KerberosName$NoMatchingRule

+###org/apache/zookeeper/server/auth/KerberosName
@0.10.0
+#<init>(Ljava/lang/String;)V
+#getDefaultRealm()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getServiceName()Ljava/lang/String;
+#getHostName()Ljava/lang/String;
+#getRealm()Ljava/lang/String;
+#setConfiguration()V
+#getShortName()Ljava/lang/String;
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/auth/KerberosName

+###org/apache/zookeeper/server/auth/ProviderRegistry
@0.10.0
+#<init>()V
+#initialize()V
+#getProvider(Ljava/lang/String;)Lorg/apache/zookeeper/server/auth/AuthenticationProvider;
+#listProviders()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/auth/ProviderRegistry

+###org/apache/zookeeper/server/auth/SASLAuthenticationProvider
@0.10.0
+#<init>()V
+#getScheme()Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z
@1.14.0
-###org/apache/zookeeper/server/auth/SASLAuthenticationProvider

+###org/apache/zookeeper/server/auth/SaslServerCallbackHandler
@0.10.0
+#<init>(Ljavax/security/auth/login/Configuration;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
@1.14.0
-###org/apache/zookeeper/server/auth/SaslServerCallbackHandler

+###org/apache/zookeeper/server/persistence/FileHeader
@0.10.0
+#<init>()V
+#<init>(IIJ)V
+#getMagic()I
+#setMagic(I)V
+#getVersion()I
+#setVersion(I)V
+#getDbid()J
+#setDbid(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/persistence/FileHeader

+###org/apache/zookeeper/server/persistence/FileSnap
@0.10.0
+#<init>(Ljava/io/File;)V
+#deserialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;)J
+#deserialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Lorg/apache/jute/InputArchive;)V
+#findMostRecentSnapshot()Ljava/io/File;
+#findNRecentSnapshots(I)Ljava/util/List;
+#serialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Ljava/io/File;)V
+#close()V
@1.14.0
-###org/apache/zookeeper/server/persistence/FileSnap

+###org/apache/zookeeper/server/persistence/FileTxnLog$FileTxnIterator
@0.10.0
+#<init>(Ljava/io/File;J)V
+#next()Z
+#getHeader()Lorg/apache/zookeeper/txn/TxnHeader;
+#getTxn()Lorg/apache/jute/Record;
+#close()V
@1.14.0
-###org/apache/zookeeper/server/persistence/FileTxnLog$FileTxnIterator

+###org/apache/zookeeper/server/persistence/FileTxnLog
@0.10.0
+#<init>(Ljava/io/File;)V
+#setPreallocSize(J)V
+#rollLog()V
+#close()V
+#append(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Z
+#getLogFiles([Ljava/io/File;J)[Ljava/io/File;
+#getLastLoggedZxid()J
+#commit()V
+#read(J)Lorg/apache/zookeeper/server/persistence/TxnLog$TxnIterator;
+#truncate(J)Z
+#getDbId()J
+#isForceSync()Z
@1.14.0
-###org/apache/zookeeper/server/persistence/FileTxnLog

+###org/apache/zookeeper/server/persistence/FileTxnSnapLog$PlayBackListener
@0.10.0
+#onTxnLoaded(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)V
@1.14.0
-###org/apache/zookeeper/server/persistence/FileTxnSnapLog$PlayBackListener

+###org/apache/zookeeper/server/persistence/FileTxnSnapLog
@0.10.0
+#<init>(Ljava/io/File;Ljava/io/File;)V
+#getDataDir()Ljava/io/File;
+#getSnapDir()Ljava/io/File;
+#restore(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog$PlayBackListener;)J
+#processTransaction(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Lorg/apache/jute/Record;)V
+#getLastLoggedZxid()J
+#save(Lorg/apache/zookeeper/server/DataTree;Ljava/util/concurrent/ConcurrentHashMap;)V
+#truncateLog(J)Z
+#findMostRecentSnapshot()Ljava/io/File;
+#findNRecentSnapshots(I)Ljava/util/List;
+#getSnapshotLogs(J)[Ljava/io/File;
+#append(Lorg/apache/zookeeper/server/Request;)Z
+#commit()V
+#rollLog()V
+#close()V
@1.14.0
-###org/apache/zookeeper/server/persistence/FileTxnSnapLog

+###org/apache/zookeeper/server/persistence/SnapShot
@0.10.0
+#deserialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;)J
+#serialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Ljava/io/File;)V
+#findMostRecentSnapshot()Ljava/io/File;
+#close()V
@1.14.0
-###org/apache/zookeeper/server/persistence/SnapShot

+###org/apache/zookeeper/server/persistence/TxnLog$TxnIterator
@0.10.0
+#getHeader()Lorg/apache/zookeeper/txn/TxnHeader;
+#getTxn()Lorg/apache/jute/Record;
+#next()Z
+#close()V
@1.14.0
-###org/apache/zookeeper/server/persistence/TxnLog$TxnIterator

+###org/apache/zookeeper/server/persistence/TxnLog
@0.10.0
+#rollLog()V
+#append(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Z
+#read(J)Lorg/apache/zookeeper/server/persistence/TxnLog$TxnIterator;
+#getLastLoggedZxid()J
+#truncate(J)Z
+#getDbId()J
+#commit()V
+#close()V
@1.14.0
-###org/apache/zookeeper/server/persistence/TxnLog

+###org/apache/zookeeper/server/persistence/Util
@0.10.0
+#<init>()V
+#makeURIString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#makeFileLoggerURL(Ljava/io/File;Ljava/io/File;)Ljava/net/URI;
+#makeFileLoggerURL(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/net/URI;
+#makeLogName(J)Ljava/lang/String;
+#makeSnapshotName(J)Ljava/lang/String;
+#getSnapDir(Ljava/util/Properties;)Ljava/io/File;
+#getLogDir(Ljava/util/Properties;)Ljava/io/File;
+#getFormatConversionPolicy(Ljava/util/Properties;)Ljava/lang/String;
+#getZxidFromName(Ljava/lang/String;Ljava/lang/String;)J
+#isValidSnapshot(Ljava/io/File;)Z
+#padLogFile(Ljava/io/FileOutputStream;JJ)J
+#readTxnBytes(Lorg/apache/jute/InputArchive;)[B
+#marshallTxnEntry(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)[B
+#writeTxnBytes(Lorg/apache/jute/OutputArchive;[B)V
+#sortDataDir([Ljava/io/File;Ljava/lang/String;Z)Ljava/util/List;
@1.14.0
-###org/apache/zookeeper/server/persistence/Util

+###org/apache/zookeeper/server/quorum/AuthFastLeaderElection$Notification
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/server/quorum/AuthFastLeaderElection$Notification

+###org/apache/zookeeper/server/quorum/AuthFastLeaderElection$ToSend
@0.10.0
@1.14.0
-###org/apache/zookeeper/server/quorum/AuthFastLeaderElection$ToSend

+###org/apache/zookeeper/server/quorum/AuthFastLeaderElection
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;Z)V
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#shutdown()V
+#lookForLeader()Lorg/apache/zookeeper/server/quorum/Vote;
@1.14.0
-###org/apache/zookeeper/server/quorum/AuthFastLeaderElection

+###org/apache/zookeeper/server/quorum/CommitProcessor
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;Z)V
+#run()V
+#commit(Lorg/apache/zookeeper/server/Request;)V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/CommitProcessor

+###org/apache/zookeeper/server/quorum/Election
@0.10.0
+#lookForLeader()Lorg/apache/zookeeper/server/quorum/Vote;
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/Election

+###org/apache/zookeeper/server/quorum/FastLeaderElection$Messenger
@0.10.0
+#queueEmpty()Z
@1.14.0
-###org/apache/zookeeper/server/quorum/FastLeaderElection$Messenger

+###org/apache/zookeeper/server/quorum/FastLeaderElection$Notification
@0.10.0
+#<init>()V
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/FastLeaderElection$Notification

+###org/apache/zookeeper/server/quorum/FastLeaderElection$ToSend
@0.10.0
@1.14.0
-###org/apache/zookeeper/server/quorum/FastLeaderElection$ToSend

+###org/apache/zookeeper/server/quorum/FastLeaderElection
@0.10.0
+#getLogicalClock()J
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;)V
+#getCnxManager()Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;
+#shutdown()V
+#lookForLeader()Lorg/apache/zookeeper/server/quorum/Vote;
@1.14.0
-###org/apache/zookeeper/server/quorum/FastLeaderElection

+###org/apache/zookeeper/server/quorum/Follower
@0.10.0
+#toString()Ljava/lang/String;
+#getZxid()J
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/Follower

+###org/apache/zookeeper/server/quorum/FollowerBean
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/Follower;Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getName()Ljava/lang/String;
+#getQuorumAddress()Ljava/lang/String;
+#getLastQueuedZxid()Ljava/lang/String;
+#getPendingRevalidationCount()I
@1.14.0
-###org/apache/zookeeper/server/quorum/FollowerBean

+###org/apache/zookeeper/server/quorum/FollowerMXBean
@0.10.0
+#getQuorumAddress()Ljava/lang/String;
+#getLastQueuedZxid()Ljava/lang/String;
+#getPendingRevalidationCount()I
@1.14.0
-###org/apache/zookeeper/server/quorum/FollowerMXBean

+###org/apache/zookeeper/server/quorum/FollowerRequestProcessor
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/FollowerZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#run()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/FollowerRequestProcessor

+###org/apache/zookeeper/server/quorum/FollowerZooKeeperServer
@0.10.0
+#getFollower()Lorg/apache/zookeeper/server/quorum/Follower;
+#logRequest(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)V
+#commit(J)V
+#sync()V
+#getGlobalOutstandingLimit()I
+#shutdown()V
+#getState()Ljava/lang/String;
+#getLearner()Lorg/apache/zookeeper/server/quorum/Learner;
@1.14.0
-###org/apache/zookeeper/server/quorum/FollowerZooKeeperServer

+###org/apache/zookeeper/server/quorum/Leader$Proposal
@0.10.0
+#<init>()V
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/Leader$Proposal

+###org/apache/zookeeper/server/quorum/Leader$XidRolloverException
@0.10.0
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/quorum/Leader$XidRolloverException

+###org/apache/zookeeper/server/quorum/Leader
@0.10.0
+#getLearners()Ljava/util/List;
+#getForwardingFollowers()Ljava/util/List;
+#getObservingLearners()Ljava/util/List;
+#getNumPendingSyncs()I
+#processAck(JJLjava/net/SocketAddress;)V
+#commit(J)V
+#inform(Lorg/apache/zookeeper/server/quorum/Leader$Proposal;)V
+#getEpoch()J
+#propose(Lorg/apache/zookeeper/server/Request;)Lorg/apache/zookeeper/server/quorum/Leader$Proposal;
+#processSync(Lorg/apache/zookeeper/server/quorum/LearnerSyncRequest;)V
+#sendSync(Lorg/apache/zookeeper/server/quorum/LearnerSyncRequest;)V
+#startForwarding(Lorg/apache/zookeeper/server/quorum/LearnerHandler;J)J
+#getEpochToPropose(JJ)J
+#waitForEpochAck(JLorg/apache/zookeeper/server/quorum/StateSummary;)V
+#waitForNewLeaderAck(JJLorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
+#getPacketType(I)Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/Leader

+###org/apache/zookeeper/server/quorum/LeaderBean
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/Leader;Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getName()Ljava/lang/String;
+#getCurrentZxid()Ljava/lang/String;
+#followerInfo()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/LeaderBean

+###org/apache/zookeeper/server/quorum/LeaderElection$ElectionResult
@0.10.0
@1.14.0
-###org/apache/zookeeper/server/quorum/LeaderElection$ElectionResult

+###org/apache/zookeeper/server/quorum/LeaderElection
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#shutdown()V
+#lookForLeader()Lorg/apache/zookeeper/server/quorum/Vote;
@1.14.0
-###org/apache/zookeeper/server/quorum/LeaderElection

+###org/apache/zookeeper/server/quorum/LeaderElectionBean
@0.10.0
+#<init>()V
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getStartTime()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/LeaderElectionBean

+###org/apache/zookeeper/server/quorum/LeaderElectionMXBean
@0.10.0
+#getStartTime()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/LeaderElectionMXBean

+###org/apache/zookeeper/server/quorum/LeaderMXBean
@0.10.0
+#getCurrentZxid()Ljava/lang/String;
+#followerInfo()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/LeaderMXBean

+###org/apache/zookeeper/server/quorum/LeaderZooKeeperServer
@0.10.0
+#getLeader()Lorg/apache/zookeeper/server/quorum/Leader;
+#getGlobalOutstandingLimit()I
+#createSessionTracker()V
+#touch(JI)Z
+#registerJMX(Lorg/apache/zookeeper/server/quorum/LeaderBean;Lorg/apache/zookeeper/server/quorum/LocalPeerBean;)V
+#getState()Ljava/lang/String;
+#getServerId()J
@1.14.0
-###org/apache/zookeeper/server/quorum/LeaderZooKeeperServer

+###org/apache/zookeeper/server/quorum/Learner
@0.10.0
+#<init>()V
+#getSocket()Ljava/net/Socket;
+#getPendingRevalidationsCount()I
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/Learner

+###org/apache/zookeeper/server/quorum/LearnerHandler
@0.10.0
+#getSocket()Ljava/net/Socket;
+#toString()Ljava/lang/String;
+#getLearnerType()Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
+#packetToString(Lorg/apache/zookeeper/server/quorum/QuorumPacket;)Ljava/lang/String;
+#run()V
+#shutdown()V
+#tickOfNextAckDeadline()J
+#ping()V
+#synced()Z
@1.14.0
-###org/apache/zookeeper/server/quorum/LearnerHandler

+###org/apache/zookeeper/server/quorum/LearnerInfo
@0.10.0
+#<init>()V
+#<init>(JI)V
+#getServerid()J
+#setServerid(J)V
+#getProtocolVersion()I
+#setProtocolVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/LearnerInfo

+###org/apache/zookeeper/server/quorum/LearnerSessionTracker
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;J)V
+#removeSession(J)V
+#shutdown()V
+#addSession(JI)V
+#touchSession(JI)Z
+#createSession(I)J
+#checkSession(JLjava/lang/Object;)V
+#setOwner(JLjava/lang/Object;)V
+#dumpSessions(Ljava/io/PrintWriter;)V
+#setSessionClosing(J)V
@1.14.0
-###org/apache/zookeeper/server/quorum/LearnerSessionTracker

+###org/apache/zookeeper/server/quorum/LearnerSyncRequest
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/LearnerHandler;JIILjava/nio/ByteBuffer;Ljava/util/List;)V
@1.14.0
-###org/apache/zookeeper/server/quorum/LearnerSyncRequest

+###org/apache/zookeeper/server/quorum/LearnerZooKeeperServer
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;Lorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#getLearner()Lorg/apache/zookeeper/server/quorum/Learner;
+#getServerId()J
+#createSessionTracker()V
+#registerJMX(Lorg/apache/zookeeper/server/ZooKeeperServerBean;Lorg/apache/zookeeper/server/quorum/LocalPeerBean;)V
@1.14.0
-###org/apache/zookeeper/server/quorum/LearnerZooKeeperServer

+###org/apache/zookeeper/server/quorum/LocalPeerBean
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getTickTime()I
+#getMaxClientCnxnsPerHost()I
+#getMinSessionTimeout()I
+#getMaxSessionTimeout()I
+#getInitLimit()I
+#getSyncLimit()I
+#getTick()I
+#getState()Ljava/lang/String;
+#getQuorumAddress()Ljava/lang/String;
+#getElectionType()I
@1.14.0
-###org/apache/zookeeper/server/quorum/LocalPeerBean

+###org/apache/zookeeper/server/quorum/LocalPeerMXBean
@0.10.0
+#getTickTime()I
+#getMaxClientCnxnsPerHost()I
+#getMinSessionTimeout()I
+#getMaxSessionTimeout()I
+#getInitLimit()I
+#getSyncLimit()I
+#getTick()I
+#getState()Ljava/lang/String;
+#getQuorumAddress()Ljava/lang/String;
+#getElectionType()I
@1.14.0
-###org/apache/zookeeper/server/quorum/LocalPeerMXBean

+###org/apache/zookeeper/server/quorum/Observer
@0.10.0
+#toString()Ljava/lang/String;
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/Observer

+###org/apache/zookeeper/server/quorum/ObserverMXBean
@0.10.0
+#getPendingRevalidationCount()I
+#getQuorumAddress()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/ObserverMXBean

+###org/apache/zookeeper/server/quorum/ObserverRequestProcessor
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/ObserverZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#run()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/ObserverRequestProcessor

+###org/apache/zookeeper/server/quorum/ObserverZooKeeperServer
@0.10.0
+#getObserver()Lorg/apache/zookeeper/server/quorum/Observer;
+#getLearner()Lorg/apache/zookeeper/server/quorum/Learner;
+#commitRequest(Lorg/apache/zookeeper/server/Request;)V
+#sync()V
+#getState()Ljava/lang/String;
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/ObserverZooKeeperServer

+###org/apache/zookeeper/server/quorum/ProposalRequestProcessor
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#initialize()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/ProposalRequestProcessor

+###org/apache/zookeeper/server/quorum/QuorumBean
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getQuorumSize()I
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumBean

+###org/apache/zookeeper/server/quorum/QuorumCnxManager$Listener
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;)V
+#run()V
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumCnxManager$Listener

+###org/apache/zookeeper/server/quorum/QuorumCnxManager$Message
@0.10.0
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumCnxManager$Message

+###org/apache/zookeeper/server/quorum/QuorumCnxManager
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#testInitiateConnection(J)V
+#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)Z
+#receiveConnection(Ljava/net/Socket;)Z
+#toSend(Ljava/lang/Long;Ljava/nio/ByteBuffer;)V
+#connectAll()V
+#halt()V
+#softHalt()V
+#getThreadCount()J
+#getQuorumPeer()Lorg/apache/zookeeper/server/quorum/QuorumPeer;
+#addToRecvQueue(Lorg/apache/zookeeper/server/quorum/QuorumCnxManager$Message;)V
+#pollRecvQueue(JLjava/util/concurrent/TimeUnit;)Lorg/apache/zookeeper/server/quorum/QuorumCnxManager$Message;
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumCnxManager

+###org/apache/zookeeper/server/quorum/QuorumMXBean
@0.10.0
+#getName()Ljava/lang/String;
+#getQuorumSize()I
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumMXBean

+###org/apache/zookeeper/server/quorum/QuorumPacket
@0.10.0
+#<init>()V
+#<init>(IJ[BLjava/util/List;)V
+#getType()I
+#setType(I)V
+#getZxid()J
+#setZxid(J)V
+#getData()[B
+#setData([B)V
+#getAuthinfo()Ljava/util/List;
+#setAuthinfo(Ljava/util/List;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumPacket

+###org/apache/zookeeper/server/quorum/QuorumPeer$LearnerType
@0.10.0
+#values()[Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumPeer$LearnerType

+###org/apache/zookeeper/server/quorum/QuorumPeer$QuorumServer
@0.10.0
+#<init>(JLjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V
+#<init>(JLjava/net/InetSocketAddress;)V
+#<init>(JLjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumPeer$QuorumServer

+###org/apache/zookeeper/server/quorum/QuorumPeer$ServerState
@0.10.0
+#values()[Lorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumPeer$ServerState

+###org/apache/zookeeper/server/quorum/QuorumPeer
@0.10.0
+#getLearnerType()Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
+#setLearnerType(Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
+#getQuorumSize()I
+#getId()J
+#getCurrentVote()Lorg/apache/zookeeper/server/quorum/Vote;
+#setCurrentVote(Lorg/apache/zookeeper/server/quorum/Vote;)V
+#setPeerState(Lorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;)V
+#getPeerState()Lorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;
+#getQuorumAddress()Ljava/net/InetSocketAddress;
+#<init>()V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIILorg/apache/zookeeper/server/ServerCnxnFactory;)V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#start()V
+#stopLeaderElection()V
+#startLeaderElection()V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIII)V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIIILorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#getLastLoggedZxid()J
+#getActiveServer()Lorg/apache/zookeeper/server/ZooKeeperServer;
+#run()V
+#shutdown()V
+#getView()Ljava/util/Map;
+#getVotingView()Ljava/util/Map;
+#getObservingView()Ljava/util/Map;
+#viewContains(Ljava/lang/Long;)Z
+#getQuorumPeers()[Ljava/lang/String;
+#getServerState()Ljava/lang/String;
+#getMyid()J
+#setMyid(J)V
+#getTickTime()I
+#setTickTime(I)V
+#getMaxClientCnxnsPerHost()I
+#getMinSessionTimeout()I
+#setMinSessionTimeout(I)V
+#getMaxSessionTimeout()I
+#setMaxSessionTimeout(I)V
+#getInitLimit()I
+#setInitLimit(I)V
+#getTick()I
+#getQuorumVerifier()Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#setQuorumVerifier(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#getElectionAlg()Lorg/apache/zookeeper/server/quorum/Election;
+#getSyncLimit()I
+#setSyncLimit(I)V
+#getSyncEnabled()Z
+#setSyncEnabled(Z)V
+#getElectionType()I
+#setElectionType(I)V
+#getQuorumListenOnAllIPs()Z
+#setQuorumListenOnAllIPs(Z)V
+#getCnxnFactory()Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#setCnxnFactory(Lorg/apache/zookeeper/server/ServerCnxnFactory;)V
+#setQuorumPeers(Ljava/util/Map;)V
+#getClientPort()I
+#setClientPortAddress(Ljava/net/InetSocketAddress;)V
+#setTxnFactory(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;)V
+#getTxnFactory()Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;
+#setZKDatabase(Lorg/apache/zookeeper/server/ZKDatabase;)V
+#setRunning(Z)V
+#isRunning()Z
+#getQuorumCnxManager()Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;
+#getCurrentEpoch()J
+#getAcceptedEpoch()J
+#setCurrentEpoch(J)V
+#setAcceptedEpoch(J)V
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumPeer

+###org/apache/zookeeper/server/quorum/QuorumPeerConfig$ConfigException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Exception;)V
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumPeerConfig$ConfigException

+###org/apache/zookeeper/server/quorum/QuorumPeerConfig
@0.10.0
+#<init>()V
+#parse(Ljava/lang/String;)V
+#parseProperties(Ljava/util/Properties;)V
+#getClientPortAddress()Ljava/net/InetSocketAddress;
+#getDataDir()Ljava/lang/String;
+#getDataLogDir()Ljava/lang/String;
+#getTickTime()I
+#getMaxClientCnxns()I
+#getMinSessionTimeout()I
+#getMaxSessionTimeout()I
+#getInitLimit()I
+#getSyncLimit()I
+#getElectionAlg()I
+#getElectionPort()I
+#getSnapRetainCount()I
+#getPurgeInterval()I
+#getSyncEnabled()Z
+#getQuorumVerifier()Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#getServers()Ljava/util/Map;
+#getServerId()J
+#isDistributed()Z
+#getPeerType()Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
+#getQuorumListenOnAllIPs()Ljava/lang/Boolean;
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumPeerConfig

+###org/apache/zookeeper/server/quorum/QuorumPeerMain
@0.10.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#runFromConfig(Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;)V
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumPeerMain

+###org/apache/zookeeper/server/quorum/QuorumStats$Provider
@0.10.0
+#getQuorumPeers()[Ljava/lang/String;
+#getServerState()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumStats$Provider

+###org/apache/zookeeper/server/quorum/QuorumStats
@0.10.0
+#getServerState()Ljava/lang/String;
+#getQuorumPeers()[Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumStats

+###org/apache/zookeeper/server/quorum/QuorumZooKeeperServer
@0.10.0
+#dumpConf(Ljava/io/PrintWriter;)V
@1.14.0
-###org/apache/zookeeper/server/quorum/QuorumZooKeeperServer

+###org/apache/zookeeper/server/quorum/ReadOnlyBean
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getName()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/ReadOnlyBean

+###org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#run()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor

+###org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer
@0.10.0
+#startup()V
+#registerJMX(Lorg/apache/zookeeper/server/ZooKeeperServerBean;Lorg/apache/zookeeper/server/quorum/LocalPeerBean;)V
+#getState()Ljava/lang/String;
+#getServerId()J
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer

+###org/apache/zookeeper/server/quorum/RemotePeerBean
@0.10.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer$QuorumServer;)V
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getQuorumAddress()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/RemotePeerBean

+###org/apache/zookeeper/server/quorum/RemotePeerMXBean
@0.10.0
+#getName()Ljava/lang/String;
+#getQuorumAddress()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/RemotePeerMXBean

+###org/apache/zookeeper/server/quorum/SendAckRequestProcessor
@0.10.0
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#flush()V
+#shutdown()V
@1.14.0
-###org/apache/zookeeper/server/quorum/SendAckRequestProcessor

+###org/apache/zookeeper/server/quorum/ServerBean
@0.10.0
+#<init>()V
+#isHidden()Z
+#getStartTime()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/ServerBean

+###org/apache/zookeeper/server/quorum/ServerMXBean
@0.10.0
+#getName()Ljava/lang/String;
+#getStartTime()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/ServerMXBean

+###org/apache/zookeeper/server/quorum/StateSummary
@0.10.0
+#<init>(JJ)V
+#getCurrentEpoch()J
+#getLastZxid()J
+#isMoreRecentThan(Lorg/apache/zookeeper/server/quorum/StateSummary;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/zookeeper/server/quorum/StateSummary

+###org/apache/zookeeper/server/quorum/Vote
@0.10.0
+#<init>(JJ)V
+#<init>(JJJ)V
+#<init>(JJJJ)V
+#<init>(IJJJJLorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;)V
+#<init>(JJJJLorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;)V
+#getVersion()I
+#getId()J
+#getZxid()J
+#getElectionEpoch()J
+#getPeerEpoch()J
+#getState()Lorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/quorum/Vote

+###org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/Properties;)V
+#<init>(ILjava/util/HashMap;Ljava/util/HashMap;)V
+#getWeight(J)J
+#containsQuorum(Ljava/util/HashSet;)Z
@1.14.0
-###org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical

+###org/apache/zookeeper/server/quorum/flexible/QuorumMaj
@0.10.0
+#<init>(I)V
+#getWeight(J)J
+#containsQuorum(Ljava/util/HashSet;)Z
@1.14.0
-###org/apache/zookeeper/server/quorum/flexible/QuorumMaj

+###org/apache/zookeeper/server/quorum/flexible/QuorumVerifier
@0.10.0
+#getWeight(J)J
+#containsQuorum(Ljava/util/HashSet;)Z
@1.14.0
-###org/apache/zookeeper/server/quorum/flexible/QuorumVerifier

+###org/apache/zookeeper/server/upgrade/DataNodeV1
@0.10.0
+#setChildren(Ljava/util/HashSet;)V
+#getChildren()Ljava/util/HashSet;
+#copyStat(Lorg/apache/zookeeper/data/Stat;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/upgrade/DataNodeV1

+###org/apache/zookeeper/server/upgrade/DataTreeV1$ProcessTxnResult
@0.10.0
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/zookeeper/server/upgrade/DataTreeV1$ProcessTxnResult

+###org/apache/zookeeper/server/upgrade/DataTreeV1
@0.10.0
+#getEphemeralsMap()Ljava/util/Map;
+#setEphemeralsMap(Ljava/util/Map;)V
+#getEphemerals(J)Ljava/util/HashSet;
+#getSessions()Ljava/util/Collection;
+#getNode(Ljava/lang/String;)Lorg/apache/zookeeper/server/upgrade/DataNodeV1;
+#<init>()V
+#copyStatPersisted(Lorg/apache/zookeeper/data/StatPersistedV1;Lorg/apache/zookeeper/data/StatPersistedV1;)V
+#copyStat(Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/data/Stat;)V
+#createNode(Ljava/lang/String;[BLjava/util/List;JJJ)Ljava/lang/String;
+#deleteNode(Ljava/lang/String;)V
+#setData(Ljava/lang/String;[BIJJ)Lorg/apache/zookeeper/data/Stat;
+#getData(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)[B
+#statNode(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Lorg/apache/zookeeper/data/Stat;
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)Ljava/util/ArrayList;
+#setACL(Ljava/lang/String;Ljava/util/List;I)Lorg/apache/zookeeper/data/Stat;
+#getACL(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/upgrade/DataTreeV1$ProcessTxnResult;
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#dumpEphemerals()Ljava/lang/String;
+#removeCnxn(Lorg/apache/zookeeper/Watcher;)V
+#clear()V
@1.14.0
-###org/apache/zookeeper/server/upgrade/DataTreeV1

+###org/apache/zookeeper/server/upgrade/UpgradeMain
@0.10.0
+#<init>(Ljava/io/File;Ljava/io/File;)V
+#runUpgrade()V
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/server/upgrade/UpgradeMain

+###org/apache/zookeeper/server/upgrade/UpgradeSnapShot
@0.10.0
+#getNewDataTree()Lorg/apache/zookeeper/server/DataTree;
+#getSessionWithTimeOuts()Ljava/util/concurrent/ConcurrentHashMap;
@1.14.0
-###org/apache/zookeeper/server/upgrade/UpgradeSnapShot

+###org/apache/zookeeper/server/upgrade/UpgradeSnapShotV1
@0.10.0
+#<init>(Ljava/io/File;Ljava/io/File;)V
+#playLog(Lorg/apache/jute/InputArchive;)J
+#getNewDataTree()Lorg/apache/zookeeper/server/DataTree;
+#getSessionWithTimeOuts()Ljava/util/concurrent/ConcurrentHashMap;
@1.14.0
-###org/apache/zookeeper/server/upgrade/UpgradeSnapShotV1

+###org/apache/zookeeper/server/util/KerberosUtil
@0.10.0
+#<init>()V
+#getDefaultRealm()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/util/KerberosUtil

+###org/apache/zookeeper/server/util/OSMXBean
@0.10.0
+#<init>()V
+#getUnix()Z
+#getOpenFileDescriptorCount()J
+#getMaxFileDescriptorCount()J
@1.14.0
-###org/apache/zookeeper/server/util/OSMXBean

+###org/apache/zookeeper/server/util/Profiler$Operation
@0.10.0
+#execute()Ljava/lang/Object;
@1.14.0
-###org/apache/zookeeper/server/util/Profiler$Operation

+###org/apache/zookeeper/server/util/Profiler
@0.10.0
+#<init>()V
+#profile(Lorg/apache/zookeeper/server/util/Profiler$Operation;JLjava/lang/String;)Ljava/lang/Object;
@1.14.0
-###org/apache/zookeeper/server/util/Profiler

+###org/apache/zookeeper/server/util/SerializeUtils
@0.10.0
+#<init>()V
+#deserializeTxn([BLorg/apache/zookeeper/txn/TxnHeader;)Lorg/apache/jute/Record;
+#deserializeSnapshot(Lorg/apache/zookeeper/server/DataTree;Lorg/apache/jute/InputArchive;Ljava/util/Map;)V
+#serializeSnapshot(Lorg/apache/zookeeper/server/DataTree;Lorg/apache/jute/OutputArchive;Ljava/util/Map;)V
@1.14.0
-###org/apache/zookeeper/server/util/SerializeUtils

+###org/apache/zookeeper/server/util/ZxidUtils
@0.10.0
+#<init>()V
+#getEpochFromZxid(J)J
+#getCounterFromZxid(J)J
+#makeZxid(JJ)J
+#zxidToString(J)Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/server/util/ZxidUtils

+###org/apache/zookeeper/txn/CheckVersionTxn
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/CheckVersionTxn

+###org/apache/zookeeper/txn/CreateSessionTxn
@0.10.0
+#<init>()V
+#<init>(I)V
+#getTimeOut()I
+#setTimeOut(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/CreateSessionTxn

+###org/apache/zookeeper/txn/CreateTxn
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;[BLjava/util/List;ZI)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getEphemeral()Z
+#setEphemeral(Z)V
+#getParentCVersion()I
+#setParentCVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/CreateTxn

+###org/apache/zookeeper/txn/CreateTxnV0
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;[BLjava/util/List;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getEphemeral()Z
+#setEphemeral(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/CreateTxnV0

+###org/apache/zookeeper/txn/DeleteTxn
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/DeleteTxn

+###org/apache/zookeeper/txn/ErrorTxn
@0.10.0
+#<init>()V
+#<init>(I)V
+#getErr()I
+#setErr(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/ErrorTxn

+###org/apache/zookeeper/txn/MultiTxn
@0.10.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#getTxns()Ljava/util/List;
+#setTxns(Ljava/util/List;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/MultiTxn

+###org/apache/zookeeper/txn/SetACLTxn
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/util/List;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/SetACLTxn

+###org/apache/zookeeper/txn/SetDataTxn
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;[BI)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/SetDataTxn

+###org/apache/zookeeper/txn/SetMaxChildrenTxn
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getMax()I
+#setMax(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/SetMaxChildrenTxn

+###org/apache/zookeeper/txn/Txn
@0.10.0
+#<init>()V
+#<init>(I[B)V
+#getType()I
+#setType(I)V
+#getData()[B
+#setData([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/Txn

+###org/apache/zookeeper/txn/TxnHeader
@0.10.0
+#<init>()V
+#<init>(JIJJI)V
+#getClientId()J
+#setClientId(J)V
+#getCxid()I
+#setCxid(I)V
+#getZxid()J
+#setZxid(J)V
+#getTime()J
+#setTime(J)V
+#getType()I
+#setType(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@1.14.0
-###org/apache/zookeeper/txn/TxnHeader

+###org/apache/zookeeper/version/Info
@0.10.0
@1.14.0
-###org/apache/zookeeper/version/Info

+###org/apache/zookeeper/version/util/VerGen$Version
@0.10.0
+#<init>()V
@1.14.0
-###org/apache/zookeeper/version/util/VerGen$Version

+###org/apache/zookeeper/version/util/VerGen
@0.10.0
+#<init>()V
+#generateFile(Ljava/io/File;Lorg/apache/zookeeper/version/util/VerGen$Version;ILjava/lang/String;)V
+#parseVersionString(Ljava/lang/String;)Lorg/apache/zookeeper/version/util/VerGen$Version;
+#main([Ljava/lang/String;)V
@1.14.0
-###org/apache/zookeeper/version/util/VerGen

+###jline/ANSIBuffer$ANSICodes
@0.10.0
+#setmode(I)Ljava/lang/String;
+#resetmode(I)Ljava/lang/String;
+#clrscr()Ljava/lang/String;
+#clreol()Ljava/lang/String;
+#left(I)Ljava/lang/String;
+#right(I)Ljava/lang/String;
+#up(I)Ljava/lang/String;
+#down(I)Ljava/lang/String;
+#gotoxy(II)Ljava/lang/String;
+#save()Ljava/lang/String;
+#restore()Ljava/lang/String;
+#attrib(I)Ljava/lang/String;
+#setkey(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###jline/ANSIBuffer$ANSICodes

+###jline/ANSIBuffer
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setAnsiEnabled(Z)V
+#getAnsiEnabled()Z
+#getAnsiBuffer()Ljava/lang/String;
+#getPlainBuffer()Ljava/lang/String;
+#toString(Z)Ljava/lang/String;
+#toString()Ljava/lang/String;
+#append(Ljava/lang/String;)Ljline/ANSIBuffer;
+#attrib(Ljava/lang/String;I)Ljline/ANSIBuffer;
+#red(Ljava/lang/String;)Ljline/ANSIBuffer;
+#blue(Ljava/lang/String;)Ljline/ANSIBuffer;
+#green(Ljava/lang/String;)Ljline/ANSIBuffer;
+#black(Ljava/lang/String;)Ljline/ANSIBuffer;
+#yellow(Ljava/lang/String;)Ljline/ANSIBuffer;
+#magenta(Ljava/lang/String;)Ljline/ANSIBuffer;
+#cyan(Ljava/lang/String;)Ljline/ANSIBuffer;
+#bold(Ljava/lang/String;)Ljline/ANSIBuffer;
+#underscore(Ljava/lang/String;)Ljline/ANSIBuffer;
+#blink(Ljava/lang/String;)Ljline/ANSIBuffer;
+#reverse(Ljava/lang/String;)Ljline/ANSIBuffer;
+#main([Ljava/lang/String;)V
@1.14.0
-###jline/ANSIBuffer

+###jline/ArgumentCompletor$AbstractArgumentDelimiter
@0.10.0
+#<init>()V
+#setQuoteChars([C)V
+#getQuoteChars()[C
+#setEscapeChars([C)V
+#getEscapeChars()[C
+#delimit(Ljava/lang/String;I)Ljline/ArgumentCompletor$ArgumentList;
+#isDelimiter(Ljava/lang/String;I)Z
+#isQuoted(Ljava/lang/String;I)Z
+#isEscaped(Ljava/lang/String;I)Z
+#isDelimiterChar(Ljava/lang/String;I)Z
@1.14.0
-###jline/ArgumentCompletor$AbstractArgumentDelimiter

+###jline/ArgumentCompletor$ArgumentDelimiter
@0.10.0
+#delimit(Ljava/lang/String;I)Ljline/ArgumentCompletor$ArgumentList;
+#isDelimiter(Ljava/lang/String;I)Z
@1.14.0
-###jline/ArgumentCompletor$ArgumentDelimiter

+###jline/ArgumentCompletor$ArgumentList
@0.10.0
+#<init>([Ljava/lang/String;III)V
+#setCursorArgumentIndex(I)V
+#getCursorArgumentIndex()I
+#getCursorArgument()Ljava/lang/String;
+#setArgumentPosition(I)V
+#getArgumentPosition()I
+#setArguments([Ljava/lang/String;)V
+#getArguments()[Ljava/lang/String;
+#setBufferPosition(I)V
+#getBufferPosition()I
@1.14.0
-###jline/ArgumentCompletor$ArgumentList

+###jline/ArgumentCompletor$WhitespaceArgumentDelimiter
@0.10.0
+#<init>()V
+#isDelimiterChar(Ljava/lang/String;I)Z
@1.14.0
-###jline/ArgumentCompletor$WhitespaceArgumentDelimiter

+###jline/ArgumentCompletor
@0.10.0
+#<init>(Ljline/Completor;)V
+#<init>(Ljava/util/List;)V
+#<init>([Ljline/Completor;)V
+#<init>(Ljline/Completor;Ljline/ArgumentCompletor$ArgumentDelimiter;)V
+#<init>([Ljline/Completor;Ljline/ArgumentCompletor$ArgumentDelimiter;)V
+#setStrict(Z)V
+#getStrict()Z
+#complete(Ljava/lang/String;ILjava/util/List;)I
@1.14.0
-###jline/ArgumentCompletor

+###jline/CandidateCycleCompletionHandler
@0.10.0
+#<init>()V
+#complete(Ljline/ConsoleReader;Ljava/util/List;I)Z
@1.14.0
-###jline/CandidateCycleCompletionHandler

+###jline/CandidateListCompletionHandler
@0.10.0
+#<init>()V
+#setAlwaysIncludeNewline(Z)V
+#complete(Ljline/ConsoleReader;Ljava/util/List;I)Z
+#setBuffer(Ljline/ConsoleReader;Ljava/lang/String;I)V
+#printCandidates(Ljline/ConsoleReader;Ljava/util/Collection;Z)V
@1.14.0
-###jline/CandidateListCompletionHandler

+###jline/ClassNameCompletor
@0.10.0
+#<init>()V
+#<init>(Ljline/SimpleCompletor$SimpleCompletorFilter;)V
+#getClassNames()[Ljava/lang/String;
@1.14.0
-###jline/ClassNameCompletor

+###jline/CompletionHandler
@0.10.0
+#complete(Ljline/ConsoleReader;Ljava/util/List;I)Z
@1.14.0
-###jline/CompletionHandler

+###jline/Completor
@0.10.0
+#complete(Ljava/lang/String;ILjava/util/List;)I
@1.14.0
-###jline/Completor

+###jline/ConsoleOperations
@0.10.0
@1.14.0
-###jline/ConsoleOperations

+###jline/ConsoleReader
@0.10.0
+#addTriggeredAction(CLjava/awt/event/ActionListener;)V
+#<init>()V
+#<init>(Ljava/io/InputStream;Ljava/io/Writer;)V
+#<init>(Ljava/io/InputStream;Ljava/io/Writer;Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Ljava/io/Writer;Ljava/io/InputStream;Ljline/Terminal;)V
+#getTerminal()Ljline/Terminal;
+#setDebug(Ljava/io/PrintWriter;)V
+#setInput(Ljava/io/InputStream;)V
+#getInput()Ljava/io/InputStream;
+#readLine()Ljava/lang/String;
+#readLine(Ljava/lang/Character;)Ljava/lang/String;
+#setBellEnabled(Z)V
+#getBellEnabled()Z
+#getTermwidth()I
+#getTermheight()I
+#setAutoprintThreshhold(I)V
+#getAutoprintThreshhold()I
+#readLine(Ljava/lang/String;)Ljava/lang/String;
+#setDefaultPrompt(Ljava/lang/String;)V
+#getDefaultPrompt()Ljava/lang/String;
+#readLine(Ljava/lang/String;Ljava/lang/Character;)Ljava/lang/String;
+#paste()Z
+#killLine()Z
+#clearScreen()Z
+#getCursorBuffer()Ljline/CursorBuffer;
+#printColumns(Ljava/util/Collection;)V
+#addCompletor(Ljline/Completor;)Z
+#removeCompletor(Ljline/Completor;)Z
+#getCompletors()Ljava/util/Collection;
+#setCursorPosition(I)Z
+#redrawLine()V
+#drawLine()V
+#printNewline()V
+#putString(Ljava/lang/String;)V
+#printString(Ljava/lang/String;)V
+#beep()V
+#flushConsole()V
+#backspace()Z
+#moveCursor(I)I
+#debug(Ljava/lang/String;)V
+#readVirtualKey()I
+#readCharacter([C)I
+#replace(ILjava/lang/String;)Z
+#delete()Z
+#setHistory(Ljline/History;)V
+#getHistory()Ljline/History;
+#setCompletionHandler(Ljline/CompletionHandler;)V
+#getCompletionHandler()Ljline/CompletionHandler;
+#setEchoCharacter(Ljava/lang/Character;)V
+#getEchoCharacter()Ljava/lang/Character;
+#setUseHistory(Z)V
+#getUseHistory()Z
+#setUsePagination(Z)V
+#getUsePagination()Z
@1.14.0
-###jline/ConsoleReader

+###jline/ConsoleReaderInputStream
@0.10.0
+#setIn()V
+#setIn(Ljline/ConsoleReader;)V
+#restoreIn()V
+#<init>(Ljline/ConsoleReader;)V
@1.14.0
-###jline/ConsoleReaderInputStream

+###jline/ConsoleRunner
@0.10.0
+#<init>()V
+#main([Ljava/lang/String;)V
@1.14.0
-###jline/ConsoleRunner

+###jline/CursorBuffer
@0.10.0
+#<init>()V
+#length()I
+#current()C
+#clearBuffer()Z
+#write(C)V
+#write(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#isOvertyping()Z
+#setOvertyping(Z)V
+#getBuffer()Ljava/lang/StringBuffer;
+#setBuffer(Ljava/lang/StringBuffer;)V
@1.14.0
-###jline/CursorBuffer

+###jline/FileNameCompletor
@0.10.0
+#<init>()V
+#complete(Ljava/lang/String;ILjava/util/List;)I
+#matchFiles(Ljava/lang/String;Ljava/lang/String;[Ljava/io/File;Ljava/util/List;)I
@1.14.0
-###jline/FileNameCompletor

+###jline/History
@0.10.0
+#<init>()V
+#<init>(Ljava/io/File;)V
+#setHistoryFile(Ljava/io/File;)V
+#load(Ljava/io/InputStream;)V
+#load(Ljava/io/Reader;)V
+#size()I
+#clear()V
+#addToHistory(Ljava/lang/String;)V
+#flushBuffer()V
+#moveToLastEntry()Z
+#moveToEnd()V
+#setMaxSize(I)V
+#getMaxSize()I
+#setOutput(Ljava/io/PrintWriter;)V
+#getOutput()Ljava/io/PrintWriter;
+#getCurrentIndex()I
+#current()Ljava/lang/String;
+#previous()Z
+#next()Z
+#getHistoryList()Ljava/util/List;
+#toString()Ljava/lang/String;
+#moveToFirstEntry()Z
@1.14.0
-###jline/History

+###jline/MultiCompletor
@0.10.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#<init>([Ljline/Completor;)V
+#complete(Ljava/lang/String;ILjava/util/List;)I
+#setCompletors([Ljline/Completor;)V
+#getCompletors()[Ljline/Completor;
@1.14.0
-###jline/MultiCompletor

+###jline/NullCompletor
@0.10.0
+#<init>()V
+#complete(Ljava/lang/String;ILjava/util/List;)I
@1.14.0
-###jline/NullCompletor

+###jline/SimpleCompletor$NoOpFilter
@0.10.0
+#<init>()V
+#filter(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###jline/SimpleCompletor$NoOpFilter

+###jline/SimpleCompletor$SimpleCompletorFilter
@0.10.0
+#filter(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###jline/SimpleCompletor$SimpleCompletorFilter

+###jline/SimpleCompletor
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/lang/String;Ljline/SimpleCompletor$SimpleCompletorFilter;)V
+#<init>(Ljava/io/Reader;)V
+#<init>(Ljava/io/InputStream;)V
+#complete(Ljava/lang/String;ILjava/util/List;)I
+#setDelimiter(Ljava/lang/String;)V
+#getDelimiter()Ljava/lang/String;
+#setCandidates(Ljava/util/SortedSet;)V
+#getCandidates()Ljava/util/SortedSet;
+#setCandidateStrings([Ljava/lang/String;)V
+#addCandidateString(Ljava/lang/String;)V
+#clone()Ljava/lang/Object;
@1.14.0
-###jline/SimpleCompletor

+###jline/Terminal
@0.10.0
+#<init>()V
+#getTerminal()Ljline/Terminal;
+#resetTerminal()V
+#setupTerminal()Ljline/Terminal;
+#isANSISupported()Z
+#readCharacter(Ljava/io/InputStream;)I
+#readVirtualKey(Ljava/io/InputStream;)I
+#initializeTerminal()V
+#getTerminalWidth()I
+#getTerminalHeight()I
+#isSupported()Z
+#getEcho()Z
+#beforeReadLine(Ljline/ConsoleReader;Ljava/lang/String;Ljava/lang/Character;)V
+#afterReadLine(Ljline/ConsoleReader;Ljava/lang/String;Ljava/lang/Character;)V
+#isEchoEnabled()Z
+#enableEcho()V
+#disableEcho()V
+#getDefaultBindings()Ljava/io/InputStream;
@1.14.0
-###jline/Terminal

+###jline/UnixTerminal
@0.10.0
+#<init>()V
+#initializeTerminal()V
+#restoreTerminal()V
+#readVirtualKey(Ljava/io/InputStream;)I
+#isSupported()Z
+#getEcho()Z
+#getTerminalWidth()I
+#getTerminalHeight()I
+#setSttyCommand(Ljava/lang/String;)V
+#getSttyCommand()Ljava/lang/String;
+#isEchoEnabled()Z
+#enableEcho()V
+#disableEcho()V
@1.14.0
-###jline/UnixTerminal

+###jline/UnsupportedTerminal
@0.10.0
+#<init>()V
+#initializeTerminal()V
+#getEcho()Z
+#isEchoEnabled()Z
+#enableEcho()V
+#disableEcho()V
+#getTerminalWidth()I
+#getTerminalHeight()I
+#isSupported()Z
+#beforeReadLine(Ljline/ConsoleReader;Ljava/lang/String;Ljava/lang/Character;)V
+#afterReadLine(Ljline/ConsoleReader;Ljava/lang/String;Ljava/lang/Character;)V
@1.14.0
-###jline/UnsupportedTerminal

+###jline/WindowsTerminal
@0.10.0
+#<init>()V
+#readCharacter(Ljava/io/InputStream;)I
+#initializeTerminal()V
+#readVirtualKey(Ljava/io/InputStream;)I
+#isSupported()Z
+#isANSISupported()Z
+#getEcho()Z
+#getTerminalWidth()I
+#getTerminalHeight()I
+#setDirectConsole(Ljava/lang/Boolean;)V
+#getDirectConsole()Ljava/lang/Boolean;
+#isEchoEnabled()Z
+#enableEcho()V
+#disableEcho()V
+#getDefaultBindings()Ljava/io/InputStream;
@1.14.0
-###jline/WindowsTerminal

+###org/jboss/netty/bootstrap/Bootstrap
@0.10.0
+#getFactory()Lorg/jboss/netty/channel/ChannelFactory;
+#setFactory(Lorg/jboss/netty/channel/ChannelFactory;)V
+#getPipeline()Lorg/jboss/netty/channel/ChannelPipeline;
+#setPipeline(Lorg/jboss/netty/channel/ChannelPipeline;)V
+#getPipelineAsMap()Ljava/util/Map;
+#setPipelineAsMap(Ljava/util/Map;)V
+#getPipelineFactory()Lorg/jboss/netty/channel/ChannelPipelineFactory;
+#setPipelineFactory(Lorg/jboss/netty/channel/ChannelPipelineFactory;)V
+#getOptions()Ljava/util/Map;
+#setOptions(Ljava/util/Map;)V
+#getOption(Ljava/lang/String;)Ljava/lang/Object;
+#setOption(Ljava/lang/String;Ljava/lang/Object;)V
+#releaseExternalResources()V
+#shutdown()V
@1.14.0
-###org/jboss/netty/bootstrap/Bootstrap

+###org/jboss/netty/bootstrap/ClientBootstrap
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/channel/ChannelFactory;)V
+#connect()Lorg/jboss/netty/channel/ChannelFuture;
+#connect(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#connect(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#bind(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/bootstrap/ClientBootstrap

+###org/jboss/netty/bootstrap/ConnectionlessBootstrap
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/channel/ChannelFactory;)V
+#bind()Lorg/jboss/netty/channel/Channel;
+#bind(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/Channel;
+#connect()Lorg/jboss/netty/channel/ChannelFuture;
+#connect(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#connect(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/bootstrap/ConnectionlessBootstrap

+###org/jboss/netty/bootstrap/ServerBootstrap
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/channel/ChannelFactory;)V
+#setFactory(Lorg/jboss/netty/channel/ChannelFactory;)V
+#getParentHandler()Lorg/jboss/netty/channel/ChannelHandler;
+#setParentHandler(Lorg/jboss/netty/channel/ChannelHandler;)V
+#bind()Lorg/jboss/netty/channel/Channel;
+#bind(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/Channel;
+#bindAsync()Lorg/jboss/netty/channel/ChannelFuture;
+#bindAsync(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/bootstrap/ServerBootstrap

+###org/jboss/netty/buffer/AbstractChannelBuffer
@0.10.0
+#<init>()V
+#readerIndex()I
+#readerIndex(I)V
+#writerIndex()I
+#writerIndex(I)V
+#setIndex(II)V
+#clear()V
+#readable()Z
+#writable()Z
+#readableBytes()I
+#writableBytes()I
+#markReaderIndex()V
+#resetReaderIndex()V
+#markWriterIndex()V
+#resetWriterIndex()V
+#discardReadBytes()V
+#ensureWritableBytes(I)V
+#getUnsignedByte(I)S
+#getUnsignedShort(I)I
+#getMedium(I)I
+#getUnsignedInt(I)J
+#getChar(I)C
+#getFloat(I)F
+#getDouble(I)D
+#getBytes(I[B)V
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;)V
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;I)V
+#setChar(II)V
+#setFloat(IF)V
+#setDouble(ID)V
+#setBytes(I[B)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;I)V
+#setZero(II)V
+#readByte()B
+#readUnsignedByte()S
+#readShort()S
+#readUnsignedShort()I
+#readMedium()I
+#readUnsignedMedium()I
+#readInt()I
+#readUnsignedInt()J
+#readLong()J
+#readChar()C
+#readFloat()F
+#readDouble()D
+#readBytes(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#readBytes(Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)Lorg/jboss/netty/buffer/ChannelBuffer;[deprecated]
+#readSlice(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#readSlice(Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)Lorg/jboss/netty/buffer/ChannelBuffer;[deprecated]
+#readBytes([BII)V
+#readBytes([B)V
+#readBytes(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#readBytes(Lorg/jboss/netty/buffer/ChannelBuffer;I)V
+#readBytes(Lorg/jboss/netty/buffer/ChannelBuffer;II)V
+#readBytes(Ljava/nio/ByteBuffer;)V
+#readBytes(Ljava/nio/channels/GatheringByteChannel;I)I
+#readBytes(Ljava/io/OutputStream;I)V
+#skipBytes(I)V
+#skipBytes(Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I[deprecated]
+#writeByte(I)V
+#writeShort(I)V
+#writeMedium(I)V
+#writeInt(I)V
+#writeLong(J)V
+#writeChar(I)V
+#writeFloat(F)V
+#writeDouble(D)V
+#writeBytes([BII)V
+#writeBytes([B)V
+#writeBytes(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#writeBytes(Lorg/jboss/netty/buffer/ChannelBuffer;I)V
+#writeBytes(Lorg/jboss/netty/buffer/ChannelBuffer;II)V
+#writeBytes(Ljava/nio/ByteBuffer;)V
+#writeBytes(Ljava/io/InputStream;I)I
+#writeBytes(Ljava/nio/channels/ScatteringByteChannel;I)I
+#writeZero(I)V
+#copy()Lorg/jboss/netty/buffer/ChannelBuffer;
+#slice()Lorg/jboss/netty/buffer/ChannelBuffer;
+#toByteBuffer()Ljava/nio/ByteBuffer;
+#toByteBuffers()[Ljava/nio/ByteBuffer;
+#toByteBuffers(II)[Ljava/nio/ByteBuffer;
+#toString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#toString(IILjava/nio/charset/Charset;)Ljava/lang/String;
+#toString(IILjava/lang/String;Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)Ljava/lang/String;[deprecated]
+#toString(IILjava/lang/String;)Ljava/lang/String;[deprecated]
+#toString(Ljava/lang/String;Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)Ljava/lang/String;[deprecated]
+#toString(Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#indexOf(IIB)I
+#indexOf(IILorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I
+#bytesBefore(B)I
+#bytesBefore(Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I
+#bytesBefore(IB)I
+#bytesBefore(ILorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I
+#bytesBefore(IIB)I
+#bytesBefore(IILorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/buffer/ChannelBuffer;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/buffer/AbstractChannelBuffer

+###org/jboss/netty/buffer/AbstractChannelBufferFactory
@0.10.0
+#getBuffer(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBuffer([BII)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getDefaultOrder()Ljava/nio/ByteOrder;
@1.14.0
-###org/jboss/netty/buffer/AbstractChannelBufferFactory

+###org/jboss/netty/buffer/BigEndianHeapChannelBuffer
@0.10.0
+#<init>(I)V
+#<init>([B)V
+#factory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#order()Ljava/nio/ByteOrder;
+#getShort(I)S
+#getUnsignedMedium(I)I
+#getInt(I)I
+#getLong(I)J
+#setShort(II)V
+#setMedium(II)V
+#setInt(II)V
+#setLong(IJ)V
+#duplicate()Lorg/jboss/netty/buffer/ChannelBuffer;
+#copy(II)Lorg/jboss/netty/buffer/ChannelBuffer;
@1.14.0
-###org/jboss/netty/buffer/BigEndianHeapChannelBuffer

+###org/jboss/netty/buffer/ByteBufferBackedChannelBuffer
@0.10.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#factory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#isDirect()Z
+#order()Ljava/nio/ByteOrder;
+#capacity()I
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#getByte(I)B
+#getShort(I)S
+#getUnsignedMedium(I)I
+#getInt(I)I
+#getLong(I)J
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#getBytes(I[BII)V
+#getBytes(ILjava/nio/ByteBuffer;)V
+#setByte(II)V
+#setShort(II)V
+#setMedium(II)V
+#setInt(II)V
+#setLong(IJ)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#setBytes(I[BII)V
+#setBytes(ILjava/nio/ByteBuffer;)V
+#getBytes(ILjava/io/OutputStream;I)V
+#getBytes(ILjava/nio/channels/GatheringByteChannel;I)I
+#setBytes(ILjava/io/InputStream;I)I
+#setBytes(ILjava/nio/channels/ScatteringByteChannel;I)I
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
+#slice(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#duplicate()Lorg/jboss/netty/buffer/ChannelBuffer;
+#copy(II)Lorg/jboss/netty/buffer/ChannelBuffer;
@1.14.0
-###org/jboss/netty/buffer/ByteBufferBackedChannelBuffer

+###org/jboss/netty/buffer/ChannelBuffer
@0.10.0
+#factory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#capacity()I
+#order()Ljava/nio/ByteOrder;
+#isDirect()Z
+#readerIndex()I
+#readerIndex(I)V
+#writerIndex()I
+#writerIndex(I)V
+#setIndex(II)V
+#readableBytes()I
+#writableBytes()I
+#readable()Z
+#writable()Z
+#clear()V
+#markReaderIndex()V
+#resetReaderIndex()V
+#markWriterIndex()V
+#resetWriterIndex()V
+#discardReadBytes()V
+#ensureWritableBytes(I)V
+#getByte(I)B
+#getUnsignedByte(I)S
+#getShort(I)S
+#getUnsignedShort(I)I
+#getMedium(I)I
+#getUnsignedMedium(I)I
+#getInt(I)I
+#getUnsignedInt(I)J
+#getLong(I)J
+#getChar(I)C
+#getFloat(I)F
+#getDouble(I)D
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;)V
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;I)V
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#getBytes(I[B)V
+#getBytes(I[BII)V
+#getBytes(ILjava/nio/ByteBuffer;)V
+#getBytes(ILjava/io/OutputStream;I)V
+#getBytes(ILjava/nio/channels/GatheringByteChannel;I)I
+#setByte(II)V
+#setShort(II)V
+#setMedium(II)V
+#setInt(II)V
+#setLong(IJ)V
+#setChar(II)V
+#setFloat(IF)V
+#setDouble(ID)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;I)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#setBytes(I[B)V
+#setBytes(I[BII)V
+#setBytes(ILjava/nio/ByteBuffer;)V
+#setBytes(ILjava/io/InputStream;I)I
+#setBytes(ILjava/nio/channels/ScatteringByteChannel;I)I
+#setZero(II)V
+#readByte()B
+#readUnsignedByte()S
+#readShort()S
+#readUnsignedShort()I
+#readMedium()I
+#readUnsignedMedium()I
+#readInt()I
+#readUnsignedInt()J
+#readLong()J
+#readChar()C
+#readFloat()F
+#readDouble()D
+#readBytes(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#readBytes(Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)Lorg/jboss/netty/buffer/ChannelBuffer;[deprecated]
+#readSlice(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#readSlice(Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)Lorg/jboss/netty/buffer/ChannelBuffer;[deprecated]
+#readBytes(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#readBytes(Lorg/jboss/netty/buffer/ChannelBuffer;I)V
+#readBytes(Lorg/jboss/netty/buffer/ChannelBuffer;II)V
+#readBytes([B)V
+#readBytes([BII)V
+#readBytes(Ljava/nio/ByteBuffer;)V
+#readBytes(Ljava/io/OutputStream;I)V
+#readBytes(Ljava/nio/channels/GatheringByteChannel;I)I
+#skipBytes(I)V
+#skipBytes(Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I[deprecated]
+#writeByte(I)V
+#writeShort(I)V
+#writeMedium(I)V
+#writeInt(I)V
+#writeLong(J)V
+#writeChar(I)V
+#writeFloat(F)V
+#writeDouble(D)V
+#writeBytes(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#writeBytes(Lorg/jboss/netty/buffer/ChannelBuffer;I)V
+#writeBytes(Lorg/jboss/netty/buffer/ChannelBuffer;II)V
+#writeBytes([B)V
+#writeBytes([BII)V
+#writeBytes(Ljava/nio/ByteBuffer;)V
+#writeBytes(Ljava/io/InputStream;I)I
+#writeBytes(Ljava/nio/channels/ScatteringByteChannel;I)I
+#writeZero(I)V
+#indexOf(IIB)I
+#indexOf(IILorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I
+#bytesBefore(B)I
+#bytesBefore(Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I
+#bytesBefore(IB)I
+#bytesBefore(ILorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I
+#bytesBefore(IIB)I
+#bytesBefore(IILorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I
+#copy()Lorg/jboss/netty/buffer/ChannelBuffer;
+#copy(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#slice()Lorg/jboss/netty/buffer/ChannelBuffer;
+#slice(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#duplicate()Lorg/jboss/netty/buffer/ChannelBuffer;
+#toByteBuffer()Ljava/nio/ByteBuffer;
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
+#toByteBuffers()[Ljava/nio/ByteBuffer;
+#toByteBuffers(II)[Ljava/nio/ByteBuffer;
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#toString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#toString(IILjava/nio/charset/Charset;)Ljava/lang/String;
+#toString(Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#toString(Ljava/lang/String;Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)Ljava/lang/String;[deprecated]
+#toString(IILjava/lang/String;)Ljava/lang/String;[deprecated]
+#toString(IILjava/lang/String;Lorg/jboss/netty/buffer/ChannelBufferIndexFinder;)Ljava/lang/String;[deprecated]
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/buffer/ChannelBuffer;)I
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/buffer/ChannelBuffer

+###org/jboss/netty/buffer/ChannelBufferFactory
@0.10.0
+#getBuffer(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBuffer(Ljava/nio/ByteOrder;I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBuffer([BII)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBuffer(Ljava/nio/ByteOrder;[BII)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBuffer(Ljava/nio/ByteBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getDefaultOrder()Ljava/nio/ByteOrder;
@1.14.0
-###org/jboss/netty/buffer/ChannelBufferFactory

+###org/jboss/netty/buffer/ChannelBufferIndexFinder
@0.10.0
+#find(Lorg/jboss/netty/buffer/ChannelBuffer;I)Z
@1.14.0
-###org/jboss/netty/buffer/ChannelBufferIndexFinder

+###org/jboss/netty/buffer/ChannelBufferInputStream
@0.10.0
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;I)V
+#readBytes()I
+#available()I
+#mark(I)V
+#markSupported()Z
+#read()I
+#read([BII)I
+#reset()V
+#skip(J)J
+#readBoolean()Z
+#readByte()B
+#readChar()C
+#readDouble()D
+#readFloat()F
+#readFully([B)V
+#readFully([BII)V
+#readInt()I
+#readLine()Ljava/lang/String;
+#readLong()J
+#readShort()S
+#readUTF()Ljava/lang/String;
+#readUnsignedByte()I
+#readUnsignedShort()I
+#skipBytes(I)I
@1.14.0
-###org/jboss/netty/buffer/ChannelBufferInputStream

+###org/jboss/netty/buffer/ChannelBufferOutputStream
@0.10.0
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#writtenBytes()I
+#write([BII)V
+#write([B)V
+#write(I)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeBytes(Ljava/lang/String;)V
+#writeChar(I)V
+#writeChars(Ljava/lang/String;)V
+#writeDouble(D)V
+#writeFloat(F)V
+#writeInt(I)V
+#writeLong(J)V
+#writeShort(I)V
+#writeUTF(Ljava/lang/String;)V
+#buffer()Lorg/jboss/netty/buffer/ChannelBuffer;
@1.14.0
-###org/jboss/netty/buffer/ChannelBufferOutputStream

+###org/jboss/netty/buffer/ChannelBuffers
@0.10.0
+#buffer(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#buffer(Ljava/nio/ByteOrder;I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#directBuffer(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#directBuffer(Ljava/nio/ByteOrder;I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#dynamicBuffer()Lorg/jboss/netty/buffer/ChannelBuffer;
+#dynamicBuffer(Lorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#dynamicBuffer(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#dynamicBuffer(Ljava/nio/ByteOrder;I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#dynamicBuffer(ILorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#dynamicBuffer(Ljava/nio/ByteOrder;ILorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer([B)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer(Ljava/nio/ByteOrder;[B)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer([BII)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer(Ljava/nio/ByteOrder;[BII)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer(Ljava/nio/ByteBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer(Lorg/jboss/netty/buffer/ChannelBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer([[B)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer(Ljava/nio/ByteOrder;[[B)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer([Lorg/jboss/netty/buffer/ChannelBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer(Z[Lorg/jboss/netty/buffer/ChannelBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer([Ljava/nio/ByteBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#wrappedBuffer(Z[Ljava/nio/ByteBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer([B)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/nio/ByteOrder;[B)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer([BII)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/nio/ByteOrder;[BII)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/nio/ByteBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Lorg/jboss/netty/buffer/ChannelBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer([[B)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/nio/ByteOrder;[[B)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer([Lorg/jboss/netty/buffer/ChannelBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer([Ljava/nio/ByteBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/lang/CharSequence;IILjava/nio/charset/Charset;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/nio/ByteOrder;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/nio/ByteOrder;Ljava/lang/CharSequence;IILjava/nio/charset/Charset;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer([CLjava/nio/charset/Charset;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer([CIILjava/nio/charset/Charset;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/nio/ByteOrder;[CLjava/nio/charset/Charset;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/nio/ByteOrder;[CIILjava/nio/charset/Charset;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#copiedBuffer(Ljava/lang/String;Ljava/lang/String;)Lorg/jboss/netty/buffer/ChannelBuffer;[deprecated]
+#copiedBuffer(Ljava/nio/ByteOrder;Ljava/lang/String;Ljava/lang/String;)Lorg/jboss/netty/buffer/ChannelBuffer;[deprecated]
+#unmodifiableBuffer(Lorg/jboss/netty/buffer/ChannelBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#hexDump(Ljava/lang/String;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#hexDump(Lorg/jboss/netty/buffer/ChannelBuffer;)Ljava/lang/String;
+#hexDump(Lorg/jboss/netty/buffer/ChannelBuffer;II)Ljava/lang/String;
+#hashCode(Lorg/jboss/netty/buffer/ChannelBuffer;)I
+#equals(Lorg/jboss/netty/buffer/ChannelBuffer;Lorg/jboss/netty/buffer/ChannelBuffer;)Z
+#compare(Lorg/jboss/netty/buffer/ChannelBuffer;Lorg/jboss/netty/buffer/ChannelBuffer;)I
+#indexOf(Lorg/jboss/netty/buffer/ChannelBuffer;IIB)I
+#indexOf(Lorg/jboss/netty/buffer/ChannelBuffer;IILorg/jboss/netty/buffer/ChannelBufferIndexFinder;)I
+#swapShort(S)S
+#swapMedium(I)I
+#swapInt(I)I
+#swapLong(J)J
@1.14.0
-###org/jboss/netty/buffer/ChannelBuffers

+###org/jboss/netty/buffer/CompositeChannelBuffer
@0.10.0
+#<init>(Ljava/nio/ByteOrder;Ljava/util/List;Z)V
+#useGathering()Z
+#decompose(II)Ljava/util/List;
+#factory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#order()Ljava/nio/ByteOrder;
+#isDirect()Z
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#capacity()I
+#numComponents()I
+#getByte(I)B
+#getShort(I)S
+#getUnsignedMedium(I)I
+#getInt(I)I
+#getLong(I)J
+#getBytes(I[BII)V
+#getBytes(ILjava/nio/ByteBuffer;)V
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#getBytes(ILjava/nio/channels/GatheringByteChannel;I)I
+#getBytes(ILjava/io/OutputStream;I)V
+#setByte(II)V
+#setShort(II)V
+#setMedium(II)V
+#setInt(II)V
+#setLong(IJ)V
+#setBytes(I[BII)V
+#setBytes(ILjava/nio/ByteBuffer;)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#setBytes(ILjava/io/InputStream;I)I
+#setBytes(ILjava/nio/channels/ScatteringByteChannel;I)I
+#duplicate()Lorg/jboss/netty/buffer/ChannelBuffer;
+#copy(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBuffer(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#slice(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
+#toByteBuffers(II)[Ljava/nio/ByteBuffer;
+#discardReadBytes()V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/buffer/CompositeChannelBuffer

+###org/jboss/netty/buffer/DirectChannelBufferFactory
@0.10.0
+#getInstance()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#getInstance(Ljava/nio/ByteOrder;)Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/nio/ByteOrder;)V
+#<init>(Ljava/nio/ByteOrder;I)V
+#getBuffer(Ljava/nio/ByteOrder;I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBuffer(Ljava/nio/ByteOrder;[BII)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBuffer(Ljava/nio/ByteBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
@1.14.0
-###org/jboss/netty/buffer/DirectChannelBufferFactory

+###org/jboss/netty/buffer/DuplicatedChannelBuffer
@0.10.0
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#unwrap()Lorg/jboss/netty/buffer/ChannelBuffer;
+#factory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#order()Ljava/nio/ByteOrder;
+#isDirect()Z
+#capacity()I
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#getByte(I)B
+#getShort(I)S
+#getUnsignedMedium(I)I
+#getInt(I)I
+#getLong(I)J
+#duplicate()Lorg/jboss/netty/buffer/ChannelBuffer;
+#copy(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#slice(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#getBytes(I[BII)V
+#getBytes(ILjava/nio/ByteBuffer;)V
+#setByte(II)V
+#setShort(II)V
+#setMedium(II)V
+#setInt(II)V
+#setLong(IJ)V
+#setBytes(I[BII)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#setBytes(ILjava/nio/ByteBuffer;)V
+#getBytes(ILjava/io/OutputStream;I)V
+#getBytes(ILjava/nio/channels/GatheringByteChannel;I)I
+#setBytes(ILjava/io/InputStream;I)I
+#setBytes(ILjava/nio/channels/ScatteringByteChannel;I)I
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
@1.14.0
-###org/jboss/netty/buffer/DuplicatedChannelBuffer

+###org/jboss/netty/buffer/DynamicChannelBuffer
@0.10.0
+#<init>(I)V
+#<init>(Ljava/nio/ByteOrder;I)V
+#<init>(Ljava/nio/ByteOrder;ILorg/jboss/netty/buffer/ChannelBufferFactory;)V
+#ensureWritableBytes(I)V
+#factory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#order()Ljava/nio/ByteOrder;
+#isDirect()Z
+#capacity()I
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#getByte(I)B
+#getShort(I)S
+#getUnsignedMedium(I)I
+#getInt(I)I
+#getLong(I)J
+#getBytes(I[BII)V
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#getBytes(ILjava/nio/ByteBuffer;)V
+#getBytes(ILjava/nio/channels/GatheringByteChannel;I)I
+#getBytes(ILjava/io/OutputStream;I)V
+#setByte(II)V
+#setShort(II)V
+#setMedium(II)V
+#setInt(II)V
+#setLong(IJ)V
+#setBytes(I[BII)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#setBytes(ILjava/nio/ByteBuffer;)V
+#setBytes(ILjava/io/InputStream;I)I
+#setBytes(ILjava/nio/channels/ScatteringByteChannel;I)I
+#writeByte(I)V
+#writeShort(I)V
+#writeMedium(I)V
+#writeInt(I)V
+#writeLong(J)V
+#writeBytes([BII)V
+#writeBytes(Lorg/jboss/netty/buffer/ChannelBuffer;II)V
+#writeBytes(Ljava/nio/ByteBuffer;)V
+#writeBytes(Ljava/io/InputStream;I)I
+#writeBytes(Ljava/nio/channels/ScatteringByteChannel;I)I
+#writeZero(I)V
+#duplicate()Lorg/jboss/netty/buffer/ChannelBuffer;
+#copy(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#slice(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
@1.14.0
-###org/jboss/netty/buffer/DynamicChannelBuffer

+###org/jboss/netty/buffer/HeapChannelBuffer
@0.10.0
+#isDirect()Z
+#capacity()I
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#getByte(I)B
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#getBytes(I[BII)V
+#getBytes(ILjava/nio/ByteBuffer;)V
+#getBytes(ILjava/io/OutputStream;I)V
+#getBytes(ILjava/nio/channels/GatheringByteChannel;I)I
+#setByte(II)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#setBytes(I[BII)V
+#setBytes(ILjava/nio/ByteBuffer;)V
+#setBytes(ILjava/io/InputStream;I)I
+#setBytes(ILjava/nio/channels/ScatteringByteChannel;I)I
+#slice(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
@1.14.0
-###org/jboss/netty/buffer/HeapChannelBuffer

+###org/jboss/netty/buffer/HeapChannelBufferFactory
@0.10.0
+#getInstance()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#getInstance(Ljava/nio/ByteOrder;)Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#<init>()V
+#<init>(Ljava/nio/ByteOrder;)V
+#getBuffer(Ljava/nio/ByteOrder;I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBuffer(Ljava/nio/ByteOrder;[BII)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBuffer(Ljava/nio/ByteBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
@1.14.0
-###org/jboss/netty/buffer/HeapChannelBufferFactory

+###org/jboss/netty/buffer/LittleEndianHeapChannelBuffer
@0.10.0
+#<init>(I)V
+#<init>([B)V
+#factory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#order()Ljava/nio/ByteOrder;
+#getShort(I)S
+#getUnsignedMedium(I)I
+#getInt(I)I
+#getLong(I)J
+#setShort(II)V
+#setMedium(II)V
+#setInt(II)V
+#setLong(IJ)V
+#duplicate()Lorg/jboss/netty/buffer/ChannelBuffer;
+#copy(II)Lorg/jboss/netty/buffer/ChannelBuffer;
@1.14.0
-###org/jboss/netty/buffer/LittleEndianHeapChannelBuffer

+###org/jboss/netty/buffer/ReadOnlyChannelBuffer
@0.10.0
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#unwrap()Lorg/jboss/netty/buffer/ChannelBuffer;
+#factory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#order()Ljava/nio/ByteOrder;
+#isDirect()Z
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#discardReadBytes()V
+#setByte(II)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#setBytes(I[BII)V
+#setBytes(ILjava/nio/ByteBuffer;)V
+#setShort(II)V
+#setMedium(II)V
+#setInt(II)V
+#setLong(IJ)V
+#setBytes(ILjava/io/InputStream;I)I
+#setBytes(ILjava/nio/channels/ScatteringByteChannel;I)I
+#getBytes(ILjava/nio/channels/GatheringByteChannel;I)I
+#getBytes(ILjava/io/OutputStream;I)V
+#getBytes(I[BII)V
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#getBytes(ILjava/nio/ByteBuffer;)V
+#duplicate()Lorg/jboss/netty/buffer/ChannelBuffer;
+#copy(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#slice(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getByte(I)B
+#getShort(I)S
+#getUnsignedMedium(I)I
+#getInt(I)I
+#getLong(I)J
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
+#toByteBuffers(II)[Ljava/nio/ByteBuffer;
+#capacity()I
@1.14.0
-###org/jboss/netty/buffer/ReadOnlyChannelBuffer

+###org/jboss/netty/buffer/SlicedChannelBuffer
@0.10.0
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;II)V
+#unwrap()Lorg/jboss/netty/buffer/ChannelBuffer;
+#factory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#order()Ljava/nio/ByteOrder;
+#isDirect()Z
+#capacity()I
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#getByte(I)B
+#getShort(I)S
+#getUnsignedMedium(I)I
+#getInt(I)I
+#getLong(I)J
+#duplicate()Lorg/jboss/netty/buffer/ChannelBuffer;
+#copy(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#slice(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#getBytes(I[BII)V
+#getBytes(ILjava/nio/ByteBuffer;)V
+#setByte(II)V
+#setShort(II)V
+#setMedium(II)V
+#setInt(II)V
+#setLong(IJ)V
+#setBytes(I[BII)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#setBytes(ILjava/nio/ByteBuffer;)V
+#getBytes(ILjava/io/OutputStream;I)V
+#getBytes(ILjava/nio/channels/GatheringByteChannel;I)I
+#setBytes(ILjava/io/InputStream;I)I
+#setBytes(ILjava/nio/channels/ScatteringByteChannel;I)I
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
@1.14.0
-###org/jboss/netty/buffer/SlicedChannelBuffer

+###org/jboss/netty/buffer/TruncatedChannelBuffer
@0.10.0
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;I)V
+#unwrap()Lorg/jboss/netty/buffer/ChannelBuffer;
+#factory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#order()Ljava/nio/ByteOrder;
+#isDirect()Z
+#capacity()I
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#getByte(I)B
+#getShort(I)S
+#getUnsignedMedium(I)I
+#getInt(I)I
+#getLong(I)J
+#duplicate()Lorg/jboss/netty/buffer/ChannelBuffer;
+#copy(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#slice(II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#getBytes(I[BII)V
+#getBytes(ILjava/nio/ByteBuffer;)V
+#setByte(II)V
+#setShort(II)V
+#setMedium(II)V
+#setInt(II)V
+#setLong(IJ)V
+#setBytes(I[BII)V
+#setBytes(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
+#setBytes(ILjava/nio/ByteBuffer;)V
+#getBytes(ILjava/io/OutputStream;I)V
+#getBytes(ILjava/nio/channels/GatheringByteChannel;I)I
+#setBytes(ILjava/io/InputStream;I)I
+#setBytes(ILjava/nio/channels/ScatteringByteChannel;I)I
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
@1.14.0
-###org/jboss/netty/buffer/TruncatedChannelBuffer

+###org/jboss/netty/buffer/WrappedChannelBuffer
@0.10.0
+#unwrap()Lorg/jboss/netty/buffer/ChannelBuffer;
@1.14.0
-###org/jboss/netty/buffer/WrappedChannelBuffer

+###org/jboss/netty/channel/AbstractChannel
@0.10.0
+#getId()Ljava/lang/Integer;
+#getParent()Lorg/jboss/netty/channel/Channel;
+#getFactory()Lorg/jboss/netty/channel/ChannelFactory;
+#getPipeline()Lorg/jboss/netty/channel/ChannelPipeline;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/channel/Channel;)I
+#isOpen()Z
+#bind(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#unbind()Lorg/jboss/netty/channel/ChannelFuture;
+#close()Lorg/jboss/netty/channel/ChannelFuture;
+#getCloseFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#connect(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#disconnect()Lorg/jboss/netty/channel/ChannelFuture;
+#getInterestOps()I
+#setInterestOps(I)Lorg/jboss/netty/channel/ChannelFuture;
+#isReadable()Z
+#isWritable()Z
+#setReadable(Z)Lorg/jboss/netty/channel/ChannelFuture;
+#write(Ljava/lang/Object;)Lorg/jboss/netty/channel/ChannelFuture;
+#write(Ljava/lang/Object;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#getAttachment()Ljava/lang/Object;
+#setAttachment(Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/channel/AbstractChannel

+###org/jboss/netty/channel/AbstractChannelSink
@0.10.0
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelPipeline;Lorg/jboss/netty/channel/ChannelEvent;Lorg/jboss/netty/channel/ChannelPipelineException;)V
+#execute(Lorg/jboss/netty/channel/ChannelPipeline;Ljava/lang/Runnable;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/channel/AbstractChannelSink

+###org/jboss/netty/channel/AbstractServerChannel
@0.10.0
+#connect(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#disconnect()Lorg/jboss/netty/channel/ChannelFuture;
+#getInterestOps()I
+#setInterestOps(I)Lorg/jboss/netty/channel/ChannelFuture;
+#write(Ljava/lang/Object;)Lorg/jboss/netty/channel/ChannelFuture;
+#write(Ljava/lang/Object;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#isConnected()Z
@1.14.0
-###org/jboss/netty/channel/AbstractServerChannel

+###org/jboss/netty/channel/AdaptiveReceiveBufferSizePredictor
@0.10.0
+#<init>()V
+#<init>(III)V
+#nextReceiveBufferSize()I
+#previousReceiveBufferSize(I)V
@1.14.0
-###org/jboss/netty/channel/AdaptiveReceiveBufferSizePredictor

+###org/jboss/netty/channel/AdaptiveReceiveBufferSizePredictorFactory
@0.10.0
+#<init>()V
+#<init>(III)V
+#getPredictor()Lorg/jboss/netty/channel/ReceiveBufferSizePredictor;
@1.14.0
-###org/jboss/netty/channel/AdaptiveReceiveBufferSizePredictorFactory

+###org/jboss/netty/channel/Channel
@0.10.0
+#getId()Ljava/lang/Integer;
+#getFactory()Lorg/jboss/netty/channel/ChannelFactory;
+#getParent()Lorg/jboss/netty/channel/Channel;
+#getConfig()Lorg/jboss/netty/channel/ChannelConfig;
+#getPipeline()Lorg/jboss/netty/channel/ChannelPipeline;
+#isOpen()Z
+#isBound()Z
+#isConnected()Z
+#getLocalAddress()Ljava/net/SocketAddress;
+#getRemoteAddress()Ljava/net/SocketAddress;
+#write(Ljava/lang/Object;)Lorg/jboss/netty/channel/ChannelFuture;
+#write(Ljava/lang/Object;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#bind(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#connect(Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#disconnect()Lorg/jboss/netty/channel/ChannelFuture;
+#unbind()Lorg/jboss/netty/channel/ChannelFuture;
+#close()Lorg/jboss/netty/channel/ChannelFuture;
+#getCloseFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#getInterestOps()I
+#isReadable()Z
+#isWritable()Z
+#setInterestOps(I)Lorg/jboss/netty/channel/ChannelFuture;
+#setReadable(Z)Lorg/jboss/netty/channel/ChannelFuture;
+#getAttachment()Ljava/lang/Object;
+#setAttachment(Ljava/lang/Object;)V
@1.14.0
-###org/jboss/netty/channel/Channel

+###org/jboss/netty/channel/ChannelConfig
@0.10.0
+#setOptions(Ljava/util/Map;)V
+#setOption(Ljava/lang/String;Ljava/lang/Object;)Z
+#getBufferFactory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#setBufferFactory(Lorg/jboss/netty/buffer/ChannelBufferFactory;)V
+#getPipelineFactory()Lorg/jboss/netty/channel/ChannelPipelineFactory;
+#setPipelineFactory(Lorg/jboss/netty/channel/ChannelPipelineFactory;)V
+#getConnectTimeoutMillis()I
+#setConnectTimeoutMillis(I)V
@1.14.0
-###org/jboss/netty/channel/ChannelConfig

+###org/jboss/netty/channel/ChannelDownstreamHandler
@0.10.0
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/channel/ChannelDownstreamHandler

+###org/jboss/netty/channel/ChannelEvent
@0.10.0
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getFuture()Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/channel/ChannelEvent

+###org/jboss/netty/channel/ChannelException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/channel/ChannelException

+###org/jboss/netty/channel/ChannelFactory
@0.10.0
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/Channel;
+#shutdown()V
+#releaseExternalResources()V
@1.14.0
-###org/jboss/netty/channel/ChannelFactory

+###org/jboss/netty/channel/ChannelFuture
@0.10.0
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#isDone()Z
+#isCancelled()Z
+#isSuccess()Z
+#getCause()Ljava/lang/Throwable;
+#cancel()Z
+#setSuccess()Z
+#setFailure(Ljava/lang/Throwable;)Z
+#setProgress(JJJ)Z
+#addListener(Lorg/jboss/netty/channel/ChannelFutureListener;)V
+#removeListener(Lorg/jboss/netty/channel/ChannelFutureListener;)V
+#rethrowIfFailed()Lorg/jboss/netty/channel/ChannelFuture;[deprecated]
+#sync()Lorg/jboss/netty/channel/ChannelFuture;
+#syncUninterruptibly()Lorg/jboss/netty/channel/ChannelFuture;
+#await()Lorg/jboss/netty/channel/ChannelFuture;
+#awaitUninterruptibly()Lorg/jboss/netty/channel/ChannelFuture;
+#await(JLjava/util/concurrent/TimeUnit;)Z
+#await(J)Z
+#awaitUninterruptibly(JLjava/util/concurrent/TimeUnit;)Z
+#awaitUninterruptibly(J)Z
@1.14.0
-###org/jboss/netty/channel/ChannelFuture

+###org/jboss/netty/channel/ChannelFutureListener
@0.10.0
+#operationComplete(Lorg/jboss/netty/channel/ChannelFuture;)V
@1.14.0
-###org/jboss/netty/channel/ChannelFutureListener

+###org/jboss/netty/channel/ChannelFutureNotifier
@0.10.0
+#<init>(Lorg/jboss/netty/channel/ChannelFuture;)V
+#operationComplete(Lorg/jboss/netty/channel/ChannelFuture;)V
@1.14.0
-###org/jboss/netty/channel/ChannelFutureNotifier

+###org/jboss/netty/channel/ChannelFutureProgressListener
@0.10.0
+#operationProgressed(Lorg/jboss/netty/channel/ChannelFuture;JJJ)V
@1.14.0
-###org/jboss/netty/channel/ChannelFutureProgressListener

+###org/jboss/netty/channel/ChannelHandler$Sharable
@0.10.0
@1.14.0
-###org/jboss/netty/channel/ChannelHandler$Sharable

+###org/jboss/netty/channel/ChannelHandler
@0.10.0
@1.14.0
-###org/jboss/netty/channel/ChannelHandler

+###org/jboss/netty/channel/ChannelHandlerContext
@0.10.0
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getPipeline()Lorg/jboss/netty/channel/ChannelPipeline;
+#getName()Ljava/lang/String;
+#getHandler()Lorg/jboss/netty/channel/ChannelHandler;
+#canHandleUpstream()Z
+#canHandleDownstream()Z
+#sendUpstream(Lorg/jboss/netty/channel/ChannelEvent;)V
+#sendDownstream(Lorg/jboss/netty/channel/ChannelEvent;)V
+#getAttachment()Ljava/lang/Object;
+#setAttachment(Ljava/lang/Object;)V
@1.14.0
-###org/jboss/netty/channel/ChannelHandlerContext

+###org/jboss/netty/channel/ChannelHandlerLifeCycleException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/channel/ChannelHandlerLifeCycleException

+###org/jboss/netty/channel/ChannelLocal
@0.10.0
+#<init>()V
+#<init>(Z)V
+#get(Lorg/jboss/netty/channel/Channel;)Ljava/lang/Object;
+#set(Lorg/jboss/netty/channel/Channel;Ljava/lang/Object;)Ljava/lang/Object;
+#setIfAbsent(Lorg/jboss/netty/channel/Channel;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Lorg/jboss/netty/channel/Channel;)Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
@1.14.0
-###org/jboss/netty/channel/ChannelLocal

+###org/jboss/netty/channel/ChannelPipeline
@0.10.0
+#addFirst(Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#addLast(Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#addBefore(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#addAfter(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#remove(Lorg/jboss/netty/channel/ChannelHandler;)V
+#remove(Ljava/lang/String;)Lorg/jboss/netty/channel/ChannelHandler;
+#remove(Ljava/lang/Class;)Lorg/jboss/netty/channel/ChannelHandler;
+#removeFirst()Lorg/jboss/netty/channel/ChannelHandler;
+#removeLast()Lorg/jboss/netty/channel/ChannelHandler;
+#replace(Lorg/jboss/netty/channel/ChannelHandler;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#replace(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)Lorg/jboss/netty/channel/ChannelHandler;
+#replace(Ljava/lang/Class;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)Lorg/jboss/netty/channel/ChannelHandler;
+#getFirst()Lorg/jboss/netty/channel/ChannelHandler;
+#getLast()Lorg/jboss/netty/channel/ChannelHandler;
+#get(Ljava/lang/String;)Lorg/jboss/netty/channel/ChannelHandler;
+#get(Ljava/lang/Class;)Lorg/jboss/netty/channel/ChannelHandler;
+#getContext(Lorg/jboss/netty/channel/ChannelHandler;)Lorg/jboss/netty/channel/ChannelHandlerContext;
+#getContext(Ljava/lang/String;)Lorg/jboss/netty/channel/ChannelHandlerContext;
+#getContext(Ljava/lang/Class;)Lorg/jboss/netty/channel/ChannelHandlerContext;
+#sendUpstream(Lorg/jboss/netty/channel/ChannelEvent;)V
+#sendDownstream(Lorg/jboss/netty/channel/ChannelEvent;)V
+#execute(Ljava/lang/Runnable;)Lorg/jboss/netty/channel/ChannelFuture;
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getSink()Lorg/jboss/netty/channel/ChannelSink;
+#attach(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelSink;)V
+#isAttached()Z
+#getNames()Ljava/util/List;
+#toMap()Ljava/util/Map;
@1.14.0
-###org/jboss/netty/channel/ChannelPipeline

+###org/jboss/netty/channel/ChannelPipelineCoverage
@0.10.0
+#value()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/channel/ChannelPipelineCoverage

+###org/jboss/netty/channel/ChannelPipelineException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/channel/ChannelPipelineException

+###org/jboss/netty/channel/ChannelPipelineFactory
@0.10.0
+#getPipeline()Lorg/jboss/netty/channel/ChannelPipeline;
@1.14.0
-###org/jboss/netty/channel/ChannelPipelineFactory

+###org/jboss/netty/channel/ChannelSink
@0.10.0
+#eventSunk(Lorg/jboss/netty/channel/ChannelPipeline;Lorg/jboss/netty/channel/ChannelEvent;)V
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelPipeline;Lorg/jboss/netty/channel/ChannelEvent;Lorg/jboss/netty/channel/ChannelPipelineException;)V
+#execute(Lorg/jboss/netty/channel/ChannelPipeline;Ljava/lang/Runnable;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/channel/ChannelSink

+###org/jboss/netty/channel/ChannelState
@0.10.0
+#values()[Lorg/jboss/netty/channel/ChannelState;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/channel/ChannelState;
@1.14.0
-###org/jboss/netty/channel/ChannelState

+###org/jboss/netty/channel/ChannelStateEvent
@0.10.0
+#getState()Lorg/jboss/netty/channel/ChannelState;
+#getValue()Ljava/lang/Object;
@1.14.0
-###org/jboss/netty/channel/ChannelStateEvent

+###org/jboss/netty/channel/ChannelUpstreamHandler
@0.10.0
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/channel/ChannelUpstreamHandler

+###org/jboss/netty/channel/Channels
@0.10.0
+#pipeline()Lorg/jboss/netty/channel/ChannelPipeline;
+#pipeline([Lorg/jboss/netty/channel/ChannelHandler;)Lorg/jboss/netty/channel/ChannelPipeline;
+#pipeline(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/ChannelPipeline;
+#pipelineFactory(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/ChannelPipelineFactory;
+#future(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#future(Lorg/jboss/netty/channel/Channel;Z)Lorg/jboss/netty/channel/ChannelFuture;
+#succeededFuture(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#failedFuture(Lorg/jboss/netty/channel/Channel;Ljava/lang/Throwable;)Lorg/jboss/netty/channel/ChannelFuture;
+#fireChannelOpen(Lorg/jboss/netty/channel/Channel;)V
+#fireChannelOpen(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#fireChannelBound(Lorg/jboss/netty/channel/Channel;Ljava/net/SocketAddress;)V
+#fireChannelBound(Lorg/jboss/netty/channel/ChannelHandlerContext;Ljava/net/SocketAddress;)V
+#fireChannelConnected(Lorg/jboss/netty/channel/Channel;Ljava/net/SocketAddress;)V
+#fireChannelConnected(Lorg/jboss/netty/channel/ChannelHandlerContext;Ljava/net/SocketAddress;)V
+#fireMessageReceived(Lorg/jboss/netty/channel/Channel;Ljava/lang/Object;)V
+#fireMessageReceived(Lorg/jboss/netty/channel/Channel;Ljava/lang/Object;Ljava/net/SocketAddress;)V
+#fireMessageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
+#fireMessageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/net/SocketAddress;)V
+#fireWriteCompleteLater(Lorg/jboss/netty/channel/Channel;J)Lorg/jboss/netty/channel/ChannelFuture;
+#fireWriteComplete(Lorg/jboss/netty/channel/Channel;J)V
+#fireWriteComplete(Lorg/jboss/netty/channel/ChannelHandlerContext;J)V
+#fireChannelInterestChangedLater(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#fireChannelInterestChanged(Lorg/jboss/netty/channel/Channel;)V
+#fireChannelInterestChanged(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#fireChannelDisconnectedLater(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#fireChannelDisconnected(Lorg/jboss/netty/channel/Channel;)V
+#fireChannelDisconnected(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#fireChannelUnboundLater(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#fireChannelUnbound(Lorg/jboss/netty/channel/Channel;)V
+#fireChannelUnbound(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#fireChannelClosedLater(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#fireChannelClosed(Lorg/jboss/netty/channel/Channel;)V
+#fireChannelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#fireExceptionCaughtLater(Lorg/jboss/netty/channel/Channel;Ljava/lang/Throwable;)Lorg/jboss/netty/channel/ChannelFuture;
+#fireExceptionCaughtLater(Lorg/jboss/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)Lorg/jboss/netty/channel/ChannelFuture;
+#fireExceptionCaught(Lorg/jboss/netty/channel/Channel;Ljava/lang/Throwable;)V
+#fireExceptionCaught(Lorg/jboss/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
+#bind(Lorg/jboss/netty/channel/Channel;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#bind(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelFuture;Ljava/net/SocketAddress;)V
+#unbind(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelFuture;)V
+#unbind(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#connect(Lorg/jboss/netty/channel/Channel;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#connect(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelFuture;Ljava/net/SocketAddress;)V
+#write(Lorg/jboss/netty/channel/Channel;Ljava/lang/Object;)Lorg/jboss/netty/channel/ChannelFuture;
+#write(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelFuture;Ljava/lang/Object;)V
+#write(Lorg/jboss/netty/channel/Channel;Ljava/lang/Object;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#write(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelFuture;Ljava/lang/Object;Ljava/net/SocketAddress;)V
+#setInterestOps(Lorg/jboss/netty/channel/Channel;I)Lorg/jboss/netty/channel/ChannelFuture;
+#setInterestOps(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelFuture;I)V
+#disconnect(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#disconnect(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelFuture;)V
+#close(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#close(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelFuture;)V
@1.14.0
-###org/jboss/netty/channel/Channels

+###org/jboss/netty/channel/ChildChannelStateEvent
@0.10.0
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getChildChannel()Lorg/jboss/netty/channel/Channel;
@1.14.0
-###org/jboss/netty/channel/ChildChannelStateEvent

+###org/jboss/netty/channel/CompleteChannelFuture
@0.10.0
+#addListener(Lorg/jboss/netty/channel/ChannelFutureListener;)V
+#removeListener(Lorg/jboss/netty/channel/ChannelFutureListener;)V
+#await()Lorg/jboss/netty/channel/ChannelFuture;
+#await(JLjava/util/concurrent/TimeUnit;)Z
+#await(J)Z
+#awaitUninterruptibly()Lorg/jboss/netty/channel/ChannelFuture;
+#awaitUninterruptibly(JLjava/util/concurrent/TimeUnit;)Z
+#awaitUninterruptibly(J)Z
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#isDone()Z
+#setProgress(JJJ)Z
+#setFailure(Ljava/lang/Throwable;)Z
+#setSuccess()Z
+#cancel()Z
+#isCancelled()Z
@1.14.0
-###org/jboss/netty/channel/CompleteChannelFuture

+###org/jboss/netty/channel/ConnectTimeoutException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>()V
@1.14.0
-###org/jboss/netty/channel/ConnectTimeoutException

+###org/jboss/netty/channel/DefaultChannelConfig
@0.10.0
+#<init>()V
+#setOptions(Ljava/util/Map;)V
+#setOption(Ljava/lang/String;Ljava/lang/Object;)Z
+#getConnectTimeoutMillis()I
+#getBufferFactory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#setBufferFactory(Lorg/jboss/netty/buffer/ChannelBufferFactory;)V
+#getPipelineFactory()Lorg/jboss/netty/channel/ChannelPipelineFactory;
+#setConnectTimeoutMillis(I)V
+#setPipelineFactory(Lorg/jboss/netty/channel/ChannelPipelineFactory;)V
@1.14.0
-###org/jboss/netty/channel/DefaultChannelConfig

+###org/jboss/netty/channel/DefaultChannelFuture
@0.10.0
+#isUseDeadLockChecker()Z
+#setUseDeadLockChecker(Z)V
+#<init>(Lorg/jboss/netty/channel/Channel;Z)V
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#isDone()Z
+#isSuccess()Z
+#getCause()Ljava/lang/Throwable;
+#isCancelled()Z
+#addListener(Lorg/jboss/netty/channel/ChannelFutureListener;)V
+#removeListener(Lorg/jboss/netty/channel/ChannelFutureListener;)V
+#rethrowIfFailed()Lorg/jboss/netty/channel/ChannelFuture;[deprecated]
+#sync()Lorg/jboss/netty/channel/ChannelFuture;
+#syncUninterruptibly()Lorg/jboss/netty/channel/ChannelFuture;
+#await()Lorg/jboss/netty/channel/ChannelFuture;
+#await(JLjava/util/concurrent/TimeUnit;)Z
+#await(J)Z
+#awaitUninterruptibly()Lorg/jboss/netty/channel/ChannelFuture;
+#awaitUninterruptibly(JLjava/util/concurrent/TimeUnit;)Z
+#awaitUninterruptibly(J)Z
+#setSuccess()Z
+#setFailure(Ljava/lang/Throwable;)Z
+#cancel()Z
+#setProgress(JJJ)Z
@1.14.0
-###org/jboss/netty/channel/DefaultChannelFuture

+###org/jboss/netty/channel/DefaultChannelPipeline
@0.10.0
+#<init>()V
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getSink()Lorg/jboss/netty/channel/ChannelSink;
+#attach(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelSink;)V
+#isAttached()Z
+#addFirst(Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#addLast(Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#addBefore(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#addAfter(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#remove(Lorg/jboss/netty/channel/ChannelHandler;)V
+#remove(Ljava/lang/String;)Lorg/jboss/netty/channel/ChannelHandler;
+#remove(Ljava/lang/Class;)Lorg/jboss/netty/channel/ChannelHandler;
+#removeFirst()Lorg/jboss/netty/channel/ChannelHandler;
+#removeLast()Lorg/jboss/netty/channel/ChannelHandler;
+#replace(Lorg/jboss/netty/channel/ChannelHandler;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#replace(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)Lorg/jboss/netty/channel/ChannelHandler;
+#replace(Ljava/lang/Class;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)Lorg/jboss/netty/channel/ChannelHandler;
+#getFirst()Lorg/jboss/netty/channel/ChannelHandler;
+#getLast()Lorg/jboss/netty/channel/ChannelHandler;
+#get(Ljava/lang/String;)Lorg/jboss/netty/channel/ChannelHandler;
+#get(Ljava/lang/Class;)Lorg/jboss/netty/channel/ChannelHandler;
+#getContext(Ljava/lang/String;)Lorg/jboss/netty/channel/ChannelHandlerContext;
+#getContext(Lorg/jboss/netty/channel/ChannelHandler;)Lorg/jboss/netty/channel/ChannelHandlerContext;
+#getContext(Ljava/lang/Class;)Lorg/jboss/netty/channel/ChannelHandlerContext;
+#getNames()Ljava/util/List;
+#toMap()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#sendUpstream(Lorg/jboss/netty/channel/ChannelEvent;)V
+#sendDownstream(Lorg/jboss/netty/channel/ChannelEvent;)V
+#execute(Ljava/lang/Runnable;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/channel/DefaultChannelPipeline

+###org/jboss/netty/channel/DefaultChildChannelStateEvent
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/Channel;)V
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#getChildChannel()Lorg/jboss/netty/channel/Channel;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/channel/DefaultChildChannelStateEvent

+###org/jboss/netty/channel/DefaultExceptionEvent
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;Ljava/lang/Throwable;)V
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#getCause()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/channel/DefaultExceptionEvent

+###org/jboss/netty/channel/DefaultFileRegion
@0.10.0
+#<init>(Ljava/nio/channels/FileChannel;JJ)V
+#<init>(Ljava/nio/channels/FileChannel;JJZ)V
+#getPosition()J
+#getCount()J
+#releaseAfterTransfer()Z
+#transferTo(Ljava/nio/channels/WritableByteChannel;J)J
+#releaseExternalResources()V
@1.14.0
-###org/jboss/netty/channel/DefaultFileRegion

+###org/jboss/netty/channel/DefaultServerChannelConfig
@0.10.0
+#<init>()V
+#setOptions(Ljava/util/Map;)V
+#setOption(Ljava/lang/String;Ljava/lang/Object;)Z
+#getPipelineFactory()Lorg/jboss/netty/channel/ChannelPipelineFactory;
+#setPipelineFactory(Lorg/jboss/netty/channel/ChannelPipelineFactory;)V
+#getBufferFactory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#setBufferFactory(Lorg/jboss/netty/buffer/ChannelBufferFactory;)V
+#getConnectTimeoutMillis()I
+#setConnectTimeoutMillis(I)V
@1.14.0
-###org/jboss/netty/channel/DefaultServerChannelConfig

+###org/jboss/netty/channel/DefaultWriteCompletionEvent
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;J)V
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#getWrittenAmount()J
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/channel/DefaultWriteCompletionEvent

+###org/jboss/netty/channel/DownstreamChannelStateEvent
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelFuture;Lorg/jboss/netty/channel/ChannelState;Ljava/lang/Object;)V
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#getState()Lorg/jboss/netty/channel/ChannelState;
+#getValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/channel/DownstreamChannelStateEvent

+###org/jboss/netty/channel/DownstreamMessageEvent
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelFuture;Ljava/lang/Object;Ljava/net/SocketAddress;)V
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#getMessage()Ljava/lang/Object;
+#getRemoteAddress()Ljava/net/SocketAddress;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/channel/DownstreamMessageEvent

+###org/jboss/netty/channel/ExceptionEvent
@0.10.0
+#getCause()Ljava/lang/Throwable;
@1.14.0
-###org/jboss/netty/channel/ExceptionEvent

+###org/jboss/netty/channel/FailedChannelFuture
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;Ljava/lang/Throwable;)V
+#getCause()Ljava/lang/Throwable;
+#isSuccess()Z
+#rethrowIfFailed()Lorg/jboss/netty/channel/ChannelFuture;[deprecated]
+#sync()Lorg/jboss/netty/channel/ChannelFuture;
+#syncUninterruptibly()Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/channel/FailedChannelFuture

+###org/jboss/netty/channel/FileRegion
@0.10.0
+#getPosition()J
+#getCount()J
+#transferTo(Ljava/nio/channels/WritableByteChannel;J)J
@1.14.0
-###org/jboss/netty/channel/FileRegion

+###org/jboss/netty/channel/FixedReceiveBufferSizePredictor
@0.10.0
+#<init>(I)V
+#nextReceiveBufferSize()I
+#previousReceiveBufferSize(I)V
@1.14.0
-###org/jboss/netty/channel/FixedReceiveBufferSizePredictor

+###org/jboss/netty/channel/FixedReceiveBufferSizePredictorFactory
@0.10.0
+#<init>(I)V
+#getPredictor()Lorg/jboss/netty/channel/ReceiveBufferSizePredictor;
@1.14.0
-###org/jboss/netty/channel/FixedReceiveBufferSizePredictorFactory

+###org/jboss/netty/channel/LifeCycleAwareChannelHandler
@0.10.0
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
@1.14.0
-###org/jboss/netty/channel/LifeCycleAwareChannelHandler

+###org/jboss/netty/channel/MessageEvent
@0.10.0
+#getMessage()Ljava/lang/Object;
+#getRemoteAddress()Ljava/net/SocketAddress;
@1.14.0
-###org/jboss/netty/channel/MessageEvent

+###org/jboss/netty/channel/ReceiveBufferSizePredictor
@0.10.0
+#nextReceiveBufferSize()I
+#previousReceiveBufferSize(I)V
@1.14.0
-###org/jboss/netty/channel/ReceiveBufferSizePredictor

+###org/jboss/netty/channel/ReceiveBufferSizePredictorFactory
@0.10.0
+#getPredictor()Lorg/jboss/netty/channel/ReceiveBufferSizePredictor;
@1.14.0
-###org/jboss/netty/channel/ReceiveBufferSizePredictorFactory

+###org/jboss/netty/channel/ServerChannel
@0.10.0
@1.14.0
-###org/jboss/netty/channel/ServerChannel

+###org/jboss/netty/channel/ServerChannelFactory
@0.10.0
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/ServerChannel;
@1.14.0
-###org/jboss/netty/channel/ServerChannelFactory

+###org/jboss/netty/channel/SimpleChannelDownstreamHandler
@0.10.0
+#<init>()V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#writeRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#bindRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#connectRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#setInterestOpsRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#disconnectRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#unbindRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#closeRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
@1.14.0
-###org/jboss/netty/channel/SimpleChannelDownstreamHandler

+###org/jboss/netty/channel/SimpleChannelHandler
@0.10.0
+#<init>()V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ExceptionEvent;)V
+#channelOpen(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelBound(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelConnected(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelInterestChanged(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelDisconnected(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelUnbound(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#writeComplete(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/WriteCompletionEvent;)V
+#childChannelOpen(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChildChannelStateEvent;)V
+#childChannelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChildChannelStateEvent;)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#writeRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#bindRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#connectRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#setInterestOpsRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#disconnectRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#unbindRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#closeRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
@1.14.0
-###org/jboss/netty/channel/SimpleChannelHandler

+###org/jboss/netty/channel/SimpleChannelUpstreamHandler
@0.10.0
+#<init>()V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ExceptionEvent;)V
+#channelOpen(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelBound(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelConnected(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelInterestChanged(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelDisconnected(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelUnbound(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#writeComplete(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/WriteCompletionEvent;)V
+#childChannelOpen(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChildChannelStateEvent;)V
+#childChannelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChildChannelStateEvent;)V
@1.14.0
-###org/jboss/netty/channel/SimpleChannelUpstreamHandler

+###org/jboss/netty/channel/StaticChannelPipeline
@0.10.0
+#<init>([Lorg/jboss/netty/channel/ChannelHandler;)V
+#execute(Ljava/lang/Runnable;)Lorg/jboss/netty/channel/ChannelFuture;
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getSink()Lorg/jboss/netty/channel/ChannelSink;
+#attach(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelSink;)V
+#isAttached()Z
+#addFirst(Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#addLast(Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#addBefore(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#addAfter(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#remove(Lorg/jboss/netty/channel/ChannelHandler;)V
+#remove(Ljava/lang/String;)Lorg/jboss/netty/channel/ChannelHandler;
+#remove(Ljava/lang/Class;)Lorg/jboss/netty/channel/ChannelHandler;
+#removeFirst()Lorg/jboss/netty/channel/ChannelHandler;
+#removeLast()Lorg/jboss/netty/channel/ChannelHandler;
+#replace(Lorg/jboss/netty/channel/ChannelHandler;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#replace(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)Lorg/jboss/netty/channel/ChannelHandler;
+#replace(Ljava/lang/Class;Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)Lorg/jboss/netty/channel/ChannelHandler;
+#getFirst()Lorg/jboss/netty/channel/ChannelHandler;
+#getLast()Lorg/jboss/netty/channel/ChannelHandler;
+#get(Ljava/lang/String;)Lorg/jboss/netty/channel/ChannelHandler;
+#get(Ljava/lang/Class;)Lorg/jboss/netty/channel/ChannelHandler;
+#getContext(Ljava/lang/String;)Lorg/jboss/netty/channel/ChannelHandlerContext;
+#getContext(Lorg/jboss/netty/channel/ChannelHandler;)Lorg/jboss/netty/channel/ChannelHandlerContext;
+#getContext(Ljava/lang/Class;)Lorg/jboss/netty/channel/ChannelHandlerContext;
+#getNames()Ljava/util/List;
+#toMap()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#sendUpstream(Lorg/jboss/netty/channel/ChannelEvent;)V
+#sendDownstream(Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/channel/StaticChannelPipeline

+###org/jboss/netty/channel/SucceededChannelFuture
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;)V
+#getCause()Ljava/lang/Throwable;
+#isSuccess()Z
+#rethrowIfFailed()Lorg/jboss/netty/channel/ChannelFuture;[deprecated]
+#sync()Lorg/jboss/netty/channel/ChannelFuture;
+#syncUninterruptibly()Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/channel/SucceededChannelFuture

+###org/jboss/netty/channel/UpstreamChannelStateEvent
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelState;Ljava/lang/Object;)V
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#getState()Lorg/jboss/netty/channel/ChannelState;
+#getValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/channel/UpstreamChannelStateEvent

+###org/jboss/netty/channel/UpstreamMessageEvent
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;Ljava/lang/Object;Ljava/net/SocketAddress;)V
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#getMessage()Ljava/lang/Object;
+#getRemoteAddress()Ljava/net/SocketAddress;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/channel/UpstreamMessageEvent

+###org/jboss/netty/channel/WriteCompletionEvent
@0.10.0
+#getWrittenAmount()J
@1.14.0
-###org/jboss/netty/channel/WriteCompletionEvent

+###org/jboss/netty/channel/group/ChannelGroup
@0.10.0
+#getName()Ljava/lang/String;
+#find(Ljava/lang/Integer;)Lorg/jboss/netty/channel/Channel;
+#setInterestOps(I)Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#setReadable(Z)Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#write(Ljava/lang/Object;)Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#write(Ljava/lang/Object;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#disconnect()Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#unbind()Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#close()Lorg/jboss/netty/channel/group/ChannelGroupFuture;
@1.14.0
-###org/jboss/netty/channel/group/ChannelGroup

+###org/jboss/netty/channel/group/ChannelGroupFuture
@0.10.0
+#getGroup()Lorg/jboss/netty/channel/group/ChannelGroup;
+#find(Ljava/lang/Integer;)Lorg/jboss/netty/channel/ChannelFuture;
+#find(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#isDone()Z
+#isCompleteSuccess()Z
+#isPartialSuccess()Z
+#isCompleteFailure()Z
+#isPartialFailure()Z
+#addListener(Lorg/jboss/netty/channel/group/ChannelGroupFutureListener;)V
+#removeListener(Lorg/jboss/netty/channel/group/ChannelGroupFutureListener;)V
+#await()Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#awaitUninterruptibly()Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#await(JLjava/util/concurrent/TimeUnit;)Z
+#await(J)Z
+#awaitUninterruptibly(JLjava/util/concurrent/TimeUnit;)Z
+#awaitUninterruptibly(J)Z
+#iterator()Ljava/util/Iterator;
@1.14.0
-###org/jboss/netty/channel/group/ChannelGroupFuture

+###org/jboss/netty/channel/group/ChannelGroupFutureListener
@0.10.0
+#operationComplete(Lorg/jboss/netty/channel/group/ChannelGroupFuture;)V
@1.14.0
-###org/jboss/netty/channel/group/ChannelGroupFutureListener

+###org/jboss/netty/channel/group/DefaultChannelGroup
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#isEmpty()Z
+#size()I
+#find(Ljava/lang/Integer;)Lorg/jboss/netty/channel/Channel;
+#contains(Ljava/lang/Object;)Z
+#add(Lorg/jboss/netty/channel/Channel;)Z
+#remove(Ljava/lang/Object;)Z
+#clear()V
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#close()Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#disconnect()Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#setInterestOps(I)Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#setReadable(Z)Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#unbind()Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#write(Ljava/lang/Object;)Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#write(Ljava/lang/Object;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/channel/group/ChannelGroup;)I
+#toString()Ljava/lang/String;
+#add(Ljava/lang/Object;)Z
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/channel/group/DefaultChannelGroup

+###org/jboss/netty/channel/group/DefaultChannelGroupFuture
@0.10.0
+#<init>(Lorg/jboss/netty/channel/group/ChannelGroup;Ljava/util/Collection;)V
+#getGroup()Lorg/jboss/netty/channel/group/ChannelGroup;
+#find(Ljava/lang/Integer;)Lorg/jboss/netty/channel/ChannelFuture;
+#find(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#iterator()Ljava/util/Iterator;
+#isDone()Z
+#isCompleteSuccess()Z
+#isPartialSuccess()Z
+#isPartialFailure()Z
+#isCompleteFailure()Z
+#addListener(Lorg/jboss/netty/channel/group/ChannelGroupFutureListener;)V
+#removeListener(Lorg/jboss/netty/channel/group/ChannelGroupFutureListener;)V
+#await()Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#await(JLjava/util/concurrent/TimeUnit;)Z
+#await(J)Z
+#awaitUninterruptibly()Lorg/jboss/netty/channel/group/ChannelGroupFuture;
+#awaitUninterruptibly(JLjava/util/concurrent/TimeUnit;)Z
+#awaitUninterruptibly(J)Z
@1.14.0
-###org/jboss/netty/channel/group/DefaultChannelGroupFuture

+###org/jboss/netty/channel/local/DefaultLocalClientChannelFactory
@0.10.0
+#<init>()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/local/LocalChannel;
+#releaseExternalResources()V
+#shutdown()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/Channel;
@1.14.0
-###org/jboss/netty/channel/local/DefaultLocalClientChannelFactory

+###org/jboss/netty/channel/local/DefaultLocalServerChannelFactory
@0.10.0
+#<init>()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/local/LocalServerChannel;
+#releaseExternalResources()V
+#shutdown()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/ServerChannel;
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/Channel;
@1.14.0
-###org/jboss/netty/channel/local/DefaultLocalServerChannelFactory

+###org/jboss/netty/channel/local/LocalAddress
@0.10.0
+#<init>(I)V
+#<init>(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#isEphemeral()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/channel/local/LocalAddress;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/channel/local/LocalAddress

+###org/jboss/netty/channel/local/LocalChannel
@0.10.0
+#getLocalAddress()Lorg/jboss/netty/channel/local/LocalAddress;
+#getRemoteAddress()Lorg/jboss/netty/channel/local/LocalAddress;
@1.14.0
-###org/jboss/netty/channel/local/LocalChannel

+###org/jboss/netty/channel/local/LocalClientChannelFactory
@0.10.0
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/local/LocalChannel;
@1.14.0
-###org/jboss/netty/channel/local/LocalClientChannelFactory

+###org/jboss/netty/channel/local/LocalServerChannel
@0.10.0
+#getLocalAddress()Lorg/jboss/netty/channel/local/LocalAddress;
+#getRemoteAddress()Lorg/jboss/netty/channel/local/LocalAddress;
@1.14.0
-###org/jboss/netty/channel/local/LocalServerChannel

+###org/jboss/netty/channel/local/LocalServerChannelFactory
@0.10.0
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/local/LocalServerChannel;
@1.14.0
-###org/jboss/netty/channel/local/LocalServerChannelFactory

+###org/jboss/netty/channel/socket/ChannelRunnableWrapper
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;Ljava/lang/Runnable;)V
+#run()V
+#cancel()Z
@1.14.0
-###org/jboss/netty/channel/socket/ChannelRunnableWrapper

+###org/jboss/netty/channel/socket/ClientSocketChannelFactory
@0.10.0
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/SocketChannel;
@1.14.0
-###org/jboss/netty/channel/socket/ClientSocketChannelFactory

+###org/jboss/netty/channel/socket/DatagramChannel
@0.10.0
+#getConfig()Lorg/jboss/netty/channel/socket/DatagramChannelConfig;
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#joinGroup(Ljava/net/InetAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#joinGroup(Ljava/net/InetSocketAddress;Ljava/net/NetworkInterface;)Lorg/jboss/netty/channel/ChannelFuture;
+#leaveGroup(Ljava/net/InetAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#leaveGroup(Ljava/net/InetSocketAddress;Ljava/net/NetworkInterface;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/channel/socket/DatagramChannel

+###org/jboss/netty/channel/socket/DatagramChannelConfig
@0.10.0
+#getSendBufferSize()I
+#setSendBufferSize(I)V
+#getReceiveBufferSize()I
+#setReceiveBufferSize(I)V
+#getTrafficClass()I
+#setTrafficClass(I)V
+#isReuseAddress()Z
+#setReuseAddress(Z)V
+#isBroadcast()Z
+#setBroadcast(Z)V
+#isLoopbackModeDisabled()Z
+#setLoopbackModeDisabled(Z)V
+#getTimeToLive()I
+#setTimeToLive(I)V
+#getInterface()Ljava/net/InetAddress;
+#setInterface(Ljava/net/InetAddress;)V
+#getNetworkInterface()Ljava/net/NetworkInterface;
+#setNetworkInterface(Ljava/net/NetworkInterface;)V
+#getReceiveBufferSizePredictor()Lorg/jboss/netty/channel/ReceiveBufferSizePredictor;
+#setReceiveBufferSizePredictor(Lorg/jboss/netty/channel/ReceiveBufferSizePredictor;)V
+#getReceiveBufferSizePredictorFactory()Lorg/jboss/netty/channel/ReceiveBufferSizePredictorFactory;
+#setReceiveBufferSizePredictorFactory(Lorg/jboss/netty/channel/ReceiveBufferSizePredictorFactory;)V
@1.14.0
-###org/jboss/netty/channel/socket/DatagramChannelConfig

+###org/jboss/netty/channel/socket/DatagramChannelFactory
@0.10.0
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/DatagramChannel;
@1.14.0
-###org/jboss/netty/channel/socket/DatagramChannelFactory

+###org/jboss/netty/channel/socket/DefaultDatagramChannelConfig
@0.10.0
+#<init>(Ljava/net/DatagramSocket;)V
+#setOption(Ljava/lang/String;Ljava/lang/Object;)Z
+#isBroadcast()Z
+#setBroadcast(Z)V
+#getInterface()Ljava/net/InetAddress;
+#setInterface(Ljava/net/InetAddress;)V
+#isLoopbackModeDisabled()Z
+#setLoopbackModeDisabled(Z)V
+#getNetworkInterface()Ljava/net/NetworkInterface;
+#setNetworkInterface(Ljava/net/NetworkInterface;)V
+#isReuseAddress()Z
+#setReuseAddress(Z)V
+#getReceiveBufferSize()I
+#setReceiveBufferSize(I)V
+#getSendBufferSize()I
+#setSendBufferSize(I)V
+#getTimeToLive()I
+#setTimeToLive(I)V
+#getTrafficClass()I
+#setTrafficClass(I)V
+#getReceiveBufferSizePredictor()Lorg/jboss/netty/channel/ReceiveBufferSizePredictor;
+#setReceiveBufferSizePredictor(Lorg/jboss/netty/channel/ReceiveBufferSizePredictor;)V
+#getReceiveBufferSizePredictorFactory()Lorg/jboss/netty/channel/ReceiveBufferSizePredictorFactory;
+#setReceiveBufferSizePredictorFactory(Lorg/jboss/netty/channel/ReceiveBufferSizePredictorFactory;)V
@1.14.0
-###org/jboss/netty/channel/socket/DefaultDatagramChannelConfig

+###org/jboss/netty/channel/socket/DefaultServerSocketChannelConfig
@0.10.0
+#<init>(Ljava/net/ServerSocket;)V
+#setOption(Ljava/lang/String;Ljava/lang/Object;)Z
+#isReuseAddress()Z
+#setReuseAddress(Z)V
+#getReceiveBufferSize()I
+#setReceiveBufferSize(I)V
+#setPerformancePreferences(III)V
+#getBacklog()I
+#setBacklog(I)V
@1.14.0
-###org/jboss/netty/channel/socket/DefaultServerSocketChannelConfig

+###org/jboss/netty/channel/socket/DefaultSocketChannelConfig
@0.10.0
+#<init>(Ljava/net/Socket;)V
+#setOption(Ljava/lang/String;Ljava/lang/Object;)Z
+#getReceiveBufferSize()I
+#getSendBufferSize()I
+#getSoLinger()I
+#getTrafficClass()I
+#isKeepAlive()Z
+#isReuseAddress()Z
+#isTcpNoDelay()Z
+#setKeepAlive(Z)V
+#setPerformancePreferences(III)V
+#setReceiveBufferSize(I)V
+#setReuseAddress(Z)V
+#setSendBufferSize(I)V
+#setSoLinger(I)V
+#setTcpNoDelay(Z)V
+#setTrafficClass(I)V
@1.14.0
-###org/jboss/netty/channel/socket/DefaultSocketChannelConfig

+###org/jboss/netty/channel/socket/InternetProtocolFamily
@0.10.0
+#values()[Lorg/jboss/netty/channel/socket/InternetProtocolFamily;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/channel/socket/InternetProtocolFamily;
@1.14.0
-###org/jboss/netty/channel/socket/InternetProtocolFamily

+###org/jboss/netty/channel/socket/ServerSocketChannel
@0.10.0
+#getConfig()Lorg/jboss/netty/channel/socket/ServerSocketChannelConfig;
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
@1.14.0
-###org/jboss/netty/channel/socket/ServerSocketChannel

+###org/jboss/netty/channel/socket/ServerSocketChannelConfig
@0.10.0
+#getBacklog()I
+#setBacklog(I)V
+#isReuseAddress()Z
+#setReuseAddress(Z)V
+#getReceiveBufferSize()I
+#setReceiveBufferSize(I)V
+#setPerformancePreferences(III)V
@1.14.0
-###org/jboss/netty/channel/socket/ServerSocketChannelConfig

+###org/jboss/netty/channel/socket/ServerSocketChannelFactory
@0.10.0
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/ServerSocketChannel;
@1.14.0
-###org/jboss/netty/channel/socket/ServerSocketChannelFactory

+###org/jboss/netty/channel/socket/SocketChannel
@0.10.0
+#getConfig()Lorg/jboss/netty/channel/socket/SocketChannelConfig;
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
@1.14.0
-###org/jboss/netty/channel/socket/SocketChannel

+###org/jboss/netty/channel/socket/SocketChannelConfig
@0.10.0
+#isTcpNoDelay()Z
+#setTcpNoDelay(Z)V
+#getSoLinger()I
+#setSoLinger(I)V
+#getSendBufferSize()I
+#setSendBufferSize(I)V
+#getReceiveBufferSize()I
+#setReceiveBufferSize(I)V
+#isKeepAlive()Z
+#setKeepAlive(Z)V
+#getTrafficClass()I
+#setTrafficClass(I)V
+#isReuseAddress()Z
+#setReuseAddress(Z)V
+#setPerformancePreferences(III)V
@1.14.0
-###org/jboss/netty/channel/socket/SocketChannelConfig

+###org/jboss/netty/channel/socket/Worker
@0.10.0
+#executeInIoThread(Ljava/lang/Runnable;)V
@1.14.0
-###org/jboss/netty/channel/socket/Worker

+###org/jboss/netty/channel/socket/http/HttpTunnelingClientSocketChannelFactory
@0.10.0
+#<init>(Lorg/jboss/netty/channel/socket/ClientSocketChannelFactory;)V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/SocketChannel;
+#releaseExternalResources()V
+#shutdown()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/Channel;
@1.14.0
-###org/jboss/netty/channel/socket/http/HttpTunnelingClientSocketChannelFactory

+###org/jboss/netty/channel/socket/http/HttpTunnelingServlet
@0.10.0
+#<init>()V
+#init()V
+#destroy()V
@1.14.0
-###org/jboss/netty/channel/socket/http/HttpTunnelingServlet

+###org/jboss/netty/channel/socket/http/HttpTunnelingSocketChannelConfig
@0.10.0
+#getServerName()Ljava/lang/String;
+#setServerName(Ljava/lang/String;)V
+#getServerPath()Ljava/lang/String;
+#setServerPath(Ljava/lang/String;)V
+#getSslContext()Ljavax/net/ssl/SSLContext;
+#setSslContext(Ljavax/net/ssl/SSLContext;)V
+#getEnabledSslCipherSuites()[Ljava/lang/String;
+#setEnabledSslCipherSuites([Ljava/lang/String;)V
+#getEnabledSslProtocols()[Ljava/lang/String;
+#setEnabledSslProtocols([Ljava/lang/String;)V
+#isEnableSslSessionCreation()Z
+#setEnableSslSessionCreation(Z)V
+#setOptions(Ljava/util/Map;)V
+#setOption(Ljava/lang/String;Ljava/lang/Object;)Z
+#getReceiveBufferSize()I
+#getSendBufferSize()I
+#getSoLinger()I
+#getTrafficClass()I
+#isKeepAlive()Z
+#isReuseAddress()Z
+#isTcpNoDelay()Z
+#setKeepAlive(Z)V
+#setPerformancePreferences(III)V
+#setReceiveBufferSize(I)V
+#setReuseAddress(Z)V
+#setSendBufferSize(I)V
+#setSoLinger(I)V
+#setTcpNoDelay(Z)V
+#setTrafficClass(I)V
+#getBufferFactory()Lorg/jboss/netty/buffer/ChannelBufferFactory;
+#getConnectTimeoutMillis()I
+#getPipelineFactory()Lorg/jboss/netty/channel/ChannelPipelineFactory;
+#setBufferFactory(Lorg/jboss/netty/buffer/ChannelBufferFactory;)V
+#setConnectTimeoutMillis(I)V
+#setPipelineFactory(Lorg/jboss/netty/channel/ChannelPipelineFactory;)V
@1.14.0
-###org/jboss/netty/channel/socket/http/HttpTunnelingSocketChannelConfig

+###org/jboss/netty/channel/socket/nio/AbstractNioBossPool
@0.10.0
+#nextBoss()Lorg/jboss/netty/channel/socket/nio/Boss;
+#rebuildSelectors()V
+#releaseExternalResources()V
+#shutdown()V
@1.14.0
-###org/jboss/netty/channel/socket/nio/AbstractNioBossPool

+###org/jboss/netty/channel/socket/nio/AbstractNioChannelSink
@0.10.0
+#<init>()V
+#execute(Lorg/jboss/netty/channel/ChannelPipeline;Ljava/lang/Runnable;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/channel/socket/nio/AbstractNioChannelSink

+###org/jboss/netty/channel/socket/nio/AbstractNioWorkerPool
@0.10.0
+#nextWorker()Lorg/jboss/netty/channel/socket/nio/AbstractNioWorker;
+#rebuildSelectors()V
+#releaseExternalResources()V
+#shutdown()V
+#nextWorker()Lorg/jboss/netty/channel/socket/Worker;
@1.14.0
-###org/jboss/netty/channel/socket/nio/AbstractNioWorkerPool

+###org/jboss/netty/channel/socket/nio/Boss
@0.10.0
@1.14.0
-###org/jboss/netty/channel/socket/nio/Boss

+###org/jboss/netty/channel/socket/nio/BossPool
@0.10.0
+#nextBoss()Lorg/jboss/netty/channel/socket/nio/Boss;
@1.14.0
-###org/jboss/netty/channel/socket/nio/BossPool

+###org/jboss/netty/channel/socket/nio/NioChannelConfig
@0.10.0
+#getWriteBufferHighWaterMark()I
+#setWriteBufferHighWaterMark(I)V
+#getWriteBufferLowWaterMark()I
+#setWriteBufferLowWaterMark(I)V
+#getWriteSpinCount()I
+#setWriteSpinCount(I)V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioChannelConfig

+###org/jboss/netty/channel/socket/nio/NioClientBoss
@0.10.0
+#shutdown()V
+#run()V
+#rebuildSelector()V
+#register(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelFuture;)V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioClientBoss

+###org/jboss/netty/channel/socket/nio/NioClientBossPool
@0.10.0
+#<init>(Ljava/util/concurrent/Executor;ILorg/jboss/netty/util/Timer;Lorg/jboss/netty/util/ThreadNameDeterminer;)V
+#<init>(Ljava/util/concurrent/Executor;I)V
+#shutdown()V
+#releaseExternalResources()V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioClientBossPool

+###org/jboss/netty/channel/socket/nio/NioClientSocketChannelFactory
@0.10.0
+#<init>()V
+#<init>(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;I)V
+#<init>(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;II)V
+#<init>(Ljava/util/concurrent/Executor;ILorg/jboss/netty/channel/socket/nio/WorkerPool;)V
+#<init>(Ljava/util/concurrent/Executor;ILorg/jboss/netty/channel/socket/nio/WorkerPool;Lorg/jboss/netty/util/Timer;)V
+#<init>(Lorg/jboss/netty/channel/socket/nio/BossPool;Lorg/jboss/netty/channel/socket/nio/WorkerPool;)V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/SocketChannel;
+#shutdown()V
+#releaseExternalResources()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/Channel;
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioClientSocketChannelFactory

+###org/jboss/netty/channel/socket/nio/NioDatagramChannel
@0.10.0
+#getWorker()Lorg/jboss/netty/channel/socket/nio/NioDatagramWorker;
+#isBound()Z
+#isConnected()Z
+#getConfig()Lorg/jboss/netty/channel/socket/nio/NioDatagramChannelConfig;
+#joinGroup(Ljava/net/InetAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#joinGroup(Ljava/net/InetSocketAddress;Ljava/net/NetworkInterface;)Lorg/jboss/netty/channel/ChannelFuture;
+#joinGroup(Ljava/net/InetAddress;Ljava/net/NetworkInterface;Ljava/net/InetAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#leaveGroup(Ljava/net/InetAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#leaveGroup(Ljava/net/InetSocketAddress;Ljava/net/NetworkInterface;)Lorg/jboss/netty/channel/ChannelFuture;
+#leaveGroup(Ljava/net/InetAddress;Ljava/net/NetworkInterface;Ljava/net/InetAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#block(Ljava/net/InetAddress;Ljava/net/NetworkInterface;Ljava/net/InetAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#block(Ljava/net/InetAddress;Ljava/net/InetAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#write(Ljava/lang/Object;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#getInterestOps()I
+#getConfig()Lorg/jboss/netty/channel/socket/nio/NioChannelConfig;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getWorker()Lorg/jboss/netty/channel/socket/nio/AbstractNioWorker;
+#getConfig()Lorg/jboss/netty/channel/ChannelConfig;
+#getConfig()Lorg/jboss/netty/channel/socket/DatagramChannelConfig;
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioDatagramChannel

+###org/jboss/netty/channel/socket/nio/NioDatagramChannelConfig
@0.10.0
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioDatagramChannelConfig

+###org/jboss/netty/channel/socket/nio/NioDatagramChannelFactory
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/channel/socket/InternetProtocolFamily;)V
+#<init>(Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;I)V
+#<init>(Lorg/jboss/netty/channel/socket/nio/WorkerPool;)V
+#<init>(Ljava/util/concurrent/Executor;Lorg/jboss/netty/channel/socket/InternetProtocolFamily;)V
+#<init>(Ljava/util/concurrent/Executor;ILorg/jboss/netty/channel/socket/InternetProtocolFamily;)V
+#<init>(Lorg/jboss/netty/channel/socket/nio/WorkerPool;Lorg/jboss/netty/channel/socket/InternetProtocolFamily;)V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/DatagramChannel;
+#shutdown()V
+#releaseExternalResources()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/Channel;
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioDatagramChannelFactory

+###org/jboss/netty/channel/socket/nio/NioDatagramWorker
@0.10.0
+#writeFromUserCode(Lorg/jboss/netty/channel/socket/nio/AbstractNioChannel;)V
+#run()V
+#executeInIoThread(Ljava/lang/Runnable;Z)V
+#executeInIoThread(Ljava/lang/Runnable;)V
+#shutdown()V
+#rebuildSelector()V
+#register(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelFuture;)V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioDatagramWorker

+###org/jboss/netty/channel/socket/nio/NioDatagramWorkerPool
@0.10.0
+#<init>(Ljava/util/concurrent/Executor;I)V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioDatagramWorkerPool

+###org/jboss/netty/channel/socket/nio/NioSelector
@0.10.0
+#register(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelFuture;)V
+#rebuildSelector()V
+#shutdown()V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioSelector

+###org/jboss/netty/channel/socket/nio/NioSelectorPool
@0.10.0
+#rebuildSelectors()V
+#shutdown()V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioSelectorPool

+###org/jboss/netty/channel/socket/nio/NioServerBoss
@0.10.0
+#shutdown()V
+#run()V
+#rebuildSelector()V
+#register(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelFuture;)V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioServerBoss

+###org/jboss/netty/channel/socket/nio/NioServerBossPool
@0.10.0
+#<init>(Ljava/util/concurrent/Executor;ILorg/jboss/netty/util/ThreadNameDeterminer;)V
+#<init>(Ljava/util/concurrent/Executor;I)V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioServerBossPool

+###org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory
@0.10.0
+#<init>()V
+#<init>(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;I)V
+#<init>(Ljava/util/concurrent/Executor;ILjava/util/concurrent/Executor;I)V
+#<init>(Ljava/util/concurrent/Executor;Lorg/jboss/netty/channel/socket/nio/WorkerPool;)V
+#<init>(Ljava/util/concurrent/Executor;ILorg/jboss/netty/channel/socket/nio/WorkerPool;)V
+#<init>(Lorg/jboss/netty/channel/socket/nio/BossPool;Lorg/jboss/netty/channel/socket/nio/WorkerPool;)V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/ServerSocketChannel;
+#shutdown()V
+#releaseExternalResources()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/ServerChannel;
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/Channel;
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory

+###org/jboss/netty/channel/socket/nio/NioSocketChannel
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelFactory;Lorg/jboss/netty/channel/ChannelPipeline;Lorg/jboss/netty/channel/ChannelSink;Ljava/nio/channels/SocketChannel;Lorg/jboss/netty/channel/socket/nio/NioWorker;)V
+#getWorker()Lorg/jboss/netty/channel/socket/nio/NioWorker;
+#getConfig()Lorg/jboss/netty/channel/socket/nio/NioSocketChannelConfig;
+#isOpen()Z
+#isBound()Z
+#isConnected()Z
+#write(Ljava/lang/Object;Ljava/net/SocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#getInterestOps()I
+#getConfig()Lorg/jboss/netty/channel/socket/nio/NioChannelConfig;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getWorker()Lorg/jboss/netty/channel/socket/nio/AbstractNioWorker;
+#getConfig()Lorg/jboss/netty/channel/ChannelConfig;
+#getConfig()Lorg/jboss/netty/channel/socket/SocketChannelConfig;
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioSocketChannel

+###org/jboss/netty/channel/socket/nio/NioSocketChannelConfig
@0.10.0
+#getReceiveBufferSizePredictor()Lorg/jboss/netty/channel/ReceiveBufferSizePredictor;
+#setReceiveBufferSizePredictor(Lorg/jboss/netty/channel/ReceiveBufferSizePredictor;)V
+#getReceiveBufferSizePredictorFactory()Lorg/jboss/netty/channel/ReceiveBufferSizePredictorFactory;
+#setReceiveBufferSizePredictorFactory(Lorg/jboss/netty/channel/ReceiveBufferSizePredictorFactory;)V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioSocketChannelConfig

+###org/jboss/netty/channel/socket/nio/NioWorker
@0.10.0
+#<init>(Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Lorg/jboss/netty/util/ThreadNameDeterminer;)V
+#run()V
+#executeInIoThread(Ljava/lang/Runnable;Z)V
+#executeInIoThread(Ljava/lang/Runnable;)V
+#shutdown()V
+#rebuildSelector()V
+#register(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/channel/ChannelFuture;)V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioWorker

+###org/jboss/netty/channel/socket/nio/NioWorkerPool
@0.10.0
+#<init>(Ljava/util/concurrent/Executor;I)V
+#<init>(Ljava/util/concurrent/Executor;ILorg/jboss/netty/util/ThreadNameDeterminer;)V
@1.14.0
-###org/jboss/netty/channel/socket/nio/NioWorkerPool

+###org/jboss/netty/channel/socket/nio/ShareableWorkerPool
@0.10.0
+#<init>(Lorg/jboss/netty/channel/socket/nio/WorkerPool;)V
+#nextWorker()Lorg/jboss/netty/channel/socket/Worker;
+#rebuildSelectors()V
+#destroy()V
+#shutdown()V
@1.14.0
-###org/jboss/netty/channel/socket/nio/ShareableWorkerPool

+###org/jboss/netty/channel/socket/nio/WorkerPool
@0.10.0
+#nextWorker()Lorg/jboss/netty/channel/socket/Worker;
@1.14.0
-###org/jboss/netty/channel/socket/nio/WorkerPool

+###org/jboss/netty/channel/socket/oio/AbstractOioChannelSink
@0.10.0
+#<init>()V
+#execute(Lorg/jboss/netty/channel/ChannelPipeline;Ljava/lang/Runnable;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/channel/socket/oio/AbstractOioChannelSink

+###org/jboss/netty/channel/socket/oio/OioClientSocketChannelFactory
@0.10.0
+#<init>()V
+#<init>(Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Lorg/jboss/netty/util/ThreadNameDeterminer;)V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/SocketChannel;
+#shutdown()V
+#releaseExternalResources()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/Channel;
@1.14.0
-###org/jboss/netty/channel/socket/oio/OioClientSocketChannelFactory

+###org/jboss/netty/channel/socket/oio/OioDatagramChannelFactory
@0.10.0
+#<init>()V
+#<init>(Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Lorg/jboss/netty/util/ThreadNameDeterminer;)V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/DatagramChannel;
+#shutdown()V
+#releaseExternalResources()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/Channel;
@1.14.0
-###org/jboss/netty/channel/socket/oio/OioDatagramChannelFactory

+###org/jboss/netty/channel/socket/oio/OioServerSocketChannelFactory
@0.10.0
+#<init>()V
+#<init>(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lorg/jboss/netty/util/ThreadNameDeterminer;)V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/ServerSocketChannel;
+#shutdown()V
+#releaseExternalResources()V
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/ServerChannel;
+#newChannel(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/Channel;
@1.14.0
-###org/jboss/netty/channel/socket/oio/OioServerSocketChannelFactory

+###org/jboss/netty/container/microcontainer/NettyLoggerConfigurator
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/container/microcontainer/NettyLoggerConfigurator

+###org/jboss/netty/container/osgi/NettyBundleActivator
@0.10.0
+#<init>()V
+#start(Lorg/osgi/framework/BundleContext;)V
+#stop(Lorg/osgi/framework/BundleContext;)V
@1.14.0
-###org/jboss/netty/container/osgi/NettyBundleActivator

+###org/jboss/netty/container/spring/NettyLoggerConfigurator
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/container/spring/NettyLoggerConfigurator

+###org/jboss/netty/handler/codec/PrematureChannelClosureException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/PrematureChannelClosureException

+###org/jboss/netty/handler/codec/base64/Base64
@0.10.0
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;Lorg/jboss/netty/handler/codec/base64/Base64Dialect;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;Lorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;Lorg/jboss/netty/handler/codec/base64/Base64Dialect;Lorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;Z)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;ZLorg/jboss/netty/handler/codec/base64/Base64Dialect;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;ZLorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;ZLorg/jboss/netty/handler/codec/base64/Base64Dialect;Lorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;IILorg/jboss/netty/handler/codec/base64/Base64Dialect;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;IILorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;IILorg/jboss/netty/handler/codec/base64/Base64Dialect;Lorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;IIZ)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;IIZLorg/jboss/netty/handler/codec/base64/Base64Dialect;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;IIZLorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#encode(Lorg/jboss/netty/buffer/ChannelBuffer;IIZLorg/jboss/netty/handler/codec/base64/Base64Dialect;Lorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#decode(Lorg/jboss/netty/buffer/ChannelBuffer;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#decode(Lorg/jboss/netty/buffer/ChannelBuffer;Lorg/jboss/netty/handler/codec/base64/Base64Dialect;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#decode(Lorg/jboss/netty/buffer/ChannelBuffer;Lorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#decode(Lorg/jboss/netty/buffer/ChannelBuffer;Lorg/jboss/netty/handler/codec/base64/Base64Dialect;Lorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#decode(Lorg/jboss/netty/buffer/ChannelBuffer;II)Lorg/jboss/netty/buffer/ChannelBuffer;
+#decode(Lorg/jboss/netty/buffer/ChannelBuffer;IILorg/jboss/netty/handler/codec/base64/Base64Dialect;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#decode(Lorg/jboss/netty/buffer/ChannelBuffer;IILorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
+#decode(Lorg/jboss/netty/buffer/ChannelBuffer;IILorg/jboss/netty/handler/codec/base64/Base64Dialect;Lorg/jboss/netty/buffer/ChannelBufferFactory;)Lorg/jboss/netty/buffer/ChannelBuffer;
@1.14.0
-###org/jboss/netty/handler/codec/base64/Base64

+###org/jboss/netty/handler/codec/base64/Base64Decoder
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/handler/codec/base64/Base64Dialect;)V
@1.14.0
-###org/jboss/netty/handler/codec/base64/Base64Decoder

+###org/jboss/netty/handler/codec/base64/Base64Dialect
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/base64/Base64Dialect;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/base64/Base64Dialect;
@1.14.0
-###org/jboss/netty/handler/codec/base64/Base64Dialect

+###org/jboss/netty/handler/codec/base64/Base64Encoder
@0.10.0
+#<init>()V
+#<init>(Z)V
+#<init>(ZLorg/jboss/netty/handler/codec/base64/Base64Dialect;)V
@1.14.0
-###org/jboss/netty/handler/codec/base64/Base64Encoder

+###org/jboss/netty/handler/codec/compression/CompressionException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/compression/CompressionException

+###org/jboss/netty/handler/codec/compression/JdkZlibEncoder
@0.10.0
+#<init>()V
+#<init>(I)V
+#<init>(Lorg/jboss/netty/handler/codec/compression/ZlibWrapper;)V
+#<init>(Lorg/jboss/netty/handler/codec/compression/ZlibWrapper;I)V
+#<init>([B)V
+#<init>(I[B)V
+#close()Lorg/jboss/netty/channel/ChannelFuture;
+#isClosed()Z
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
@1.14.0
-###org/jboss/netty/handler/codec/compression/JdkZlibEncoder

+###org/jboss/netty/handler/codec/compression/ZlibDecoder
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/handler/codec/compression/ZlibWrapper;)V
+#<init>([B)V
+#isClosed()Z
@1.14.0
-###org/jboss/netty/handler/codec/compression/ZlibDecoder

+###org/jboss/netty/handler/codec/compression/ZlibEncoder
@0.10.0
+#<init>()V
+#<init>(I)V
+#<init>(Lorg/jboss/netty/handler/codec/compression/ZlibWrapper;)V
+#<init>(Lorg/jboss/netty/handler/codec/compression/ZlibWrapper;I)V
+#<init>(Lorg/jboss/netty/handler/codec/compression/ZlibWrapper;III)V
+#<init>([B)V
+#<init>(I[B)V
+#<init>(III[B)V
+#close()Lorg/jboss/netty/channel/ChannelFuture;
+#isClosed()Z
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
@1.14.0
-###org/jboss/netty/handler/codec/compression/ZlibEncoder

+###org/jboss/netty/handler/codec/compression/ZlibWrapper
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/compression/ZlibWrapper;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/compression/ZlibWrapper;
@1.14.0
-###org/jboss/netty/handler/codec/compression/ZlibWrapper

+###org/jboss/netty/handler/codec/embedder/CodecEmbedder
@0.10.0
+#offer(Ljava/lang/Object;)Z
+#finish()Z
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#pollAll()[Ljava/lang/Object;
+#pollAll([Ljava/lang/Object;)[Ljava/lang/Object;
+#size()I
+#getPipeline()Lorg/jboss/netty/channel/ChannelPipeline;
@1.14.0
-###org/jboss/netty/handler/codec/embedder/CodecEmbedder

+###org/jboss/netty/handler/codec/embedder/CodecEmbedderException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/embedder/CodecEmbedderException

+###org/jboss/netty/handler/codec/embedder/DecoderEmbedder
@0.10.0
+#<init>([Lorg/jboss/netty/channel/ChannelUpstreamHandler;)V
+#<init>(Lorg/jboss/netty/buffer/ChannelBufferFactory;[Lorg/jboss/netty/channel/ChannelUpstreamHandler;)V
+#offer(Ljava/lang/Object;)Z
+#getPipeline()Lorg/jboss/netty/channel/ChannelPipeline;
+#finish()Z
@1.14.0
-###org/jboss/netty/handler/codec/embedder/DecoderEmbedder

+###org/jboss/netty/handler/codec/embedder/EncoderEmbedder
@0.10.0
+#<init>([Lorg/jboss/netty/channel/ChannelDownstreamHandler;)V
+#<init>(Lorg/jboss/netty/buffer/ChannelBufferFactory;[Lorg/jboss/netty/channel/ChannelDownstreamHandler;)V
+#offer(Ljava/lang/Object;)Z
+#getPipeline()Lorg/jboss/netty/channel/ChannelPipeline;
+#finish()Z
@1.14.0
-###org/jboss/netty/handler/codec/embedder/EncoderEmbedder

+###org/jboss/netty/handler/codec/frame/CorruptedFrameException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/frame/CorruptedFrameException

+###org/jboss/netty/handler/codec/frame/DelimiterBasedFrameDecoder
@0.10.0
+#<init>(ILorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(IZLorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(IZZLorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(I[Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(IZ[Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(IZZ[Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/frame/DelimiterBasedFrameDecoder

+###org/jboss/netty/handler/codec/frame/Delimiters
@0.10.0
+#nulDelimiter()[Lorg/jboss/netty/buffer/ChannelBuffer;
+#lineDelimiter()[Lorg/jboss/netty/buffer/ChannelBuffer;
@1.14.0
-###org/jboss/netty/handler/codec/frame/Delimiters

+###org/jboss/netty/handler/codec/frame/FixedLengthFrameDecoder
@0.10.0
+#<init>(I)V
+#<init>(IZ)V
@1.14.0
-###org/jboss/netty/handler/codec/frame/FixedLengthFrameDecoder

+###org/jboss/netty/handler/codec/frame/FrameDecoder
@0.10.0
+#isUnfold()Z
+#setUnfold(Z)V
+#getMaxCumulationBufferCapacity()I
+#setMaxCumulationBufferCapacity(I)V
+#getMaxCumulationBufferComponents()I
+#setMaxCumulationBufferComponents(I)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#channelDisconnected(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ExceptionEvent;)V
+#replace(Ljava/lang/String;Lorg/jboss/netty/channel/ChannelHandler;)V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
@1.14.0
-###org/jboss/netty/handler/codec/frame/FrameDecoder

+###org/jboss/netty/handler/codec/frame/LengthFieldBasedFrameDecoder
@0.10.0
+#<init>(III)V
+#<init>(IIIII)V
+#<init>(IIIIIZ)V
@1.14.0
-###org/jboss/netty/handler/codec/frame/LengthFieldBasedFrameDecoder

+###org/jboss/netty/handler/codec/frame/LengthFieldPrepender
@0.10.0
+#<init>(I)V
+#<init>(IZ)V
@1.14.0
-###org/jboss/netty/handler/codec/frame/LengthFieldPrepender

+###org/jboss/netty/handler/codec/frame/LineBasedFrameDecoder
@0.10.0
+#<init>(I)V
+#<init>(IZZ)V
@1.14.0
-###org/jboss/netty/handler/codec/frame/LineBasedFrameDecoder

+###org/jboss/netty/handler/codec/frame/TooLongFrameException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/frame/TooLongFrameException

+###org/jboss/netty/handler/codec/http/Cookie
@0.10.0
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getDomain()Ljava/lang/String;
+#setDomain(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getMaxAge()I
+#setMaxAge(I)V
+#getVersion()I
+#setVersion(I)V
+#isSecure()Z
+#setSecure(Z)V
+#isHttpOnly()Z
+#setHttpOnly(Z)V
+#getCommentUrl()Ljava/lang/String;
+#setCommentUrl(Ljava/lang/String;)V
+#isDiscard()Z
+#setDiscard(Z)V
+#getPorts()Ljava/util/Set;
+#setPorts([I)V
+#setPorts(Ljava/lang/Iterable;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/Cookie

+###org/jboss/netty/handler/codec/http/CookieDecoder
@0.10.0
+#<init>()V
+#<init>(Z)V[deprecated]
+#decode(Ljava/lang/String;)Ljava/util/Set;
@1.14.0
-###org/jboss/netty/handler/codec/http/CookieDecoder

+###org/jboss/netty/handler/codec/http/CookieEncoder
@0.10.0
+#<init>(Z)V
+#addCookie(Ljava/lang/String;Ljava/lang/String;)V
+#addCookie(Lorg/jboss/netty/handler/codec/http/Cookie;)V
+#encode()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/CookieEncoder

+###org/jboss/netty/handler/codec/http/DefaultCookie
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getDomain()Ljava/lang/String;
+#setDomain(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getCommentUrl()Ljava/lang/String;
+#setCommentUrl(Ljava/lang/String;)V
+#isDiscard()Z
+#setDiscard(Z)V
+#getPorts()Ljava/util/Set;
+#setPorts([I)V
+#setPorts(Ljava/lang/Iterable;)V
+#getMaxAge()I
+#setMaxAge(I)V
+#getVersion()I
+#setVersion(I)V
+#isSecure()Z
+#setSecure(Z)V
+#isHttpOnly()Z
+#setHttpOnly(Z)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/handler/codec/http/Cookie;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/DefaultCookie

+###org/jboss/netty/handler/codec/http/DefaultHttpChunk
@0.10.0
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#getContent()Lorg/jboss/netty/buffer/ChannelBuffer;
+#setContent(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#isLast()Z
@1.14.0
-###org/jboss/netty/handler/codec/http/DefaultHttpChunk

+###org/jboss/netty/handler/codec/http/DefaultHttpChunkTrailer
@0.10.0
+#<init>()V
+#isLast()Z
+#addHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Iterable;)V
+#removeHeader(Ljava/lang/String;)V
+#clearHeaders()V
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaders(Ljava/lang/String;)Ljava/util/List;
+#getHeaders()Ljava/util/List;
+#containsHeader(Ljava/lang/String;)Z
+#getHeaderNames()Ljava/util/Set;
+#getContent()Lorg/jboss/netty/buffer/ChannelBuffer;
+#setContent(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/DefaultHttpChunkTrailer

+###org/jboss/netty/handler/codec/http/DefaultHttpMessage
@0.10.0
+#addHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Iterable;)V
+#removeHeader(Ljava/lang/String;)V
+#getContentLength()J[deprecated]
+#getContentLength(J)J[deprecated]
+#isChunked()Z
+#setChunked(Z)V
+#isKeepAlive()Z[deprecated]
+#clearHeaders()V
+#setContent(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaders(Ljava/lang/String;)Ljava/util/List;
+#getHeaders()Ljava/util/List;
+#containsHeader(Ljava/lang/String;)Z
+#getHeaderNames()Ljava/util/Set;
+#getProtocolVersion()Lorg/jboss/netty/handler/codec/http/HttpVersion;
+#setProtocolVersion(Lorg/jboss/netty/handler/codec/http/HttpVersion;)V
+#getContent()Lorg/jboss/netty/buffer/ChannelBuffer;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/DefaultHttpMessage

+###org/jboss/netty/handler/codec/http/DefaultHttpRequest
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/http/HttpVersion;Lorg/jboss/netty/handler/codec/http/HttpMethod;Ljava/lang/String;)V
+#getMethod()Lorg/jboss/netty/handler/codec/http/HttpMethod;
+#setMethod(Lorg/jboss/netty/handler/codec/http/HttpMethod;)V
+#getUri()Ljava/lang/String;
+#setUri(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/DefaultHttpRequest

+###org/jboss/netty/handler/codec/http/DefaultHttpResponse
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/http/HttpVersion;Lorg/jboss/netty/handler/codec/http/HttpResponseStatus;)V
+#getStatus()Lorg/jboss/netty/handler/codec/http/HttpResponseStatus;
+#setStatus(Lorg/jboss/netty/handler/codec/http/HttpResponseStatus;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/DefaultHttpResponse

+###org/jboss/netty/handler/codec/http/HttpChunk
@0.10.0
+#isLast()Z
+#getContent()Lorg/jboss/netty/buffer/ChannelBuffer;
+#setContent(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpChunk

+###org/jboss/netty/handler/codec/http/HttpChunkAggregator
@0.10.0
+#<init>(I)V
+#getMaxCumulationBufferComponents()I
+#setMaxCumulationBufferComponents(I)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpChunkAggregator

+###org/jboss/netty/handler/codec/http/HttpChunkTrailer
@0.10.0
+#isLast()Z
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaders(Ljava/lang/String;)Ljava/util/List;
+#getHeaders()Ljava/util/List;
+#containsHeader(Ljava/lang/String;)Z
+#getHeaderNames()Ljava/util/Set;
+#addHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Iterable;)V
+#removeHeader(Ljava/lang/String;)V
+#clearHeaders()V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpChunkTrailer

+###org/jboss/netty/handler/codec/http/HttpClientCodec
@0.10.0
+#<init>()V
+#<init>(III)V
+#<init>(IIIZ)V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpClientCodec

+###org/jboss/netty/handler/codec/http/HttpConstants
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpConstants

+###org/jboss/netty/handler/codec/http/HttpContentCompressor
@0.10.0
+#<init>()V
+#<init>(I)V
+#<init>(III)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpContentCompressor

+###org/jboss/netty/handler/codec/http/HttpContentDecoder
@0.10.0
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpContentDecoder

+###org/jboss/netty/handler/codec/http/HttpContentDecompressor
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpContentDecompressor

+###org/jboss/netty/handler/codec/http/HttpContentEncoder
@0.10.0
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#writeRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpContentEncoder

+###org/jboss/netty/handler/codec/http/HttpHeaders$Names
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpHeaders$Names

+###org/jboss/netty/handler/codec/http/HttpHeaders$Values
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpHeaders$Values

+###org/jboss/netty/handler/codec/http/HttpHeaders
@0.10.0
+#isKeepAlive(Lorg/jboss/netty/handler/codec/http/HttpMessage;)Z
+#setKeepAlive(Lorg/jboss/netty/handler/codec/http/HttpMessage;Z)V
+#getHeader(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;)Ljava/lang/String;
+#getHeader(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#setHeader(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;Ljava/lang/Iterable;)V
+#addHeader(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;Ljava/lang/Object;)V
+#getIntHeader(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;)I
+#getIntHeader(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;I)I
+#setIntHeader(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;I)V
+#setIntHeader(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;Ljava/lang/Iterable;)V
+#addIntHeader(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;I)V
+#getContentLength(Lorg/jboss/netty/handler/codec/http/HttpMessage;)J
+#getContentLength(Lorg/jboss/netty/handler/codec/http/HttpMessage;J)J
+#setContentLength(Lorg/jboss/netty/handler/codec/http/HttpMessage;J)V
+#getHost(Lorg/jboss/netty/handler/codec/http/HttpMessage;)Ljava/lang/String;
+#getHost(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;)Ljava/lang/String;
+#setHost(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;)V
+#is100ContinueExpected(Lorg/jboss/netty/handler/codec/http/HttpMessage;)Z
+#set100ContinueExpected(Lorg/jboss/netty/handler/codec/http/HttpMessage;)V
+#set100ContinueExpected(Lorg/jboss/netty/handler/codec/http/HttpMessage;Z)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpHeaders

+###org/jboss/netty/handler/codec/http/HttpMessage
@0.10.0
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaders(Ljava/lang/String;)Ljava/util/List;
+#getHeaders()Ljava/util/List;
+#containsHeader(Ljava/lang/String;)Z
+#getHeaderNames()Ljava/util/Set;
+#getProtocolVersion()Lorg/jboss/netty/handler/codec/http/HttpVersion;
+#setProtocolVersion(Lorg/jboss/netty/handler/codec/http/HttpVersion;)V
+#getContent()Lorg/jboss/netty/buffer/ChannelBuffer;
+#setContent(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#addHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Iterable;)V
+#removeHeader(Ljava/lang/String;)V
+#clearHeaders()V
+#getContentLength()J[deprecated]
+#getContentLength(J)J[deprecated]
+#isChunked()Z
+#setChunked(Z)V
+#isKeepAlive()Z[deprecated]
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpMessage

+###org/jboss/netty/handler/codec/http/HttpMessageDecoder$State
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/http/HttpMessageDecoder$State;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/HttpMessageDecoder$State;
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpMessageDecoder$State

+###org/jboss/netty/handler/codec/http/HttpMessageDecoder
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpMessageDecoder

+###org/jboss/netty/handler/codec/http/HttpMessageEncoder
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpMessageEncoder

+###org/jboss/netty/handler/codec/http/HttpMethod
@0.10.0
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/HttpMethod;
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jboss/netty/handler/codec/http/HttpMethod;)I
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpMethod

+###org/jboss/netty/handler/codec/http/HttpRequest
@0.10.0
+#getMethod()Lorg/jboss/netty/handler/codec/http/HttpMethod;
+#setMethod(Lorg/jboss/netty/handler/codec/http/HttpMethod;)V
+#getUri()Ljava/lang/String;
+#setUri(Ljava/lang/String;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpRequest

+###org/jboss/netty/handler/codec/http/HttpRequestDecoder
@0.10.0
+#<init>()V
+#<init>(III)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpRequestDecoder

+###org/jboss/netty/handler/codec/http/HttpRequestEncoder
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpRequestEncoder

+###org/jboss/netty/handler/codec/http/HttpResponse
@0.10.0
+#getStatus()Lorg/jboss/netty/handler/codec/http/HttpResponseStatus;
+#setStatus(Lorg/jboss/netty/handler/codec/http/HttpResponseStatus;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpResponse

+###org/jboss/netty/handler/codec/http/HttpResponseDecoder
@0.10.0
+#<init>()V
+#<init>(III)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpResponseDecoder

+###org/jboss/netty/handler/codec/http/HttpResponseEncoder
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpResponseEncoder

+###org/jboss/netty/handler/codec/http/HttpResponseStatus
@0.10.0
+#valueOf(I)Lorg/jboss/netty/handler/codec/http/HttpResponseStatus;
+#<init>(ILjava/lang/String;)V
+#getCode()I
+#getReasonPhrase()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/handler/codec/http/HttpResponseStatus;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpResponseStatus

+###org/jboss/netty/handler/codec/http/HttpServerCodec
@0.10.0
+#<init>()V
+#<init>(III)V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpServerCodec

+###org/jboss/netty/handler/codec/http/HttpVersion
@0.10.0
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/HttpVersion;
+#<init>(Ljava/lang/String;)V[deprecated]
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;II)V[deprecated]
+#<init>(Ljava/lang/String;IIZ)V
+#getProtocolName()Ljava/lang/String;
+#getMajorVersion()I
+#getMinorVersion()I
+#getText()Ljava/lang/String;
+#isKeepAliveDefault()Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/handler/codec/http/HttpVersion;)I
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/HttpVersion

+###org/jboss/netty/handler/codec/http/QueryStringDecoder
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;Ljava/nio/charset/Charset;)V
+#<init>(Ljava/lang/String;Ljava/nio/charset/Charset;Z)V
+#<init>(Ljava/lang/String;Ljava/nio/charset/Charset;ZI)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#<init>(Ljava/net/URI;)V
+#<init>(Ljava/net/URI;Ljava/nio/charset/Charset;)V
+#<init>(Ljava/net/URI;Ljava/nio/charset/Charset;I)V
+#<init>(Ljava/net/URI;Ljava/lang/String;)V[deprecated]
+#getPath()Ljava/lang/String;
+#getParameters()Ljava/util/Map;
+#decodeComponent(Ljava/lang/String;)Ljava/lang/String;
+#decodeComponent(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/QueryStringDecoder

+###org/jboss/netty/handler/codec/http/QueryStringEncoder
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/nio/charset/Charset;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#addParam(Ljava/lang/String;Ljava/lang/String;)V
+#toUri()Ljava/net/URI;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/QueryStringEncoder

+###org/jboss/netty/handler/codec/http/multipart/AbstractDiskHttpData
@0.10.0
+#setContent(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#addContent(Lorg/jboss/netty/buffer/ChannelBuffer;Z)V
+#setContent(Ljava/io/File;)V
+#setContent(Ljava/io/InputStream;)V
+#delete()V
+#get()[B
+#getChannelBuffer()Lorg/jboss/netty/buffer/ChannelBuffer;
+#getChunk(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getString()Ljava/lang/String;
+#getString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#isInMemory()Z
+#renameTo(Ljava/io/File;)Z
+#getFile()Ljava/io/File;
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/AbstractDiskHttpData

+###org/jboss/netty/handler/codec/http/multipart/AbstractHttpData
@0.10.0
+#getName()Ljava/lang/String;
+#isCompleted()Z
+#getCharset()Ljava/nio/charset/Charset;
+#setCharset(Ljava/nio/charset/Charset;)V
+#length()J
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/AbstractHttpData

+###org/jboss/netty/handler/codec/http/multipart/AbstractMemoryHttpData
@0.10.0
+#setContent(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#setContent(Ljava/io/InputStream;)V
+#addContent(Lorg/jboss/netty/buffer/ChannelBuffer;Z)V
+#setContent(Ljava/io/File;)V
+#delete()V
+#get()[B
+#getString()Ljava/lang/String;
+#getString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#getChannelBuffer()Lorg/jboss/netty/buffer/ChannelBuffer;
+#getChunk(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#isInMemory()Z
+#renameTo(Ljava/io/File;)Z
+#getFile()Ljava/io/File;
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/AbstractMemoryHttpData

+###org/jboss/netty/handler/codec/http/multipart/Attribute
@0.10.0
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/Attribute

+###org/jboss/netty/handler/codec/http/multipart/DefaultHttpDataFactory
@0.10.0
+#<init>()V
+#<init>(Z)V
+#<init>(J)V
+#createAttribute(Lorg/jboss/netty/handler/codec/http/HttpRequest;Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/multipart/Attribute;
+#createAttribute(Lorg/jboss/netty/handler/codec/http/HttpRequest;Ljava/lang/String;Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/multipart/Attribute;
+#createFileUpload(Lorg/jboss/netty/handler/codec/http/HttpRequest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;J)Lorg/jboss/netty/handler/codec/http/multipart/FileUpload;
+#removeHttpDataFromClean(Lorg/jboss/netty/handler/codec/http/HttpRequest;Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)V
+#cleanRequestHttpDatas(Lorg/jboss/netty/handler/codec/http/HttpRequest;)V
+#cleanAllHttpDatas()V
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/DefaultHttpDataFactory

+###org/jboss/netty/handler/codec/http/multipart/DiskAttribute
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getHttpDataType()Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType;
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#addContent(Lorg/jboss/netty/buffer/ChannelBuffer;Z)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)I
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/Attribute;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/DiskAttribute

+###org/jboss/netty/handler/codec/http/multipart/DiskFileUpload
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;J)V
+#getHttpDataType()Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType;
+#getFilename()Ljava/lang/String;
+#setFilename(Ljava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)I
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/FileUpload;)I
+#setContentType(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#getContentTransferEncoding()Ljava/lang/String;
+#setContentTransferEncoding(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/DiskFileUpload

+###org/jboss/netty/handler/codec/http/multipart/FileUpload
@0.10.0
+#getFilename()Ljava/lang/String;
+#setFilename(Ljava/lang/String;)V
+#setContentType(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#setContentTransferEncoding(Ljava/lang/String;)V
+#getContentTransferEncoding()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/FileUpload

+###org/jboss/netty/handler/codec/http/multipart/HttpData
@0.10.0
+#setContent(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#addContent(Lorg/jboss/netty/buffer/ChannelBuffer;Z)V
+#setContent(Ljava/io/File;)V
+#setContent(Ljava/io/InputStream;)V
+#isCompleted()Z
+#length()J
+#delete()V
+#get()[B
+#getChannelBuffer()Lorg/jboss/netty/buffer/ChannelBuffer;
+#getChunk(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getString()Ljava/lang/String;
+#getString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#setCharset(Ljava/nio/charset/Charset;)V
+#getCharset()Ljava/nio/charset/Charset;
+#renameTo(Ljava/io/File;)Z
+#isInMemory()Z
+#getFile()Ljava/io/File;
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpData

+###org/jboss/netty/handler/codec/http/multipart/HttpDataFactory
@0.10.0
+#createAttribute(Lorg/jboss/netty/handler/codec/http/HttpRequest;Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/multipart/Attribute;
+#createAttribute(Lorg/jboss/netty/handler/codec/http/HttpRequest;Ljava/lang/String;Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/multipart/Attribute;
+#createFileUpload(Lorg/jboss/netty/handler/codec/http/HttpRequest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;J)Lorg/jboss/netty/handler/codec/http/multipart/FileUpload;
+#removeHttpDataFromClean(Lorg/jboss/netty/handler/codec/http/HttpRequest;Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)V
+#cleanRequestHttpDatas(Lorg/jboss/netty/handler/codec/http/HttpRequest;)V
+#cleanAllHttpDatas()V
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpDataFactory

+###org/jboss/netty/handler/codec/http/multipart/HttpPostBodyUtil$TransferEncodingMechanism
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/http/multipart/HttpPostBodyUtil$TransferEncodingMechanism;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/multipart/HttpPostBodyUtil$TransferEncodingMechanism;
+#value()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpPostBodyUtil$TransferEncodingMechanism

+###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoder$EndOfDataDecoderException
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoder$EndOfDataDecoderException

+###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoder$ErrorDataDecoderException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoder$ErrorDataDecoderException

+###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoder$IncompatibleDataDecoderException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoder$IncompatibleDataDecoderException

+###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoder$NotEnoughDataDecoderException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoder$NotEnoughDataDecoderException

+###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoder
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/http/HttpRequest;)V
+#<init>(Lorg/jboss/netty/handler/codec/http/multipart/HttpDataFactory;Lorg/jboss/netty/handler/codec/http/HttpRequest;)V
+#<init>(Lorg/jboss/netty/handler/codec/http/multipart/HttpDataFactory;Lorg/jboss/netty/handler/codec/http/HttpRequest;Ljava/nio/charset/Charset;)V
+#isMultipart()Z
+#getBodyHttpDatas()Ljava/util/List;
+#getBodyHttpDatas(Ljava/lang/String;)Ljava/util/List;
+#getBodyHttpData(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;
+#offer(Lorg/jboss/netty/handler/codec/http/HttpChunk;)V
+#hasNext()Z
+#next()Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;
+#cleanFiles()V
+#removeHttpDataFromClean(Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoder

+###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestEncoder$EncoderMode
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/http/multipart/HttpPostRequestEncoder$EncoderMode;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/multipart/HttpPostRequestEncoder$EncoderMode;
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestEncoder$EncoderMode

+###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestEncoder$ErrorDataEncoderException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestEncoder$ErrorDataEncoderException

+###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestEncoder
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/http/HttpRequest;Z)V
+#<init>(Lorg/jboss/netty/handler/codec/http/multipart/HttpDataFactory;Lorg/jboss/netty/handler/codec/http/HttpRequest;Z)V
+#<init>(Lorg/jboss/netty/handler/codec/http/multipart/HttpDataFactory;Lorg/jboss/netty/handler/codec/http/HttpRequest;ZLjava/nio/charset/Charset;)V
+#<init>(Lorg/jboss/netty/handler/codec/http/multipart/HttpDataFactory;Lorg/jboss/netty/handler/codec/http/HttpRequest;ZLjava/nio/charset/Charset;Lorg/jboss/netty/handler/codec/http/multipart/HttpPostRequestEncoder$EncoderMode;)V
+#cleanFiles()V
+#isMultipart()Z
+#getBodyListAttributes()Ljava/util/List;
+#setBodyHttpDatas(Ljava/util/List;)V
+#addBodyAttribute(Ljava/lang/String;Ljava/lang/String;)V
+#addBodyFileUpload(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Z)V
+#addBodyFileUploads(Ljava/lang/String;[Ljava/io/File;[Ljava/lang/String;[Z)V
+#addBodyHttpData(Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)V
+#finalizeRequest()Lorg/jboss/netty/handler/codec/http/HttpRequest;
+#isChunked()Z
+#close()V
+#nextChunk()Lorg/jboss/netty/handler/codec/http/HttpChunk;
+#isEndOfInput()Z
+#hasNextChunk()Z
+#nextChunk()Ljava/lang/Object;
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/HttpPostRequestEncoder

+###org/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType;
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType

+###org/jboss/netty/handler/codec/http/multipart/InterfaceHttpData
@0.10.0
+#getName()Ljava/lang/String;
+#getHttpDataType()Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType;
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/InterfaceHttpData

+###org/jboss/netty/handler/codec/http/multipart/InternalAttribute
@0.10.0
+#<init>()V[deprecated]
+#<init>(Ljava/nio/charset/Charset;)V[deprecated]
+#getHttpDataType()Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType;
+#getValue()Ljava/util/List;[deprecated]
+#addValue(Ljava/lang/String;)V
+#addValue(Ljava/lang/String;I)V
+#setValue(Ljava/lang/String;I)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)I
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/InternalAttribute;)I
+#size()I
+#toString()Ljava/lang/String;
+#toChannelBuffer()Lorg/jboss/netty/buffer/ChannelBuffer;
+#getName()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/InternalAttribute

+###org/jboss/netty/handler/codec/http/multipart/MemoryAttribute
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getHttpDataType()Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType;
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#addContent(Lorg/jboss/netty/buffer/ChannelBuffer;Z)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)I
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/Attribute;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/MemoryAttribute

+###org/jboss/netty/handler/codec/http/multipart/MemoryFileUpload
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;J)V
+#getHttpDataType()Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType;
+#getFilename()Ljava/lang/String;
+#setFilename(Ljava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)I
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/FileUpload;)I
+#setContentType(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#getContentTransferEncoding()Ljava/lang/String;
+#setContentTransferEncoding(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/MemoryFileUpload

+###org/jboss/netty/handler/codec/http/multipart/MixedAttribute
@0.10.0
+#<init>(Ljava/lang/String;J)V
+#<init>(Ljava/lang/String;Ljava/lang/String;J)V
+#addContent(Lorg/jboss/netty/buffer/ChannelBuffer;Z)V
+#delete()V
+#get()[B
+#getChannelBuffer()Lorg/jboss/netty/buffer/ChannelBuffer;
+#getCharset()Ljava/nio/charset/Charset;
+#getString()Ljava/lang/String;
+#getString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#isCompleted()Z
+#isInMemory()Z
+#length()J
+#renameTo(Ljava/io/File;)Z
+#setCharset(Ljava/nio/charset/Charset;)V
+#setContent(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#setContent(Ljava/io/File;)V
+#setContent(Ljava/io/InputStream;)V
+#getHttpDataType()Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType;
+#getName()Ljava/lang/String;
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)I
+#toString()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getChunk(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getFile()Ljava/io/File;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/MixedAttribute

+###org/jboss/netty/handler/codec/http/multipart/MixedFileUpload
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;JJ)V
+#addContent(Lorg/jboss/netty/buffer/ChannelBuffer;Z)V
+#delete()V
+#get()[B
+#getChannelBuffer()Lorg/jboss/netty/buffer/ChannelBuffer;
+#getCharset()Ljava/nio/charset/Charset;
+#getContentType()Ljava/lang/String;
+#getContentTransferEncoding()Ljava/lang/String;
+#getFilename()Ljava/lang/String;
+#getString()Ljava/lang/String;
+#getString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#isCompleted()Z
+#isInMemory()Z
+#length()J
+#renameTo(Ljava/io/File;)Z
+#setCharset(Ljava/nio/charset/Charset;)V
+#setContent(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#setContent(Ljava/io/File;)V
+#setContent(Ljava/io/InputStream;)V
+#setContentType(Ljava/lang/String;)V
+#setContentTransferEncoding(Ljava/lang/String;)V
+#setFilename(Ljava/lang/String;)V
+#getHttpDataType()Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData$HttpDataType;
+#getName()Ljava/lang/String;
+#compareTo(Lorg/jboss/netty/handler/codec/http/multipart/InterfaceHttpData;)I
+#toString()Ljava/lang/String;
+#getChunk(I)Lorg/jboss/netty/buffer/ChannelBuffer;
+#getFile()Ljava/io/File;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/http/multipart/MixedFileUpload

+###org/jboss/netty/handler/codec/http/websocket/DefaultWebSocketFrame
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(ILorg/jboss/netty/buffer/ChannelBuffer;)V
+#getType()I
+#isText()Z
+#isBinary()Z
+#getBinaryData()Lorg/jboss/netty/buffer/ChannelBuffer;
+#getTextData()Ljava/lang/String;
+#setData(ILorg/jboss/netty/buffer/ChannelBuffer;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocket/DefaultWebSocketFrame

+###org/jboss/netty/handler/codec/http/websocket/WebSocketFrame
@0.10.0
+#getType()I
+#isText()Z
+#isBinary()Z
+#getBinaryData()Lorg/jboss/netty/buffer/ChannelBuffer;
+#getTextData()Ljava/lang/String;
+#setData(ILorg/jboss/netty/buffer/ChannelBuffer;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocket/WebSocketFrame

+###org/jboss/netty/handler/codec/http/websocket/WebSocketFrameDecoder
@0.10.0
+#<init>()V
+#<init>(I)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocket/WebSocketFrameDecoder

+###org/jboss/netty/handler/codec/http/websocket/WebSocketFrameEncoder
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocket/WebSocketFrameEncoder

+###org/jboss/netty/handler/codec/http/websocketx/BinaryWebSocketFrame
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(ZILorg/jboss/netty/buffer/ChannelBuffer;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/BinaryWebSocketFrame

+###org/jboss/netty/handler/codec/http/websocketx/CloseWebSocketFrame
@0.10.0
+#<init>()V
+#<init>(ILjava/lang/String;)V
+#<init>(ZI)V
+#<init>(ZIILjava/lang/String;)V
+#<init>(ZILorg/jboss/netty/buffer/ChannelBuffer;)V
+#getStatusCode()I
+#getReasonText()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/CloseWebSocketFrame

+###org/jboss/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(ZILorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(ZILorg/jboss/netty/buffer/ChannelBuffer;Ljava/lang/String;)V
+#<init>(ZILjava/lang/String;)V
+#getText()Ljava/lang/String;
+#setText(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#getAggregatedText()Ljava/lang/String;
+#setAggregatedText(Ljava/lang/String;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/ContinuationWebSocketFrame

+###org/jboss/netty/handler/codec/http/websocketx/PingWebSocketFrame
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(ZILorg/jboss/netty/buffer/ChannelBuffer;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/PingWebSocketFrame

+###org/jboss/netty/handler/codec/http/websocketx/PongWebSocketFrame
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(ZILorg/jboss/netty/buffer/ChannelBuffer;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/PongWebSocketFrame

+###org/jboss/netty/handler/codec/http/websocketx/TextWebSocketFrame
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#<init>(ZILjava/lang/String;)V
+#<init>(ZILorg/jboss/netty/buffer/ChannelBuffer;)V
+#getText()Ljava/lang/String;
+#setText(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/TextWebSocketFrame

+###org/jboss/netty/handler/codec/http/websocketx/WebSocket00FrameDecoder
@0.10.0
+#<init>()V
+#<init>(I)V[deprecated]
+#<init>(J)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocket00FrameDecoder

+###org/jboss/netty/handler/codec/http/websocketx/WebSocket00FrameEncoder
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocket00FrameEncoder

+###org/jboss/netty/handler/codec/http/websocketx/WebSocket07FrameDecoder
@0.10.0
+#<init>(ZZJ)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocket07FrameDecoder

+###org/jboss/netty/handler/codec/http/websocketx/WebSocket07FrameEncoder
@0.10.0
+#<init>(Z)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocket07FrameEncoder

+###org/jboss/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder$State
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder$State;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder$State;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder$State

+###org/jboss/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder
@0.10.0
+#<init>(ZZ)V
+#<init>(ZZJ)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder

+###org/jboss/netty/handler/codec/http/websocketx/WebSocket08FrameEncoder
@0.10.0
+#<init>(Z)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocket08FrameEncoder

+###org/jboss/netty/handler/codec/http/websocketx/WebSocket13FrameDecoder
@0.10.0
+#<init>(ZZ)V
+#<init>(ZZJ)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocket13FrameDecoder

+###org/jboss/netty/handler/codec/http/websocketx/WebSocket13FrameEncoder
@0.10.0
+#<init>(Z)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocket13FrameEncoder

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker
@0.10.0
+#getWebSocketUrl()Ljava/net/URI;
+#getVersion()Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;
+#getMaxFramePayloadLength()J
+#isHandshakeComplete()Z
+#getExpectedSubprotocol()Ljava/lang/String;
+#getActualSubprotocol()Ljava/lang/String;
+#handshake(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#finishHandshake(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/HttpResponse;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00
@0.10.0
+#<init>(Ljava/net/URI;Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;Ljava/util/Map;)V
+#<init>(Ljava/net/URI;Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;Ljava/util/Map;J)V
+#handshake(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#finishHandshake(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/HttpResponse;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker07
@0.10.0
+#<init>(Ljava/net/URI;Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;ZLjava/util/Map;J)V
+#handshake(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#finishHandshake(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/HttpResponse;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker07

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08
@0.10.0
+#<init>(Ljava/net/URI;Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;ZLjava/util/Map;)V
+#<init>(Ljava/net/URI;Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;ZLjava/util/Map;J)V
+#handshake(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#finishHandshake(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/HttpResponse;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13
@0.10.0
+#<init>(Ljava/net/URI;Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;ZLjava/util/Map;)V
+#<init>(Ljava/net/URI;Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;ZLjava/util/Map;J)V
+#handshake(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
+#finishHandshake(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/HttpResponse;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshakerFactory
@0.10.0
+#<init>()V
+#newHandshaker(Ljava/net/URI;Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;ZLjava/util/Map;)Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker;
+#newHandshaker(Ljava/net/URI;Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;ZLjava/util/Map;J)Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshakerFactory

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketFrame
@0.10.0
+#<init>()V
+#getBinaryData()Lorg/jboss/netty/buffer/ChannelBuffer;
+#setBinaryData(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#isFinalFragment()Z
+#setFinalFragment(Z)V
+#getRsv()I
+#setRsv(I)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketFrame

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketFrameType
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketFrameType;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketFrameType;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketFrameType

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketHandshakeException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketHandshakeException

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker
@0.10.0
+#getWebSocketUrl()Ljava/lang/String;
+#getSubprotocols()Ljava/util/Set;
+#getVersion()Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;
+#getMaxFramePayloadLength()J
+#handshake(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/HttpRequest;)Lorg/jboss/netty/channel/ChannelFuture;
+#close(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/websocketx/CloseWebSocketFrame;)Lorg/jboss/netty/channel/ChannelFuture;
+#getSelectedSubprotocol()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;J)V
+#handshake(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/HttpRequest;)Lorg/jboss/netty/channel/ChannelFuture;
+#close(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/websocketx/CloseWebSocketFrame;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;ZJ)V
+#handshake(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/HttpRequest;)Lorg/jboss/netty/channel/ChannelFuture;
+#close(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/websocketx/CloseWebSocketFrame;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;Ljava/lang/String;ZJ)V
+#handshake(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/HttpRequest;)Lorg/jboss/netty/channel/ChannelFuture;
+#close(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/websocketx/CloseWebSocketFrame;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;Ljava/lang/String;ZJ)V
+#handshake(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/HttpRequest;)Lorg/jboss/netty/channel/ChannelFuture;
+#close(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/codec/http/websocketx/CloseWebSocketFrame;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;Ljava/lang/String;ZJ)V
+#newHandshaker(Lorg/jboss/netty/handler/codec/http/HttpRequest;)Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;
+#sendUnsupportedWebSocketVersionResponse(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerHandshakerFactory

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ExceptionEvent;)V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler

+###org/jboss/netty/handler/codec/http/websocketx/WebSocketVersion
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/websocketx/WebSocketVersion;
+#toHttpHeaderValue()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/http/websocketx/WebSocketVersion

+###org/jboss/netty/handler/codec/marshalling/CompatibleMarshallingDecoder
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/marshalling/UnmarshallerProvider;I)V
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ExceptionEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/CompatibleMarshallingDecoder

+###org/jboss/netty/handler/codec/marshalling/CompatibleMarshallingEncoder
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/marshalling/MarshallerProvider;)V
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/CompatibleMarshallingEncoder

+###org/jboss/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider
@0.10.0
+#<init>(Lorg/jboss/marshalling/MarshallerFactory;Lorg/jboss/marshalling/MarshallingConfiguration;)V
+#getUnmarshaller(Lorg/jboss/netty/channel/ChannelHandlerContext;)Lorg/jboss/marshalling/Unmarshaller;
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider

+###org/jboss/netty/handler/codec/marshalling/DefaultMarshallerProvider
@0.10.0
+#<init>(Lorg/jboss/marshalling/MarshallerFactory;Lorg/jboss/marshalling/MarshallingConfiguration;)V
+#getMarshaller(Lorg/jboss/netty/channel/ChannelHandlerContext;)Lorg/jboss/marshalling/Marshaller;
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/DefaultMarshallerProvider

+###org/jboss/netty/handler/codec/marshalling/DefaultUnmarshallerProvider
@0.10.0
+#<init>(Lorg/jboss/marshalling/MarshallerFactory;Lorg/jboss/marshalling/MarshallingConfiguration;)V
+#getUnmarshaller(Lorg/jboss/netty/channel/ChannelHandlerContext;)Lorg/jboss/marshalling/Unmarshaller;
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/DefaultUnmarshallerProvider

+###org/jboss/netty/handler/codec/marshalling/MarshallerProvider
@0.10.0
+#getMarshaller(Lorg/jboss/netty/channel/ChannelHandlerContext;)Lorg/jboss/marshalling/Marshaller;
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/MarshallerProvider

+###org/jboss/netty/handler/codec/marshalling/MarshallingDecoder
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/marshalling/UnmarshallerProvider;)V
+#<init>(Lorg/jboss/netty/handler/codec/marshalling/UnmarshallerProvider;I)V
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/MarshallingDecoder

+###org/jboss/netty/handler/codec/marshalling/MarshallingEncoder
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/marshalling/MarshallerProvider;)V
+#<init>(Lorg/jboss/netty/handler/codec/marshalling/MarshallerProvider;I)V
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/MarshallingEncoder

+###org/jboss/netty/handler/codec/marshalling/ThreadLocalMarshallerProvider
@0.10.0
+#<init>(Lorg/jboss/marshalling/MarshallerFactory;Lorg/jboss/marshalling/MarshallingConfiguration;)V
+#getMarshaller(Lorg/jboss/netty/channel/ChannelHandlerContext;)Lorg/jboss/marshalling/Marshaller;
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/ThreadLocalMarshallerProvider

+###org/jboss/netty/handler/codec/marshalling/ThreadLocalUnmarshallerProvider
@0.10.0
+#<init>(Lorg/jboss/marshalling/MarshallerFactory;Lorg/jboss/marshalling/MarshallingConfiguration;)V
+#getUnmarshaller(Lorg/jboss/netty/channel/ChannelHandlerContext;)Lorg/jboss/marshalling/Unmarshaller;
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/ThreadLocalUnmarshallerProvider

+###org/jboss/netty/handler/codec/marshalling/UnmarshallerProvider
@0.10.0
+#getUnmarshaller(Lorg/jboss/netty/channel/ChannelHandlerContext;)Lorg/jboss/marshalling/Unmarshaller;
@1.14.0
-###org/jboss/netty/handler/codec/marshalling/UnmarshallerProvider

+###org/jboss/netty/handler/codec/oneone/OneToOneDecoder
@0.10.0
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/oneone/OneToOneDecoder

+###org/jboss/netty/handler/codec/oneone/OneToOneEncoder
@0.10.0
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/oneone/OneToOneEncoder

+###org/jboss/netty/handler/codec/oneone/OneToOneStrictEncoder
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/oneone/OneToOneStrictEncoder

+###org/jboss/netty/handler/codec/protobuf/ProtobufDecoder
@0.10.0
+#<init>(Lcom/google/protobuf/MessageLite;)V
+#<init>(Lcom/google/protobuf/MessageLite;Lcom/google/protobuf/ExtensionRegistry;)V
@1.14.0
-###org/jboss/netty/handler/codec/protobuf/ProtobufDecoder

+###org/jboss/netty/handler/codec/protobuf/ProtobufEncoder
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/protobuf/ProtobufEncoder

+###org/jboss/netty/handler/codec/protobuf/ProtobufVarint32FrameDecoder
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/protobuf/ProtobufVarint32FrameDecoder

+###org/jboss/netty/handler/codec/protobuf/ProtobufVarint32LengthFieldPrepender
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/protobuf/ProtobufVarint32LengthFieldPrepender

+###org/jboss/netty/handler/codec/replay/ReplayingDecoder
@0.10.0
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/replay/ReplayingDecoder

+###org/jboss/netty/handler/codec/replay/UnreplayableOperationException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/replay/UnreplayableOperationException

+###org/jboss/netty/handler/codec/replay/VoidEnum
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/replay/VoidEnum;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/replay/VoidEnum;
@1.14.0
-###org/jboss/netty/handler/codec/replay/VoidEnum

+###org/jboss/netty/handler/codec/rtsp/RtspHeaders$Names
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspHeaders$Names

+###org/jboss/netty/handler/codec/rtsp/RtspHeaders$Values
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspHeaders$Values

+###org/jboss/netty/handler/codec/rtsp/RtspHeaders
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspHeaders

+###org/jboss/netty/handler/codec/rtsp/RtspMessageDecoder
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspMessageDecoder

+###org/jboss/netty/handler/codec/rtsp/RtspMessageEncoder
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspMessageEncoder

+###org/jboss/netty/handler/codec/rtsp/RtspMethods
@0.10.0
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/HttpMethod;
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspMethods

+###org/jboss/netty/handler/codec/rtsp/RtspRequestDecoder
@0.10.0
+#<init>()V
+#<init>(III)V
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspRequestDecoder

+###org/jboss/netty/handler/codec/rtsp/RtspRequestEncoder
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspRequestEncoder

+###org/jboss/netty/handler/codec/rtsp/RtspResponseDecoder
@0.10.0
+#<init>()V
+#<init>(III)V
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspResponseDecoder

+###org/jboss/netty/handler/codec/rtsp/RtspResponseEncoder
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspResponseEncoder

+###org/jboss/netty/handler/codec/rtsp/RtspResponseStatuses
@0.10.0
+#valueOf(I)Lorg/jboss/netty/handler/codec/http/HttpResponseStatus;
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspResponseStatuses

+###org/jboss/netty/handler/codec/rtsp/RtspVersions
@0.10.0
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/http/HttpVersion;
@1.14.0
-###org/jboss/netty/handler/codec/rtsp/RtspVersions

+###org/jboss/netty/handler/codec/serialization/ClassResolver
@0.10.0
+#resolve(Ljava/lang/String;)Ljava/lang/Class;
@1.14.0
-###org/jboss/netty/handler/codec/serialization/ClassResolver

+###org/jboss/netty/handler/codec/serialization/ClassResolvers
@0.10.0
+#cacheDisabled(Ljava/lang/ClassLoader;)Lorg/jboss/netty/handler/codec/serialization/ClassResolver;
+#weakCachingResolver(Ljava/lang/ClassLoader;)Lorg/jboss/netty/handler/codec/serialization/ClassResolver;
+#softCachingResolver(Ljava/lang/ClassLoader;)Lorg/jboss/netty/handler/codec/serialization/ClassResolver;
+#weakCachingConcurrentResolver(Ljava/lang/ClassLoader;)Lorg/jboss/netty/handler/codec/serialization/ClassResolver;
+#softCachingConcurrentResolver(Ljava/lang/ClassLoader;)Lorg/jboss/netty/handler/codec/serialization/ClassResolver;
@1.14.0
-###org/jboss/netty/handler/codec/serialization/ClassResolvers

+###org/jboss/netty/handler/codec/serialization/CompatibleObjectDecoder
@0.10.0
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/serialization/CompatibleObjectDecoder

+###org/jboss/netty/handler/codec/serialization/CompatibleObjectEncoder
@0.10.0
+#<init>()V
+#<init>(I)V
@1.14.0
-###org/jboss/netty/handler/codec/serialization/CompatibleObjectEncoder

+###org/jboss/netty/handler/codec/serialization/ObjectDecoder
@0.10.0
+#<init>()V[deprecated]
+#<init>(Lorg/jboss/netty/handler/codec/serialization/ClassResolver;)V
+#<init>(I)V[deprecated]
+#<init>(ILorg/jboss/netty/handler/codec/serialization/ClassResolver;)V
+#<init>(ILjava/lang/ClassLoader;)V[deprecated]
@1.14.0
-###org/jboss/netty/handler/codec/serialization/ObjectDecoder

+###org/jboss/netty/handler/codec/serialization/ObjectDecoderInputStream
@0.10.0
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V
+#<init>(Ljava/io/InputStream;I)V
+#<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;I)V
+#readObject()Ljava/lang/Object;
+#available()I
+#close()V
+#mark(I)V
+#markSupported()Z
+#read()I
+#read([BII)I
+#read([B)I
+#readBoolean()Z
+#readByte()B
+#readChar()C
+#readDouble()D
+#readFloat()F
+#readFully([BII)V
+#readFully([B)V
+#readInt()I
+#readLine()Ljava/lang/String;[deprecated]
+#readLong()J
+#readShort()S
+#readUnsignedByte()I
+#readUnsignedShort()I
+#readUTF()Ljava/lang/String;
+#reset()V
+#skip(J)J
+#skipBytes(I)I
@1.14.0
-###org/jboss/netty/handler/codec/serialization/ObjectDecoderInputStream

+###org/jboss/netty/handler/codec/serialization/ObjectEncoder
@0.10.0
+#<init>()V
+#<init>(I)V
@1.14.0
-###org/jboss/netty/handler/codec/serialization/ObjectEncoder

+###org/jboss/netty/handler/codec/serialization/ObjectEncoderOutputStream
@0.10.0
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#writeObject(Ljava/lang/Object;)V
+#write(I)V
+#close()V
+#flush()V
+#size()I
+#write([BII)V
+#write([B)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeBytes(Ljava/lang/String;)V
+#writeChar(I)V
+#writeChars(Ljava/lang/String;)V
+#writeDouble(D)V
+#writeFloat(F)V
+#writeInt(I)V
+#writeLong(J)V
+#writeShort(I)V
+#writeUTF(Ljava/lang/String;)V
@1.14.0
-###org/jboss/netty/handler/codec/serialization/ObjectEncoderOutputStream

+###org/jboss/netty/handler/codec/serialization/SoftReferenceMap
@0.10.0
+#<init>(Ljava/util/Map;)V
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#keySet()Ljava/util/Set;
+#clear()V
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsValue(Ljava/lang/Object;)Z
+#containsKey(Ljava/lang/Object;)Z
+#isEmpty()Z
+#size()I
@1.14.0
-###org/jboss/netty/handler/codec/serialization/SoftReferenceMap

+###org/jboss/netty/handler/codec/serialization/WeakReferenceMap
@0.10.0
+#<init>(Ljava/util/Map;)V
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#keySet()Ljava/util/Set;
+#clear()V
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsValue(Ljava/lang/Object;)Z
+#containsKey(Ljava/lang/Object;)Z
+#isEmpty()Z
+#size()I
@1.14.0
-###org/jboss/netty/handler/codec/serialization/WeakReferenceMap

+###org/jboss/netty/handler/codec/socks/SocksAuthRequest
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#getPassword()Ljava/lang/String;
+#encodeAsByteBuf(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksAuthRequest

+###org/jboss/netty/handler/codec/socks/SocksAuthRequestDecoder
@0.10.0
+#getName()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksAuthRequestDecoder

+###org/jboss/netty/handler/codec/socks/SocksAuthResponse
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/socks/SocksMessage$AuthStatus;)V
+#getAuthStatus()Lorg/jboss/netty/handler/codec/socks/SocksMessage$AuthStatus;
+#encodeAsByteBuf(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksAuthResponse

+###org/jboss/netty/handler/codec/socks/SocksAuthResponseDecoder$State
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksAuthResponseDecoder$State;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksAuthResponseDecoder$State;
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksAuthResponseDecoder$State

+###org/jboss/netty/handler/codec/socks/SocksAuthResponseDecoder
@0.10.0
+#getName()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksAuthResponseDecoder

+###org/jboss/netty/handler/codec/socks/SocksCmdRequest
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/socks/SocksMessage$CmdType;Lorg/jboss/netty/handler/codec/socks/SocksMessage$AddressType;Ljava/lang/String;I)V
+#getCmdType()Lorg/jboss/netty/handler/codec/socks/SocksMessage$CmdType;
+#getAddressType()Lorg/jboss/netty/handler/codec/socks/SocksMessage$AddressType;
+#getHost()Ljava/lang/String;
+#getPort()I
+#encodeAsByteBuf(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksCmdRequest

+###org/jboss/netty/handler/codec/socks/SocksCmdRequestDecoder
@0.10.0
+#getName()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksCmdRequestDecoder

+###org/jboss/netty/handler/codec/socks/SocksCmdResponse
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/socks/SocksMessage$CmdStatus;Lorg/jboss/netty/handler/codec/socks/SocksMessage$AddressType;)V
+#getCmdStatus()Lorg/jboss/netty/handler/codec/socks/SocksMessage$CmdStatus;
+#getAddressType()Lorg/jboss/netty/handler/codec/socks/SocksMessage$AddressType;
+#encodeAsByteBuf(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksCmdResponse

+###org/jboss/netty/handler/codec/socks/SocksCmdResponseDecoder$State
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksCmdResponseDecoder$State;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksCmdResponseDecoder$State;
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksCmdResponseDecoder$State

+###org/jboss/netty/handler/codec/socks/SocksCmdResponseDecoder
@0.10.0
+#getName()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksCmdResponseDecoder

+###org/jboss/netty/handler/codec/socks/SocksInitRequest
@0.10.0
+#<init>(Ljava/util/List;)V
+#getAuthSchemes()Ljava/util/List;
+#encodeAsByteBuf(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksInitRequest

+###org/jboss/netty/handler/codec/socks/SocksInitRequestDecoder
@0.10.0
+#getName()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksInitRequestDecoder

+###org/jboss/netty/handler/codec/socks/SocksInitResponse
@0.10.0
+#<init>(Lorg/jboss/netty/handler/codec/socks/SocksMessage$AuthScheme;)V
+#getAuthScheme()Lorg/jboss/netty/handler/codec/socks/SocksMessage$AuthScheme;
+#encodeAsByteBuf(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksInitResponse

+###org/jboss/netty/handler/codec/socks/SocksInitResponseDecoder$State
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksInitResponseDecoder$State;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksInitResponseDecoder$State;
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksInitResponseDecoder$State

+###org/jboss/netty/handler/codec/socks/SocksInitResponseDecoder
@0.10.0
+#getName()Ljava/lang/String;
+#<init>()V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksInitResponseDecoder

+###org/jboss/netty/handler/codec/socks/SocksMessage$AddressType
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksMessage$AddressType;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksMessage$AddressType;
+#fromByte(B)Lorg/jboss/netty/handler/codec/socks/SocksMessage$AddressType;
+#getByteValue()B
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksMessage$AddressType

+###org/jboss/netty/handler/codec/socks/SocksMessage$AuthScheme
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksMessage$AuthScheme;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksMessage$AuthScheme;
+#fromByte(B)Lorg/jboss/netty/handler/codec/socks/SocksMessage$AuthScheme;
+#getByteValue()B
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksMessage$AuthScheme

+###org/jboss/netty/handler/codec/socks/SocksMessage$AuthStatus
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksMessage$AuthStatus;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksMessage$AuthStatus;
+#fromByte(B)Lorg/jboss/netty/handler/codec/socks/SocksMessage$AuthStatus;
+#getByteValue()B
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksMessage$AuthStatus

+###org/jboss/netty/handler/codec/socks/SocksMessage$CmdStatus
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksMessage$CmdStatus;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksMessage$CmdStatus;
+#fromByte(B)Lorg/jboss/netty/handler/codec/socks/SocksMessage$CmdStatus;
+#getByteValue()B
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksMessage$CmdStatus

+###org/jboss/netty/handler/codec/socks/SocksMessage$CmdType
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksMessage$CmdType;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksMessage$CmdType;
+#fromByte(B)Lorg/jboss/netty/handler/codec/socks/SocksMessage$CmdType;
+#getByteValue()B
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksMessage$CmdType

+###org/jboss/netty/handler/codec/socks/SocksMessage$MessageType
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksMessage$MessageType;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksMessage$MessageType;
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksMessage$MessageType

+###org/jboss/netty/handler/codec/socks/SocksMessage$ProtocolVersion
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksMessage$ProtocolVersion;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksMessage$ProtocolVersion;
+#fromByte(B)Lorg/jboss/netty/handler/codec/socks/SocksMessage$ProtocolVersion;
+#getByteValue()B
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksMessage$ProtocolVersion

+###org/jboss/netty/handler/codec/socks/SocksMessage$SubnegotiationVersion
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksMessage$SubnegotiationVersion;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksMessage$SubnegotiationVersion;
+#fromByte(B)Lorg/jboss/netty/handler/codec/socks/SocksMessage$SubnegotiationVersion;
+#getByteValue()B
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksMessage$SubnegotiationVersion

+###org/jboss/netty/handler/codec/socks/SocksMessage
@0.10.0
+#getMessageType()Lorg/jboss/netty/handler/codec/socks/SocksMessage$MessageType;
+#getProtocolVersion()Lorg/jboss/netty/handler/codec/socks/SocksMessage$ProtocolVersion;
+#encodeAsByteBuf(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksMessage

+###org/jboss/netty/handler/codec/socks/SocksMessageEncoder
@0.10.0
+#<init>()V
+#getName()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksMessageEncoder

+###org/jboss/netty/handler/codec/socks/SocksRequest$SocksRequestType
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksRequest$SocksRequestType;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksRequest$SocksRequestType;
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksRequest$SocksRequestType

+###org/jboss/netty/handler/codec/socks/SocksRequest
@0.10.0
+#getSocksRequestType()Lorg/jboss/netty/handler/codec/socks/SocksRequest$SocksRequestType;
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksRequest

+###org/jboss/netty/handler/codec/socks/SocksResponse$SocksResponseType
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/socks/SocksResponse$SocksResponseType;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/socks/SocksResponse$SocksResponseType;
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksResponse$SocksResponseType

+###org/jboss/netty/handler/codec/socks/SocksResponse
@0.10.0
+#getSocksResponseType()Lorg/jboss/netty/handler/codec/socks/SocksResponse$SocksResponseType;
@1.14.0
-###org/jboss/netty/handler/codec/socks/SocksResponse

+###org/jboss/netty/handler/codec/socks/UnknownSocksMessage
@0.10.0
+#<init>()V
+#encodeAsByteBuf(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/socks/UnknownSocksMessage

+###org/jboss/netty/handler/codec/socks/UnknownSocksRequest
@0.10.0
+#<init>()V
+#encodeAsByteBuf(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/socks/UnknownSocksRequest

+###org/jboss/netty/handler/codec/socks/UnknownSocksResponse
@0.10.0
+#<init>()V
+#encodeAsByteBuf(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/socks/UnknownSocksResponse

+###org/jboss/netty/handler/codec/spdy/DefaultSpdyDataFrame
@0.10.0
+#<init>(I)V
+#getData()Lorg/jboss/netty/buffer/ChannelBuffer;
+#setData(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/DefaultSpdyDataFrame

+###org/jboss/netty/handler/codec/spdy/DefaultSpdyGoAwayFrame
@0.10.0
+#<init>(I)V
+#<init>(II)V
+#<init>(ILorg/jboss/netty/handler/codec/spdy/SpdySessionStatus;)V
+#getLastGoodStreamId()I
+#setLastGoodStreamId(I)V
+#getStatus()Lorg/jboss/netty/handler/codec/spdy/SpdySessionStatus;
+#setStatus(Lorg/jboss/netty/handler/codec/spdy/SpdySessionStatus;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/DefaultSpdyGoAwayFrame

+###org/jboss/netty/handler/codec/spdy/DefaultSpdyHeadersFrame
@0.10.0
+#<init>(I)V
+#isInvalid()Z
+#setInvalid()V
+#isTruncated()Z
+#setTruncated()V
+#addHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Iterable;)V
+#removeHeader(Ljava/lang/String;)V
+#clearHeaders()V
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaders(Ljava/lang/String;)Ljava/util/List;
+#getHeaders()Ljava/util/List;
+#containsHeader(Ljava/lang/String;)Z
+#getHeaderNames()Ljava/util/Set;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/DefaultSpdyHeadersFrame

+###org/jboss/netty/handler/codec/spdy/DefaultSpdyPingFrame
@0.10.0
+#<init>(I)V
+#getId()I
+#setId(I)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/DefaultSpdyPingFrame

+###org/jboss/netty/handler/codec/spdy/DefaultSpdyRstStreamFrame
@0.10.0
+#<init>(II)V
+#<init>(ILorg/jboss/netty/handler/codec/spdy/SpdyStreamStatus;)V
+#getStatus()Lorg/jboss/netty/handler/codec/spdy/SpdyStreamStatus;
+#setStatus(Lorg/jboss/netty/handler/codec/spdy/SpdyStreamStatus;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/DefaultSpdyRstStreamFrame

+###org/jboss/netty/handler/codec/spdy/DefaultSpdySettingsFrame
@0.10.0
+#<init>()V
+#getIds()Ljava/util/Set;
+#isSet(I)Z
+#getValue(I)I
+#setValue(II)V
+#setValue(IIZZ)V
+#removeValue(I)V
+#isPersistValue(I)Z
+#setPersistValue(IZ)V
+#isPersisted(I)Z
+#setPersisted(IZ)V
+#clearPreviouslyPersistedSettings()Z
+#setClearPreviouslyPersistedSettings(Z)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/DefaultSpdySettingsFrame

+###org/jboss/netty/handler/codec/spdy/DefaultSpdyStreamFrame
@0.10.0
+#getStreamId()I
+#setStreamId(I)V
+#isLast()Z
+#setLast(Z)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/DefaultSpdyStreamFrame

+###org/jboss/netty/handler/codec/spdy/DefaultSpdySynReplyFrame
@0.10.0
+#<init>(I)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/DefaultSpdySynReplyFrame

+###org/jboss/netty/handler/codec/spdy/DefaultSpdySynStreamFrame
@0.10.0
+#<init>(IIB)V
+#getAssociatedToStreamId()I
+#setAssociatedToStreamId(I)V
+#getPriority()B
+#setPriority(B)V
+#isUnidirectional()Z
+#setUnidirectional(Z)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/DefaultSpdySynStreamFrame

+###org/jboss/netty/handler/codec/spdy/DefaultSpdyWindowUpdateFrame
@0.10.0
+#<init>(II)V
+#getStreamId()I
+#setStreamId(I)V
+#getDeltaWindowSize()I
+#setDeltaWindowSize(I)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/DefaultSpdyWindowUpdateFrame

+###org/jboss/netty/handler/codec/spdy/SpdyDataFrame
@0.10.0
+#getData()Lorg/jboss/netty/buffer/ChannelBuffer;
+#setData(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyDataFrame

+###org/jboss/netty/handler/codec/spdy/SpdyFrame
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyFrame

+###org/jboss/netty/handler/codec/spdy/SpdyFrameCodec
@0.10.0
+#<init>(I)V
+#<init>(IIIIII)V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyFrameCodec

+###org/jboss/netty/handler/codec/spdy/SpdyFrameDecoder
@0.10.0
+#<init>(I)V
+#<init>(III)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyFrameDecoder

+###org/jboss/netty/handler/codec/spdy/SpdyFrameEncoder
@0.10.0
+#<init>(I)V
+#<init>(IIII)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyFrameEncoder

+###org/jboss/netty/handler/codec/spdy/SpdyGoAwayFrame
@0.10.0
+#getLastGoodStreamId()I
+#setLastGoodStreamId(I)V
+#getStatus()Lorg/jboss/netty/handler/codec/spdy/SpdySessionStatus;
+#setStatus(Lorg/jboss/netty/handler/codec/spdy/SpdySessionStatus;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyGoAwayFrame

+###org/jboss/netty/handler/codec/spdy/SpdyHeaderBlockRawDecoder
@0.10.0
+#<init>(II)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHeaderBlockRawDecoder

+###org/jboss/netty/handler/codec/spdy/SpdyHeaderBlockRawEncoder
@0.10.0
+#<init>(I)V
+#encode(Lorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)Lorg/jboss/netty/buffer/ChannelBuffer;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHeaderBlockRawEncoder

+###org/jboss/netty/handler/codec/spdy/SpdyHeaders$HttpNames
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHeaders$HttpNames

+###org/jboss/netty/handler/codec/spdy/SpdyHeaders$Spdy2HttpNames
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHeaders$Spdy2HttpNames

+###org/jboss/netty/handler/codec/spdy/SpdyHeaders
@0.10.0
+#getHeader(Lorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Ljava/lang/String;)Ljava/lang/String;
+#getHeader(Lorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#setHeader(Lorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Lorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Ljava/lang/String;Ljava/lang/Iterable;)V
+#addHeader(Lorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Ljava/lang/String;Ljava/lang/Object;)V
+#removeHost(Lorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)V
+#getHost(Lorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)Ljava/lang/String;
+#setHost(Lorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Ljava/lang/String;)V
+#removeMethod(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)V
+#getMethod(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)Lorg/jboss/netty/handler/codec/http/HttpMethod;
+#setMethod(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Lorg/jboss/netty/handler/codec/http/HttpMethod;)V
+#removeScheme(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)V
+#getScheme(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)Ljava/lang/String;
+#setScheme(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Ljava/lang/String;)V
+#removeStatus(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)V
+#getStatus(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)Lorg/jboss/netty/handler/codec/http/HttpResponseStatus;
+#setStatus(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Lorg/jboss/netty/handler/codec/http/HttpResponseStatus;)V
+#removeUrl(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)V
+#getUrl(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)Ljava/lang/String;
+#setUrl(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Ljava/lang/String;)V
+#removeVersion(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)V
+#getVersion(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;)Lorg/jboss/netty/handler/codec/http/HttpVersion;
+#setVersion(ILorg/jboss/netty/handler/codec/spdy/SpdyHeadersFrame;Lorg/jboss/netty/handler/codec/http/HttpVersion;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHeaders

+###org/jboss/netty/handler/codec/spdy/SpdyHeadersFrame
@0.10.0
+#isInvalid()Z
+#setInvalid()V
+#isTruncated()Z
+#setTruncated()V
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaders(Ljava/lang/String;)Ljava/util/List;
+#getHeaders()Ljava/util/List;
+#containsHeader(Ljava/lang/String;)Z
+#getHeaderNames()Ljava/util/Set;
+#addHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeader(Ljava/lang/String;Ljava/lang/Iterable;)V
+#removeHeader(Ljava/lang/String;)V
+#clearHeaders()V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHeadersFrame

+###org/jboss/netty/handler/codec/spdy/SpdyHttpCodec
@0.10.0
+#<init>(II)V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHttpCodec

+###org/jboss/netty/handler/codec/spdy/SpdyHttpDecoder
@0.10.0
+#<init>(II)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHttpDecoder

+###org/jboss/netty/handler/codec/spdy/SpdyHttpEncoder
@0.10.0
+#<init>(I)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHttpEncoder

+###org/jboss/netty/handler/codec/spdy/SpdyHttpHeaders$Names
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHttpHeaders$Names

+###org/jboss/netty/handler/codec/spdy/SpdyHttpHeaders
@0.10.0
+#removeStreamId(Lorg/jboss/netty/handler/codec/http/HttpMessage;)V
+#getStreamId(Lorg/jboss/netty/handler/codec/http/HttpMessage;)I
+#setStreamId(Lorg/jboss/netty/handler/codec/http/HttpMessage;I)V
+#removeAssociatedToStreamId(Lorg/jboss/netty/handler/codec/http/HttpMessage;)V
+#getAssociatedToStreamId(Lorg/jboss/netty/handler/codec/http/HttpMessage;)I
+#setAssociatedToStreamId(Lorg/jboss/netty/handler/codec/http/HttpMessage;I)V
+#removePriority(Lorg/jboss/netty/handler/codec/http/HttpMessage;)V
+#getPriority(Lorg/jboss/netty/handler/codec/http/HttpMessage;)B
+#setPriority(Lorg/jboss/netty/handler/codec/http/HttpMessage;B)V
+#removeUrl(Lorg/jboss/netty/handler/codec/http/HttpMessage;)V
+#getUrl(Lorg/jboss/netty/handler/codec/http/HttpMessage;)Ljava/lang/String;
+#setUrl(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;)V
+#removeScheme(Lorg/jboss/netty/handler/codec/http/HttpMessage;)V
+#getScheme(Lorg/jboss/netty/handler/codec/http/HttpMessage;)Ljava/lang/String;
+#setScheme(Lorg/jboss/netty/handler/codec/http/HttpMessage;Ljava/lang/String;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHttpHeaders

+###org/jboss/netty/handler/codec/spdy/SpdyHttpResponseStreamIdHandler
@0.10.0
+#<init>()V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#writeRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyHttpResponseStreamIdHandler

+###org/jboss/netty/handler/codec/spdy/SpdyOrHttpChooser$SelectedProtocol
@0.10.0
+#values()[Lorg/jboss/netty/handler/codec/spdy/SpdyOrHttpChooser$SelectedProtocol;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/codec/spdy/SpdyOrHttpChooser$SelectedProtocol;
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyOrHttpChooser$SelectedProtocol

+###org/jboss/netty/handler/codec/spdy/SpdyOrHttpChooser
@0.10.0
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyOrHttpChooser

+###org/jboss/netty/handler/codec/spdy/SpdyPingFrame
@0.10.0
+#getId()I
+#setId(I)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyPingFrame

+###org/jboss/netty/handler/codec/spdy/SpdyProtocolException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyProtocolException

+###org/jboss/netty/handler/codec/spdy/SpdyRstStreamFrame
@0.10.0
+#getStatus()Lorg/jboss/netty/handler/codec/spdy/SpdyStreamStatus;
+#setStatus(Lorg/jboss/netty/handler/codec/spdy/SpdyStreamStatus;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyRstStreamFrame

+###org/jboss/netty/handler/codec/spdy/SpdySessionHandler
@0.10.0
+#<init>(IZ)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ExceptionEvent;)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdySessionHandler

+###org/jboss/netty/handler/codec/spdy/SpdySessionStatus
@0.10.0
+#valueOf(I)Lorg/jboss/netty/handler/codec/spdy/SpdySessionStatus;
+#<init>(ILjava/lang/String;)V
+#getCode()I
+#getStatusPhrase()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jboss/netty/handler/codec/spdy/SpdySessionStatus;)I
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdySessionStatus

+###org/jboss/netty/handler/codec/spdy/SpdySettingsFrame
@0.10.0
+#getIds()Ljava/util/Set;
+#isSet(I)Z
+#getValue(I)I
+#setValue(II)V
+#setValue(IIZZ)V
+#removeValue(I)V
+#isPersistValue(I)Z
+#setPersistValue(IZ)V
+#isPersisted(I)Z
+#setPersisted(IZ)V
+#clearPreviouslyPersistedSettings()Z
+#setClearPreviouslyPersistedSettings(Z)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdySettingsFrame

+###org/jboss/netty/handler/codec/spdy/SpdyStreamFrame
@0.10.0
+#getStreamId()I
+#setStreamId(I)V
+#isLast()Z
+#setLast(Z)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyStreamFrame

+###org/jboss/netty/handler/codec/spdy/SpdyStreamStatus
@0.10.0
+#valueOf(I)Lorg/jboss/netty/handler/codec/spdy/SpdyStreamStatus;
+#<init>(ILjava/lang/String;)V
+#getCode()I
+#getStatusPhrase()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jboss/netty/handler/codec/spdy/SpdyStreamStatus;)I
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyStreamStatus

+###org/jboss/netty/handler/codec/spdy/SpdySynReplyFrame
@0.10.0
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdySynReplyFrame

+###org/jboss/netty/handler/codec/spdy/SpdySynStreamFrame
@0.10.0
+#getAssociatedToStreamId()I
+#setAssociatedToStreamId(I)V
+#getPriority()B
+#setPriority(B)V
+#isUnidirectional()Z
+#setUnidirectional(Z)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdySynStreamFrame

+###org/jboss/netty/handler/codec/spdy/SpdyWindowUpdateFrame
@0.10.0
+#getStreamId()I
+#setStreamId(I)V
+#getDeltaWindowSize()I
+#setDeltaWindowSize(I)V
@1.14.0
-###org/jboss/netty/handler/codec/spdy/SpdyWindowUpdateFrame

+###org/jboss/netty/handler/codec/string/StringDecoder
@0.10.0
+#<init>()V
+#<init>(Ljava/nio/charset/Charset;)V
+#<init>(Ljava/lang/String;)V[deprecated]
@1.14.0
-###org/jboss/netty/handler/codec/string/StringDecoder

+###org/jboss/netty/handler/codec/string/StringEncoder
@0.10.0
+#<init>()V
+#<init>(Ljava/nio/charset/Charset;)V
+#<init>(Ljava/lang/String;)V[deprecated]
@1.14.0
-###org/jboss/netty/handler/codec/string/StringEncoder

+###org/jboss/netty/handler/execution/ChainedExecutor
@0.10.0
+#<init>(Lorg/jboss/netty/handler/execution/ChannelEventRunnableFilter;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V
+#execute(Ljava/lang/Runnable;)V
+#releaseExternalResources()V
@1.14.0
-###org/jboss/netty/handler/execution/ChainedExecutor

+###org/jboss/netty/handler/execution/ChannelDownstreamEventRunnable
@0.10.0
+#<init>(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/jboss/netty/handler/execution/ChannelDownstreamEventRunnable

+###org/jboss/netty/handler/execution/ChannelDownstreamEventRunnableFilter
@0.10.0
+#<init>()V
+#filter(Lorg/jboss/netty/handler/execution/ChannelEventRunnable;)Z
@1.14.0
-###org/jboss/netty/handler/execution/ChannelDownstreamEventRunnableFilter

+###org/jboss/netty/handler/execution/ChannelEventRunnable
@0.10.0
+#getContext()Lorg/jboss/netty/channel/ChannelHandlerContext;
+#getEvent()Lorg/jboss/netty/channel/ChannelEvent;
+#unwrap()Ljava/lang/Object;
+#run()V
@1.14.0
-###org/jboss/netty/handler/execution/ChannelEventRunnable

+###org/jboss/netty/handler/execution/ChannelEventRunnableFilter
@0.10.0
+#filter(Lorg/jboss/netty/handler/execution/ChannelEventRunnable;)Z
@1.14.0
-###org/jboss/netty/handler/execution/ChannelEventRunnableFilter

+###org/jboss/netty/handler/execution/ChannelUpstreamEventRunnable
@0.10.0
+#<init>(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/jboss/netty/handler/execution/ChannelUpstreamEventRunnable

+###org/jboss/netty/handler/execution/ChannelUpstreamEventRunnableFilter
@0.10.0
+#<init>()V
+#filter(Lorg/jboss/netty/handler/execution/ChannelEventRunnable;)Z
@1.14.0
-###org/jboss/netty/handler/execution/ChannelUpstreamEventRunnableFilter

+###org/jboss/netty/handler/execution/ExecutionHandler
@0.10.0
+#<init>(Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Z)V[deprecated]
+#<init>(Ljava/util/concurrent/Executor;ZZ)V
+#getExecutor()Ljava/util/concurrent/Executor;
+#releaseExternalResources()V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/execution/ExecutionHandler

+###org/jboss/netty/handler/execution/MemoryAwareThreadPoolExecutor
@0.10.0
+#<init>(IJJ)V
+#<init>(IJJJLjava/util/concurrent/TimeUnit;)V
+#<init>(IJJJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)V
+#<init>(IJJJLjava/util/concurrent/TimeUnit;Lorg/jboss/netty/util/ObjectSizeEstimator;Ljava/util/concurrent/ThreadFactory;)V
+#shutdownNow()Ljava/util/List;
+#shutdownNow(Z)Ljava/util/List;
+#getObjectSizeEstimator()Lorg/jboss/netty/util/ObjectSizeEstimator;
+#setObjectSizeEstimator(Lorg/jboss/netty/util/ObjectSizeEstimator;)V
+#getMaxChannelMemorySize()J
+#setMaxChannelMemorySize(J)V
+#getMaxTotalMemorySize()J
+#setMaxTotalMemorySize(J)V[deprecated]
+#setNotifyChannelFuturesOnShutdown(Z)V
+#getNotifyChannelFuturesOnShutdown()Z
+#execute(Ljava/lang/Runnable;)V
+#remove(Ljava/lang/Runnable;)Z
@1.14.0
-###org/jboss/netty/handler/execution/MemoryAwareThreadPoolExecutor

+###org/jboss/netty/handler/execution/OrderedDownstreamThreadPoolExecutor
@0.10.0
+#<init>(I)V
+#<init>(IJLjava/util/concurrent/TimeUnit;)V
+#<init>(IJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)V
+#getObjectSizeEstimator()Lorg/jboss/netty/util/ObjectSizeEstimator;
+#setObjectSizeEstimator(Lorg/jboss/netty/util/ObjectSizeEstimator;)V
+#getMaxChannelMemorySize()J
+#setMaxChannelMemorySize(J)V
+#getMaxTotalMemorySize()J
+#setMaxTotalMemorySize(J)V[deprecated]
+#execute(Ljava/lang/Runnable;)V
@1.14.0
-###org/jboss/netty/handler/execution/OrderedDownstreamThreadPoolExecutor

+###org/jboss/netty/handler/execution/OrderedMemoryAwareThreadPoolExecutor$ChildExecutor
@0.10.0
+#execute(Ljava/lang/Runnable;)V
+#run()V
@1.14.0
-###org/jboss/netty/handler/execution/OrderedMemoryAwareThreadPoolExecutor$ChildExecutor

+###org/jboss/netty/handler/execution/OrderedMemoryAwareThreadPoolExecutor
@0.10.0
+#<init>(IJJ)V
+#<init>(IJJJLjava/util/concurrent/TimeUnit;)V
+#<init>(IJJJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)V
+#<init>(IJJJLjava/util/concurrent/TimeUnit;Lorg/jboss/netty/util/ObjectSizeEstimator;Ljava/util/concurrent/ThreadFactory;)V
@1.14.0
-###org/jboss/netty/handler/execution/OrderedMemoryAwareThreadPoolExecutor

+###org/jboss/netty/handler/ipfilter/CIDR
@0.10.0
+#<init>()V
+#newCIDR(Ljava/net/InetAddress;I)Lorg/jboss/netty/handler/ipfilter/CIDR;
+#newCIDR(Ljava/net/InetAddress;Ljava/lang/String;)Lorg/jboss/netty/handler/ipfilter/CIDR;
+#newCIDR(Ljava/lang/String;)Lorg/jboss/netty/handler/ipfilter/CIDR;
+#getBaseAddress()Ljava/net/InetAddress;
+#getMask()I
+#toString()Ljava/lang/String;
+#getEndAddress()Ljava/net/InetAddress;
+#contains(Ljava/net/InetAddress;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getIpV4FromIpV6(Ljava/net/Inet6Address;)[B
+#getIpV6FromIpV4(Ljava/net/Inet4Address;)[B
@1.14.0
-###org/jboss/netty/handler/ipfilter/CIDR

+###org/jboss/netty/handler/ipfilter/CIDR4
@0.10.0
+#getEndAddress()Ljava/net/InetAddress;
+#compareTo(Lorg/jboss/netty/handler/ipfilter/CIDR;)I
+#contains(Ljava/net/InetAddress;)Z
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/ipfilter/CIDR4

+###org/jboss/netty/handler/ipfilter/CIDR6
@0.10.0
+#getEndAddress()Ljava/net/InetAddress;
+#compareTo(Lorg/jboss/netty/handler/ipfilter/CIDR;)I
+#contains(Ljava/net/InetAddress;)Z
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/ipfilter/CIDR6

+###org/jboss/netty/handler/ipfilter/IpFilterListener
@0.10.0
+#allowed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;Ljava/net/InetSocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#refused(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;Ljava/net/InetSocketAddress;)Lorg/jboss/netty/channel/ChannelFuture;
+#continues(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)Z
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpFilterListener

+###org/jboss/netty/handler/ipfilter/IpFilterRule
@0.10.0
+#isAllowRule()Z
+#isDenyRule()Z
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpFilterRule

+###org/jboss/netty/handler/ipfilter/IpFilterRuleHandler
@0.10.0
+#<init>(Ljava/util/List;)V
+#<init>()V
+#add(Lorg/jboss/netty/handler/ipfilter/IpFilterRule;)V
+#add(ILorg/jboss/netty/handler/ipfilter/IpFilterRule;)V
+#addAll(Ljava/util/Collection;)V
+#addAll(ILjava/util/Collection;)V
+#addAllAbsent(Ljava/util/Collection;)I
+#addIfAbsent(Lorg/jboss/netty/handler/ipfilter/IpFilterRule;)Z
+#clear()V
+#contains(Lorg/jboss/netty/handler/ipfilter/IpFilterRule;)Z
+#containsAll(Ljava/util/Collection;)Z
+#get(I)Lorg/jboss/netty/handler/ipfilter/IpFilterRule;
+#isEmpty()Z
+#remove(Lorg/jboss/netty/handler/ipfilter/IpFilterRule;)V
+#remove(I)Lorg/jboss/netty/handler/ipfilter/IpFilterRule;
+#removeAll(Ljava/util/Collection;)V
+#retainAll(Ljava/util/Collection;)V
+#set(ILorg/jboss/netty/handler/ipfilter/IpFilterRule;)Lorg/jboss/netty/handler/ipfilter/IpFilterRule;
+#size()I
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpFilterRuleHandler

+###org/jboss/netty/handler/ipfilter/IpFilterRuleList
@0.10.0
+#<init>(Ljava/lang/String;)V
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpFilterRuleList

+###org/jboss/netty/handler/ipfilter/IpFilteringHandler
@0.10.0
+#setIpFilterListener(Lorg/jboss/netty/handler/ipfilter/IpFilterListener;)V
+#removeIpFilterListener()V
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpFilteringHandler

+###org/jboss/netty/handler/ipfilter/IpFilteringHandlerImpl
@0.10.0
+#<init>()V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#setIpFilterListener(Lorg/jboss/netty/handler/ipfilter/IpFilterListener;)V
+#removeIpFilterListener()V
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpFilteringHandlerImpl

+###org/jboss/netty/handler/ipfilter/IpSet
@0.10.0
+#contains(Ljava/net/InetAddress;)Z
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpSet

+###org/jboss/netty/handler/ipfilter/IpSubnet
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/net/InetAddress;I)V
+#<init>(Ljava/net/InetAddress;Ljava/lang/String;)V
+#contains(Ljava/lang/String;)Z
+#contains(Ljava/net/InetAddress;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/jboss/netty/handler/ipfilter/IpSubnet;)I
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpSubnet

+###org/jboss/netty/handler/ipfilter/IpSubnetFilterRule
@0.10.0
+#<init>(Z)V
+#<init>(ZLjava/net/InetAddress;I)V
+#<init>(ZLjava/net/InetAddress;Ljava/lang/String;)V
+#<init>(ZLjava/lang/String;)V
+#isAllowRule()Z
+#isDenyRule()Z
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpSubnetFilterRule

+###org/jboss/netty/handler/ipfilter/IpV4Subnet
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/net/InetAddress;I)V
+#<init>(Ljava/net/InetAddress;Ljava/lang/String;)V
+#contains(Ljava/lang/String;)Z
+#contains(Ljava/net/InetAddress;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/jboss/netty/handler/ipfilter/IpV4Subnet;)I
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpV4Subnet

+###org/jboss/netty/handler/ipfilter/IpV4SubnetFilterRule
@0.10.0
+#<init>(Z)V
+#<init>(ZLjava/net/InetAddress;I)V
+#<init>(ZLjava/net/InetAddress;Ljava/lang/String;)V
+#<init>(ZLjava/lang/String;)V
+#isAllowRule()Z
+#isDenyRule()Z
@1.14.0
-###org/jboss/netty/handler/ipfilter/IpV4SubnetFilterRule

+###org/jboss/netty/handler/ipfilter/OneIpFilterHandler
@0.10.0
+#<init>()V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/ipfilter/OneIpFilterHandler

+###org/jboss/netty/handler/ipfilter/PatternRule
@0.10.0
+#<init>(ZLjava/lang/String;)V
+#getPattern()Ljava/lang/String;
+#isAllowRule()Z
+#isDenyRule()Z
+#contains(Ljava/net/InetAddress;)Z
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/handler/ipfilter/PatternRule

+###org/jboss/netty/handler/logging/LoggingHandler
@0.10.0
+#<init>()V
+#<init>(Lorg/jboss/netty/logging/InternalLogLevel;)V
+#<init>(Z)V
+#<init>(Lorg/jboss/netty/logging/InternalLogLevel;Z)V
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Z)V
+#<init>(Ljava/lang/Class;Lorg/jboss/netty/logging/InternalLogLevel;)V
+#<init>(Ljava/lang/Class;Lorg/jboss/netty/logging/InternalLogLevel;Z)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;Lorg/jboss/netty/logging/InternalLogLevel;Z)V
+#getLogger()Lorg/jboss/netty/logging/InternalLogger;
+#getLevel()Lorg/jboss/netty/logging/InternalLogLevel;
+#log(Lorg/jboss/netty/channel/ChannelEvent;)V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
@1.14.0
-###org/jboss/netty/handler/logging/LoggingHandler

+###org/jboss/netty/handler/queue/BlockingReadHandler
@0.10.0
+#<init>()V
+#<init>(Ljava/util/concurrent/BlockingQueue;)V
+#isClosed()Z
+#read()Ljava/lang/Object;
+#read(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#readEvent()Lorg/jboss/netty/channel/ChannelEvent;
+#readEvent(JLjava/util/concurrent/TimeUnit;)Lorg/jboss/netty/channel/ChannelEvent;
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ExceptionEvent;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
@1.14.0
-###org/jboss/netty/handler/queue/BlockingReadHandler

+###org/jboss/netty/handler/queue/BlockingReadTimeoutException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/queue/BlockingReadTimeoutException

+###org/jboss/netty/handler/queue/BufferedWriteHandler
@0.10.0
+#<init>()V
+#<init>(Ljava/util/Queue;)V
+#<init>(Z)V
+#<init>(Ljava/util/Queue;Z)V
+#isConsolidateOnFlush()Z
+#flush()V
+#flush(Z)V
+#writeRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#disconnectRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#closeRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
@1.14.0
-###org/jboss/netty/handler/queue/BufferedWriteHandler

+###org/jboss/netty/handler/ssl/ImmediateExecutor
@0.10.0
+#execute(Ljava/lang/Runnable;)V
@1.14.0
-###org/jboss/netty/handler/ssl/ImmediateExecutor

+###org/jboss/netty/handler/ssl/NotSslRecordException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/ssl/NotSslRecordException

+###org/jboss/netty/handler/ssl/SslBufferPool
@0.10.0
+#<init>()V
+#<init>(I)V
+#getMaxPoolSize()I
+#getUnacquiredPoolSize()I
+#acquireBuffer()Ljava/nio/ByteBuffer;
+#releaseBuffer(Ljava/nio/ByteBuffer;)V
@1.14.0
-###org/jboss/netty/handler/ssl/SslBufferPool

+###org/jboss/netty/handler/ssl/SslHandler
@0.10.0
+#getDefaultBufferPool()Lorg/jboss/netty/handler/ssl/SslBufferPool;
+#<init>(Ljavax/net/ssl/SSLEngine;)V
+#<init>(Ljavax/net/ssl/SSLEngine;Lorg/jboss/netty/handler/ssl/SslBufferPool;)V
+#<init>(Ljavax/net/ssl/SSLEngine;Z)V
+#<init>(Ljavax/net/ssl/SSLEngine;Lorg/jboss/netty/handler/ssl/SslBufferPool;Z)V
+#<init>(Ljavax/net/ssl/SSLEngine;Ljava/util/concurrent/Executor;)V
+#<init>(Ljavax/net/ssl/SSLEngine;Lorg/jboss/netty/handler/ssl/SslBufferPool;Ljava/util/concurrent/Executor;)V
+#<init>(Ljavax/net/ssl/SSLEngine;ZLjava/util/concurrent/Executor;)V
+#<init>(Ljavax/net/ssl/SSLEngine;Lorg/jboss/netty/handler/ssl/SslBufferPool;ZLjava/util/concurrent/Executor;)V
+#<init>(Ljavax/net/ssl/SSLEngine;Lorg/jboss/netty/handler/ssl/SslBufferPool;ZLjava/util/concurrent/Executor;Lorg/jboss/netty/util/Timer;J)V
+#getEngine()Ljavax/net/ssl/SSLEngine;
+#handshake()Lorg/jboss/netty/channel/ChannelFuture;
+#handshake(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;[deprecated]
+#close()Lorg/jboss/netty/channel/ChannelFuture;
+#close(Lorg/jboss/netty/channel/Channel;)Lorg/jboss/netty/channel/ChannelFuture;[deprecated]
+#isEnableRenegotiation()Z
+#setEnableRenegotiation(Z)V
+#setIssueHandshake(Z)V
+#isIssueHandshake()Z
+#getSSLEngineInboundCloseFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#getHandshakeTimeout()J
+#setCloseOnSSLException(Z)V
+#getCloseOnSSLException()Z
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#channelDisconnected(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#exceptionCaught(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ExceptionEvent;)V
+#isEncrypted(Lorg/jboss/netty/buffer/ChannelBuffer;)Z
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#channelConnected(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
@1.14.0
-###org/jboss/netty/handler/ssl/SslHandler

+###org/jboss/netty/handler/stream/ChunkedFile
@0.10.0
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;I)V
+#<init>(Ljava/io/RandomAccessFile;)V
+#<init>(Ljava/io/RandomAccessFile;I)V
+#<init>(Ljava/io/RandomAccessFile;JJI)V
+#getStartOffset()J
+#getEndOffset()J
+#getCurrentOffset()J
+#hasNextChunk()Z
+#isEndOfInput()Z
+#close()V
+#nextChunk()Ljava/lang/Object;
@1.14.0
-###org/jboss/netty/handler/stream/ChunkedFile

+###org/jboss/netty/handler/stream/ChunkedInput
@0.10.0
+#hasNextChunk()Z
+#nextChunk()Ljava/lang/Object;
+#isEndOfInput()Z
+#close()V
@1.14.0
-###org/jboss/netty/handler/stream/ChunkedInput

+###org/jboss/netty/handler/stream/ChunkedNioFile
@0.10.0
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;I)V
+#<init>(Ljava/nio/channels/FileChannel;)V
+#<init>(Ljava/nio/channels/FileChannel;I)V
+#<init>(Ljava/nio/channels/FileChannel;JJI)V
+#getStartOffset()J
+#getEndOffset()J
+#getCurrentOffset()J
+#hasNextChunk()Z
+#isEndOfInput()Z
+#close()V
+#nextChunk()Ljava/lang/Object;
@1.14.0
-###org/jboss/netty/handler/stream/ChunkedNioFile

+###org/jboss/netty/handler/stream/ChunkedNioStream
@0.10.0
+#<init>(Ljava/nio/channels/ReadableByteChannel;)V
+#<init>(Ljava/nio/channels/ReadableByteChannel;I)V
+#getTransferredBytes()J
+#hasNextChunk()Z
+#isEndOfInput()Z
+#close()V
+#nextChunk()Ljava/lang/Object;
@1.14.0
-###org/jboss/netty/handler/stream/ChunkedNioStream

+###org/jboss/netty/handler/stream/ChunkedStream
@0.10.0
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;I)V
+#getTransferredBytes()J
+#hasNextChunk()Z
+#isEndOfInput()Z
+#close()V
+#nextChunk()Ljava/lang/Object;
@1.14.0
-###org/jboss/netty/handler/stream/ChunkedStream

+###org/jboss/netty/handler/stream/ChunkedWriteHandler
@0.10.0
+#<init>()V
+#resumeTransfer()V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
@1.14.0
-###org/jboss/netty/handler/stream/ChunkedWriteHandler

+###org/jboss/netty/handler/timeout/DefaultIdleStateEvent
@0.10.0
+#<init>(Lorg/jboss/netty/channel/Channel;Lorg/jboss/netty/handler/timeout/IdleState;J)V
+#getChannel()Lorg/jboss/netty/channel/Channel;
+#getFuture()Lorg/jboss/netty/channel/ChannelFuture;
+#getState()Lorg/jboss/netty/handler/timeout/IdleState;
+#getLastActivityTimeMillis()J
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/timeout/DefaultIdleStateEvent

+###org/jboss/netty/handler/timeout/IdleState
@0.10.0
+#values()[Lorg/jboss/netty/handler/timeout/IdleState;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/handler/timeout/IdleState;
@1.14.0
-###org/jboss/netty/handler/timeout/IdleState

+###org/jboss/netty/handler/timeout/IdleStateAwareChannelHandler
@0.10.0
+#<init>()V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#channelIdle(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/handler/timeout/IdleStateEvent;)V
@1.14.0
-###org/jboss/netty/handler/timeout/IdleStateAwareChannelHandler

+###org/jboss/netty/handler/timeout/IdleStateAwareChannelUpstreamHandler
@0.10.0
+#<init>()V
+#handleUpstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#channelIdle(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/handler/timeout/IdleStateEvent;)V
@1.14.0
-###org/jboss/netty/handler/timeout/IdleStateAwareChannelUpstreamHandler

+###org/jboss/netty/handler/timeout/IdleStateEvent
@0.10.0
+#getState()Lorg/jboss/netty/handler/timeout/IdleState;
+#getLastActivityTimeMillis()J
@1.14.0
-###org/jboss/netty/handler/timeout/IdleStateEvent

+###org/jboss/netty/handler/timeout/IdleStateHandler
@0.10.0
+#<init>(Lorg/jboss/netty/util/Timer;III)V
+#<init>(Lorg/jboss/netty/util/Timer;JJJLjava/util/concurrent/TimeUnit;)V
+#getReaderIdleTimeInMillis()J
+#getWriterIdleTimeInMillis()J
+#getAllIdleTimeInMillis()J
+#releaseExternalResources()V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#channelOpen(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#writeComplete(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/WriteCompletionEvent;)V
@1.14.0
-###org/jboss/netty/handler/timeout/IdleStateHandler

+###org/jboss/netty/handler/timeout/ReadTimeoutException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/timeout/ReadTimeoutException

+###org/jboss/netty/handler/timeout/ReadTimeoutHandler
@0.10.0
+#<init>(Lorg/jboss/netty/util/Timer;I)V
+#<init>(Lorg/jboss/netty/util/Timer;JLjava/util/concurrent/TimeUnit;)V
+#releaseExternalResources()V
+#beforeAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterAdd(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#beforeRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#afterRemove(Lorg/jboss/netty/channel/ChannelHandlerContext;)V
+#channelOpen(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
@1.14.0
-###org/jboss/netty/handler/timeout/ReadTimeoutHandler

+###org/jboss/netty/handler/timeout/TimeoutException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/timeout/TimeoutException

+###org/jboss/netty/handler/timeout/WriteTimeoutException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/handler/timeout/WriteTimeoutException

+###org/jboss/netty/handler/timeout/WriteTimeoutHandler
@0.10.0
+#<init>(Lorg/jboss/netty/util/Timer;I)V
+#<init>(Lorg/jboss/netty/util/Timer;JLjava/util/concurrent/TimeUnit;)V
+#releaseExternalResources()V
+#writeRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
@1.14.0
-###org/jboss/netty/handler/timeout/WriteTimeoutHandler

+###org/jboss/netty/handler/traffic/AbstractTrafficShapingHandler
@0.10.0
+#configure(JJJ)V
+#configure(JJ)V
+#configure(J)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#writeRequested(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
+#handleDownstream(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelEvent;)V
+#getTrafficCounter()Lorg/jboss/netty/handler/traffic/TrafficCounter;
+#releaseExternalResources()V
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/traffic/AbstractTrafficShapingHandler

+###org/jboss/netty/handler/traffic/ChannelTrafficShapingHandler
@0.10.0
+#<init>(Lorg/jboss/netty/util/Timer;JJJ)V
+#<init>(Lorg/jboss/netty/util/Timer;JJ)V
+#<init>(Lorg/jboss/netty/util/Timer;J)V
+#<init>(Lorg/jboss/netty/util/Timer;)V
+#<init>(Lorg/jboss/netty/util/ObjectSizeEstimator;Lorg/jboss/netty/util/Timer;JJJ)V
+#<init>(Lorg/jboss/netty/util/ObjectSizeEstimator;Lorg/jboss/netty/util/Timer;JJ)V
+#<init>(Lorg/jboss/netty/util/ObjectSizeEstimator;Lorg/jboss/netty/util/Timer;J)V
+#<init>(Lorg/jboss/netty/util/ObjectSizeEstimator;Lorg/jboss/netty/util/Timer;)V
+#channelClosed(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
+#channelConnected(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/ChannelStateEvent;)V
@1.14.0
-###org/jboss/netty/handler/traffic/ChannelTrafficShapingHandler

+###org/jboss/netty/handler/traffic/GlobalTrafficShapingHandler
@0.10.0
+#<init>(Lorg/jboss/netty/util/Timer;JJJ)V
+#<init>(Lorg/jboss/netty/util/Timer;JJ)V
+#<init>(Lorg/jboss/netty/util/Timer;J)V
+#<init>(Lorg/jboss/netty/util/Timer;)V
+#<init>(Lorg/jboss/netty/util/ObjectSizeEstimator;Lorg/jboss/netty/util/Timer;JJJ)V
+#<init>(Lorg/jboss/netty/util/ObjectSizeEstimator;Lorg/jboss/netty/util/Timer;JJ)V
+#<init>(Lorg/jboss/netty/util/ObjectSizeEstimator;Lorg/jboss/netty/util/Timer;J)V
+#<init>(Lorg/jboss/netty/util/ObjectSizeEstimator;Lorg/jboss/netty/util/Timer;)V
@1.14.0
-###org/jboss/netty/handler/traffic/GlobalTrafficShapingHandler

+###org/jboss/netty/handler/traffic/TrafficCounter
@0.10.0
+#start()V
+#stop()V
+#<init>(Lorg/jboss/netty/handler/traffic/AbstractTrafficShapingHandler;Lorg/jboss/netty/util/Timer;Ljava/lang/String;J)V
+#configure(J)V
+#getCheckInterval()J
+#getLastReadThroughput()J
+#getLastWriteThroughput()J
+#getLastReadBytes()J
+#getLastWrittenBytes()J
+#getCurrentReadBytes()J
+#getCurrentWrittenBytes()J
+#getLastTime()J
+#getCumulativeWrittenBytes()J
+#getCumulativeReadBytes()J
+#getLastCumulativeTime()J
+#resetCumulativeTime()V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.14.0
-###org/jboss/netty/handler/traffic/TrafficCounter

+###org/jboss/netty/logging/AbstractInternalLogger
@0.10.0
+#isEnabled(Lorg/jboss/netty/logging/InternalLogLevel;)Z
+#log(Lorg/jboss/netty/logging/InternalLogLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
+#log(Lorg/jboss/netty/logging/InternalLogLevel;Ljava/lang/String;)V
@1.14.0
-###org/jboss/netty/logging/AbstractInternalLogger

+###org/jboss/netty/logging/CommonsLoggerFactory
@0.10.0
+#<init>()V
+#newInstance(Ljava/lang/String;)Lorg/jboss/netty/logging/InternalLogger;
@1.14.0
-###org/jboss/netty/logging/CommonsLoggerFactory

+###org/jboss/netty/logging/InternalLogLevel
@0.10.0
+#values()[Lorg/jboss/netty/logging/InternalLogLevel;
+#valueOf(Ljava/lang/String;)Lorg/jboss/netty/logging/InternalLogLevel;
@1.14.0
-###org/jboss/netty/logging/InternalLogLevel

+###org/jboss/netty/logging/InternalLogger
@0.10.0
+#isDebugEnabled()Z
+#isInfoEnabled()Z
+#isWarnEnabled()Z
+#isErrorEnabled()Z
+#isEnabled(Lorg/jboss/netty/logging/InternalLogLevel;)Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V
+#log(Lorg/jboss/netty/logging/InternalLogLevel;Ljava/lang/String;)V
+#log(Lorg/jboss/netty/logging/InternalLogLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/logging/InternalLogger

+###org/jboss/netty/logging/InternalLoggerFactory
@0.10.0
+#<init>()V
+#getDefaultFactory()Lorg/jboss/netty/logging/InternalLoggerFactory;
+#setDefaultFactory(Lorg/jboss/netty/logging/InternalLoggerFactory;)V
+#getInstance(Ljava/lang/Class;)Lorg/jboss/netty/logging/InternalLogger;
+#getInstance(Ljava/lang/String;)Lorg/jboss/netty/logging/InternalLogger;
+#newInstance(Ljava/lang/String;)Lorg/jboss/netty/logging/InternalLogger;
@1.14.0
-###org/jboss/netty/logging/InternalLoggerFactory

+###org/jboss/netty/logging/JBossLoggerFactory
@0.10.0
+#<init>()V
+#newInstance(Ljava/lang/String;)Lorg/jboss/netty/logging/InternalLogger;
@1.14.0
-###org/jboss/netty/logging/JBossLoggerFactory

+###org/jboss/netty/logging/JdkLoggerFactory
@0.10.0
+#<init>()V
+#newInstance(Ljava/lang/String;)Lorg/jboss/netty/logging/InternalLogger;
@1.14.0
-###org/jboss/netty/logging/JdkLoggerFactory

+###org/jboss/netty/logging/Log4JLoggerFactory
@0.10.0
+#<init>()V
+#newInstance(Ljava/lang/String;)Lorg/jboss/netty/logging/InternalLogger;
@1.14.0
-###org/jboss/netty/logging/Log4JLoggerFactory

+###org/jboss/netty/logging/OsgiLoggerFactory
@0.10.0
+#<init>(Lorg/osgi/framework/BundleContext;)V
+#<init>(Lorg/osgi/framework/BundleContext;Lorg/jboss/netty/logging/InternalLoggerFactory;)V
+#getFallback()Lorg/jboss/netty/logging/InternalLoggerFactory;
+#getLogService()Lorg/osgi/service/log/LogService;
+#destroy()V
+#newInstance(Ljava/lang/String;)Lorg/jboss/netty/logging/InternalLogger;
@1.14.0
-###org/jboss/netty/logging/OsgiLoggerFactory

+###org/jboss/netty/logging/Slf4JLoggerFactory
@0.10.0
+#<init>()V
+#newInstance(Ljava/lang/String;)Lorg/jboss/netty/logging/InternalLogger;
@1.14.0
-###org/jboss/netty/logging/Slf4JLoggerFactory

+###org/jboss/netty/util/CharsetUtil
@0.10.0
+#getEncoder(Ljava/nio/charset/Charset;)Ljava/nio/charset/CharsetEncoder;
+#getDecoder(Ljava/nio/charset/Charset;)Ljava/nio/charset/CharsetDecoder;
@1.14.0
-###org/jboss/netty/util/CharsetUtil

+###org/jboss/netty/util/DebugUtil
@0.10.0
+#isDebugEnabled()Z
@1.14.0
-###org/jboss/netty/util/DebugUtil

+###org/jboss/netty/util/DefaultObjectSizeEstimator
@0.10.0
+#<init>()V
+#estimateSize(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/util/DefaultObjectSizeEstimator

+###org/jboss/netty/util/EstimatableObjectWrapper
@0.10.0
+#unwrap()Ljava/lang/Object;
@1.14.0
-###org/jboss/netty/util/EstimatableObjectWrapper

+###org/jboss/netty/util/ExternalResourceReleasable
@0.10.0
+#releaseExternalResources()V
@1.14.0
-###org/jboss/netty/util/ExternalResourceReleasable

+###org/jboss/netty/util/ExternalResourceUtil
@0.10.0
+#release([Lorg/jboss/netty/util/ExternalResourceReleasable;)V
@1.14.0
-###org/jboss/netty/util/ExternalResourceUtil

+###org/jboss/netty/util/HashedWheelTimer
@0.10.0
+#<init>()V
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#<init>(JLjava/util/concurrent/TimeUnit;I)V
+#<init>(Ljava/util/concurrent/ThreadFactory;)V
+#<init>(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;)V
+#<init>(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;I)V
+#<init>(Ljava/util/concurrent/ThreadFactory;Lorg/jboss/netty/util/ThreadNameDeterminer;JLjava/util/concurrent/TimeUnit;I)V
+#start()V
+#stop()Ljava/util/Set;
+#newTimeout(Lorg/jboss/netty/util/TimerTask;JLjava/util/concurrent/TimeUnit;)Lorg/jboss/netty/util/Timeout;
@1.14.0
-###org/jboss/netty/util/HashedWheelTimer

+###org/jboss/netty/util/NetUtil
@0.10.0
+#createByteArrayFromIpAddressString(Ljava/lang/String;)[B
+#isValidIpV6Address(Ljava/lang/String;)Z
+#isValidIp4Word(Ljava/lang/String;)Z
+#isValidIpV4Address(Ljava/lang/String;)Z
@1.14.0
-###org/jboss/netty/util/NetUtil

+###org/jboss/netty/util/ObjectSizeEstimator
@0.10.0
+#estimateSize(Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/util/ObjectSizeEstimator

+###org/jboss/netty/util/ThreadNameDeterminer
@0.10.0
+#determineThreadName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/jboss/netty/util/ThreadNameDeterminer

+###org/jboss/netty/util/ThreadRenamingRunnable
@0.10.0
+#getThreadNameDeterminer()Lorg/jboss/netty/util/ThreadNameDeterminer;
+#setThreadNameDeterminer(Lorg/jboss/netty/util/ThreadNameDeterminer;)V
+#<init>(Ljava/lang/Runnable;Ljava/lang/String;Lorg/jboss/netty/util/ThreadNameDeterminer;)V
+#<init>(Ljava/lang/Runnable;Ljava/lang/String;)V
+#run()V
@1.14.0
-###org/jboss/netty/util/ThreadRenamingRunnable

+###org/jboss/netty/util/Timeout
@0.10.0
+#getTimer()Lorg/jboss/netty/util/Timer;
+#getTask()Lorg/jboss/netty/util/TimerTask;
+#isExpired()Z
+#isCancelled()Z
+#cancel()V
@1.14.0
-###org/jboss/netty/util/Timeout

+###org/jboss/netty/util/Timer
@0.10.0
+#newTimeout(Lorg/jboss/netty/util/TimerTask;JLjava/util/concurrent/TimeUnit;)Lorg/jboss/netty/util/Timeout;
+#stop()Ljava/util/Set;
@1.14.0
-###org/jboss/netty/util/Timer

+###org/jboss/netty/util/TimerTask
@0.10.0
+#run(Lorg/jboss/netty/util/Timeout;)V
@1.14.0
-###org/jboss/netty/util/TimerTask

+###org/jboss/netty/util/Version
@0.10.0
+#main([Ljava/lang/String;)V
@1.14.0
-###org/jboss/netty/util/Version

+###org/jboss/netty/util/VirtualExecutorService
@0.10.0
+#<init>(Ljava/util/concurrent/Executor;)V
+#isShutdown()Z
+#isTerminated()Z
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#execute(Ljava/lang/Runnable;)V
@1.14.0
-###org/jboss/netty/util/VirtualExecutorService

+###org/jboss/netty/util/internal/ByteBufferUtil
@0.10.0
+#destroy(Ljava/nio/ByteBuffer;)V
@1.14.0
-###org/jboss/netty/util/internal/ByteBufferUtil

+###org/jboss/netty/util/internal/CaseIgnoringComparator
@0.10.0
+#compare(Ljava/lang/String;Ljava/lang/String;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@1.14.0
-###org/jboss/netty/util/internal/CaseIgnoringComparator

+###org/jboss/netty/util/internal/ConcurrentHashMap
@0.10.0
+#<init>(IFI)V
+#<init>(IF)V
+#<init>(I)V
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#isEmpty()Z
+#size()I
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#keys()Ljava/util/Enumeration;
+#elements()Ljava/util/Enumeration;
@1.14.0
-###org/jboss/netty/util/internal/ConcurrentHashMap

+###org/jboss/netty/util/internal/ConcurrentIdentityHashMap
@0.10.0
+#<init>(IFI)V
+#<init>(IF)V
+#<init>(I)V
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#isEmpty()Z
+#size()I
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#keys()Ljava/util/Enumeration;
+#elements()Ljava/util/Enumeration;
@1.14.0
-###org/jboss/netty/util/internal/ConcurrentIdentityHashMap

+###org/jboss/netty/util/internal/ConcurrentIdentityWeakKeyHashMap
@0.10.0
+#<init>(IFI)V
+#<init>(IF)V
+#<init>(I)V
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#isEmpty()Z
+#size()I
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#purgeStaleEntries()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#keys()Ljava/util/Enumeration;
+#elements()Ljava/util/Enumeration;
@1.14.0
-###org/jboss/netty/util/internal/ConcurrentIdentityWeakKeyHashMap

+###org/jboss/netty/util/internal/ConcurrentWeakKeyHashMap
@0.10.0
+#<init>(IFI)V
+#<init>(IF)V
+#<init>(I)V
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#isEmpty()Z
+#size()I
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#purgeStaleEntries()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#keys()Ljava/util/Enumeration;
+#elements()Ljava/util/Enumeration;
@1.14.0
-###org/jboss/netty/util/internal/ConcurrentWeakKeyHashMap

+###org/jboss/netty/util/internal/ConversionUtil
@0.10.0
+#toInt(Ljava/lang/Object;)I
+#toBoolean(Ljava/lang/Object;)Z
+#toStringArray(Ljava/lang/Object;)[Ljava/lang/String;
+#toString(I)Ljava/lang/String;
@1.14.0
-###org/jboss/netty/util/internal/ConversionUtil

+###org/jboss/netty/util/internal/DeadLockProofWorker
@0.10.0
+#start(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
@1.14.0
-###org/jboss/netty/util/internal/DeadLockProofWorker

+###org/jboss/netty/util/internal/DetectionUtil
@0.10.0
+#isWindows()Z
+#hasUnsafe()Z
+#javaVersion()I
@1.14.0
-###org/jboss/netty/util/internal/DetectionUtil

+###org/jboss/netty/util/internal/ExecutorUtil
@0.10.0
+#shutdownNow(Ljava/util/concurrent/Executor;)V
+#isShutdown(Ljava/util/concurrent/Executor;)Z
+#terminate([Ljava/util/concurrent/Executor;)V
+#terminate(Ljava/lang/ThreadLocal;[Ljava/util/concurrent/Executor;)V
@1.14.0
-###org/jboss/netty/util/internal/ExecutorUtil

+###org/jboss/netty/util/internal/NonReentrantLock
@0.10.0
+#<init>()V
+#lock()V
+#lockInterruptibly()V
+#tryLock()Z
+#tryLock(JLjava/util/concurrent/TimeUnit;)Z
+#unlock()V
+#isHeldByCurrentThread()Z
+#newCondition()Ljava/util/concurrent/locks/Condition;
@1.14.0
-###org/jboss/netty/util/internal/NonReentrantLock

+###org/jboss/netty/util/internal/ReusableIterator
@0.10.0
+#rewind()V
@1.14.0
-###org/jboss/netty/util/internal/ReusableIterator

+###org/jboss/netty/util/internal/SharedResourceMisuseDetector
@0.10.0
+#<init>(Ljava/lang/Class;)V
+#increase()V
+#decrease()V
@1.14.0
-###org/jboss/netty/util/internal/SharedResourceMisuseDetector

+###org/jboss/netty/util/internal/StackTraceSimplifier
@0.10.0
+#simplify(Ljava/lang/Throwable;)V
@1.14.0
-###org/jboss/netty/util/internal/StackTraceSimplifier

+###org/jboss/netty/util/internal/StringUtil
@0.10.0
+#stripControlCharacters(Ljava/lang/Object;)Ljava/lang/String;
+#stripControlCharacters(Ljava/lang/String;)Ljava/lang/String;
+#split(Ljava/lang/String;C)[Ljava/lang/String;
@1.14.0
-###org/jboss/netty/util/internal/StringUtil

+###org/jboss/netty/util/internal/SystemPropertyUtil
@0.10.0
+#contains(Ljava/lang/String;)Z
+#get(Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;Z)Z
+#getInt(Ljava/lang/String;I)I
+#getLong(Ljava/lang/String;J)J
@1.14.0
-###org/jboss/netty/util/internal/SystemPropertyUtil

+###org/jboss/netty/util/internal/ThreadLocalBoolean
@0.10.0
+#<init>()V
+#<init>(Z)V
@1.14.0
-###org/jboss/netty/util/internal/ThreadLocalBoolean

+###org/jboss/netty/util/internal/UnterminatableExecutor
@0.10.0
+#<init>(Ljava/util/concurrent/Executor;)V
+#execute(Ljava/lang/Runnable;)V
@1.14.0
-###org/jboss/netty/util/internal/UnterminatableExecutor

+###org/jboss/netty/util/internal/jzlib/JZlib
@0.10.0
@1.14.0
-###org/jboss/netty/util/internal/jzlib/JZlib

+###org/jboss/netty/util/internal/jzlib/ZStream
@0.10.0
+#<init>()V
+#inflateInit()I
+#inflateInit(Ljava/lang/Enum;)I
+#inflateInit(I)I
+#inflateInit(ILjava/lang/Enum;)I
+#inflate(I)I
+#inflateEnd()I
+#inflateSync()I
+#inflateSetDictionary([BI)I
+#deflateInit(I)I
+#deflateInit(ILjava/lang/Enum;)I
+#deflateInit(II)I
+#deflateInit(IILjava/lang/Enum;)I
+#deflateInit(IIILjava/lang/Enum;)I
+#deflate(I)I
+#deflateEnd()I
+#deflateParams(II)I
+#deflateSetDictionary([BI)I
+#free()V
@1.14.0
-###org/jboss/netty/util/internal/jzlib/ZStream

+###org/apache/commons/lang3/AnnotationUtils
@0.10.0
+#<init>()V
+#equals(Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Z
+#hashCode(Ljava/lang/annotation/Annotation;)I
+#toString(Ljava/lang/annotation/Annotation;)Ljava/lang/String;
+#isValidAnnotationMemberType(Ljava/lang/Class;)Z
@1.14.0
-###org/apache/commons/lang3/AnnotationUtils

+###org/apache/commons/lang3/ArrayUtils
@0.10.0
+#<init>()V
+#toString(Ljava/lang/Object;)Ljava/lang/String;
+#toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#hashCode(Ljava/lang/Object;)I
+#isEquals(Ljava/lang/Object;Ljava/lang/Object;)Z[deprecated]
+#toMap([Ljava/lang/Object;)Ljava/util/Map;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#clone([Ljava/lang/Object;)[Ljava/lang/Object;
+#clone([J)[J
+#clone([I)[I
+#clone([S)[S
+#clone([C)[C
+#clone([B)[B
+#clone([D)[D
+#clone([F)[F
+#clone([Z)[Z
+#nullToEmpty([Ljava/lang/Object;)[Ljava/lang/Object;
+#nullToEmpty([Ljava/lang/Class;)[Ljava/lang/Class;
+#nullToEmpty([Ljava/lang/String;)[Ljava/lang/String;
+#nullToEmpty([J)[J
+#nullToEmpty([I)[I
+#nullToEmpty([S)[S
+#nullToEmpty([C)[C
+#nullToEmpty([B)[B
+#nullToEmpty([D)[D
+#nullToEmpty([F)[F
+#nullToEmpty([Z)[Z
+#nullToEmpty([Ljava/lang/Long;)[Ljava/lang/Long;
+#nullToEmpty([Ljava/lang/Integer;)[Ljava/lang/Integer;
+#nullToEmpty([Ljava/lang/Short;)[Ljava/lang/Short;
+#nullToEmpty([Ljava/lang/Character;)[Ljava/lang/Character;
+#nullToEmpty([Ljava/lang/Byte;)[Ljava/lang/Byte;
+#nullToEmpty([Ljava/lang/Double;)[Ljava/lang/Double;
+#nullToEmpty([Ljava/lang/Float;)[Ljava/lang/Float;
+#nullToEmpty([Ljava/lang/Boolean;)[Ljava/lang/Boolean;
+#subarray([Ljava/lang/Object;II)[Ljava/lang/Object;
+#subarray([JII)[J
+#subarray([III)[I
+#subarray([SII)[S
+#subarray([CII)[C
+#subarray([BII)[B
+#subarray([DII)[D
+#subarray([FII)[F
+#subarray([ZII)[Z
+#isSameLength([Ljava/lang/Object;[Ljava/lang/Object;)Z
+#isSameLength([J[J)Z
+#isSameLength([I[I)Z
+#isSameLength([S[S)Z
+#isSameLength([C[C)Z
+#isSameLength([B[B)Z
+#isSameLength([D[D)Z
+#isSameLength([F[F)Z
+#isSameLength([Z[Z)Z
+#getLength(Ljava/lang/Object;)I
+#isSameType(Ljava/lang/Object;Ljava/lang/Object;)Z
+#reverse([Ljava/lang/Object;)V
+#reverse([J)V
+#reverse([I)V
+#reverse([S)V
+#reverse([C)V
+#reverse([B)V
+#reverse([D)V
+#reverse([F)V
+#reverse([Z)V
+#reverse([ZII)V
+#reverse([BII)V
+#reverse([CII)V
+#reverse([DII)V
+#reverse([FII)V
+#reverse([III)V
+#reverse([JII)V
+#reverse([Ljava/lang/Object;II)V
+#reverse([SII)V
+#indexOf([Ljava/lang/Object;Ljava/lang/Object;)I
+#indexOf([Ljava/lang/Object;Ljava/lang/Object;I)I
+#lastIndexOf([Ljava/lang/Object;Ljava/lang/Object;)I
+#lastIndexOf([Ljava/lang/Object;Ljava/lang/Object;I)I
+#contains([Ljava/lang/Object;Ljava/lang/Object;)Z
+#indexOf([JJ)I
+#indexOf([JJI)I
+#lastIndexOf([JJ)I
+#lastIndexOf([JJI)I
+#contains([JJ)Z
+#indexOf([II)I
+#indexOf([III)I
+#lastIndexOf([II)I
+#lastIndexOf([III)I
+#contains([II)Z
+#indexOf([SS)I
+#indexOf([SSI)I
+#lastIndexOf([SS)I
+#lastIndexOf([SSI)I
+#contains([SS)Z
+#indexOf([CC)I
+#indexOf([CCI)I
+#lastIndexOf([CC)I
+#lastIndexOf([CCI)I
+#contains([CC)Z
+#indexOf([BB)I
+#indexOf([BBI)I
+#lastIndexOf([BB)I
+#lastIndexOf([BBI)I
+#contains([BB)Z
+#indexOf([DD)I
+#indexOf([DDD)I
+#indexOf([DDI)I
+#indexOf([DDID)I
+#lastIndexOf([DD)I
+#lastIndexOf([DDD)I
+#lastIndexOf([DDI)I
+#lastIndexOf([DDID)I
+#contains([DD)Z
+#contains([DDD)Z
+#indexOf([FF)I
+#indexOf([FFI)I
+#lastIndexOf([FF)I
+#lastIndexOf([FFI)I
+#contains([FF)Z
+#indexOf([ZZ)I
+#indexOf([ZZI)I
+#lastIndexOf([ZZ)I
+#lastIndexOf([ZZI)I
+#contains([ZZ)Z
+#toPrimitive([Ljava/lang/Character;)[C
+#toPrimitive([Ljava/lang/Character;C)[C
+#toObject([C)[Ljava/lang/Character;
+#toPrimitive([Ljava/lang/Long;)[J
+#toPrimitive([Ljava/lang/Long;J)[J
+#toObject([J)[Ljava/lang/Long;
+#toPrimitive([Ljava/lang/Integer;)[I
+#toPrimitive([Ljava/lang/Integer;I)[I
+#toObject([I)[Ljava/lang/Integer;
+#toPrimitive([Ljava/lang/Short;)[S
+#toPrimitive([Ljava/lang/Short;S)[S
+#toObject([S)[Ljava/lang/Short;
+#toPrimitive([Ljava/lang/Byte;)[B
+#toPrimitive([Ljava/lang/Byte;B)[B
+#toObject([B)[Ljava/lang/Byte;
+#toPrimitive([Ljava/lang/Double;)[D
+#toPrimitive([Ljava/lang/Double;D)[D
+#toObject([D)[Ljava/lang/Double;
+#toPrimitive([Ljava/lang/Float;)[F
+#toPrimitive([Ljava/lang/Float;F)[F
+#toObject([F)[Ljava/lang/Float;
+#toPrimitive([Ljava/lang/Boolean;)[Z
+#toPrimitive([Ljava/lang/Boolean;Z)[Z
+#toObject([Z)[Ljava/lang/Boolean;
+#isEmpty([Ljava/lang/Object;)Z
+#isEmpty([J)Z
+#isEmpty([I)Z
+#isEmpty([S)Z
+#isEmpty([C)Z
+#isEmpty([B)Z
+#isEmpty([D)Z
+#isEmpty([F)Z
+#isEmpty([Z)Z
+#isNotEmpty([Ljava/lang/Object;)Z
+#isNotEmpty([J)Z
+#isNotEmpty([I)Z
+#isNotEmpty([S)Z
+#isNotEmpty([C)Z
+#isNotEmpty([B)Z
+#isNotEmpty([D)Z
+#isNotEmpty([F)Z
+#isNotEmpty([Z)Z
+#addAll([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
+#addAll([Z[Z)[Z
+#addAll([C[C)[C
+#addAll([B[B)[B
+#addAll([S[S)[S
+#addAll([I[I)[I
+#addAll([J[J)[J
+#addAll([F[F)[F
+#addAll([D[D)[D
+#add([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
+#add([ZZ)[Z
+#add([BB)[B
+#add([CC)[C
+#add([DD)[D
+#add([FF)[F
+#add([II)[I
+#add([JJ)[J
+#add([SS)[S
+#add([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;
+#add([ZIZ)[Z
+#add([CIC)[C
+#add([BIB)[B
+#add([SIS)[S
+#add([III)[I
+#add([JIJ)[J
+#add([FIF)[F
+#add([DID)[D
+#remove([Ljava/lang/Object;I)[Ljava/lang/Object;
+#removeElement([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
+#remove([ZI)[Z
+#removeElement([ZZ)[Z
+#remove([BI)[B
+#removeElement([BB)[B
+#remove([CI)[C
+#removeElement([CC)[C
+#remove([DI)[D
+#removeElement([DD)[D
+#remove([FI)[F
+#removeElement([FF)[F
+#remove([II)[I
+#removeElement([II)[I
+#remove([JI)[J
+#removeElement([JJ)[J
+#remove([SI)[S
+#removeElement([SS)[S
+#removeAll([Ljava/lang/Object;[I)[Ljava/lang/Object;
+#removeElements([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
+#removeAll([B[I)[B
+#removeElements([B[B)[B
+#removeAll([S[I)[S
+#removeElements([S[S)[S
+#removeAll([I[I)[I
+#removeElements([I[I)[I
+#removeAll([C[I)[C
+#removeElements([C[C)[C
+#removeAll([J[I)[J
+#removeElements([J[J)[J
+#removeAll([F[I)[F
+#removeElements([F[F)[F
+#removeAll([D[I)[D
+#removeElements([D[D)[D
+#removeAll([Z[I)[Z
+#removeElements([Z[Z)[Z
@1.14.0
-###org/apache/commons/lang3/ArrayUtils

+###org/apache/commons/lang3/BitField
@0.10.0
+#<init>(I)V
+#getValue(I)I
+#getShortValue(S)S
+#getRawValue(I)I
+#getShortRawValue(S)S
+#isSet(I)Z
+#isAllSet(I)Z
+#setValue(II)I
+#setShortValue(SS)S
+#clear(I)I
+#clearShort(S)S
+#clearByte(B)B
+#set(I)I
+#setShort(S)S
+#setByte(B)B
+#setBoolean(IZ)I
+#setShortBoolean(SZ)S
+#setByteBoolean(BZ)B
@1.14.0
-###org/apache/commons/lang3/BitField

+###org/apache/commons/lang3/BooleanUtils
@0.10.0
+#<init>()V
+#negate(Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#isTrue(Ljava/lang/Boolean;)Z
+#isNotTrue(Ljava/lang/Boolean;)Z
+#isFalse(Ljava/lang/Boolean;)Z
+#isNotFalse(Ljava/lang/Boolean;)Z
+#toBoolean(Ljava/lang/Boolean;)Z
+#toBooleanDefaultIfNull(Ljava/lang/Boolean;Z)Z
+#toBoolean(I)Z
+#toBooleanObject(I)Ljava/lang/Boolean;
+#toBooleanObject(Ljava/lang/Integer;)Ljava/lang/Boolean;
+#toBoolean(III)Z
+#toBoolean(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Z
+#toBooleanObject(IIII)Ljava/lang/Boolean;
+#toBooleanObject(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Boolean;
+#toInteger(Z)I
+#toIntegerObject(Z)Ljava/lang/Integer;
+#toIntegerObject(Ljava/lang/Boolean;)Ljava/lang/Integer;
+#toInteger(ZII)I
+#toInteger(Ljava/lang/Boolean;III)I
+#toIntegerObject(ZLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;
+#toIntegerObject(Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;
+#toBooleanObject(Ljava/lang/String;)Ljava/lang/Boolean;
+#toBooleanObject(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#toBoolean(Ljava/lang/String;)Z
+#toBoolean(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
+#toStringTrueFalse(Ljava/lang/Boolean;)Ljava/lang/String;
+#toStringOnOff(Ljava/lang/Boolean;)Ljava/lang/String;
+#toStringYesNo(Ljava/lang/Boolean;)Ljava/lang/String;
+#toString(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#toStringTrueFalse(Z)Ljava/lang/String;
+#toStringOnOff(Z)Ljava/lang/String;
+#toStringYesNo(Z)Ljava/lang/String;
+#toString(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#and([Z)Z
+#and([Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#or([Z)Z
+#or([Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#xor([Z)Z
+#xor([Ljava/lang/Boolean;)Ljava/lang/Boolean;
@1.14.0
-###org/apache/commons/lang3/BooleanUtils

+###org/apache/commons/lang3/builder/Builder
@0.10.0
+#build()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/builder/Builder

+###org/apache/commons/lang3/builder/CompareToBuilder
@0.10.0
+#<init>()V
+#reflectionCompare(Ljava/lang/Object;Ljava/lang/Object;)I
+#reflectionCompare(Ljava/lang/Object;Ljava/lang/Object;Z)I
+#reflectionCompare(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)I
+#reflectionCompare(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/String;)I
+#reflectionCompare(Ljava/lang/Object;Ljava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)I
+#appendSuper(I)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append(JJ)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append(II)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append(SS)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append(CC)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append(BB)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append(DD)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append(FF)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append(ZZ)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append([J[J)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append([I[I)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append([S[S)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append([C[C)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append([B[B)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append([D[D)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append([F[F)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#append([Z[Z)Lorg/apache/commons/lang3/builder/CompareToBuilder;
+#toComparison()I
+#build()Ljava/lang/Integer;
+#build()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/builder/CompareToBuilder

+###org/apache/commons/lang3/builder/Diff
@0.10.0
+#getType()Ljava/lang/reflect/Type;
+#getFieldName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/builder/Diff

+###org/apache/commons/lang3/builder/Diffable
@0.10.0
+#diff(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffResult;
@1.14.0
-###org/apache/commons/lang3/builder/Diffable

+###org/apache/commons/lang3/builder/DiffBuilder
@0.10.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
+#append(Ljava/lang/String;ZZ)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;[Z[Z)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;BB)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;[B[B)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;CC)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;[C[C)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;DD)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;[D[D)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;FF)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;[F[F)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;II)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;[I[I)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;JJ)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;[J[J)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;SS)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;[S[S)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#append(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
+#build()Lorg/apache/commons/lang3/builder/DiffResult;
+#build()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/builder/DiffBuilder

+###org/apache/commons/lang3/builder/DiffResult
@0.10.0
+#getDiffs()Ljava/util/List;
+#getNumberOfDiffs()I
+#getToStringStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;
+#toString()Ljava/lang/String;
+#toString(Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
@1.14.0
-###org/apache/commons/lang3/builder/DiffResult

+###org/apache/commons/lang3/builder/EqualsBuilder
@0.10.0
+#<init>()V
+#reflectionEquals(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)Z
+#reflectionEquals(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/String;)Z
+#reflectionEquals(Ljava/lang/Object;Ljava/lang/Object;Z)Z
+#reflectionEquals(Ljava/lang/Object;Ljava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)Z
+#appendSuper(Z)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append(JJ)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append(II)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append(SS)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append(CC)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append(BB)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append(DD)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append(FF)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append(ZZ)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append([J[J)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append([I[I)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append([S[S)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append([C[C)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append([B[B)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append([D[D)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append([F[F)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#append([Z[Z)Lorg/apache/commons/lang3/builder/EqualsBuilder;
+#isEquals()Z
+#build()Ljava/lang/Boolean;
+#reset()V
+#build()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/builder/EqualsBuilder

+###org/apache/commons/lang3/builder/HashCodeBuilder
@0.10.0
+#reflectionHashCode(IILjava/lang/Object;)I
+#reflectionHashCode(IILjava/lang/Object;Z)I
+#reflectionHashCode(IILjava/lang/Object;ZLjava/lang/Class;[Ljava/lang/String;)I
+#reflectionHashCode(Ljava/lang/Object;Z)I
+#reflectionHashCode(Ljava/lang/Object;Ljava/util/Collection;)I
+#reflectionHashCode(Ljava/lang/Object;[Ljava/lang/String;)I
+#<init>()V
+#<init>(II)V
+#append(Z)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append([Z)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append(B)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append([B)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append(C)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append([C)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append(D)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append([D)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append(F)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append([F)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append(I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append([I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append(J)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append([J)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append([Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append(S)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#append([S)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#appendSuper(I)Lorg/apache/commons/lang3/builder/HashCodeBuilder;
+#toHashCode()I
+#build()Ljava/lang/Integer;
+#hashCode()I
+#build()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/builder/HashCodeBuilder

+###org/apache/commons/lang3/builder/RecursiveToStringStyle
@0.10.0
+#<init>()V
+#appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V
@1.14.0
-###org/apache/commons/lang3/builder/RecursiveToStringStyle

+###org/apache/commons/lang3/builder/ReflectionToStringBuilder
@0.10.0
+#toString(Ljava/lang/Object;)Ljava/lang/String;
+#toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;
+#toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)Ljava/lang/String;
+#toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZ)Ljava/lang/String;
+#toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;
+#toStringExclude(Ljava/lang/Object;Ljava/util/Collection;)Ljava/lang/String;
+#toStringExclude(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/String;
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
+#<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V
+#<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class;ZZ)V
+#getExcludeFieldNames()[Ljava/lang/String;
+#getUpToClass()Ljava/lang/Class;
+#isAppendStatics()Z
+#isAppendTransients()Z
+#reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;
+#setAppendStatics(Z)V
+#setAppendTransients(Z)V
+#setExcludeFieldNames([Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;
+#setUpToClass(Ljava/lang/Class;)V
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/builder/ReflectionToStringBuilder

+###org/apache/commons/lang3/builder/StandardToStringStyle
@0.10.0
+#<init>()V
+#isUseClassName()Z
+#setUseClassName(Z)V
+#isUseShortClassName()Z
+#setUseShortClassName(Z)V
+#isUseIdentityHashCode()Z
+#setUseIdentityHashCode(Z)V
+#isUseFieldNames()Z
+#setUseFieldNames(Z)V
+#isDefaultFullDetail()Z
+#setDefaultFullDetail(Z)V
+#isArrayContentDetail()Z
+#setArrayContentDetail(Z)V
+#getArrayStart()Ljava/lang/String;
+#setArrayStart(Ljava/lang/String;)V
+#getArrayEnd()Ljava/lang/String;
+#setArrayEnd(Ljava/lang/String;)V
+#getArraySeparator()Ljava/lang/String;
+#setArraySeparator(Ljava/lang/String;)V
+#getContentStart()Ljava/lang/String;
+#setContentStart(Ljava/lang/String;)V
+#getContentEnd()Ljava/lang/String;
+#setContentEnd(Ljava/lang/String;)V
+#getFieldNameValueSeparator()Ljava/lang/String;
+#setFieldNameValueSeparator(Ljava/lang/String;)V
+#getFieldSeparator()Ljava/lang/String;
+#setFieldSeparator(Ljava/lang/String;)V
+#isFieldSeparatorAtStart()Z
+#setFieldSeparatorAtStart(Z)V
+#isFieldSeparatorAtEnd()Z
+#setFieldSeparatorAtEnd(Z)V
+#getNullText()Ljava/lang/String;
+#setNullText(Ljava/lang/String;)V
+#getSizeStartText()Ljava/lang/String;
+#setSizeStartText(Ljava/lang/String;)V
+#getSizeEndText()Ljava/lang/String;
+#setSizeEndText(Ljava/lang/String;)V
+#getSummaryObjectStartText()Ljava/lang/String;
+#setSummaryObjectStartText(Ljava/lang/String;)V
+#getSummaryObjectEndText()Ljava/lang/String;
+#setSummaryObjectEndText(Ljava/lang/String;)V
@1.14.0
-###org/apache/commons/lang3/builder/StandardToStringStyle

+###org/apache/commons/lang3/builder/ToStringBuilder
@0.10.0
+#getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;
+#setDefaultStyle(Lorg/apache/commons/lang3/builder/ToStringStyle;)V
+#reflectionToString(Ljava/lang/Object;)Ljava/lang/String;
+#reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;
+#reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)Ljava/lang/String;
+#reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZLjava/lang/Class;)Ljava/lang/String;
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
+#<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V
+#append(Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append([Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(B)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append([B)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(C)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append([C)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(D)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append([D)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(F)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append([F)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(I)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append([I)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(J)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append([J)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append([Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(S)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append([S)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[ZZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;B)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[B)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[BZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;C)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[C)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[CZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;D)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[D)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[DZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;F)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[F)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[FZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;I)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[I)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[IZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;J)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[J)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[JZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;Ljava/lang/Object;Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[Ljava/lang/Object;Z)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;S)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[S)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#append(Ljava/lang/String;[SZ)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#appendAsObjectToString(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#appendSuper(Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#appendToString(Ljava/lang/String;)Lorg/apache/commons/lang3/builder/ToStringBuilder;
+#getObject()Ljava/lang/Object;
+#getStringBuffer()Ljava/lang/StringBuffer;
+#getStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;
+#toString()Ljava/lang/String;
+#build()Ljava/lang/String;
+#build()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/builder/ToStringBuilder

+###org/apache/commons/lang3/builder/ToStringStyle
@0.10.0
+#appendSuper(Ljava/lang/StringBuffer;Ljava/lang/String;)V
+#appendToString(Ljava/lang/StringBuffer;Ljava/lang/String;)V
+#appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
+#appendEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;J)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;I)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;S)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;B)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;C)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;D)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;F)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;Z)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Boolean;)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;[JLjava/lang/Boolean;)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;[ILjava/lang/Boolean;)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;[SLjava/lang/Boolean;)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;[BLjava/lang/Boolean;)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;[CLjava/lang/Boolean;)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;[DLjava/lang/Boolean;)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;[FLjava/lang/Boolean;)V
+#append(Ljava/lang/StringBuffer;Ljava/lang/String;[ZLjava/lang/Boolean;)V
@1.14.0
-###org/apache/commons/lang3/builder/ToStringStyle

+###org/apache/commons/lang3/CharEncoding
@0.10.0
+#<init>()V
+#isSupported(Ljava/lang/String;)Z
@1.14.0
-###org/apache/commons/lang3/CharEncoding

+###org/apache/commons/lang3/CharSequenceUtils
@0.10.0
+#<init>()V
+#subSequence(Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;
@1.14.0
-###org/apache/commons/lang3/CharSequenceUtils

+###org/apache/commons/lang3/CharSet
@0.10.0
+#getInstance([Ljava/lang/String;)Lorg/apache/commons/lang3/CharSet;
+#contains(C)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/CharSet

+###org/apache/commons/lang3/CharSetUtils
@0.10.0
+#<init>()V
+#squeeze(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
+#containsAny(Ljava/lang/String;[Ljava/lang/String;)Z
+#count(Ljava/lang/String;[Ljava/lang/String;)I
+#keep(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
+#delete(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/CharSetUtils

+###org/apache/commons/lang3/CharUtils
@0.10.0
+#<init>()V
+#toCharacterObject(C)Ljava/lang/Character;[deprecated]
+#toCharacterObject(Ljava/lang/String;)Ljava/lang/Character;
+#toChar(Ljava/lang/Character;)C
+#toChar(Ljava/lang/Character;C)C
+#toChar(Ljava/lang/String;)C
+#toChar(Ljava/lang/String;C)C
+#toIntValue(C)I
+#toIntValue(CI)I
+#toIntValue(Ljava/lang/Character;)I
+#toIntValue(Ljava/lang/Character;I)I
+#toString(C)Ljava/lang/String;
+#toString(Ljava/lang/Character;)Ljava/lang/String;
+#unicodeEscaped(C)Ljava/lang/String;
+#unicodeEscaped(Ljava/lang/Character;)Ljava/lang/String;
+#isAscii(C)Z
+#isAsciiPrintable(C)Z
+#isAsciiControl(C)Z
+#isAsciiAlpha(C)Z
+#isAsciiAlphaUpper(C)Z
+#isAsciiAlphaLower(C)Z
+#isAsciiNumeric(C)Z
+#isAsciiAlphanumeric(C)Z
@1.14.0
-###org/apache/commons/lang3/CharUtils

+###org/apache/commons/lang3/ClassPathUtils
@0.10.0
+#<init>()V
+#toFullyQualifiedName(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
+#toFullyQualifiedName(Ljava/lang/Package;Ljava/lang/String;)Ljava/lang/String;
+#toFullyQualifiedPath(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
+#toFullyQualifiedPath(Ljava/lang/Package;Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/ClassPathUtils

+###org/apache/commons/lang3/ClassUtils$Interfaces
@0.10.0
+#values()[Lorg/apache/commons/lang3/ClassUtils$Interfaces;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/lang3/ClassUtils$Interfaces;
@1.14.0
-###org/apache/commons/lang3/ClassUtils$Interfaces

+###org/apache/commons/lang3/ClassUtils
@0.10.0
+#<init>()V
+#getShortClassName(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#getShortClassName(Ljava/lang/Class;)Ljava/lang/String;
+#getShortClassName(Ljava/lang/String;)Ljava/lang/String;
+#getSimpleName(Ljava/lang/Class;)Ljava/lang/String;
+#getSimpleName(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#getPackageName(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#getPackageName(Ljava/lang/Class;)Ljava/lang/String;
+#getPackageName(Ljava/lang/String;)Ljava/lang/String;
+#getAllSuperclasses(Ljava/lang/Class;)Ljava/util/List;
+#getAllInterfaces(Ljava/lang/Class;)Ljava/util/List;
+#convertClassNamesToClasses(Ljava/util/List;)Ljava/util/List;
+#convertClassesToClassNames(Ljava/util/List;)Ljava/util/List;
+#isAssignable([Ljava/lang/Class;[Ljava/lang/Class;)Z
+#isAssignable([Ljava/lang/Class;[Ljava/lang/Class;Z)Z
+#isPrimitiveOrWrapper(Ljava/lang/Class;)Z
+#isPrimitiveWrapper(Ljava/lang/Class;)Z
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;)Z
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Z)Z
+#primitiveToWrapper(Ljava/lang/Class;)Ljava/lang/Class;
+#primitivesToWrappers([Ljava/lang/Class;)[Ljava/lang/Class;
+#wrapperToPrimitive(Ljava/lang/Class;)Ljava/lang/Class;
+#wrappersToPrimitives([Ljava/lang/Class;)[Ljava/lang/Class;
+#isInnerClass(Ljava/lang/Class;)Z
+#getClass(Ljava/lang/ClassLoader;Ljava/lang/String;Z)Ljava/lang/Class;
+#getClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
+#getClass(Ljava/lang/String;Z)Ljava/lang/Class;
+#getPublicMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#toClass([Ljava/lang/Object;)[Ljava/lang/Class;
+#getShortCanonicalName(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#getShortCanonicalName(Ljava/lang/Class;)Ljava/lang/String;
+#getShortCanonicalName(Ljava/lang/String;)Ljava/lang/String;
+#getPackageCanonicalName(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#getPackageCanonicalName(Ljava/lang/Class;)Ljava/lang/String;
+#getPackageCanonicalName(Ljava/lang/String;)Ljava/lang/String;
+#hierarchy(Ljava/lang/Class;)Ljava/lang/Iterable;
+#hierarchy(Ljava/lang/Class;Lorg/apache/commons/lang3/ClassUtils$Interfaces;)Ljava/lang/Iterable;
@1.14.0
-###org/apache/commons/lang3/ClassUtils

+###org/apache/commons/lang3/concurrent/AtomicInitializer
@0.10.0
+#<init>()V
+#get()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/concurrent/AtomicInitializer

+###org/apache/commons/lang3/concurrent/AtomicSafeInitializer
@0.10.0
+#<init>()V
+#get()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/concurrent/AtomicSafeInitializer

+###org/apache/commons/lang3/concurrent/BackgroundInitializer
@0.10.0
+#getExternalExecutor()Ljava/util/concurrent/ExecutorService;
+#isStarted()Z
+#setExternalExecutor(Ljava/util/concurrent/ExecutorService;)V
+#start()Z
+#get()Ljava/lang/Object;
+#getFuture()Ljava/util/concurrent/Future;
@1.14.0
-###org/apache/commons/lang3/concurrent/BackgroundInitializer

+###org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder
@0.10.0
+#<init>()V
+#wrappedFactory(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;
+#namingPattern(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;
+#daemon(Z)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;
+#priority(I)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;
+#uncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;
+#reset()V
+#build()Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;
+#build()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder

+###org/apache/commons/lang3/concurrent/BasicThreadFactory
@0.10.0
+#getWrappedFactory()Ljava/util/concurrent/ThreadFactory;
+#getNamingPattern()Ljava/lang/String;
+#getDaemonFlag()Ljava/lang/Boolean;
+#getPriority()Ljava/lang/Integer;
+#getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;
+#getThreadCount()J
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
@1.14.0
-###org/apache/commons/lang3/concurrent/BasicThreadFactory

+###org/apache/commons/lang3/concurrent/CallableBackgroundInitializer
@0.10.0
+#<init>(Ljava/util/concurrent/Callable;)V
+#<init>(Ljava/util/concurrent/Callable;Ljava/util/concurrent/ExecutorService;)V
@1.14.0
-###org/apache/commons/lang3/concurrent/CallableBackgroundInitializer

+###org/apache/commons/lang3/concurrent/ConcurrentException
@0.10.0
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/commons/lang3/concurrent/ConcurrentException

+###org/apache/commons/lang3/concurrent/ConcurrentInitializer
@0.10.0
+#get()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/concurrent/ConcurrentInitializer

+###org/apache/commons/lang3/concurrent/ConcurrentRuntimeException
@0.10.0
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/commons/lang3/concurrent/ConcurrentRuntimeException

+###org/apache/commons/lang3/concurrent/ConcurrentUtils
@0.10.0
+#extractCause(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;
+#extractCauseUnchecked(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
+#handleCause(Ljava/util/concurrent/ExecutionException;)V
+#handleCauseUnchecked(Ljava/util/concurrent/ExecutionException;)V
+#initialize(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
+#initializeUnchecked(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
+#putIfAbsent(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createIfAbsent(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
+#createIfAbsentUnchecked(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
+#constantFuture(Ljava/lang/Object;)Ljava/util/concurrent/Future;
@1.14.0
-###org/apache/commons/lang3/concurrent/ConcurrentUtils

+###org/apache/commons/lang3/concurrent/ConstantInitializer
@0.10.0
+#<init>(Ljava/lang/Object;)V
+#getObject()Ljava/lang/Object;
+#get()Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/concurrent/ConstantInitializer

+###org/apache/commons/lang3/concurrent/LazyInitializer
@0.10.0
+#<init>()V
+#get()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/concurrent/LazyInitializer

+###org/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults
@0.10.0
+#getInitializer(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
+#getResultObject(Ljava/lang/String;)Ljava/lang/Object;
+#isException(Ljava/lang/String;)Z
+#getException(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;
+#initializerNames()Ljava/util/Set;
+#isSuccessful()Z
@1.14.0
-###org/apache/commons/lang3/concurrent/MultiBackgroundInitializer$MultiBackgroundInitializerResults

+###org/apache/commons/lang3/concurrent/MultiBackgroundInitializer
@0.10.0
+#<init>()V
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#addInitializer(Ljava/lang/String;Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;)V
@1.14.0
-###org/apache/commons/lang3/concurrent/MultiBackgroundInitializer

+###org/apache/commons/lang3/concurrent/TimedSemaphore
@0.10.0
+#<init>(JLjava/util/concurrent/TimeUnit;I)V
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;I)V
+#getLimit()I
+#setLimit(I)V
+#shutdown()V
+#isShutdown()Z
+#acquire()V
+#getLastAcquiresPerPeriod()I
+#getAcquireCount()I
+#getAvailablePermits()I
+#getAverageCallsPerPeriod()D
+#getPeriod()J
+#getUnit()Ljava/util/concurrent/TimeUnit;
@1.14.0
-###org/apache/commons/lang3/concurrent/TimedSemaphore

+###org/apache/commons/lang3/Conversion
@0.10.0
+#<init>()V
+#hexDigitToInt(C)I
+#hexDigitMsb0ToInt(C)I
+#hexDigitToBinary(C)[Z
+#hexDigitMsb0ToBinary(C)[Z
+#binaryToHexDigit([Z)C
+#binaryToHexDigit([ZI)C
+#binaryToHexDigitMsb0_4bits([Z)C
+#binaryToHexDigitMsb0_4bits([ZI)C
+#binaryBeMsb0ToHexDigit([Z)C
+#binaryBeMsb0ToHexDigit([ZI)C
+#intToHexDigit(I)C
+#intToHexDigitMsb0(I)C
+#intArrayToLong([IIJII)J
+#shortArrayToLong([SIJII)J
+#shortArrayToInt([SIIII)I
+#byteArrayToLong([BIJII)J
+#byteArrayToInt([BIIII)I
+#byteArrayToShort([BISII)S
+#hexToLong(Ljava/lang/String;IJII)J
+#hexToInt(Ljava/lang/String;IIII)I
+#hexToShort(Ljava/lang/String;ISII)S
+#hexToByte(Ljava/lang/String;IBII)B
+#binaryToLong([ZIJII)J
+#binaryToInt([ZIIII)I
+#binaryToShort([ZISII)S
+#binaryToByte([ZIBII)B
+#longToIntArray(JI[III)[I
+#longToShortArray(JI[SII)[S
+#intToShortArray(II[SII)[S
+#longToByteArray(JI[BII)[B
+#intToByteArray(II[BII)[B
+#shortToByteArray(SI[BII)[B
+#longToHex(JILjava/lang/String;II)Ljava/lang/String;
+#intToHex(IILjava/lang/String;II)Ljava/lang/String;
+#shortToHex(SILjava/lang/String;II)Ljava/lang/String;
+#byteToHex(BILjava/lang/String;II)Ljava/lang/String;
+#longToBinary(JI[ZII)[Z
+#intToBinary(II[ZII)[Z
+#shortToBinary(SI[ZII)[Z
+#byteToBinary(BI[ZII)[Z
+#uuidToByteArray(Ljava/util/UUID;[BII)[B
+#byteArrayToUuid([BI)Ljava/util/UUID;
@1.14.0
-###org/apache/commons/lang3/Conversion

+###org/apache/commons/lang3/EnumUtils
@0.10.0
+#<init>()V
+#getEnumMap(Ljava/lang/Class;)Ljava/util/Map;
+#getEnumList(Ljava/lang/Class;)Ljava/util/List;
+#isValidEnum(Ljava/lang/Class;Ljava/lang/String;)Z
+#getEnum(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
+#generateBitVector(Ljava/lang/Class;Ljava/lang/Iterable;)J
+#generateBitVectors(Ljava/lang/Class;Ljava/lang/Iterable;)[J
+#generateBitVector(Ljava/lang/Class;[Ljava/lang/Enum;)J
+#generateBitVectors(Ljava/lang/Class;[Ljava/lang/Enum;)[J
+#processBitVector(Ljava/lang/Class;J)Ljava/util/EnumSet;
+#processBitVectors(Ljava/lang/Class;[J)Ljava/util/EnumSet;
@1.14.0
-###org/apache/commons/lang3/EnumUtils

+###org/apache/commons/lang3/event/EventListenerSupport$ProxyInvocationHandler
@0.10.0
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/event/EventListenerSupport$ProxyInvocationHandler

+###org/apache/commons/lang3/event/EventListenerSupport
@0.10.0
+#create(Ljava/lang/Class;)Lorg/apache/commons/lang3/event/EventListenerSupport;
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Ljava/lang/ClassLoader;)V
+#fire()Ljava/lang/Object;
+#addListener(Ljava/lang/Object;)V
+#removeListener(Ljava/lang/Object;)V
+#getListeners()[Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/event/EventListenerSupport

+###org/apache/commons/lang3/event/EventUtils
@0.10.0
+#<init>()V
+#addEventListener(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Object;)V
+#bindEventsToMethod(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/String;)V
@1.14.0
-###org/apache/commons/lang3/event/EventUtils

+###org/apache/commons/lang3/exception/CloneFailedException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/commons/lang3/exception/CloneFailedException

+###org/apache/commons/lang3/exception/ContextedException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/commons/lang3/exception/ExceptionContext;)V
+#addContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedException;
+#setContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedException;
+#getContextValues(Ljava/lang/String;)Ljava/util/List;
+#getFirstContextValue(Ljava/lang/String;)Ljava/lang/Object;
+#getContextEntries()Ljava/util/List;
+#getContextLabels()Ljava/util/Set;
+#getMessage()Ljava/lang/String;
+#getRawMessage()Ljava/lang/String;
+#getFormattedExceptionMessage(Ljava/lang/String;)Ljava/lang/String;
+#setContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ExceptionContext;
+#addContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ExceptionContext;
@1.14.0
-###org/apache/commons/lang3/exception/ContextedException

+###org/apache/commons/lang3/exception/ContextedRuntimeException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/commons/lang3/exception/ExceptionContext;)V
+#addContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedRuntimeException;
+#setContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ContextedRuntimeException;
+#getContextValues(Ljava/lang/String;)Ljava/util/List;
+#getFirstContextValue(Ljava/lang/String;)Ljava/lang/Object;
+#getContextEntries()Ljava/util/List;
+#getContextLabels()Ljava/util/Set;
+#getMessage()Ljava/lang/String;
+#getRawMessage()Ljava/lang/String;
+#getFormattedExceptionMessage(Ljava/lang/String;)Ljava/lang/String;
+#setContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ExceptionContext;
+#addContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ExceptionContext;
@1.14.0
-###org/apache/commons/lang3/exception/ContextedRuntimeException

+###org/apache/commons/lang3/exception/DefaultExceptionContext
@0.10.0
+#<init>()V
+#addContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/DefaultExceptionContext;
+#setContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/DefaultExceptionContext;
+#getContextValues(Ljava/lang/String;)Ljava/util/List;
+#getFirstContextValue(Ljava/lang/String;)Ljava/lang/Object;
+#getContextLabels()Ljava/util/Set;
+#getContextEntries()Ljava/util/List;
+#getFormattedExceptionMessage(Ljava/lang/String;)Ljava/lang/String;
+#setContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ExceptionContext;
+#addContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ExceptionContext;
@1.14.0
-###org/apache/commons/lang3/exception/DefaultExceptionContext

+###org/apache/commons/lang3/exception/ExceptionContext
@0.10.0
+#addContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ExceptionContext;
+#setContextValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/exception/ExceptionContext;
+#getContextValues(Ljava/lang/String;)Ljava/util/List;
+#getFirstContextValue(Ljava/lang/String;)Ljava/lang/Object;
+#getContextLabels()Ljava/util/Set;
+#getContextEntries()Ljava/util/List;
+#getFormattedExceptionMessage(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/exception/ExceptionContext

+###org/apache/commons/lang3/exception/ExceptionUtils
@0.10.0
+#<init>()V
+#getDefaultCauseMethodNames()[Ljava/lang/String;[deprecated]
+#getCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;[deprecated]
+#getCause(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;[deprecated]
+#getRootCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#getThrowableCount(Ljava/lang/Throwable;)I
+#getThrowables(Ljava/lang/Throwable;)[Ljava/lang/Throwable;
+#getThrowableList(Ljava/lang/Throwable;)Ljava/util/List;
+#indexOfThrowable(Ljava/lang/Throwable;Ljava/lang/Class;)I
+#indexOfThrowable(Ljava/lang/Throwable;Ljava/lang/Class;I)I
+#indexOfType(Ljava/lang/Throwable;Ljava/lang/Class;)I
+#indexOfType(Ljava/lang/Throwable;Ljava/lang/Class;I)I
+#printRootCauseStackTrace(Ljava/lang/Throwable;)V
+#printRootCauseStackTrace(Ljava/lang/Throwable;Ljava/io/PrintStream;)V
+#printRootCauseStackTrace(Ljava/lang/Throwable;Ljava/io/PrintWriter;)V
+#getRootCauseStackTrace(Ljava/lang/Throwable;)[Ljava/lang/String;
+#removeCommonFrames(Ljava/util/List;Ljava/util/List;)V
+#getStackTrace(Ljava/lang/Throwable;)Ljava/lang/String;
+#getStackFrames(Ljava/lang/Throwable;)[Ljava/lang/String;
+#getMessage(Ljava/lang/Throwable;)Ljava/lang/String;
+#getRootCauseMessage(Ljava/lang/Throwable;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/exception/ExceptionUtils

+###org/apache/commons/lang3/JavaVersion
@0.10.0
+#values()[Lorg/apache/commons/lang3/JavaVersion;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/lang3/JavaVersion;
+#atLeast(Lorg/apache/commons/lang3/JavaVersion;)Z
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/JavaVersion

+###org/apache/commons/lang3/LocaleUtils
@0.10.0
+#<init>()V
+#toLocale(Ljava/lang/String;)Ljava/util/Locale;
+#localeLookupList(Ljava/util/Locale;)Ljava/util/List;
+#localeLookupList(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;
+#availableLocaleList()Ljava/util/List;
+#availableLocaleSet()Ljava/util/Set;
+#isAvailableLocale(Ljava/util/Locale;)Z
+#languagesByCountry(Ljava/lang/String;)Ljava/util/List;
+#countriesByLanguage(Ljava/lang/String;)Ljava/util/List;
@1.14.0
-###org/apache/commons/lang3/LocaleUtils

+###org/apache/commons/lang3/math/Fraction
@0.10.0
+#getFraction(II)Lorg/apache/commons/lang3/math/Fraction;
+#getFraction(III)Lorg/apache/commons/lang3/math/Fraction;
+#getReducedFraction(II)Lorg/apache/commons/lang3/math/Fraction;
+#getFraction(D)Lorg/apache/commons/lang3/math/Fraction;
+#getFraction(Ljava/lang/String;)Lorg/apache/commons/lang3/math/Fraction;
+#getNumerator()I
+#getDenominator()I
+#getProperNumerator()I
+#getProperWhole()I
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#reduce()Lorg/apache/commons/lang3/math/Fraction;
+#invert()Lorg/apache/commons/lang3/math/Fraction;
+#negate()Lorg/apache/commons/lang3/math/Fraction;
+#abs()Lorg/apache/commons/lang3/math/Fraction;
+#pow(I)Lorg/apache/commons/lang3/math/Fraction;
+#add(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
+#subtract(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
+#multiplyBy(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
+#divideBy(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/commons/lang3/math/Fraction;)I
+#toString()Ljava/lang/String;
+#toProperString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/apache/commons/lang3/math/Fraction

+###org/apache/commons/lang3/math/IEEE754rUtils
@0.10.0
+#<init>()V
+#min([D)D
+#min([F)F
+#min(DDD)D
+#min(DD)D
+#min(FFF)F
+#min(FF)F
+#max([D)D
+#max([F)F
+#max(DDD)D
+#max(DD)D
+#max(FFF)F
+#max(FF)F
@1.14.0
-###org/apache/commons/lang3/math/IEEE754rUtils

+###org/apache/commons/lang3/math/NumberUtils
@0.10.0
+#<init>()V
+#toInt(Ljava/lang/String;)I
+#toInt(Ljava/lang/String;I)I
+#toLong(Ljava/lang/String;)J
+#toLong(Ljava/lang/String;J)J
+#toFloat(Ljava/lang/String;)F
+#toFloat(Ljava/lang/String;F)F
+#toDouble(Ljava/lang/String;)D
+#toDouble(Ljava/lang/String;D)D
+#toByte(Ljava/lang/String;)B
+#toByte(Ljava/lang/String;B)B
+#toShort(Ljava/lang/String;)S
+#toShort(Ljava/lang/String;S)S
+#createNumber(Ljava/lang/String;)Ljava/lang/Number;
+#createFloat(Ljava/lang/String;)Ljava/lang/Float;
+#createDouble(Ljava/lang/String;)Ljava/lang/Double;
+#createInteger(Ljava/lang/String;)Ljava/lang/Integer;
+#createLong(Ljava/lang/String;)Ljava/lang/Long;
+#createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
+#createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#min([J)J
+#min([I)I
+#min([S)S
+#min([B)B
+#min([D)D
+#min([F)F
+#max([J)J
+#max([I)I
+#max([S)S
+#max([B)B
+#max([D)D
+#max([F)F
+#min(JJJ)J
+#min(III)I
+#min(SSS)S
+#min(BBB)B
+#min(DDD)D
+#min(FFF)F
+#max(JJJ)J
+#max(III)I
+#max(SSS)S
+#max(BBB)B
+#max(DDD)D
+#max(FFF)F
+#isDigits(Ljava/lang/String;)Z
+#isNumber(Ljava/lang/String;)Z
@1.14.0
-###org/apache/commons/lang3/math/NumberUtils

+###org/apache/commons/lang3/mutable/Mutable
@0.10.0
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)V
@1.14.0
-###org/apache/commons/lang3/mutable/Mutable

+###org/apache/commons/lang3/mutable/MutableBoolean
@0.10.0
+#<init>()V
+#<init>(Z)V
+#<init>(Ljava/lang/Boolean;)V
+#getValue()Ljava/lang/Boolean;
+#setValue(Z)V
+#setFalse()V
+#setTrue()V
+#setValue(Ljava/lang/Boolean;)V
+#isTrue()Z
+#isFalse()Z
+#booleanValue()Z
+#toBoolean()Ljava/lang/Boolean;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/commons/lang3/mutable/MutableBoolean;)I
+#toString()Ljava/lang/String;
+#setValue(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/apache/commons/lang3/mutable/MutableBoolean

+###org/apache/commons/lang3/mutable/MutableByte
@0.10.0
+#<init>()V
+#<init>(B)V
+#<init>(Ljava/lang/Number;)V
+#<init>(Ljava/lang/String;)V
+#getValue()Ljava/lang/Byte;
+#setValue(B)V
+#setValue(Ljava/lang/Number;)V
+#increment()V
+#decrement()V
+#add(B)V
+#add(Ljava/lang/Number;)V
+#subtract(B)V
+#subtract(Ljava/lang/Number;)V
+#byteValue()B
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#toByte()Ljava/lang/Byte;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/commons/lang3/mutable/MutableByte;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
+#setValue(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/mutable/MutableByte

+###org/apache/commons/lang3/mutable/MutableDouble
@0.10.0
+#<init>()V
+#<init>(D)V
+#<init>(Ljava/lang/Number;)V
+#<init>(Ljava/lang/String;)V
+#getValue()Ljava/lang/Double;
+#setValue(D)V
+#setValue(Ljava/lang/Number;)V
+#isNaN()Z
+#isInfinite()Z
+#increment()V
+#decrement()V
+#add(D)V
+#add(Ljava/lang/Number;)V
+#subtract(D)V
+#subtract(Ljava/lang/Number;)V
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#toDouble()Ljava/lang/Double;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/commons/lang3/mutable/MutableDouble;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
+#setValue(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/mutable/MutableDouble

+###org/apache/commons/lang3/mutable/MutableFloat
@0.10.0
+#<init>()V
+#<init>(F)V
+#<init>(Ljava/lang/Number;)V
+#<init>(Ljava/lang/String;)V
+#getValue()Ljava/lang/Float;
+#setValue(F)V
+#setValue(Ljava/lang/Number;)V
+#isNaN()Z
+#isInfinite()Z
+#increment()V
+#decrement()V
+#add(F)V
+#add(Ljava/lang/Number;)V
+#subtract(F)V
+#subtract(Ljava/lang/Number;)V
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#toFloat()Ljava/lang/Float;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/commons/lang3/mutable/MutableFloat;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
+#setValue(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/mutable/MutableFloat

+###org/apache/commons/lang3/mutable/MutableInt
@0.10.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/Number;)V
+#<init>(Ljava/lang/String;)V
+#getValue()Ljava/lang/Integer;
+#setValue(I)V
+#setValue(Ljava/lang/Number;)V
+#increment()V
+#decrement()V
+#add(I)V
+#add(Ljava/lang/Number;)V
+#subtract(I)V
+#subtract(Ljava/lang/Number;)V
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#toInteger()Ljava/lang/Integer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/commons/lang3/mutable/MutableInt;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
+#setValue(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/mutable/MutableInt

+###org/apache/commons/lang3/mutable/MutableLong
@0.10.0
+#<init>()V
+#<init>(J)V
+#<init>(Ljava/lang/Number;)V
+#<init>(Ljava/lang/String;)V
+#getValue()Ljava/lang/Long;
+#setValue(J)V
+#setValue(Ljava/lang/Number;)V
+#increment()V
+#decrement()V
+#add(J)V
+#add(Ljava/lang/Number;)V
+#subtract(J)V
+#subtract(Ljava/lang/Number;)V
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#toLong()Ljava/lang/Long;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/commons/lang3/mutable/MutableLong;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
+#setValue(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/mutable/MutableLong

+###org/apache/commons/lang3/mutable/MutableObject
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/mutable/MutableObject

+###org/apache/commons/lang3/mutable/MutableShort
@0.10.0
+#<init>()V
+#<init>(S)V
+#<init>(Ljava/lang/Number;)V
+#<init>(Ljava/lang/String;)V
+#getValue()Ljava/lang/Short;
+#setValue(S)V
+#setValue(Ljava/lang/Number;)V
+#increment()V
+#decrement()V
+#add(S)V
+#add(Ljava/lang/Number;)V
+#subtract(S)V
+#subtract(Ljava/lang/Number;)V
+#shortValue()S
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#toShort()Ljava/lang/Short;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/commons/lang3/mutable/MutableShort;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
+#setValue(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/mutable/MutableShort

+###org/apache/commons/lang3/NotImplementedException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V
+#getCode()Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/NotImplementedException

+###org/apache/commons/lang3/ObjectUtils$Null
@0.10.0
@1.14.0
-###org/apache/commons/lang3/ObjectUtils$Null

+###org/apache/commons/lang3/ObjectUtils
@0.10.0
+#<init>()V
+#defaultIfNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#firstNonNull([Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z[deprecated]
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
+#hashCode(Ljava/lang/Object;)I[deprecated]
+#toString()Ljava/lang/String;
+#hashCodeMulti([Ljava/lang/Object;)I[deprecated]
+#identityToString(Ljava/lang/Object;)Ljava/lang/String;
+#identityToString(Ljava/lang/Appendable;Ljava/lang/Object;)V
+#identityToString(Lorg/apache/commons/lang3/text/StrBuilder;Ljava/lang/Object;)V
+#identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
+#identityToString(Ljava/lang/StringBuilder;Ljava/lang/Object;)V
+#toString(Ljava/lang/Object;)Ljava/lang/String;[deprecated]
+#toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#min([Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#max([Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)I
+#compare(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I
+#median([Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#median(Ljava/util/Comparator;[Ljava/lang/Object;)Ljava/lang/Object;
+#mode([Ljava/lang/Object;)Ljava/lang/Object;
+#clone(Ljava/lang/Object;)Ljava/lang/Object;
+#cloneIfPossible(Ljava/lang/Object;)Ljava/lang/Object;
+#CONST(Z)Z
+#CONST(B)B
+#CONST_BYTE(I)B
+#CONST(C)C
+#CONST(S)S
+#CONST_SHORT(I)S
+#CONST(I)I
+#CONST(J)J
+#CONST(F)F
+#CONST(D)D
+#CONST(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/ObjectUtils

+###org/apache/commons/lang3/RandomStringUtils
@0.10.0
+#<init>()V
+#random(I)Ljava/lang/String;
+#randomAscii(I)Ljava/lang/String;
+#randomAlphabetic(I)Ljava/lang/String;
+#randomAlphanumeric(I)Ljava/lang/String;
+#randomNumeric(I)Ljava/lang/String;
+#random(IZZ)Ljava/lang/String;
+#random(IIIZZ)Ljava/lang/String;
+#random(IIIZZ[C)Ljava/lang/String;
+#random(IIIZZ[CLjava/util/Random;)Ljava/lang/String;
+#random(ILjava/lang/String;)Ljava/lang/String;
+#random(I[C)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/RandomStringUtils

+###org/apache/commons/lang3/RandomUtils
@0.10.0
+#<init>()V
+#nextBytes(I)[B
+#nextInt(II)I
+#nextLong(JJ)J
+#nextDouble(DD)D
+#nextFloat(FF)F
@1.14.0
-###org/apache/commons/lang3/RandomUtils

+###org/apache/commons/lang3/Range
@0.10.0
+#is(Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;
+#is(Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;
+#between(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;
+#getMinimum()Ljava/lang/Object;
+#getMaximum()Ljava/lang/Object;
+#getComparator()Ljava/util/Comparator;
+#isNaturalOrdering()Z
+#contains(Ljava/lang/Object;)Z
+#isAfter(Ljava/lang/Object;)Z
+#isStartedBy(Ljava/lang/Object;)Z
+#isEndedBy(Ljava/lang/Object;)Z
+#isBefore(Ljava/lang/Object;)Z
+#elementCompareTo(Ljava/lang/Object;)I
+#containsRange(Lorg/apache/commons/lang3/Range;)Z
+#isAfterRange(Lorg/apache/commons/lang3/Range;)Z
+#isOverlappedBy(Lorg/apache/commons/lang3/Range;)Z
+#isBeforeRange(Lorg/apache/commons/lang3/Range;)Z
+#intersectionWith(Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toString(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/Range

+###org/apache/commons/lang3/reflect/ConstructorUtils
@0.10.0
+#<init>()V
+#invokeConstructor(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeConstructor(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
+#invokeExactConstructor(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeExactConstructor(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
+#getAccessibleConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
+#getAccessibleConstructor(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;
+#getMatchingAccessibleConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
@1.14.0
-###org/apache/commons/lang3/reflect/ConstructorUtils

+###org/apache/commons/lang3/reflect/FieldUtils
@0.10.0
+#<init>()V
+#getField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
+#getField(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/reflect/Field;
+#getDeclaredField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
+#getDeclaredField(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/reflect/Field;
+#getAllFields(Ljava/lang/Class;)[Ljava/lang/reflect/Field;
+#getAllFieldsList(Ljava/lang/Class;)Ljava/util/List;
+#readStaticField(Ljava/lang/reflect/Field;)Ljava/lang/Object;
+#readStaticField(Ljava/lang/reflect/Field;Z)Ljava/lang/Object;
+#readStaticField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#readStaticField(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Object;
+#readDeclaredStaticField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#readDeclaredStaticField(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Object;
+#readField(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
+#readField(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)Ljava/lang/Object;
+#readField(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#readField(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;
+#readDeclaredField(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#readDeclaredField(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;
+#writeStaticField(Ljava/lang/reflect/Field;Ljava/lang/Object;)V
+#writeStaticField(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)V
+#writeStaticField(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V
+#writeStaticField(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Z)V
+#writeDeclaredStaticField(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V
+#writeDeclaredStaticField(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Z)V
+#writeField(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
+#writeField(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;Z)V
+#removeFinalModifier(Ljava/lang/reflect/Field;)V
+#removeFinalModifier(Ljava/lang/reflect/Field;Z)V
+#writeField(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
+#writeField(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Z)V
+#writeDeclaredField(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
+#writeDeclaredField(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Z)V
@1.14.0
-###org/apache/commons/lang3/reflect/FieldUtils

+###org/apache/commons/lang3/reflect/InheritanceUtils
@0.10.0
+#<init>()V
+#distance(Ljava/lang/Class;Ljava/lang/Class;)I
@1.14.0
-###org/apache/commons/lang3/reflect/InheritanceUtils

+###org/apache/commons/lang3/reflect/MethodUtils
@0.10.0
+#<init>()V
+#invokeMethod(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeMethod(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
+#invokeExactMethod(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeExactMethod(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
+#invokeExactStaticMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
+#invokeStaticMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeStaticMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
+#invokeExactStaticMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#getAccessibleMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#getAccessibleMethod(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
+#getMatchingAccessibleMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#getOverrideHierarchy(Ljava/lang/reflect/Method;Lorg/apache/commons/lang3/ClassUtils$Interfaces;)Ljava/util/Set;
@1.14.0
-###org/apache/commons/lang3/reflect/MethodUtils

+###org/apache/commons/lang3/reflect/Typed
@0.10.0
+#getType()Ljava/lang/reflect/Type;
@1.14.0
-###org/apache/commons/lang3/reflect/Typed

+###org/apache/commons/lang3/reflect/TypeLiteral
@0.10.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getType()Ljava/lang/reflect/Type;
@1.14.0
-###org/apache/commons/lang3/reflect/TypeLiteral

+###org/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder
@0.10.0
+#withUpperBounds([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;
+#withLowerBounds([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;
+#build()Ljava/lang/reflect/WildcardType;
+#build()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder

+###org/apache/commons/lang3/reflect/TypeUtils
@0.10.0
+#<init>()V
+#isAssignable(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
+#getTypeArguments(Ljava/lang/reflect/ParameterizedType;)Ljava/util/Map;
+#getTypeArguments(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/util/Map;
+#determineTypeArguments(Ljava/lang/Class;Ljava/lang/reflect/ParameterizedType;)Ljava/util/Map;
+#isInstance(Ljava/lang/Object;Ljava/lang/reflect/Type;)Z
+#normalizeUpperBounds([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;
+#getImplicitBounds(Ljava/lang/reflect/TypeVariable;)[Ljava/lang/reflect/Type;
+#getImplicitUpperBounds(Ljava/lang/reflect/WildcardType;)[Ljava/lang/reflect/Type;
+#getImplicitLowerBounds(Ljava/lang/reflect/WildcardType;)[Ljava/lang/reflect/Type;
+#typesSatisfyVariables(Ljava/util/Map;)Z
+#getRawType(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Ljava/lang/Class;
+#isArrayType(Ljava/lang/reflect/Type;)Z
+#getArrayComponentType(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
+#unrollVariables(Ljava/util/Map;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
+#containsTypeVariables(Ljava/lang/reflect/Type;)Z
+#parameterize(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;
+#parameterize(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/reflect/ParameterizedType;
+#parameterizeWithOwner(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;
+#parameterizeWithOwner(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/reflect/ParameterizedType;
+#wildcardType()Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;
+#genericArrayType(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;
+#equals(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
+#toString(Ljava/lang/reflect/Type;)Ljava/lang/String;
+#toLongString(Ljava/lang/reflect/TypeVariable;)Ljava/lang/String;
+#wrap(Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/Typed;
+#wrap(Ljava/lang/Class;)Lorg/apache/commons/lang3/reflect/Typed;
@1.14.0
-###org/apache/commons/lang3/reflect/TypeUtils

+###org/apache/commons/lang3/SerializationException
@0.10.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/apache/commons/lang3/SerializationException

+###org/apache/commons/lang3/SerializationUtils
@0.10.0
+#<init>()V
+#clone(Ljava/io/Serializable;)Ljava/io/Serializable;
+#roundtrip(Ljava/io/Serializable;)Ljava/io/Serializable;
+#serialize(Ljava/io/Serializable;Ljava/io/OutputStream;)V
+#serialize(Ljava/io/Serializable;)[B
+#deserialize(Ljava/io/InputStream;)Ljava/lang/Object;
+#deserialize([B)Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/SerializationUtils

+###org/apache/commons/lang3/StringEscapeUtils
@0.10.0
+#<init>()V
+#escapeJava(Ljava/lang/String;)Ljava/lang/String;
+#escapeEcmaScript(Ljava/lang/String;)Ljava/lang/String;
+#escapeJson(Ljava/lang/String;)Ljava/lang/String;
+#unescapeJava(Ljava/lang/String;)Ljava/lang/String;
+#unescapeEcmaScript(Ljava/lang/String;)Ljava/lang/String;
+#unescapeJson(Ljava/lang/String;)Ljava/lang/String;
+#escapeHtml4(Ljava/lang/String;)Ljava/lang/String;
+#escapeHtml3(Ljava/lang/String;)Ljava/lang/String;
+#unescapeHtml4(Ljava/lang/String;)Ljava/lang/String;
+#unescapeHtml3(Ljava/lang/String;)Ljava/lang/String;
+#escapeXml(Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#escapeXml10(Ljava/lang/String;)Ljava/lang/String;
+#escapeXml11(Ljava/lang/String;)Ljava/lang/String;
+#unescapeXml(Ljava/lang/String;)Ljava/lang/String;
+#escapeCsv(Ljava/lang/String;)Ljava/lang/String;
+#unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/StringEscapeUtils

+###org/apache/commons/lang3/StringUtils
@0.10.0
+#<init>()V
+#isEmpty(Ljava/lang/CharSequence;)Z
+#isNotEmpty(Ljava/lang/CharSequence;)Z
+#isAnyEmpty([Ljava/lang/CharSequence;)Z
+#isNoneEmpty([Ljava/lang/CharSequence;)Z
+#isBlank(Ljava/lang/CharSequence;)Z
+#isNotBlank(Ljava/lang/CharSequence;)Z
+#isAnyBlank([Ljava/lang/CharSequence;)Z
+#isNoneBlank([Ljava/lang/CharSequence;)Z
+#trim(Ljava/lang/String;)Ljava/lang/String;
+#trimToNull(Ljava/lang/String;)Ljava/lang/String;
+#trimToEmpty(Ljava/lang/String;)Ljava/lang/String;
+#strip(Ljava/lang/String;)Ljava/lang/String;
+#stripToNull(Ljava/lang/String;)Ljava/lang/String;
+#stripToEmpty(Ljava/lang/String;)Ljava/lang/String;
+#strip(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#stripStart(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#stripEnd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#stripAll([Ljava/lang/String;)[Ljava/lang/String;
+#stripAll([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#stripAccents(Ljava/lang/String;)Ljava/lang/String;
+#equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
+#equalsIgnoreCase(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
+#indexOf(Ljava/lang/CharSequence;I)I
+#indexOf(Ljava/lang/CharSequence;II)I
+#indexOf(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I
+#indexOf(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I
+#ordinalIndexOf(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I
+#indexOfIgnoreCase(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I
+#indexOfIgnoreCase(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I
+#lastIndexOf(Ljava/lang/CharSequence;I)I
+#lastIndexOf(Ljava/lang/CharSequence;II)I
+#lastIndexOf(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I
+#lastOrdinalIndexOf(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I
+#lastIndexOf(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I
+#lastIndexOfIgnoreCase(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I
+#lastIndexOfIgnoreCase(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I
+#contains(Ljava/lang/CharSequence;I)Z
+#contains(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
+#containsIgnoreCase(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
+#containsWhitespace(Ljava/lang/CharSequence;)Z
+#indexOfAny(Ljava/lang/CharSequence;[C)I
+#indexOfAny(Ljava/lang/CharSequence;Ljava/lang/String;)I
+#containsAny(Ljava/lang/CharSequence;[C)Z
+#containsAny(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
+#indexOfAnyBut(Ljava/lang/CharSequence;[C)I
+#indexOfAnyBut(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I
+#containsOnly(Ljava/lang/CharSequence;[C)Z
+#containsOnly(Ljava/lang/CharSequence;Ljava/lang/String;)Z
+#containsNone(Ljava/lang/CharSequence;[C)Z
+#containsNone(Ljava/lang/CharSequence;Ljava/lang/String;)Z
+#indexOfAny(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)I
+#lastIndexOfAny(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)I
+#substring(Ljava/lang/String;I)Ljava/lang/String;
+#substring(Ljava/lang/String;II)Ljava/lang/String;
+#left(Ljava/lang/String;I)Ljava/lang/String;
+#right(Ljava/lang/String;I)Ljava/lang/String;
+#mid(Ljava/lang/String;II)Ljava/lang/String;
+#substringBefore(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#substringAfter(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#substringBeforeLast(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#substringAfterLast(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#substringBetween(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#substringBetween(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#substringsBetween(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#split(Ljava/lang/String;)[Ljava/lang/String;
+#split(Ljava/lang/String;C)[Ljava/lang/String;
+#split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#split(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;
+#splitByWholeSeparator(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#splitByWholeSeparator(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;
+#splitByWholeSeparatorPreserveAllTokens(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#splitByWholeSeparatorPreserveAllTokens(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;
+#splitPreserveAllTokens(Ljava/lang/String;)[Ljava/lang/String;
+#splitPreserveAllTokens(Ljava/lang/String;C)[Ljava/lang/String;
+#splitPreserveAllTokens(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#splitPreserveAllTokens(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;
+#splitByCharacterType(Ljava/lang/String;)[Ljava/lang/String;
+#splitByCharacterTypeCamelCase(Ljava/lang/String;)[Ljava/lang/String;
+#join([Ljava/lang/Object;)Ljava/lang/String;
+#join([Ljava/lang/Object;C)Ljava/lang/String;
+#join([JC)Ljava/lang/String;
+#join([IC)Ljava/lang/String;
+#join([SC)Ljava/lang/String;
+#join([BC)Ljava/lang/String;
+#join([CC)Ljava/lang/String;
+#join([FC)Ljava/lang/String;
+#join([DC)Ljava/lang/String;
+#join([Ljava/lang/Object;CII)Ljava/lang/String;
+#join([JCII)Ljava/lang/String;
+#join([ICII)Ljava/lang/String;
+#join([BCII)Ljava/lang/String;
+#join([SCII)Ljava/lang/String;
+#join([CCII)Ljava/lang/String;
+#join([DCII)Ljava/lang/String;
+#join([FCII)Ljava/lang/String;
+#join([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#join([Ljava/lang/Object;Ljava/lang/String;II)Ljava/lang/String;
+#join(Ljava/util/Iterator;C)Ljava/lang/String;
+#join(Ljava/util/Iterator;Ljava/lang/String;)Ljava/lang/String;
+#join(Ljava/lang/Iterable;C)Ljava/lang/String;
+#join(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/String;
+#deleteWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#removeStart(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#removeStartIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#removeEnd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#removeEndIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#remove(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#remove(Ljava/lang/String;C)Ljava/lang/String;
+#replaceOnce(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replacePattern(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#removePattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
+#replaceEach(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
+#replaceEachRepeatedly(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
+#replaceChars(Ljava/lang/String;CC)Ljava/lang/String;
+#replaceChars(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#overlay(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+#chomp(Ljava/lang/String;)Ljava/lang/String;
+#chomp(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#chop(Ljava/lang/String;)Ljava/lang/String;
+#repeat(Ljava/lang/String;I)Ljava/lang/String;
+#repeat(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
+#repeat(CI)Ljava/lang/String;
+#rightPad(Ljava/lang/String;I)Ljava/lang/String;
+#rightPad(Ljava/lang/String;IC)Ljava/lang/String;
+#rightPad(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
+#leftPad(Ljava/lang/String;I)Ljava/lang/String;
+#leftPad(Ljava/lang/String;IC)Ljava/lang/String;
+#leftPad(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
+#length(Ljava/lang/CharSequence;)I
+#center(Ljava/lang/String;I)Ljava/lang/String;
+#center(Ljava/lang/String;IC)Ljava/lang/String;
+#center(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
+#upperCase(Ljava/lang/String;)Ljava/lang/String;
+#upperCase(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#lowerCase(Ljava/lang/String;)Ljava/lang/String;
+#lowerCase(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#capitalize(Ljava/lang/String;)Ljava/lang/String;
+#uncapitalize(Ljava/lang/String;)Ljava/lang/String;
+#swapCase(Ljava/lang/String;)Ljava/lang/String;
+#countMatches(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I
+#isAlpha(Ljava/lang/CharSequence;)Z
+#isAlphaSpace(Ljava/lang/CharSequence;)Z
+#isAlphanumeric(Ljava/lang/CharSequence;)Z
+#isAlphanumericSpace(Ljava/lang/CharSequence;)Z
+#isAsciiPrintable(Ljava/lang/CharSequence;)Z
+#isNumeric(Ljava/lang/CharSequence;)Z
+#isNumericSpace(Ljava/lang/CharSequence;)Z
+#isWhitespace(Ljava/lang/CharSequence;)Z
+#isAllLowerCase(Ljava/lang/CharSequence;)Z
+#isAllUpperCase(Ljava/lang/CharSequence;)Z
+#defaultString(Ljava/lang/String;)Ljava/lang/String;
+#defaultString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#defaultIfBlank(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
+#defaultIfEmpty(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
+#reverse(Ljava/lang/String;)Ljava/lang/String;
+#reverseDelimited(Ljava/lang/String;C)Ljava/lang/String;
+#abbreviate(Ljava/lang/String;I)Ljava/lang/String;
+#abbreviate(Ljava/lang/String;II)Ljava/lang/String;
+#abbreviateMiddle(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
+#difference(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#indexOfDifference(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I
+#indexOfDifference([Ljava/lang/CharSequence;)I
+#getCommonPrefix([Ljava/lang/String;)Ljava/lang/String;
+#getLevenshteinDistance(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I
+#getLevenshteinDistance(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I
+#getJaroWinklerDistance(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)D
+#startsWith(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
+#startsWithIgnoreCase(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
+#startsWithAny(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z
+#endsWith(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
+#endsWithIgnoreCase(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
+#normalizeSpace(Ljava/lang/String;)Ljava/lang/String;
+#endsWithAny(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z
+#appendIfMissing(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;
+#appendIfMissingIgnoreCase(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;
+#prependIfMissing(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;
+#prependIfMissingIgnoreCase(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;
+#toString([BLjava/lang/String;)Ljava/lang/String;[deprecated]
+#toEncodedString([BLjava/nio/charset/Charset;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/StringUtils

+###org/apache/commons/lang3/SystemUtils
@0.10.0
+#getJavaHome()Ljava/io/File;
+#getJavaIoTmpDir()Ljava/io/File;
+#getUserDir()Ljava/io/File;
+#getUserHome()Ljava/io/File;
+#isJavaAwtHeadless()Z
+#isJavaVersionAtLeast(Lorg/apache/commons/lang3/JavaVersion;)Z
+#<init>()V
@1.14.0
-###org/apache/commons/lang3/SystemUtils

+###org/apache/commons/lang3/text/CompositeFormat
@0.10.0
+#<init>(Ljava/text/Format;Ljava/text/Format;)V
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parseObject(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
+#getParser()Ljava/text/Format;
+#getFormatter()Ljava/text/Format;
+#reformat(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/text/CompositeFormat

+###org/apache/commons/lang3/text/ExtendedMessageFormat
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Locale;)V
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V
+#toPattern()Ljava/lang/String;
+#applyPattern(Ljava/lang/String;)V
+#setFormat(ILjava/text/Format;)V
+#setFormatByArgumentIndex(ILjava/text/Format;)V
+#setFormats([Ljava/text/Format;)V
+#setFormatsByArgumentIndex([Ljava/text/Format;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/apache/commons/lang3/text/ExtendedMessageFormat

+###org/apache/commons/lang3/text/FormatFactory
@0.10.0
+#getFormat(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/Format;
@1.14.0
-###org/apache/commons/lang3/text/FormatFactory

+###org/apache/commons/lang3/text/FormattableUtils
@0.10.0
+#<init>()V
+#toString(Ljava/util/Formattable;)Ljava/lang/String;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;III)Ljava/util/Formatter;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;IIIC)Ljava/util/Formatter;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;IIILjava/lang/CharSequence;)Ljava/util/Formatter;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;IIICLjava/lang/CharSequence;)Ljava/util/Formatter;
@1.14.0
-###org/apache/commons/lang3/text/FormattableUtils

+###org/apache/commons/lang3/text/StrBuilder
@0.10.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;)V
+#getNewLineText()Ljava/lang/String;
+#setNewLineText(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#getNullText()Ljava/lang/String;
+#setNullText(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#length()I
+#setLength(I)Lorg/apache/commons/lang3/text/StrBuilder;
+#capacity()I
+#ensureCapacity(I)Lorg/apache/commons/lang3/text/StrBuilder;
+#minimizeCapacity()Lorg/apache/commons/lang3/text/StrBuilder;
+#size()I
+#isEmpty()Z
+#clear()Lorg/apache/commons/lang3/text/StrBuilder;
+#charAt(I)C
+#setCharAt(IC)Lorg/apache/commons/lang3/text/StrBuilder;
+#deleteCharAt(I)Lorg/apache/commons/lang3/text/StrBuilder;
+#toCharArray()[C
+#toCharArray(II)[C
+#getChars([C)[C
+#getChars(II[CI)V
+#appendNewLine()Lorg/apache/commons/lang3/text/StrBuilder;
+#appendNull()Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Ljava/lang/CharSequence;)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Ljava/lang/CharSequence;II)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Ljava/lang/String;II)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Ljava/lang/StringBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Ljava/lang/StringBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Ljava/lang/StringBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Ljava/lang/StringBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Lorg/apache/commons/lang3/text/StrBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Lorg/apache/commons/lang3/text/StrBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;
+#append([C)Lorg/apache/commons/lang3/text/StrBuilder;
+#append([CII)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(Z)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(C)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(I)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(J)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(F)Lorg/apache/commons/lang3/text/StrBuilder;
+#append(D)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Ljava/lang/String;II)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Ljava/lang/StringBuffer;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Ljava/lang/StringBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Ljava/lang/StringBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Ljava/lang/StringBuffer;II)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Lorg/apache/commons/lang3/text/StrBuilder;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Lorg/apache/commons/lang3/text/StrBuilder;II)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln([C)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln([CII)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(Z)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(C)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(I)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(J)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(F)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendln(D)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendAll([Ljava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendAll(Ljava/lang/Iterable;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendAll(Ljava/util/Iterator;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendWithSeparators([Ljava/lang/Object;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendWithSeparators(Ljava/lang/Iterable;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendWithSeparators(Ljava/util/Iterator;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendSeparator(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendSeparator(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendSeparator(C)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendSeparator(CC)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendSeparator(Ljava/lang/String;I)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendSeparator(CI)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendPadding(IC)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendFixedWidthPadLeft(Ljava/lang/Object;IC)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendFixedWidthPadLeft(IIC)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendFixedWidthPadRight(Ljava/lang/Object;IC)Lorg/apache/commons/lang3/text/StrBuilder;
+#appendFixedWidthPadRight(IIC)Lorg/apache/commons/lang3/text/StrBuilder;
+#insert(ILjava/lang/Object;)Lorg/apache/commons/lang3/text/StrBuilder;
+#insert(ILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#insert(I[C)Lorg/apache/commons/lang3/text/StrBuilder;
+#insert(I[CII)Lorg/apache/commons/lang3/text/StrBuilder;
+#insert(IZ)Lorg/apache/commons/lang3/text/StrBuilder;
+#insert(IC)Lorg/apache/commons/lang3/text/StrBuilder;
+#insert(II)Lorg/apache/commons/lang3/text/StrBuilder;
+#insert(IJ)Lorg/apache/commons/lang3/text/StrBuilder;
+#insert(IF)Lorg/apache/commons/lang3/text/StrBuilder;
+#insert(ID)Lorg/apache/commons/lang3/text/StrBuilder;
+#delete(II)Lorg/apache/commons/lang3/text/StrBuilder;
+#deleteAll(C)Lorg/apache/commons/lang3/text/StrBuilder;
+#deleteFirst(C)Lorg/apache/commons/lang3/text/StrBuilder;
+#deleteAll(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#deleteFirst(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#deleteAll(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrBuilder;
+#deleteFirst(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrBuilder;
+#replace(IILjava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#replaceAll(CC)Lorg/apache/commons/lang3/text/StrBuilder;
+#replaceFirst(CC)Lorg/apache/commons/lang3/text/StrBuilder;
+#replaceAll(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#replaceFirst(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#replaceAll(Lorg/apache/commons/lang3/text/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#replaceFirst(Lorg/apache/commons/lang3/text/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrBuilder;
+#replace(Lorg/apache/commons/lang3/text/StrMatcher;Ljava/lang/String;III)Lorg/apache/commons/lang3/text/StrBuilder;
+#reverse()Lorg/apache/commons/lang3/text/StrBuilder;
+#trim()Lorg/apache/commons/lang3/text/StrBuilder;
+#startsWith(Ljava/lang/String;)Z
+#endsWith(Ljava/lang/String;)Z
+#subSequence(II)Ljava/lang/CharSequence;
+#substring(I)Ljava/lang/String;
+#substring(II)Ljava/lang/String;
+#leftString(I)Ljava/lang/String;
+#rightString(I)Ljava/lang/String;
+#midString(II)Ljava/lang/String;
+#contains(C)Z
+#contains(Ljava/lang/String;)Z
+#contains(Lorg/apache/commons/lang3/text/StrMatcher;)Z
+#indexOf(C)I
+#indexOf(CI)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Ljava/lang/String;I)I
+#indexOf(Lorg/apache/commons/lang3/text/StrMatcher;)I
+#indexOf(Lorg/apache/commons/lang3/text/StrMatcher;I)I
+#lastIndexOf(C)I
+#lastIndexOf(CI)I
+#lastIndexOf(Ljava/lang/String;)I
+#lastIndexOf(Ljava/lang/String;I)I
+#lastIndexOf(Lorg/apache/commons/lang3/text/StrMatcher;)I
+#lastIndexOf(Lorg/apache/commons/lang3/text/StrMatcher;I)I
+#asTokenizer()Lorg/apache/commons/lang3/text/StrTokenizer;
+#asReader()Ljava/io/Reader;
+#asWriter()Ljava/io/Writer;
+#equalsIgnoreCase(Lorg/apache/commons/lang3/text/StrBuilder;)Z
+#equals(Lorg/apache/commons/lang3/text/StrBuilder;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toStringBuffer()Ljava/lang/StringBuffer;
+#toStringBuilder()Ljava/lang/StringBuilder;
+#build()Ljava/lang/String;
+#append(C)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
+#build()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/text/StrBuilder

+###org/apache/commons/lang3/text/StrLookup
@0.10.0
+#noneLookup()Lorg/apache/commons/lang3/text/StrLookup;
+#systemPropertiesLookup()Lorg/apache/commons/lang3/text/StrLookup;
+#mapLookup(Ljava/util/Map;)Lorg/apache/commons/lang3/text/StrLookup;
+#lookup(Ljava/lang/String;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/text/StrLookup

+###org/apache/commons/lang3/text/StrMatcher
@0.10.0
+#commaMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#tabMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#spaceMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#splitMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#trimMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#singleQuoteMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#doubleQuoteMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#quoteMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#noneMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#charMatcher(C)Lorg/apache/commons/lang3/text/StrMatcher;
+#charSetMatcher([C)Lorg/apache/commons/lang3/text/StrMatcher;
+#charSetMatcher(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrMatcher;
+#stringMatcher(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrMatcher;
+#isMatch([CIII)I
+#isMatch([CI)I
@1.14.0
-###org/apache/commons/lang3/text/StrMatcher

+###org/apache/commons/lang3/text/StrSubstitutor
@0.10.0
+#replace(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/String;
+#replace(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/Object;Ljava/util/Properties;)Ljava/lang/String;
+#replaceSystemProperties(Ljava/lang/Object;)Ljava/lang/String;
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;C)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V
+#<init>(Lorg/apache/commons/lang3/text/StrLookup;)V
+#<init>(Lorg/apache/commons/lang3/text/StrLookup;Ljava/lang/String;Ljava/lang/String;C)V
+#<init>(Lorg/apache/commons/lang3/text/StrLookup;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V
+#<init>(Lorg/apache/commons/lang3/text/StrLookup;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;C)V
+#<init>(Lorg/apache/commons/lang3/text/StrLookup;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;CLorg/apache/commons/lang3/text/StrMatcher;)V
+#replace(Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;II)Ljava/lang/String;
+#replace([C)Ljava/lang/String;
+#replace([CII)Ljava/lang/String;
+#replace(Ljava/lang/StringBuffer;)Ljava/lang/String;
+#replace(Ljava/lang/StringBuffer;II)Ljava/lang/String;
+#replace(Ljava/lang/CharSequence;)Ljava/lang/String;
+#replace(Ljava/lang/CharSequence;II)Ljava/lang/String;
+#replace(Lorg/apache/commons/lang3/text/StrBuilder;)Ljava/lang/String;
+#replace(Lorg/apache/commons/lang3/text/StrBuilder;II)Ljava/lang/String;
+#replace(Ljava/lang/Object;)Ljava/lang/String;
+#replaceIn(Ljava/lang/StringBuffer;)Z
+#replaceIn(Ljava/lang/StringBuffer;II)Z
+#replaceIn(Ljava/lang/StringBuilder;)Z
+#replaceIn(Ljava/lang/StringBuilder;II)Z
+#replaceIn(Lorg/apache/commons/lang3/text/StrBuilder;)Z
+#replaceIn(Lorg/apache/commons/lang3/text/StrBuilder;II)Z
+#getEscapeChar()C
+#setEscapeChar(C)V
+#getVariablePrefixMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#setVariablePrefixMatcher(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;
+#setVariablePrefix(C)Lorg/apache/commons/lang3/text/StrSubstitutor;
+#setVariablePrefix(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrSubstitutor;
+#getVariableSuffixMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#setVariableSuffixMatcher(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;
+#setVariableSuffix(C)Lorg/apache/commons/lang3/text/StrSubstitutor;
+#setVariableSuffix(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrSubstitutor;
+#getValueDelimiterMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#setValueDelimiterMatcher(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrSubstitutor;
+#setValueDelimiter(C)Lorg/apache/commons/lang3/text/StrSubstitutor;
+#setValueDelimiter(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrSubstitutor;
+#getVariableResolver()Lorg/apache/commons/lang3/text/StrLookup;
+#setVariableResolver(Lorg/apache/commons/lang3/text/StrLookup;)V
+#isEnableSubstitutionInVariables()Z
+#setEnableSubstitutionInVariables(Z)V
@1.14.0
-###org/apache/commons/lang3/text/StrSubstitutor

+###org/apache/commons/lang3/text/StrTokenizer
@0.10.0
+#getCSVInstance()Lorg/apache/commons/lang3/text/StrTokenizer;
+#getCSVInstance(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;
+#getCSVInstance([C)Lorg/apache/commons/lang3/text/StrTokenizer;
+#getTSVInstance()Lorg/apache/commons/lang3/text/StrTokenizer;
+#getTSVInstance(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;
+#getTSVInstance([C)Lorg/apache/commons/lang3/text/StrTokenizer;
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;C)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrMatcher;)V
+#<init>(Ljava/lang/String;CC)V
+#<init>(Ljava/lang/String;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;)V
+#<init>([C)V
+#<init>([CC)V
+#<init>([CLjava/lang/String;)V
+#<init>([CLorg/apache/commons/lang3/text/StrMatcher;)V
+#<init>([CCC)V
+#<init>([CLorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;)V
+#size()I
+#nextToken()Ljava/lang/String;
+#previousToken()Ljava/lang/String;
+#getTokenArray()[Ljava/lang/String;
+#getTokenList()Ljava/util/List;
+#reset()Lorg/apache/commons/lang3/text/StrTokenizer;
+#reset(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;
+#reset([C)Lorg/apache/commons/lang3/text/StrTokenizer;
+#hasNext()Z
+#next()Ljava/lang/String;
+#nextIndex()I
+#hasPrevious()Z
+#previous()Ljava/lang/String;
+#previousIndex()I
+#remove()V
+#set(Ljava/lang/String;)V
+#add(Ljava/lang/String;)V
+#getDelimiterMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#setDelimiterMatcher(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;
+#setDelimiterChar(C)Lorg/apache/commons/lang3/text/StrTokenizer;
+#setDelimiterString(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrTokenizer;
+#getQuoteMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#setQuoteMatcher(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;
+#setQuoteChar(C)Lorg/apache/commons/lang3/text/StrTokenizer;
+#getIgnoredMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#setIgnoredMatcher(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;
+#setIgnoredChar(C)Lorg/apache/commons/lang3/text/StrTokenizer;
+#getTrimmerMatcher()Lorg/apache/commons/lang3/text/StrMatcher;
+#setTrimmerMatcher(Lorg/apache/commons/lang3/text/StrMatcher;)Lorg/apache/commons/lang3/text/StrTokenizer;
+#isEmptyTokenAsNull()Z
+#setEmptyTokenAsNull(Z)Lorg/apache/commons/lang3/text/StrTokenizer;
+#isIgnoreEmptyTokens()Z
+#setIgnoreEmptyTokens(Z)Lorg/apache/commons/lang3/text/StrTokenizer;
+#getContent()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#add(Ljava/lang/Object;)V
+#set(Ljava/lang/Object;)V
+#previous()Ljava/lang/Object;
+#next()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/text/StrTokenizer

+###org/apache/commons/lang3/text/translate/AggregateTranslator
@0.10.0
+#<init>([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.14.0
-###org/apache/commons/lang3/text/translate/AggregateTranslator

+###org/apache/commons/lang3/text/translate/CharSequenceTranslator
@0.10.0
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
+#translate(Ljava/lang/CharSequence;)Ljava/lang/String;
+#translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V
+#with([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;
+#hex(I)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/text/translate/CharSequenceTranslator

+###org/apache/commons/lang3/text/translate/CodePointTranslator
@0.10.0
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
+#translate(ILjava/io/Writer;)Z
@1.14.0
-###org/apache/commons/lang3/text/translate/CodePointTranslator

+###org/apache/commons/lang3/text/translate/EntityArrays
@0.10.0
+#<init>()V
+#ISO8859_1_ESCAPE()[[Ljava/lang/String;
+#ISO8859_1_UNESCAPE()[[Ljava/lang/String;
+#HTML40_EXTENDED_ESCAPE()[[Ljava/lang/String;
+#HTML40_EXTENDED_UNESCAPE()[[Ljava/lang/String;
+#BASIC_ESCAPE()[[Ljava/lang/String;
+#BASIC_UNESCAPE()[[Ljava/lang/String;
+#APOS_ESCAPE()[[Ljava/lang/String;
+#APOS_UNESCAPE()[[Ljava/lang/String;
+#JAVA_CTRL_CHARS_ESCAPE()[[Ljava/lang/String;
+#JAVA_CTRL_CHARS_UNESCAPE()[[Ljava/lang/String;
+#invert([[Ljava/lang/String;)[[Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/text/translate/EntityArrays

+###org/apache/commons/lang3/text/translate/JavaUnicodeEscaper
@0.10.0
+#above(I)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;
+#below(I)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;
+#between(II)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;
+#outsideOf(II)Lorg/apache/commons/lang3/text/translate/JavaUnicodeEscaper;
+#<init>(IIZ)V
@1.14.0
-###org/apache/commons/lang3/text/translate/JavaUnicodeEscaper

+###org/apache/commons/lang3/text/translate/LookupTranslator
@0.10.0
+#<init>([[Ljava/lang/CharSequence;)V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.14.0
-###org/apache/commons/lang3/text/translate/LookupTranslator

+###org/apache/commons/lang3/text/translate/NumericEntityEscaper
@0.10.0
+#<init>()V
+#below(I)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;
+#above(I)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;
+#between(II)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;
+#outsideOf(II)Lorg/apache/commons/lang3/text/translate/NumericEntityEscaper;
+#translate(ILjava/io/Writer;)Z
@1.14.0
-###org/apache/commons/lang3/text/translate/NumericEntityEscaper

+###org/apache/commons/lang3/text/translate/NumericEntityUnescaper$OPTION
@0.10.0
+#values()[Lorg/apache/commons/lang3/text/translate/NumericEntityUnescaper$OPTION;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/lang3/text/translate/NumericEntityUnescaper$OPTION;
@1.14.0
-###org/apache/commons/lang3/text/translate/NumericEntityUnescaper$OPTION

+###org/apache/commons/lang3/text/translate/NumericEntityUnescaper
@0.10.0
+#<init>([Lorg/apache/commons/lang3/text/translate/NumericEntityUnescaper$OPTION;)V
+#isSet(Lorg/apache/commons/lang3/text/translate/NumericEntityUnescaper$OPTION;)Z
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.14.0
-###org/apache/commons/lang3/text/translate/NumericEntityUnescaper

+###org/apache/commons/lang3/text/translate/OctalUnescaper
@0.10.0
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.14.0
-###org/apache/commons/lang3/text/translate/OctalUnescaper

+###org/apache/commons/lang3/text/translate/UnicodeEscaper
@0.10.0
+#<init>()V
+#below(I)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;
+#above(I)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;
+#outsideOf(II)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;
+#between(II)Lorg/apache/commons/lang3/text/translate/UnicodeEscaper;
+#translate(ILjava/io/Writer;)Z
@1.14.0
-###org/apache/commons/lang3/text/translate/UnicodeEscaper

+###org/apache/commons/lang3/text/translate/UnicodeUnescaper
@0.10.0
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.14.0
-###org/apache/commons/lang3/text/translate/UnicodeUnescaper

+###org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover
@0.10.0
+#<init>()V
+#translate(ILjava/io/Writer;)Z
@1.14.0
-###org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover

+###org/apache/commons/lang3/text/WordUtils
@0.10.0
+#<init>()V
+#wrap(Ljava/lang/String;I)Ljava/lang/String;
+#wrap(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;
+#capitalize(Ljava/lang/String;)Ljava/lang/String;
+#capitalize(Ljava/lang/String;[C)Ljava/lang/String;
+#capitalizeFully(Ljava/lang/String;)Ljava/lang/String;
+#capitalizeFully(Ljava/lang/String;[C)Ljava/lang/String;
+#uncapitalize(Ljava/lang/String;)Ljava/lang/String;
+#uncapitalize(Ljava/lang/String;[C)Ljava/lang/String;
+#swapCase(Ljava/lang/String;)Ljava/lang/String;
+#initials(Ljava/lang/String;)Ljava/lang/String;
+#initials(Ljava/lang/String;[C)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/text/WordUtils

+###org/apache/commons/lang3/time/DateFormatUtils
@0.10.0
+#<init>()V
+#formatUTC(JLjava/lang/String;)Ljava/lang/String;
+#formatUTC(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;
+#formatUTC(JLjava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#formatUTC(Ljava/util/Date;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#format(JLjava/lang/String;)Ljava/lang/String;
+#format(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;
+#format(Ljava/util/Calendar;Ljava/lang/String;)Ljava/lang/String;
+#format(JLjava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;
+#format(Ljava/util/Date;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;
+#format(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;
+#format(JLjava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#format(Ljava/util/Date;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#format(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#format(JLjava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;
+#format(Ljava/util/Date;Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;
+#format(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/time/DateFormatUtils

+###org/apache/commons/lang3/time/DateParser
@0.10.0
+#parse(Ljava/lang/String;)Ljava/util/Date;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
+#getPattern()Ljava/lang/String;
+#getTimeZone()Ljava/util/TimeZone;
+#getLocale()Ljava/util/Locale;
+#parseObject(Ljava/lang/String;)Ljava/lang/Object;
+#parseObject(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/time/DateParser

+###org/apache/commons/lang3/time/DatePrinter
@0.10.0
+#format(J)Ljava/lang/String;
+#format(Ljava/util/Date;)Ljava/lang/String;
+#format(Ljava/util/Calendar;)Ljava/lang/String;
+#format(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Date;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#getPattern()Ljava/lang/String;
+#getTimeZone()Ljava/util/TimeZone;
+#getLocale()Ljava/util/Locale;
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
@1.14.0
-###org/apache/commons/lang3/time/DatePrinter

+###org/apache/commons/lang3/time/DateUtils
@0.10.0
+#<init>()V
+#isSameDay(Ljava/util/Date;Ljava/util/Date;)Z
+#isSameDay(Ljava/util/Calendar;Ljava/util/Calendar;)Z
+#isSameInstant(Ljava/util/Date;Ljava/util/Date;)Z
+#isSameInstant(Ljava/util/Calendar;Ljava/util/Calendar;)Z
+#isSameLocalTime(Ljava/util/Calendar;Ljava/util/Calendar;)Z
+#parseDate(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;
+#parseDate(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;
+#parseDateStrictly(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;
+#parseDateStrictly(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;
+#addYears(Ljava/util/Date;I)Ljava/util/Date;
+#addMonths(Ljava/util/Date;I)Ljava/util/Date;
+#addWeeks(Ljava/util/Date;I)Ljava/util/Date;
+#addDays(Ljava/util/Date;I)Ljava/util/Date;
+#addHours(Ljava/util/Date;I)Ljava/util/Date;
+#addMinutes(Ljava/util/Date;I)Ljava/util/Date;
+#addSeconds(Ljava/util/Date;I)Ljava/util/Date;
+#addMilliseconds(Ljava/util/Date;I)Ljava/util/Date;
+#setYears(Ljava/util/Date;I)Ljava/util/Date;
+#setMonths(Ljava/util/Date;I)Ljava/util/Date;
+#setDays(Ljava/util/Date;I)Ljava/util/Date;
+#setHours(Ljava/util/Date;I)Ljava/util/Date;
+#setMinutes(Ljava/util/Date;I)Ljava/util/Date;
+#setSeconds(Ljava/util/Date;I)Ljava/util/Date;
+#setMilliseconds(Ljava/util/Date;I)Ljava/util/Date;
+#toCalendar(Ljava/util/Date;)Ljava/util/Calendar;
+#round(Ljava/util/Date;I)Ljava/util/Date;
+#round(Ljava/util/Calendar;I)Ljava/util/Calendar;
+#round(Ljava/lang/Object;I)Ljava/util/Date;
+#truncate(Ljava/util/Date;I)Ljava/util/Date;
+#truncate(Ljava/util/Calendar;I)Ljava/util/Calendar;
+#truncate(Ljava/lang/Object;I)Ljava/util/Date;
+#ceiling(Ljava/util/Date;I)Ljava/util/Date;
+#ceiling(Ljava/util/Calendar;I)Ljava/util/Calendar;
+#ceiling(Ljava/lang/Object;I)Ljava/util/Date;
+#iterator(Ljava/util/Date;I)Ljava/util/Iterator;
+#iterator(Ljava/util/Calendar;I)Ljava/util/Iterator;
+#iterator(Ljava/lang/Object;I)Ljava/util/Iterator;
+#getFragmentInMilliseconds(Ljava/util/Date;I)J
+#getFragmentInSeconds(Ljava/util/Date;I)J
+#getFragmentInMinutes(Ljava/util/Date;I)J
+#getFragmentInHours(Ljava/util/Date;I)J
+#getFragmentInDays(Ljava/util/Date;I)J
+#getFragmentInMilliseconds(Ljava/util/Calendar;I)J
+#getFragmentInSeconds(Ljava/util/Calendar;I)J
+#getFragmentInMinutes(Ljava/util/Calendar;I)J
+#getFragmentInHours(Ljava/util/Calendar;I)J
+#getFragmentInDays(Ljava/util/Calendar;I)J
+#truncatedEquals(Ljava/util/Calendar;Ljava/util/Calendar;I)Z
+#truncatedEquals(Ljava/util/Date;Ljava/util/Date;I)Z
+#truncatedCompareTo(Ljava/util/Calendar;Ljava/util/Calendar;I)I
+#truncatedCompareTo(Ljava/util/Date;Ljava/util/Date;I)I
@1.14.0
-###org/apache/commons/lang3/time/DateUtils

+###org/apache/commons/lang3/time/DurationFormatUtils
@0.10.0
+#<init>()V
+#formatDurationHMS(J)Ljava/lang/String;
+#formatDurationISO(J)Ljava/lang/String;
+#formatDuration(JLjava/lang/String;)Ljava/lang/String;
+#formatDuration(JLjava/lang/String;Z)Ljava/lang/String;
+#formatDurationWords(JZZ)Ljava/lang/String;
+#formatPeriodISO(JJ)Ljava/lang/String;
+#formatPeriod(JJLjava/lang/String;)Ljava/lang/String;
+#formatPeriod(JJLjava/lang/String;ZLjava/util/TimeZone;)Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/time/DurationFormatUtils

+###org/apache/commons/lang3/time/FastDateFormat
@0.10.0
+#getInstance()Lorg/apache/commons/lang3/time/FastDateFormat;
+#getInstance(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getInstance(Ljava/lang/String;Ljava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getInstance(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getDateInstance(I)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getDateInstance(ILjava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getDateInstance(ILjava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getDateInstance(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getTimeInstance(I)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getTimeInstance(ILjava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getTimeInstance(ILjava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getTimeInstance(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getDateTimeInstance(II)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getDateTimeInstance(IILjava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getDateTimeInstance(IILjava/util/TimeZone;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#getDateTimeInstance(IILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#format(J)Ljava/lang/String;
+#format(Ljava/util/Date;)Ljava/lang/String;
+#format(Ljava/util/Calendar;)Ljava/lang/String;
+#format(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Date;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#parse(Ljava/lang/String;)Ljava/util/Date;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
+#parseObject(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
+#getPattern()Ljava/lang/String;
+#getTimeZone()Ljava/util/TimeZone;
+#getLocale()Ljava/util/Locale;
+#getMaxLengthEstimate()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/time/FastDateFormat

+###org/apache/commons/lang3/time/FastDateParser
@0.10.0
+#getPattern()Ljava/lang/String;
+#getTimeZone()Ljava/util/TimeZone;
+#getLocale()Ljava/util/Locale;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#parseObject(Ljava/lang/String;)Ljava/lang/Object;
+#parse(Ljava/lang/String;)Ljava/util/Date;
+#parseObject(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
@1.14.0
-###org/apache/commons/lang3/time/FastDateParser

+###org/apache/commons/lang3/time/FastDatePrinter
@0.10.0
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#format(J)Ljava/lang/String;
+#format(Ljava/util/Date;)Ljava/lang/String;
+#format(Ljava/util/Calendar;)Ljava/lang/String;
+#format(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Date;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#getPattern()Ljava/lang/String;
+#getTimeZone()Ljava/util/TimeZone;
+#getLocale()Ljava/util/Locale;
+#getMaxLengthEstimate()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/apache/commons/lang3/time/FastDatePrinter

+###org/apache/commons/lang3/time/StopWatch
@0.10.0
+#<init>()V
+#start()V
+#stop()V
+#reset()V
+#split()V
+#unsplit()V
+#suspend()V
+#resume()V
+#getTime()J
+#getNanoTime()J
+#getSplitTime()J
+#getSplitNanoTime()J
+#getStartTime()J
+#toString()Ljava/lang/String;
+#toSplitString()Ljava/lang/String;
+#isStarted()Z
+#isSuspended()Z
+#isStopped()Z
@1.14.0
-###org/apache/commons/lang3/time/StopWatch

+###org/apache/commons/lang3/tuple/ImmutablePair
@0.10.0
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/ImmutablePair;
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getLeft()Ljava/lang/Object;
+#getRight()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/tuple/ImmutablePair

+###org/apache/commons/lang3/tuple/ImmutableTriple
@0.10.0
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/ImmutableTriple;
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getLeft()Ljava/lang/Object;
+#getMiddle()Ljava/lang/Object;
+#getRight()Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/tuple/ImmutableTriple

+###org/apache/commons/lang3/tuple/MutablePair
@0.10.0
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/MutablePair;
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getLeft()Ljava/lang/Object;
+#setLeft(Ljava/lang/Object;)V
+#getRight()Ljava/lang/Object;
+#setRight(Ljava/lang/Object;)V
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
@1.14.0
-###org/apache/commons/lang3/tuple/MutablePair

+###org/apache/commons/lang3/tuple/MutableTriple
@0.10.0
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/MutableTriple;
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getLeft()Ljava/lang/Object;
+#setLeft(Ljava/lang/Object;)V
+#getMiddle()Ljava/lang/Object;
+#setMiddle(Ljava/lang/Object;)V
+#getRight()Ljava/lang/Object;
+#setRight(Ljava/lang/Object;)V
@1.14.0
-###org/apache/commons/lang3/tuple/MutableTriple

+###org/apache/commons/lang3/tuple/Pair
@0.10.0
+#<init>()V
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/Pair;
+#getLeft()Ljava/lang/Object;
+#getRight()Ljava/lang/Object;
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#compareTo(Lorg/apache/commons/lang3/tuple/Pair;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toString(Ljava/lang/String;)Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/apache/commons/lang3/tuple/Pair

+###org/apache/commons/lang3/tuple/Triple
@0.10.0
+#<init>()V
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/Triple;
+#getLeft()Ljava/lang/Object;
+#getMiddle()Ljava/lang/Object;
+#getRight()Ljava/lang/Object;
+#compareTo(Lorg/apache/commons/lang3/tuple/Triple;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toString(Ljava/lang/String;)Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.14.0
-###org/apache/commons/lang3/tuple/Triple

+###org/apache/commons/lang3/Validate
@0.10.0
+#<init>()V
+#isTrue(ZLjava/lang/String;J)V
+#isTrue(ZLjava/lang/String;D)V
+#isTrue(ZLjava/lang/String;[Ljava/lang/Object;)V
+#isTrue(Z)V
+#notNull(Ljava/lang/Object;)Ljava/lang/Object;
+#notNull(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#notEmpty([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
+#notEmpty([Ljava/lang/Object;)[Ljava/lang/Object;
+#notEmpty(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
+#notEmpty(Ljava/util/Collection;)Ljava/util/Collection;
+#notEmpty(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;
+#notEmpty(Ljava/util/Map;)Ljava/util/Map;
+#notEmpty(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
+#notEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
+#notBlank(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
+#notBlank(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
+#noNullElements([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
+#noNullElements([Ljava/lang/Object;)[Ljava/lang/Object;
+#noNullElements(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;
+#noNullElements(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#validIndex([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
+#validIndex([Ljava/lang/Object;I)[Ljava/lang/Object;
+#validIndex(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
+#validIndex(Ljava/util/Collection;I)Ljava/util/Collection;
+#validIndex(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
+#validIndex(Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;
+#validState(Z)V
+#validState(ZLjava/lang/String;[Ljava/lang/Object;)V
+#matchesPattern(Ljava/lang/CharSequence;Ljava/lang/String;)V
+#matchesPattern(Ljava/lang/CharSequence;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
+#inclusiveBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V
+#inclusiveBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V
+#inclusiveBetween(JJJ)V
+#inclusiveBetween(JJJLjava/lang/String;)V
+#inclusiveBetween(DDD)V
+#inclusiveBetween(DDDLjava/lang/String;)V
+#exclusiveBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V
+#exclusiveBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V
+#exclusiveBetween(JJJ)V
+#exclusiveBetween(JJJLjava/lang/String;)V
+#exclusiveBetween(DDD)V
+#exclusiveBetween(DDDLjava/lang/String;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
+#isAssignableFrom(Ljava/lang/Class;Ljava/lang/Class;)V
+#isAssignableFrom(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V
@1.14.0
-###org/apache/commons/lang3/Validate

+###org/slf4j/helpers/BasicMarker
@0.10.0
+#getName()Ljava/lang/String;
+#add(Lorg/slf4j/Marker;)V
+#hasReferences()Z
+#hasChildren()Z
+#iterator()Ljava/util/Iterator;
+#remove(Lorg/slf4j/Marker;)Z
+#contains(Lorg/slf4j/Marker;)Z
+#contains(Ljava/lang/String;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.14.0
-###org/slf4j/helpers/BasicMarker

+###org/slf4j/helpers/BasicMarkerFactory
@0.10.0
+#<init>()V
+#getMarker(Ljava/lang/String;)Lorg/slf4j/Marker;
+#exists(Ljava/lang/String;)Z
+#detachMarker(Ljava/lang/String;)Z
+#getDetachedMarker(Ljava/lang/String;)Lorg/slf4j/Marker;
@1.14.0
-###org/slf4j/helpers/BasicMarkerFactory

+###org/slf4j/helpers/BasicMDCAdapter
@0.10.0
+#<init>()V
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#remove(Ljava/lang/String;)V
+#clear()V
+#getKeys()Ljava/util/Set;
+#getCopyOfContextMap()Ljava/util/Map;
+#setContextMap(Ljava/util/Map;)V
@1.14.0
-###org/slf4j/helpers/BasicMDCAdapter

+###org/slf4j/helpers/FormattingTuple
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V
+#getMessage()Ljava/lang/String;
+#getArgArray()[Ljava/lang/Object;
+#getThrowable()Ljava/lang/Throwable;
@1.14.0
-###org/slf4j/helpers/FormattingTuple

+###org/slf4j/helpers/MarkerIgnoringBase
@0.10.0
+#<init>()V
+#isTraceEnabled(Lorg/slf4j/Marker;)Z
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isDebugEnabled(Lorg/slf4j/Marker;)Z
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled(Lorg/slf4j/Marker;)Z
+#info(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled(Lorg/slf4j/Marker;)Z
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled(Lorg/slf4j/Marker;)Z
+#error(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#toString()Ljava/lang/String;
+#getName()Ljava/lang/String;
@1.14.0
-###org/slf4j/helpers/MarkerIgnoringBase

+###org/slf4j/helpers/MessageFormatter
@0.10.0
+#<init>()V
+#format(Ljava/lang/String;Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple;
+#format(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple;
+#arrayFormat(Ljava/lang/String;[Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple;
@1.14.0
-###org/slf4j/helpers/MessageFormatter

+###org/slf4j/helpers/NOPLogger
@0.10.0
+#getName()Ljava/lang/String;
+#isTraceEnabled()Z
+#trace(Ljava/lang/String;)V
+#trace(Ljava/lang/String;Ljava/lang/Object;)V
+#trace(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#trace(Ljava/lang/String;[Ljava/lang/Object;)V
+#trace(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Object;)V
+#debug(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#debug(Ljava/lang/String;[Ljava/lang/Object;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Object;)V
+#info(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#info(Ljava/lang/String;[Ljava/lang/Object;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;Ljava/lang/Object;)V
+#warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#warn(Ljava/lang/String;[Ljava/lang/Object;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/Object;)V
+#error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#error(Ljava/lang/String;[Ljava/lang/Object;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/slf4j/helpers/NOPLogger

+###org/slf4j/helpers/NOPLoggerFactory
@0.10.0
+#<init>()V
+#getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;
@1.14.0
-###org/slf4j/helpers/NOPLoggerFactory

+###org/slf4j/helpers/NOPMDCAdapter
@0.10.0
+#<init>()V
+#clear()V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#remove(Ljava/lang/String;)V
+#getCopyOfContextMap()Ljava/util/Map;
+#setContextMap(Ljava/util/Map;)V
@1.14.0
-###org/slf4j/helpers/NOPMDCAdapter

+###org/slf4j/helpers/SubstituteLogger
@0.10.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#isTraceEnabled()Z
+#trace(Ljava/lang/String;)V
+#trace(Ljava/lang/String;Ljava/lang/Object;)V
+#trace(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#trace(Ljava/lang/String;[Ljava/lang/Object;)V
+#trace(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isTraceEnabled(Lorg/slf4j/Marker;)Z
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Object;)V
+#debug(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#debug(Ljava/lang/String;[Ljava/lang/Object;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isDebugEnabled(Lorg/slf4j/Marker;)Z
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Object;)V
+#info(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#info(Ljava/lang/String;[Ljava/lang/Object;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled(Lorg/slf4j/Marker;)Z
+#info(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;Ljava/lang/Object;)V
+#warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#warn(Ljava/lang/String;[Ljava/lang/Object;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled(Lorg/slf4j/Marker;)Z
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/Object;)V
+#error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#error(Ljava/lang/String;[Ljava/lang/Object;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled(Lorg/slf4j/Marker;)Z
+#error(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#setDelegate(Lorg/slf4j/Logger;)V
@1.14.0
-###org/slf4j/helpers/SubstituteLogger

+###org/slf4j/helpers/SubstituteLoggerFactory
@0.10.0
+#<init>()V
+#getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;
+#getLoggerNames()Ljava/util/List;
+#getLoggers()Ljava/util/List;
+#clear()V
@1.14.0
-###org/slf4j/helpers/SubstituteLoggerFactory

+###org/slf4j/helpers/Util
@0.10.0
+#<init>()V
+#report(Ljava/lang/String;Ljava/lang/Throwable;)V
+#report(Ljava/lang/String;)V
@1.14.0
-###org/slf4j/helpers/Util

+###org/slf4j/ILoggerFactory
@0.10.0
+#getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;
@1.14.0
-###org/slf4j/ILoggerFactory

+###org/slf4j/IMarkerFactory
@0.10.0
+#getMarker(Ljava/lang/String;)Lorg/slf4j/Marker;
+#exists(Ljava/lang/String;)Z
+#detachMarker(Ljava/lang/String;)Z
+#getDetachedMarker(Ljava/lang/String;)Lorg/slf4j/Marker;
@1.14.0
-###org/slf4j/IMarkerFactory

+###org/slf4j/Logger
@0.10.0
+#getName()Ljava/lang/String;
+#isTraceEnabled()Z
+#trace(Ljava/lang/String;)V
+#trace(Ljava/lang/String;Ljava/lang/Object;)V
+#trace(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#trace(Ljava/lang/String;[Ljava/lang/Object;)V
+#trace(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isTraceEnabled(Lorg/slf4j/Marker;)Z
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#trace(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Object;)V
+#debug(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#debug(Ljava/lang/String;[Ljava/lang/Object;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isDebugEnabled(Lorg/slf4j/Marker;)Z
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#debug(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Object;)V
+#info(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#info(Ljava/lang/String;[Ljava/lang/Object;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled(Lorg/slf4j/Marker;)Z
+#info(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#info(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;Ljava/lang/Object;)V
+#warn(Ljava/lang/String;[Ljava/lang/Object;)V
+#warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled(Lorg/slf4j/Marker;)Z
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#warn(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/Object;)V
+#error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#error(Ljava/lang/String;[Ljava/lang/Object;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled(Lorg/slf4j/Marker;)Z
+#error(Lorg/slf4j/Marker;Ljava/lang/String;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)V
+#error(Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
@1.14.0
-###org/slf4j/Logger

+###org/slf4j/LoggerFactory
@0.10.0
+#getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;
+#getLogger(Ljava/lang/Class;)Lorg/slf4j/Logger;
+#getILoggerFactory()Lorg/slf4j/ILoggerFactory;
@1.14.0
-###org/slf4j/LoggerFactory

+###org/slf4j/Marker
@0.10.0
+#getName()Ljava/lang/String;
+#add(Lorg/slf4j/Marker;)V
+#remove(Lorg/slf4j/Marker;)Z
+#hasChildren()Z
+#hasReferences()Z
+#iterator()Ljava/util/Iterator;
+#contains(Lorg/slf4j/Marker;)Z
+#contains(Ljava/lang/String;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
-###org/slf4j/Marker

+###org/slf4j/MarkerFactory
@0.10.0
+#getMarker(Ljava/lang/String;)Lorg/slf4j/Marker;
+#getDetachedMarker(Ljava/lang/String;)Lorg/slf4j/Marker;
+#getIMarkerFactory()Lorg/slf4j/IMarkerFactory;
@1.14.0
-###org/slf4j/MarkerFactory

+###org/slf4j/MDC
@0.10.0
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#remove(Ljava/lang/String;)V
+#clear()V
+#getCopyOfContextMap()Ljava/util/Map;
+#setContextMap(Ljava/util/Map;)V
+#getMDCAdapter()Lorg/slf4j/spi/MDCAdapter;
@1.14.0
-###org/slf4j/MDC

+###org/slf4j/spi/LocationAwareLogger
@0.10.0
+#log(Lorg/slf4j/Marker;Ljava/lang/String;ILjava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V
@1.14.0
-###org/slf4j/spi/LocationAwareLogger

+###org/slf4j/spi/LoggerFactoryBinder
@0.10.0
+#getLoggerFactory()Lorg/slf4j/ILoggerFactory;
+#getLoggerFactoryClassStr()Ljava/lang/String;
@1.14.0
-###org/slf4j/spi/LoggerFactoryBinder

+###org/slf4j/spi/MarkerFactoryBinder
@0.10.0
+#getMarkerFactory()Lorg/slf4j/IMarkerFactory;
+#getMarkerFactoryClassStr()Ljava/lang/String;
@1.14.0
-###org/slf4j/spi/MarkerFactoryBinder

+###org/slf4j/spi/MDCAdapter
@0.10.0
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#remove(Ljava/lang/String;)V
+#clear()V
+#getCopyOfContextMap()Ljava/util/Map;
+#setContextMap(Ljava/util/Map;)V
@1.14.0
-###org/slf4j/spi/MDCAdapter

+###org/apache/flink/runtime/protocols/ExtendedManagementProtocol
@0.6-hadoop2-incubating
+#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
+#getNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/topology/NetworkTopology;
+#getRecentJobs()Ljava/util/List;
+#getEvents(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/List;
+#killTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;)V
+#killInstance(Lorg/apache/flink/core/io/StringRecord;)V
+#logBufferUtilization(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#getAvailableSlots()I
@0.7.0-hadoop2-incubating
+#getTotalNumberOfRegisteredSlots()I
+#getNumberOfSlotsAvailableToScheduler()I
-#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
-#getNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/topology/NetworkTopology;
-#killTask(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;)V
-#killInstance(Lorg/apache/flink/core/io/StringRecord;)V
-#logBufferUtilization(Lorg/apache/flink/runtime/jobgraph/JobID;)V
-#getAvailableSlots()I
@0.9.0-milestone-1
-###org/apache/flink/runtime/protocols/ExtendedManagementProtocol

+###org/apache/flink/runtime/protocols/JobManagerProtocol
@0.6-hadoop2-incubating
+#sendHeartbeat(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)V
+#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/types/IntegerRecord;)Lorg/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult;
+#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
@0.7.0-hadoop2-incubating
+#sendHeartbeat(Lorg/apache/flink/runtime/instance/InstanceID;)Z
+#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)Lorg/apache/flink/runtime/instance/InstanceID;
+#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)Z
-#sendHeartbeat(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)V
-#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;Lorg/apache/flink/runtime/types/IntegerRecord;)Lorg/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult;
-#updateTaskExecutionState(Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/protocols/JobManagerProtocol

+###org/apache/flink/runtime/protocols/ChannelLookupProtocol
@0.6-hadoop2-incubating
+#lookupConnectionInfo(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;
@0.9.0-milestone-1
-###org/apache/flink/runtime/protocols/ChannelLookupProtocol

+###org/apache/flink/runtime/protocols/JobManagementProtocol
@0.6-hadoop2-incubating
+#submitJob(Lorg/apache/flink/runtime/jobgraph/JobGraph;)Lorg/apache/flink/runtime/client/JobSubmissionResult;
+#getJobProgress(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/client/JobProgressResult;
+#cancelJob(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/client/JobCancelResult;
+#getRecommendedPollingInterval()Lorg/apache/flink/runtime/types/IntegerRecord;
@0.9.0-milestone-1
-###org/apache/flink/runtime/protocols/JobManagementProtocol

+###org/apache/flink/runtime/protocols/InputSplitProviderProtocol
@0.6-hadoop2-incubating
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/types/IntegerRecord;)Lorg/apache/flink/runtime/jobmanager/splitassigner/InputSplitWrapper;
@0.7.0-hadoop2-incubating
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/core/io/InputSplit;
-#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/types/IntegerRecord;)Lorg/apache/flink/runtime/jobmanager/splitassigner/InputSplitWrapper;
@0.8.1
+#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/jobmanager/InputSplitWrapper;
-#requestNextInputSplit(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/core/io/InputSplit;
@0.9.0-milestone-1
-###org/apache/flink/runtime/protocols/InputSplitProviderProtocol

+###org/apache/flink/runtime/protocols/AccumulatorProtocol
@0.6-hadoop2-incubating
+#reportAccumulatorResult(Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;)V
+#getAccumulatorResults(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;
@0.9.0-milestone-1
-###org/apache/flink/runtime/protocols/AccumulatorProtocol

+###org/apache/flink/runtime/protocols/ServiceDiscoveryProtocol
@0.7.0-hadoop2-incubating
+#getBlobServerPort()I
@0.9.0-milestone-1
-###org/apache/flink/runtime/protocols/ServiceDiscoveryProtocol

+###org/apache/flink/runtime/protocols/TaskOperationProtocol
@0.6-hadoop2-incubating
+#submitTasks(Ljava/util/List;)Ljava/util/List;
+#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskCancelResult;
+#killTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskKillResult;
+#getLibraryCacheProfile(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheProfileRequest;)Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheProfileResponse;
+#updateLibraryCache(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheUpdate;)V
+#invalidateLookupCacheEntries(Ljava/util/Set;)V
+#logBufferUtilization()V
+#killTaskManager()V
@0.7.0-hadoop2-incubating
+#submitTask(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;)Lorg/apache/flink/runtime/taskmanager/TaskOperationResult;
+#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/taskmanager/TaskOperationResult;
-#submitTasks(Ljava/util/List;)Ljava/util/List;
-#cancelTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskCancelResult;
-#killTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)Lorg/apache/flink/runtime/taskmanager/TaskKillResult;
-#getLibraryCacheProfile(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheProfileRequest;)Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheProfileResponse;
-#updateLibraryCache(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheUpdate;)V
-#invalidateLookupCacheEntries(Ljava/util/Set;)V
-#logBufferUtilization()V
-#killTaskManager()V
@0.8.0
+#killTaskManager()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/protocols/TaskOperationProtocol

+###org/apache/flink/runtime/operators/AbstractCachedBuildSideMatchDriver
@0.6-hadoop2-incubating
+#isInputResettable(I)Z
+#initialize()V
+#prepare()V
+#run()V
+#cleanup()V
+#reset()V
+#teardown()V
+#cancel()V
@0.10.0
-###org/apache/flink/runtime/operators/AbstractCachedBuildSideMatchDriver

+###org/apache/flink/runtime/operators/PactTaskContext
@0.6-hadoop2-incubating
+#getTaskConfig()Lorg/apache/flink/runtime/operators/util/TaskConfig;
+#getUserCodeClassLoader()Ljava/lang/ClassLoader;
+#getMemoryManager()Lorg/apache/flink/runtime/memorymanager/MemoryManager;
+#getIOManager()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;
+#getInput(I)Lorg/apache/flink/util/MutableObjectIterator;
+#getInputSerializer(I)Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;
+#getInputComparator(I)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#getStub()Ljava/lang/Object;
+#getOutputCollector()Lorg/apache/flink/util/Collector;
+#getOwningNepheleTask()Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;
+#formatLogString(Ljava/lang/String;)Ljava/lang/String;
@0.7.0-hadoop2-incubating
+#getDriverComparator(I)Lorg/apache/flink/api/common/typeutils/TypeComparator;
-#getInputComparator(I)Lorg/apache/flink/api/common/typeutils/TypeComparator;
@0.9.0-milestone-1
+#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
@0.10.0
-###org/apache/flink/runtime/operators/PactTaskContext

+###org/apache/flink/runtime/operators/shipping/HistogramPartitionFunction
@0.6-hadoop2-incubating
+#<init>([Lorg/apache/flink/types/Record;Lorg/apache/flink/api/common/operators/Order;)V
+#selectChannels(Lorg/apache/flink/types/Record;I[I)V
@0.8.0
-###org/apache/flink/runtime/operators/shipping/HistogramPartitionFunction

+###org/apache/flink/runtime/operators/shipping/PartitionFunction
@0.6-hadoop2-incubating
+#selectChannels(Lorg/apache/flink/types/Record;I[I)V
@0.8.0
-###org/apache/flink/runtime/operators/shipping/PartitionFunction

+###org/apache/flink/runtime/operators/PactDriver
@0.6-hadoop2-incubating
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
-###org/apache/flink/runtime/operators/PactDriver

+###org/apache/flink/runtime/operators/hash/BuildFirstHashMatchIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
@0.9.0-milestone-1
-###org/apache/flink/runtime/operators/hash/BuildFirstHashMatchIterator

+###org/apache/flink/runtime/operators/hash/BuildSecondHashMatchIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
@0.9.0-milestone-1
-###org/apache/flink/runtime/operators/hash/BuildSecondHashMatchIterator

+###org/apache/flink/runtime/operators/hash/BuildFirstReOpenableHashMatchIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/operators/hash/BuildFirstReOpenableHashMatchIterator

+###org/apache/flink/runtime/operators/hash/BuildSecondReOpenableHashMatchIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/operators/hash/BuildSecondReOpenableHashMatchIterator

+###org/apache/flink/runtime/operators/MatchDriver
@0.6-hadoop2-incubating
+#<init>()V
+#setup(Lorg/apache/flink/runtime/operators/PactTaskContext;)V
+#getNumberOfInputs()I
+#getStubType()Ljava/lang/Class;
+#requiresComparatorOnInput()Z
+#prepare()V
+#run()V
+#cleanup()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#getNumberOfDriverComparators()I
-#requiresComparatorOnInput()Z
@0.10.0
-###org/apache/flink/runtime/operators/MatchDriver

+###org/apache/flink/runtime/operators/sort/SortMergeCoGroupIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)V
+#open()V
+#close()V
+#getValues1()Ljava/lang/Iterable;
+#getValues2()Ljava/lang/Iterable;
+#next()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/operators/sort/SortMergeCoGroupIterator

+###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$InputDataCollector
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$CircularQueues;J)V
+#collect(Ljava/lang/Object;)V
+#close()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/operators/sort/UnilateralSortMerger$InputDataCollector

+###org/apache/flink/runtime/operators/sort/MergeMatchIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#open()V
+#close()V
+#abort()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/operators/sort/MergeMatchIterator

+###org/apache/flink/runtime/operators/ResettablePactDriver
@0.6-hadoop2-incubating
+#isInputResettable(I)Z
+#initialize()V
+#reset()V
+#teardown()V
@0.10.0
-###org/apache/flink/runtime/operators/ResettablePactDriver

+###org/apache/flink/runtime/operators/util/RecordReaderIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/api/MutableReader;)V
+#next(Lorg/apache/flink/types/Record;)Lorg/apache/flink/types/Record;
+#next(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.0
-###org/apache/flink/runtime/operators/util/RecordReaderIterator

+###org/apache/flink/runtime/operators/BuildSecondCachedMatchDriver
@0.6-hadoop2-incubating
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/operators/BuildSecondCachedMatchDriver

+###org/apache/flink/runtime/operators/resettable/BlockResettableIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/api/common/typeutils/TypeSerializer;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#reopen(Ljava/util/Iterator;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#reset()V
+#nextBlock()Z
+#hasFurtherInput()Z
+#close()V
+#open()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/operators/resettable/BlockResettableIterator

+###org/apache/flink/runtime/operators/RegularPactTask
@0.6-hadoop2-incubating
+#<init>()V
+#registerInputOutput()V
+#invoke()V
+#cancel()V
+#setUserCodeClassLoader(Ljava/lang/ClassLoader;)V
+#getLastTasksConfig()Lorg/apache/flink/runtime/operators/util/TaskConfig;
+#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/udf/RuntimeUDFContext;
+#getTaskConfig()Lorg/apache/flink/runtime/operators/util/TaskConfig;
+#getUserCodeClassLoader()Ljava/lang/ClassLoader;
+#getMemoryManager()Lorg/apache/flink/runtime/memorymanager/MemoryManager;
+#getIOManager()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;
+#getStub()Lorg/apache/flink/api/common/functions/Function;
+#getOutputCollector()Lorg/apache/flink/util/Collector;
+#getOwningNepheleTask()Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;
+#formatLogString(Ljava/lang/String;)Ljava/lang/String;
+#getInput(I)Lorg/apache/flink/util/MutableObjectIterator;
+#getInputSerializer(I)Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;
+#getInputComparator(I)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#constructLogString(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)Ljava/lang/String;
+#logAndThrowException(Ljava/lang/Exception;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#getOutputCollector(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/ClassLoader;Ljava/util/List;I)Lorg/apache/flink/util/Collector;
+#initOutputs(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/util/List;Ljava/util/List;)Lorg/apache/flink/util/Collector;
+#initOutputWriters(Ljava/util/List;)V
+#openUserCode(Lorg/apache/flink/api/common/functions/Function;Lorg/apache/flink/configuration/Configuration;)V
+#closeUserCode(Lorg/apache/flink/api/common/functions/Function;)V
+#openChainedTasks(Ljava/util/List;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#closeChainedTasks(Ljava/util/List;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#cancelChainedTasks(Ljava/util/List;)V
+#instantiateUserCode(Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Object;
+#getStub()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/api/common/functions/util/RuntimeUDFContext;
+#getDriverComparator(I)Lorg/apache/flink/api/common/typeutils/TypeComparator;
-#setUserCodeClassLoader(Ljava/lang/ClassLoader;)V
-#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/udf/RuntimeUDFContext;
-#getUserCodeClassLoader()Ljava/lang/ClassLoader;
-#getInputComparator(I)Lorg/apache/flink/api/common/typeutils/TypeComparator;
@0.8.0
+#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext;
-#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/api/common/functions/util/RuntimeUDFContext;
@0.9.0-milestone-1
+#getOutputCollector(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/ClassLoader;Ljava/util/List;II)Lorg/apache/flink/util/Collector;
+#initOutputs(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/util/List;Ljava/util/List;Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/util/Collector;
+#clearWriters(Ljava/util/List;)V
+#clearReaders([Lorg/apache/flink/runtime/io/network/api/reader/MutableReader;)V
-#getOutputCollector(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/lang/ClassLoader;Ljava/util/List;I)Lorg/apache/flink/util/Collector;
-#initOutputs(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/operators/util/TaskConfig;Ljava/util/List;Ljava/util/List;)Lorg/apache/flink/util/Collector;
-#initOutputWriters(Ljava/util/List;)V
@0.10.0
-###org/apache/flink/runtime/operators/RegularPactTask

+###org/apache/flink/runtime/operators/BuildFirstCachedMatchDriver
@0.6-hadoop2-incubating
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/operators/BuildFirstCachedMatchDriver

+###org/apache/flink/runtime/io/network/SenderHintEvent
@0.6-hadoop2-incubating
+#<init>()V
+#getSource()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#getRemoteReceiver()Lorg/apache/flink/runtime/io/network/RemoteReceiver;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#createEnvelopeWithEvent(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/channels/ChannelID;Lorg/apache/flink/runtime/io/network/RemoteReceiver;)Lorg/apache/flink/runtime/io/network/Envelope;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/SenderHintEvent

+###org/apache/flink/runtime/io/network/bufferprovider/GlobalBufferPool
@0.6-hadoop2-incubating
+#<init>(II)V
+#requestBuffer()Lorg/apache/flink/core/memory/MemorySegment;
+#returnBuffer(Lorg/apache/flink/core/memory/MemorySegment;)V
+#getBufferSize()I
+#numBuffers()I
+#numAvailableBuffers()I
+#destroy()V
@0.7.0-hadoop2-incubating
+#isDestroyed()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/bufferprovider/GlobalBufferPool

+###org/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration

+###org/apache/flink/runtime/io/network/bufferprovider/BufferProviderBroker
@0.6-hadoop2-incubating
+#getBufferProvider(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/bufferprovider/BufferProviderBroker

+###org/apache/flink/runtime/io/network/bufferprovider/BufferProvider
@0.6-hadoop2-incubating
+#requestBuffer(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#requestBufferBlocking(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#getBufferSize()I
+#reportAsynchronousEvent()V
+#registerBufferAvailabilityListener(Lorg/apache/flink/runtime/io/network/bufferprovider/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/bufferprovider/BufferProvider

+###org/apache/flink/runtime/io/network/bufferprovider/LocalBufferPool
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/bufferprovider/GlobalBufferPool;I)V
+#requestBuffer(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#requestBufferBlocking(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#getBufferSize()I
+#reportAsynchronousEvent()V
+#registerBufferAvailabilityListener(Lorg/apache/flink/runtime/io/network/bufferprovider/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration;
+#setNumDesignatedBuffers(I)V
+#numAvailableBuffers()I
+#numRequestedBuffers()I
+#numDesignatedBuffers()I
+#destroy()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/bufferprovider/LocalBufferPool

+###org/apache/flink/runtime/io/network/bufferprovider/DiscardBufferPool
@0.6-hadoop2-incubating
+#<init>()V
+#requestBuffer(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#requestBufferBlocking(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#getBufferSize()I
+#reportAsynchronousEvent()V
+#registerBufferAvailabilityListener(Lorg/apache/flink/runtime/io/network/bufferprovider/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration;
+#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/bufferprovider/DiscardBufferPool

+###org/apache/flink/runtime/io/network/bufferprovider/LocalBufferPoolOwner
@0.6-hadoop2-incubating
+#getNumberOfChannels()I
+#setDesignatedNumberOfBuffers(I)V
+#clearLocalBufferPool()V
+#registerGlobalBufferPool(Lorg/apache/flink/runtime/io/network/bufferprovider/GlobalBufferPool;)V
+#logBufferUtilization()V
+#reportAsynchronousEvent()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/bufferprovider/LocalBufferPoolOwner

+###org/apache/flink/runtime/io/network/bufferprovider/BufferAvailabilityListener
@0.6-hadoop2-incubating
+#bufferAvailable(Lorg/apache/flink/runtime/io/network/Buffer;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/bufferprovider/BufferAvailabilityListener

+###org/apache/flink/runtime/io/network/NetworkConnectionManager
@0.6-hadoop2-incubating
+#start(Lorg/apache/flink/runtime/io/network/ChannelManager;)V
+#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#shutdown()V
@0.6.1-hadoop2-incubating
-#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
@0.8.0
+#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;Z)V
+#close(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#getNumberOfActiveConnections()I
-#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/NetworkConnectionManager

+###org/apache/flink/runtime/io/network/gates/InputChannelResult
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/io/network/gates/InputChannelResult;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/gates/InputChannelResult;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/gates/InputChannelResult

+###org/apache/flink/runtime/io/network/gates/GateID
@0.6-hadoop2-incubating
+#<init>()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/gates/GateID

+###org/apache/flink/runtime/io/network/gates/Gate
@0.6-hadoop2-incubating
+#getIndex()I
+#toString()Ljava/lang/String;
+#subscribeToEvent(Lorg/apache/flink/runtime/event/task/EventListener;Ljava/lang/Class;)V
+#unsubscribeFromEvent(Lorg/apache/flink/runtime/event/task/EventListener;Ljava/lang/Class;)V
+#deliverEvent(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;)V
+#setChannelType(Lorg/apache/flink/runtime/io/network/channels/ChannelType;)V
+#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getGateID()Lorg/apache/flink/runtime/io/network/gates/GateID;
+#publishEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#releaseAllChannelResources()V
+#isClosed()Z
+#isInputGate()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/gates/Gate

+###org/apache/flink/runtime/io/network/gates/RecordAvailabilityListener
@0.6-hadoop2-incubating
+#reportRecordAvailability(Lorg/apache/flink/runtime/io/network/gates/InputGate;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/gates/RecordAvailabilityListener

+###org/apache/flink/runtime/io/network/gates/OutputGate
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/io/network/gates/GateID;I)V
+#sendBuffer(Lorg/apache/flink/runtime/io/network/Buffer;I)V
+#sendEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;I)V
+#sendBufferAndEvent(Lorg/apache/flink/runtime/io/network/Buffer;Lorg/apache/flink/runtime/event/task/AbstractEvent;I)V
+#broadcastBuffer(Lorg/apache/flink/runtime/io/network/Buffer;)V
+#broadcastEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#initializeChannels(Lorg/apache/flink/runtime/deployment/GateDeploymentDescriptor;)V
+#channels()[Lorg/apache/flink/runtime/io/network/channels/OutputChannel;
+#getChannel(I)Lorg/apache/flink/runtime/io/network/channels/OutputChannel;
+#getNumChannels()I
+#requestClose()V
+#isClosed()Z
+#waitForGateToBeClosed()V
+#isInputGate()Z
+#toString()Ljava/lang/String;
+#publishEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#releaseAllChannelResources()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/gates/OutputGate

+###org/apache/flink/runtime/io/network/gates/InputGate
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/io/network/gates/GateID;I)V
+#initializeChannels(Lorg/apache/flink/runtime/deployment/GateDeploymentDescriptor;)V
+#isInputGate()Z
+#getNumberOfInputChannels()I
+#getInputChannel(I)Lorg/apache/flink/runtime/io/network/channels/InputChannel;
+#channels()[Lorg/apache/flink/runtime/io/network/channels/InputChannel;
+#readRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/gates/InputChannelResult;
+#getCurrentEvent()Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;
+#notifyRecordIsAvailable(I)V
+#waitForAnyChannelToBecomeAvailable()I
+#isClosed()Z
+#close()V
+#toString()Ljava/lang/String;
+#publishEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#releaseAllChannelResources()V
+#registerRecordAvailabilityListener(Lorg/apache/flink/runtime/io/network/gates/RecordAvailabilityListener;)V
+#notifyDataUnitConsumed(I)V
+#requestBuffer(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#requestBufferBlocking(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#getBufferSize()I
+#getNumberOfChannels()I
+#setDesignatedNumberOfBuffers(I)V
+#clearLocalBufferPool()V
+#registerGlobalBufferPool(Lorg/apache/flink/runtime/io/network/bufferprovider/GlobalBufferPool;)V
+#logBufferUtilization()V
+#reportAsynchronousEvent()V
+#registerBufferAvailabilityListener(Lorg/apache/flink/runtime/io/network/bufferprovider/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/gates/InputGate

+###org/apache/flink/runtime/io/network/BufferRecycler
@0.6-hadoop2-incubating
+#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/BufferRecycler

+###org/apache/flink/runtime/io/network/LocalReceiverCancelledException
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/channels/ChannelID;)V
+#getReceiver()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/LocalReceiverCancelledException

+###org/apache/flink/runtime/io/network/serialization/AdaptiveSpanningRecordDeserializer
@0.6-hadoop2-incubating
+#<init>()V
+#setNextMemorySegment(Lorg/apache/flink/core/memory/MemorySegment;I)V
+#getNextRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/serialization/RecordDeserializer$DeserializationResult;
+#clear()V
+#hasUnfinishedData()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/serialization/AdaptiveSpanningRecordDeserializer

+###org/apache/flink/runtime/io/network/serialization/RecordDeserializer$DeserializationResult
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/io/network/serialization/RecordDeserializer$DeserializationResult;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/serialization/RecordDeserializer$DeserializationResult;
+#isFullRecord()Z
+#isBufferConsumed()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/serialization/RecordDeserializer$DeserializationResult

+###org/apache/flink/runtime/io/network/serialization/RecordSerializer$SerializationResult
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/io/network/serialization/RecordSerializer$SerializationResult;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/serialization/RecordSerializer$SerializationResult;
+#isFullRecord()Z
+#isFullBuffer()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/serialization/RecordSerializer$SerializationResult

+###org/apache/flink/runtime/io/network/serialization/RecordDeserializer
@0.6-hadoop2-incubating
+#getNextRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/serialization/RecordDeserializer$DeserializationResult;
+#setNextMemorySegment(Lorg/apache/flink/core/memory/MemorySegment;I)V
+#clear()V
+#hasUnfinishedData()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/serialization/RecordDeserializer

+###org/apache/flink/runtime/io/network/serialization/DataOutputSerializer
@0.6-hadoop2-incubating
+#<init>(I)V
+#wrapAsByteBuffer()Ljava/nio/ByteBuffer;
+#clear()V
+#length()I
+#toString()Ljava/lang/String;
+#write(I)V
+#write([B)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeBytes(Ljava/lang/String;)V
+#writeChar(I)V
+#writeChars(Ljava/lang/String;)V
+#writeDouble(D)V
+#writeFloat(F)V
+#writeInt(I)V
+#writeLong(J)V
+#writeShort(I)V
+#writeUTF(Ljava/lang/String;)V
+#skipBytesToWrite(I)V
+#write(Lorg/apache/flink/core/memory/DataInputView;I)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/serialization/DataOutputSerializer

+###org/apache/flink/runtime/io/network/serialization/RecordSerializer
@0.6-hadoop2-incubating
+#addRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/serialization/RecordSerializer$SerializationResult;
+#setNextBuffer(Lorg/apache/flink/runtime/io/network/Buffer;)Lorg/apache/flink/runtime/io/network/serialization/RecordSerializer$SerializationResult;
+#getCurrentBuffer()Lorg/apache/flink/runtime/io/network/Buffer;
+#clear()V
+#hasData()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/serialization/RecordSerializer

+###org/apache/flink/runtime/io/network/serialization/SpanningRecordSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#addRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/serialization/RecordSerializer$SerializationResult;
+#setNextBuffer(Lorg/apache/flink/runtime/io/network/Buffer;)Lorg/apache/flink/runtime/io/network/serialization/RecordSerializer$SerializationResult;
+#getCurrentBuffer()Lorg/apache/flink/runtime/io/network/Buffer;
+#clear()V
+#hasData()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/serialization/SpanningRecordSerializer

+###org/apache/flink/runtime/io/network/serialization/DataInputDeserializer
@0.6-hadoop2-incubating
+#<init>()V
+#<init>([BII)V
+#<init>(Ljava/nio/ByteBuffer;)V
+#setBuffer(Ljava/nio/ByteBuffer;)V
+#setBuffer([BII)V
+#readBoolean()Z
+#readByte()B
+#readChar()C
+#readDouble()D
+#readFloat()F
+#readFully([B)V
+#readFully([BII)V
+#readInt()I
+#readLine()Ljava/lang/String;
+#readLong()J
+#readShort()S
+#readUTF()Ljava/lang/String;
+#readUnsignedByte()I
+#readUnsignedShort()I
+#skipBytes(I)I
+#skipBytesToRead(I)V
+#read([BII)I
+#read([B)I
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/serialization/DataInputDeserializer

+###org/apache/flink/runtime/io/network/EnvelopeDispatcher
@0.6-hadoop2-incubating
+#dispatchFromOutputChannel(Lorg/apache/flink/runtime/io/network/Envelope;)V
+#dispatchFromInputChannel(Lorg/apache/flink/runtime/io/network/Envelope;)V
+#dispatchFromNetwork(Lorg/apache/flink/runtime/io/network/Envelope;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/EnvelopeDispatcher

+###org/apache/flink/runtime/io/network/netty/InboundEnvelopeDispatcher
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/EnvelopeDispatcher;)V
+#channelRead(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/netty/InboundEnvelopeDispatcher

+###org/apache/flink/runtime/io/network/netty/InboundEnvelopeDecoder
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProviderBroker;)V
+#channelActive(Lio/netty/channel/ChannelHandlerContext;)V
+#channelRead(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
+#bufferAvailable(Lorg/apache/flink/runtime/io/network/Buffer;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/netty/InboundEnvelopeDecoder

+###org/apache/flink/runtime/io/network/netty/OutboundEnvelopeEncoder
@0.6-hadoop2-incubating
+#<init>()V
+#write(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/netty/OutboundEnvelopeEncoder

+###org/apache/flink/runtime/io/network/netty/OutboundConnectionQueue
@0.6-hadoop2-incubating
+#<init>(Lio/netty/channel/Channel;Lorg/apache/flink/runtime/io/network/RemoteReceiver;Lorg/apache/flink/runtime/io/network/NetworkConnectionManager;I)V
+#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;)Z
+#userEventTriggered(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
+#channelWritabilityChanged(Lio/netty/channel/ChannelHandlerContext;)V
+#getNumQueuedEnvelopes()I
+#toString()Ljava/lang/String;
@0.6.1-hadoop2-incubating
+#<init>(Lio/netty/channel/Channel;)V
+#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;)V
+#operationComplete(Lio/netty/channel/ChannelFuture;)V
+#operationComplete(Lio/netty/util/concurrent/Future;)V
-#<init>(Lio/netty/channel/Channel;Lorg/apache/flink/runtime/io/network/RemoteReceiver;Lorg/apache/flink/runtime/io/network/NetworkConnectionManager;I)V
-#enqueue(Lorg/apache/flink/runtime/io/network/Envelope;)Z
@0.8.0
+#channelInactive(Lio/netty/channel/ChannelHandlerContext;)V
+#exceptionCaught(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/netty/OutboundConnectionQueue

+###org/apache/flink/runtime/io/network/api/AbstractUnionRecordReader
@0.6-hadoop2-incubating
+#isInputClosed()Z
+#publishEvent(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;)V
+#reportRecordAvailability(Lorg/apache/flink/runtime/io/network/gates/InputGate;)V
@0.8.0
+#publishEvent(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;I)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/AbstractUnionRecordReader

+###org/apache/flink/runtime/io/network/api/AbstractSingleGateRecordReader
@0.6-hadoop2-incubating
+#getNumberOfInputChannels()I
+#publishEvent(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;)V
@0.7.0-hadoop2-incubating
+#getInputGate()Lorg/apache/flink/runtime/io/network/gates/InputGate;
@0.8.0
+#publishEvent(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;I)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/AbstractSingleGateRecordReader

+###org/apache/flink/runtime/io/network/api/RecordWriter
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/runtime/io/network/api/ChannelSelector;)V
+#initializeSerializers()V
+#emit(Lorg/apache/flink/core/io/IOReadableWritable;)V
+#flush()V
+#broadcastEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#sendEndOfSuperstep()V
@0.7.0-hadoop2-incubating
+#clearBuffers()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/RecordWriter

+###org/apache/flink/runtime/io/network/api/Reader
@0.6-hadoop2-incubating
+#hasNext()Z
+#next()Lorg/apache/flink/core/io/IOReadableWritable;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/Reader

+###org/apache/flink/runtime/io/network/api/MutableUnionRecordReader
@0.6-hadoop2-incubating
+#<init>([Lorg/apache/flink/runtime/io/network/api/MutableRecordReader;)V
+#next(Lorg/apache/flink/core/io/IOReadableWritable;)Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/MutableUnionRecordReader

+###org/apache/flink/runtime/io/network/api/ReaderBase
@0.6-hadoop2-incubating
+#isInputClosed()Z
+#subscribeToEvent(Lorg/apache/flink/runtime/event/task/EventListener;Ljava/lang/Class;)V
+#unsubscribeFromEvent(Lorg/apache/flink/runtime/event/task/EventListener;Ljava/lang/Class;)V
+#publishEvent(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;)V
+#setIterative(I)V
+#startNextSuperstep()V
+#hasReachedEndOfSuperstep()Z
@0.8.0
+#publishEvent(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;I)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/ReaderBase

+###org/apache/flink/runtime/io/network/api/RecordReader
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/lang/Class;)V
+#hasNext()Z
+#next()Lorg/apache/flink/core/io/IOReadableWritable;
+#isInputClosed()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/RecordReader

+###org/apache/flink/runtime/io/network/api/UnionRecordReader
@0.6-hadoop2-incubating
+#<init>([Lorg/apache/flink/runtime/io/network/api/MutableRecordReader;Ljava/lang/Class;)V
+#hasNext()Z
+#next()Lorg/apache/flink/core/io/IOReadableWritable;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/UnionRecordReader

+###org/apache/flink/runtime/io/network/api/RoundRobinChannelSelector
@0.6-hadoop2-incubating
+#<init>()V
+#selectChannels(Lorg/apache/flink/core/io/IOReadableWritable;I)[I
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/RoundRobinChannelSelector

+###org/apache/flink/runtime/io/network/api/MutableRecordReader
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#next(Lorg/apache/flink/core/io/IOReadableWritable;)Z
+#isInputClosed()Z
+#setIterative(I)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/MutableRecordReader

+###org/apache/flink/runtime/io/network/api/ChannelSelector
@0.6-hadoop2-incubating
+#selectChannels(Lorg/apache/flink/core/io/IOReadableWritable;I)[I
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/ChannelSelector

+###org/apache/flink/runtime/io/network/api/AbstractRecordReader
@0.6-hadoop2-incubating
+#<init>()V
+#subscribeToEvent(Lorg/apache/flink/runtime/event/task/EventListener;Ljava/lang/Class;)V
+#unsubscribeFromEvent(Lorg/apache/flink/runtime/event/task/EventListener;Ljava/lang/Class;)V
+#setIterative(I)V
+#startNextSuperstep()V
+#hasReachedEndOfSuperstep()Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/AbstractRecordReader

+###org/apache/flink/runtime/io/network/api/BufferWriter
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#sendBuffer(Lorg/apache/flink/runtime/io/network/Buffer;I)V
+#sendEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;I)V
+#sendBufferAndEvent(Lorg/apache/flink/runtime/io/network/Buffer;Lorg/apache/flink/runtime/event/task/AbstractEvent;I)V
+#broadcastBuffer(Lorg/apache/flink/runtime/io/network/Buffer;)V
+#broadcastEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#subscribeToEvent(Lorg/apache/flink/runtime/event/task/EventListener;Ljava/lang/Class;)V
+#unsubscribeFromEvent(Lorg/apache/flink/runtime/event/task/EventListener;Ljava/lang/Class;)V
+#sendEndOfSuperstep()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/BufferWriter

+###org/apache/flink/runtime/io/network/api/MutableReader
@0.6-hadoop2-incubating
+#next(Lorg/apache/flink/core/io/IOReadableWritable;)Z
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/api/MutableReader

+###org/apache/flink/runtime/io/network/Envelope
@0.6-hadoop2-incubating
+#<init>(ILorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)V
+#duplicate()Lorg/apache/flink/runtime/io/network/Envelope;
+#duplicateWithoutBuffer()Lorg/apache/flink/runtime/io/network/Envelope;
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getSource()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#getSequenceNumber()I
+#setEventsSerialized(Ljava/nio/ByteBuffer;)V
+#serializeEventList(Ljava/util/List;)V
+#getEventsSerialized()Ljava/nio/ByteBuffer;
+#deserializeEvents()Ljava/util/List;
+#deserializeEvents(Ljava/lang/ClassLoader;)Ljava/util/List;
+#setBuffer(Lorg/apache/flink/runtime/io/network/Buffer;)V
+#getBuffer()Lorg/apache/flink/runtime/io/network/Buffer;
+#hasBuffer()Z
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/Envelope

+###org/apache/flink/runtime/io/network/InsufficientResourcesException
@0.6-hadoop2-incubating
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/InsufficientResourcesException

+###org/apache/flink/runtime/io/network/RemoteReceiver
@0.6-hadoop2-incubating
+#<init>(Ljava/net/InetSocketAddress;I)V
+#<init>()V
+#getConnectionAddress()Ljava/net/InetSocketAddress;
+#getConnectionIndex()I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/RemoteReceiver

+###org/apache/flink/runtime/io/network/EnvelopeReceiverList
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;)V
+#<init>(Lorg/apache/flink/runtime/io/network/channels/ChannelID;)V
+#<init>(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#hasLocalReceiver()Z
+#hasRemoteReceiver()Z
+#getTotalNumberOfReceivers()I
+#getRemoteReceiver()Lorg/apache/flink/runtime/io/network/RemoteReceiver;
+#getLocalReceiver()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/EnvelopeReceiverList

+###org/apache/flink/runtime/io/network/ConnectionInfoLookupResponse
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse$ReturnCode;)V
+#<init>(Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse$ReturnCode;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)V
+#<init>(Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse$ReturnCode;Lorg/apache/flink/runtime/io/network/RemoteReceiver;)V
+#getRemoteTarget()Lorg/apache/flink/runtime/io/network/RemoteReceiver;
+#getLocalTarget()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#receiverNotFound()Z
+#receiverNotReady()Z
+#receiverReady()Z
+#isJobAborting()Z
+#createReceiverFoundAndReady(Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;
+#createReceiverFoundAndReady(Lorg/apache/flink/runtime/io/network/RemoteReceiver;)Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;
+#createReceiverNotFound()Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;
+#createReceiverNotReady()Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;
+#createJobIsAborting()Lorg/apache/flink/runtime/io/network/ConnectionInfoLookupResponse;
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/ConnectionInfoLookupResponse

+###org/apache/flink/runtime/io/network/channels/Channel
@0.6-hadoop2-incubating
+#getIndex()I
+#getID()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#getConnectedId()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#registerEnvelopeDispatcher(Lorg/apache/flink/runtime/io/network/EnvelopeDispatcher;)V
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#isInputChannel()Z
+#isClosed()Z
+#transferEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#queueEnvelope(Lorg/apache/flink/runtime/io/network/Envelope;)V
+#releaseAllResources()V
+#destroy()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/channels/Channel

+###org/apache/flink/runtime/io/network/channels/EndOfSuperstepEvent
@0.6-hadoop2-incubating
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/channels/EndOfSuperstepEvent

+###org/apache/flink/runtime/io/network/channels/BufferOrEvent
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/Buffer;)V
+#<init>(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#isBuffer()Z
+#isEvent()Z
+#getBuffer()Lorg/apache/flink/runtime/io/network/Buffer;
+#getEvent()Lorg/apache/flink/runtime/event/task/AbstractEvent;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/channels/BufferOrEvent

+###org/apache/flink/runtime/io/network/channels/ChannelID
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(JJ)V
+#<init>([B)V
+#fromByteBuffer(Ljava/nio/ByteBuffer;)Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#fromByteBuffer(Ljava/nio/ByteBuffer;I)Lorg/apache/flink/runtime/io/network/channels/ChannelID;
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/AbstractID;)V
-#<init>([B)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/channels/ChannelID

+###org/apache/flink/runtime/io/network/channels/ChannelCloseEvent
@0.6-hadoop2-incubating
+#<init>()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/channels/ChannelCloseEvent

+###org/apache/flink/runtime/io/network/channels/ReceiverAlreadyClosedException
@0.6-hadoop2-incubating
+#<init>()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/channels/ReceiverAlreadyClosedException

+###org/apache/flink/runtime/io/network/channels/ChannelType
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/channels/ChannelType;
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/channels/ChannelType

+###org/apache/flink/runtime/io/network/channels/InputChannel
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/gates/InputGate;ILorg/apache/flink/runtime/io/network/channels/ChannelID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;Lorg/apache/flink/runtime/io/network/channels/ChannelType;)V
+#getInputGate()Lorg/apache/flink/runtime/io/network/gates/InputGate;
+#isInputChannel()Z
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#readRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/runtime/io/network/gates/InputChannelResult;
+#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#isClosed()Z
+#close()V
+#notifyGateThatInputIsAvailable()V
+#transferEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#reportIOException(Ljava/io/IOException;)V
+#releaseAllResources()V
+#notifyDataUnitConsumed()V
+#getCurrentEvent()Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;
+#queueEnvelope(Lorg/apache/flink/runtime/io/network/Envelope;)V
+#destroy()V
+#logQueuedEnvelopes()V
+#requestBuffer(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#requestBufferBlocking(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#getBufferSize()I
+#reportAsynchronousEvent()V
+#registerBufferAvailabilityListener(Lorg/apache/flink/runtime/io/network/bufferprovider/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration;
+#getNextBufferOrEvent()Lorg/apache/flink/runtime/io/network/channels/BufferOrEvent;
+#transferEventToOutputChannel(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/channels/InputChannel

+###org/apache/flink/runtime/io/network/channels/OutputChannel
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/gates/OutputGate;ILorg/apache/flink/runtime/io/network/channels/ChannelID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;Lorg/apache/flink/runtime/io/network/channels/ChannelType;)V
+#sendBuffer(Lorg/apache/flink/runtime/io/network/Buffer;)V
+#sendEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#sendBufferAndEvent(Lorg/apache/flink/runtime/io/network/Buffer;Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#queueEnvelope(Lorg/apache/flink/runtime/io/network/Envelope;)V
+#requestClose()V
+#isClosed()Z
+#waitForChannelToBeClosed()V
+#isInputChannel()Z
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#transferEvent(Lorg/apache/flink/runtime/event/task/AbstractEvent;)V
+#releaseAllResources()V
+#destroy()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/channels/OutputChannel

+###org/apache/flink/runtime/io/network/Buffer
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/core/memory/MemorySegment;ILorg/apache/flink/runtime/io/network/BufferRecycler;)V
+#getMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
+#size()I
+#limitSize(I)V
+#recycleBuffer()V
+#duplicate()Lorg/apache/flink/runtime/io/network/Buffer;
+#copyToBuffer(Lorg/apache/flink/runtime/io/network/Buffer;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/Buffer

+###org/apache/flink/runtime/io/network/ChannelManager
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/protocols/ChannelLookupProtocol;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;IILorg/apache/flink/runtime/io/network/NetworkConnectionManager;)V
+#shutdown()V
+#register(Lorg/apache/flink/runtime/taskmanager/Task;)V
+#unregister(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/taskmanager/Task;)V
+#invalidateLookupCacheEntries(Ljava/util/Set;)V
+#dispatchFromOutputChannel(Lorg/apache/flink/runtime/io/network/Envelope;)V
+#dispatchFromInputChannel(Lorg/apache/flink/runtime/io/network/Envelope;)V
+#dispatchFromNetwork(Lorg/apache/flink/runtime/io/network/Envelope;)V
+#getBufferProvider(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider;
+#logBufferUtilization()V
@0.7.0-hadoop2-incubating
+#getGlobalBufferPool()Lorg/apache/flink/runtime/io/network/bufferprovider/GlobalBufferPool;
+#unregister(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/taskmanager/Task;)V
-#unregister(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/taskmanager/Task;)V
@0.8.0
+#getNetworkConnectionManager()Lorg/apache/flink/runtime/io/network/NetworkConnectionManager;
+#verifyAllCachesEmpty()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/io/network/ChannelManager

+###org/apache/flink/runtime/io/disk/iomanager/Channel$ID
@0.6-hadoop2-incubating
+#getPath()Ljava/lang/String;
+#toString()Ljava/lang/String;
@0.8.0
-###org/apache/flink/runtime/io/disk/iomanager/Channel$ID

+###org/apache/flink/runtime/io/disk/iomanager/Channel
@0.6-hadoop2-incubating
+#<init>()V
@0.8.0
-###org/apache/flink/runtime/io/disk/iomanager/Channel

+###org/apache/flink/runtime/io/disk/iomanager/BlockChannelAccess
@0.6-hadoop2-incubating
+#getReturnQueue()Ljava/util/Collection;
+#isClosed()Z
+#close()V
+#closeAndDelete()V
@0.8.0
-###org/apache/flink/runtime/io/disk/iomanager/BlockChannelAccess

+###org/apache/flink/runtime/io/disk/iomanager/ChannelAccess
@0.6-hadoop2-incubating
+#isClosed()Z
+#getChannelID()Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;
+#checkErroneous()V
+#deleteChannel()V
@0.8.0
-###org/apache/flink/runtime/io/disk/iomanager/ChannelAccess

+###org/apache/flink/runtime/io/disk/iomanager/Channel$Enumerator
@0.6-hadoop2-incubating
+#next()Lorg/apache/flink/runtime/io/disk/iomanager/Channel$ID;
@0.8.0
-###org/apache/flink/runtime/io/disk/iomanager/Channel$Enumerator

+###org/apache/flink/runtime/profiling/TaskManagerProfiler
@0.6-hadoop2-incubating
+#registerExecutionListener(Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/configuration/Configuration;)V
+#unregisterExecutionListener(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)V
+#shutdown()V
@0.7.0-hadoop2-incubating
+#unregisterExecutionListener(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#unregisterExecutionListener(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)V
@0.9.0-milestone-1
+#registerTask(Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/configuration/Configuration;)V
+#unregisterTask(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#registerExecutionListener(Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/configuration/Configuration;)V
-#unregisterExecutionListener(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@0.9.0
-###org/apache/flink/runtime/profiling/TaskManagerProfiler

+###org/apache/flink/runtime/profiling/ProfilingException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
@0.9.0
-###org/apache/flink/runtime/profiling/ProfilingException

+###org/apache/flink/runtime/profiling/JobManagerProfiler
@0.6-hadoop2-incubating
+#registerProfilingJob(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#unregisterProfilingJob(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#registerForProfilingData(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/profiling/ProfilingListener;)V
+#unregisterFromProfilingData(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/profiling/ProfilingListener;)V
+#shutdown()V
@0.9.0-milestone-1
+#registerForProfilingData(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/profiling/ProfilingListener;)V
+#unregisterFromProfilingData(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/profiling/ProfilingListener;)V
-#registerForProfilingData(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/profiling/ProfilingListener;)V
-#unregisterFromProfilingData(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/profiling/ProfilingListener;)V
@0.9.0
-###org/apache/flink/runtime/profiling/JobManagerProfiler

+###org/apache/flink/runtime/profiling/types/ThreadProfilingEvent
@0.6-hadoop2-incubating
+#<init>(IIIILorg/apache/flink/runtime/managementgraph/ManagementVertexID;ILorg/apache/flink/runtime/jobgraph/JobID;JJ)V
+#<init>()V
+#getUserTime()I
+#getSystemTime()I
+#getBlockedTime()I
+#getWaitedTime()I
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.7.0-hadoop2-incubating
+#<init>(IIIILorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ILorg/apache/flink/runtime/jobgraph/JobID;JJ)V
-#<init>(IIIILorg/apache/flink/runtime/managementgraph/ManagementVertexID;ILorg/apache/flink/runtime/jobgraph/JobID;JJ)V
-#hashCode()I
@0.9.0-milestone-1
+#<init>(IIIILorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ILorg/apache/flink/api/common/JobID;JJ)V
-#<init>(IIIILorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ILorg/apache/flink/runtime/jobgraph/JobID;JJ)V
@0.9.0
-###org/apache/flink/runtime/profiling/types/ThreadProfilingEvent

+###org/apache/flink/runtime/profiling/types/ProfilingEvent
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;JJ)V
+#<init>()V
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getProfilingTimestamp()J
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;JJ)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;JJ)V
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
@0.9.0
-###org/apache/flink/runtime/profiling/types/ProfilingEvent

+###org/apache/flink/runtime/profiling/types/InstanceProfilingEvent
@0.6-hadoop2-incubating
+#<init>(IIIIIIIJJJJJJJLorg/apache/flink/runtime/jobgraph/JobID;JJ)V
+#<init>()V
+#getProfilingInterval()I
+#getTotalMemory()J
+#getFreeMemory()J
+#getBufferedMemory()J
+#getCachedMemory()J
+#getCachedSwapMemory()J
+#getUserCPU()I
+#getSystemCPU()I
+#getIdleCPU()I
+#getIOWaitCPU()I
+#getHardIrqCPU()I
+#getSoftIrqCPU()I
+#getReceivedBytes()J
+#getTransmittedBytes()J
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.9.0-milestone-1
+#<init>(IIIIIIIJJJJJJJLorg/apache/flink/api/common/JobID;JJ)V
-#<init>(IIIIIIIJJJJJJJLorg/apache/flink/runtime/jobgraph/JobID;JJ)V
@0.9.0
-###org/apache/flink/runtime/profiling/types/InstanceProfilingEvent

+###org/apache/flink/runtime/profiling/types/InstanceSummaryProfilingEvent
@0.6-hadoop2-incubating
+#<init>(IIIIIIIJJJJJJJLorg/apache/flink/runtime/jobgraph/JobID;JJ)V
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.7.0-hadoop2-incubating
-#hashCode()I
@0.9.0-milestone-1
+#<init>(IIIIIIIJJJJJJJLorg/apache/flink/api/common/JobID;JJ)V
-#<init>(IIIIIIIJJJJJJJLorg/apache/flink/runtime/jobgraph/JobID;JJ)V
@0.9.0
-###org/apache/flink/runtime/profiling/types/InstanceSummaryProfilingEvent

+###org/apache/flink/runtime/profiling/types/VertexProfilingEvent
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;ILorg/apache/flink/runtime/jobgraph/JobID;JJ)V
+#<init>()V
+#getVertexID()Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;
+#getProfilingInterval()I
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ILorg/apache/flink/runtime/jobgraph/JobID;JJ)V
+#getVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getSubtask()I
+#getExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#hashCode()I
-#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;ILorg/apache/flink/runtime/jobgraph/JobID;JJ)V
-#getVertexID()Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ILorg/apache/flink/api/common/JobID;JJ)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ILorg/apache/flink/runtime/jobgraph/JobID;JJ)V
@0.9.0
-###org/apache/flink/runtime/profiling/types/VertexProfilingEvent

+###org/apache/flink/runtime/profiling/types/SingleInstanceProfilingEvent
@0.6-hadoop2-incubating
+#<init>(IIIIIIIJJJJJJJLorg/apache/flink/runtime/jobgraph/JobID;JJLjava/lang/String;)V
+#<init>()V
+#getInstanceName()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.9.0-milestone-1
+#<init>(IIIIIIIJJJJJJJLorg/apache/flink/api/common/JobID;JJLjava/lang/String;)V
-#<init>(IIIIIIIJJJJJJJLorg/apache/flink/runtime/jobgraph/JobID;JJLjava/lang/String;)V
@0.9.0
-###org/apache/flink/runtime/profiling/types/SingleInstanceProfilingEvent

+###org/apache/flink/runtime/profiling/impl/JobProfilingData
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#getProfilingStart()J
+#getExecutionGraph()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#instanceAllocatedByJob(Lorg/apache/flink/runtime/profiling/impl/types/InternalInstanceProfilingData;)Z
+#getInstanceSummaryProfilingData(J)Lorg/apache/flink/runtime/profiling/types/InstanceSummaryProfilingEvent;
@0.7.0-hadoop2-incubating
+#addIfInstanceIsAllocatedByJob(Lorg/apache/flink/runtime/profiling/impl/types/InternalInstanceProfilingData;)Z
-#instanceAllocatedByJob(Lorg/apache/flink/runtime/profiling/impl/types/InternalInstanceProfilingData;)Z
@0.9.0
-###org/apache/flink/runtime/profiling/impl/JobProfilingData

+###org/apache/flink/runtime/profiling/impl/EnvironmentThreadSet
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/management/ThreadMXBean;Ljava/lang/Thread;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)V
+#getMainThread()Ljava/lang/Thread;
+#addUserThread(Ljava/lang/management/ThreadMXBean;Ljava/lang/Thread;)V
+#removeUserThread(Ljava/lang/Thread;)V
+#getNumberOfUserThreads()I
+#captureCPUUtilization(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/management/ThreadMXBean;J)Lorg/apache/flink/runtime/profiling/impl/types/InternalExecutionVertexThreadProfilingData;
@0.7.0-hadoop2-incubating
+#<init>(Ljava/lang/management/ThreadMXBean;Ljava/lang/Thread;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#<init>(Ljava/lang/management/ThreadMXBean;Ljava/lang/Thread;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)V
@0.9.0-milestone-1
+#captureCPUUtilization(Lorg/apache/flink/api/common/JobID;Ljava/lang/management/ThreadMXBean;J)Lorg/apache/flink/runtime/profiling/impl/types/InternalExecutionVertexThreadProfilingData;
-#captureCPUUtilization(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/management/ThreadMXBean;J)Lorg/apache/flink/runtime/profiling/impl/types/InternalExecutionVertexThreadProfilingData;
@0.9.0
-###org/apache/flink/runtime/profiling/impl/EnvironmentThreadSet

+###org/apache/flink/runtime/profiling/impl/ProfilerImplProtocol
@0.6-hadoop2-incubating
+#reportProfilingData(Lorg/apache/flink/runtime/profiling/impl/types/ProfilingDataContainer;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/profiling/impl/ProfilerImplProtocol

+###org/apache/flink/runtime/profiling/impl/EnvironmentListenerImpl
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/profiling/impl/TaskManagerProfilerImpl;Lorg/apache/flink/runtime/execution/RuntimeEnvironment;)V
+#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#userThreadFinished(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
+#userThreadStarted(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
+#getPriority()I
@0.7.0-hadoop2-incubating
+#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
-#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
-#userThreadFinished(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
-#userThreadStarted(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
-#getPriority()I
@0.9.0-milestone-1
-###org/apache/flink/runtime/profiling/impl/EnvironmentListenerImpl

+###org/apache/flink/runtime/profiling/impl/InstanceProfiler
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)V
+#generateCheckpointProfilingData()Lorg/apache/flink/runtime/profiling/impl/types/InternalInstanceProfilingData;
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;)V
+#generateProfilingData(J)Lorg/apache/flink/runtime/profiling/impl/types/InternalInstanceProfilingData;
-#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)V
@0.9.0
-###org/apache/flink/runtime/profiling/impl/InstanceProfiler

+###org/apache/flink/runtime/profiling/impl/types/InternalExecutionVertexProfilingData
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)V
+#getExecutionVertexID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#getVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getSubtask()I
+#getExecutionAttemptId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)V
-#getExecutionVertexID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
@0.9.0
-###org/apache/flink/runtime/profiling/impl/types/InternalExecutionVertexProfilingData

+###org/apache/flink/runtime/profiling/impl/types/ProfilingDataContainer
@0.6-hadoop2-incubating
+#<init>()V
+#addProfilingData(Lorg/apache/flink/runtime/profiling/impl/types/InternalProfilingData;)V
+#clear()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#size()I
+#isEmpty()Z
+#getIterator()Ljava/util/Iterator;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.9.0
-###org/apache/flink/runtime/profiling/impl/types/ProfilingDataContainer

+###org/apache/flink/runtime/profiling/impl/types/InternalExecutionVertexThreadProfilingData
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;IIIII)V
+#<init>()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getBlockedTime()I
+#getProfilingInterval()I
+#getSystemTime()I
+#getUserTime()I
+#getWaitedTime()I
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;IIIII)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;IIIII)V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;IIIII)V
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;IIIII)V
@0.9.0
-###org/apache/flink/runtime/profiling/impl/types/InternalExecutionVertexThreadProfilingData

+###org/apache/flink/runtime/profiling/impl/types/InternalInstanceProfilingData
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;I)V
+#getFreeMemory()J
+#getIOWaitCPU()I
+#getIdleCPU()I
+#getHardIrqCPU()I
+#getSoftIrqCPU()I
+#getInstanceConnectionInfo()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
+#getProfilingInterval()I
+#getSystemCPU()I
+#getTotalMemory()J
+#getBufferedMemory()J
+#getCachedMemory()J
+#getCachedSwapMemory()J
+#getUserCPU()I
+#getReceivedBytes()J
+#getTransmittedBytes()J
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#setFreeMemory(J)V
+#setIoWaitCPU(I)V
+#setIdleCPU(I)V
+#setSystemCPU(I)V
+#setHardIrqCPU(I)V
+#setSoftIrqCPU(I)V
+#setTotalMemory(J)V
+#setBufferedMemory(J)V
+#setCachedMemory(J)V
+#setCachedSwapMemory(J)V
+#setUserCPU(I)V
+#setReceivedBytes(J)V
+#setTransmittedBytes(J)V
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;I)V
+#getInstancePath()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;I)V
-#getInstanceConnectionInfo()Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;
@0.9.0
-###org/apache/flink/runtime/profiling/impl/types/InternalInstanceProfilingData

+###org/apache/flink/runtime/profiling/impl/types/InternalProfilingData
@0.6-hadoop2-incubating
@0.9.0
-###org/apache/flink/runtime/profiling/impl/types/InternalProfilingData

+###org/apache/flink/runtime/profiling/impl/JobManagerProfilerImpl
@0.6-hadoop2-incubating
+#<init>(Ljava/net/InetAddress;)V
+#registerProfilingJob(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#unregisterProfilingJob(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#shutdown()V
+#reportProfilingData(Lorg/apache/flink/runtime/profiling/impl/types/ProfilingDataContainer;)V
+#registerForProfilingData(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/profiling/ProfilingListener;)V
+#unregisterFromProfilingData(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/profiling/ProfilingListener;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/profiling/impl/JobManagerProfilerImpl

+###org/apache/flink/runtime/profiling/impl/TaskManagerProfilerImpl
@0.6-hadoop2-incubating
+#<init>(Ljava/net/InetAddress;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)V
+#registerExecutionListener(Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/configuration/Configuration;)V
+#unregisterExecutionListener(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)V
+#shutdown()V
+#run()V
+#registerMainThreadForCPUProfiling(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/Thread;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)V
+#registerUserThreadForCPUProfiling(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/Thread;)V
+#unregisterMainThreadFromCPUProfiling(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/Thread;)V
+#unregisterUserThreadFromCPUProfiling(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/Thread;)V
@0.7.0-hadoop2-incubating
+#unregisterExecutionListener(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#registerMainThreadForCPUProfiling(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/Thread;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#unregisterExecutionListener(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)V
-#registerMainThreadForCPUProfiling(Lorg/apache/flink/runtime/execution/Environment;Ljava/lang/Thread;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/profiling/impl/TaskManagerProfilerImpl

+###org/apache/flink/runtime/profiling/ProfilingListener
@0.6-hadoop2-incubating
+#processProfilingEvents(Lorg/apache/flink/runtime/profiling/types/ProfilingEvent;)V
@0.9.0
-###org/apache/flink/runtime/profiling/ProfilingListener

+###org/apache/flink/runtime/profiling/ProfilingUtils
@0.6-hadoop2-incubating
+#<init>()V
+#loadJobManagerProfiler(Ljava/lang/String;Ljava/net/InetAddress;)Lorg/apache/flink/runtime/profiling/JobManagerProfiler;
+#loadTaskManagerProfiler(Ljava/lang/String;Ljava/net/InetAddress;Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)Lorg/apache/flink/runtime/profiling/TaskManagerProfiler;
@0.9.0
-###org/apache/flink/runtime/profiling/ProfilingUtils

+###org/apache/flink/runtime/taskmanager/TaskOperationResult
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Z)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;ZLjava/lang/String;)V
+#getExecutionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#isSuccess()Z
+#getDescription()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
-###org/apache/flink/runtime/taskmanager/TaskOperationResult

+###org/apache/flink/runtime/AbstractID
@0.6-hadoop2-incubating
+#<init>([B)V
+#<init>(JJ)V
+#<init>(Lorg/apache/flink/runtime/AbstractID;)V
+#<init>()V
+#setID(Lorg/apache/flink/runtime/AbstractID;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#write(Ljava/nio/ByteBuffer;)V
+#writeTo(Lio/netty/buffer/ByteBuf;)V
+#toString()Ljava/lang/String;
@0.7.0-hadoop2-incubating
+#getLowerPart()J
+#getUpperPart()J
+#compareTo(Lorg/apache/flink/runtime/AbstractID;)I
+#compareTo(Ljava/lang/Object;)I
-#setID(Lorg/apache/flink/runtime/AbstractID;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/AbstractID

+###org/apache/flink/runtime/memorymanager/MemoryManager
@0.6-hadoop2-incubating
+#allocatePages(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;I)Ljava/util/List;
+#allocatePages(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/util/List;I)V
+#release(Lorg/apache/flink/core/memory/MemorySegment;)V
+#release(Ljava/util/Collection;)V
+#releaseAll(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#getPageSize()I
+#getMemorySize()J
+#computeNumberOfPages(D)I
+#computeMemorySize(D)J
+#roundDownToPageSizeMultiple(J)J
+#shutdown()V
+#verifyEmpty()Z
@0.9.0-milestone-1
+#isShutdown()Z
@0.10.0
-###org/apache/flink/runtime/memorymanager/MemoryManager

+###org/apache/flink/runtime/memorymanager/MemoryAllocationException
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@0.10.0
-###org/apache/flink/runtime/memorymanager/MemoryAllocationException

+###org/apache/flink/runtime/memorymanager/ListMemorySegmentSource
@0.6-hadoop2-incubating
+#<init>(Ljava/util/List;)V
+#nextSegment()Lorg/apache/flink/core/memory/MemorySegment;
@0.10.0
-###org/apache/flink/runtime/memorymanager/ListMemorySegmentSource

+###org/apache/flink/runtime/memorymanager/CheckedMemorySegment
@0.6-hadoop2-incubating
+#<init>([B)V
+#isFreed()Z
+#size()I
+#getBackingArray()[B
+#translateOffset(I)I
+#wrap(II)Ljava/nio/ByteBuffer;
+#get(I)B
+#put(IB)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#get(I[B)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#put(I[B)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#get(I[BII)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#put(I[BII)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#get(Ljava/io/DataOutput;II)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#put(Ljava/io/DataInput;II)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#getBoolean(I)Z
+#putBoolean(IZ)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#getChar(I)C
+#putChar(IC)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#getShort(I)S
+#putShort(IS)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#getInt(I)I
+#getIntLittleEndian(I)I
+#getIntBigEndian(I)I
+#putInt(II)V
+#putIntLittleEndian(II)V
+#putIntBigEndian(II)V
+#getLong(I)J
+#getLongLittleEndian(I)J
+#getLongBigEndian(I)J
+#putLong(IJ)V
+#putLongLittleEndian(IJ)V
+#putLongBigEndian(IJ)V
+#getFloat(I)F
+#putFloat(IF)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
+#getDouble(I)D
+#putDouble(ID)Lorg/apache/flink/runtime/memorymanager/CheckedMemorySegment;
@0.10.0
-###org/apache/flink/runtime/memorymanager/CheckedMemorySegment

+###org/apache/flink/runtime/memorymanager/AbstractPagedInputView
@0.6-hadoop2-incubating
+#getCurrentSegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getCurrentPositionInSegment()I
+#getCurrentSegmentLimit()I
+#read([B)I
+#read([BII)I
+#readFully([B)V
+#readFully([BII)V
+#readBoolean()Z
+#readByte()B
+#readUnsignedByte()I
+#readShort()S
+#readUnsignedShort()I
+#readChar()C
+#readInt()I
+#readLong()J
+#readFloat()F
+#readDouble()D
+#readLine()Ljava/lang/String;
+#readUTF()Ljava/lang/String;
+#skipBytes(I)I
+#skipBytesToRead(I)V
@0.10.0
-###org/apache/flink/runtime/memorymanager/AbstractPagedInputView

+###org/apache/flink/runtime/memorymanager/AbstractPagedOutputView
@0.6-hadoop2-incubating
+#getCurrentSegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getCurrentPositionInSegment()I
+#getSegmentSize()I
+#write(I)V
+#write([B)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeShort(I)V
+#writeChar(I)V
+#writeInt(I)V
+#writeLong(J)V
+#writeFloat(F)V
+#writeDouble(D)V
+#writeBytes(Ljava/lang/String;)V
+#writeChars(Ljava/lang/String;)V
+#writeUTF(Ljava/lang/String;)V
+#skipBytesToWrite(I)V
+#write(Lorg/apache/flink/core/memory/DataInputView;I)V
@0.10.0
-###org/apache/flink/runtime/memorymanager/AbstractPagedOutputView

+###org/apache/flink/runtime/memorymanager/SimpleMemorySegment
@0.6-hadoop2-incubating
+#<init>([B)V
+#isFreed()Z
+#size()I
+#getBackingArray()[B
+#translateOffset(I)I
+#wrap(II)Ljava/nio/ByteBuffer;
+#get(I)B
+#put(IB)V
+#get(I[B)V
+#put(I[B)V
+#get(I[BII)V
+#put(I[BII)V
+#get(Ljava/io/DataOutput;II)V
+#put(Ljava/io/DataInput;II)V
+#getBoolean(I)Z
+#putBoolean(IZ)V
+#getChar(I)C
+#putChar(IC)V
+#getShort(I)S
+#putShort(IS)V
+#getInt(I)I
+#getIntLittleEndian(I)I
+#getIntBigEndian(I)I
+#putInt(II)V
+#putIntLittleEndian(II)V
+#putIntBigEndian(II)V
+#getLong(I)J
+#getLongLittleEndian(I)J
+#getLongBigEndian(I)J
+#putLong(IJ)V
+#putLongLittleEndian(IJ)V
+#putLongBigEndian(IJ)V
+#getFloat(I)F
+#putFloat(IF)V
+#getDouble(I)D
+#putDouble(ID)V
@0.10.0
-###org/apache/flink/runtime/memorymanager/SimpleMemorySegment

+###org/apache/flink/runtime/memorymanager/UnsafeMemorySegment
@0.6-hadoop2-incubating
+#<init>([B)V
+#isFreed()Z
+#size()I
+#getBackingArray()[B[deprecated]
+#translateOffset(I)I[deprecated]
+#wrap(II)Ljava/nio/ByteBuffer;
+#get(I)B
+#put(IB)V
+#get(I[B)V
+#put(I[B)V
+#get(I[BII)V
+#put(I[BII)V
+#get(Ljava/io/DataOutput;II)V
+#put(Ljava/io/DataInput;II)V
+#getBoolean(I)Z
+#putBoolean(IZ)V
+#getChar(I)C
+#putChar(IC)V
+#getShort(I)S
+#putShort(IS)V
+#getInt(I)I
+#getIntLittleEndian(I)I
+#getIntBigEndian(I)I
+#putInt(II)V
+#putIntLittleEndian(II)V
+#putIntBigEndian(II)V
+#getLong(I)J
+#getLongLittleEndian(I)J
+#getLongBigEndian(I)J
+#putLong(IJ)V
+#putLongLittleEndian(IJ)V
+#putLongBigEndian(IJ)V
+#getFloat(I)F
+#getFloatLittleEndian(I)F
+#getFloatBigEndian(I)F
+#putFloat(IF)V
+#putFloatLittleEndian(IF)V
+#putFloatBigEndian(IF)V
+#getDouble(I)D
+#getDoubleLittleEndian(I)D
+#getDoubleBigEndian(I)D
+#putDouble(ID)V
+#putDoubleLittleEndian(ID)V
+#putDoubleBigEndian(ID)V
@0.10.0
-###org/apache/flink/runtime/memorymanager/UnsafeMemorySegment

+###org/apache/flink/runtime/memorymanager/DefaultMemoryManager
@0.6-hadoop2-incubating
+#<init>(JI)V
+#<init>(JII)V
+#shutdown()V
+#verifyEmpty()Z
+#allocatePages(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;I)Ljava/util/List;
+#allocatePages(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Ljava/util/List;I)V
+#release(Lorg/apache/flink/core/memory/MemorySegment;)V
+#release(Ljava/util/Collection;)V
+#releaseAll(Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#getPageSize()I
+#getMemorySize()J
+#computeNumberOfPages(D)I
+#computeMemorySize(D)J
+#roundDownToPageSizeMultiple(J)J
@0.9.0-milestone-1
+#isShutdown()Z
@0.9.0
+#<init>(JIIZ)V
-#<init>(JII)V
@0.10.0
-###org/apache/flink/runtime/memorymanager/DefaultMemoryManager

+###org/apache/flink/runtime/ExecutionMode
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/ExecutionMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/ExecutionMode;
@0.9.0-milestone-1
-###org/apache/flink/runtime/ExecutionMode

+###org/apache/flink/runtime/instance/LocalInstanceManager
@0.6-hadoop2-incubating
+#<init>()V
+#shutdown()V
@0.7.0-hadoop2-incubating
+#<init>(I)V
+#getTaskManagers()[Lorg/apache/flink/runtime/taskmanager/TaskManager;
-#<init>()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/instance/LocalInstanceManager

+###org/apache/flink/runtime/instance/AllocatedSlot
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#getAllocationID()Lorg/apache/flink/runtime/instance/AllocationID;
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/instance/Instance;I)V
+#getInstance()Lorg/apache/flink/runtime/instance/Instance;
+#getSlotNumber()I
+#getExecutedVertex()Lorg/apache/flink/runtime/executiongraph/Execution;
+#getLocality()Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;
+#setLocality(Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;)V
+#setExecutedVertex(Lorg/apache/flink/runtime/executiongraph/Execution;)Z
+#isAlive()Z
+#isCanceled()Z
+#isReleased()Z
+#cancel()V
+#releaseSlot()V
+#toString()Ljava/lang/String;
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;)V
-#getAllocationID()Lorg/apache/flink/runtime/instance/AllocationID;
@0.8.1
-###org/apache/flink/runtime/instance/AllocatedSlot

+###org/apache/flink/runtime/accumulators/AccumulatorEvent
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Map;)V
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getAccumulators(Ljava/lang/ClassLoader;)Ljava/util/Map;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
-#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Map;)V
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
@0.9.0
-#<init>()V
-#getAccumulators(Ljava/lang/ClassLoader;)Ljava/util/Map;
@0.10.0
-###org/apache/flink/runtime/accumulators/AccumulatorEvent

+###org/apache/flink/runtime/iterative/task/IterationTailPactTask
@0.6-hadoop2-incubating
+#<init>()V
+#run()V
@0.10.0
-###org/apache/flink/runtime/iterative/task/IterationTailPactTask

+###org/apache/flink/runtime/iterative/task/IterationIntermediatePactTask
@0.6-hadoop2-incubating
+#<init>()V
+#run()V
@0.10.0
-###org/apache/flink/runtime/iterative/task/IterationIntermediatePactTask

+###org/apache/flink/runtime/iterative/task/AbstractIterativePactTask
@0.6-hadoop2-incubating
+#<init>()V
+#run()V
+#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/udf/RuntimeUDFContext;
+#brokerKey()Ljava/lang/String;
+#getIterationAggregators()Lorg/apache/flink/runtime/iterative/task/RuntimeAggregatorRegistry;
+#terminationRequested()Z
+#requestTermination()V
+#cancel()V
@0.7.0-hadoop2-incubating
+#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/api/common/functions/util/RuntimeUDFContext;
-#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/udf/RuntimeUDFContext;
@0.8.0
+#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/runtime/operators/util/DistributedRuntimeUDFContext;
-#createRuntimeContext(Ljava/lang/String;)Lorg/apache/flink/api/common/functions/util/RuntimeUDFContext;
@0.10.0
-###org/apache/flink/runtime/iterative/task/AbstractIterativePactTask

+###org/apache/flink/runtime/iterative/task/IterationHeadPactTask
@0.6-hadoop2-incubating
+#<init>()V
+#run()V
@0.10.0
-###org/apache/flink/runtime/iterative/task/IterationHeadPactTask

+###org/apache/flink/runtime/util/KeyGroupedIteratorImmutable$ValuesIterator
@0.7.0-hadoop2-incubating
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#iterator()Ljava/util/Iterator;
@0.9.0-milestone-1
-###org/apache/flink/runtime/util/KeyGroupedIteratorImmutable$ValuesIterator

+###org/apache/flink/runtime/util/KeyGroupedMutableObjectIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#nextKey()Z
+#getValues()Lorg/apache/flink/util/MutableObjectIterator;
@0.9.0-milestone-1
-###org/apache/flink/runtime/util/KeyGroupedMutableObjectIterator

+###org/apache/flink/runtime/util/EnumUtils
@0.6-hadoop2-incubating
+#readEnum(Ljava/io/DataInput;Ljava/lang/Class;)Ljava/lang/Enum;
+#writeEnum(Ljava/io/DataOutput;Ljava/lang/Enum;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/util/EnumUtils

+###org/apache/flink/runtime/util/MutableToRegularIteratorWrapper
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#iterator()Ljava/util/Iterator;
@0.9.0-milestone-1
-###org/apache/flink/runtime/util/MutableToRegularIteratorWrapper

+###org/apache/flink/runtime/util/BufferPoolConnector
@0.6-hadoop2-incubating
+#<init>(Ljava/util/Queue;)V
+#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/util/BufferPoolConnector

+###org/apache/flink/runtime/util/UnmodifiableIterator
@0.6-hadoop2-incubating
+#<init>(Ljava/util/Iterator;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/util/UnmodifiableIterator

+###org/apache/flink/runtime/util/KeyGroupedIteratorImmutable
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#nextKey()Z
+#getCurrent()Ljava/lang/Object;
+#getComparatorWithCurrentReference()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#getValues()Lorg/apache/flink/runtime/util/KeyGroupedIteratorImmutable$ValuesIterator;
@0.9.0-milestone-1
-###org/apache/flink/runtime/util/KeyGroupedIteratorImmutable

+###org/apache/flink/runtime/util/KeyGroupedIterator$ValuesIterator
@0.6-hadoop2-incubating
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#iterator()Ljava/util/Iterator;
@0.9.0-milestone-1
-###org/apache/flink/runtime/util/KeyGroupedIterator$ValuesIterator

+###org/apache/flink/runtime/net/SocketInputStream
@0.6-hadoop2-incubating
+#<init>(Ljava/nio/channels/ReadableByteChannel;J)V
+#<init>(Ljava/net/Socket;J)V
+#<init>(Ljava/net/Socket;)V
+#read()I
+#read([BII)I
+#close()V
+#getChannel()Ljava/nio/channels/ReadableByteChannel;
+#isOpen()Z
+#read(Ljava/nio/ByteBuffer;)I
+#waitForReadable()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/net/SocketInputStream

+###org/apache/flink/runtime/net/NetUtils
@0.6-hadoop2-incubating
+#<init>()V
+#getSocketFactory()Ljavax/net/SocketFactory;
+#getDefaultSocketFactory()Ljavax/net/SocketFactory;
+#createSocketAddr(Ljava/lang/String;)Ljava/net/InetSocketAddress;
+#createSocketAddr(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
+#addStaticResolution(Ljava/lang/String;Ljava/lang/String;)V
+#getStaticResolution(Ljava/lang/String;)Ljava/lang/String;
+#getAllStaticResolutions()Ljava/util/List;
+#getConnectAddress(Lorg/apache/flink/runtime/ipc/Server;)Ljava/net/InetSocketAddress;
+#getInputStream(Ljava/net/Socket;)Ljava/io/InputStream;
+#getInputStream(Ljava/net/Socket;J)Ljava/io/InputStream;
+#getOutputStream(Ljava/net/Socket;)Ljava/io/OutputStream;
+#getOutputStream(Ljava/net/Socket;J)Ljava/io/OutputStream;
+#connect(Ljava/net/Socket;Ljava/net/SocketAddress;I)V
+#normalizeHostName(Ljava/lang/String;)Ljava/lang/String;
+#normalizeHostNames(Ljava/util/Collection;)Ljava/util/List;
@0.9.0-milestone-1
+#resolveAddress(Ljava/net/InetSocketAddress;)Ljava/net/InetAddress;
+#findConnectingAddress(Ljava/net/InetSocketAddress;JJ)Ljava/net/InetAddress;
+#getAvailablePort()I
-#getSocketFactory()Ljavax/net/SocketFactory;
-#getDefaultSocketFactory()Ljavax/net/SocketFactory;
-#createSocketAddr(Ljava/lang/String;)Ljava/net/InetSocketAddress;
-#createSocketAddr(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
-#addStaticResolution(Ljava/lang/String;Ljava/lang/String;)V
-#getStaticResolution(Ljava/lang/String;)Ljava/lang/String;
-#getAllStaticResolutions()Ljava/util/List;
-#getConnectAddress(Lorg/apache/flink/runtime/ipc/Server;)Ljava/net/InetSocketAddress;
-#getInputStream(Ljava/net/Socket;)Ljava/io/InputStream;
-#getInputStream(Ljava/net/Socket;J)Ljava/io/InputStream;
-#getOutputStream(Ljava/net/Socket;)Ljava/io/OutputStream;
-#getOutputStream(Ljava/net/Socket;J)Ljava/io/OutputStream;
-#connect(Ljava/net/Socket;Ljava/net/SocketAddress;I)V
-#normalizeHostName(Ljava/lang/String;)Ljava/lang/String;
-#normalizeHostNames(Ljava/util/Collection;)Ljava/util/List;
@0.10.0
-###org/apache/flink/runtime/net/NetUtils

+###org/apache/flink/runtime/net/SocketOutputStream
@0.6-hadoop2-incubating
+#<init>(Ljava/nio/channels/WritableByteChannel;J)V
+#<init>(Ljava/net/Socket;J)V
+#write(I)V
+#write([BII)V
+#close()V
+#getChannel()Ljava/nio/channels/WritableByteChannel;
+#isOpen()Z
+#write(Ljava/nio/ByteBuffer;)I
+#waitForWritable()V
+#transferToFully(Ljava/nio/channels/FileChannel;JI)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/net/SocketOutputStream

+###org/apache/flink/runtime/event/task/AbstractEvent
@0.6-hadoop2-incubating
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/event/task/AbstractEvent

+###org/apache/flink/runtime/event/task/IntegerTaskEvent
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(I)V
+#getInteger()I
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.10.0
-###org/apache/flink/runtime/event/task/IntegerTaskEvent

+###org/apache/flink/runtime/event/task/EventList
@0.6-hadoop2-incubating
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/event/task/EventList

+###org/apache/flink/runtime/event/task/StringTaskEvent
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getString()Ljava/lang/String;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.10.0
-###org/apache/flink/runtime/event/task/StringTaskEvent

+###org/apache/flink/runtime/event/task/AbstractTaskEvent
@0.6-hadoop2-incubating
+#<init>()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/event/task/AbstractTaskEvent

+###org/apache/flink/runtime/event/task/EventNotificationManager
@0.6-hadoop2-incubating
+#<init>()V
+#subscribeToEvent(Lorg/apache/flink/runtime/event/task/EventListener;Ljava/lang/Class;)V
+#unsubscribeFromEvent(Lorg/apache/flink/runtime/event/task/EventListener;Ljava/lang/Class;)V
+#deliverEvent(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/event/task/EventNotificationManager

+###org/apache/flink/runtime/event/task/EventListener
@0.6-hadoop2-incubating
+#eventOccurred(Lorg/apache/flink/runtime/event/task/AbstractTaskEvent;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/event/task/EventListener

+###org/apache/flink/runtime/event/job/ManagementEvent
@0.6-hadoop2-incubating
@0.9.0-milestone-1
-###org/apache/flink/runtime/event/job/ManagementEvent

+###org/apache/flink/runtime/event/job/AbstractEvent
@0.6-hadoop2-incubating
+#<init>(J)V
+#getSequenceNumber()J
+#<init>()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getTimestamp()J
+#timestampToString(J)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.7.0-hadoop2-incubating
+#getTimestampString()Ljava/lang/String;
+#toString()Ljava/lang/String;
@0.10.0
-###org/apache/flink/runtime/event/job/AbstractEvent

+###org/apache/flink/runtime/event/job/JobEvent
@0.6-hadoop2-incubating
+#<init>(JLorg/apache/flink/runtime/jobgraph/JobStatus;Ljava/lang/String;)V
+#<init>()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getCurrentJobStatus()Lorg/apache/flink/runtime/jobgraph/JobStatus;
+#getOptionalMessage()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.9.0-milestone-1
-###org/apache/flink/runtime/event/job/JobEvent

+###org/apache/flink/runtime/event/job/RecentJobEvent
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobStatus;ZJJ)V
+#<init>()V
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getJobName()Ljava/lang/String;
+#isProfilingAvailable()Z
+#getJobStatus()Lorg/apache/flink/runtime/jobgraph/JobStatus;
+#getSubmissionTimestamp()J
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.7.0-hadoop2-incubating
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
-###org/apache/flink/runtime/event/job/RecentJobEvent

+###org/apache/flink/runtime/event/job/VertexEvent
@0.6-hadoop2-incubating
+#<init>(JLorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;IILorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#<init>()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getJobVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getJobVertexName()Ljava/lang/String;
+#getTotalNumberOfSubtasks()I
+#getIndexOfSubtask()I
+#getCurrentExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#getDescription()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.7.0-hadoop2-incubating
+#<init>(JLorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;IILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#getExecutionAttemptId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
-#<init>(JLorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/String;IILorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/event/job/VertexEvent

+###org/apache/flink/runtime/event/job/ExecutionStateChangeEvent
@0.6-hadoop2-incubating
+#<init>(JLorg/apache/flink/runtime/managementgraph/ManagementVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#<init>()V
+#getVertexID()Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;
+#getNewExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.7.0-hadoop2-incubating
+#<init>(JLorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#getVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getSubtaskIndex()I
+#getExecutionAttemptID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#toString()Ljava/lang/String;
-#<init>(JLorg/apache/flink/runtime/managementgraph/ManagementVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
-#getVertexID()Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;
@0.9.0-milestone-1
-###org/apache/flink/runtime/event/job/ExecutionStateChangeEvent

+###org/apache/flink/runtime/jobmanager/web/JobmanagerInfoServlet
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.8.1
-###org/apache/flink/runtime/jobmanager/web/JobmanagerInfoServlet

+###org/apache/flink/runtime/jobmanager/web/WebInfoServer
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/configuration/Configuration;ILorg/apache/flink/runtime/jobmanager/JobManager;)V
+#start()V
@0.7.0-hadoop2-incubating
+#stop()V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorRef;Lakka/actor/ActorRef;)V
+#getServerPort()I
-#<init>(Lorg/apache/flink/configuration/Configuration;ILorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/web/WebInfoServer

+###org/apache/flink/runtime/jobmanager/web/JsonFactory
@0.7.0-hadoop2-incubating
+#<init>()V
+#toJson(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Ljava/lang/String;
+#toJson(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;)Ljava/lang/String;
@0.10.0
-###org/apache/flink/runtime/jobmanager/web/JsonFactory

+###org/apache/flink/runtime/jobmanager/web/MenuServlet
@0.6-hadoop2-incubating
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/jobmanager/web/MenuServlet

+###org/apache/flink/runtime/jobmanager/web/LogfileInfoServlet
@0.6-hadoop2-incubating
+#<init>(Ljava/io/File;)V
@0.7.0-hadoop2-incubating
+#<init>([Ljava/io/File;)V
-#<init>(Ljava/io/File;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/web/LogfileInfoServlet

+###org/apache/flink/runtime/jobmanager/web/SetupInfoServlet
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/configuration/Configuration;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/web/SetupInfoServlet

+###org/apache/flink/runtime/jobmanager/EventCollector
@0.6-hadoop2-incubating
+#<init>(I)V
+#getEventsForJob(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/List;Z)V
+#getRecentJobs(Ljava/util/List;)V
+#shutdown()V
+#registerJob(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;ZJ)V
+#run()V
+#processProfilingEvents(Lorg/apache/flink/runtime/profiling/types/ProfilingEvent;)V
+#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
+#registerArchivist(Lorg/apache/flink/runtime/jobmanager/archive/ArchiveListener;)V
@0.7.0-hadoop2-incubating
+#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
-#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
@0.9.0-milestone-1
-###org/apache/flink/runtime/jobmanager/EventCollector

+###org/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment
@0.7.0-hadoop2-incubating
+#<init>()V
+#addNewSlotWithTask(Lorg/apache/flink/runtime/instance/AllocatedSlot;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/runtime/jobmanager/scheduler/SubSlot;
+#addNewSlotWithTask(Lorg/apache/flink/runtime/instance/AllocatedSlot;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)Lorg/apache/flink/runtime/jobmanager/scheduler/SubSlot;
+#getSlotForTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/runtime/jobmanager/scheduler/SubSlot;
+#getSlotForTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)Lorg/apache/flink/runtime/jobmanager/scheduler/SubSlot;
+#getNumberOfSlots()I
+#getNumberOfAvailableSlotsForJid(Lorg/apache/flink/runtime/jobgraph/JobVertexID;)I
@0.8.1
+#addSharedSlotAndAllocateSubSlot(Lorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;Lorg/apache/flink/runtime/AbstractID;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#getSlotForTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#getSlotForTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)Lorg/apache/flink/runtime/instance/SimpleSlot;
+#releaseSharedSlot(Lorg/apache/flink/runtime/instance/SharedSlot;)V
+#releaseSimpleSlot(Lorg/apache/flink/runtime/instance/SimpleSlot;)V
-#addNewSlotWithTask(Lorg/apache/flink/runtime/instance/AllocatedSlot;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/runtime/jobmanager/scheduler/SubSlot;
-#addNewSlotWithTask(Lorg/apache/flink/runtime/instance/AllocatedSlot;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)Lorg/apache/flink/runtime/jobmanager/scheduler/SubSlot;
-#getSlotForTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/runtime/jobmanager/scheduler/SubSlot;
-#getSlotForTask(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)Lorg/apache/flink/runtime/jobmanager/scheduler/SubSlot;
@0.9.0-milestone-1
+#addSharedSlotAndAllocateSubSlot(Lorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;Lorg/apache/flink/util/AbstractID;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)Lorg/apache/flink/runtime/instance/SimpleSlot;
-#addSharedSlotAndAllocateSubSlot(Lorg/apache/flink/runtime/instance/SharedSlot;Lorg/apache/flink/runtime/jobmanager/scheduler/Locality;Lorg/apache/flink/runtime/AbstractID;Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationConstraint;)Lorg/apache/flink/runtime/instance/SimpleSlot;
@0.9.0
-###org/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroupAssignment

+###org/apache/flink/runtime/jobmanager/scheduler/SubSlot
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobmanager/scheduler/SharedSlot;ILorg/apache/flink/runtime/AbstractID;)V
+#releaseSlot()V
+#getSharedSlot()Lorg/apache/flink/runtime/jobmanager/scheduler/SharedSlot;
+#getGroupId()Lorg/apache/flink/runtime/AbstractID;
+#toString()Ljava/lang/String;
@0.8.1
-###org/apache/flink/runtime/jobmanager/scheduler/SubSlot

+###org/apache/flink/runtime/jobmanager/scheduler/SlotAvailablilityListener
@0.7.0-hadoop2-incubating
+#newSlotAvailable(Lorg/apache/flink/runtime/instance/Instance;)V
@0.8.0
-###org/apache/flink/runtime/jobmanager/scheduler/SlotAvailablilityListener

+###org/apache/flink/runtime/jobmanager/accumulators/AccumulatorManager
@0.6-hadoop2-incubating
+#<init>(I)V
+#processIncomingAccumulators(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Map;)V
+#getJobAccumulators(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/Map;
@0.9.0-milestone-1
+#processIncomingAccumulators(Lorg/apache/flink/api/common/JobID;Ljava/util/Map;)V
+#getJobAccumulatorResults(Lorg/apache/flink/api/common/JobID;)Ljava/util/Map;
-#processIncomingAccumulators(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/Map;)V
-#getJobAccumulators(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/Map;
@0.9.0
+#getJobAccumulatorResultsSerialized(Lorg/apache/flink/api/common/JobID;)Ljava/util/Map;
+#getJobAccumulatorResultsStringified(Lorg/apache/flink/api/common/JobID;)[Lorg/apache/flink/runtime/accumulators/StringifiedAccumulatorResult;
@0.10.0
-###org/apache/flink/runtime/jobmanager/accumulators/AccumulatorManager

+###org/apache/flink/runtime/jobmanager/accumulators/JobAccumulators
@0.6-hadoop2-incubating
+#<init>()V
+#getAccumulators()Ljava/util/Map;
+#processNew(Ljava/util/Map;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/accumulators/JobAccumulators

+###org/apache/flink/runtime/jobmanager/archive/MemoryArchivist
@0.6-hadoop2-incubating
+#<init>(I)V
+#archiveEvent(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/event/job/AbstractEvent;)V
+#archiveJobevent(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/event/job/RecentJobEvent;)V
+#archiveManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementGraph;)V
+#archiveNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/topology/NetworkTopology;)V
+#getJobs()Ljava/util/List;
+#getJob(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/event/job/RecentJobEvent;
+#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
+#getEvents(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/List;
+#getJobTime(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;)J
+#getVertexTime(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;)J
@0.7.0-hadoop2-incubating
+#archiveExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#getExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
-#archiveManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementGraph;)V
-#archiveNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/topology/NetworkTopology;)V
-#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
-#getJobTime(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;)J
-#getVertexTime(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;)J
@0.9.0-milestone-1
-###org/apache/flink/runtime/jobmanager/archive/MemoryArchivist

+###org/apache/flink/runtime/jobmanager/archive/ArchiveListener
@0.6-hadoop2-incubating
+#archiveEvent(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/event/job/AbstractEvent;)V
+#archiveJobevent(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/event/job/RecentJobEvent;)V
+#archiveManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementGraph;)V
+#archiveNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/topology/NetworkTopology;)V
+#getJobs()Ljava/util/List;
+#getJob(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/event/job/RecentJobEvent;
+#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
+#getEvents(Lorg/apache/flink/runtime/jobgraph/JobID;)Ljava/util/List;
+#getJobTime(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;)J
+#getVertexTime(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;)J
@0.7.0-hadoop2-incubating
+#archiveExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#getExecutionGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
-#archiveManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementGraph;)V
-#archiveNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/topology/NetworkTopology;)V
-#getManagementGraph(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
-#getJobTime(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;)J
-#getVertexTime(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;)J
@0.9.0-milestone-1
-###org/apache/flink/runtime/jobmanager/archive/ArchiveListener

+###org/apache/flink/runtime/jobgraph/JobID
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(JJ)V
+#<init>([B)V
+#generate()Lorg/apache/flink/runtime/jobgraph/JobID;
+#fromByteArray([B)Lorg/apache/flink/runtime/jobgraph/JobID;
+#fromByteBuffer(Ljava/nio/ByteBuffer;)Lorg/apache/flink/runtime/jobgraph/JobID;
+#fromByteBuffer(Ljava/nio/ByteBuffer;I)Lorg/apache/flink/runtime/jobgraph/JobID;
+#fromHexString(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/JobID;
@0.9.0-milestone-1
-###org/apache/flink/runtime/jobgraph/JobID

+###org/apache/flink/runtime/jobgraph/AbstractJobVertex
@0.6-hadoop2-incubating
+#connectTo(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#connectTo(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;II)V
+#connectTo(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/io/network/channels/ChannelType;)V
+#connectTo(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/io/network/channels/ChannelType;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#connectTo(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/io/network/channels/ChannelType;IILorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getNumberOfForwardConnections()I
+#getNumberOfBackwardConnections()I
+#getForwardConnection(I)Lorg/apache/flink/runtime/jobgraph/JobEdge;
+#getBackwardConnection(I)Lorg/apache/flink/runtime/jobgraph/JobEdge;
+#getID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getJobGraph()Lorg/apache/flink/runtime/jobgraph/JobGraph;
+#setNumberOfSubtasks(I)V
+#getNumberOfSubtasks()I
+#setNumberOfExecutionRetries(I)V
+#getNumberOfExecutionRetries()I
+#setVertexToShareInstancesWith(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#getVertexToShareInstancesWith()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#setInvokableClass(Ljava/lang/Class;)V
+#getInvokableClass()Ljava/lang/Class;
+#toString()Ljava/lang/String;
@0.7.0-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
+#getNumberOfProducedIntermediateDataSets()I
+#getNumberOfInputs()I
+#getInvokableClassName()Ljava/lang/String;
+#getInvokableClass(Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#getParallelism()I
+#setParallelism(I)V
+#getInputSplitSource()Lorg/apache/flink/core/io/InputSplitSource;
+#setInputSplitSource(Lorg/apache/flink/core/io/InputSplitSource;)V
+#getProducedDataSets()Ljava/util/List;
+#getInputs()Ljava/util/List;
+#setSlotSharingGroup(Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup;)V
+#getSlotSharingGroup()Lorg/apache/flink/runtime/jobmanager/scheduler/SlotSharingGroup;
+#setStrictlyCoLocatedWith(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
+#getCoLocationGroup()Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationGroup;
+#updateCoLocationGroup(Lorg/apache/flink/runtime/jobmanager/scheduler/CoLocationGroup;)V
+#createAndAddResultDataSet()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
+#createAndAddResultDataSet(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
+#connectDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#connectIdInput(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#isInputVertex()Z
+#isOutputVertex()Z
+#hasNoConnectedInputs()Z
+#initializeOnMaster(Ljava/lang/ClassLoader;)V
-#connectTo(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#connectTo(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;II)V
-#connectTo(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/io/network/channels/ChannelType;)V
-#connectTo(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/io/network/channels/ChannelType;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
-#connectTo(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/io/network/channels/ChannelType;IILorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
-#getNumberOfForwardConnections()I
-#getNumberOfBackwardConnections()I
-#getForwardConnection(I)Lorg/apache/flink/runtime/jobgraph/JobEdge;
-#getBackwardConnection(I)Lorg/apache/flink/runtime/jobgraph/JobEdge;
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#getJobGraph()Lorg/apache/flink/runtime/jobgraph/JobGraph;
-#setNumberOfSubtasks(I)V
-#getNumberOfSubtasks()I
-#setNumberOfExecutionRetries(I)V
-#getNumberOfExecutionRetries()I
-#setVertexToShareInstancesWith(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;)V
-#getVertexToShareInstancesWith()Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;
-#getInvokableClass()Ljava/lang/Class;
@0.8.0
+#finalizeOnMaster(Ljava/lang/ClassLoader;)V
@0.9.0-milestone-1
+#createAndAddResultDataSet(Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
+#createAndAddResultDataSet(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
+#connectNewDataSetAsInput(Lorg/apache/flink/runtime/jobgraph/AbstractJobVertex;Lorg/apache/flink/runtime/jobgraph/DistributionPattern;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;)V
-#createAndAddResultDataSet()Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
-#createAndAddResultDataSet(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Lorg/apache/flink/runtime/jobgraph/IntermediateDataSet;
@0.9.0
-###org/apache/flink/runtime/jobgraph/AbstractJobVertex

+###org/apache/flink/runtime/client/JobClient$JobCleanUp
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/client/JobClient;)V
+#run()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/client/JobClient$JobCleanUp

+###org/apache/flink/runtime/client/JobProgressResult
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/client/AbstractJobResult$ReturnCode;Ljava/lang/String;Lorg/apache/flink/runtime/util/SerializableArrayList;)V
+#<init>()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getEvents()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.9.0-milestone-1
-###org/apache/flink/runtime/client/JobProgressResult

+###org/apache/flink/runtime/client/AbstractJobResult
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/client/AbstractJobResult$ReturnCode;Ljava/lang/String;)V
+#<init>()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getReturnCode()Lorg/apache/flink/runtime/client/AbstractJobResult$ReturnCode;
+#getDescription()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.9.0-milestone-1
-###org/apache/flink/runtime/client/AbstractJobResult

+###org/apache/flink/runtime/client/JobCancelResult
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/client/AbstractJobResult$ReturnCode;Ljava/lang/String;)V
+#<init>()V
@0.9.0-milestone-1
-###org/apache/flink/runtime/client/JobCancelResult

+###org/apache/flink/runtime/client/JobSubmissionResult
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/client/AbstractJobResult$ReturnCode;Ljava/lang/String;)V
+#<init>()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.7.0-hadoop2-incubating
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/client/JobSubmissionResult

+###org/apache/flink/runtime/client/AbstractJobResult$ReturnCode
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/client/AbstractJobResult$ReturnCode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/client/AbstractJobResult$ReturnCode;
@0.9.0-milestone-1
-###org/apache/flink/runtime/client/AbstractJobResult$ReturnCode

+###org/apache/flink/runtime/execution/ExecutionListener
@0.6-hadoop2-incubating
+#getPriority()I
+#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#userThreadStarted(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
+#userThreadFinished(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
@0.7.0-hadoop2-incubating
+#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
-#getPriority()I
-#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
-#userThreadStarted(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
-#userThreadFinished(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/execution/ExecutionListener

+###org/apache/flink/runtime/execution/RuntimeEnvironment
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;Ljava/util/Map;)V
+#getInvokable()Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getNextUnboundInputGateID()Lorg/apache/flink/runtime/io/network/gates/GateID;
+#createAndRegisterOutputGate()Lorg/apache/flink/runtime/io/network/gates/OutputGate;
+#run()V
+#createAndRegisterInputGate()Lorg/apache/flink/runtime/io/network/gates/InputGate;
+#getNumberOfOutputGates()I
+#getNumberOfInputGates()I
+#getNumberOfOutputChannels()I
+#getNumberOfInputChannels()I
+#getInputGate(I)Lorg/apache/flink/runtime/io/network/gates/InputGate;
+#getOutputGate(I)Lorg/apache/flink/runtime/io/network/gates/OutputGate;
+#getExecutingThread()Ljava/lang/Thread;
+#cancelExecution()V
+#getIOManager()Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;
+#getMemoryManager()Lorg/apache/flink/runtime/memorymanager/MemoryManager;
+#getTaskConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getJobConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getCurrentNumberOfSubtasks()I
+#getIndexInSubtaskGroup()I
+#getTaskName()Ljava/lang/String;
+#getTaskNameWithIndex()Ljava/lang/String;
+#setExecutionObserver(Lorg/apache/flink/runtime/execution/ExecutionObserver;)V
+#getInputSplitProvider()Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;
+#userThreadStarted(Ljava/lang/Thread;)V
+#userThreadFinished(Ljava/lang/Thread;)V
+#getOutputChannelIDs()Ljava/util/Set;
+#getInputChannelIDs()Ljava/util/Set;
+#getInputGateIDs()Ljava/util/Set;
+#getOutputGateIDs()Ljava/util/Set;
+#getOutputChannelIDsOfGate(Lorg/apache/flink/runtime/io/network/gates/GateID;)Ljava/util/Set;
+#getInputChannelIDsOfGate(Lorg/apache/flink/runtime/io/network/gates/GateID;)Ljava/util/Set;
+#outputGates()Ljava/util/List;
+#inputGates()Ljava/util/List;
+#getAccumulatorProtocolProxy()Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;
+#addCopyTaskForCacheFile(Ljava/lang/String;Ljava/util/concurrent/FutureTask;)V
+#getCopyTask()Ljava/util/Map;
+#getOutputBufferProvider()Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider;
+#requestBuffer(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#requestBufferBlocking(I)Lorg/apache/flink/runtime/io/network/Buffer;
+#getBufferSize()I
+#registerBufferAvailabilityListener(Lorg/apache/flink/runtime/io/network/bufferprovider/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration;
+#getNumberOfChannels()I
+#setDesignatedNumberOfBuffers(I)V
+#clearLocalBufferPool()V
+#registerGlobalBufferPool(Lorg/apache/flink/runtime/io/network/bufferprovider/GlobalBufferPool;)V
+#logBufferUtilization()V
+#reportAsynchronousEvent()V
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;)V
+#getUserClassLoader()Ljava/lang/ClassLoader;
+#addCopyTasksForCacheFile(Ljava/util/Map;)V
-#<init>(Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;Ljava/util/Map;)V
-#getTaskNameWithIndex()Ljava/lang/String;
-#setExecutionObserver(Lorg/apache/flink/runtime/execution/ExecutionObserver;)V
-#userThreadStarted(Ljava/lang/Thread;)V
-#userThreadFinished(Ljava/lang/Thread;)V
@0.8.0
+#<init>(Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;)V
+#getJobVertexId()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#getBroadcastVariableManager()Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;
-#<init>(Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;)V
@0.9.0-milestone-1
+#<init>(Lakka/actor/ActorRef;Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;Lorg/apache/flink/runtime/io/network/NetworkEnvironment;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getJobManager()Lakka/actor/ActorRef;
+#getWriter(I)Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
+#getAllWriters()[Lorg/apache/flink/runtime/io/network/api/writer/ResultPartitionWriter;
+#getInputGate(I)Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;
+#getAllInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
+#getProducedPartitions()[Lorg/apache/flink/runtime/io/network/partition/ResultPartition;
+#getInputGateById(Lorg/apache/flink/runtime/jobgraph/IntermediateDataSetID;)Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;
+#getNumberOfSubtasks()I
+#getTaskNameWithSubtasks()Ljava/lang/String;
+#getAllInputGates()[Lorg/apache/flink/runtime/io/network/partition/consumer/InputGate;
-#<init>(Lorg/apache/flink/runtime/taskmanager/Task;Lorg/apache/flink/runtime/deployment/TaskDeploymentDescriptor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/InputSplitProvider;Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;Lorg/apache/flink/runtime/broadcast/BroadcastVariableManager;)V
-#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
-#getNextUnboundInputGateID()Lorg/apache/flink/runtime/io/network/gates/GateID;
-#createAndRegisterOutputGate()Lorg/apache/flink/runtime/io/network/gates/OutputGate;
-#createAndRegisterInputGate()Lorg/apache/flink/runtime/io/network/gates/InputGate;
-#getNumberOfOutputGates()I
-#getNumberOfInputGates()I
-#getNumberOfOutputChannels()I
-#getNumberOfInputChannels()I
-#getInputGate(I)Lorg/apache/flink/runtime/io/network/gates/InputGate;
-#getOutputGate(I)Lorg/apache/flink/runtime/io/network/gates/OutputGate;
-#getCurrentNumberOfSubtasks()I
-#getOutputChannelIDs()Ljava/util/Set;
-#getInputChannelIDs()Ljava/util/Set;
-#getInputGateIDs()Ljava/util/Set;
-#getOutputGateIDs()Ljava/util/Set;
-#getOutputChannelIDsOfGate(Lorg/apache/flink/runtime/io/network/gates/GateID;)Ljava/util/Set;
-#getInputChannelIDsOfGate(Lorg/apache/flink/runtime/io/network/gates/GateID;)Ljava/util/Set;
-#outputGates()Ljava/util/List;
-#inputGates()Ljava/util/List;
-#getAccumulatorProtocolProxy()Lorg/apache/flink/runtime/protocols/AccumulatorProtocol;
-#getOutputBufferProvider()Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider;
-#requestBuffer(I)Lorg/apache/flink/runtime/io/network/Buffer;
-#requestBufferBlocking(I)Lorg/apache/flink/runtime/io/network/Buffer;
-#getBufferSize()I
-#registerBufferAvailabilityListener(Lorg/apache/flink/runtime/io/network/bufferprovider/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/bufferprovider/BufferProvider$BufferAvailabilityRegistration;
-#getNumberOfChannels()I
-#setDesignatedNumberOfBuffers(I)V
-#clearLocalBufferPool()V
-#registerGlobalBufferPool(Lorg/apache/flink/runtime/io/network/bufferprovider/GlobalBufferPool;)V
-#logBufferUtilization()V
-#reportAsynchronousEvent()V
@0.9.0
-###org/apache/flink/runtime/execution/RuntimeEnvironment

+###org/apache/flink/runtime/types/IntegerRecord
@0.6-hadoop2-incubating
+#<init>(I)V
+#<init>()V
+#getValue()I
+#setValue(I)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.9.0-milestone-1
-###org/apache/flink/runtime/types/IntegerRecord

+###org/apache/flink/runtime/types/FileRecord
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setFileName(Ljava/lang/String;)V
+#getFileName()Ljava/lang/String;
+#getDataBuffer()[B
+#append([BII)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.9.0-milestone-1
-###org/apache/flink/runtime/types/FileRecord

+###org/apache/flink/runtime/deployment/ChannelDeploymentDescriptor
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/channels/ChannelID;Lorg/apache/flink/runtime/io/network/channels/ChannelID;)V
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getOutputChannelID()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
+#getInputChannelID()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
@0.7.0-hadoop2-incubating
+#fromExecutionEdge(Lorg/apache/flink/runtime/executiongraph/ExecutionEdge;)Lorg/apache/flink/runtime/deployment/ChannelDeploymentDescriptor;
@0.9.0-milestone-1
-###org/apache/flink/runtime/deployment/ChannelDeploymentDescriptor

+###org/apache/flink/runtime/deployment/GateDeploymentDescriptor
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/gates/GateID;Lorg/apache/flink/runtime/io/network/channels/ChannelType;Ljava/util/List;)V
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getGateID()Lorg/apache/flink/runtime/io/network/gates/GateID;
+#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#getNumberOfChannelDescriptors()I
+#getChannelDescriptor(I)Lorg/apache/flink/runtime/deployment/ChannelDeploymentDescriptor;
@0.7.0-hadoop2-incubating
+#<init>(Ljava/util/List;)V
+#getChannels()Ljava/util/List;
+#fromEdges(Ljava/util/List;)Lorg/apache/flink/runtime/deployment/GateDeploymentDescriptor;
+#fromEdges([Lorg/apache/flink/runtime/executiongraph/ExecutionEdge;)Lorg/apache/flink/runtime/deployment/GateDeploymentDescriptor;
-#<init>(Lorg/apache/flink/runtime/io/network/gates/GateID;Lorg/apache/flink/runtime/io/network/channels/ChannelType;Ljava/util/List;)V
-#getGateID()Lorg/apache/flink/runtime/io/network/gates/GateID;
-#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
-#getNumberOfChannelDescriptors()I
-#getChannelDescriptor(I)Lorg/apache/flink/runtime/deployment/ChannelDeploymentDescriptor;
@0.9.0-milestone-1
-###org/apache/flink/runtime/deployment/GateDeploymentDescriptor

+###org/apache/flink/runtime/ipc/Server
@0.6-hadoop2-incubating
+#get()Lorg/apache/flink/runtime/ipc/Server;
+#getRemoteIp()Ljava/net/InetAddress;
+#getRemoteAddress()Ljava/lang/String;
+#bind(Ljava/net/ServerSocket;Ljava/net/InetSocketAddress;I)V
+#setSocketSendBufSize(I)V
+#start()V
+#stop()V
+#join()V
+#getListenerAddress()Ljava/net/InetSocketAddress;
+#call(Ljava/lang/Class;Lorg/apache/flink/core/io/IOReadableWritable;J)Lorg/apache/flink/core/io/IOReadableWritable;
+#getNumOpenConnections()I
+#getCallQueueLen()I
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
@0.9.0-milestone-1
-###org/apache/flink/runtime/ipc/Server

+###org/apache/flink/runtime/ipc/Client
@0.6-hadoop2-incubating
+#<init>(Ljavax/net/SocketFactory;)V
+#<init>()V
+#stop()V
+#call(Lorg/apache/flink/core/io/IOReadableWritable;Ljava/net/InetSocketAddress;Ljava/lang/Class;)Lorg/apache/flink/core/io/IOReadableWritable;
@0.9.0-milestone-1
-###org/apache/flink/runtime/ipc/Client

+###org/apache/flink/runtime/ipc/RemoteException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getClassName()Ljava/lang/String;
+#unwrapRemoteException([Ljava/lang/Class;)Ljava/io/IOException;
+#unwrapRemoteException()Ljava/io/IOException;
@0.9.0-milestone-1
-###org/apache/flink/runtime/ipc/RemoteException

+###org/apache/flink/runtime/ipc/RPC$Server
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/Object;Ljava/lang/String;I)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;II)V
+#call(Ljava/lang/Class;Lorg/apache/flink/core/io/IOReadableWritable;J)Lorg/apache/flink/core/io/IOReadableWritable;
@0.9.0-milestone-1
-###org/apache/flink/runtime/ipc/RPC$Server

+###org/apache/flink/runtime/ipc/RPC
@0.6-hadoop2-incubating
+#waitForProxy(Ljava/lang/Class;Ljava/net/InetSocketAddress;)Lorg/apache/flink/core/protocols/VersionedProtocol;
+#getProxy(Ljava/lang/Class;Ljava/net/InetSocketAddress;Ljavax/net/SocketFactory;)Lorg/apache/flink/core/protocols/VersionedProtocol;
+#getProxy(Ljava/lang/Class;Ljava/net/InetSocketAddress;)Lorg/apache/flink/core/protocols/VersionedProtocol;
+#stopProxy(Lorg/apache/flink/core/protocols/VersionedProtocol;)V
+#getServer(Ljava/lang/Object;Ljava/lang/String;II)Lorg/apache/flink/runtime/ipc/RPC$Server;
@0.9.0-milestone-1
-###org/apache/flink/runtime/ipc/RPC

+###org/apache/flink/runtime/fs/hdfs/DistributedFileSystem
@0.6-hadoop2-incubating
+#<init>()V
+#getHadoopConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getWorkingDirectory()Lorg/apache/flink/core/fs/Path;
+#getUri()Ljava/net/URI;
+#initialize(Ljava/net/URI;)V
+#getFileStatus(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FileStatus;
+#getFileBlockLocations(Lorg/apache/flink/core/fs/FileStatus;JJ)[Lorg/apache/flink/core/fs/BlockLocation;
+#open(Lorg/apache/flink/core/fs/Path;I)Lorg/apache/flink/core/fs/FSDataInputStream;
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FSDataInputStream;
+#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#delete(Lorg/apache/flink/core/fs/Path;Z)Z
+#listStatus(Lorg/apache/flink/core/fs/Path;)[Lorg/apache/flink/core/fs/FileStatus;
+#mkdirs(Lorg/apache/flink/core/fs/Path;)Z
+#rename(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Z
+#getDefaultBlockSize()J
+#isDistributedFS()Z
@0.8.0
-###org/apache/flink/runtime/fs/hdfs/DistributedFileSystem

+###org/apache/flink/runtime/fs/hdfs/DistributedDataInputStream
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/hadoop/fs/FSDataInputStream;)V
+#seek(J)V
+#read()I
+#close()V
+#read([BII)I
+#available()I
+#skip(J)J
@0.8.0
-###org/apache/flink/runtime/fs/hdfs/DistributedDataInputStream

+###org/apache/flink/runtime/fs/hdfs/DistributedBlockLocation
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/hadoop/fs/BlockLocation;)V
+#getHosts()[Ljava/lang/String;
+#getLength()J
+#getOffset()J
+#compareTo(Lorg/apache/flink/core/fs/BlockLocation;)I
+#compareTo(Ljava/lang/Object;)I
@0.8.0
-###org/apache/flink/runtime/fs/hdfs/DistributedBlockLocation

+###org/apache/flink/runtime/fs/hdfs/DistributedFileStatus
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/hadoop/fs/FileStatus;)V
+#getLen()J
+#getBlockSize()J
+#getAccessTime()J
+#getModificationTime()J
+#getReplication()S
+#getInternalFileStatus()Lorg/apache/hadoop/fs/FileStatus;
+#getPath()Lorg/apache/flink/core/fs/Path;
+#isDir()Z
@0.8.0
-###org/apache/flink/runtime/fs/hdfs/DistributedFileStatus

+###org/apache/flink/runtime/fs/hdfs/DistributedDataOutputStream
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/hadoop/fs/FSDataOutputStream;)V
+#write(I)V
+#write([BII)V
+#close()V
@0.8.0
-###org/apache/flink/runtime/fs/hdfs/DistributedDataOutputStream

+###org/apache/flink/runtime/fs/s3/S3DataInputStream
@0.6-hadoop2-incubating
+#available()I
+#close()V
+#mark(I)V
+#markSupported()Z
+#read()I
+#read([B)I
+#read([BII)I
+#reset()V
+#seek(J)V
@0.8.1
+#skip(J)J
@0.9.0-milestone-1
+#getPos()J
@0.10.0
-###org/apache/flink/runtime/fs/s3/S3DataInputStream

+###org/apache/flink/runtime/fs/s3/S3DataOutputStream
@0.6-hadoop2-incubating
+#write(I)V
+#write([BII)V
+#write([B)V
+#close()V
+#flush()V
@0.10.0
-###org/apache/flink/runtime/fs/s3/S3DataOutputStream

+###org/apache/flink/runtime/fs/s3/S3FileStatus
@0.6-hadoop2-incubating
+#getLen()J
+#getBlockSize()J
+#getReplication()S
+#getModificationTime()J
+#getAccessTime()J
+#isDir()Z
+#getPath()Lorg/apache/flink/core/fs/Path;
@0.10.0
-###org/apache/flink/runtime/fs/s3/S3FileStatus

+###org/apache/flink/runtime/fs/s3/S3BucketObjectPair
@0.6-hadoop2-incubating
+#getBucket()Ljava/lang/String;
+#getObject()Ljava/lang/String;
+#hasBucket()Z
+#hasObject()Z
@0.10.0
-###org/apache/flink/runtime/fs/s3/S3BucketObjectPair

+###org/apache/flink/runtime/fs/s3/S3FileSystem
@0.6-hadoop2-incubating
+#<init>()V
+#getWorkingDirectory()Lorg/apache/flink/core/fs/Path;
+#getUri()Ljava/net/URI;
+#initialize(Ljava/net/URI;)V
+#getFileStatus(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FileStatus;
+#getFileBlockLocations(Lorg/apache/flink/core/fs/FileStatus;JJ)[Lorg/apache/flink/core/fs/BlockLocation;
+#open(Lorg/apache/flink/core/fs/Path;I)Lorg/apache/flink/core/fs/FSDataInputStream;
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FSDataInputStream;
+#listStatus(Lorg/apache/flink/core/fs/Path;)[Lorg/apache/flink/core/fs/FileStatus;
+#delete(Lorg/apache/flink/core/fs/Path;Z)Z
+#mkdirs(Lorg/apache/flink/core/fs/Path;)Z
+#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#rename(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Z
+#isDistributedFS()Z
@0.8.0
+#initOutPathDistFS(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem$WriteMode;Z)Z
@0.9.0-milestone-1
+#getHomeDirectory()Lorg/apache/flink/core/fs/Path;
@0.10.0
-###org/apache/flink/runtime/fs/s3/S3FileSystem

+###org/apache/flink/runtime/fs/s3/S3DirectoryStructure
@0.6-hadoop2-incubating
@0.10.0
-###org/apache/flink/runtime/fs/s3/S3DirectoryStructure

+###org/apache/flink/runtime/fs/s3/S3BlockLocation
@0.6-hadoop2-incubating
+#compareTo(Lorg/apache/flink/core/fs/BlockLocation;)I
+#getHosts()[Ljava/lang/String;
+#getOffset()J
+#getLength()J
+#compareTo(Ljava/lang/Object;)I
@0.10.0
-###org/apache/flink/runtime/fs/s3/S3BlockLocation

+###org/apache/flink/runtime/ActorLogMessages$$anon$1
@0.9.0-milestone-1
+#orElse(Lscala/PartialFunction;)Lscala/PartialFunction;
+#andThen(Lscala/Function1;)Lscala/PartialFunction;
+#lift()Lscala/Function1;
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#runWith(Lscala/Function1;)Lscala/Function1;
+#apply$mcZD$sp(D)Z
+#apply$mcDD$sp(D)D
+#apply$mcFD$sp(D)F
+#apply$mcID$sp(D)I
+#apply$mcJD$sp(D)J
+#apply$mcVD$sp(D)V
+#apply$mcZF$sp(F)Z
+#apply$mcDF$sp(F)D
+#apply$mcFF$sp(F)F
+#apply$mcIF$sp(F)I
+#apply$mcJF$sp(F)J
+#apply$mcVF$sp(F)V
+#apply$mcZI$sp(I)Z
+#apply$mcDI$sp(I)D
+#apply$mcFI$sp(I)F
+#apply$mcII$sp(I)I
+#apply$mcJI$sp(I)J
+#apply$mcVI$sp(I)V
+#apply$mcZJ$sp(J)Z
+#apply$mcDJ$sp(J)D
+#apply$mcFJ$sp(J)F
+#apply$mcIJ$sp(J)I
+#apply$mcJJ$sp(J)J
+#apply$mcVJ$sp(J)V
+#compose(Lscala/Function1;)Lscala/Function1;
+#compose$mcZD$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcDD$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcFD$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcID$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcJD$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcVD$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcZF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcDF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcFF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcIF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcJF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcVF$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcZI$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcDI$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcFI$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcII$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcJI$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcVI$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcZJ$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcDJ$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcFJ$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcIJ$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcJJ$sp(Lscala/Function1;)Lscala/Function1;
+#compose$mcVJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcZD$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcDD$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcFD$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcID$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcJD$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcVD$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcZF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcDF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcFF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcIF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcJF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcVF$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcZI$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcDI$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcFI$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcII$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcJI$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcVI$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcZJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcDJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcFJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcIJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcJJ$sp(Lscala/Function1;)Lscala/Function1;
+#andThen$mcVJ$sp(Lscala/Function1;)Lscala/Function1;
+#toString()Ljava/lang/String;
+#isDefinedAt(Ljava/lang/Object;)Z
+#apply(Ljava/lang/Object;)V
+#andThen(Lscala/Function1;)Lscala/Function1;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/ActorLogMessages;)V
@0.9.0
+#org$apache$flink$runtime$ActorLogMessages$$anon$$$outer()Lorg/apache/flink/runtime/ActorLogMessages;
@0.10.0
-###org/apache/flink/runtime/ActorLogMessages$$anon$1

+###org/apache/flink/runtime/ActorLogMessages$class
@0.9.0-milestone-1
+#receive(Lorg/apache/flink/runtime/ActorLogMessages;)Lscala/PartialFunction;
+#$init$(Lorg/apache/flink/runtime/ActorLogMessages;)V
@0.10.0
-###org/apache/flink/runtime/ActorLogMessages$class

+###org/apache/flink/runtime/ActorLogMessages
@0.9.0-milestone-1
+#receive()Lscala/PartialFunction;
+#receiveWithLogMessages()Lscala/PartialFunction;
+#log()Lakka/event/LoggingAdapter;
@0.9.0
-#log()Lakka/event/LoggingAdapter;
@0.10.0
-###org/apache/flink/runtime/ActorLogMessages

+###org/apache/flink/runtime/client/JobClient$$anonfun$receiveWithLogMessages$1
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/client/JobClient;)V
@0.9.0
-###org/apache/flink/runtime/client/JobClient$$anonfun$receiveWithLogMessages$1

+###org/apache/flink/runtime/client/JobClient$
@0.9.0-milestone-1
+#<clinit>()V
+#JOB_CLIENT_NAME()Ljava/lang/String;
+#startActorSystemAndActor(Lorg/apache/flink/configuration/Configuration;Z)Lscala/Tuple2;
+#createJobClientFromConfig(Lorg/apache/flink/configuration/Configuration;ZLakka/actor/ActorSystem;)Lakka/actor/ActorRef;
+#createJobClient(Ljava/lang/String;Lakka/actor/ActorSystem;Lorg/apache/flink/configuration/Configuration;)Lakka/actor/ActorRef;
+#getJobManagerUrlFromConfig(Lorg/apache/flink/configuration/Configuration;Z)Ljava/lang/String;
+#submitJobAndWait(Lorg/apache/flink/runtime/jobgraph/JobGraph;ZLakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)Lorg/apache/flink/api/common/JobExecutionResult;
+#submitJobDetached(Lorg/apache/flink/runtime/jobgraph/JobGraph;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)V
+#uploadJarFiles(Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/lang/String;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)V
@0.9.0
-###org/apache/flink/runtime/client/JobClient$

+###org/apache/flink/runtime/client/JobClientListener$$anonfun$receiveWithLogMessages$2
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/client/JobClientListener;)V
@0.9.0
-###org/apache/flink/runtime/client/JobClientListener$$anonfun$receiveWithLogMessages$2

+###org/apache/flink/runtime/client/JobClientListener
@0.9.0-milestone-1
+#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
+#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
+#log()Lakka/event/LoggingAdapter;
+#receive()Lscala/PartialFunction;
+#context()Lakka/actor/ActorContext;
+#self()Lakka/actor/ActorRef;
+#akka$actor$Actor$_setter_$context_$eq(Lakka/actor/ActorContext;)V
+#akka$actor$Actor$_setter_$self_$eq(Lakka/actor/ActorRef;)V
+#sender()Lakka/actor/ActorRef;
+#aroundReceive(Lscala/PartialFunction;Ljava/lang/Object;)V
+#aroundPreStart()V
+#aroundPostStop()V
+#aroundPreRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#aroundPostRestart(Ljava/lang/Throwable;)V
+#supervisorStrategy()Lakka/actor/SupervisorStrategy;
+#preStart()V
+#postStop()V
+#preRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#postRestart(Ljava/lang/Throwable;)V
+#receiveWithLogMessages()Lscala/PartialFunction;
+#unhandled(Ljava/lang/Object;)V
+#<init>(Lakka/actor/ActorRef;)V
@0.9.0
-###org/apache/flink/runtime/client/JobClientListener

+###org/apache/flink/runtime/event/task/RuntimeEvent
@0.9.0-milestone-1
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/event/task/RuntimeEvent

+###org/apache/flink/runtime/event/task/TaskEvent
@0.9.0-milestone-1
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/event/task/TaskEvent

+###org/apache/flink/runtime/jobgraph/JobGraph$JobType
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/runtime/jobgraph/JobGraph$JobType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/jobgraph/JobGraph$JobType;
@0.9.0
-###org/apache/flink/runtime/jobgraph/JobGraph$JobType

+###org/apache/flink/runtime/jobgraph/tasks/BarrierTransceiver
@0.9.0-milestone-1
+#broadcastBarrierFromSource(J)V
+#confirmBarrier(J)V
@0.9.0
-###org/apache/flink/runtime/jobgraph/tasks/BarrierTransceiver

+###org/apache/flink/runtime/jobgraph/tasks/OperatorStateCarrier
@0.9.0-milestone-1
+#injectState(Lorg/apache/flink/runtime/state/StateHandle;)V
@0.9.0
+#setInitialState(Lorg/apache/flink/runtime/state/StateHandle;)V
-#injectState(Lorg/apache/flink/runtime/state/StateHandle;)V
@0.10.0
-###org/apache/flink/runtime/jobgraph/tasks/OperatorStateCarrier

+###org/apache/flink/runtime/jobmanager/BarrierTimeout$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply()Lorg/apache/flink/runtime/jobmanager/BarrierTimeout;
+#unapply(Lorg/apache/flink/runtime/jobmanager/BarrierTimeout;)Z
+#apply()Ljava/lang/Object;
@0.9.0
-###org/apache/flink/runtime/jobmanager/BarrierTimeout$

+###org/apache/flink/runtime/jobmanager/BarrierTimeout
@0.9.0-milestone-1
+#copy()Lorg/apache/flink/runtime/jobmanager/BarrierTimeout;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/jobmanager/BarrierTimeout

+###org/apache/flink/runtime/jobmanager/CompactAndUpdate$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply()Lorg/apache/flink/runtime/jobmanager/CompactAndUpdate;
+#unapply(Lorg/apache/flink/runtime/jobmanager/CompactAndUpdate;)Z
+#apply()Ljava/lang/Object;
@0.9.0
-###org/apache/flink/runtime/jobmanager/CompactAndUpdate$

+###org/apache/flink/runtime/jobmanager/CompactAndUpdate
@0.9.0-milestone-1
+#copy()Lorg/apache/flink/runtime/jobmanager/CompactAndUpdate;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/jobmanager/CompactAndUpdate

+###org/apache/flink/runtime/jobmanager/InitBarrierScheduler$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply()Lorg/apache/flink/runtime/jobmanager/InitBarrierScheduler;
+#unapply(Lorg/apache/flink/runtime/jobmanager/InitBarrierScheduler;)Z
+#apply()Ljava/lang/Object;
@0.9.0
-###org/apache/flink/runtime/jobmanager/InitBarrierScheduler$

+###org/apache/flink/runtime/jobmanager/InitBarrierScheduler
@0.9.0-milestone-1
+#copy()Lorg/apache/flink/runtime/jobmanager/InitBarrierScheduler;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/jobmanager/InitBarrierScheduler

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$3
@0.9.0-milestone-1
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration;)Lorg/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$4$$anonfun$apply$1
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/jobmanager/JobManagerMode;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$4;Lscala/runtime/ObjectRef;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$4$$anonfun$apply$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$4$$anonfun$apply$2
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/jobmanager/JobManagerMode;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$4;Lorg/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration;Ljava/lang/String;Lscala/runtime/ObjectRef;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$4$$anonfun$apply$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$4
@0.9.0-milestone-1
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration;)Lorg/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$5
@0.9.0-milestone-1
+#apply(Lakka/actor/Props;)Lakka/actor/ActorRef;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lakka/actor/ActorSystem;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$1
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
-#apply(Lscala/Tuple2;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$2
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)Lorg/apache/flink/runtime/client/JobStatusMessage;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/core/io/InputSplit;)V
-#apply(Lscala/Tuple2;)Lorg/apache/flink/runtime/client/JobStatusMessage;
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$1
@0.9.0-milestone-1
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2
@0.9.0-milestone-1
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lakka/actor/ActorRef;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#org$apache$flink$runtime$jobmanager$JobManager$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/JobManager;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1

+###org/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;)Lorg/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration;
+#unapply(Lorg/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration;)Lscala/Option;
+#$lessinit$greater$default$1()Ljava/lang/String;
+#$lessinit$greater$default$2()Lorg/apache/flink/runtime/jobmanager/JobManagerMode;
+#apply$default$1()Ljava/lang/String;
+#apply$default$2()Lorg/apache/flink/runtime/jobmanager/JobManagerMode;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration$

+###org/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration
@0.9.0-milestone-1
+#apply$default$2()Lorg/apache/flink/runtime/jobmanager/JobManagerMode;
+#apply$default$1()Ljava/lang/String;
+#$lessinit$greater$default$2()Lorg/apache/flink/runtime/jobmanager/JobManagerMode;
+#$lessinit$greater$default$1()Ljava/lang/String;
+#tupled()Lscala/Function1;
+#curried()Lscala/Function1;
+#configDir()Ljava/lang/String;
+#executionMode()Lorg/apache/flink/runtime/jobmanager/JobManagerMode;
+#copy(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;)Lorg/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration;
+#copy$default$1()Ljava/lang/String;
+#copy$default$2()Lorg/apache/flink/runtime/jobmanager/JobManagerMode;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerMode;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManagerCLIConfiguration

+###org/apache/flink/runtime/jobmanager/JobManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$1
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/profiling/impl/types/InternalProfilingData;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManagerProfiler$$anonfun$receiveWithLogMessages$1;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$1

+###org/apache/flink/runtime/jobmanager/JobManagerProfiler$$anonfun$receiveWithLogMessages$1
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#org$apache$flink$runtime$jobmanager$JobManagerProfiler$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/JobManagerProfiler;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManagerProfiler;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManagerProfiler$$anonfun$receiveWithLogMessages$1

+###org/apache/flink/runtime/jobmanager/JobManagerProfiler
@0.9.0-milestone-1
+#asScalaIterator(Ljava/util/Iterator;)Lscala/collection/Iterator;
+#enumerationAsScalaIterator(Ljava/util/Enumeration;)Lscala/collection/Iterator;
+#iterableAsScalaIterable(Ljava/lang/Iterable;)Lscala/collection/Iterable;
+#collectionAsScalaIterable(Ljava/util/Collection;)Lscala/collection/Iterable;
+#asScalaBuffer(Ljava/util/List;)Lscala/collection/mutable/Buffer;
+#asScalaSet(Ljava/util/Set;)Lscala/collection/mutable/Set;
+#mapAsScalaMap(Ljava/util/Map;)Lscala/collection/mutable/Map;
+#asScalaConcurrentMap(Ljava/util/concurrent/ConcurrentMap;)Lscala/collection/mutable/ConcurrentMap;
+#mapAsScalaConcurrentMap(Ljava/util/concurrent/ConcurrentMap;)Lscala/collection/concurrent/Map;
+#dictionaryAsScalaMap(Ljava/util/Dictionary;)Lscala/collection/mutable/Map;
+#propertiesAsScalaMap(Ljava/util/Properties;)Lscala/collection/mutable/Map;
+#mapAsScalaDeprecatedConcurrentMap(Ljava/util/concurrent/ConcurrentMap;)Lscala/collection/mutable/ConcurrentMap;
+#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
+#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
+#log()Lakka/event/LoggingAdapter;
+#receive()Lscala/PartialFunction;
+#context()Lakka/actor/ActorContext;
+#self()Lakka/actor/ActorRef;
+#akka$actor$Actor$_setter_$context_$eq(Lakka/actor/ActorContext;)V
+#akka$actor$Actor$_setter_$self_$eq(Lakka/actor/ActorRef;)V
+#sender()Lakka/actor/ActorRef;
+#aroundReceive(Lscala/PartialFunction;Ljava/lang/Object;)V
+#aroundPreStart()V
+#aroundPostStop()V
+#aroundPreRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#aroundPostRestart(Ljava/lang/Throwable;)V
+#supervisorStrategy()Lakka/actor/SupervisorStrategy;
+#preStart()V
+#postStop()V
+#preRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#postRestart(Ljava/lang/Throwable;)V
+#receiveWithLogMessages()Lscala/PartialFunction;
+#unhandled(Ljava/lang/Object;)V
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/jobmanager/JobManagerProfiler

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$getAllGraphs$1
@0.9.0-milestone-1
+#apply(Lscala/ref/SoftReference;)Lscala/collection/Iterable;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$getAllGraphs$1

+###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$receiveWithLogMessages$1
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/jobmanager/MemoryArchivist;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/MemoryArchivist$$anonfun$receiveWithLogMessages$1

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$3$$anonfun$apply$3
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lscala/Tuple2;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$3;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$3$$anonfun$apply$3

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$3
@0.9.0-milestone-1
+#apply()Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lscala/concurrent/duration/FiniteDuration;Lscala/collection/Iterable;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$3

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$getExecutionVertices$1
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$getExecutionVertices$1

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$getExecutionVertices$2$$anonfun$apply$4
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$getExecutionVertices$2;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$getExecutionVertices$2$$anonfun$apply$4

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$getExecutionVertices$2$$anonfun$apply$5
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$getExecutionVertices$2;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$getExecutionVertices$2$$anonfun$apply$5

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$getExecutionVertices$2
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)Lscala/collection/mutable/ArrayOps;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$getExecutionVertices$2

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$1$$anonfun$apply$1
@0.9.0-milestone-1
+#apply(Lscala/collection/immutable/Map;Ljava/lang/Long;)Lscala/collection/immutable/Map;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$1;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$1$$anonfun$apply$1

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$1
@0.9.0-milestone-1
+#apply(Lscala/collection/immutable/Map;Lscala/collection/immutable/List;)Lscala/collection/immutable/Map;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$1

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$2
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$2

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$1
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$1

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$3$$anonfun$apply$2
@0.9.0-milestone-1
+#apply(Ljava/lang/Long;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$3;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$3$$anonfun$apply$2

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$3
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)V
+#org$apache$flink$runtime$jobmanager$StreamCheckpointCoordinator$$anonfun$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$3

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$4
@0.9.0-milestone-1
+#apply(Lscala/Tuple3;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$4

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#org$apache$flink$runtime$jobmanager$StreamCheckpointCoordinator$$anonfun$$$outer()Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator;
+#<init>(Lorg/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$$anonfun$receiveWithLogMessages$1

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$
@0.9.0-milestone-1
+#<clinit>()V
+#spawn(Lakka/actor/ActorContext;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#spawn$default$3()Lscala/concurrent/duration/FiniteDuration;
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator$

+###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator
@0.9.0-milestone-1
+#spawn$default$3()Lscala/concurrent/duration/FiniteDuration;
+#spawn(Lakka/actor/ActorContext;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lscala/concurrent/duration/FiniteDuration;)Lakka/actor/ActorRef;
+#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
+#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
+#log()Lakka/event/LoggingAdapter;
+#receive()Lscala/PartialFunction;
+#context()Lakka/actor/ActorContext;
+#self()Lakka/actor/ActorRef;
+#akka$actor$Actor$_setter_$context_$eq(Lakka/actor/ActorContext;)V
+#akka$actor$Actor$_setter_$self_$eq(Lakka/actor/ActorRef;)V
+#sender()Lakka/actor/ActorRef;
+#aroundReceive(Lscala/PartialFunction;Ljava/lang/Object;)V
+#aroundPreStart()V
+#aroundPostStop()V
+#aroundPreRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#aroundPostRestart(Ljava/lang/Throwable;)V
+#supervisorStrategy()Lakka/actor/SupervisorStrategy;
+#preStart()V
+#postStop()V
+#preRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#postRestart(Ljava/lang/Throwable;)V
+#unhandled(Ljava/lang/Object;)V
+#executionGraph()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#vertices()Lscala/collection/Iterable;
+#acks()Lscala/collection/immutable/Map;
+#acks_$eq(Lscala/collection/immutable/Map;)V
+#states()Lscala/collection/immutable/Map;
+#states_$eq(Lscala/collection/immutable/Map;)V
+#interval()Lscala/concurrent/duration/FiniteDuration;
+#curId()Ljava/lang/Long;
+#curId_$eq(Ljava/lang/Long;)V
+#ackId()Ljava/lang/Long;
+#ackId_$eq(Ljava/lang/Long;)V
+#org$apache$flink$runtime$jobmanager$StreamCheckpointCoordinator$$executor()Lscala/concurrent/ExecutionContextExecutor;
+#receiveWithLogMessages()Lscala/PartialFunction;
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lscala/collection/Iterable;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/concurrent/duration/FiniteDuration;Ljava/lang/Long;Ljava/lang/Long;)V
@0.9.0
-###org/apache/flink/runtime/jobmanager/StreamCheckpointCoordinator

+###org/apache/flink/runtime/jobmanager/web/JobManagerInfoServlet
@0.8.1
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.9.0-milestone-1
+#<init>(Lakka/actor/ActorRef;Lakka/actor/ActorRef;Lscala/concurrent/duration/FiniteDuration;)V
-#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/web/JobManagerInfoServlet

+###org/apache/flink/runtime/messages/CheckpointingMessages$
@0.9.0-milestone-1
+#<clinit>()V
@0.9.0
-###org/apache/flink/runtime/messages/CheckpointingMessages$

+###org/apache/flink/runtime/messages/CheckpointingMessages$BarrierAck$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;IJ)Lorg/apache/flink/runtime/messages/CheckpointingMessages$BarrierAck;
+#unapply(Lorg/apache/flink/runtime/messages/CheckpointingMessages$BarrierAck;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/CheckpointingMessages$BarrierAck$

+###org/apache/flink/runtime/messages/CheckpointingMessages$BarrierAck
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#jobVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#instanceID()I
+#checkpointID()J
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;IJ)Lorg/apache/flink/runtime/messages/CheckpointingMessages$BarrierAck;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#copy$default$3()I
+#copy$default$4()J
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;IJ)V
@0.9.0
-###org/apache/flink/runtime/messages/CheckpointingMessages$BarrierAck

+###org/apache/flink/runtime/messages/CheckpointingMessages$BarrierReq$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;J)Lorg/apache/flink/runtime/messages/CheckpointingMessages$BarrierReq;
+#unapply(Lorg/apache/flink/runtime/messages/CheckpointingMessages$BarrierReq;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/CheckpointingMessages$BarrierReq$

+###org/apache/flink/runtime/messages/CheckpointingMessages$BarrierReq
@0.9.0-milestone-1
+#attemptID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#checkpointID()J
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;J)Lorg/apache/flink/runtime/messages/CheckpointingMessages$BarrierReq;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy$default$2()J
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;J)V
@0.9.0
-###org/apache/flink/runtime/messages/CheckpointingMessages$BarrierReq

+###org/apache/flink/runtime/messages/CheckpointingMessages$CheckpointingMessage
@0.9.0-milestone-1
@0.9.0
-###org/apache/flink/runtime/messages/CheckpointingMessages$CheckpointingMessage

+###org/apache/flink/runtime/messages/CheckpointingMessages$StateBarrierAck$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/flink/runtime/state/StateHandle;)Lorg/apache/flink/runtime/messages/CheckpointingMessages$StateBarrierAck;
+#unapply(Lorg/apache/flink/runtime/messages/CheckpointingMessages$StateBarrierAck;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/CheckpointingMessages$StateBarrierAck$

+###org/apache/flink/runtime/messages/CheckpointingMessages$StateBarrierAck
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#jobVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#instanceID()Ljava/lang/Integer;
+#checkpointID()Ljava/lang/Long;
+#states()Lorg/apache/flink/runtime/state/StateHandle;
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/flink/runtime/state/StateHandle;)Lorg/apache/flink/runtime/messages/CheckpointingMessages$StateBarrierAck;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#copy$default$3()Ljava/lang/Integer;
+#copy$default$4()Ljava/lang/Long;
+#copy$default$5()Lorg/apache/flink/runtime/state/StateHandle;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/flink/runtime/state/StateHandle;)V
@0.9.0
-###org/apache/flink/runtime/messages/CheckpointingMessages$StateBarrierAck

+###org/apache/flink/runtime/messages/CheckpointingMessages
@0.9.0-milestone-1
@0.9.0
-###org/apache/flink/runtime/messages/CheckpointingMessages

+###org/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsFound$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lscala/collection/immutable/Map;)Lorg/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsFound;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsFound;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsFound$

+###org/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsFound
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#results()Lscala/collection/immutable/Map;
+#asJavaMap()Ljava/util/Map;
+#copy(Lorg/apache/flink/api/common/JobID;Lscala/collection/immutable/Map;)Lorg/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsFound;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lscala/collection/immutable/Map;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lscala/collection/immutable/Map;)V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsFound

+###org/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsNotFound$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsNotFound;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsNotFound;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsNotFound$

+###org/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsNotFound
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsNotFound;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsNotFound

+###org/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsResponse
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerMessages$AccumulatorResultsResponse

+###org/apache/flink/runtime/messages/JobManagerMessages$ConsumerNotificationResult$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(ZLscala/Option;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ConsumerNotificationResult;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$ConsumerNotificationResult;)Lscala/Option;
+#$lessinit$greater$default$2()Lscala/Option;
+#apply$default$2()Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ConsumerNotificationResult$

+###org/apache/flink/runtime/messages/JobManagerMessages$ConsumerNotificationResult
@0.9.0-milestone-1
+#success()Z
+#error()Lscala/Option;
+#copy(ZLscala/Option;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ConsumerNotificationResult;
+#copy$default$1()Z
+#copy$default$2()Lscala/Option;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(ZLscala/Option;)V
@0.10.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ConsumerNotificationResult

+###org/apache/flink/runtime/messages/JobManagerMessages$ReportAccumulatorResult$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ReportAccumulatorResult;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$ReportAccumulatorResult;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ReportAccumulatorResult$

+###org/apache/flink/runtime/messages/JobManagerMessages$ReportAccumulatorResult
@0.9.0-milestone-1
+#accumulatorEvent()Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;
+#copy(Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;)Lorg/apache/flink/runtime/messages/JobManagerMessages$ReportAccumulatorResult;
+#copy$default$1()Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;)V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerMessages$ReportAccumulatorResult

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestAccumulatorResults$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestAccumulatorResults;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestAccumulatorResults;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestAccumulatorResults$

+###org/apache/flink/runtime/messages/JobManagerMessages$RequestAccumulatorResults
@0.9.0-milestone-1
+#jobID()Lorg/apache/flink/api/common/JobID;
+#copy(Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/runtime/messages/JobManagerMessages$RequestAccumulatorResults;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;)V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerMessages$RequestAccumulatorResults

+###org/apache/flink/runtime/messages/JobManagerProfilerMessages$
@0.9.0-milestone-1
+#<clinit>()V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerProfilerMessages$

+###org/apache/flink/runtime/messages/JobManagerProfilerMessages$ReportProfilingData$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/profiling/impl/types/ProfilingDataContainer;)Lorg/apache/flink/runtime/messages/JobManagerProfilerMessages$ReportProfilingData;
+#unapply(Lorg/apache/flink/runtime/messages/JobManagerProfilerMessages$ReportProfilingData;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerProfilerMessages$ReportProfilingData$

+###org/apache/flink/runtime/messages/JobManagerProfilerMessages$ReportProfilingData
@0.9.0-milestone-1
+#profilingDataContainer()Lorg/apache/flink/runtime/profiling/impl/types/ProfilingDataContainer;
+#copy(Lorg/apache/flink/runtime/profiling/impl/types/ProfilingDataContainer;)Lorg/apache/flink/runtime/messages/JobManagerProfilerMessages$ReportProfilingData;
+#copy$default$1()Lorg/apache/flink/runtime/profiling/impl/types/ProfilingDataContainer;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/profiling/impl/types/ProfilingDataContainer;)V
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerProfilerMessages$ReportProfilingData

+###org/apache/flink/runtime/messages/JobManagerProfilerMessages
@0.9.0-milestone-1
@0.9.0
-###org/apache/flink/runtime/messages/JobManagerProfilerMessages

+###org/apache/flink/runtime/messages/TaskManagerMessages$NotifyWhenRegisteredAtJobManager$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/messages/TaskManagerMessages$NotifyWhenRegisteredAtJobManager$

+###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$
@0.9.0-milestone-1
+#<clinit>()V
@0.9.0
-###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$

+###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$MonitorTask$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/taskmanager/Task;)Lorg/apache/flink/runtime/messages/TaskManagerProfilerMessages$MonitorTask;
+#unapply(Lorg/apache/flink/runtime/messages/TaskManagerProfilerMessages$MonitorTask;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$MonitorTask$

+###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$MonitorTask
@0.9.0-milestone-1
+#task()Lorg/apache/flink/runtime/taskmanager/Task;
+#copy(Lorg/apache/flink/runtime/taskmanager/Task;)Lorg/apache/flink/runtime/messages/TaskManagerProfilerMessages$MonitorTask;
+#copy$default$1()Lorg/apache/flink/runtime/taskmanager/Task;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/taskmanager/Task;)V
@0.9.0
-###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$MonitorTask

+###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$ProfileTasks$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$ProfileTasks$

+###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$RegisterProfilingListener$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$RegisterProfilingListener$

+###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$UnmonitorTask$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/TaskManagerProfilerMessages$UnmonitorTask;
+#unapply(Lorg/apache/flink/runtime/messages/TaskManagerProfilerMessages$UnmonitorTask;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$UnmonitorTask$

+###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$UnmonitorTask
@0.9.0-milestone-1
+#executionID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/TaskManagerProfilerMessages$UnmonitorTask;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@0.9.0
-###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$UnmonitorTask

+###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$UnregisterProfilingListener$
@0.9.0-milestone-1
+#<clinit>()V
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/TaskManagerProfilerMessages$UnregisterProfilingListener$

+###org/apache/flink/runtime/messages/TaskManagerProfilerMessages
@0.9.0-milestone-1
@0.9.0
-###org/apache/flink/runtime/messages/TaskManagerProfilerMessages

+###org/apache/flink/runtime/messages/TaskMessages$UnregisterTask$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/TaskMessages$UnregisterTask;
+#unapply(Lorg/apache/flink/runtime/messages/TaskMessages$UnregisterTask;)Lscala/Option;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.9.0
-###org/apache/flink/runtime/messages/TaskMessages$UnregisterTask$

+###org/apache/flink/runtime/messages/TaskMessages$UnregisterTask
@0.9.0-milestone-1
+#executionID()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)Lorg/apache/flink/runtime/messages/TaskMessages$UnregisterTask;
+#copy$default$1()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
@0.9.0
-###org/apache/flink/runtime/messages/TaskMessages$UnregisterTask

+###org/apache/flink/runtime/minicluster/LocalFlinkMiniCluster$
@0.9.0-milestone-1
+#<clinit>()V
+#LOG()Lorg/slf4j/Logger;
+#main([Ljava/lang/String;)V
+#$lessinit$greater$default$2()Z
@0.9.0
-#$lessinit$greater$default$2()Z
@0.10.0
-###org/apache/flink/runtime/minicluster/LocalFlinkMiniCluster$

+###org/apache/flink/runtime/operators/hash/HashMatchIteratorBase
@0.9.0-milestone-1
+#<init>()V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
@0.10.0
-###org/apache/flink/runtime/operators/hash/HashMatchIteratorBase

+###org/apache/flink/runtime/operators/hash/NonReusingBuildFirstHashMatchIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V
@0.10.0
-###org/apache/flink/runtime/operators/hash/NonReusingBuildFirstHashMatchIterator

+###org/apache/flink/runtime/operators/hash/NonReusingBuildFirstReOpenableHashMatchIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
@0.10.0
-###org/apache/flink/runtime/operators/hash/NonReusingBuildFirstReOpenableHashMatchIterator

+###org/apache/flink/runtime/operators/hash/NonReusingBuildSecondHashMatchIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V
@0.10.0
-###org/apache/flink/runtime/operators/hash/NonReusingBuildSecondHashMatchIterator

+###org/apache/flink/runtime/operators/hash/NonReusingBuildSecondReOpenableHashMatchIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
@0.10.0
-###org/apache/flink/runtime/operators/hash/NonReusingBuildSecondReOpenableHashMatchIterator

+###org/apache/flink/runtime/operators/hash/ReusingBuildFirstHashMatchIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V
@0.10.0
-###org/apache/flink/runtime/operators/hash/ReusingBuildFirstHashMatchIterator

+###org/apache/flink/runtime/operators/hash/ReusingBuildFirstReOpenableHashMatchIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
@0.10.0
-###org/apache/flink/runtime/operators/hash/ReusingBuildFirstReOpenableHashMatchIterator

+###org/apache/flink/runtime/operators/hash/ReusingBuildSecondHashMatchIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#open()V
+#close()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
+#abort()V
@0.10.0
-###org/apache/flink/runtime/operators/hash/ReusingBuildSecondHashMatchIterator

+###org/apache/flink/runtime/operators/hash/ReusingBuildSecondReOpenableHashMatchIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)V
+#getHashJoin(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;D)Lorg/apache/flink/runtime/operators/hash/MutableHashTable;
+#reopenProbe(Lorg/apache/flink/util/MutableObjectIterator;)V
@0.10.0
-###org/apache/flink/runtime/operators/hash/ReusingBuildSecondReOpenableHashMatchIterator

+###org/apache/flink/runtime/operators/sort/NonReusingMergeMatchIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#open()V
+#close()V
+#abort()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
@0.10.0
-###org/apache/flink/runtime/operators/sort/NonReusingMergeMatchIterator

+###org/apache/flink/runtime/operators/sort/ReusingMergeMatchIterator
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/io/disk/iomanager/IOManager;ILorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;)V
+#open()V
+#close()V
+#abort()V
+#callWithNextKey(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/util/Collector;)Z
@0.10.0
-###org/apache/flink/runtime/operators/sort/ReusingMergeMatchIterator

+###org/apache/flink/runtime/state/OperatorState
@0.9.0-milestone-1
+#<init>(Ljava/lang/Object;)V
+#getState()Ljava/lang/Object;
+#update(Ljava/lang/Object;)V
+#checkpoint()Lorg/apache/flink/runtime/state/StateCheckpoint;
+#toString()Ljava/lang/String;
+#stateEquals(Lorg/apache/flink/runtime/state/OperatorState;)Z
@0.9.0
-###org/apache/flink/runtime/state/OperatorState

+###org/apache/flink/runtime/state/StateCheckpoint
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/runtime/state/OperatorState;)V
+#restore()Lorg/apache/flink/runtime/state/OperatorState;
+#toString()Ljava/lang/String;
+#stateEquals(Lorg/apache/flink/runtime/state/StateCheckpoint;)Z
@0.9.0
-###org/apache/flink/runtime/state/StateCheckpoint

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$5
@0.9.0-milestone-1
+#run()V
+#run()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$5

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1
@0.9.0-milestone-1
+#apply()V
+#apply$mcV$sp()V
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5;Lorg/apache/flink/runtime/deployment/InputChannelDeploymentDescriptor;Lorg/apache/flink/runtime/io/network/partition/consumer/SingleInputGate;)V
@0.9.0
+#org$apache$flink$runtime$taskmanager$TaskManager$$anonfun$$anonfun$$$outer()Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5;
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$6
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)Ljava/lang/String;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$6

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$5$$anonfun$apply$2
@0.9.0-milestone-1
+#apply(Lscala/util/Try;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$5;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/execution/ExecutionState;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleTaskMessage$5$$anonfun$apply$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendHeartbeatToJobManager$1
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorRef;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;[B)V
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
-#apply(Lakka/actor/ActorRef;)V
-#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;[B)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendHeartbeatToJobManager$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$unregisterTaskAndNotifyFinalState$1
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheManager;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/taskmanager/Task;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$unregisterTaskAndNotifyFinalState$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$receiveWithLogMessages$1
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$receiveWithLogMessages$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$removeAllTaskResources$1
@0.9.0-milestone-1
+#apply(Ljava/util/Map$Entry;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lorg/apache/flink/runtime/taskmanager/Task;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$removeAllTaskResources$1

+###org/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration$
@0.9.0-milestone-1
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/String;)Lorg/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration;
+#unapply(Lorg/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration;)Lscala/Option;
+#$lessinit$greater$default$1()Ljava/lang/String;
+#apply$default$1()Ljava/lang/String;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration$

+###org/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration
@0.9.0-milestone-1
+#apply$default$1()Ljava/lang/String;
+#$lessinit$greater$default$1()Ljava/lang/String;
+#andThen(Lscala/Function1;)Lscala/Function1;
+#compose(Lscala/Function1;)Lscala/Function1;
+#configDir()Ljava/lang/String;
+#copy(Ljava/lang/String;)Lorg/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration;
+#copy$default$1()Ljava/lang/String;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/String;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManagerCLIConfiguration

+###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$1
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$1

+###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2$$anonfun$apply$1
@0.9.0-milestone-1
+#apply(Lorg/apache/flink/runtime/profiling/impl/types/InternalInstanceProfilingData;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2$$anonfun$apply$1

+###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2$$anonfun$apply$2
@0.9.0-milestone-1
+#apply(Lakka/actor/ActorRef;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2$$anonfun$apply$2

+###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2
@0.9.0-milestone-1
+#apply(Lscala/Tuple2;)V
+#org$apache$flink$runtime$taskmanager$TaskManagerProfiler$$anonfun$$anonfun$$$outer()Lorg/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1;JLorg/apache/flink/runtime/profiling/impl/types/ProfilingDataContainer;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$2

+###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1
@0.9.0-milestone-1
+#applyOrElse(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
+#isDefinedAt(Ljava/lang/Object;)Z
+#org$apache$flink$runtime$taskmanager$TaskManagerProfiler$$anonfun$$$outer()Lorg/apache/flink/runtime/taskmanager/TaskManagerProfiler;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerProfiler;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$receiveWithLogMessages$1

+###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$stopMonitoring$1
@0.9.0-milestone-1
+#apply(Lakka/actor/Cancellable;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManagerProfiler;)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManagerProfiler$$anonfun$stopMonitoring$1

+###org/apache/flink/runtime/taskmanager/TaskManagerProfiler
@0.9.0-milestone-1
+#akka$actor$ActorLogging$$_log()Lakka/event/LoggingAdapter;
+#akka$actor$ActorLogging$$_log_$eq(Lakka/event/LoggingAdapter;)V
+#log()Lakka/event/LoggingAdapter;
+#receive()Lscala/PartialFunction;
+#context()Lakka/actor/ActorContext;
+#self()Lakka/actor/ActorRef;
+#akka$actor$Actor$_setter_$context_$eq(Lakka/actor/ActorContext;)V
+#akka$actor$Actor$_setter_$self_$eq(Lakka/actor/ActorRef;)V
+#sender()Lakka/actor/ActorRef;
+#aroundReceive(Lscala/PartialFunction;Ljava/lang/Object;)V
+#aroundPreStart()V
+#aroundPostStop()V
+#aroundPreRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#aroundPostRestart(Ljava/lang/Throwable;)V
+#supervisorStrategy()Lakka/actor/SupervisorStrategy;
+#preStart()V
+#postStop()V
+#preRestart(Ljava/lang/Throwable;Lscala/Option;)V
+#postRestart(Ljava/lang/Throwable;)V
+#instancePath()Ljava/lang/String;
+#reportInterval()I
+#tmx()Ljava/lang/management/ThreadMXBean;
+#instanceProfiler()Lorg/apache/flink/runtime/profiling/impl/InstanceProfiler;
+#listeners()Lscala/collection/mutable/Set;
+#environments()Lscala/collection/mutable/HashMap;
+#monitoredThreads()Lscala/collection/mutable/HashMap;
+#monitoringScheduler()Lscala/Option;
+#monitoringScheduler_$eq(Lscala/Option;)V
+#receiveWithLogMessages()Lscala/PartialFunction;
+#unhandled(Ljava/lang/Object;)V
+#startMonitoring()V
+#stopMonitoring()V
+#registerMainThreadForCPUProfiling(Lorg/apache/flink/runtime/execution/RuntimeEnvironment;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#unregisterMainThreadFromCPUProfiling(Lorg/apache/flink/runtime/execution/RuntimeEnvironment;)V
+#<init>(Ljava/lang/String;I)V
@0.9.0
-###org/apache/flink/runtime/taskmanager/TaskManagerProfiler

+###org/apache/flink/runtime/webmonitor/WebMonitorUtils$LogFiles
@0.10.0
+#find(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/webmonitor/WebMonitorUtils$LogFiles;
@0.10.2
-###org/apache/flink/runtime/webmonitor/WebMonitorUtils$LogFiles

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$1$$anonfun$apply$mcV$sp$19
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$1;)V
@0.10.2
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$1$$anonfun$apply$mcV$sp$19

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5$$anonfun$apply$mcV$sp$12
@0.10.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5;Ljava/lang/Exception;)V
@0.10.2
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5$$anonfun$apply$mcV$sp$12

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1$$anonfun$apply$mcV$sp$22
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1;Ljava/lang/Throwable;)V
@0.10.2
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1$$anonfun$apply$mcV$sp$22

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5$$anonfun$apply$mcV$sp$11
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5;)V
@0.10.2
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$5$$anonfun$apply$mcV$sp$11

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1$$anonfun$apply$mcV$sp$18
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1;Ljava/lang/Throwable;)V
@0.10.2
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1$$anonfun$apply$mcV$sp$18

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1$$anonfun$apply$mcV$sp$17
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1;)V
@0.10.2
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$1$$anonfun$apply$mcV$sp$17

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$13
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1;)V
@0.10.2
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$13

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$1$$anonfun$apply$mcV$sp$20
@0.10.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$1;Ljava/lang/Throwable;)V
@0.10.2
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$1$$anonfun$apply$mcV$sp$20

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$14
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1;)V
@0.10.2
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$1$$anonfun$apply$mcV$sp$14

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1$$anonfun$apply$mcV$sp$21
@0.10.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1;)V
@0.10.2
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$16$$anonfun$apply$1$$anonfun$apply$mcV$sp$21

+###org/apache/flink/runtime/ActorSynchronousLogging$class
@0.9.0
+#log(Lorg/apache/flink/runtime/ActorSynchronousLogging;)Lgrizzled/slf4j/Logger;
+#$init$(Lorg/apache/flink/runtime/ActorSynchronousLogging;)V
@0.10.0
-###org/apache/flink/runtime/ActorSynchronousLogging$class

+###org/apache/flink/runtime/checkpoint/SuccessfulCheckpoint
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;JJLjava/util/List;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#getCheckpointID()J
+#getTimestamp()J
+#getStates()Ljava/util/List;
+#discard(Ljava/lang/ClassLoader;)V
+#toString()Ljava/lang/String;
@0.10.0
-###org/apache/flink/runtime/checkpoint/SuccessfulCheckpoint

+###org/apache/flink/runtime/messages/accumulators/ReportAccumulatorResult$
@0.9.0
+#<clinit>()V
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;)Lorg/apache/flink/runtime/messages/accumulators/ReportAccumulatorResult;
+#unapply(Lorg/apache/flink/runtime/messages/accumulators/ReportAccumulatorResult;)Lscala/Option;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@0.10.0
-###org/apache/flink/runtime/messages/accumulators/ReportAccumulatorResult$

+###org/apache/flink/runtime/messages/accumulators/ReportAccumulatorResult
@0.9.0
+#tupled()Lscala/Function1;
+#curried()Lscala/Function1;
+#jobID()Lorg/apache/flink/api/common/JobID;
+#executionId()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#accumulatorEvent()Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;
+#copy(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;)Lorg/apache/flink/runtime/messages/accumulators/ReportAccumulatorResult;
+#copy$default$1()Lorg/apache/flink/api/common/JobID;
+#copy$default$2()Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;
+#copy$default$3()Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;
+#productPrefix()Ljava/lang/String;
+#productArity()I
+#productElement(I)Ljava/lang/Object;
+#productIterator()Lscala/collection/Iterator;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;Lorg/apache/flink/runtime/accumulators/AccumulatorEvent;)V
@0.10.0
-###org/apache/flink/runtime/messages/accumulators/ReportAccumulatorResult

+###org/apache/flink/runtime/messages/checkpoint/ConfirmCheckpoint
@0.9.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;JJ)V
+#getTimestamp()J
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@0.10.0
-###org/apache/flink/runtime/messages/checkpoint/ConfirmCheckpoint

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1$$anonfun$apply$mcV$sp$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1$$anonfun$apply$mcV$sp$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendHeartbeatToJobManager$2
@0.9.0
+#apply(Lakka/actor/ActorRef;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;[B)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendHeartbeatToJobManager$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$getMethodToFetchCPULoad$1
@0.9.0
+#apply(Ljava/lang/reflect/Method;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$getMethodToFetchCPULoad$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$createMetricsRegistry$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$createMetricsRegistry$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$selectNetworkInterfaceAndPort$4
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lscala/runtime/ObjectRef;Ljava/net/InetAddress;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$selectNetworkInterfaceAndPort$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$selectNetworkInterfaceAndPort$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$selectNetworkInterfaceAndPort$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendHeartbeatToJobManager$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendHeartbeatToJobManager$3

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1$$anonfun$apply$mcV$sp$4
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1;Ljava/lang/Throwable;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1$$anonfun$apply$mcV$sp$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleJobManagerDisconnect$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Lakka/actor/ActorRef;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleJobManagerDisconnect$2

+###org/apache/flink/runtime/taskmanager/TaskManager$$anon$1$$anonfun$8
@0.9.0
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/taskmanager/TaskManagerCliOptions;)Lorg/apache/flink/runtime/taskmanager/TaskManagerCliOptions;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anon$1;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anon$1$$anonfun$8

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1$$anonfun$apply$mcV$sp$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1$$anonfun$apply$mcV$sp$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleJobManagerDisconnect$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/String;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$handleJobManagerDisconnect$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$receiveWithLogMessages$1;Lakka/actor/ActorRef;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$1

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendHeartbeatToJobManager$4
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager;Ljava/lang/Exception;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$org$apache$flink$runtime$taskmanager$TaskManager$$sendHeartbeatToJobManager$4

+###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1$$anonfun$apply$mcV$sp$2
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1;Ljava/lang/Throwable;)V
@0.10.0
-###org/apache/flink/runtime/taskmanager/TaskManager$$anonfun$5$$anonfun$apply$1$$anonfun$apply$mcV$sp$2

+###org/apache/flink/runtime/util/SerializedValue
@0.9.0
+#<init>(Ljava/lang/Object;)V
+#deserializeValue(Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@0.10.0
-###org/apache/flink/runtime/util/SerializedValue

+###org/apache/flink/runtime/ActorLogMessages$$anon$1$$anonfun$apply$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/ActorLogMessages$$anon$1;Ljava/lang/Object;J)V
@0.10.0
-###org/apache/flink/runtime/ActorLogMessages$$anon$1$$anonfun$apply$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$12
@0.9.0
+#apply(Lscala/Tuple2;)Lorg/apache/flink/runtime/client/JobStatusMessage;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$12

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$5
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$6
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$5
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$10
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$10

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$11
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$11

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$1

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$7
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/runtime/taskmanager/TaskExecutionState;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$7
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Exception;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$2
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/String;I)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$2

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$6
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$9
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Ljava/lang/Throwable;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$9

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$16
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lakka/actor/ActorRef;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$16

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$11
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$submitJob$11

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$20
@0.9.0
+#apply()Lscala/runtime/Nothing$;
+#apply()Ljava/lang/Object;
+#<init>([Ljava/lang/String;Lscopt/OptionParser;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$20

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$11
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$11

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$6
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$5
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$4
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$removeJob$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$removeJob$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$4
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Ljava/lang/Exception;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$6
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/runtime/jobgraph/JobVertexID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$6

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$10
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$10

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$7
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$9
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Ljava/lang/Throwable;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$9

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$7
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$7

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/core/io/InputSplit;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$3
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$3

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$removeJob$4
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Throwable;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$removeJob$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$17
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Ljava/lang/String;Lakka/actor/ActorRef;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$17

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$5
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Ljava/lang/Exception;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$5

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$4
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleAccumulatorMessage$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$18
@0.9.0
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;)Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$18

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$4
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Ljava/lang/Exception;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$4

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$8
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>()V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$runJobManager$8

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$14
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$14

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$15
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Ljava/lang/Throwable;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$15

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$10
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$10

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$13
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/runtime/instance/InstanceID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$13

+###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$17
@0.9.0
+#apply(Ljava/lang/String;Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;)Lorg/apache/flink/runtime/jobmanager/JobManagerCliOptions;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anon$1;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anon$1$$anonfun$17

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$8
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/jobgraph/JobStatus;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$8

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$8
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$8

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$12
@0.9.0
+#apply()Ljava/lang/Throwable;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Ljava/lang/Throwable;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$applyOrElse$12

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$9
@0.9.0
+#apply()Ljava/lang/Exception;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;Ljava/lang/Exception;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$9

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$11
@0.9.0
+#apply(Lscala/Tuple2;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$receiveWithLogMessages$1$$anonfun$11

+###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$4
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/jobmanager/JobManager;Lorg/apache/flink/api/common/JobID;)V
@0.10.0
-###org/apache/flink/runtime/jobmanager/JobManager$$anonfun$org$apache$flink$runtime$jobmanager$JobManager$$handleCheckpointMessage$4

+###org/apache/flink/runtime/state/ByteStreamStateHandle
@0.9.0
+#<init>(Ljava/io/Serializable;)V
+#getState()Ljava/io/Serializable;
+#stateFetched()Z
+#getState()Ljava/lang/Object;
@0.10.0
-###org/apache/flink/runtime/state/ByteStreamStateHandle

+###org/apache/flink/runtime/state/StateHandleProvider
@0.9.0
+#createStateHandle(Ljava/lang/Object;)Lorg/apache/flink/runtime/state/StateHandle;
@0.10.0
-###org/apache/flink/runtime/state/StateHandleProvider

+###org/apache/flink/runtime/state/FileStateHandle
@0.9.0
+#<init>(Ljava/io/Serializable;Ljava/lang/String;)V
+#discardState()V
+#createProvider(Ljava/lang/String;)Lorg/apache/flink/runtime/state/StateHandleProvider;
@0.10.0
-###org/apache/flink/runtime/state/FileStateHandle

+###org/apache/flink/runtime/ActorSynchronousLogging
@0.9.0
+#log()Lgrizzled/slf4j/Logger;
@0.10.0
-###org/apache/flink/runtime/ActorSynchronousLogging

+###org/apache/flink/runtime/ActorLogMessages$$anon$1$$anonfun$apply$1
@0.9.0
+#apply()Ljava/lang/String;
+#apply()Ljava/lang/Object;
+#<init>(Lorg/apache/flink/runtime/ActorLogMessages$$anon$1;Ljava/lang/Object;)V
@0.10.0
-###org/apache/flink/runtime/ActorLogMessages$$anon$1$$anonfun$apply$1

+###org/apache/flink/runtime/jobgraph/tasks/CheckpointCommittingOperator
@0.9.0
+#confirmCheckpoint(JJ)V
@0.10.0
-###org/apache/flink/runtime/jobgraph/tasks/CheckpointCommittingOperator

+###org/apache/flink/runtime/jobgraph/tasks/CheckpointedOperator
@0.9.0
+#triggerCheckpoint(JJ)V
@0.10.0
-###org/apache/flink/runtime/jobgraph/tasks/CheckpointedOperator

+###org/apache/flink/runtime/topology/NetworkTopologyIterator
@0.6-hadoop2-incubating
+#hasNext()Z
+#next()Lorg/apache/flink/runtime/topology/NetworkNode;
+#remove()V
+#next()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/topology/NetworkTopologyIterator

+###org/apache/flink/runtime/topology/NetworkTopology
@0.6-hadoop2-incubating
+#<init>()V
+#fromFile(Ljava/io/File;)Lorg/apache/flink/runtime/topology/NetworkTopology;
+#fromFile(Ljava/lang/String;)Lorg/apache/flink/runtime/topology/NetworkTopology;
+#createEmptyTopology()Lorg/apache/flink/runtime/topology/NetworkTopology;
+#getNodeByName(Ljava/lang/String;)Lorg/apache/flink/runtime/topology/NetworkNode;
+#getRootNode()Lorg/apache/flink/runtime/topology/NetworkNode;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getDepth()I
+#toString()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
+#setAttachment(Ljava/lang/Object;)V
+#getAttachment()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/topology/NetworkTopology

+###org/apache/flink/runtime/topology/NetworkNode
@0.6-hadoop2-incubating
+#remove()V
+#isRootNode()Z
+#isLeafNode()Z
+#getName()Ljava/lang/String;
+#getDepth()I
+#getHeight()I
+#getNumberOfChildNodes()I
+#getChildNode(I)Lorg/apache/flink/runtime/topology/NetworkNode;
+#getParentNode()Lorg/apache/flink/runtime/topology/NetworkNode;
+#getNetworkTopology()Lorg/apache/flink/runtime/topology/NetworkTopology;
+#getDistance(Lorg/apache/flink/runtime/topology/NetworkNode;)I
+#getDistance(Ljava/lang/String;)I
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#toString()Ljava/lang/String;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/topology/NetworkNode

+###org/apache/flink/runtime/managementgraph/ManagementGroupVertexID
@0.6-hadoop2-incubating
+#<init>()V
+#<init>([B)V
+#fromHexString(Ljava/lang/String;)Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertexID;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementGroupVertexID

+###org/apache/flink/runtime/managementgraph/ManagementVertexID
@0.6-hadoop2-incubating
+#<init>()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementVertexID

+###org/apache/flink/runtime/managementgraph/ManagementAttachment
@0.6-hadoop2-incubating
+#<init>()V
+#setAttachment(Ljava/lang/Object;)V
+#getAttachment()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementAttachment

+###org/apache/flink/runtime/managementgraph/ManagementGroupEdge
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;ILorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;ILorg/apache/flink/runtime/io/network/channels/ChannelType;)V
+#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#getSource()Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;
+#getTarget()Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;
+#getSourceIndex()I
+#getTargetIndex()I
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementGroupEdge

+###org/apache/flink/runtime/managementgraph/ManagementGroupVertex
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementStage;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementStage;Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertexID;Ljava/lang/String;)V
+#getID()Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertexID;
+#getName()Ljava/lang/String;
+#getNumberOfForwardEdges()I
+#getNumberOfBackwardEdges()I
+#getForwardEdge(I)Lorg/apache/flink/runtime/managementgraph/ManagementGroupEdge;
+#getBackwardEdge(I)Lorg/apache/flink/runtime/managementgraph/ManagementGroupEdge;
+#getStage()Lorg/apache/flink/runtime/managementgraph/ManagementStage;
+#getGraph()Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
+#getNumberOfGroupMembers()I
+#getGroupMember(I)Lorg/apache/flink/runtime/managementgraph/ManagementVertex;
+#getGroupMembers()Ljava/util/List;
+#isInputVertex()Z
+#isOutputVertex()Z
+#getStageNumber()I
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getSuccessors()Ljava/util/List;
+#getPredecessors()Ljava/util/List;
+#toString()Ljava/lang/String;
+#toJson()Ljava/lang/String;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementGroupVertex

+###org/apache/flink/runtime/managementgraph/ManagementStage
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementGraph;I)V
+#getGraph()Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
+#getStageNumber()I
+#getNumberOfGroupVertices()I
+#getGroupVertex(I)Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;
+#getNumberOfInputManagementVertices()I
+#getNumberOfOutputManagementVertices()I
+#getInputManagementVertex(I)Lorg/apache/flink/runtime/managementgraph/ManagementVertex;
+#getOutputManagementVertex(I)Lorg/apache/flink/runtime/managementgraph/ManagementVertex;
+#getNumberOfInputGroupVertices()I
+#getInputGroupVertex(I)Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;
+#getNumberOfOutputGroupVertices()I
+#getOutputGroupVertex(I)Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementStage

+###org/apache/flink/runtime/managementgraph/ManagementGraphIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementGraph;Z)V
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementGraph;IZZ)V
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementGraph;Lorg/apache/flink/runtime/managementgraph/ManagementVertex;Z)V
+#hasNext()Z
+#next()Lorg/apache/flink/runtime/managementgraph/ManagementVertex;
+#remove()V
+#next()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementGraphIterator

+###org/apache/flink/runtime/managementgraph/ManagementVertex
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;Ljava/lang/String;I)V
+#getInstanceName()Ljava/lang/String;
+#getNumberOfInputGates()I
+#getNumberOfOutputGates()I
+#getInputGate(I)Lorg/apache/flink/runtime/managementgraph/ManagementGate;
+#getOutputGate(I)Lorg/apache/flink/runtime/managementgraph/ManagementGate;
+#getGroupVertex()Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;
+#getGraph()Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
+#getID()Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;
+#getName()Ljava/lang/String;
+#getNumberOfVerticesInGroup()I
+#getIndexInGroup()I
+#setExecutionState(Lorg/apache/flink/runtime/execution/ExecutionState;)V
+#getExecutionState()Lorg/apache/flink/runtime/execution/ExecutionState;
+#setInstanceName(Ljava/lang/String;)V
+#setOptMessage(Ljava/lang/String;)V
+#getOptMessage()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#toString()Ljava/lang/String;
+#toJson()Ljava/lang/String;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementVertex

+###org/apache/flink/runtime/managementgraph/ManagementEdge
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementEdgeID;Lorg/apache/flink/runtime/managementgraph/ManagementEdgeID;Lorg/apache/flink/runtime/managementgraph/ManagementGate;ILorg/apache/flink/runtime/managementgraph/ManagementGate;ILorg/apache/flink/runtime/io/network/channels/ChannelType;)V
+#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#getSource()Lorg/apache/flink/runtime/managementgraph/ManagementGate;
+#getTarget()Lorg/apache/flink/runtime/managementgraph/ManagementGate;
+#getSourceIndex()I
+#getTargetIndex()I
+#getSourceEdgeID()Lorg/apache/flink/runtime/managementgraph/ManagementEdgeID;
+#getTargetEdgeID()Lorg/apache/flink/runtime/managementgraph/ManagementEdgeID;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementEdge

+###org/apache/flink/runtime/managementgraph/ManagementGate
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementVertex;Lorg/apache/flink/runtime/managementgraph/ManagementGateID;IZ)V
+#isInputGate()Z
+#getGraph()Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
+#getNumberOfForwardEdges()I
+#getNumberOfBackwardEdges()I
+#getIndex()I
+#getForwardEdge(I)Lorg/apache/flink/runtime/managementgraph/ManagementEdge;
+#getBackwardEdge(I)Lorg/apache/flink/runtime/managementgraph/ManagementEdge;
+#getVertex()Lorg/apache/flink/runtime/managementgraph/ManagementVertex;
+#getManagementGateID()Lorg/apache/flink/runtime/managementgraph/ManagementGateID;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementGate

+###org/apache/flink/runtime/managementgraph/ManagementGraph
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;)V
+#<init>()V
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getVertexByID(Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;)Lorg/apache/flink/runtime/managementgraph/ManagementVertex;
+#getGroupVertexByID(Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertexID;)Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;
+#getNumberOfStages()I
+#getStage(I)Lorg/apache/flink/runtime/managementgraph/ManagementStage;
+#getNumberOfInputGroupVertices(I)I
+#getNumberOfOutputGroupVertices(I)I
+#getInputGroupVertex(II)Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;
+#getOutputGroupVertex(II)Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;
+#getNumberOfInputVertices(I)I
+#getNumberOfOutputVertices(I)I
+#getInputVertex(II)Lorg/apache/flink/runtime/managementgraph/ManagementVertex;
+#getOutputVertex(II)Lorg/apache/flink/runtime/managementgraph/ManagementVertex;
+#getGroupVertices()Ljava/util/Collection;
+#getGroupVerticesInTopologicalOrder()Ljava/util/List;
+#getGroupVerticesInReverseTopologicalOrder()Ljava/util/List;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementGraph

+###org/apache/flink/runtime/managementgraph/ManagementGroupVertexIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/managementgraph/ManagementGraph;ZI)V
+#hasNext()Z
+#next()Lorg/apache/flink/runtime/managementgraph/ManagementGroupVertex;
+#remove()V
+#next()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementGroupVertexIterator

+###org/apache/flink/runtime/managementgraph/ManagementGateID
@0.6-hadoop2-incubating
+#<init>()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementGateID

+###org/apache/flink/runtime/managementgraph/ManagementEdgeID
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/io/network/channels/ChannelID;)V
+#toChannelID()Lorg/apache/flink/runtime/io/network/channels/ChannelID;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/managementgraph/ManagementEdgeID

+###org/apache/flink/runtime/jobmanager/splitassigner/file/FileInputSplitAssigner
@0.6-hadoop2-incubating
+#<init>()V
+#registerGroupVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)V
+#unregisterGroupVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)V
+#getNextInputSplit(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/core/io/InputSplit;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/splitassigner/file/FileInputSplitAssigner

+###org/apache/flink/runtime/jobmanager/splitassigner/file/FileInputSplitList
@0.6-hadoop2-incubating
+#<init>()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/splitassigner/file/FileInputSplitList

+###org/apache/flink/runtime/jobmanager/splitassigner/InputSplitAssigner
@0.6-hadoop2-incubating
+#registerGroupVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)V
+#unregisterGroupVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)V
+#getNextInputSplit(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/core/io/InputSplit;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/splitassigner/InputSplitAssigner

+###org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner
@0.6-hadoop2-incubating
+#<init>()V
+#registerGroupVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)V
+#unregisterGroupVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)V
+#getNextInputSplit(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/core/io/InputSplit;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitAssigner

+###org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitList
@0.6-hadoop2-incubating
+#<init>()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/splitassigner/LocatableInputSplitList

+###org/apache/flink/runtime/jobmanager/splitassigner/DefaultInputSplitAssigner
@0.6-hadoop2-incubating
+#<init>()V
+#registerGroupVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)V
+#unregisterGroupVertex(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)V
+#getNextInputSplit(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)Lorg/apache/flink/core/io/InputSplit;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/splitassigner/DefaultInputSplitAssigner

+###org/apache/flink/runtime/jobmanager/splitassigner/InputSplitWrapper
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/core/io/InputSplit;)V
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getInputSplit()Lorg/apache/flink/core/io/InputSplit;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/splitassigner/InputSplitWrapper

+###org/apache/flink/runtime/jobmanager/splitassigner/InputSplitManager
@0.6-hadoop2-incubating
+#<init>()V
+#registerJob(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#unregisterJob(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#getNextInputSplit(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;I)Lorg/apache/flink/core/io/InputSplit;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/splitassigner/InputSplitManager

+###org/apache/flink/runtime/jobmanager/DeploymentManager
@0.6-hadoop2-incubating
+#deploy(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/instance/Instance;Ljava/util/List;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/DeploymentManager

+###org/apache/flink/runtime/jobmanager/JobManagerUtils
@0.6-hadoop2-incubating
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/JobManagerUtils

+###org/apache/flink/runtime/jobmanager/scheduler/DefaultExecutionListener
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobmanager/scheduler/DefaultScheduler;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#executionStateChanged(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/execution/ExecutionState;Ljava/lang/String;)V
+#userThreadFinished(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
+#userThreadStarted(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Ljava/lang/Thread;)V
+#getPriority()I
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/scheduler/DefaultExecutionListener

+###org/apache/flink/runtime/jobmanager/scheduler/DefaultScheduler
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/jobmanager/DeploymentManager;Lorg/apache/flink/runtime/instance/InstanceManager;)V
+#scheduleJob(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#getExecutionGraphByID(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#shutdown()V
+#jobStatusHasChanged(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;Ljava/lang/String;)V
+#nextExecutionStageEntered(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionStage;)V
+#getInstanceManager()Lorg/apache/flink/runtime/instance/InstanceManager;
+#deployAssignedVertices(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#deployAssignedPipeline(Lorg/apache/flink/runtime/executiongraph/ExecutionPipeline;)V
+#deployAssignedVertices(Ljava/util/Collection;)V
+#deployAssignedInputVertices(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)V
+#resourcesAllocated(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/List;)V
+#checkAndReleaseAllocatedResource(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/instance/AllocatedResource;)V
+#allocatedResourcesDied(Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/List;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/scheduler/DefaultScheduler

+###org/apache/flink/runtime/jobmanager/scheduler/SchedulingException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobmanager/scheduler/SchedulingException

+###org/apache/flink/runtime/execution/ExecutionStateTransition
@0.6-hadoop2-incubating
+#checkTransition(ZLjava/lang/String;Lorg/apache/flink/runtime/execution/ExecutionState;Lorg/apache/flink/runtime/execution/ExecutionState;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/execution/ExecutionStateTransition

+###org/apache/flink/runtime/execution/librarycache/LibraryCacheUpdate
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/execution/librarycache/LibraryCacheUpdate

+###org/apache/flink/runtime/execution/librarycache/LibraryCacheProfileRequest
@0.6-hadoop2-incubating
+#<init>()V
+#getRequiredLibraries()[Ljava/lang/String;
+#setRequiredLibraries([Ljava/lang/String;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/execution/librarycache/LibraryCacheProfileRequest

+###org/apache/flink/runtime/execution/librarycache/LibraryCacheProfileResponse
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/execution/librarycache/LibraryCacheProfileRequest;)V
+#<init>()V
+#setCached(IZ)V
+#isCached(I)Z
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/execution/librarycache/LibraryCacheProfileResponse

+###org/apache/flink/runtime/jobgraph/JobOutputVertex
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#setOutputFormat(Lorg/apache/flink/api/common/io/OutputFormat;)V
+#initializeOutputFormatFromTaskConfig(Ljava/lang/ClassLoader;)V
+#getOutputFormat()Lorg/apache/flink/api/common/io/OutputFormat;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobgraph/JobOutputVertex

+###org/apache/flink/runtime/jobgraph/AbstractJobOutputVertex
@0.6-hadoop2-incubating
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobgraph/AbstractJobOutputVertex

+###org/apache/flink/runtime/jobgraph/AbstractJobInputVertex
@0.6-hadoop2-incubating
+#getInputSplitType()Ljava/lang/Class;
+#getInputSplits(I)[Lorg/apache/flink/core/io/InputSplit;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobgraph/AbstractJobInputVertex

+###org/apache/flink/runtime/jobgraph/JobGraphDefinitionException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobgraph/JobGraphDefinitionException

+###org/apache/flink/runtime/jobgraph/JobInputVertex
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#setInputFormat(Lorg/apache/flink/api/common/io/InputFormat;)V
+#initializeInputFormatFromTaskConfig(Ljava/lang/ClassLoader;)V
+#getInputSplitType()Ljava/lang/Class;
+#getInputSplits(I)[Lorg/apache/flink/core/io/InputSplit;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobgraph/JobInputVertex

+###org/apache/flink/runtime/jobgraph/JobTaskVertex
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobGraph;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/jobgraph/JobTaskVertex

+###org/apache/flink/runtime/JobSubmissionException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/JobSubmissionException

+###org/apache/flink/runtime/executiongraph/ExecutionGroupVertex
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;Lorg/apache/flink/runtime/jobgraph/JobVertexID;Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;IZILorg/apache/flink/configuration/Configuration;Lorg/apache/flink/runtime/executiongraph/ExecutionSignature;Ljava/lang/Class;)V
+#getName()Ljava/lang/String;
+#setExecutionStage(Lorg/apache/flink/runtime/executiongraph/ExecutionStage;)V
+#getExecutionStage()Lorg/apache/flink/runtime/executiongraph/ExecutionStage;
+#getGroupMember(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getCurrentNumberOfGroupMembers()I
+#getNumberOfForwardLinks()I
+#getNumberOfBackwardLinks()I
+#getStageNumber()I
+#setInputSplits([Lorg/apache/flink/core/io/InputSplit;)V
+#setInputSplitType(Ljava/lang/Class;)V
+#getInputSplits()[Lorg/apache/flink/core/io/InputSplit;
+#getInputSplitType()Ljava/lang/Class;
+#getForwardEdge(I)Lorg/apache/flink/runtime/executiongraph/ExecutionGroupEdge;
+#getBackwardEdge(I)Lorg/apache/flink/runtime/executiongraph/ExecutionGroupEdge;
+#getForwardEdges(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)Ljava/util/List;
+#getBackwardEdges(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)Ljava/util/List;
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getExecutionSignature()Lorg/apache/flink/runtime/executiongraph/ExecutionSignature;
+#isInputVertex()Z
+#isOutputVertex()Z
+#getVertexToShareInstancesWith()Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;
+#getJobVertexID()Lorg/apache/flink/runtime/jobgraph/JobVertexID;
+#iterator()Ljava/util/Iterator;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ExecutionGroupVertex

+###org/apache/flink/runtime/executiongraph/ExecutionGroupVertexIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;ZI)V
+#hasNext()Z
+#next()Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;
+#remove()V
+#next()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ExecutionGroupVertexIterator

+###org/apache/flink/runtime/executiongraph/ExecutionGraphIterator
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Z)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;IZZ)V
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;Z)V
+#hasNext()Z
+#next()Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#remove()V
+#next()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ExecutionGraphIterator

+###org/apache/flink/runtime/executiongraph/GraphConversionException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/GraphConversionException

+###org/apache/flink/runtime/executiongraph/ExecutionSignature
@0.6-hadoop2-incubating
+#createSignature(Ljava/lang/Class;Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/executiongraph/ExecutionSignature;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ExecutionSignature

+###org/apache/flink/runtime/executiongraph/ExecutionStage
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;I)V
+#setStageNumber(I)V
+#getStageNumber()I
+#addStageMember(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)V
+#removeStageMember(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;)V
+#getNumberOfStageMembers()I
+#getStageMember(I)Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;
+#getNumberOfInputExecutionVertices()I
+#getNumberOfOutputExecutionVertices()I
+#getInputExecutionVertex(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getOutputExecutionVertex(I)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#getExecutionGraph()Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;
+#getMaxNumberSubtasks()I
+#getRequiredSlots()I
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ExecutionStage

+###org/apache/flink/runtime/executiongraph/ManagementGraphFactory
@0.6-hadoop2-incubating
+#fromExecutionGraph(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;)Lorg/apache/flink/runtime/managementgraph/ManagementGraph;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ManagementGraphFactory

+###org/apache/flink/runtime/executiongraph/ExecutionGate
@0.6-hadoop2-incubating
+#getGateID()Lorg/apache/flink/runtime/io/network/gates/GateID;
+#getVertex()Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;
+#isInputGate()Z
+#getNumberOfEdges()I
+#getEdge(I)Lorg/apache/flink/runtime/executiongraph/ExecutionEdge;
+#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ExecutionGate

+###org/apache/flink/runtime/executiongraph/ExecutionStageListener
@0.6-hadoop2-incubating
+#nextExecutionStageEntered(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionStage;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ExecutionStageListener

+###org/apache/flink/runtime/executiongraph/InternalJobStatus
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;
+#toJobStatus(Lorg/apache/flink/runtime/executiongraph/InternalJobStatus;)Lorg/apache/flink/runtime/jobgraph/JobStatus;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/InternalJobStatus

+###org/apache/flink/runtime/executiongraph/ExecutionGroupEdge
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;ILorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;ILorg/apache/flink/runtime/io/network/channels/ChannelType;ZLorg/apache/flink/runtime/jobgraph/DistributionPattern;)V
+#getChannelType()Lorg/apache/flink/runtime/io/network/channels/ChannelType;
+#getTargetVertex()Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;
+#getConnectionID()I
+#isChannelTypeUserDefined()Z
+#getIndexOfInputGate()I
+#getSourceVertex()Lorg/apache/flink/runtime/executiongraph/ExecutionGroupVertex;
+#getIndexOfOutputGate()I
+#getDistributionPattern()Lorg/apache/flink/runtime/jobgraph/DistributionPattern;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ExecutionGroupEdge

+###org/apache/flink/runtime/executiongraph/VertexAssignmentListener
@0.6-hadoop2-incubating
+#vertexAssignmentChanged(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/instance/AllocatedResource;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/VertexAssignmentListener

+###org/apache/flink/runtime/executiongraph/DistributionPatternProvider
@0.6-hadoop2-incubating
+#<init>()V
+#createWire(Lorg/apache/flink/runtime/jobgraph/DistributionPattern;IIII)Z
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/DistributionPatternProvider

+###org/apache/flink/runtime/executiongraph/ExecutionVertexID
@0.6-hadoop2-incubating
+#<init>()V
+#toManagementVertexID()Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;
+#fromManagementVertexID(Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ExecutionVertexID

+###org/apache/flink/runtime/executiongraph/ExecutionPipeline
@0.6-hadoop2-incubating
+#<init>()V
+#iterator()Ljava/util/Iterator;
+#isFinishing()Z
+#setAllocatedResource(Lorg/apache/flink/runtime/instance/AllocatedResource;)V
+#updateExecutionState(Lorg/apache/flink/runtime/execution/ExecutionState;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/executiongraph/ExecutionPipeline

+###org/apache/flink/runtime/operators/udf/RuntimeUDFContext
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;II)V
+#<init>(Ljava/lang/String;IILjava/util/Map;)V
+#getTaskName()Ljava/lang/String;
+#getNumberOfParallelSubtasks()I
+#getIndexOfThisSubtask()I
+#getIntCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/IntCounter;
+#getLongCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/LongCounter;
+#getHistogram(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/Histogram;
+#getDoubleCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/DoubleCounter;
+#addAccumulator(Ljava/lang/String;Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#getAccumulator(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getAllAccumulators()Ljava/util/HashMap;
+#setBroadcastVariable(Ljava/lang/String;Ljava/util/Collection;)V
+#getBroadcastVariable(Ljava/lang/String;)Ljava/util/Collection;
+#getDistributedCache()Lorg/apache/flink/api/common/cache/DistributedCache;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/operators/udf/RuntimeUDFContext

+###org/apache/flink/runtime/operators/sort/AsynchronousPartialSorterCollector
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;D)V
+#getInputCollector()Lorg/apache/flink/runtime/operators/sort/UnilateralSortMerger$InputDataCollector;
+#close()V
@0.6.1-hadoop2-incubating
-###org/apache/flink/runtime/operators/sort/AsynchronousPartialSorterCollector

+###org/apache/flink/runtime/operators/sort/AsynchronousPartialSorter
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/memorymanager/MemoryManager;Lorg/apache/flink/util/MutableObjectIterator;Lorg/apache/flink/runtime/jobgraph/tasks/AbstractInvokable;Lorg/apache/flink/api/common/typeutils/TypeSerializerFactory;Lorg/apache/flink/api/common/typeutils/TypeComparator;D)V
+#close()V
@0.6.1-hadoop2-incubating
-###org/apache/flink/runtime/operators/sort/AsynchronousPartialSorter

+###org/apache/flink/runtime/profiling/impl/types/InternalInputGateProfilingData
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;III)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getExecutionVertexID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
+#getGateIndex()I
+#getProfilingInterval()I
+#getNoRecordsAvailableCounter()I
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/profiling/impl/types/InternalInputGateProfilingData

+###org/apache/flink/runtime/profiling/impl/types/InternalOutputGateProfilingData
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;III)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#getJobID()Lorg/apache/flink/runtime/jobgraph/JobID;
+#getExecutionVertexID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
+#getGateIndex()I
+#getProfilingInterval()I
+#getChannelCapacityExhaustedCounter()I
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/profiling/impl/types/InternalOutputGateProfilingData

+###org/apache/flink/runtime/profiling/types/OutputGateProfilingEvent
@0.6-hadoop2-incubating
+#<init>(IILorg/apache/flink/runtime/managementgraph/ManagementVertexID;ILorg/apache/flink/runtime/jobgraph/JobID;JJ)V
+#<init>()V
+#getGateIndex()I
+#getChannelCapacityExhausted()I
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/profiling/types/OutputGateProfilingEvent

+###org/apache/flink/runtime/profiling/types/InputGateProfilingEvent
@0.6-hadoop2-incubating
+#<init>(IILorg/apache/flink/runtime/managementgraph/ManagementVertexID;ILorg/apache/flink/runtime/jobgraph/JobID;JJ)V
+#<init>()V
+#getGateIndex()I
+#getNoRecordsAvailableCounter()I
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/profiling/types/InputGateProfilingEvent

+###org/apache/flink/runtime/util/AtomicEnum
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/Enum;)V
+#set(Ljava/lang/Enum;)V
+#get()Ljava/lang/Enum;
+#getAndSet(Ljava/lang/Enum;)Ljava/lang/Enum;
+#compareAndSet(Ljava/lang/Enum;Ljava/lang/Enum;)Z
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/util/AtomicEnum

+###org/apache/flink/runtime/util/AtomicEnumerator
@0.6-hadoop2-incubating
+#<init>([Ljava/lang/Object;)V
+#getNext()Ljava/lang/Object;
+#get([Ljava/lang/Object;)Lorg/apache/flink/runtime/util/AtomicEnumerator;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/util/AtomicEnumerator

+###org/apache/flink/runtime/util/NativeCodeLoader
@0.6-hadoop2-incubating
+#loadLibraryFromFile(Ljava/lang/String;Ljava/lang/String;)V
+#isLibraryLoaded(Ljava/lang/String;)Z
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/util/NativeCodeLoader

+###org/apache/flink/runtime/iterative/io/FakeOutputTask
@0.6-hadoop2-incubating
+#<init>()V
+#registerInputOutput()V
+#invoke()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/iterative/io/FakeOutputTask

+###org/apache/flink/runtime/taskmanager/TaskCancelResult
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/taskmanager/AbstractTaskResult$ReturnCode;)V
+#<init>()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/taskmanager/TaskCancelResult

+###org/apache/flink/runtime/taskmanager/ExecutorThreadFactory
@0.6-hadoop2-incubating
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/taskmanager/ExecutorThreadFactory

+###org/apache/flink/runtime/taskmanager/runtime/ExecutorThreadFactory
@0.6-hadoop2-incubating
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/taskmanager/runtime/ExecutorThreadFactory

+###org/apache/flink/runtime/taskmanager/AbstractTaskResult$ReturnCode
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/taskmanager/AbstractTaskResult$ReturnCode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/taskmanager/AbstractTaskResult$ReturnCode;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/taskmanager/AbstractTaskResult$ReturnCode

+###org/apache/flink/runtime/taskmanager/TaskKillResult
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/taskmanager/AbstractTaskResult$ReturnCode;)V
+#<init>()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/taskmanager/TaskKillResult

+###org/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult$ReturnCode
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult$ReturnCode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult$ReturnCode;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult$ReturnCode

+###org/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult$ReturnCode;)V
+#getReturnCode()Lorg/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult$ReturnCode;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/taskmanager/transferenvelope/RegisterTaskManagerResult

+###org/apache/flink/runtime/taskmanager/AbstractTaskResult
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/taskmanager/AbstractTaskResult$ReturnCode;)V
+#<init>()V
+#setDescription(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#getVertexID()Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;
+#getReturnCode()Lorg/apache/flink/runtime/taskmanager/AbstractTaskResult$ReturnCode;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/taskmanager/AbstractTaskResult

+###org/apache/flink/runtime/taskmanager/TaskSubmissionResult
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionVertexID;Lorg/apache/flink/runtime/taskmanager/AbstractTaskResult$ReturnCode;)V
+#<init>()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/taskmanager/TaskSubmissionResult

+###org/apache/flink/runtime/io/disk/iomanager/Deserializer
@0.6-hadoop2-incubating
+#open(Ljava/io/DataInput;)V
+#deserialize(Ljava/lang/Object;)Ljava/lang/Object;
+#close()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/io/disk/iomanager/Deserializer

+###org/apache/flink/runtime/instance/DefaultInstanceManager
@0.6-hadoop2-incubating
+#<init>()V
+#shutdown()V
+#releaseAllocatedResource(Lorg/apache/flink/runtime/instance/AllocatedResource;)V
+#reportHeartBeat(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;)V
+#registerTaskManager(Lorg/apache/flink/runtime/instance/InstanceConnectionInfo;Lorg/apache/flink/runtime/instance/HardwareDescription;I)V
+#requestInstance(Lorg/apache/flink/runtime/jobgraph/JobID;Lorg/apache/flink/configuration/Configuration;I)V
+#getNetworkTopology(Lorg/apache/flink/runtime/jobgraph/JobID;)Lorg/apache/flink/runtime/topology/NetworkTopology;
+#setInstanceListener(Lorg/apache/flink/runtime/instance/InstanceListener;)V
+#getInstanceByName(Ljava/lang/String;)Lorg/apache/flink/runtime/instance/Instance;
+#getNumberOfTaskTrackers()I
+#getNumberOfSlots()I
+#getInstances()Ljava/util/Map;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/instance/DefaultInstanceManager

+###org/apache/flink/runtime/instance/AllocationID
@0.6-hadoop2-incubating
+#<init>()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/instance/AllocationID

+###org/apache/flink/runtime/instance/InstanceException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/instance/InstanceException

+###org/apache/flink/runtime/instance/DummyInstance
@0.6-hadoop2-incubating
+#createDummyInstance()Lorg/apache/flink/runtime/instance/DummyInstance;
+#toString()Ljava/lang/String;
+#getHardwareDescription()Lorg/apache/flink/runtime/instance/HardwareDescription;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/instance/DummyInstance

+###org/apache/flink/runtime/instance/HardwareDescriptionFactory
@0.6-hadoop2-incubating
+#extractFromSystem()Lorg/apache/flink/runtime/instance/HardwareDescription;
+#construct(IJJ)Lorg/apache/flink/runtime/instance/HardwareDescription;
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/instance/HardwareDescriptionFactory

+###org/apache/flink/runtime/instance/AllocatedResource
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/instance/Instance;Lorg/apache/flink/runtime/instance/AllocationID;)V
+#getInstance()Lorg/apache/flink/runtime/instance/Instance;
+#getAllocationID()Lorg/apache/flink/runtime/instance/AllocationID;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#assignVertexToResource(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
+#assignedVertices()Ljava/util/Iterator;
+#removeVertexFromResource(Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/instance/AllocatedResource

+###org/apache/flink/runtime/instance/InstanceNotifier
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/runtime/instance/InstanceListener;Lorg/apache/flink/runtime/jobgraph/JobID;Ljava/util/List;)V
+#run()V
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/instance/InstanceNotifier

+###org/apache/flink/runtime/event/job/VertexAssignmentEvent
@0.6-hadoop2-incubating
+#<init>(JLorg/apache/flink/runtime/managementgraph/ManagementVertexID;Ljava/lang/String;)V
+#<init>()V
+#getVertexID()Lorg/apache/flink/runtime/managementgraph/ManagementVertexID;
+#getInstanceName()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.7.0-hadoop2-incubating
-###org/apache/flink/runtime/event/job/VertexAssignmentEvent

+###org/apache/flink/runtime/jobmanager/InputSplitWrapper
@0.8.1
+#<init>()V
+#<init>(Lorg/apache/flink/core/io/InputSplit;)V
+#getSplit(Ljava/lang/ClassLoader;)Lorg/apache/flink/core/io/InputSplit;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@0.9.0-milestone-1
-###org/apache/flink/runtime/jobmanager/InputSplitWrapper

+###org/apache/flink/runtime/checkpoint/FinishedTaskStateProvider$PartialFinishingNotSupportedByStateException
@1.15.2
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/checkpoint/metadata/MetadataV4Serializer
@1.16.0
+#<init>()V
+#getVersion()I
+#deserialize(Ljava/io/DataInputStream;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;
+#serialize(Lorg/apache/flink/runtime/checkpoint/metadata/CheckpointMetadata;Ljava/io/DataOutputStream;)V

+###org/apache/flink/runtime/jobmaster/slotpool/BlocklistDeclarativeSlotPoolFactory
@1.16.0
+#<init>(Lorg/apache/flink/runtime/blocklist/BlockedTaskManagerChecker;)V
+#create(Lorg/apache/flink/api/common/JobID;Ljava/util/function/Consumer;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)Lorg/apache/flink/runtime/jobmaster/slotpool/DeclarativeSlotPool;

+###org/apache/flink/runtime/jobmaster/slotpool/BlocklistDeclarativeSlotPool
@1.16.0
+#offerSlots(Ljava/util/Collection;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;J)Ljava/util/Collection;
+#registerSlots(Ljava/util/Collection;Lorg/apache/flink/runtime/taskmanager/TaskManagerLocation;Lorg/apache/flink/runtime/jobmanager/slots/TaskManagerGateway;J)Ljava/util/Collection;
+#freeReservedSlot(Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Ljava/lang/Throwable;J)Lorg/apache/flink/runtime/util/ResourceCounter;

+###org/apache/flink/runtime/rest/versioning/RuntimeRestAPIVersion
@1.16.0
+#values()[Lorg/apache/flink/runtime/rest/versioning/RuntimeRestAPIVersion;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/rest/versioning/RuntimeRestAPIVersion;
+#getURLVersionPrefix()Ljava/lang/String;
+#isDefaultVersion()Z
+#isStableVersion()Z

+###org/apache/flink/runtime/rest/messages/EnvironmentInfo
@1.16.0
+#<init>(Ljava/util/List;Lorg/apache/flink/runtime/rest/messages/EnvironmentInfo$JVMInfo;Ljava/util/List;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#create()Lorg/apache/flink/runtime/rest/messages/EnvironmentInfo;
@1.16.1
+#<init>(Lorg/apache/flink/runtime/rest/messages/EnvironmentInfo$JVMInfo;Ljava/util/List;)V
-#<init>(Ljava/util/List;Lorg/apache/flink/runtime/rest/messages/EnvironmentInfo$JVMInfo;Ljava/util/List;)V

+###org/apache/flink/runtime/rest/messages/JobManagerEnvironmentHeaders
@1.16.0
+#<init>()V
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getDescription()Ljava/lang/String;
+#getRequestClass()Ljava/lang/Class;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/EmptyMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobManagerEnvironmentHeaders;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/RuntimeMessageHeaders
@1.16.0
+#getSupportedAPIVersions()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/RuntimeUntypedResponseMessageHeaders
@1.16.0
+#getSupportedAPIVersions()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/job/JobStatusInfoHeaders
@1.16.0
+#<init>()V
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/JobStatusInfoHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/JobManagerJobConfigurationHeaders
@1.16.0
+#getRequestClass()Ljava/lang/Class;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/JobManagerJobConfigurationHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/job/StatusDurationUtils
@1.16.0
+#<init>()V
+#getExecutionStateDuration(Lorg/apache/flink/runtime/executiongraph/AccessExecution;)Ljava/util/Map;

+###org/apache/flink/runtime/rest/messages/job/JobManagerJobEnvironmentHeaders
@1.16.0
+#getRequestClass()Ljava/lang/Class;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobMessageParameters;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/job/JobManagerJobEnvironmentHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/dataset/ClusterDataSetEntry
@1.16.0
+#getDataSetId()Ljava/lang/String;
+#isComplete()Z

+###org/apache/flink/runtime/rest/messages/ConfigurationInfo
@1.16.0
+#<init>()V
+#<init>(I)V
+#from(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/rest/messages/ConfigurationInfo;

+###org/apache/flink/runtime/rest/messages/JobTaskManagerMessageParameters
@1.16.0
+#<init>()V
+#getPathParameters()Ljava/util/Collection;

+###org/apache/flink/runtime/rest/messages/AggregatedTaskDetailsInfo
@1.16.0
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#create(Ljava/util/List;)Lorg/apache/flink/runtime/rest/messages/AggregatedTaskDetailsInfo;
+#create(Ljava/util/List;Ljava/util/List;)Lorg/apache/flink/runtime/rest/messages/AggregatedTaskDetailsInfo;

+###org/apache/flink/runtime/rest/messages/ConfigurationInfoEntry
@1.16.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/rest/messages/JobManagerLogUrlHeaders
@1.16.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/JobManagerLogUrlHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/TaskManagerLogUrlHeaders
@1.16.0
+#getRequestClass()Ljava/lang/Class;
+#getResponseClass()Ljava/lang/Class;
+#getResponseStatusCode()Lorg/apache/flink/shaded/netty4/io/netty/handler/codec/http/HttpResponseStatus;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/JobTaskManagerMessageParameters;
+#getHttpMethod()Lorg/apache/flink/runtime/rest/HttpMethodWrapper;
+#getTargetRestEndpointURL()Ljava/lang/String;
+#getInstance()Lorg/apache/flink/runtime/rest/messages/TaskManagerLogUrlHeaders;
+#getDescription()Ljava/lang/String;
+#getUnresolvedMessageParameters()Lorg/apache/flink/runtime/rest/messages/MessageParameters;

+###org/apache/flink/runtime/rest/messages/LogUrlResponse
@1.16.0
+#<init>(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/runtime/rest/handler/cluster/JobManagerEnvironmentHandler
@1.16.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;)V

+###org/apache/flink/runtime/rest/handler/job/GeneratedLogUrlHandler
@1.16.0
+#<init>(Ljava/util/concurrent/CompletableFuture;)V

+###org/apache/flink/runtime/rest/handler/job/JobManagerJobEnvironmentHandler
@1.16.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/job/JobStatusHandler
@1.16.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;)V

+###org/apache/flink/runtime/rest/handler/job/JobManagerJobConfigurationHandler
@1.16.0
+#<init>(Lorg/apache/flink/runtime/webmonitor/retriever/GatewayRetriever;Lorg/apache/flink/api/common/time/Time;Ljava/util/Map;Lorg/apache/flink/runtime/rest/messages/MessageHeaders;Lorg/apache/flink/configuration/Configuration;)V
+#archiveJsonWithPath(Lorg/apache/flink/runtime/scheduler/ExecutionGraphInfo;)Ljava/util/Collection;

+###org/apache/flink/runtime/rest/handler/dataset/ClusterDataSetDeleteHandlers$SerializableVoid
@1.16.0

+###org/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$SubtaskMetricStore
@1.16.0
+#getAttemptsMetricStore(I)Lorg/apache/flink/runtime/rest/handler/legacy/metrics/MetricStore$ComponentMetricStore;
+#getAllAttemptsMetricStores()Ljava/util/Map;

+###org/apache/flink/runtime/io/network/buffer/CompositeBuffer
@1.16.0
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;IZ)V
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/BufferHeader;)V
+#isBuffer()Z
+#recycleBuffer()V
+#retainBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#getSize()I
+#readableBytes()I
+#setAllocator(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBufAllocator;)V
+#asByteBuf()Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;
+#isCompressed()Z
+#getDataType()Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#numPartialBuffers()I
+#getFullBufferData(Lorg/apache/flink/core/memory/MemorySegment;)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#addPartialBuffer(Lorg/apache/flink/runtime/io/network/buffer/Buffer;)V
+#missingLength()I
+#getMemorySegment()Lorg/apache/flink/core/memory/MemorySegment;
+#getMemorySegmentOffset()I
+#getRecycler()Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;
+#isRecycled()Z
+#readOnlySlice()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#readOnlySlice(II)Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#getMaxCapacity()I
+#getReaderIndex()I
+#setReaderIndex(I)V
+#setSize(I)V
+#getNioBufferReadable()Ljava/nio/ByteBuffer;
+#getNioBuffer(II)Ljava/nio/ByteBuffer;
+#setCompressed(Z)V
+#setDataType(Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)V
+#refCnt()I

+###org/apache/flink/runtime/io/network/buffer/BufferHeader
@1.16.0
+#<init>(ZILorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)V
+#isCompressed()Z
+#getLength()I
+#getDataType()Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;

+###org/apache/flink/runtime/io/network/partition/hybrid/HsDataView
@1.16.0
+#consumeBuffer(I)Ljava/util/Optional;
+#peekNextToConsumeDataType(I)Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#getBacklog()I
+#releaseDataView()V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionFileReaderImpl$Factory
@1.16.0
+#createFileReader(ILjava/nio/channels/FileChannel;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionViewInternalOperations;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsFileDataIndex;ILjava/util/function/Consumer;Ljava/nio/ByteBuffer;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionFileReader;

+###org/apache/flink/runtime/io/network/partition/hybrid/HsMemoryDataManagerOperation
@1.16.0
+#requestBufferFromPool()Lorg/apache/flink/runtime/io/network/buffer/BufferBuilder;
+#markBufferReleasedFromFile(II)V
+#onBufferConsumed(Lorg/apache/flink/runtime/io/network/partition/hybrid/BufferIndexAndChannel;)V
+#onBufferFinished()V
+#onDataAvailable(I)V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider
@1.16.0
+#getNumSubpartitions()I
+#getNextBufferIndexToConsume()Ljava/util/List;
+#getBuffersInOrder(ILorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$SpillStatus;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$ConsumeStatus;)Ljava/util/Deque;
+#getNumTotalUnSpillBuffers()I
+#getNumTotalRequestedBuffers()I
+#getPoolSize()I

+###org/apache/flink/runtime/io/network/partition/hybrid/HsMemoryDataManager
@1.16.0
+#<init>(IILorg/apache/flink/runtime/io/network/buffer/BufferPool;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategy;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsFileDataIndex;Ljava/nio/file/Path;Lorg/apache/flink/runtime/io/network/buffer/BufferCompressor;J)V
+#append(Ljava/nio/ByteBuffer;ILorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)V
+#registerSubpartitionView(ILorg/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionViewInternalOperations;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsDataView;
+#close()V
+#release()V
+#setOutputMetrics(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsOutputMetrics;)V
+#getPoolSize()I
+#getNumSubpartitions()I
+#getNumTotalRequestedBuffers()I
+#getNumTotalUnSpillBuffers()I
+#getBuffersInOrder(ILorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$SpillStatus;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$ConsumeStatus;)Ljava/util/Deque;
+#getNextBufferIndexToConsume()Ljava/util/List;
+#markBufferReleasedFromFile(II)V
+#requestBufferFromPool()Lorg/apache/flink/runtime/io/network/buffer/BufferBuilder;
+#onBufferConsumed(Lorg/apache/flink/runtime/io/network/partition/hybrid/BufferIndexAndChannel;)V
+#onBufferFinished()V
+#onDataAvailable(I)V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsOutputMetrics
@1.16.0
+#<init>(Lorg/apache/flink/metrics/Counter;Lorg/apache/flink/metrics/Counter;)V
+#getNumBytesOut()Lorg/apache/flink/metrics/Counter;
+#getNumBuffersOut()Lorg/apache/flink/metrics/Counter;

+###org/apache/flink/runtime/io/network/partition/hybrid/HsFileDataIndexImpl
@1.16.0
+#<init>(I)V
+#getReadableRegion(III)Ljava/util/Optional;
+#addBuffers(Ljava/util/List;)V
+#markBufferReleased(II)V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsFileDataIndex$ReadableRegion
@1.16.0
+#<init>(IIJ)V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsFileDataIndex
@1.16.0
+#getReadableRegion(III)Ljava/util/Optional;
+#addBuffers(Ljava/util/List;)V
+#markBufferReleased(II)V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsFileDataIndex$SpilledBuffer
@1.16.0
+#<init>(IIJ)V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsMemoryDataSpiller
@1.16.0
+#<init>(Ljava/nio/file/Path;)V
+#spillAsync(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;
+#close()V
+#release()V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategy$Decision
@1.16.0
+#getBufferToSpill()Ljava/util/Map;
+#getBufferToRelease()Ljava/util/Map;
+#builder()Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategy$Decision$Builder;

+###org/apache/flink/runtime/io/network/partition/hybrid/HsFullSpillingStrategy
@1.16.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration;)V
+#onBufferFinished(II)Ljava/util/Optional;
+#onBufferConsumed(Lorg/apache/flink/runtime/io/network/partition/hybrid/BufferIndexAndChannel;)Ljava/util/Optional;
+#onMemoryUsageChanged(II)Ljava/util/Optional;
+#decideActionWithGlobalInfo(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategy$Decision;
+#onResultPartitionClosed(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategy$Decision;

+###org/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder
@1.16.0
+#setMaxBuffersReadAhead(I)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder;
+#setBufferRequestTimeout(Ljava/time/Duration;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder;
+#setSelectiveStrategySpillThreshold(F)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder;
+#setSelectiveStrategySpillBufferRatio(F)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder;
+#setFullStrategyNumBuffersTriggerSpillingRatio(F)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder;
+#setFullStrategyReleaseThreshold(F)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder;
+#setFullStrategyReleaseBufferRatio(F)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder;
+#setSpillingStrategyType(Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$SpillingStrategyType;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder;
+#setBufferPoolSizeCheckIntervalMs(J)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder;
+#build()Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration;

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategyUtils
@1.16.0
+#<init>()V
+#getBuffersByConsumptionPriorityInOrder(Ljava/util/List;Ljava/util/TreeMap;I)Ljava/util/TreeMap;

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionFileReaderImpl$BufferIndexOrError
@1.16.0
+#getDataType()Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#getBuffer()Ljava/util/Optional;
+#getThrowable()Ljava/util/Optional;
+#getIndex()I

+###org/apache/flink/runtime/io/network/partition/hybrid/HsFileDataManager
@1.16.0
+#<init>(Lorg/apache/flink/runtime/io/disk/BatchShuffleReadBufferPool;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsFileDataIndex;Ljava/nio/file/Path;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionFileReader$Factory;Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration;)V
+#setup()V
+#run()V
+#registerNewSubpartition(ILorg/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionViewInternalOperations;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsDataView;
+#deleteShuffleFile()V
+#releaseSubpartitionReader(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionFileReader;)V
+#release()V
+#recycle(Lorg/apache/flink/core/memory/MemorySegment;)V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionViewInternalOperations
@1.16.0
+#notifyDataAvailable()V
+#getConsumingOffset(Z)I

+###org/apache/flink/runtime/io/network/partition/hybrid/BufferIndexAndChannel
@1.16.0
+#<init>(II)V
+#getBufferIndex()I
+#getChannel()I

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategy
@1.16.0
+#onMemoryUsageChanged(II)Ljava/util/Optional;
+#onBufferFinished(II)Ljava/util/Optional;
+#onBufferConsumed(Lorg/apache/flink/runtime/io/network/partition/hybrid/BufferIndexAndChannel;)Ljava/util/Optional;
+#decideActionWithGlobalInfo(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategy$Decision;
+#onResultPartitionClosed(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategy$Decision;

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$ConsumeStatus
@1.16.0
+#values()[Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$ConsumeStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$ConsumeStatus;

+###org/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$SpillingStrategyType
@1.16.0
+#values()[Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$SpillingStrategyType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$SpillingStrategyType;

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionView
@1.16.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)V
+#getNextBuffer()Lorg/apache/flink/runtime/io/network/partition/ResultSubpartition$BufferAndBacklog;
+#notifyDataAvailable()V
+#getAvailabilityAndBacklog(I)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView$AvailabilityWithBacklog;
+#releaseAllResources()V
+#isReleased()Z
+#getConsumingOffset(Z)I
+#getFailureCause()Ljava/lang/Throwable;
+#resumeConsumption()V
+#acknowledgeAllDataProcessed()V
+#unsynchronizedGetNumberOfQueuedBuffers()I
+#getNumberOfQueuedBuffers()I
+#notifyNewBufferSize(I)V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionFileReader$Factory
@1.16.0
+#createFileReader(ILjava/nio/channels/FileChannel;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionViewInternalOperations;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsFileDataIndex;ILjava/util/function/Consumer;Ljava/nio/ByteBuffer;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionFileReader;

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionMemoryDataManager
@1.16.0
+#peekNextToConsumeDataType(I)Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#consumeBuffer(I)Ljava/util/Optional;
+#getBacklog()I
+#releaseDataView()V
+#append(Ljava/nio/ByteBuffer;Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;)V
+#getBuffersSatisfyStatus(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$SpillStatus;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$ConsumeStatus;)Ljava/util/Deque;
+#spillSubpartitionBuffers(Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/List;
+#releaseSubpartitionBuffers(Ljava/util/List;)V
+#setOutputMetrics(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsOutputMetrics;)V

+###org/apache/flink/runtime/io/network/partition/hybrid/BufferWithIdentity
@1.16.0
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer;II)V
+#getBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#getBufferIndex()I
+#getChannelIndex()I

+###org/apache/flink/runtime/io/network/partition/hybrid/HsBufferContext
@1.16.0
+#<init>(Lorg/apache/flink/runtime/io/network/buffer/Buffer;II)V
+#getBuffer()Lorg/apache/flink/runtime/io/network/buffer/Buffer;
+#getBufferIndexAndChannel()Lorg/apache/flink/runtime/io/network/partition/hybrid/BufferIndexAndChannel;
+#isReleased()Z
+#isSpillStarted()Z
+#isConsumed()Z
+#getSpilledFuture()Ljava/util/Optional;
+#release()V
+#startSpilling(Ljava/util/concurrent/CompletableFuture;)Z
+#consumed()V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionFileReader
@1.16.0
+#prepareForScheduling()V
+#readBuffers(Ljava/util/Queue;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;)V
+#fail(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSelectiveSpillingStrategy
@1.16.0
+#<init>(Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration;)V
+#onBufferFinished(II)Ljava/util/Optional;
+#onBufferConsumed(Lorg/apache/flink/runtime/io/network/partition/hybrid/BufferIndexAndChannel;)Ljava/util/Optional;
+#onMemoryUsageChanged(II)Ljava/util/Optional;
+#decideActionWithGlobalInfo(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategy$Decision;
+#onResultPartitionClosed(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingStrategy$Decision;

+###org/apache/flink/runtime/io/network/partition/hybrid/HsResultPartition
@1.16.0
+#<init>(Ljava/lang/String;ILorg/apache/flink/runtime/io/network/partition/ResultPartitionID;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionType;IILorg/apache/flink/runtime/io/disk/BatchShuffleReadBufferPool;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/flink/runtime/io/network/partition/ResultPartitionManager;Ljava/lang/String;ILorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration;Lorg/apache/flink/runtime/io/network/buffer/BufferCompressor;Lorg/apache/flink/util/function/SupplierWithException;)V
+#setMetricGroup(Lorg/apache/flink/runtime/metrics/groups/TaskIOMetricGroup;)V
+#emitRecord(Ljava/nio/ByteBuffer;I)V
+#broadcastRecord(Ljava/nio/ByteBuffer;)V
+#broadcastEvent(Lorg/apache/flink/runtime/event/AbstractEvent;Z)V
+#createSubpartitionView(ILorg/apache/flink/runtime/io/network/partition/BufferAvailabilityListener;)Lorg/apache/flink/runtime/io/network/partition/ResultSubpartitionView;
+#alignedBarrierTimeout(J)V
+#abortCheckpoint(JLorg/apache/flink/runtime/checkpoint/CheckpointException;)V
+#flushAll()V
+#flush(I)V
+#finish()V
+#close()V
+#getNumberOfQueuedBuffers()I
+#getSizeOfQueuedBuffersUnsafe()J
+#getNumberOfQueuedBuffers(I)I
+#notifyEndOfData(Lorg/apache/flink/runtime/io/network/api/StopMode;)V

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionFileReaderImpl
@1.16.0
+#<init>(ILjava/nio/channels/FileChannel;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionViewInternalOperations;Lorg/apache/flink/runtime/io/network/partition/hybrid/HsFileDataIndex;ILjava/util/function/Consumer;Ljava/nio/ByteBuffer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#readBuffers(Ljava/util/Queue;Lorg/apache/flink/runtime/io/network/buffer/BufferRecycler;)V
+#fail(Ljava/lang/Throwable;)V
+#prepareForScheduling()V
+#compareTo(Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSubpartitionFileReader;)I
+#getLoadedBuffers()Ljava/util/Deque;
+#consumeBuffer(I)Ljava/util/Optional;
+#peekNextToConsumeDataType(I)Lorg/apache/flink/runtime/io/network/buffer/Buffer$DataType;
+#releaseDataView()V
+#getBacklog()I
+#compareTo(Ljava/lang/Object;)I

+###org/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration
@1.16.0
+#builder(II)Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$Builder;
+#getSpillingStrategyType()Lorg/apache/flink/runtime/io/network/partition/hybrid/HybridShuffleConfiguration$SpillingStrategyType;
+#getMaxRequestedBuffers()I
+#getMaxBuffersReadAhead()I
+#getBufferRequestTimeout()Ljava/time/Duration;
+#getSelectiveStrategySpillThreshold()F
+#getSelectiveStrategySpillBufferRatio()F
+#getFullStrategyNumBuffersTriggerSpillingRatio()F
+#getFullStrategyReleaseThreshold()F
+#getFullStrategyReleaseBufferRatio()F
+#getBufferPoolSizeCheckIntervalMs()J

+###org/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$SpillStatus
@1.16.0
+#values()[Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$SpillStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/runtime/io/network/partition/hybrid/HsSpillingInfoProvider$SpillStatus;

+###org/apache/flink/runtime/io/compression/AirBlockCompressor
@1.16.0
+#<init>(Lorg/apache/flink/shaded/io/airlift/compress/Compressor;)V
+#getMaxCompressedSize(I)I
+#compress(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;I)I
+#compress([BII[BI)I

+###org/apache/flink/runtime/io/compression/AirCompressorFactory
@1.16.0
+#<init>(Lorg/apache/flink/shaded/io/airlift/compress/Compressor;Lorg/apache/flink/shaded/io/airlift/compress/Decompressor;)V
+#getCompressor()Lorg/apache/flink/runtime/io/compression/BlockCompressor;
+#getDecompressor()Lorg/apache/flink/runtime/io/compression/BlockDecompressor;

+###org/apache/flink/runtime/io/compression/CompressorUtils
@1.16.0
+#<init>()V
+#writeIntLE(I[BI)V
+#readIntLE([BI)I
+#validateLength(II)V

+###org/apache/flink/runtime/io/compression/AirBlockDecompressor
@1.16.0
+#<init>(Lorg/apache/flink/shaded/io/airlift/compress/Decompressor;)V
+#decompress(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;I)I
+#decompress([BII[BI)I

+###org/apache/flink/runtime/io/compression/BufferDecompressionException
@1.16.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/io/compression/BufferCompressionException
@1.16.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/state/PhysicalStateHandleID
@1.16.0
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/runtime/state/changelog/LocalChangelogRegistryImpl
@1.16.0
+#<init>(Ljava/util/concurrent/Executor;)V
+#register(Lorg/apache/flink/runtime/state/StreamStateHandle;J)V
+#discardUpToCheckpoint(J)V
+#prune(J)V

+###org/apache/flink/runtime/state/changelog/LocalChangelogRegistry
@1.16.0
+#register(Lorg/apache/flink/runtime/state/StreamStateHandle;J)V
+#discardUpToCheckpoint(J)V
+#prune(J)V

+###org/apache/flink/runtime/state/changelog/ChangelogStateBackendLocalHandle
@1.16.0
+#<init>(Ljava/util/List;Ljava/util/List;Lorg/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle$ChangelogStateBackendHandleImpl;)V
+#getMaterializedStateHandles()Ljava/util/List;
+#getNonMaterializedStateHandles()Ljava/util/List;
+#getMaterializationID()J
+#rebound(J)Lorg/apache/flink/runtime/state/changelog/ChangelogStateBackendHandle;
+#getRemoteMaterializedStateHandles()Ljava/util/List;
+#getRemoteNonMaterializedStateHandles()Ljava/util/List;
+#getCheckpointId()J
+#registerSharedStates(Lorg/apache/flink/runtime/state/SharedStateRegistry;J)V
+#getCheckpointedSize()J
+#getKeyGroupRange()Lorg/apache/flink/runtime/state/KeyGroupRange;
+#getIntersection(Lorg/apache/flink/runtime/state/KeyGroupRange;)Lorg/apache/flink/runtime/state/KeyedStateHandle;
+#getStateHandleId()Lorg/apache/flink/runtime/state/StateHandleID;
+#discardState()V
+#getStateSize()J
+#rebound(J)Lorg/apache/flink/runtime/state/CheckpointBoundKeyedStateHandle;

+###org/apache/flink/runtime/state/changelog/StateChangelogStorageView
@1.16.0
+#createReader()Lorg/apache/flink/runtime/state/changelog/StateChangelogHandleReader;
+#close()V

+###org/apache/flink/runtime/state/SharedStateRegistryImpl$EmptyDiscardStateObjectForRegister
@1.16.0
+#<init>(Lorg/apache/flink/runtime/state/StateHandleID;)V
+#discardState()V
+#getStateSize()J
+#openInputStream()Lorg/apache/flink/core/fs/FSDataInputStream;
+#asBytesIfInMemory()Ljava/util/Optional;
+#getStreamStateHandleID()Lorg/apache/flink/runtime/state/PhysicalStateHandleID;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/state/ChangelogTaskLocalStateStore
@1.16.0
+#<init>(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/runtime/clusterframework/types/AllocationID;Lorg/apache/flink/runtime/jobgraph/JobVertexID;ILorg/apache/flink/runtime/state/LocalRecoveryConfig;Ljava/util/concurrent/Executor;)V
+#getLocalTaskOwnedDirectory(Lorg/apache/flink/runtime/state/LocalRecoveryDirectoryProvider;Lorg/apache/flink/api/common/JobID;)Lorg/apache/flink/core/fs/Path;
+#storeLocalState(JLorg/apache/flink/runtime/checkpoint/TaskStateSnapshot;)V
+#pruneCheckpoints(Ljava/util/function/LongPredicate;Z)V
+#dispose()Ljava/util/concurrent/CompletableFuture;
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/scheduler/SimpleExecutionSlotAllocator$Factory
@1.16.0
+#<init>(Lorg/apache/flink/runtime/jobmaster/slotpool/PhysicalSlotProvider;Z)V
+#createInstance(Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocationContext;)Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocator;

+###org/apache/flink/runtime/scheduler/ExecutionOperations
@1.16.0
+#deploy(Lorg/apache/flink/runtime/executiongraph/Execution;)V
+#cancel(Lorg/apache/flink/runtime/executiongraph/Execution;)Ljava/util/concurrent/CompletableFuture;
+#markFailed(Lorg/apache/flink/runtime/executiongraph/Execution;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/scheduler/ExecutionDeployer$Factory
@1.16.0
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocator;Lorg/apache/flink/runtime/scheduler/ExecutionOperations;Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersioner;Lorg/apache/flink/api/common/time/Time;Ljava/util/function/BiConsumer;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)Lorg/apache/flink/runtime/scheduler/ExecutionDeployer;

+###org/apache/flink/runtime/scheduler/DefaultExecutionOperations
@1.16.0
+#<init>()V
+#deploy(Lorg/apache/flink/runtime/executiongraph/Execution;)V
+#cancel(Lorg/apache/flink/runtime/executiongraph/Execution;)Ljava/util/concurrent/CompletableFuture;
+#markFailed(Lorg/apache/flink/runtime/executiongraph/Execution;Ljava/lang/Throwable;)V

+###org/apache/flink/runtime/scheduler/DefaultExecutionDeployer
@1.16.0
+#allocateSlotsAndDeploy(Ljava/util/List;Ljava/util/Map;)V

+###org/apache/flink/runtime/scheduler/DefaultExecutionDeployer$Factory
@1.16.0
+#<init>()V
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocator;Lorg/apache/flink/runtime/scheduler/ExecutionOperations;Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersioner;Lorg/apache/flink/api/common/time/Time;Ljava/util/function/BiConsumer;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)Lorg/apache/flink/runtime/scheduler/DefaultExecutionDeployer;
+#createInstance(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocator;Lorg/apache/flink/runtime/scheduler/ExecutionOperations;Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersioner;Lorg/apache/flink/api/common/time/Time;Ljava/util/function/BiConsumer;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)Lorg/apache/flink/runtime/scheduler/ExecutionDeployer;

+###org/apache/flink/runtime/scheduler/ExecutionDeployer
@1.16.0
+#allocateSlotsAndDeploy(Ljava/util/List;Ljava/util/Map;)V

+###org/apache/flink/runtime/scheduler/adaptivebatch/SpeculativeScheduler
@1.16.0
+#<init>(Lorg/slf4j/Logger;Lorg/apache/flink/runtime/jobgraph/JobGraph;Ljava/util/concurrent/Executor;Lorg/apache/flink/configuration/Configuration;Ljava/util/function/Consumer;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/lang/ClassLoader;Lorg/apache/flink/runtime/checkpoint/CheckpointsCleaner;Lorg/apache/flink/runtime/checkpoint/CheckpointRecoveryFactory;Lorg/apache/flink/runtime/metrics/groups/JobManagerJobMetricGroup;Lorg/apache/flink/runtime/scheduler/strategy/SchedulingStrategyFactory;Lorg/apache/flink/runtime/executiongraph/failover/flip1/FailoverStrategy$Factory;Lorg/apache/flink/runtime/executiongraph/failover/flip1/RestartBackoffTimeStrategy;Lorg/apache/flink/runtime/scheduler/ExecutionOperations;Lorg/apache/flink/runtime/scheduler/ExecutionVertexVersioner;Lorg/apache/flink/runtime/scheduler/ExecutionSlotAllocatorFactory;JLorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/apache/flink/runtime/executiongraph/JobStatusListener;Lorg/apache/flink/runtime/scheduler/ExecutionGraphFactory;Lorg/apache/flink/runtime/shuffle/ShuffleMaster;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/runtime/scheduler/adaptivebatch/VertexParallelismDecider;ILorg/apache/flink/runtime/blocklist/BlocklistOperations;)V
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#getExecutionVertex(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/executiongraph/SpeculativeExecutionVertex;
+#notifySlowTasks(Ljava/util/Map;)V
+#getExecutionVertex(Lorg/apache/flink/runtime/scheduler/strategy/ExecutionVertexID;)Lorg/apache/flink/runtime/executiongraph/ExecutionVertex;

+###org/apache/flink/runtime/scheduler/ClusterDatasetCorruptedException
@1.16.0
+#<init>(Ljava/lang/Throwable;Ljava/util/List;)V
+#getCorruptedClusterDatasetIds()Ljava/util/List;

+###org/apache/flink/runtime/scheduler/slowtaskdetector/SlowTaskDetector
@1.16.0
+#start(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/slowtaskdetector/SlowTaskDetectorListener;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#stop()V

+###org/apache/flink/runtime/scheduler/slowtaskdetector/SlowTaskDetectorListener
@1.16.0
+#notifySlowTasks(Ljava/util/Map;)V

+###org/apache/flink/runtime/scheduler/slowtaskdetector/ExecutionTimeBasedSlowTaskDetector
@1.16.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
+#start(Lorg/apache/flink/runtime/executiongraph/ExecutionGraph;Lorg/apache/flink/runtime/scheduler/slowtaskdetector/SlowTaskDetectorListener;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;)V
+#stop()V

+###org/apache/flink/runtime/scheduler/SimpleExecutionSlotAllocator
@1.16.0
+#allocateSlotsFor(Ljava/util/List;)Ljava/util/List;
+#cancel(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V

+###org/apache/flink/runtime/operators/coordination/AcknowledgeCheckpointEvent
@1.16.0
+#<init>(J)V

+###org/apache/flink/runtime/metrics/groups/TaskIOMetricGroup$SizeGauge$SizeSupplier
@1.16.0
+#get()Ljava/lang/Object;

+###org/apache/flink/runtime/metrics/groups/InternalCacheMetricGroup
@1.16.0
+#<init>(Lorg/apache/flink/metrics/MetricGroup;Ljava/lang/String;)V
+#hitCounter(Lorg/apache/flink/metrics/Counter;)V
+#missCounter(Lorg/apache/flink/metrics/Counter;)V
+#loadCounter(Lorg/apache/flink/metrics/Counter;)V
+#numLoadFailuresCounter(Lorg/apache/flink/metrics/Counter;)V
+#latestLoadTimeGauge(Lorg/apache/flink/metrics/Gauge;)V
+#numCachedRecordsGauge(Lorg/apache/flink/metrics/Gauge;)V
+#numCachedBytesGauge(Lorg/apache/flink/metrics/Gauge;)V

+###org/apache/flink/runtime/metrics/filter/DefaultMetricFilter
@1.16.0
+#filter(Lorg/apache/flink/metrics/Metric;Ljava/lang/String;Ljava/lang/String;)Z
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/metrics/filter/MetricFilter;

+###org/apache/flink/runtime/metrics/filter/MetricFilter
@1.16.0
+#filter(Lorg/apache/flink/metrics/Metric;Ljava/lang/String;Ljava/lang/String;)Z

+###org/apache/flink/runtime/blocklist/BlockedNode
@1.16.0
+#<init>(Ljava/lang/String;Ljava/lang/String;J)V
+#getNodeId()Ljava/lang/String;
+#getCause()Ljava/lang/String;
+#getEndTimestamp()J
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/blocklist/BlocklistTracker
@1.16.0
+#addNewBlockedNodes(Ljava/util/Collection;)Lorg/apache/flink/runtime/blocklist/BlockedNodeAdditionResult;
+#isBlockedNode(Ljava/lang/String;)Z
+#getAllBlockedNodeIds()Ljava/util/Set;
+#getAllBlockedNodes()Ljava/util/Collection;
+#removeTimeoutNodes(J)Ljava/util/Collection;

+###org/apache/flink/runtime/blocklist/BlocklistListener
@1.16.0
+#notifyNewBlockedNodes(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/blocklist/BlocklistHandler
@1.16.0
+#addNewBlockedNodes(Ljava/util/Collection;)V
+#isBlockedTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
+#getAllBlockedNodeIds()Ljava/util/Set;
+#registerBlocklistListener(Lorg/apache/flink/runtime/blocklist/BlocklistListener;)V
+#deregisterBlocklistListener(Lorg/apache/flink/runtime/blocklist/BlocklistListener;)V

+###org/apache/flink/runtime/blocklist/DefaultBlocklistHandler$Factory
@1.16.0
+#<init>(Ljava/time/Duration;)V
+#create(Lorg/apache/flink/runtime/blocklist/BlocklistContext;Ljava/util/function/Function;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/blocklist/BlocklistHandler;

+###org/apache/flink/runtime/blocklist/NoOpBlocklistHandler
@1.16.0
+#<init>()V
+#addNewBlockedNodes(Ljava/util/Collection;)V
+#isBlockedTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
+#getAllBlockedNodeIds()Ljava/util/Set;
+#registerBlocklistListener(Lorg/apache/flink/runtime/blocklist/BlocklistListener;)V
+#deregisterBlocklistListener(Lorg/apache/flink/runtime/blocklist/BlocklistListener;)V

+###org/apache/flink/runtime/blocklist/DefaultBlocklistHandler
@1.16.0
+#addNewBlockedNodes(Ljava/util/Collection;)V
+#isBlockedTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z
+#getAllBlockedNodeIds()Ljava/util/Set;
+#registerBlocklistListener(Lorg/apache/flink/runtime/blocklist/BlocklistListener;)V
+#deregisterBlocklistListener(Lorg/apache/flink/runtime/blocklist/BlocklistListener;)V
+#close()V

+###org/apache/flink/runtime/blocklist/BlockedTaskManagerChecker
@1.16.0
+#isBlockedTaskManager(Lorg/apache/flink/runtime/clusterframework/types/ResourceID;)Z

+###org/apache/flink/runtime/blocklist/BlocklistOperations
@1.16.0
+#addNewBlockedNodes(Ljava/util/Collection;)V

+###org/apache/flink/runtime/blocklist/BlocklistUtils
@1.16.0
+#loadBlocklistHandlerFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/runtime/blocklist/BlocklistHandler$Factory;
+#isBlocklistEnabled(Lorg/apache/flink/configuration/Configuration;)Z

+###org/apache/flink/runtime/blocklist/DefaultBlocklistTracker
@1.16.0
+#<init>()V
+#addNewBlockedNodes(Ljava/util/Collection;)Lorg/apache/flink/runtime/blocklist/BlockedNodeAdditionResult;
+#isBlockedNode(Ljava/lang/String;)Z
+#getAllBlockedNodeIds()Ljava/util/Set;
+#getAllBlockedNodes()Ljava/util/Collection;
+#removeTimeoutNodes(J)Ljava/util/Collection;

+###org/apache/flink/runtime/blocklist/BlocklistHandler$Factory
@1.16.0
+#create(Lorg/apache/flink/runtime/blocklist/BlocklistContext;Ljava/util/function/Function;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/blocklist/BlocklistHandler;

+###org/apache/flink/runtime/blocklist/NoOpBlocklistHandler$Factory
@1.16.0
+#<init>()V
+#create(Lorg/apache/flink/runtime/blocklist/BlocklistContext;Ljava/util/function/Function;Lorg/apache/flink/runtime/concurrent/ComponentMainThreadExecutor;Lorg/slf4j/Logger;)Lorg/apache/flink/runtime/blocklist/BlocklistHandler;

+###org/apache/flink/runtime/blocklist/BlockedNodeRetriever
@1.16.0
+#getAllBlockedNodeIds()Ljava/util/Set;

+###org/apache/flink/runtime/blocklist/BlocklistContext
@1.16.0
+#blockResources(Ljava/util/Collection;)V
+#unblockResources(Ljava/util/Collection;)V

+###org/apache/flink/runtime/messages/webmonitor/JobStatusInfo
@1.16.0
+#<init>(Lorg/apache/flink/api/common/JobStatus;)V
+#getJobStatus()Lorg/apache/flink/api/common/JobStatus;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/runtime/messages/webmonitor/JobDetails$CurrentAttempts
@1.16.0
+#<init>(ILjava/util/Set;)V
+#getRepresentativeAttempt()I
+#getCurrentAttempts()Ljava/util/Set;

+###org/apache/flink/runtime/hadoop/HadoopDependency
@1.16.0
+#<init>()V
+#isHadoopCommonOnClasspath(Ljava/lang/ClassLoader;)Z

+###org/apache/flink/runtime/hadoop/HadoopUserUtils
@1.16.0
+#<init>()V
+#isProxyUser(Lorg/apache/hadoop/security/UserGroupInformation;)Z

+###org/apache/flink/runtime/jobgraph/JobVertex$InitializeOnMasterContext
@1.15.3
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExecutionParallelism()I

+###org/apache/flink/runtime/webmonitor/NonLeaderRetrievalRestfulGateway
@1.16.0
+#getAddress()Ljava/lang/String;
+#getHostname()Ljava/lang/String;
+#cancelJob(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestExecutionGraphInfo(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestJobResult(Lorg/apache/flink/api/common/JobID;Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestMultipleJobDetails(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestClusterOverview(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestMetricQueryServiceAddresses(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestTaskManagerMetricQueryServiceAddresses(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;
+#requestThreadDump(Lorg/apache/flink/api/common/time/Time;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/runtime/executiongraph/SpeculativeExecutionVertex
@1.16.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/ExecutionJobVertex;I[Lorg/apache/flink/runtime/executiongraph/IntermediateResult;Lorg/apache/flink/api/common/time/Time;JII)V
+#containsSources()Z
+#containsSinks()Z
+#createNewSpeculativeExecution(J)Lorg/apache/flink/runtime/executiongraph/Execution;
+#isOriginalAttempt(I)Z
+#getCurrentExecutions()Ljava/util/Collection;
+#getCurrentExecution(I)Lorg/apache/flink/runtime/executiongraph/Execution;
+#getPartitionProducer()Lorg/apache/flink/runtime/executiongraph/Execution;
+#cancel()Ljava/util/concurrent/CompletableFuture;
+#suspend()Ljava/util/concurrent/CompletableFuture;
+#fail(Ljava/lang/Throwable;)V
+#markFailed(Ljava/lang/Throwable;)V
+#resetForNewExecution()V
+#archiveFailedExecution(Lorg/apache/flink/runtime/executiongraph/ExecutionAttemptID;)V
+#getCurrentExecutionAttempt()Lorg/apache/flink/runtime/executiongraph/Execution;
+#getNextInputSplit(Ljava/lang/String;I)Ljava/util/Optional;
+#archive()Lorg/apache/flink/runtime/executiongraph/ArchivedExecutionVertex;
+#tryAssignResource(Lorg/apache/flink/runtime/jobmaster/LogicalSlot;)V
+#deploy()V
+#deployToSlot(Lorg/apache/flink/runtime/jobmaster/LogicalSlot;)V
+#getPreferredLocationBasedOnState()Ljava/util/Optional;
+#getCurrentTaskManagerLocationFuture()Ljava/util/concurrent/CompletableFuture;
+#getCurrentExecutionAttempt()Lorg/apache/flink/runtime/executiongraph/AccessExecution;
+#archive()Ljava/io/Serializable;

+###org/apache/flink/runtime/executiongraph/SpeculativeExecutionJobVertex
@1.16.0
+#<init>(Lorg/apache/flink/runtime/executiongraph/InternalExecutionGraphAccessor;Lorg/apache/flink/runtime/jobgraph/JobVertex;Lorg/apache/flink/runtime/scheduler/VertexParallelismInformation;)V

+###org/apache/flink/runtime/executiongraph/ExecutionHistory
@1.16.0
+#<init>(I)V
+#getHistoricalExecution(I)Ljava/util/Optional;
+#getHistoricalExecutions()Ljava/util/Collection;
+#isValidAttemptNumber(I)Z

+###org/apache/flink/runtime/executiongraph/ExecutionJobVertex$Factory
@1.16.0
+#<init>()V

+###org/apache/flink/runtime/executiongraph/ExecutionGraphID
@1.16.0
+#<init>()V
+#<init>([B)V
+#writeTo(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)V
+#fromByteBuf(Lorg/apache/flink/shaded/netty4/io/netty/buffer/ByteBuf;)Lorg/apache/flink/runtime/executiongraph/ExecutionGraphID;

+###org/apache/flink/runtime/executiongraph/JobStatusHook
@1.16.0
+#onCreated(Lorg/apache/flink/api/common/JobID;)V
+#onFinished(Lorg/apache/flink/api/common/JobID;)V
+#onFailed(Lorg/apache/flink/api/common/JobID;Ljava/lang/Throwable;)V
+#onCanceled(Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/runtime/executiongraph/SimpleInitializeOnMasterContext
@1.15.3
+#<init>(Ljava/lang/ClassLoader;I)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExecutionParallelism()I

+###org/apache/flink/runtime/executiongraph/SpeculativeExecutionJobVertex$Factory
@1.16.0
+#<init>()V

+###org/apache/flink/runtime/security/token/DelegationTokenManager
@1.16.0
+#obtainDelegationTokens(Lorg/apache/hadoop/security/Credentials;)V
+#start()V
+#stop()V

+###org/apache/flink/runtime/security/token/DelegationTokenProvider
@1.16.0
+#serviceName()Ljava/lang/String;
+#init(Lorg/apache/flink/configuration/Configuration;)V
+#delegationTokensRequired()Z
+#obtainDelegationTokens(Lorg/apache/hadoop/security/Credentials;)Ljava/util/Optional;

+###org/apache/flink/runtime/security/token/KerberosDelegationTokenManagerFactory
@1.16.0
+#<init>()V
+#create(Ljava/lang/ClassLoader;Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/util/concurrent/ExecutorService;)Lorg/apache/flink/runtime/security/token/DelegationTokenManager;

+###org/apache/flink/runtime/security/token/HadoopFSDelegationTokenProvider
@1.16.0
+#<init>()V
+#serviceName()Ljava/lang/String;
+#init(Lorg/apache/flink/configuration/Configuration;)V
+#delegationTokensRequired()Z
+#obtainDelegationTokens(Lorg/apache/hadoop/security/Credentials;)Ljava/util/Optional;

+###org/apache/flink/runtime/security/token/DelegationTokenConverter
@1.16.0
+#<init>()V
+#serialize(Lorg/apache/hadoop/security/Credentials;)[B
+#deserialize([B)Lorg/apache/hadoop/security/Credentials;

+###org/apache/flink/runtime/security/token/KerberosLoginProvider
@1.16.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
+#isLoginPossible()Z
+#doLogin()Lorg/apache/hadoop/security/UserGroupInformation;

+###org/apache/flink/runtime/security/token/NoOpDelegationTokenManager
@1.16.0
+#<init>()V
+#obtainDelegationTokens(Lorg/apache/hadoop/security/Credentials;)V
+#start()V
+#stop()V

+###org/apache/flink/runtime/security/token/KerberosDelegationTokenManager
@1.16.0
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/util/concurrent/ExecutorService;)V
+#<init>(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/util/concurrent/ScheduledExecutor;Ljava/util/concurrent/ExecutorService;Lorg/apache/flink/runtime/security/token/KerberosLoginProvider;)V
+#obtainDelegationTokens(Lorg/apache/hadoop/security/Credentials;)V
+#start()V
+#stop()V

+###org/apache/flink/shaded/io/airlift/compress/Decompressor
@1.16.0
+#decompress([BII[BII)I
+#decompress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###org/apache/flink/shaded/io/airlift/compress/IncompatibleJvmException
@1.16.0
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/shaded/io/airlift/compress/MalformedInputException
@1.16.0
+#<init>(J)V
+#<init>(JLjava/lang/String;)V
+#getOffset()J

+###org/apache/flink/shaded/io/airlift/compress/lz4/Lz4Decompressor
@1.16.0
+#<init>()V
+#decompress([BII[BII)I
+#decompress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###org/apache/flink/shaded/io/airlift/compress/lz4/Lz4RawDecompressor
@1.16.0
+#decompress(Ljava/lang/Object;JJLjava/lang/Object;JJ)I

+###org/apache/flink/shaded/io/airlift/compress/lz4/Lz4Codec
@1.16.0
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createOutputStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#getCompressorType()Ljava/lang/Class;
+#createCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#createInputStream(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#getDecompressorType()Ljava/lang/Class;
+#createDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#getDefaultExtension()Ljava/lang/String;

+###org/apache/flink/shaded/io/airlift/compress/lz4/Lz4RawCompressor
@1.16.0
+#maxCompressedLength(I)I
+#compress(Ljava/lang/Object;JILjava/lang/Object;JJ[I)I

+###org/apache/flink/shaded/io/airlift/compress/lz4/Lz4Compressor
@1.16.0
+#<init>()V
+#maxCompressedLength(I)I
+#compress([BII[BII)I
+#compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###org/apache/flink/shaded/io/airlift/compress/gzip/JdkGzipCodec
@1.16.0
+#<init>()V
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createOutputStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#getCompressorType()Ljava/lang/Class;
+#createCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#createInputStream(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#getDecompressorType()Ljava/lang/Class;
+#createDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#getDefaultExtension()Ljava/lang/String;

+###org/apache/flink/shaded/io/airlift/compress/Compressor
@1.16.0
+#maxCompressedLength(I)I
+#compress([BII[BII)I
+#compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###org/apache/flink/shaded/io/airlift/compress/snappy/SnappyFramedInputStream
@1.16.0
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Z)V
+#read()I
+#read([BII)I
+#available()I
+#close()V

+###org/apache/flink/shaded/io/airlift/compress/snappy/SnappyFramedInputStream$FrameMetaData
@1.16.0
+#<init>(Lorg/apache/flink/shaded/io/airlift/compress/snappy/SnappyFramedInputStream$FrameAction;I)V

+###org/apache/flink/shaded/io/airlift/compress/snappy/SnappyFramedOutputStream
@1.16.0
+#<init>(Ljava/io/OutputStream;)V
+#newChecksumFreeBenchmarkOutputStream(Ljava/io/OutputStream;)Lorg/apache/flink/shaded/io/airlift/compress/snappy/SnappyFramedOutputStream;
+#<init>(Ljava/io/OutputStream;ZID)V
+#write(I)V
+#write([BII)V
+#flush()V
+#close()V

+###org/apache/flink/shaded/io/airlift/compress/snappy/SnappyCompressor
@1.16.0
+#<init>()V
+#maxCompressedLength(I)I
+#compress([BII[BII)I
+#compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###org/apache/flink/shaded/io/airlift/compress/snappy/SnappyRawDecompressor
@1.16.0
+#getUncompressedLength(Ljava/lang/Object;JJ)I
+#decompress(Ljava/lang/Object;JJLjava/lang/Object;JJ)I

+###org/apache/flink/shaded/io/airlift/compress/snappy/SnappyCodec
@1.16.0
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createOutputStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#getCompressorType()Ljava/lang/Class;
+#createCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#createInputStream(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#getDecompressorType()Ljava/lang/Class;
+#createDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#getDefaultExtension()Ljava/lang/String;

+###org/apache/flink/shaded/io/airlift/compress/snappy/SnappyFramedInputStream$FrameData
@1.16.0
+#<init>(II)V

+###org/apache/flink/shaded/io/airlift/compress/snappy/SnappyRawCompressor
@1.16.0
+#maxCompressedLength(I)I
+#compress(Ljava/lang/Object;JJLjava/lang/Object;JJ[S)I

+###org/apache/flink/shaded/io/airlift/compress/snappy/SnappyDecompressor
@1.16.0
+#<init>()V
+#getUncompressedLength([BI)I
+#decompress([BII[BII)I
+#decompress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###org/apache/flink/shaded/io/airlift/compress/zstd/CompressionParameters$Strategy
@1.16.0
+#values()[Lorg/apache/flink/shaded/io/airlift/compress/zstd/CompressionParameters$Strategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/io/airlift/compress/zstd/CompressionParameters$Strategy;
+#getCompressor()Lorg/apache/flink/shaded/io/airlift/compress/zstd/BlockCompressor;

+###org/apache/flink/shaded/io/airlift/compress/zstd/ZstdDecompressor
@1.16.0
+#<init>()V
+#decompress([BII[BII)I
+#decompress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getDecompressedSize([BII)J

+###org/apache/flink/shaded/io/airlift/compress/zstd/SequenceStore$LongField
@1.16.0
+#values()[Lorg/apache/flink/shaded/io/airlift/compress/zstd/SequenceStore$LongField;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/io/airlift/compress/zstd/SequenceStore$LongField;

+###org/apache/flink/shaded/io/airlift/compress/zstd/FiniteStateEntropy$Table
@1.16.0
+#<init>(I)V
+#<init>(I[I[B[B)V

+###org/apache/flink/shaded/io/airlift/compress/zstd/ZstdCompressor
@1.16.0
+#<init>()V
+#maxCompressedLength(I)I
+#compress([BII[BII)I
+#compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###org/apache/flink/shaded/io/airlift/compress/lzo/LzoRawCompressor
@1.16.0
+#maxCompressedLength(I)I
+#compress(Ljava/lang/Object;JILjava/lang/Object;JJ[I)I

+###org/apache/flink/shaded/io/airlift/compress/lzo/LzoDecompressor
@1.16.0
+#<init>()V
+#decompress([BII[BII)I
+#decompress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###org/apache/flink/shaded/io/airlift/compress/lzo/LzoCodec
@1.16.0
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createOutputStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#getCompressorType()Ljava/lang/Class;
+#createCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#createInputStream(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#getDecompressorType()Ljava/lang/Class;
+#createDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#getDefaultExtension()Ljava/lang/String;

+###org/apache/flink/shaded/io/airlift/compress/lzo/LzoCompressor
@1.16.0
+#<init>()V
+#maxCompressedLength(I)I
+#compress([BII[BII)I
+#compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###org/apache/flink/shaded/io/airlift/compress/lzo/LzopCodec
@1.16.0
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createOutputStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#getCompressorType()Ljava/lang/Class;
+#createCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#createInputStream(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#getDecompressorType()Ljava/lang/Class;
+#createDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#getDefaultExtension()Ljava/lang/String;

+###org/apache/flink/shaded/io/airlift/compress/lzo/LzoRawDecompressor
@1.16.0
+#decompress(Ljava/lang/Object;JJLjava/lang/Object;JJ)I
