
+###org/apache/commons/dbcp2/AbandonedTrace
@2.0
+#<init>()V
+#<init>(Lorg/apache/commons/dbcp2/AbandonedTrace;)V
+#getLastUsed()J

+###org/apache/commons/dbcp2/BasicDataSource
@2.0
+#<init>()V
+#getDefaultAutoCommit()Ljava/lang/Boolean;
+#setDefaultAutoCommit(Ljava/lang/Boolean;)V
+#getDefaultReadOnly()Ljava/lang/Boolean;
+#setDefaultReadOnly(Ljava/lang/Boolean;)V
+#getDefaultTransactionIsolation()I
+#setDefaultTransactionIsolation(I)V
+#getDefaultQueryTimeout()Ljava/lang/Integer;
+#setDefaultQueryTimeout(Ljava/lang/Integer;)V
+#getDefaultCatalog()Ljava/lang/String;
+#setDefaultCatalog(Ljava/lang/String;)V
+#getCacheState()Z
+#setCacheState(Z)V
+#getDriver()Ljava/sql/Driver;
+#setDriver(Ljava/sql/Driver;)V
+#getDriverClassName()Ljava/lang/String;
+#setDriverClassName(Ljava/lang/String;)V
+#getDriverClassLoader()Ljava/lang/ClassLoader;
+#setDriverClassLoader(Ljava/lang/ClassLoader;)V
+#getLifo()Z
+#setLifo(Z)V
+#getMaxTotal()I
+#setMaxTotal(I)V
+#getMaxIdle()I
+#setMaxIdle(I)V
+#getMinIdle()I
+#setMinIdle(I)V
+#getInitialSize()I
+#setInitialSize(I)V
+#getMaxWaitMillis()J
+#setMaxWaitMillis(J)V
+#isPoolPreparedStatements()Z
+#setPoolPreparedStatements(Z)V
+#getMaxOpenPreparedStatements()I
+#setMaxOpenPreparedStatements(I)V
+#getTestOnCreate()Z
+#setTestOnCreate(Z)V
+#getTestOnBorrow()Z
+#setTestOnBorrow(Z)V
+#getTestOnReturn()Z
+#setTestOnReturn(Z)V
+#getTimeBetweenEvictionRunsMillis()J
+#setTimeBetweenEvictionRunsMillis(J)V
+#getNumTestsPerEvictionRun()I
+#setNumTestsPerEvictionRun(I)V
+#getMinEvictableIdleTimeMillis()J
+#setMinEvictableIdleTimeMillis(J)V
+#setSoftMinEvictableIdleTimeMillis(J)V
+#getSoftMinEvictableIdleTimeMillis()J
+#getEvictionPolicyClassName()Ljava/lang/String;
+#setEvictionPolicyClassName(Ljava/lang/String;)V
+#getTestWhileIdle()Z
+#setTestWhileIdle(Z)V
+#getNumActive()I
+#getNumIdle()I
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getValidationQuery()Ljava/lang/String;
+#setValidationQuery(Ljava/lang/String;)V
+#getValidationQueryTimeout()I
+#setValidationQueryTimeout(I)V
+#getConnectionInitSqls()Ljava/util/List;
+#getConnectionInitSqlsAsArray()[Ljava/lang/String;
+#setConnectionInitSqls(Ljava/util/Collection;)V
+#isAccessToUnderlyingConnectionAllowed()Z
+#setAccessToUnderlyingConnectionAllowed(Z)V
+#getMaxConnLifetimeMillis()J
+#setMaxConnLifetimeMillis(J)V
+#getJmxName()Ljava/lang/String;
+#setJmxName(Ljava/lang/String;)V
+#getEnableAutoCommitOnReturn()Z
+#setEnableAutoCommitOnReturn(Z)V
+#getRollbackOnReturn()Z
+#setRollbackOnReturn(Z)V
+#getConnection()Ljava/sql/Connection;
+#getConnection(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
+#getLoginTimeout()I
+#getLogWriter()Ljava/io/PrintWriter;
+#setLoginTimeout(I)V
+#setLogWriter(Ljava/io/PrintWriter;)V
+#getRemoveAbandonedOnBorrow()Z
+#setRemoveAbandonedOnMaintenance(Z)V
+#getRemoveAbandonedOnMaintenance()Z
+#setRemoveAbandonedOnBorrow(Z)V
+#getRemoveAbandonedTimeout()I
+#setRemoveAbandonedTimeout(I)V
+#getLogAbandoned()Z
+#setLogAbandoned(Z)V
+#getAbandonedLogWriter()Ljava/io/PrintWriter;
+#setAbandonedLogWriter(Ljava/io/PrintWriter;)V
+#getAbandonedUsageTracking()Z
+#setAbandonedUsageTracking(Z)V
+#addConnectionProperty(Ljava/lang/String;Ljava/lang/String;)V
+#removeConnectionProperty(Ljava/lang/String;)V
+#setConnectionProperties(Ljava/lang/String;)V
+#close()V
+#isClosed()Z
+#isWrapperFor(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#getParentLogger()Ljava/util/logging/Logger;
+#preRegister(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)Ljavax/management/ObjectName;
+#postRegister(Ljava/lang/Boolean;)V
+#preDeregister()V
+#postDeregister()V
@2.1
+#getLogExpiredConnections()Z
+#setLogExpiredConnections(Z)V
+#getDisconnectionSqlCodes()Ljava/util/Set;
+#getDisconnectionSqlCodesAsArray()[Ljava/lang/String;
+#setDisconnectionSqlCodes(Ljava/util/Collection;)V
+#getFastFailValidation()Z
+#setFastFailValidation(Z)V
+#invalidateConnection(Ljava/sql/Connection;)V
@2.5.0
+#getDefaultSchema()Ljava/lang/String;
+#setDefaultSchema(Ljava/lang/String;)V
@2.6.0
+#getAutoCommitOnReturn()Z
*#getEnableAutoCommitOnReturn()Z[deprecated]
+#evict()V
+#setAutoCommitOnReturn(Z)V
*#setEnableAutoCommitOnReturn(Z)V[deprecated]
@2.7.0
+#getConnectionFactoryClassName()Ljava/lang/String;
+#setConnectionFactoryClassName(Ljava/lang/String;)V
@2.8.0
+#isClearStatementPoolOnReturn()Z
+#restart()V
+#setClearStatementPoolOnReturn(Z)V
+#start()V

+###org/apache/commons/dbcp2/BasicDataSourceFactory
@2.0
+#<init>()V
+#getObjectInstance(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljava/lang/Object;
+#createDataSource(Ljava/util/Properties;)Lorg/apache/commons/dbcp2/BasicDataSource;

+###org/apache/commons/dbcp2/BasicDataSourceMXBean
@2.0
+#getAbandonedUsageTracking()Z
+#getDefaultAutoCommit()Ljava/lang/Boolean;
+#getDefaultReadOnly()Ljava/lang/Boolean;
+#getDefaultTransactionIsolation()I
+#getDefaultCatalog()Ljava/lang/String;
+#getCacheState()Z
+#getDriverClassName()Ljava/lang/String;
+#getLifo()Z
+#getMaxTotal()I
+#getMaxIdle()I
+#getMinIdle()I
+#getInitialSize()I
+#getMaxWaitMillis()J
+#isPoolPreparedStatements()Z
+#getMaxOpenPreparedStatements()I
+#getTestOnCreate()Z
+#getTestOnBorrow()Z
+#getTimeBetweenEvictionRunsMillis()J
+#getNumTestsPerEvictionRun()I
+#getMinEvictableIdleTimeMillis()J
+#getSoftMinEvictableIdleTimeMillis()J
+#getTestWhileIdle()Z
+#getNumActive()I
+#getNumIdle()I
+#getPassword()Ljava/lang/String;
+#getUrl()Ljava/lang/String;
+#getUsername()Ljava/lang/String;
+#getValidationQuery()Ljava/lang/String;
+#getValidationQueryTimeout()I
+#getConnectionInitSqlsAsArray()[Ljava/lang/String;
+#isAccessToUnderlyingConnectionAllowed()Z
+#getMaxConnLifetimeMillis()J
+#getRemoveAbandonedOnBorrow()Z
+#getRemoveAbandonedOnMaintenance()Z
+#getRemoveAbandonedTimeout()I
+#getLogAbandoned()Z
+#isClosed()Z
@2.1
+#getLogExpiredConnections()Z
+#getFastFailValidation()Z
+#getDisconnectionSqlCodesAsArray()[Ljava/lang/String;
@2.5.0
+#getDefaultSchema()Ljava/lang/String;
@2.8.0
+#isClearStatementPoolOnReturn()Z
+#start()V
+#restart()V
@2.9.0
*#getPassword()Ljava/lang/String;[deprecated]
-#getAbandonedUsageTracking()Z
-#getDefaultAutoCommit()Ljava/lang/Boolean;
-#getDefaultReadOnly()Ljava/lang/Boolean;
-#getDefaultTransactionIsolation()I
-#getDefaultCatalog()Ljava/lang/String;
-#getDefaultSchema()Ljava/lang/String;
-#getCacheState()Z
-#getDriverClassName()Ljava/lang/String;
-#getLifo()Z
-#getMaxTotal()I
-#getMaxIdle()I
-#getMinIdle()I
-#getInitialSize()I
-#getMaxWaitMillis()J
-#isPoolPreparedStatements()Z
-#isClearStatementPoolOnReturn()Z
-#getMaxOpenPreparedStatements()I
-#getTestOnCreate()Z
-#getTestOnBorrow()Z
-#getTimeBetweenEvictionRunsMillis()J
-#getNumTestsPerEvictionRun()I
-#getMinEvictableIdleTimeMillis()J
-#getSoftMinEvictableIdleTimeMillis()J
-#getTestWhileIdle()Z
-#getNumActive()I
-#getNumIdle()I
-#getUrl()Ljava/lang/String;
-#getUsername()Ljava/lang/String;
-#getValidationQuery()Ljava/lang/String;
-#getValidationQueryTimeout()I
-#getConnectionInitSqlsAsArray()[Ljava/lang/String;
-#isAccessToUnderlyingConnectionAllowed()Z
-#getMaxConnLifetimeMillis()J
-#getLogExpiredConnections()Z
-#getRemoveAbandonedOnBorrow()Z
-#getRemoveAbandonedOnMaintenance()Z
-#getRemoveAbandonedTimeout()I
-#getLogAbandoned()Z
-#isClosed()Z
-#getFastFailValidation()Z
-#getDisconnectionSqlCodesAsArray()[Ljava/lang/String;
-#start()V
-#restart()V

+###org/apache/commons/dbcp2/ConnectionFactory
@2.0
+#createConnection()Ljava/sql/Connection;

+###org/apache/commons/dbcp2/Constants
@2.0
+#<init>()V

+###org/apache/commons/dbcp2/cpdsadapter/DriverAdapterCPDS
@2.0
+#<init>()V
+#getPooledConnection()Ljavax/sql/PooledConnection;
+#getPooledConnection(Ljava/lang/String;Ljava/lang/String;)Ljavax/sql/PooledConnection;
+#getParentLogger()Ljava/util/logging/Logger;
+#getReference()Ljavax/naming/Reference;
+#getObjectInstance(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljava/lang/Object;
+#getConnectionProperties()Ljava/util/Properties;
+#setConnectionProperties(Ljava/util/Properties;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#getDriver()Ljava/lang/String;
+#setDriver(Ljava/lang/String;)V
+#getLoginTimeout()I
+#getLogWriter()Ljava/io/PrintWriter;
+#setLoginTimeout(I)V
+#setLogWriter(Ljava/io/PrintWriter;)V
+#isPoolPreparedStatements()Z
+#setPoolPreparedStatements(Z)V
+#getMaxIdle()I
+#setMaxIdle(I)V
+#getTimeBetweenEvictionRunsMillis()J
+#setTimeBetweenEvictionRunsMillis(J)V
+#getNumTestsPerEvictionRun()I
+#setNumTestsPerEvictionRun(I)V
+#getMinEvictableIdleTimeMillis()I
+#setMinEvictableIdleTimeMillis(I)V
+#isAccessToUnderlyingConnectionAllowed()Z
+#setAccessToUnderlyingConnectionAllowed(Z)V
+#getMaxPreparedStatements()I
+#setMaxPreparedStatements(I)V
@2.4.0
+#getPasswordCharArray()[C
+#setPassword([C)V
@2.6.0
+#toString()Ljava/lang/String;
@2.9.0
+#getDurationBetweenEvictionRuns()Ljava/time/Duration;
+#getMinEvictableIdleDuration()Ljava/time/Duration;
*#getMinEvictableIdleTimeMillis()I[deprecated]
*#getTimeBetweenEvictionRunsMillis()J[deprecated]
+#setDurationBetweenEvictionRuns(Ljava/time/Duration;)V
+#setMinEvictableIdleDuration(Ljava/time/Duration;)V
*#setMinEvictableIdleTimeMillis(I)V[deprecated]
*#setTimeBetweenEvictionRunsMillis(J)V[deprecated]

+###org/apache/commons/dbcp2/cpdsadapter/PStmtKeyCPDS
@2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;II)V
+#<init>(Ljava/lang/String;III)V
+#<init>(Ljava/lang/String;[I)V
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.4.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;

+###org/apache/commons/dbcp2/DataSourceConnectionFactory
@2.0
+#<init>(Ljavax/sql/DataSource;)V
+#<init>(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;)V
+#createConnection()Ljava/sql/Connection;
@2.4.0
+#<init>(Ljavax/sql/DataSource;Ljava/lang/String;[C)V
@2.6.0
+#getDataSource()Ljavax/sql/DataSource;
+#getUserName()Ljava/lang/String;
+#getUserPassword()[C

+###org/apache/commons/dbcp2/datasources/InstanceKeyDataSource
@2.0
+#<init>()V
+#close()V
+#isWrapperFor(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#getParentLogger()Ljava/util/logging/Logger;
+#getDefaultBlockWhenExhausted()Z
+#setDefaultBlockWhenExhausted(Z)V
+#getDefaultEvictionPolicyClassName()Ljava/lang/String;
+#setDefaultEvictionPolicyClassName(Ljava/lang/String;)V
+#getDefaultLifo()Z
+#setDefaultLifo(Z)V
+#getDefaultMaxIdle()I
+#setDefaultMaxIdle(I)V
+#getDefaultMaxTotal()I
+#setDefaultMaxTotal(I)V
+#getDefaultMaxWaitMillis()J
+#setDefaultMaxWaitMillis(J)V
+#getDefaultMinEvictableIdleTimeMillis()J
+#setDefaultMinEvictableIdleTimeMillis(J)V
+#getDefaultMinIdle()I
+#setDefaultMinIdle(I)V
+#getDefaultNumTestsPerEvictionRun()I
+#setDefaultNumTestsPerEvictionRun(I)V
+#getDefaultSoftMinEvictableIdleTimeMillis()J
+#setDefaultSoftMinEvictableIdleTimeMillis(J)V
+#getDefaultTestOnCreate()Z
+#setDefaultTestOnCreate(Z)V
+#getDefaultTestOnBorrow()Z
+#setDefaultTestOnBorrow(Z)V
+#getDefaultTestOnReturn()Z
+#setDefaultTestOnReturn(Z)V
+#getDefaultTestWhileIdle()Z
+#setDefaultTestWhileIdle(Z)V
+#getDefaultTimeBetweenEvictionRunsMillis()J
+#setDefaultTimeBetweenEvictionRunsMillis(J)V
+#getConnectionPoolDataSource()Ljavax/sql/ConnectionPoolDataSource;
+#setConnectionPoolDataSource(Ljavax/sql/ConnectionPoolDataSource;)V
+#getDataSourceName()Ljava/lang/String;
+#setDataSourceName(Ljava/lang/String;)V
+#isDefaultAutoCommit()Ljava/lang/Boolean;
+#setDefaultAutoCommit(Ljava/lang/Boolean;)V
+#isDefaultReadOnly()Ljava/lang/Boolean;
+#setDefaultReadOnly(Ljava/lang/Boolean;)V
+#getDefaultTransactionIsolation()I
+#setDefaultTransactionIsolation(I)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getJndiEnvironment(Ljava/lang/String;)Ljava/lang/String;
+#setJndiEnvironment(Ljava/lang/String;Ljava/lang/String;)V
+#getLoginTimeout()I
+#setLoginTimeout(I)V
+#getLogWriter()Ljava/io/PrintWriter;
+#setLogWriter(Ljava/io/PrintWriter;)V
+#getValidationQuery()Ljava/lang/String;
+#setValidationQuery(Ljava/lang/String;)V
+#getValidationQueryTimeout()I
+#setValidationQueryTimeout(I)V
+#isRollbackAfterValidation()Z
+#setRollbackAfterValidation(Z)V
+#getMaxConnLifetimeMillis()J
+#setMaxConnLifetimeMillis(J)V
+#getConnection()Ljava/sql/Connection;
+#getConnection(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
@2.6.0
+#toString()Ljava/lang/String;
@2.9.0
+#getDefaultMaxWait()Ljava/time/Duration;
*#getDefaultMaxWaitMillis()J[deprecated]
+#getMaxConnLifetime()Ljava/time/Duration;
*#getMaxConnLifetimeMillis()J[deprecated]
+#setDefaultMaxWait(Ljava/time/Duration;)V
*#setDefaultMaxWaitMillis(J)V[deprecated]
+#setMaxConnLifetime(Ljava/time/Duration;)V
*#setMaxConnLifetimeMillis(J)V[deprecated]

+###org/apache/commons/dbcp2/datasources/PerUserPoolDataSource
@2.0
+#<init>()V
+#close()V
+#getPerUserBlockWhenExhausted(Ljava/lang/String;)Z
+#setPerUserBlockWhenExhausted(Ljava/lang/String;Ljava/lang/Boolean;)V
+#getPerUserEvictionPolicyClassName(Ljava/lang/String;)Ljava/lang/String;
+#setPerUserEvictionPolicyClassName(Ljava/lang/String;Ljava/lang/String;)V
+#getPerUserLifo(Ljava/lang/String;)Z
+#setPerUserLifo(Ljava/lang/String;Ljava/lang/Boolean;)V
+#getPerUserMaxIdle(Ljava/lang/String;)I
+#setPerUserMaxIdle(Ljava/lang/String;Ljava/lang/Integer;)V
+#getPerUserMaxTotal(Ljava/lang/String;)I
+#setPerUserMaxTotal(Ljava/lang/String;Ljava/lang/Integer;)V
+#getPerUserMaxWaitMillis(Ljava/lang/String;)J
+#setPerUserMaxWaitMillis(Ljava/lang/String;Ljava/lang/Long;)V
+#getPerUserMinEvictableIdleTimeMillis(Ljava/lang/String;)J
+#setPerUserMinEvictableIdleTimeMillis(Ljava/lang/String;Ljava/lang/Long;)V
+#getPerUserMinIdle(Ljava/lang/String;)I
+#setPerUserMinIdle(Ljava/lang/String;Ljava/lang/Integer;)V
+#getPerUserNumTestsPerEvictionRun(Ljava/lang/String;)I
+#setPerUserNumTestsPerEvictionRun(Ljava/lang/String;Ljava/lang/Integer;)V
+#getPerUserSoftMinEvictableIdleTimeMillis(Ljava/lang/String;)J
+#setPerUserSoftMinEvictableIdleTimeMillis(Ljava/lang/String;Ljava/lang/Long;)V
+#getPerUserTestOnCreate(Ljava/lang/String;)Z
+#setPerUserTestOnCreate(Ljava/lang/String;Ljava/lang/Boolean;)V
+#getPerUserTestOnBorrow(Ljava/lang/String;)Z
+#setPerUserTestOnBorrow(Ljava/lang/String;Ljava/lang/Boolean;)V
+#getPerUserTestOnReturn(Ljava/lang/String;)Z
+#setPerUserTestOnReturn(Ljava/lang/String;Ljava/lang/Boolean;)V
+#getPerUserTestWhileIdle(Ljava/lang/String;)Z
+#setPerUserTestWhileIdle(Ljava/lang/String;Ljava/lang/Boolean;)V
+#getPerUserTimeBetweenEvictionRunsMillis(Ljava/lang/String;)J
+#setPerUserTimeBetweenEvictionRunsMillis(Ljava/lang/String;Ljava/lang/Long;)V
+#getPerUserDefaultAutoCommit(Ljava/lang/String;)Ljava/lang/Boolean;
+#setPerUserDefaultAutoCommit(Ljava/lang/String;Ljava/lang/Boolean;)V
+#getPerUserDefaultReadOnly(Ljava/lang/String;)Ljava/lang/Boolean;
+#setPerUserDefaultReadOnly(Ljava/lang/String;Ljava/lang/Boolean;)V
+#getPerUserDefaultTransactionIsolation(Ljava/lang/String;)Ljava/lang/Integer;
+#setPerUserDefaultTransactionIsolation(Ljava/lang/String;Ljava/lang/Integer;)V
+#getNumActive()I
+#getNumActive(Ljava/lang/String;)I
+#getNumIdle()I
+#getNumIdle(Ljava/lang/String;)I
+#getReference()Ljavax/naming/Reference;
@2.3.0
+#clear()V

+###org/apache/commons/dbcp2/datasources/PerUserPoolDataSourceFactory
@2.0
+#<init>()V
+#getObjectInstance(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljava/lang/Object;

+###org/apache/commons/dbcp2/datasources/SharedPoolDataSource
@2.0
+#<init>()V
+#close()V
+#getMaxTotal()I
+#setMaxTotal(I)V
+#getNumActive()I
+#getNumIdle()I
+#getReference()Ljavax/naming/Reference;

+###org/apache/commons/dbcp2/datasources/SharedPoolDataSourceFactory
@2.0
+#<init>()V
+#getObjectInstance(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljava/lang/Object;

+###org/apache/commons/dbcp2/DelegatingCallableStatement
@2.0
+#<init>(Lorg/apache/commons/dbcp2/DelegatingConnection;Ljava/sql/CallableStatement;)V
+#registerOutParameter(II)V
+#registerOutParameter(III)V
+#wasNull()Z
+#getString(I)Ljava/lang/String;
+#getBoolean(I)Z
+#getByte(I)B
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getFloat(I)F
+#getDouble(I)D
+#getBigDecimal(II)Ljava/math/BigDecimal;[deprecated]
+#getBytes(I)[B
+#getDate(I)Ljava/sql/Date;
+#getTime(I)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getObject(I)Ljava/lang/Object;
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getRef(I)Ljava/sql/Ref;
+#getBlob(I)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getArray(I)Ljava/sql/Array;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#registerOutParameter(IILjava/lang/String;)V
+#registerOutParameter(Ljava/lang/String;I)V
+#registerOutParameter(Ljava/lang/String;II)V
+#registerOutParameter(Ljava/lang/String;ILjava/lang/String;)V
+#getURL(I)Ljava/net/URL;
+#setURL(Ljava/lang/String;Ljava/net/URL;)V
+#setNull(Ljava/lang/String;I)V
+#setBoolean(Ljava/lang/String;Z)V
+#setByte(Ljava/lang/String;B)V
+#setShort(Ljava/lang/String;S)V
+#setInt(Ljava/lang/String;I)V
+#setLong(Ljava/lang/String;J)V
+#setFloat(Ljava/lang/String;F)V
+#setDouble(Ljava/lang/String;D)V
+#setBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#setString(Ljava/lang/String;Ljava/lang/String;)V
+#setBytes(Ljava/lang/String;[B)V
+#setDate(Ljava/lang/String;Ljava/sql/Date;)V
+#setTime(Ljava/lang/String;Ljava/sql/Time;)V
+#setTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;II)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#setDate(Ljava/lang/String;Ljava/sql/Date;Ljava/util/Calendar;)V
+#setTime(Ljava/lang/String;Ljava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;Ljava/util/Calendar;)V
+#setNull(Ljava/lang/String;ILjava/lang/String;)V
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z
+#getByte(Ljava/lang/String;)B
+#getShort(Ljava/lang/String;)S
+#getInt(Ljava/lang/String;)I
+#getLong(Ljava/lang/String;)J
+#getFloat(Ljava/lang/String;)F
+#getDouble(Ljava/lang/String;)D
+#getBytes(Ljava/lang/String;)[B
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#setRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#setNString(Ljava/lang/String;Ljava/lang/String;)V
+#setNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#setNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#setClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#setBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#setSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;
+#getNString(I)Ljava/lang/String;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#setBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#setClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#setNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#setClob(Ljava/lang/String;Ljava/io/Reader;)V
+#setBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#setNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@2.5.0
+#registerOutParameter(ILjava/sql/SQLType;)V
+#registerOutParameter(ILjava/sql/SQLType;I)V
+#registerOutParameter(ILjava/sql/SQLType;Ljava/lang/String;)V
+#registerOutParameter(Ljava/lang/String;Ljava/sql/SQLType;)V
+#registerOutParameter(Ljava/lang/String;Ljava/sql/SQLType;I)V
+#registerOutParameter(Ljava/lang/String;Ljava/sql/SQLType;Ljava/lang/String;)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;I)V

+###org/apache/commons/dbcp2/DelegatingConnection
@2.0
+#<init>(Ljava/sql/Connection;)V
+#toString()Ljava/lang/String;
+#getDelegate()Ljava/sql/Connection;
+#innermostDelegateEquals(Ljava/sql/Connection;)Z
+#getInnermostDelegate()Ljava/sql/Connection;
+#getInnermostDelegateInternal()Ljava/sql/Connection;
+#setDelegate(Ljava/sql/Connection;)V
+#close()V
+#createStatement()Ljava/sql/Statement;
+#createStatement(II)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#clearWarnings()V
+#commit()V
+#getCacheState()Z
+#getAutoCommit()Z
+#getCatalog()Ljava/lang/String;
+#getMetaData()Ljava/sql/DatabaseMetaData;
+#getTransactionIsolation()I
+#getTypeMap()Ljava/util/Map;
+#getWarnings()Ljava/sql/SQLWarning;
+#isReadOnly()Z
+#nativeSQL(Ljava/lang/String;)Ljava/lang/String;
+#rollback()V
+#getDefaultQueryTimeout()Ljava/lang/Integer;
+#setDefaultQueryTimeout(Ljava/lang/Integer;)V
+#setCacheState(Z)V
+#clearCachedState()V
+#setAutoCommit(Z)V
+#setCatalog(Ljava/lang/String;)V
+#setReadOnly(Z)V
+#setTransactionIsolation(I)V
+#setTypeMap(Ljava/util/Map;)V
+#isClosed()Z
+#getHoldability()I
+#setHoldability(I)V
+#setSavepoint()Ljava/sql/Savepoint;
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#rollback(Ljava/sql/Savepoint;)V
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#createStatement(III)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#isWrapperFor(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#createArrayOf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Array;
+#createBlob()Ljava/sql/Blob;
+#createClob()Ljava/sql/Clob;
+#createNClob()Ljava/sql/NClob;
+#createSQLXML()Ljava/sql/SQLXML;
+#createStruct(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;
+#isValid(I)Z
+#setClientInfo(Ljava/lang/String;Ljava/lang/String;)V
+#setClientInfo(Ljava/util/Properties;)V
+#getClientInfo()Ljava/util/Properties;
+#getClientInfo(Ljava/lang/String;)Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#getSchema()Ljava/lang/String;
+#abort(Ljava/util/concurrent/Executor;)V
+#setNetworkTimeout(Ljava/util/concurrent/Executor;I)V
+#getNetworkTimeout()I

+###org/apache/commons/dbcp2/DelegatingDatabaseMetaData
@2.0
+#<init>(Lorg/apache/commons/dbcp2/DelegatingConnection;Ljava/sql/DatabaseMetaData;)V
+#getDelegate()Ljava/sql/DatabaseMetaData;
+#getInnermostDelegate()Ljava/sql/DatabaseMetaData;
+#allProceduresAreCallable()Z
+#allTablesAreSelectable()Z
+#dataDefinitionCausesTransactionCommit()Z
+#dataDefinitionIgnoredInTransactions()Z
+#deletesAreDetected(I)Z
+#doesMaxRowSizeIncludeBlobs()Z
+#getAttributes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getBestRowIdentifier(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Ljava/sql/ResultSet;
+#getCatalogSeparator()Ljava/lang/String;
+#getCatalogTerm()Ljava/lang/String;
+#getCatalogs()Ljava/sql/ResultSet;
+#getColumnPrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getConnection()Ljava/sql/Connection;
+#getCrossReference(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getDatabaseMajorVersion()I
+#getDatabaseMinorVersion()I
+#getDatabaseProductName()Ljava/lang/String;
+#getDatabaseProductVersion()Ljava/lang/String;
+#getDefaultTransactionIsolation()I
+#getDriverMajorVersion()I
+#getDriverMinorVersion()I
+#getDriverName()Ljava/lang/String;
+#getDriverVersion()Ljava/lang/String;
+#getExportedKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getExtraNameCharacters()Ljava/lang/String;
+#getIdentifierQuoteString()Ljava/lang/String;
+#getImportedKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getIndexInfo(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/sql/ResultSet;
+#getJDBCMajorVersion()I
+#getJDBCMinorVersion()I
+#getMaxBinaryLiteralLength()I
+#getMaxCatalogNameLength()I
+#getMaxCharLiteralLength()I
+#getMaxColumnNameLength()I
+#getMaxColumnsInGroupBy()I
+#getMaxColumnsInIndex()I
+#getMaxColumnsInOrderBy()I
+#getMaxColumnsInSelect()I
+#getMaxColumnsInTable()I
+#getMaxConnections()I
+#getMaxCursorNameLength()I
+#getMaxIndexLength()I
+#getMaxProcedureNameLength()I
+#getMaxRowSize()I
+#getMaxSchemaNameLength()I
+#getMaxStatementLength()I
+#getMaxStatements()I
+#getMaxTableNameLength()I
+#getMaxTablesInSelect()I
+#getMaxUserNameLength()I
+#getNumericFunctions()Ljava/lang/String;
+#getPrimaryKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getProcedureColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getProcedureTerm()Ljava/lang/String;
+#getProcedures(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getResultSetHoldability()I
+#getSQLKeywords()Ljava/lang/String;
+#getSQLStateType()I
+#getSchemaTerm()Ljava/lang/String;
+#getSchemas()Ljava/sql/ResultSet;
+#getSearchStringEscape()Ljava/lang/String;
+#getStringFunctions()Ljava/lang/String;
+#getSuperTables(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSuperTypes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSystemFunctions()Ljava/lang/String;
+#getTablePrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTableTypes()Ljava/sql/ResultSet;
+#getTables(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTimeDateFunctions()Ljava/lang/String;
+#getTypeInfo()Ljava/sql/ResultSet;
+#getUDTs(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[I)Ljava/sql/ResultSet;
+#getURL()Ljava/lang/String;
+#getUserName()Ljava/lang/String;
+#getVersionColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#insertsAreDetected(I)Z
+#isCatalogAtStart()Z
+#isReadOnly()Z
+#locatorsUpdateCopy()Z
+#nullPlusNonNullIsNull()Z
+#nullsAreSortedAtEnd()Z
+#nullsAreSortedAtStart()Z
+#nullsAreSortedHigh()Z
+#nullsAreSortedLow()Z
+#othersDeletesAreVisible(I)Z
+#othersInsertsAreVisible(I)Z
+#othersUpdatesAreVisible(I)Z
+#ownDeletesAreVisible(I)Z
+#ownInsertsAreVisible(I)Z
+#ownUpdatesAreVisible(I)Z
+#storesLowerCaseIdentifiers()Z
+#storesLowerCaseQuotedIdentifiers()Z
+#storesMixedCaseIdentifiers()Z
+#storesMixedCaseQuotedIdentifiers()Z
+#storesUpperCaseIdentifiers()Z
+#storesUpperCaseQuotedIdentifiers()Z
+#supportsANSI92EntryLevelSQL()Z
+#supportsANSI92FullSQL()Z
+#supportsANSI92IntermediateSQL()Z
+#supportsAlterTableWithAddColumn()Z
+#supportsAlterTableWithDropColumn()Z
+#supportsBatchUpdates()Z
+#supportsCatalogsInDataManipulation()Z
+#supportsCatalogsInIndexDefinitions()Z
+#supportsCatalogsInPrivilegeDefinitions()Z
+#supportsCatalogsInProcedureCalls()Z
+#supportsCatalogsInTableDefinitions()Z
+#supportsColumnAliasing()Z
+#supportsConvert()Z
+#supportsConvert(II)Z
+#supportsCoreSQLGrammar()Z
+#supportsCorrelatedSubqueries()Z
+#supportsDataDefinitionAndDataManipulationTransactions()Z
+#supportsDataManipulationTransactionsOnly()Z
+#supportsDifferentTableCorrelationNames()Z
+#supportsExpressionsInOrderBy()Z
+#supportsExtendedSQLGrammar()Z
+#supportsFullOuterJoins()Z
+#supportsGetGeneratedKeys()Z
+#supportsGroupBy()Z
+#supportsGroupByBeyondSelect()Z
+#supportsGroupByUnrelated()Z
+#supportsIntegrityEnhancementFacility()Z
+#supportsLikeEscapeClause()Z
+#supportsLimitedOuterJoins()Z
+#supportsMinimumSQLGrammar()Z
+#supportsMixedCaseIdentifiers()Z
+#supportsMixedCaseQuotedIdentifiers()Z
+#supportsMultipleOpenResults()Z
+#supportsMultipleResultSets()Z
+#supportsMultipleTransactions()Z
+#supportsNamedParameters()Z
+#supportsNonNullableColumns()Z
+#supportsOpenCursorsAcrossCommit()Z
+#supportsOpenCursorsAcrossRollback()Z
+#supportsOpenStatementsAcrossCommit()Z
+#supportsOpenStatementsAcrossRollback()Z
+#supportsOrderByUnrelated()Z
+#supportsOuterJoins()Z
+#supportsPositionedDelete()Z
+#supportsPositionedUpdate()Z
+#supportsResultSetConcurrency(II)Z
+#supportsResultSetHoldability(I)Z
+#supportsResultSetType(I)Z
+#supportsSavepoints()Z
+#supportsSchemasInDataManipulation()Z
+#supportsSchemasInIndexDefinitions()Z
+#supportsSchemasInPrivilegeDefinitions()Z
+#supportsSchemasInProcedureCalls()Z
+#supportsSchemasInTableDefinitions()Z
+#supportsSelectForUpdate()Z
+#supportsStatementPooling()Z
+#supportsStoredProcedures()Z
+#supportsSubqueriesInComparisons()Z
+#supportsSubqueriesInExists()Z
+#supportsSubqueriesInIns()Z
+#supportsSubqueriesInQuantifieds()Z
+#supportsTableCorrelationNames()Z
+#supportsTransactionIsolationLevel(I)Z
+#supportsTransactions()Z
+#supportsUnion()Z
+#supportsUnionAll()Z
+#updatesAreDetected(I)Z
+#usesLocalFilePerTable()Z
+#usesLocalFiles()Z
+#isWrapperFor(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#getRowIdLifetime()Ljava/sql/RowIdLifetime;
+#getSchemas(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#autoCommitFailureClosesAllResultSets()Z
+#supportsStoredFunctionsUsingCallSyntax()Z
+#getClientInfoProperties()Ljava/sql/ResultSet;
+#getFunctions(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getFunctionColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getPseudoColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#generatedKeyAlwaysReturned()Z
@2.5.0
+#getMaxLogicalLobSize()J
+#supportsRefCursors()Z

+###org/apache/commons/dbcp2/DelegatingPreparedStatement
@2.0
+#<init>(Lorg/apache/commons/dbcp2/DelegatingConnection;Ljava/sql/PreparedStatement;)V
+#executeQuery()Ljava/sql/ResultSet;
+#executeUpdate()I
+#setNull(II)V
+#setBoolean(IZ)V
+#setByte(IB)V
+#setShort(IS)V
+#setInt(II)V
+#setLong(IJ)V
+#setFloat(IF)V
+#setDouble(ID)V
+#setBigDecimal(ILjava/math/BigDecimal;)V
+#setString(ILjava/lang/String;)V
+#setBytes(I[B)V
+#setDate(ILjava/sql/Date;)V
+#setTime(ILjava/sql/Time;)V
+#setTimestamp(ILjava/sql/Timestamp;)V
+#setAsciiStream(ILjava/io/InputStream;I)V
+#setUnicodeStream(ILjava/io/InputStream;I)V[deprecated]
+#setBinaryStream(ILjava/io/InputStream;I)V
+#clearParameters()V
+#setObject(ILjava/lang/Object;II)V
+#setObject(ILjava/lang/Object;I)V
+#setObject(ILjava/lang/Object;)V
+#execute()Z
+#addBatch()V
+#setCharacterStream(ILjava/io/Reader;I)V
+#setRef(ILjava/sql/Ref;)V
+#setBlob(ILjava/sql/Blob;)V
+#setClob(ILjava/sql/Clob;)V
+#setArray(ILjava/sql/Array;)V
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#setDate(ILjava/sql/Date;Ljava/util/Calendar;)V
+#setTime(ILjava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
+#setNull(IILjava/lang/String;)V
+#toString()Ljava/lang/String;
+#setURL(ILjava/net/URL;)V
+#getParameterMetaData()Ljava/sql/ParameterMetaData;
+#setRowId(ILjava/sql/RowId;)V
+#setNString(ILjava/lang/String;)V
+#setNCharacterStream(ILjava/io/Reader;J)V
+#setNClob(ILjava/sql/NClob;)V
+#setClob(ILjava/io/Reader;J)V
+#setBlob(ILjava/io/InputStream;J)V
+#setNClob(ILjava/io/Reader;J)V
+#setSQLXML(ILjava/sql/SQLXML;)V
+#setAsciiStream(ILjava/io/InputStream;J)V
+#setBinaryStream(ILjava/io/InputStream;J)V
+#setCharacterStream(ILjava/io/Reader;J)V
+#setAsciiStream(ILjava/io/InputStream;)V
+#setBinaryStream(ILjava/io/InputStream;)V
+#setCharacterStream(ILjava/io/Reader;)V
+#setNCharacterStream(ILjava/io/Reader;)V
+#setClob(ILjava/io/Reader;)V
+#setBlob(ILjava/io/InputStream;)V
+#setNClob(ILjava/io/Reader;)V
@2.5.0
+#executeLargeUpdate()J
+#setObject(ILjava/lang/Object;Ljava/sql/SQLType;)V
+#setObject(ILjava/lang/Object;Ljava/sql/SQLType;I)V

+###org/apache/commons/dbcp2/DelegatingResultSet
@2.0
+#wrapResultSet(Ljava/sql/Statement;Ljava/sql/ResultSet;)Ljava/sql/ResultSet;
+#wrapResultSet(Ljava/sql/Connection;Ljava/sql/ResultSet;)Ljava/sql/ResultSet;
+#getDelegate()Ljava/sql/ResultSet;
+#getInnermostDelegate()Ljava/sql/ResultSet;
+#getStatement()Ljava/sql/Statement;
+#close()V
+#next()Z
+#wasNull()Z
+#getString(I)Ljava/lang/String;
+#getBoolean(I)Z
+#getByte(I)B
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getFloat(I)F
+#getDouble(I)D
+#getBigDecimal(II)Ljava/math/BigDecimal;[deprecated]
+#getBytes(I)[B
+#getDate(I)Ljava/sql/Date;
+#getTime(I)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getAsciiStream(I)Ljava/io/InputStream;
+#getUnicodeStream(I)Ljava/io/InputStream;[deprecated]
+#getBinaryStream(I)Ljava/io/InputStream;
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z
+#getByte(Ljava/lang/String;)B
+#getShort(Ljava/lang/String;)S
+#getInt(Ljava/lang/String;)I
+#getLong(Ljava/lang/String;)J
+#getFloat(Ljava/lang/String;)F
+#getDouble(Ljava/lang/String;)D
+#getBigDecimal(Ljava/lang/String;I)Ljava/math/BigDecimal;[deprecated]
+#getBytes(Ljava/lang/String;)[B
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getAsciiStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getUnicodeStream(Ljava/lang/String;)Ljava/io/InputStream;[deprecated]
+#getBinaryStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#getCursorName()Ljava/lang/String;
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#getObject(I)Ljava/lang/Object;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#findColumn(Ljava/lang/String;)I
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#isBeforeFirst()Z
+#isAfterLast()Z
+#isFirst()Z
+#isLast()Z
+#beforeFirst()V
+#afterLast()V
+#first()Z
+#last()Z
+#getRow()I
+#absolute(I)Z
+#relative(I)Z
+#previous()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getType()I
+#getConcurrency()I
+#rowUpdated()Z
+#rowInserted()Z
+#rowDeleted()Z
+#updateNull(I)V
+#updateBoolean(IZ)V
+#updateByte(IB)V
+#updateShort(IS)V
+#updateInt(II)V
+#updateLong(IJ)V
+#updateFloat(IF)V
+#updateDouble(ID)V
+#updateBigDecimal(ILjava/math/BigDecimal;)V
+#updateString(ILjava/lang/String;)V
+#updateBytes(I[B)V
+#updateDate(ILjava/sql/Date;)V
+#updateTime(ILjava/sql/Time;)V
+#updateTimestamp(ILjava/sql/Timestamp;)V
+#updateAsciiStream(ILjava/io/InputStream;I)V
+#updateBinaryStream(ILjava/io/InputStream;I)V
+#updateCharacterStream(ILjava/io/Reader;I)V
+#updateObject(ILjava/lang/Object;I)V
+#updateObject(ILjava/lang/Object;)V
+#updateNull(Ljava/lang/String;)V
+#updateBoolean(Ljava/lang/String;Z)V
+#updateByte(Ljava/lang/String;B)V
+#updateShort(Ljava/lang/String;S)V
+#updateInt(Ljava/lang/String;I)V
+#updateLong(Ljava/lang/String;J)V
+#updateFloat(Ljava/lang/String;F)V
+#updateDouble(Ljava/lang/String;D)V
+#updateBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#updateString(Ljava/lang/String;Ljava/lang/String;)V
+#updateBytes(Ljava/lang/String;[B)V
+#updateDate(Ljava/lang/String;Ljava/sql/Date;)V
+#updateTime(Ljava/lang/String;Ljava/sql/Time;)V
+#updateTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;)V
+#insertRow()V
+#updateRow()V
+#deleteRow()V
+#refreshRow()V
+#cancelRowUpdates()V
+#moveToInsertRow()V
+#moveToCurrentRow()V
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getRef(I)Ljava/sql/Ref;
+#getBlob(I)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getArray(I)Ljava/sql/Array;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getURL(I)Ljava/net/URL;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#updateRef(ILjava/sql/Ref;)V
+#updateRef(Ljava/lang/String;Ljava/sql/Ref;)V
+#updateBlob(ILjava/sql/Blob;)V
+#updateBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#updateClob(ILjava/sql/Clob;)V
+#updateClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#updateArray(ILjava/sql/Array;)V
+#updateArray(Ljava/lang/String;Ljava/sql/Array;)V
+#isWrapperFor(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#updateRowId(ILjava/sql/RowId;)V
+#updateRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#getHoldability()I
+#isClosed()Z
+#updateNString(ILjava/lang/String;)V
+#updateNString(Ljava/lang/String;Ljava/lang/String;)V
+#updateNClob(ILjava/sql/NClob;)V
+#updateNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;
+#updateSQLXML(ILjava/sql/SQLXML;)V
+#updateSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#getNString(I)Ljava/lang/String;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#updateNCharacterStream(ILjava/io/Reader;J)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateAsciiStream(ILjava/io/InputStream;J)V
+#updateBinaryStream(ILjava/io/InputStream;J)V
+#updateCharacterStream(ILjava/io/Reader;J)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateBlob(ILjava/io/InputStream;J)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateClob(ILjava/io/Reader;J)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNClob(ILjava/io/Reader;J)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNCharacterStream(ILjava/io/Reader;)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateAsciiStream(ILjava/io/InputStream;)V
+#updateBinaryStream(ILjava/io/InputStream;)V
+#updateCharacterStream(ILjava/io/Reader;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateBlob(ILjava/io/InputStream;)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateClob(ILjava/io/Reader;)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;)V
+#updateNClob(ILjava/io/Reader;)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@2.2.0
+#toString()Ljava/lang/String;
@2.5.0
+#updateObject(ILjava/lang/Object;Ljava/sql/SQLType;)V
+#updateObject(ILjava/lang/Object;Ljava/sql/SQLType;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;I)V

+###org/apache/commons/dbcp2/DelegatingStatement
@2.0
+#<init>(Lorg/apache/commons/dbcp2/DelegatingConnection;Ljava/sql/Statement;)V
+#getDelegate()Ljava/sql/Statement;
+#getInnermostDelegate()Ljava/sql/Statement;
+#setDelegate(Ljava/sql/Statement;)V
+#close()V
+#getConnection()Ljava/sql/Connection;
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#getResultSet()Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#getMaxFieldSize()I
+#setMaxFieldSize(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#setEscapeProcessing(Z)V
+#getQueryTimeout()I
+#setQueryTimeout(I)V
+#cancel()V
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setCursorName(Ljava/lang/String;)V
+#execute(Ljava/lang/String;)Z
+#getUpdateCount()I
+#getMoreResults()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getResultSetConcurrency()I
+#getResultSetType()I
+#addBatch(Ljava/lang/String;)V
+#clearBatch()V
+#executeBatch()[I
+#toString()Ljava/lang/String;
+#getMoreResults(I)Z
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#getResultSetHoldability()I
+#isClosed()Z
+#isWrapperFor(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#setPoolable(Z)V
+#isPoolable()Z
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
@2.4.0
+#activate()V
+#passivate()V
@2.5.0
+#executeLargeBatch()[J
+#executeLargeUpdate(Ljava/lang/String;)J
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J
+#getLargeMaxRows()J
+#getLargeUpdateCount()J
+#setLargeMaxRows(J)V

+###org/apache/commons/dbcp2/DriverConnectionFactory
@2.0
+#<init>(Ljava/sql/Driver;Ljava/lang/String;Ljava/util/Properties;)V
+#createConnection()Ljava/sql/Connection;
+#toString()Ljava/lang/String;
@2.6.0
+#getConnectionString()Ljava/lang/String;
+#getDriver()Ljava/sql/Driver;
+#getProperties()Ljava/util/Properties;

+###org/apache/commons/dbcp2/DriverManagerConnectionFactory
@2.0
+#<init>(Ljava/lang/String;Ljava/util/Properties;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#createConnection()Ljava/sql/Connection;
@2.2.0
+#<init>(Ljava/lang/String;)V
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/String;[C)V
+#getConnectionUri()Ljava/lang/String;
+#getProperties()Ljava/util/Properties;
+#getUserName()Ljava/lang/String;

+###org/apache/commons/dbcp2/managed/BasicManagedDataSource
@2.0
+#<init>()V
+#getXaDataSourceInstance()Ljavax/sql/XADataSource;
+#setXaDataSourceInstance(Ljavax/sql/XADataSource;)V
+#getTransactionManager()Ljavax/transaction/TransactionManager;
+#setTransactionManager(Ljavax/transaction/TransactionManager;)V
+#getXADataSource()Ljava/lang/String;
+#setXADataSource(Ljava/lang/String;)V
@2.6.0
+#getTransactionSynchronizationRegistry()Ljavax/transaction/TransactionSynchronizationRegistry;
+#setTransactionSynchronizationRegistry(Ljavax/transaction/TransactionSynchronizationRegistry;)V

+###org/apache/commons/dbcp2/managed/DataSourceXAConnectionFactory
@2.0
+#<init>(Ljavax/transaction/TransactionManager;Ljavax/sql/XADataSource;)V
+#<init>(Ljavax/transaction/TransactionManager;Ljavax/sql/XADataSource;Ljava/lang/String;Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#getTransactionRegistry()Lorg/apache/commons/dbcp2/managed/TransactionRegistry;
+#createConnection()Ljava/sql/Connection;
@2.4.0
+#<init>(Ljavax/transaction/TransactionManager;Ljavax/sql/XADataSource;Ljava/lang/String;[C)V
+#setPassword([C)V
@2.6.0
+#<init>(Ljavax/transaction/TransactionManager;Ljavax/sql/XADataSource;Ljava/lang/String;[CLjavax/transaction/TransactionSynchronizationRegistry;)V
+#<init>(Ljavax/transaction/TransactionManager;Ljavax/sql/XADataSource;Ljavax/transaction/TransactionSynchronizationRegistry;)V
*#getUsername()Ljava/lang/String;[deprecated]
+#getUserName()Ljava/lang/String;
+#getUserPassword()[C
+#getXaDataSource()Ljavax/sql/XADataSource;

+###org/apache/commons/dbcp2/managed/LocalXAConnectionFactory$LocalXAResource
@2.0
+#<init>(Ljava/sql/Connection;)V
+#getXid()Ljavax/transaction/xa/Xid;
+#start(Ljavax/transaction/xa/Xid;I)V
+#end(Ljavax/transaction/xa/Xid;I)V
+#prepare(Ljavax/transaction/xa/Xid;)I
+#commit(Ljavax/transaction/xa/Xid;Z)V
+#rollback(Ljavax/transaction/xa/Xid;)V
+#isSameRM(Ljavax/transaction/xa/XAResource;)Z
+#forget(Ljavax/transaction/xa/Xid;)V
+#recover(I)[Ljavax/transaction/xa/Xid;
+#getTransactionTimeout()I
+#setTransactionTimeout(I)Z

+###org/apache/commons/dbcp2/managed/LocalXAConnectionFactory
@2.0
+#<init>(Ljavax/transaction/TransactionManager;Lorg/apache/commons/dbcp2/ConnectionFactory;)V
+#getTransactionRegistry()Lorg/apache/commons/dbcp2/managed/TransactionRegistry;
+#createConnection()Ljava/sql/Connection;
@2.6.0
+#getConnectionFactory()Lorg/apache/commons/dbcp2/ConnectionFactory;
@2.8.0
+#<init>(Ljavax/transaction/TransactionManager;Ljavax/transaction/TransactionSynchronizationRegistry;Lorg/apache/commons/dbcp2/ConnectionFactory;)V

+###org/apache/commons/dbcp2/managed/ManagedConnection$CompletionListener
@2.0
+#afterCompletion(Lorg/apache/commons/dbcp2/managed/TransactionContext;Z)V

+###org/apache/commons/dbcp2/managed/ManagedConnection
@2.0
+#<init>(Lorg/apache/commons/pool2/ObjectPool;Lorg/apache/commons/dbcp2/managed/TransactionRegistry;Z)V
+#close()V
+#setAutoCommit(Z)V
+#commit()V
+#rollback()V
+#setReadOnly(Z)V
+#isAccessToUnderlyingConnectionAllowed()Z
+#getDelegate()Ljava/sql/Connection;
+#getInnermostDelegate()Ljava/sql/Connection;
@2.6.0
+#getTransactionContext()Lorg/apache/commons/dbcp2/managed/TransactionContext;
+#getTransactionRegistry()Lorg/apache/commons/dbcp2/managed/TransactionRegistry;

+###org/apache/commons/dbcp2/managed/ManagedDataSource
@2.0
+#<init>(Lorg/apache/commons/pool2/ObjectPool;Lorg/apache/commons/dbcp2/managed/TransactionRegistry;)V
+#setTransactionRegistry(Lorg/apache/commons/dbcp2/managed/TransactionRegistry;)V
+#getConnection()Ljava/sql/Connection;
@2.6.0
+#getTransactionRegistry()Lorg/apache/commons/dbcp2/managed/TransactionRegistry;

+###org/apache/commons/dbcp2/managed/PoolableManagedConnection
@2.0
+#<init>(Lorg/apache/commons/dbcp2/managed/TransactionRegistry;Ljava/sql/Connection;Lorg/apache/commons/pool2/ObjectPool;)V
+#reallyClose()V
@2.2.0
+#<init>(Lorg/apache/commons/dbcp2/managed/TransactionRegistry;Ljava/sql/Connection;Lorg/apache/commons/pool2/ObjectPool;Ljava/util/Collection;Z)V
@2.6.0
+#getTransactionRegistry()Lorg/apache/commons/dbcp2/managed/TransactionRegistry;

+###org/apache/commons/dbcp2/managed/PoolableManagedConnectionFactory
@2.0
+#<init>(Lorg/apache/commons/dbcp2/managed/XAConnectionFactory;Ljavax/management/ObjectName;)V
+#makeObject()Lorg/apache/commons/pool2/PooledObject;
@2.6.0
+#getTransactionRegistry()Lorg/apache/commons/dbcp2/managed/TransactionRegistry;

+###org/apache/commons/dbcp2/managed/TransactionContext
@2.0
+#<init>(Lorg/apache/commons/dbcp2/managed/TransactionRegistry;Ljavax/transaction/Transaction;)V
+#getSharedConnection()Ljava/sql/Connection;
+#setSharedConnection(Ljava/sql/Connection;)V
+#addTransactionContextListener(Lorg/apache/commons/dbcp2/managed/TransactionContextListener;)V
+#isActive()Z
@2.4.0
+#completeTransaction()V
+#isTransactionComplete()Z
@2.6.0
+#<init>(Lorg/apache/commons/dbcp2/managed/TransactionRegistry;Ljavax/transaction/Transaction;Ljavax/transaction/TransactionSynchronizationRegistry;)V

+###org/apache/commons/dbcp2/managed/TransactionContextListener
@2.0
+#afterCompletion(Lorg/apache/commons/dbcp2/managed/TransactionContext;Z)V

+###org/apache/commons/dbcp2/managed/TransactionRegistry
@2.0
+#<init>(Ljavax/transaction/TransactionManager;)V
+#registerConnection(Ljava/sql/Connection;Ljavax/transaction/xa/XAResource;)V
+#getXAResource(Ljava/sql/Connection;)Ljavax/transaction/xa/XAResource;
+#getActiveTransactionContext()Lorg/apache/commons/dbcp2/managed/TransactionContext;
+#unregisterConnection(Ljava/sql/Connection;)V
@2.6.0
+#<init>(Ljavax/transaction/TransactionManager;Ljavax/transaction/TransactionSynchronizationRegistry;)V

+###org/apache/commons/dbcp2/managed/XAConnectionFactory
@2.0
+#getTransactionRegistry()Lorg/apache/commons/dbcp2/managed/TransactionRegistry;
+#createConnection()Ljava/sql/Connection;

+###org/apache/commons/dbcp2/PoolableCallableStatement
@2.0
+#<init>(Ljava/sql/CallableStatement;Lorg/apache/commons/dbcp2/PStmtKey;Lorg/apache/commons/pool2/KeyedObjectPool;Lorg/apache/commons/dbcp2/DelegatingConnection;)V
+#close()V
@2.4.0
+#activate()V
+#passivate()V

+###org/apache/commons/dbcp2/PoolableConnection
@2.0
+#<init>(Ljava/sql/Connection;Lorg/apache/commons/pool2/ObjectPool;Ljavax/management/ObjectName;)V
+#isClosed()Z
+#close()V
+#reallyClose()V
+#getToString()Ljava/lang/String;
+#validate(Ljava/lang/String;I)V
@2.1
+#<init>(Ljava/sql/Connection;Lorg/apache/commons/pool2/ObjectPool;Ljavax/management/ObjectName;Ljava/util/Collection;Z)V
@2.6.0
+#getDisconnectionSqlCodes()Ljava/util/Collection;
+#isFastFailValidation()Z
@2.9.0
+#abort(Ljava/util/concurrent/Executor;)V

+###org/apache/commons/dbcp2/PoolableConnectionFactory
@2.0
+#<init>(Lorg/apache/commons/dbcp2/ConnectionFactory;Ljavax/management/ObjectName;)V
+#setValidationQuery(Ljava/lang/String;)V
+#setValidationQueryTimeout(I)V
+#setConnectionInitSql(Ljava/util/Collection;)V
+#setPool(Lorg/apache/commons/pool2/ObjectPool;)V
+#getPool()Lorg/apache/commons/pool2/ObjectPool;
+#setDefaultReadOnly(Ljava/lang/Boolean;)V
+#setDefaultAutoCommit(Ljava/lang/Boolean;)V
+#setDefaultTransactionIsolation(I)V
+#setDefaultCatalog(Ljava/lang/String;)V
+#setCacheState(Z)V
+#setPoolStatements(Z)V
+#setMaxOpenPrepatedStatements(I)V
+#setMaxConnLifetimeMillis(J)V
+#isEnableAutoCommitOnReturn()Z
+#setEnableAutoCommitOnReturn(Z)V
+#isRollbackOnReturn()Z
+#setRollbackOnReturn(Z)V
+#getDefaultQueryTimeout()Ljava/lang/Integer;
+#setDefaultQueryTimeout(Ljava/lang/Integer;)V
+#makeObject()Lorg/apache/commons/pool2/PooledObject;
+#destroyObject(Lorg/apache/commons/pool2/PooledObject;)V
+#validateObject(Lorg/apache/commons/pool2/PooledObject;)Z
+#validateConnection(Lorg/apache/commons/dbcp2/PoolableConnection;)V
+#passivateObject(Lorg/apache/commons/pool2/PooledObject;)V
+#activateObject(Lorg/apache/commons/pool2/PooledObject;)V
@2.1
+#getDisconnectionSqlCodes()Ljava/util/Collection;
+#setDisconnectionSqlCodes(Ljava/util/Collection;)V
+#isFastFailValidation()Z
+#setFastFailValidation(Z)V
@2.2.0
*#setMaxOpenPrepatedStatements(I)V[deprecated]
+#setMaxOpenPreparedStatements(I)V
@2.5.0
+#setDefaultSchema(Ljava/lang/String;)V
@2.6.0
+#getCacheState()Z
+#getConnectionFactory()Lorg/apache/commons/dbcp2/ConnectionFactory;
+#getConnectionInitSqls()Ljava/util/Collection;
+#getDataSourceJmxName()Ljavax/management/ObjectName;
+#getDataSourceJmxObjectName()Ljavax/management/ObjectName;
+#getDefaultAutoCommit()Ljava/lang/Boolean;
+#getDefaultCatalog()Ljava/lang/String;
+#getDefaultQueryTimeoutSeconds()Ljava/lang/Integer;
+#getDefaultReadOnly()Ljava/lang/Boolean;
+#getDefaultSchema()Ljava/lang/String;
+#getDefaultTransactionIsolation()I
+#getMaxConnLifetimeMillis()J
+#getPoolStatements()Z
+#getValidationQuery()Ljava/lang/String;
+#getValidationQueryTimeoutSeconds()I
+#isAutoCommitOnReturn()Z
*#isEnableAutoCommitOnReturn()Z[deprecated]
+#setAutoCommitOnReturn(Z)V
*#setEnableAutoCommitOnReturn(Z)V[deprecated]
@2.8.0
+#setClearStatementPoolOnReturn(Z)V
@2.9.0
+#destroyObject(Lorg/apache/commons/pool2/PooledObject;Lorg/apache/commons/pool2/DestroyMode;)V

+###org/apache/commons/dbcp2/PoolableConnectionMXBean
@2.0
+#isClosed()Z
+#getToString()Ljava/lang/String;
+#getAutoCommit()Z
+#setAutoCommit(Z)V
+#getCacheState()Z
+#setCacheState(Z)V
+#getCatalog()Ljava/lang/String;
+#setCatalog(Ljava/lang/String;)V
+#getHoldability()I
+#setHoldability(I)V
+#isReadOnly()Z
+#setReadOnly(Z)V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#getTransactionIsolation()I
+#setTransactionIsolation(I)V
+#clearCachedState()V
+#clearWarnings()V
+#close()V
+#reallyClose()V

+###org/apache/commons/dbcp2/PoolablePreparedStatement
@2.0
+#<init>(Ljava/sql/PreparedStatement;Ljava/lang/Object;Lorg/apache/commons/pool2/KeyedObjectPool;Lorg/apache/commons/dbcp2/DelegatingConnection;)V
+#addBatch()V
+#clearBatch()V
+#close()V
+#activate()V
+#passivate()V

+###org/apache/commons/dbcp2/PoolingConnection$StatementType
@2.0
+#values()[Lorg/apache/commons/dbcp2/PoolingConnection$StatementType;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/dbcp2/PoolingConnection$StatementType;

+###org/apache/commons/dbcp2/PoolingConnection
@2.0
+#<init>(Ljava/sql/Connection;)V
+#setStatementPool(Lorg/apache/commons/pool2/KeyedObjectPool;)V
+#close()V
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#makeObject(Lorg/apache/commons/dbcp2/PStmtKey;)Lorg/apache/commons/pool2/PooledObject;
+#destroyObject(Lorg/apache/commons/dbcp2/PStmtKey;Lorg/apache/commons/pool2/PooledObject;)V
+#validateObject(Lorg/apache/commons/dbcp2/PStmtKey;Lorg/apache/commons/pool2/PooledObject;)Z
+#activateObject(Lorg/apache/commons/dbcp2/PStmtKey;Lorg/apache/commons/pool2/PooledObject;)V
+#passivateObject(Lorg/apache/commons/dbcp2/PStmtKey;Lorg/apache/commons/pool2/PooledObject;)V
+#toString()Ljava/lang/String;
+#passivateObject(Ljava/lang/Object;Lorg/apache/commons/pool2/PooledObject;)V
+#activateObject(Ljava/lang/Object;Lorg/apache/commons/pool2/PooledObject;)V
+#validateObject(Ljava/lang/Object;Lorg/apache/commons/pool2/PooledObject;)Z
+#destroyObject(Ljava/lang/Object;Lorg/apache/commons/pool2/PooledObject;)V
+#makeObject(Ljava/lang/Object;)Lorg/apache/commons/pool2/PooledObject;
@2.2.0
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
@2.8.0
+#connectionReturnedToPool()V
+#getStatementPool()Lorg/apache/commons/pool2/KeyedObjectPool;
+#setClearStatementPoolOnReturn(Z)V

+###org/apache/commons/dbcp2/PoolingDataSource
@2.0
+#<init>(Lorg/apache/commons/pool2/ObjectPool;)V
+#isAccessToUnderlyingConnectionAllowed()Z
+#setAccessToUnderlyingConnectionAllowed(Z)V
+#isWrapperFor(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#getParentLogger()Ljava/util/logging/Logger;
+#getConnection()Ljava/sql/Connection;
+#getConnection(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
+#getLogWriter()Ljava/io/PrintWriter;
+#getLoginTimeout()I
+#setLoginTimeout(I)V
+#setLogWriter(Ljava/io/PrintWriter;)V
@2.1
+#close()V

+###org/apache/commons/dbcp2/PoolingDriver
@2.0
+#<init>()V
+#getConnectionPool(Ljava/lang/String;)Lorg/apache/commons/pool2/ObjectPool;
+#registerPool(Ljava/lang/String;Lorg/apache/commons/pool2/ObjectPool;)V
+#closePool(Ljava/lang/String;)V
+#getPoolNames()[Ljava/lang/String;
+#acceptsURL(Ljava/lang/String;)Z
+#connect(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;
+#getParentLogger()Ljava/util/logging/Logger;
+#invalidateConnection(Ljava/sql/Connection;)V
+#getMajorVersion()I
+#getMinorVersion()I
+#jdbcCompliant()Z
+#getPropertyInfo(Ljava/lang/String;Ljava/util/Properties;)[Ljava/sql/DriverPropertyInfo;

+###org/apache/commons/dbcp2/PStmtKey
@2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/dbcp2/PoolingConnection$StatementType;Ljava/lang/Integer;)V
+#<init>(Ljava/lang/String;II)V
+#<init>(Ljava/lang/String;Ljava/lang/String;II)V
+#<init>(Ljava/lang/String;Ljava/lang/String;IILorg/apache/commons/dbcp2/PoolingConnection$StatementType;)V
+#getSql()Ljava/lang/String;
+#getResultSetType()Ljava/lang/Integer;
+#getResultSetConcurrency()Ljava/lang/Integer;
+#getAutoGeneratedKeys()Ljava/lang/Integer;
+#getCatalog()Ljava/lang/String;
+#getStmtType()Lorg/apache/commons/dbcp2/PoolingConnection$StatementType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/dbcp2/PoolingConnection$StatementType;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[I)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;III)V
+#<init>(Ljava/lang/String;Ljava/lang/String;IIILorg/apache/commons/dbcp2/PoolingConnection$StatementType;)V
+#getResultSetHoldability()Ljava/lang/Integer;
+#getColumnIndexes()[I
+#getColumnNames()[Ljava/lang/String;
+#createStatement(Ljava/sql/Connection;)Ljava/sql/Statement;
@2.5.0
*#<init>(Ljava/lang/String;)V[deprecated]
*#<init>(Ljava/lang/String;II)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;I)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;II)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;III)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;IIILorg/apache/commons/dbcp2/PoolingConnection$StatementType;)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;IILorg/apache/commons/dbcp2/PoolingConnection$StatementType;)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;[I)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/dbcp2/PoolingConnection$StatementType;)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/dbcp2/PoolingConnection$StatementType;Ljava/lang/Integer;)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;III)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IIILorg/apache/commons/dbcp2/PoolingConnection$StatementType;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/apache/commons/dbcp2/PoolingConnection$StatementType;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[I)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/dbcp2/PoolingConnection$StatementType;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/dbcp2/PoolingConnection$StatementType;Ljava/lang/Integer;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
*#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V[deprecated]
+#getSchema()Ljava/lang/String;

+###org/apache/commons/dbcp2/SwallowedExceptionLogger
@2.0
+#<init>(Lorg/apache/commons/logging/Log;)V
+#onSwallowException(Ljava/lang/Exception;)V
@2.1
+#<init>(Lorg/apache/commons/logging/Log;Z)V

+###org/apache/commons/dbcp2/Utils
@2.0
+#closeQuietly(Ljava/sql/ResultSet;)V
+#closeQuietly(Ljava/sql/Connection;)V
+#closeQuietly(Ljava/sql/Statement;)V
+#getMessage(Ljava/lang/String;)Ljava/lang/String;
+#getMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
@2.4.0
+#toCharArray(Ljava/lang/String;)[C
+#toString([C)Ljava/lang/String;
@2.6.0
+#clone([C)[C
+#closeQuietly(Ljava/lang/AutoCloseable;)V
*#closeQuietly(Ljava/sql/Connection;)V[deprecated]
*#closeQuietly(Ljava/sql/ResultSet;)V[deprecated]
*#closeQuietly(Ljava/sql/Statement;)V[deprecated]
@2.8.0
+#cloneWithoutCredentials(Ljava/util/Properties;)Ljava/util/Properties;

+###org/apache/commons/dbcp2/ListException
@2.4.0
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getExceptionList()Ljava/util/List;

+###org/apache/commons/dbcp2/SQLExceptionList
@2.7.0
+#<init>(Ljava/util/List;)V
+#getCauseList()Ljava/util/List;

+###org/apache/commons/dbcp2/Jdbc41Bridge
@2.6.0
+#<init>()V
+#abort(Ljava/sql/Connection;Ljava/util/concurrent/Executor;)V
+#generatedKeyAlwaysReturned(Ljava/sql/DatabaseMetaData;)Z
+#getNetworkTimeout(Ljava/sql/Connection;)I
+#getObject(Ljava/sql/ResultSet;ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/sql/ResultSet;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getPseudoColumns(Ljava/sql/DatabaseMetaData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSchema(Ljava/sql/Connection;)Ljava/lang/String;
+#setNetworkTimeout(Ljava/sql/Connection;Ljava/util/concurrent/Executor;I)V
+#setSchema(Ljava/sql/Connection;Ljava/lang/String;)V
+#closeOnCompletion(Ljava/sql/Statement;)V
+#isCloseOnCompletion(Ljava/sql/Statement;)Z
+#getParentLogger(Ljavax/sql/CommonDataSource;)Ljava/util/logging/Logger;

+###org/apache/commons/dbcp2/DataSourceMXBean
@2.9.0
+#getAbandonedUsageTracking()Z
+#getCacheState()Z
+#getConnectionInitSqlsAsArray()[Ljava/lang/String;
+#getDefaultAutoCommit()Ljava/lang/Boolean;
+#getDefaultCatalog()Ljava/lang/String;
+#getDefaultReadOnly()Ljava/lang/Boolean;
+#getDefaultSchema()Ljava/lang/String;
+#getDefaultTransactionIsolation()I
+#getDisconnectionSqlCodesAsArray()[Ljava/lang/String;
+#getDriverClassName()Ljava/lang/String;
+#getFastFailValidation()Z
+#getInitialSize()I
+#getLifo()Z
+#getLogAbandoned()Z
+#getLogExpiredConnections()Z
+#getMaxConnLifetimeMillis()J
+#getMaxIdle()I
+#getMaxOpenPreparedStatements()I
+#getMaxTotal()I
+#getMaxWaitMillis()J
+#getMinEvictableIdleTimeMillis()J
+#getMinIdle()I
+#getNumActive()I
+#getNumIdle()I
+#getNumTestsPerEvictionRun()I
+#getRemoveAbandonedOnBorrow()Z
+#getRemoveAbandonedOnMaintenance()Z
+#getRemoveAbandonedTimeout()I
+#getSoftMinEvictableIdleTimeMillis()J
+#getTestOnBorrow()Z
+#getTestOnCreate()Z
+#getTestWhileIdle()Z
+#getTimeBetweenEvictionRunsMillis()J
+#getUrl()Ljava/lang/String;
+#getUsername()Ljava/lang/String;
+#getValidationQuery()Ljava/lang/String;
+#getValidationQueryTimeout()I
+#isAccessToUnderlyingConnectionAllowed()Z
+#isClearStatementPoolOnReturn()Z
+#isClosed()Z
+#isPoolPreparedStatements()Z
+#restart()V
+#start()V
