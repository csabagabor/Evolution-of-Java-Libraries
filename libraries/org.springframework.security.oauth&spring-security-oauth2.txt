
+###org/springframework/security/oauth2/provider/ClientRegistrationService
@1.0.0.RELEASE
+#addClientDetails(Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#updateClientDetails(Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#updateClientSecret(Ljava/lang/String;Ljava/lang/String;)V
+#removeClientDetails(Ljava/lang/String;)V
+#listClientDetails()Ljava/util/List;

+###org/springframework/security/oauth2/provider/request/DefaultOAuth2RequestValidator
@2.0.0.RELEASE
+#<init>()V
+#validateScope(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#validateScope(Lorg/springframework/security/oauth2/provider/TokenRequest;Lorg/springframework/security/oauth2/provider/ClientDetails;)V

+###org/springframework/security/oauth2/provider/request/DefaultOAuth2RequestFactory
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
+#setSecurityContextAccessor(Lorg/springframework/security/oauth2/provider/SecurityContextAccessor;)V
+#setCheckUserScopes(Z)V
+#createAuthorizationRequest(Ljava/util/Map;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#createOAuth2Request(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/provider/OAuth2Request;
+#createTokenRequest(Ljava/util/Map;Lorg/springframework/security/oauth2/provider/ClientDetails;)Lorg/springframework/security/oauth2/provider/TokenRequest;
+#createTokenRequest(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/TokenRequest;
+#createOAuth2Request(Lorg/springframework/security/oauth2/provider/ClientDetails;Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/provider/OAuth2Request;

+###org/springframework/security/oauth2/provider/OAuth2Authentication
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)V
+#getCredentials()Ljava/lang/Object;
+#getPrincipal()Ljava/lang/Object;
+#isClientOnly()Z
+#getAuthorizationRequest()Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#getUserAuthentication()Lorg/springframework/security/core/Authentication;
+#isAuthenticated()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/OAuth2Request;Lorg/springframework/security/core/Authentication;)V
+#getOAuth2Request()Lorg/springframework/security/oauth2/provider/OAuth2Request;
-#<init>(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)V
-#getAuthorizationRequest()Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
@2.0.10.RELEASE
+#eraseCredentials()V

+###org/springframework/security/oauth2/provider/ClientRegistrationException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/oauth2/provider/CompositeTokenGranter
@1.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
@2.0.0.RELEASE
+#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
-#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
@2.0.8.RELEASE
+#addTokenGranter(Lorg/springframework/security/oauth2/provider/TokenGranter;)V

+###org/springframework/security/oauth2/provider/AuthorizationRequest
@1.0.0.RELEASE
+#getAuthorizationParameters()Ljava/util/Map;
+#getApprovalParameters()Ljava/util/Map;
+#getClientId()Ljava/lang/String;
+#getScope()Ljava/util/Set;
+#getResourceIds()Ljava/util/Set;
+#getAuthorities()Ljava/util/Collection;
+#isApproved()Z
+#isDenied()Z
+#getState()Ljava/lang/String;
+#getRedirectUri()Ljava/lang/String;
+#getResponseTypes()Ljava/util/Set;
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;Ljava/util/Collection;ZLjava/lang/String;Ljava/lang/String;Ljava/util/Set;)V
+#createOAuth2Request()Lorg/springframework/security/oauth2/provider/OAuth2Request;
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
+#setResourceIdsAndAuthoritiesFromClientDetails(Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#setApprovalParameters(Ljava/util/Map;)V
+#setState(Ljava/lang/String;)V
+#setResponseTypes(Ljava/util/Set;)V
+#setRedirectUri(Ljava/lang/String;)V
+#setApproved(Z)V
+#setAuthorities(Ljava/util/Collection;)V
+#getExtensions()Ljava/util/Map;
+#setExtensions(Ljava/util/Map;)V
+#setResourceIds(Ljava/util/Set;)V
+#setClientId(Ljava/lang/String;)V
+#setScope(Ljava/util/Collection;)V
+#setRequestParameters(Ljava/util/Map;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getRequestParameters()Ljava/util/Map;
-#getAuthorizationParameters()Ljava/util/Map;
-#isDenied()Z

+###org/springframework/security/oauth2/provider/token/AuthenticationKeyGenerator
@1.0.0.RELEASE
+#extractKey(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Ljava/lang/String;

+###org/springframework/security/oauth2/provider/token/UserAuthenticationConverter
@2.0.0.RELEASE
+#convertUserAuthentication(Lorg/springframework/security/core/Authentication;)Ljava/util/Map;
+#extractAuthentication(Ljava/util/Map;)Lorg/springframework/security/core/Authentication;

+###org/springframework/security/oauth2/provider/token/AbstractTokenGranter
@1.0.0.RELEASE
+#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
@2.0.0.RELEASE
+#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
-#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/provider/token/store/KeyStoreKeyFactory
@2.0.4.RELEASE
+#<init>(Lorg/springframework/core/io/Resource;[C)V
+#getKeyPair(Ljava/lang/String;)Ljava/security/KeyPair;
+#getKeyPair(Ljava/lang/String;[C)Ljava/security/KeyPair;

+###org/springframework/security/oauth2/provider/token/store/InMemoryTokenStore
@2.0.0.RELEASE
+#<init>()V
+#setFlushInterval(I)V
+#getFlushInterval()I
+#clear()V
+#setAuthenticationKeyGenerator(Lorg/springframework/security/oauth2/provider/token/AuthenticationKeyGenerator;)V
+#getAccessTokenCount()I
+#getRefreshTokenCount()I
+#getExpiryTokenCount()I
+#getAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#readAuthentication(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthenticationForRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthenticationForRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#storeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#removeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#removeAccessToken(Ljava/lang/String;)V
+#storeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;
+#removeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#removeRefreshToken(Ljava/lang/String;)V
+#removeAccessTokenUsingRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#findTokensByClientIdAndUserName(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;

+###org/springframework/security/oauth2/provider/token/store/JwtAccessTokenConverter
@2.0.0.RELEASE
+#<init>()V
+#setAccessTokenConverter(Lorg/springframework/security/oauth2/provider/token/AccessTokenConverter;)V
+#getAccessTokenConverter()Lorg/springframework/security/oauth2/provider/token/AccessTokenConverter;
+#convertAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Ljava/util/Map;
+#extractAccessToken(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#extractAuthentication(Ljava/util/Map;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#getKey()Ljava/util/Map;
+#setSigningKey(Ljava/lang/String;)V
+#isPublic()Z
+#setVerifierKey(Ljava/lang/String;)V
+#enhance(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#afterPropertiesSet()V
@2.0.4.RELEASE
+#setKeyPair(Ljava/security/KeyPair;)V
@2.0.6.RELEASE
+#isRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)Z
@2.0.12.RELEASE
+#setVerifier(Lorg/springframework/security/jwt/crypto/sign/SignatureVerifier;)V
+#setSigner(Lorg/springframework/security/jwt/crypto/sign/Signer;)V
@2.2.0.RELEASE
+#getJwtClaimsSetVerifier()Lorg/springframework/security/oauth2/provider/token/store/JwtClaimsSetVerifier;
+#setJwtClaimsSetVerifier(Lorg/springframework/security/oauth2/provider/token/store/JwtClaimsSetVerifier;)V

+###org/springframework/security/oauth2/provider/token/store/JwtTokenStore
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/store/JwtAccessTokenConverter;)V
+#setApprovalStore(Lorg/springframework/security/oauth2/provider/approval/ApprovalStore;)V
+#readAuthentication(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#storeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#removeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#storeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;
+#readAuthenticationForRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#removeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#removeAccessTokenUsingRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#getAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#findTokensByClientIdAndUserName(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
+#setTokenEnhancer(Lorg/springframework/security/oauth2/provider/token/store/JwtAccessTokenConverter;)V

+###org/springframework/security/oauth2/provider/token/store/JdbcTokenStore
@2.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#setAuthenticationKeyGenerator(Lorg/springframework/security/oauth2/provider/token/AuthenticationKeyGenerator;)V
+#getAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#storeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#removeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#removeAccessToken(Ljava/lang/String;)V
+#readAuthentication(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#storeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;
+#removeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#removeRefreshToken(Ljava/lang/String;)V
+#readAuthenticationForRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthenticationForRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#removeAccessTokenUsingRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#removeAccessTokenUsingRefreshToken(Ljava/lang/String;)V
+#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
+#findTokensByClientIdAndUserName(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#setInsertAccessTokenSql(Ljava/lang/String;)V
+#setSelectAccessTokenSql(Ljava/lang/String;)V
+#setDeleteAccessTokenSql(Ljava/lang/String;)V
+#setInsertRefreshTokenSql(Ljava/lang/String;)V
+#setSelectRefreshTokenSql(Ljava/lang/String;)V
+#setDeleteRefreshTokenSql(Ljava/lang/String;)V
+#setSelectAccessTokenAuthenticationSql(Ljava/lang/String;)V
+#setSelectRefreshTokenAuthenticationSql(Ljava/lang/String;)V
+#setSelectAccessTokenFromAuthenticationSql(Ljava/lang/String;)V
+#setDeleteAccessTokenFromRefreshTokenSql(Ljava/lang/String;)V
+#setSelectAccessTokensFromUserNameAndClientIdSql(Ljava/lang/String;)V
+#setSelectAccessTokensFromClientIdSql(Ljava/lang/String;)V
@2.0.4.RELEASE
+#findTokensByUserName(Ljava/lang/String;)Ljava/util/Collection;
+#setSelectAccessTokensFromUserNameSql(Ljava/lang/String;)V

+###org/springframework/security/oauth2/provider/token/TokenEnhancerChain
@1.0.0.RELEASE
+#<init>()V
+#setTokenEnhancers(Ljava/util/List;)V
+#enhance(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/provider/token/DefaultUserAuthenticationConverter
@2.0.0.RELEASE
+#<init>()V
+#setDefaultAuthorities([Ljava/lang/String;)V
+#convertUserAuthentication(Lorg/springframework/security/core/Authentication;)Ljava/util/Map;
+#extractAuthentication(Ljava/util/Map;)Lorg/springframework/security/core/Authentication;
@2.0.6.RELEASE
+#setUserDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)V
@2.5.0.RELEASE
+#setUserClaimName(Ljava/lang/String;)V

+###org/springframework/security/oauth2/provider/token/ResourceServerTokenServices
@1.0.0.RELEASE
+#loadAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/provider/token/DefaultAccessTokenConverter
@2.0.0.RELEASE
+#<init>()V
+#setUserTokenConverter(Lorg/springframework/security/oauth2/provider/token/UserAuthenticationConverter;)V
+#convertAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Ljava/util/Map;
+#extractAccessToken(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#extractAuthentication(Ljava/util/Map;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
@2.0.7.RELEASE
+#setIncludeGrantType(Z)V
@2.3.0.RELEASE
+#setScopeAttribute(Ljava/lang/String;)V
+#setClientIdAttribute(Ljava/lang/String;)V

+###org/springframework/security/oauth2/provider/token/TokenEnhancer
@1.0.0.RELEASE
+#enhance(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/provider/token/RemoteTokenServices
@2.0.0.RELEASE
+#<init>()V
+#setRestTemplate(Lorg/springframework/web/client/RestOperations;)V
+#setCheckTokenEndpointUrl(Ljava/lang/String;)V
+#setClientId(Ljava/lang/String;)V
+#setClientSecret(Ljava/lang/String;)V
+#setAccessTokenConverter(Lorg/springframework/security/oauth2/provider/token/AccessTokenConverter;)V
+#loadAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
@2.0.4.RELEASE
+#setTokenName(Ljava/lang/String;)V
@2.5.0.RELEASE
+#setAdditionalParameters(Ljava/util/Map;)V

+###org/springframework/security/oauth2/provider/token/ConsumerTokenServices
@1.0.0.RELEASE
+#findTokensByUserName(Ljava/lang/String;)Ljava/util/Collection;
+#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
+#revokeToken(Ljava/lang/String;)Z
+#getClientId(Ljava/lang/String;)Ljava/lang/String;
@2.0.0.RELEASE
-#findTokensByUserName(Ljava/lang/String;)Ljava/util/Collection;
-#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
-#getClientId(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/security/oauth2/provider/token/AccessTokenConverter
@2.0.0.RELEASE
+#convertAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Ljava/util/Map;
+#extractAccessToken(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#extractAuthentication(Ljava/util/Map;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;

+###org/springframework/security/oauth2/provider/token/DefaultTokenServices
@1.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#createAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#refreshAccessToken(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#getAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#loadAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#getClientId(Ljava/lang/String;)Ljava/lang/String;
+#findTokensByUserName(Ljava/lang/String;)Ljava/util/Collection;
+#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
+#revokeToken(Ljava/lang/String;)Z
+#setTokenEnhancer(Lorg/springframework/security/oauth2/provider/token/TokenEnhancer;)V
+#setRefreshTokenValiditySeconds(I)V
+#setAccessTokenValiditySeconds(I)V
+#setSupportRefreshToken(Z)V
+#setReuseRefreshToken(Z)V
+#setTokenStore(Lorg/springframework/security/oauth2/provider/token/TokenStore;)V
+#setClientDetailsService(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
@2.0.0.RELEASE
+#refreshAccessToken(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
-#refreshAccessToken(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
-#findTokensByUserName(Ljava/lang/String;)Ljava/util/Collection;
-#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
@2.0.7.RELEASE
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V

+###org/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices
@1.0.0.RELEASE
+#createAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#refreshAccessToken(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#getAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
@2.0.0.RELEASE
+#refreshAccessToken(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
-#refreshAccessToken(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/provider/token/TokenStore
@1.0.0.RELEASE
+#readAuthentication(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#storeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#removeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#storeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;
+#readAuthenticationForRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#removeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#removeAccessTokenUsingRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#getAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#findTokensByUserName(Ljava/lang/String;)Ljava/util/Collection;
+#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
@2.0.0.RELEASE
+#findTokensByClientIdAndUserName(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
-#findTokensByUserName(Ljava/lang/String;)Ljava/util/Collection;

+###org/springframework/security/oauth2/provider/token/DefaultAuthenticationKeyGenerator
@1.0.0.RELEASE
+#<init>()V
+#extractKey(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Ljava/lang/String;

+###org/springframework/security/oauth2/provider/OAuth2RequestValidator
@2.0.0.RELEASE
+#validateScope(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#validateScope(Lorg/springframework/security/oauth2/provider/TokenRequest;Lorg/springframework/security/oauth2/provider/ClientDetails;)V

+###org/springframework/security/oauth2/provider/expression/OAuth2SecurityExpressionMethods
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/core/Authentication;Z)V
+#sufficientScope(Z)Z
+#clientHasRole(Ljava/lang/String;)Z
+#clientHasAnyRole([Ljava/lang/String;)Z
+#hasScope(Ljava/lang/String;)Z
+#hasAnyScope([Ljava/lang/String;)Z
+#denyOAuthClient()Z
+#isUser()Z
+#isClient()Z
+#setThrowExceptionOnInvalidScope(Z)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/core/Authentication;)V
+#throwOnError(Z)Z
+#hasScopeMatching(Ljava/lang/String;)Z
+#hasAnyScopeMatching([Ljava/lang/String;)Z
+#isOAuth()Z
-#<init>(Lorg/springframework/security/core/Authentication;Z)V
-#sufficientScope(Z)Z
-#setThrowExceptionOnInvalidScope(Z)V

+###org/springframework/security/oauth2/provider/expression/OAuth2WebSecurityExpressionHandler
@1.0.0.RELEASE
+#<init>()V
+#setThrowExceptionOnInvalidScope(Z)V
@2.0.0.RELEASE
-#setThrowExceptionOnInvalidScope(Z)V

+###org/springframework/security/oauth2/provider/expression/OAuth2MethodSecurityExpressionHandler
@1.0.0.RELEASE
+#<init>()V
+#setThrowExceptionOnInvalidScope(Z)V
+#createEvaluationContextInternal(Lorg/springframework/security/core/Authentication;Lorg/aopalliance/intercept/MethodInvocation;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
+#createEvaluationContextInternal(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
@2.0.0.RELEASE
-#setThrowExceptionOnInvalidScope(Z)V
@2.0.1.RELEASE
-#createEvaluationContextInternal(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
@2.0.2.RELEASE
+#createEvaluationContextInternal(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
@2.0.6.RELEASE
-#createEvaluationContextInternal(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
@2.0.8.RELEASE
+#createEvaluationContextInternal(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;

+###org/springframework/security/oauth2/provider/expression/OAuth2ExpressionUtils
@1.0.0.RELEASE
+#<init>()V
+#clientHasAnyRole(Lorg/springframework/security/core/Authentication;[Ljava/lang/String;)Z
+#isOAuth(Lorg/springframework/security/core/Authentication;)Z
+#isOAuthClientAuth(Lorg/springframework/security/core/Authentication;)Z
+#isOAuthUserAuth(Lorg/springframework/security/core/Authentication;)Z
+#hasAnyScope(Lorg/springframework/security/core/Authentication;[Ljava/lang/String;)Z
@2.0.0.RELEASE
+#hasAnyScopeMatching(Lorg/springframework/security/core/Authentication;[Ljava/lang/String;)Z

+###org/springframework/security/oauth2/provider/refresh/RefreshTokenGranter
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;)V
-#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V

+###org/springframework/security/oauth2/provider/authentication/BearerTokenExtractor
@2.0.0.RELEASE
+#<init>()V
+#extract(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/Authentication;

+###org/springframework/security/oauth2/provider/authentication/OAuth2AuthenticationProcessingFilter
@1.0.0.RELEASE
+#<init>()V
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V
@2.0.0.RELEASE
+#setTokenExtractor(Lorg/springframework/security/oauth2/provider/authentication/TokenExtractor;)V
@2.0.6.RELEASE
+#setStateless(Z)V
@2.0.7.RELEASE
+#setAuthenticationEventPublisher(Lorg/springframework/security/authentication/AuthenticationEventPublisher;)V

+###org/springframework/security/oauth2/provider/authentication/OAuth2AuthenticationDetails
@1.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getTokenValue()Ljava/lang/String;
+#getRemoteAddress()Ljava/lang/String;
+#getSessionId()Ljava/lang/String;
@1.0.1.RELEASE
+#toString()Ljava/lang/String;
@2.0.4.RELEASE
+#getDecodedDetails()Ljava/lang/Object;
+#setDecodedDetails(Ljava/lang/Object;)V
@2.0.6.RELEASE
+#getTokenType()Ljava/lang/String;
@2.0.8.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/security/oauth2/provider/authentication/TokenExtractor
@2.0.0.RELEASE
+#extract(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/Authentication;

+###org/springframework/security/oauth2/provider/authentication/OAuth2AuthenticationManager
@1.0.0.RELEASE
+#<init>()V
+#setResourceId(Ljava/lang/String;)V
+#setTokenServices(Lorg/springframework/security/oauth2/provider/token/ResourceServerTokenServices;)V
+#afterPropertiesSet()V
+#authenticate(Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/core/Authentication;
@2.0.3.RELEASE
+#setClientDetailsService(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V

+###org/springframework/security/oauth2/provider/authentication/OAuth2AuthenticationDetailsSource
@1.0.0.RELEASE
+#<init>()V
+#buildDetails(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/oauth2/provider/authentication/OAuth2AuthenticationDetails;
+#buildDetails(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/security/oauth2/provider/error/OAuth2AuthenticationEntryPoint
@1.0.0.RELEASE
+#<init>()V
+#setRealmName(Ljava/lang/String;)V
+#setTypeName(Ljava/lang/String;)V
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/oauth2/provider/error/AbstractOAuth2SecurityExceptionHandler
@1.0.0.RELEASE
+#<init>()V
+#setExceptionTranslator(Lorg/springframework/security/oauth2/provider/error/WebResponseExceptionTranslator;)V
+#setExceptionRenderer(Lorg/springframework/security/oauth2/provider/error/OAuth2ExceptionRenderer;)V

+###org/springframework/security/oauth2/provider/error/WebResponseExceptionTranslator
@1.0.0.RELEASE
+#translate(Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;

+###org/springframework/security/oauth2/provider/error/DefaultWebResponseExceptionTranslator
@1.0.0.RELEASE
+#<init>()V
+#translate(Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;
+#setThrowableAnalyzer(Lorg/springframework/security/web/util/ThrowableAnalyzer;)V

+###org/springframework/security/oauth2/provider/error/OAuth2AccessDeniedHandler
@1.0.0.RELEASE
+#<init>()V
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V

+###org/springframework/security/oauth2/provider/error/OAuth2ExceptionRenderer
@1.0.0.RELEASE
+#handleHttpEntityResponse(Lorg/springframework/http/HttpEntity;Lorg/springframework/web/context/request/ServletWebRequest;)V

+###org/springframework/security/oauth2/provider/error/DefaultOAuth2ExceptionRenderer
@1.0.0.RELEASE
+#<init>()V
+#setMessageConverters(Ljava/util/List;)V
+#handleHttpEntityResponse(Lorg/springframework/http/HttpEntity;Lorg/springframework/web/context/request/ServletWebRequest;)V

+###org/springframework/security/oauth2/provider/vote/ScopeVoter
@1.0.0.RELEASE
+#<init>()V
+#setThrowException(Z)V
+#setScopePrefix(Ljava/lang/String;)V
+#setDenyAccess(Ljava/lang/String;)V
+#supports(Lorg/springframework/security/access/ConfigAttribute;)Z
+#supports(Ljava/lang/Class;)Z
+#vote(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;Ljava/util/Collection;)I

+###org/springframework/security/oauth2/provider/vote/ClientScopeVoter
@2.0.0.RELEASE
+#<init>()V
+#setClientDetailsService(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
+#setThrowException(Z)V
+#setClientAuthoritiesAreScopes(Z)V
+#setDenyAccess(Ljava/lang/String;)V
+#supports(Lorg/springframework/security/access/ConfigAttribute;)Z
+#supports(Ljava/lang/Class;)Z
+#vote(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;Ljava/util/Collection;)I

+###org/springframework/security/oauth2/provider/NoSuchClientException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/oauth2/provider/SecurityContextAccessor
@2.0.0.RELEASE
+#isUser()Z
+#getAuthorities()Ljava/util/Set;

+###org/springframework/security/oauth2/provider/ClientDetails
@1.0.0.RELEASE
+#getClientId()Ljava/lang/String;
+#getResourceIds()Ljava/util/Set;
+#isSecretRequired()Z
+#getClientSecret()Ljava/lang/String;
+#isScoped()Z
+#getScope()Ljava/util/Set;
+#getAuthorizedGrantTypes()Ljava/util/Set;
+#getRegisteredRedirectUri()Ljava/util/Set;
+#getAuthorities()Ljava/util/Collection;
+#getAccessTokenValiditySeconds()Ljava/lang/Integer;
+#getRefreshTokenValiditySeconds()Ljava/lang/Integer;
+#getAdditionalInformation()Ljava/util/Map;
@2.0.0.RELEASE
+#isAutoApprove(Ljava/lang/String;)Z

+###org/springframework/security/oauth2/provider/OAuth2Request
@2.0.0.RELEASE
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/util/Collection;ZLjava/util/Set;Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;)V
+#getRedirectUri()Ljava/lang/String;
+#getResponseTypes()Ljava/util/Set;
+#getAuthorities()Ljava/util/Collection;
+#isApproved()Z
+#getResourceIds()Ljava/util/Set;
+#getExtensions()Ljava/util/Map;
+#createOAuth2Request(Ljava/util/Map;)Lorg/springframework/security/oauth2/provider/OAuth2Request;
+#narrowScope(Ljava/util/Set;)Lorg/springframework/security/oauth2/provider/OAuth2Request;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getRequestParameters()Ljava/util/Map;
+#getScope()Ljava/util/Set;
+#getClientId()Ljava/lang/String;
@2.0.4.RELEASE
+#getGrantType()Ljava/lang/String;
@2.0.7.RELEASE
+#refresh(Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/provider/OAuth2Request;
+#isRefresh()Z
+#getRefreshTokenRequest()Lorg/springframework/security/oauth2/provider/TokenRequest;

+###org/springframework/security/oauth2/provider/TokenRequest
@2.0.0.RELEASE
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;)V
+#getGrantType()Ljava/lang/String;
+#setGrantType(Ljava/lang/String;)V
+#setClientId(Ljava/lang/String;)V
+#setScope(Ljava/util/Collection;)V
+#setRequestParameters(Ljava/util/Map;)V
+#createOAuth2Request(Lorg/springframework/security/oauth2/provider/ClientDetails;)Lorg/springframework/security/oauth2/provider/OAuth2Request;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getRequestParameters()Ljava/util/Map;
+#getScope()Ljava/util/Set;
+#getClientId()Ljava/lang/String;

+###org/springframework/security/oauth2/provider/endpoint/WhitelabelErrorEndpoint
@2.0.0.RELEASE
+#<init>()V
+#handleError(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;

+###org/springframework/security/oauth2/provider/endpoint/CheckTokenEndpoint
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/ResourceServerTokenServices;)V
+#setAccessTokenConverter(Lorg/springframework/security/oauth2/provider/token/AccessTokenConverter;)V
+#checkToken(Ljava/lang/String;)Ljava/util/Map;
+#handleException(Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;
@2.0.6.RELEASE
+#setExceptionTranslator(Lorg/springframework/security/oauth2/provider/error/WebResponseExceptionTranslator;)V

+###org/springframework/security/oauth2/provider/endpoint/TokenEndpointAuthenticationFilter
@1.0.2.RELEASE
+#<init>(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/authentication/AuthenticationManager;Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;)V
-#<init>(Lorg/springframework/security/authentication/AuthenticationManager;)V

+###org/springframework/security/oauth2/provider/endpoint/FrameworkEndpointHandlerMapping
@1.0.0.RELEASE
+#setMappings(Ljava/util/Map;)V
+#setApprovalParameter(Ljava/lang/String;)V
+#<init>()V
@2.0.0.RELEASE
+#getPath(Ljava/lang/String;)Ljava/lang/String;
+#getPaths()Ljava/util/Set;
@2.0.3.RELEASE
+#setPrefix(Ljava/lang/String;)V
+#getServletPath(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/security/oauth2/provider/endpoint/FrameworkEndpoint
@1.0.0.RELEASE

+###org/springframework/security/oauth2/provider/endpoint/DefaultRedirectResolver
@1.0.0.RELEASE
+#<init>()V
+#setRedirectGrantTypes(Ljava/util/Collection;)V
+#resolveRedirect(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/ClientDetails;)Ljava/lang/String;
@2.0.0.RELEASE
+#setMatchSubdomains(Z)V
@2.0.10.RELEASE
+#setMatchPorts(Z)V

+###org/springframework/security/oauth2/provider/endpoint/WhitelabelApprovalEndpoint
@1.0.0.RELEASE
+#<init>()V
+#getAccessConfirmation(Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;
+#handleError(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;
@2.0.0.RELEASE
+#getAccessConfirmation(Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;
-#getAccessConfirmation(Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;
-#handleError(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;

+###org/springframework/security/oauth2/provider/endpoint/RedirectResolver
@1.0.0.RELEASE
+#resolveRedirect(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/ClientDetails;)Ljava/lang/String;

+###org/springframework/security/oauth2/provider/endpoint/AuthorizationEndpoint
@1.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#setSessionAttributeStore(Lorg/springframework/web/bind/support/SessionAttributeStore;)V
+#setErrorPage(Ljava/lang/String;)V
+#authorize(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Lorg/springframework/web/bind/support/SessionStatus;Ljava/security/Principal;)Lorg/springframework/web/servlet/ModelAndView;
+#approveOrDeny(Ljava/util/Map;Ljava/util/Map;Lorg/springframework/web/bind/support/SessionStatus;Ljava/security/Principal;)Lorg/springframework/web/servlet/View;
+#setUserApprovalPage(Ljava/lang/String;)V
+#setAuthorizationCodeServices(Lorg/springframework/security/oauth2/provider/code/AuthorizationCodeServices;)V
+#setRedirectResolver(Lorg/springframework/security/oauth2/provider/endpoint/RedirectResolver;)V
+#setUserApprovalHandler(Lorg/springframework/security/oauth2/provider/approval/UserApprovalHandler;)V
+#handleNoSuchClientException(Ljava/lang/Exception;Lorg/springframework/web/context/request/ServletWebRequest;)Lorg/springframework/web/servlet/ModelAndView;
+#handleOAuth2Exception(Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;Lorg/springframework/web/context/request/ServletWebRequest;)Lorg/springframework/web/servlet/ModelAndView;
+#handleHttpSessionRequiredException(Lorg/springframework/web/HttpSessionRequiredException;Lorg/springframework/web/context/request/ServletWebRequest;)Lorg/springframework/web/servlet/ModelAndView;
@1.0.1.RELEASE
+#handleClientRegistrationException(Ljava/lang/Exception;Lorg/springframework/web/context/request/ServletWebRequest;)Lorg/springframework/web/servlet/ModelAndView;
-#handleNoSuchClientException(Ljava/lang/Exception;Lorg/springframework/web/context/request/ServletWebRequest;)Lorg/springframework/web/servlet/ModelAndView;
@2.0.0.RELEASE
+#authorize(Ljava/util/Map;Ljava/util/Map;Lorg/springframework/web/bind/support/SessionStatus;Ljava/security/Principal;)Lorg/springframework/web/servlet/ModelAndView;
+#setOAuth2RequestValidator(Lorg/springframework/security/oauth2/provider/OAuth2RequestValidator;)V
+#setImplicitGrantService(Lorg/springframework/security/oauth2/provider/implicit/ImplicitGrantService;)V
-#afterPropertiesSet()V
-#authorize(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Lorg/springframework/web/bind/support/SessionStatus;Ljava/security/Principal;)Lorg/springframework/web/servlet/ModelAndView;

+###org/springframework/security/oauth2/provider/endpoint/AbstractEndpoint
@1.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#setProviderExceptionHandler(Lorg/springframework/security/oauth2/provider/error/WebResponseExceptionTranslator;)V
+#setTokenGranter(Lorg/springframework/security/oauth2/provider/TokenGranter;)V
+#setAuthorizationRequestManager(Lorg/springframework/security/oauth2/provider/AuthorizationRequestManager;)V
+#setClientDetailsService(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
@2.0.0.RELEASE
+#setOAuth2RequestFactory(Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;)V
-#setAuthorizationRequestManager(Lorg/springframework/security/oauth2/provider/AuthorizationRequestManager;)V

+###org/springframework/security/oauth2/provider/endpoint/TokenKeyEndpoint
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/store/JwtAccessTokenConverter;)V
+#getKey(Ljava/security/Principal;)Ljava/util/Map;

+###org/springframework/security/oauth2/provider/endpoint/TokenEndpoint
@1.0.0.RELEASE
+#<init>()V
+#getAccessToken(Ljava/security/Principal;Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#handleNoSuchClientException(Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;
+#handleException(Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;
@1.0.1.RELEASE
+#handleClientRegistrationException(Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;
-#handleNoSuchClientException(Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;
@2.0.0.RELEASE
+#getAccessToken(Ljava/security/Principal;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#setOAuth2RequestValidator(Lorg/springframework/security/oauth2/provider/OAuth2RequestValidator;)V
-#getAccessToken(Ljava/security/Principal;Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
@2.0.6.RELEASE
+#getAccessToken(Ljava/security/Principal;Ljava/util/Map;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/ResponseEntity;
+#handleException(Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;)Lorg/springframework/http/ResponseEntity;
+#setAllowedRequestMethods(Ljava/util/Set;)V
-#getAccessToken(Ljava/security/Principal;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
@2.0.7.RELEASE
+#getAccessToken(Ljava/security/Principal;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#postAccessToken(Ljava/security/Principal;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#handleHttpRequestMethodNotSupportedException(Lorg/springframework/web/HttpRequestMethodNotSupportedException;)V
-#getAccessToken(Ljava/security/Principal;Ljava/util/Map;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/ResponseEntity;
@2.0.8.RELEASE
+#handleHttpRequestMethodNotSupportedException(Lorg/springframework/web/HttpRequestMethodNotSupportedException;)Lorg/springframework/http/ResponseEntity;
-#handleHttpRequestMethodNotSupportedException(Lorg/springframework/web/HttpRequestMethodNotSupportedException;)V

+###org/springframework/security/oauth2/provider/endpoint/ExactMatchRedirectResolver
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/provider/DefaultSecurityContextAccessor
@2.0.0.RELEASE
+#<init>()V
+#isUser()Z
+#getAuthorities()Ljava/util/Set;

+###org/springframework/security/oauth2/provider/OAuth2RequestFactory
@2.0.0.RELEASE
+#createAuthorizationRequest(Ljava/util/Map;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#createOAuth2Request(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/provider/OAuth2Request;
+#createOAuth2Request(Lorg/springframework/security/oauth2/provider/ClientDetails;Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/provider/OAuth2Request;
+#createTokenRequest(Ljava/util/Map;Lorg/springframework/security/oauth2/provider/ClientDetails;)Lorg/springframework/security/oauth2/provider/TokenRequest;
+#createTokenRequest(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/TokenRequest;

+###org/springframework/security/oauth2/provider/TokenGranter
@1.0.0.RELEASE
+#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
@2.0.0.RELEASE
+#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
-#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/provider/code/AuthorizationCodeServices
@1.0.0.RELEASE
+#createAuthorizationCode(Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;)Ljava/lang/String;
+#consumeAuthorizationCode(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;
@2.0.0.RELEASE
+#createAuthorizationCode(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Ljava/lang/String;
+#consumeAuthorizationCode(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
-#createAuthorizationCode(Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;)Ljava/lang/String;
-#consumeAuthorizationCode(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;

+###org/springframework/security/oauth2/provider/code/JdbcAuthorizationCodeServices
@1.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#remove(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;
+#setSelectAuthenticationSql(Ljava/lang/String;)V
+#setInsertAuthenticationSql(Ljava/lang/String;)V
+#setDeleteAuthenticationSql(Ljava/lang/String;)V
@2.0.0.RELEASE
+#remove(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
-#remove(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;

+###org/springframework/security/oauth2/provider/code/AuthorizationCodeTokenGranter
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/code/AuthorizationCodeServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/code/AuthorizationCodeServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;)V
-#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/code/AuthorizationCodeServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V

+###org/springframework/security/oauth2/provider/code/RandomValueAuthorizationCodeServices
@1.0.0.RELEASE
+#<init>()V
+#createAuthorizationCode(Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;)Ljava/lang/String;
+#consumeAuthorizationCode(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;
@2.0.0.RELEASE
+#createAuthorizationCode(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Ljava/lang/String;
+#consumeAuthorizationCode(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
-#createAuthorizationCode(Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;)Ljava/lang/String;
-#consumeAuthorizationCode(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;

+###org/springframework/security/oauth2/provider/code/InMemoryAuthorizationCodeServices
@1.0.0.RELEASE
+#<init>()V
+#remove(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;
@2.0.0.RELEASE
+#remove(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
-#remove(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/code/AuthorizationRequestHolder;

+###org/springframework/security/oauth2/provider/ClientAlreadyExistsException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/oauth2/provider/ClientDetailsService
@1.0.0.RELEASE
+#loadClientByClientId(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/ClientDetails;

+###org/springframework/security/oauth2/provider/password/ResourceOwnerPasswordTokenGranter
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/authentication/AuthenticationManager;Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/authentication/AuthenticationManager;Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;)V
-#<init>(Lorg/springframework/security/authentication/AuthenticationManager;Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V

+###org/springframework/security/oauth2/provider/implicit/InMemoryImplicitGrantService
@2.0.0.RELEASE
+#<init>()V
+#store(Lorg/springframework/security/oauth2/provider/OAuth2Request;Lorg/springframework/security/oauth2/provider/TokenRequest;)V
+#remove(Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/provider/OAuth2Request;

+###org/springframework/security/oauth2/provider/implicit/ImplicitGrantService
@2.0.0.RELEASE
+#store(Lorg/springframework/security/oauth2/provider/OAuth2Request;Lorg/springframework/security/oauth2/provider/TokenRequest;)V
+#remove(Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/provider/OAuth2Request;

+###org/springframework/security/oauth2/provider/implicit/ImplicitTokenRequest
@2.0.2.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/TokenRequest;Lorg/springframework/security/oauth2/provider/OAuth2Request;)V
+#getOAuth2Request()Lorg/springframework/security/oauth2/provider/OAuth2Request;
@2.0.6.RELEASE
+#getRequestParameters()Ljava/util/Map;
+#getClientId()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#getScope()Ljava/util/Set;
+#hashCode()I
@2.0.8.RELEASE
-#getRequestParameters()Ljava/util/Map;
-#getClientId()Ljava/lang/String;
-#equals(Ljava/lang/Object;)Z
-#getScope()Ljava/util/Set;
-#hashCode()I

+###org/springframework/security/oauth2/provider/implicit/ImplicitTokenGranter
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;)V
+#setImplicitGrantService(Lorg/springframework/security/oauth2/provider/implicit/ImplicitGrantService;)V
-#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V

+###org/springframework/security/oauth2/provider/client/InMemoryClientDetailsService
@2.0.0.RELEASE
+#<init>()V
+#loadClientByClientId(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/ClientDetails;
+#setClientDetailsStore(Ljava/util/Map;)V

+###org/springframework/security/oauth2/provider/client/Jackson2ArrayOrStringDeserializer
@2.0.0.RELEASE
+#<init>()V
+#getValueType()Lcom/fasterxml/jackson/databind/JavaType;
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/util/Set;
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/springframework/security/oauth2/provider/client/ClientCredentialsTokenEndpointFilter
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#afterPropertiesSet()V
+#attemptAuthentication(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
@2.0.0.RELEASE
+#setAllowOnlyPost(Z)V

+###org/springframework/security/oauth2/provider/client/BaseClientDetails
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#setAutoApproveScopes(Ljava/util/Collection;)V
+#isAutoApprove(Ljava/lang/String;)Z
+#isSecretRequired()Z
+#getClientSecret()Ljava/lang/String;
+#setClientSecret(Ljava/lang/String;)V
+#isScoped()Z
+#getScope()Ljava/util/Set;
+#setScope(Ljava/util/Collection;)V
+#getResourceIds()Ljava/util/Set;
+#setResourceIds(Ljava/util/Collection;)V
+#getAuthorizedGrantTypes()Ljava/util/Set;
+#setAuthorizedGrantTypes(Ljava/util/Collection;)V
+#getRegisteredRedirectUri()Ljava/util/Set;
+#setRegisteredRedirectUri(Ljava/util/Set;)V
+#getAuthorities()Ljava/util/Collection;
+#setAuthorities(Ljava/util/Collection;)V
+#getAccessTokenValiditySeconds()Ljava/lang/Integer;
+#setAccessTokenValiditySeconds(Ljava/lang/Integer;)V
+#getRefreshTokenValiditySeconds()Ljava/lang/Integer;
+#setRefreshTokenValiditySeconds(Ljava/lang/Integer;)V
+#setAdditionalInformation(Ljava/util/Map;)V
+#getAdditionalInformation()Ljava/util/Map;
+#addAdditionalInformation(Ljava/lang/String;Ljava/lang/Object;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@2.0.3.RELEASE
+#getAutoApproveScopes()Ljava/util/Set;

+###org/springframework/security/oauth2/provider/client/ClientCredentialsTokenEndpointFilter$ClientCredentialsRequestMatcher
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/oauth2/provider/client/JacksonArrayOrStringDeserializer
@2.0.0.RELEASE
+#<init>()V
+#getValueType()Lorg/codehaus/jackson/type/JavaType;
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/util/Set;
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
@2.4.0.RELEASE
-###org/springframework/security/oauth2/provider/client/JacksonArrayOrStringDeserializer

+###org/springframework/security/oauth2/provider/client/ClientDetailsUserDetailsService
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
+#setPasswordEncoder(Lorg/springframework/security/crypto/password/PasswordEncoder;)V
+#loadUserByUsername(Ljava/lang/String;)Lorg/springframework/security/core/userdetails/UserDetails;

+###org/springframework/security/oauth2/provider/client/JdbcClientDetailsService
@2.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#setPasswordEncoder(Lorg/springframework/security/crypto/password/PasswordEncoder;)V
+#loadClientByClientId(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/ClientDetails;
+#addClientDetails(Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#updateClientDetails(Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#updateClientSecret(Ljava/lang/String;Ljava/lang/String;)V
+#removeClientDetails(Ljava/lang/String;)V
+#listClientDetails()Ljava/util/List;
+#setSelectClientDetailsSql(Ljava/lang/String;)V
+#setDeleteClientDetailsSql(Ljava/lang/String;)V
+#setUpdateClientDetailsSql(Ljava/lang/String;)V
+#setUpdateClientSecretSql(Ljava/lang/String;)V
+#setInsertClientDetailsSql(Ljava/lang/String;)V
+#setFindClientDetailsSql(Ljava/lang/String;)V
+#setListFactory(Lorg/springframework/security/oauth2/common/util/JdbcListFactory;)V
+#setRowMapper(Lorg/springframework/jdbc/core/RowMapper;)V

+###org/springframework/security/oauth2/provider/client/ClientCredentialsTokenGranter
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
+#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;)V
+#setAllowRefresh(Z)V
+#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/TokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
-#<init>(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
-#grant(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/provider/approval/InMemoryApprovalStore
@2.0.0.RELEASE
+#<init>()V
+#addApprovals(Ljava/util/Collection;)Z
+#revokeApprovals(Ljava/util/Collection;)Z
+#getApprovals(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#clear()V

+###org/springframework/security/oauth2/provider/approval/ApprovalStoreUserApprovalHandler
@2.0.0.RELEASE
+#<init>()V
+#setClientDetailsService(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
+#setScopePrefix(Ljava/lang/String;)V
+#setApprovalStore(Lorg/springframework/security/oauth2/provider/approval/ApprovalStore;)V
+#setRequestFactory(Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;)V
+#setApprovalExpiryInSeconds(I)V
+#afterPropertiesSet()V
+#isApproved(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Z
+#checkForPreApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#updateAfterApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#getUserApprovalRequest(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Ljava/util/Map;

+###org/springframework/security/oauth2/provider/approval/TokenStoreUserApprovalHandler
@2.0.0.RELEASE
+#<init>()V
+#setClientDetailsService(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
+#setApprovalParameter(Ljava/lang/String;)V
+#setTokenStore(Lorg/springframework/security/oauth2/provider/token/TokenStore;)V
+#setRequestFactory(Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;)V
+#afterPropertiesSet()V
+#isApproved(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Z
+#checkForPreApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#updateAfterApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#getUserApprovalRequest(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Ljava/util/Map;

+###org/springframework/security/oauth2/provider/approval/Approval$ApprovalStatus
@2.0.0.RELEASE
+#values()[Lorg/springframework/security/oauth2/provider/approval/Approval$ApprovalStatus;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/approval/Approval$ApprovalStatus;

+###org/springframework/security/oauth2/provider/approval/JdbcApprovalStore
@2.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#setHandleRevocationsAsExpiry(Z)V
+#setAddApprovalStatement(Ljava/lang/String;)V
+#setFindApprovalStatement(Ljava/lang/String;)V
+#setDeleteApprovalStatment(Ljava/lang/String;)V
+#setExpireApprovalStatement(Ljava/lang/String;)V
+#addApprovals(Ljava/util/Collection;)Z
+#revokeApprovals(Ljava/util/Collection;)Z
+#purgeExpiredApprovals()Z
+#getApprovals(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
+#getApprovals(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
@2.0.4.RELEASE
+#setRefreshApprovalStatement(Ljava/lang/String;)V

+###org/springframework/security/oauth2/provider/approval/DefaultUserApprovalHandler
@1.0.0.RELEASE
+#<init>()V
+#setApprovalParameter(Ljava/lang/String;)V
+#updateBeforeApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#isApproved(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Z
@2.0.0.RELEASE
+#checkForPreApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#updateAfterApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#getUserApprovalRequest(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Ljava/util/Map;
-#updateBeforeApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;

+###org/springframework/security/oauth2/provider/approval/TokenApprovalStore
@2.0.0.RELEASE
+#<init>()V
+#setTokenStore(Lorg/springframework/security/oauth2/provider/token/TokenStore;)V
+#addApprovals(Ljava/util/Collection;)Z
+#revokeApprovals(Ljava/util/Collection;)Z
+#getApprovals(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;

+###org/springframework/security/oauth2/provider/approval/ApprovalStore
@2.0.0.RELEASE
+#addApprovals(Ljava/util/Collection;)Z
+#revokeApprovals(Ljava/util/Collection;)Z
+#getApprovals(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;

+###org/springframework/security/oauth2/provider/approval/UserApprovalHandler
@1.0.0.RELEASE
+#updateBeforeApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#isApproved(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Z
@2.0.0.RELEASE
+#checkForPreApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#updateAfterApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#getUserApprovalRequest(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Ljava/util/Map;
-#updateBeforeApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;

+###org/springframework/security/oauth2/provider/approval/Approval
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILorg/springframework/security/oauth2/provider/approval/Approval$ApprovalStatus;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Lorg/springframework/security/oauth2/provider/approval/Approval$ApprovalStatus;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Lorg/springframework/security/oauth2/provider/approval/Approval$ApprovalStatus;Ljava/util/Date;)V
+#getUserId()Ljava/lang/String;
+#setUserId(Ljava/lang/String;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getScope()Ljava/lang/String;
+#setScope(Ljava/lang/String;)V
+#getExpiresAt()Ljava/util/Date;
+#setExpiresAt(Ljava/util/Date;)V
+#getLastUpdatedAt()Ljava/util/Date;
+#setLastUpdatedAt(Ljava/util/Date;)V
+#isCurrentlyActive()Z
+#isApproved()Z
+#setStatus(Lorg/springframework/security/oauth2/provider/approval/Approval$ApprovalStatus;)V
+#getStatus()Lorg/springframework/security/oauth2/provider/approval/Approval$ApprovalStatus;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/security/oauth2/config/annotation/web/configuration/EnableOAuth2Client
@2.0.0.RELEASE

+###org/springframework/security/oauth2/config/annotation/web/configuration/AuthorizationServerEndpointsConfiguration
@2.0.0.RELEASE
+#<init>()V
+#init()V
+#authorizationEndpoint()Lorg/springframework/security/oauth2/provider/endpoint/AuthorizationEndpoint;
+#tokenEndpoint()Lorg/springframework/security/oauth2/provider/endpoint/TokenEndpoint;
+#checkTokenEndpoint()Lorg/springframework/security/oauth2/provider/endpoint/CheckTokenEndpoint;
+#whitelabelApprovalEndpoint()Lorg/springframework/security/oauth2/provider/endpoint/WhitelabelApprovalEndpoint;
+#whitelabelErrorEndpoint()Lorg/springframework/security/oauth2/provider/endpoint/WhitelabelErrorEndpoint;
+#oauth2EndpointHandlerMapping()Lorg/springframework/security/oauth2/provider/endpoint/FrameworkEndpointHandlerMapping;
+#consumerTokenServices()Lorg/springframework/security/oauth2/provider/token/ConsumerTokenServices;
+#tokenStore()Lorg/springframework/security/oauth2/provider/token/TokenStore;
@2.0.4.RELEASE
+#defaultAuthorizationServerTokenServices()Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;
@2.0.5.RELEASE
+#getEndpointsConfigurer()Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
-#tokenStore()Lorg/springframework/security/oauth2/provider/token/TokenStore;
@2.1.0.RELEASE
+#consumerTokenServices()Lorg/springframework/beans/factory/FactoryBean;
+#defaultAuthorizationServerTokenServices()Lorg/springframework/beans/factory/FactoryBean;
-#consumerTokenServices()Lorg/springframework/security/oauth2/provider/token/ConsumerTokenServices;
-#defaultAuthorizationServerTokenServices()Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;

+###org/springframework/security/oauth2/config/annotation/web/configuration/AuthorizationServerEndpointsConfiguration$TokenKeyEndpointRegistrar
@2.0.0.RELEASE
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#postProcessBeanDefinitionRegistry(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V

+###org/springframework/security/oauth2/config/annotation/web/configuration/ResourceServerConfigurerAdapter
@2.0.0.RELEASE
+#<init>()V
+#configure(Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;)V
+#configure(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;)V

+###org/springframework/security/oauth2/config/annotation/web/configuration/OAuth2ClientConfiguration
@2.0.0.RELEASE
+#<init>()V
+#oauth2ClientContextFilter()Lorg/springframework/security/oauth2/client/filter/OAuth2ClientContextFilter;

+###org/springframework/security/oauth2/config/annotation/web/configuration/ResourceServerConfigurer
@2.0.0.RELEASE
+#configure(Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;)V
+#configure(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;)V

+###org/springframework/security/oauth2/config/annotation/web/configuration/EnableResourceServer
@2.0.0.RELEASE

+###org/springframework/security/oauth2/config/annotation/web/configuration/AuthorizationServerConfigurer
@2.0.0.RELEASE
+#configure(Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;)V
+#configure(Lorg/springframework/security/oauth2/config/annotation/configurers/ClientDetailsServiceConfigurer;)V
+#configure(Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;)V

+###org/springframework/security/oauth2/config/annotation/web/configuration/ResourceServerConfiguration
@2.0.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
+#setConfigurers(Ljava/util/List;)V

+###org/springframework/security/oauth2/config/annotation/web/configuration/AuthorizationServerSecurityConfiguration
@2.0.0.RELEASE
+#<init>()V
+#configure(Lorg/springframework/security/oauth2/config/annotation/configurers/ClientDetailsServiceConfigurer;)V

+###org/springframework/security/oauth2/config/annotation/web/configuration/AuthorizationServerConfigurerAdapter
@2.0.0.RELEASE
+#<init>()V
+#configure(Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;)V
+#configure(Lorg/springframework/security/oauth2/config/annotation/configurers/ClientDetailsServiceConfigurer;)V
+#configure(Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;)V

+###org/springframework/security/oauth2/config/annotation/web/configuration/EnableAuthorizationServer
@2.0.0.RELEASE

+###org/springframework/security/oauth2/config/annotation/web/configuration/OAuth2ClientConfiguration$OAuth2ClientContextConfiguration
@2.0.3.RELEASE
+#oauth2ClientContext()Lorg/springframework/security/oauth2/client/OAuth2ClientContext;

+###org/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer
@2.0.0.RELEASE
+#<init>()V
+#allowFormAuthenticationForClients()Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;
+#realm(Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;
+#authenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;
+#tokenKeyAccess(Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;
+#checkTokenAccess(Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;
+#getTokenKeyAccess()Ljava/lang/String;
+#getCheckTokenAccess()Ljava/lang/String;
+#init(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;)V
+#configure(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@2.0.5.RELEASE
+#passwordEncoder(Lorg/springframework/security/crypto/password/PasswordEncoder;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;
+#accessDeniedHandler(Lorg/springframework/security/web/access/AccessDeniedHandler;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;
@2.0.8.RELEASE
+#sslOnly()Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;
+#addTokenEndpointAuthenticationFilter(Ljavax/servlet/Filter;)V
+#tokenEndpointAuthenticationFilters(Ljava/util/List;)V
@2.5.0.RELEASE
+#addAuthenticationProvider(Lorg/springframework/security/authentication/AuthenticationProvider;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;
+#authenticationEventPublisher(Lorg/springframework/security/authentication/AuthenticationEventPublisher;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;

+###org/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer
@2.0.0.RELEASE
+#<init>()V
+#getTokenStore()Lorg/springframework/security/oauth2/provider/token/TokenStore;
+#tokenStore(Lorg/springframework/security/oauth2/provider/token/TokenStore;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;
+#authenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;
+#tokenServices(Lorg/springframework/security/oauth2/provider/token/ResourceServerTokenServices;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;)V
+#resourceId(Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@2.0.4.RELEASE
+#tokenExtractor(Lorg/springframework/security/oauth2/provider/authentication/TokenExtractor;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;
@2.0.5.RELEASE
+#authenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;
+#accessDeniedHandler(Lorg/springframework/security/web/access/AccessDeniedHandler;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;
+#expressionHandler(Lorg/springframework/security/access/expression/SecurityExpressionHandler;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;
@2.0.6.RELEASE
+#stateless(Z)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;
+#getAccessDeniedHandler()Lorg/springframework/security/web/access/AccessDeniedHandler;
@2.0.7.RELEASE
+#eventPublisher(Lorg/springframework/security/authentication/AuthenticationEventPublisher;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;
@2.3.0.RELEASE
+#authenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;

+###org/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer
@2.0.0.RELEASE
+#<init>()V
+#getTokenServices()Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;
+#getTokenStore()Lorg/springframework/security/oauth2/provider/token/TokenStore;
+#getTokenEnhancer()Lorg/springframework/security/oauth2/provider/token/TokenEnhancer;
+#getAccessTokenConverter()Lorg/springframework/security/oauth2/provider/token/AccessTokenConverter;
+#getApprovalStore()Lorg/springframework/security/oauth2/provider/approval/ApprovalStore;
+#getClientDetailsService()Lorg/springframework/security/oauth2/provider/ClientDetailsService;
+#getOAuth2RequestFactory()Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;
+#getOAuth2RequestValidator()Lorg/springframework/security/oauth2/provider/OAuth2RequestValidator;
+#getUserApprovalHandler()Lorg/springframework/security/oauth2/provider/approval/UserApprovalHandler;
+#tokenStore(Lorg/springframework/security/oauth2/provider/token/TokenStore;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#tokenEnhancer(Lorg/springframework/security/oauth2/provider/token/TokenEnhancer;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#accessTokenConverter(Lorg/springframework/security/oauth2/provider/token/AccessTokenConverter;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#tokenServices(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#userApprovalHandler(Lorg/springframework/security/oauth2/provider/approval/UserApprovalHandler;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#approvalStore(Lorg/springframework/security/oauth2/provider/approval/ApprovalStore;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#approvalStoreDisabled()Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#pathMapping(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#authenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#tokenGranter(Lorg/springframework/security/oauth2/provider/TokenGranter;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#clientDetailsService(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#requestFactory(Lorg/springframework/security/oauth2/provider/OAuth2RequestFactory;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#requestValidator(Lorg/springframework/security/oauth2/provider/OAuth2RequestValidator;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#authorizationCodeServices(Lorg/springframework/security/oauth2/provider/code/AuthorizationCodeServices;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#getConsumerTokenServices()Lorg/springframework/security/oauth2/provider/token/ConsumerTokenServices;
+#getResourceServerTokenServices()Lorg/springframework/security/oauth2/provider/token/ResourceServerTokenServices;
+#getImplicitGrantService()Lorg/springframework/security/oauth2/provider/implicit/ImplicitGrantService;
+#getAuthorizationCodeServices()Lorg/springframework/security/oauth2/provider/code/AuthorizationCodeServices;
+#getRequestValidator()Lorg/springframework/security/oauth2/provider/OAuth2RequestValidator;
+#getTokenGranter()Lorg/springframework/security/oauth2/provider/TokenGranter;
+#getFrameworkEndpointHandlerMapping()Lorg/springframework/security/oauth2/provider/endpoint/FrameworkEndpointHandlerMapping;
@2.0.2.RELEASE
+#addInterceptor(Lorg/springframework/web/servlet/HandlerInterceptor;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#addInterceptor(Lorg/springframework/web/context/request/WebRequestInterceptor;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
-#getImplicitGrantService()Lorg/springframework/security/oauth2/provider/implicit/ImplicitGrantService;
@2.0.3.RELEASE
+#prefix(Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
@2.0.4.RELEASE
+#isTokenServicesOverride()Z
+#getDefaultAuthorizationServerTokenServices()Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;
@2.0.5.RELEASE
+#reuseRefreshTokens()Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#setClientDetailsService(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
-#clientDetailsService(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
@2.0.6.RELEASE
+#reuseRefreshTokens(Z)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#exceptionTranslator(Lorg/springframework/security/oauth2/provider/error/WebResponseExceptionTranslator;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#allowedTokenEndpointRequestMethods([Lorg/springframework/http/HttpMethod;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#getAllowedTokenEndpointRequestMethods()Ljava/util/Set;
+#getExceptionTranslator()Lorg/springframework/security/oauth2/provider/error/WebResponseExceptionTranslator;
-#reuseRefreshTokens()Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
@2.0.7.RELEASE
+#isUserDetailsServiceOverride()Z
+#userDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
@2.3.0.RELEASE
+#redirectResolver(Lorg/springframework/security/oauth2/provider/endpoint/RedirectResolver;)Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;
+#getRedirectResolver()Lorg/springframework/security/oauth2/provider/endpoint/RedirectResolver;

+###org/springframework/security/oauth2/config/annotation/configuration/ClientDetailsServiceConfiguration
@2.0.0.RELEASE
+#<init>()V
+#clientDetailsServiceConfigurer()Lorg/springframework/security/oauth2/config/annotation/configurers/ClientDetailsServiceConfigurer;
+#clientDetailsService()Lorg/springframework/security/oauth2/provider/ClientDetailsService;

+###org/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder
@2.0.0.RELEASE
+#<init>()V
+#inMemory()Lorg/springframework/security/oauth2/config/annotation/builders/InMemoryClientDetailsServiceBuilder;
+#jdbc()Lorg/springframework/security/oauth2/config/annotation/builders/JdbcClientDetailsServiceBuilder;
+#clients(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder;
+#withClient(Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#build()Lorg/springframework/security/oauth2/provider/ClientDetailsService;
+#build()Ljava/lang/Object;

+###org/springframework/security/oauth2/config/annotation/builders/InMemoryClientDetailsServiceBuilder
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/config/annotation/builders/JdbcClientDetailsServiceBuilder
@2.0.0.RELEASE
+#<init>()V
+#dataSource(Ljavax/sql/DataSource;)Lorg/springframework/security/oauth2/config/annotation/builders/JdbcClientDetailsServiceBuilder;
@2.0.5.RELEASE
+#passwordEncoder(Lorg/springframework/security/crypto/password/PasswordEncoder;)Lorg/springframework/security/oauth2/config/annotation/builders/JdbcClientDetailsServiceBuilder;

+###org/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder
@2.0.0.RELEASE
+#resourceIds([Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#redirectUris([Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#authorizedGrantTypes([Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#accessTokenValiditySeconds(I)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#refreshTokenValiditySeconds(I)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#secret(Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#scopes([Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#authorities([Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#autoApprove(Z)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#autoApprove([Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#and()Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder;
@2.0.1.RELEASE
+#additionalInformation(Ljava/util/Map;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;
+#additionalInformation([Ljava/lang/String;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder$ClientBuilder;

+###org/springframework/security/oauth2/config/annotation/configurers/ClientDetailsServiceConfigurer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder;)V
+#withClientDetails(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder;
+#inMemory()Lorg/springframework/security/oauth2/config/annotation/builders/InMemoryClientDetailsServiceBuilder;
+#jdbc(Ljavax/sql/DataSource;)Lorg/springframework/security/oauth2/config/annotation/builders/JdbcClientDetailsServiceBuilder;
+#init(Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder;)V
+#configure(Lorg/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V

+###org/springframework/security/oauth2/config/xml/ClientDetailsServiceBeanDefinitionParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/config/xml/RestTemplateBeanDefinitionParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/config/xml/WebExpressionHandlerBeanDefinitionParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/config/xml/ConfigUtils
@2.0.0.RELEASE
+#createSecurityMetadataSource(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;
+#findFilterChain(Lorg/springframework/beans/factory/xml/ParserContext;Ljava/lang/String;)Ljava/util/List;

+###org/springframework/security/oauth2/config/xml/ResourceServerBeanDefinitionParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/config/xml/OAuth2ClientContextFactoryBean
@2.0.0.RELEASE
+#<init>()V
+#setResource(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)V
+#setScopedContext(Lorg/springframework/security/oauth2/client/OAuth2ClientContext;)V
+#setBareContext(Lorg/springframework/security/oauth2/client/OAuth2ClientContext;)V
+#getObject()Lorg/springframework/security/oauth2/client/OAuth2ClientContext;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;

+###org/springframework/security/oauth2/config/xml/ExpressionHandlerBeanDefinitionParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/config/xml/ClientBeanDefinitionParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/config/xml/ProviderBeanDefinitionParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/config/xml/AuthorizationServerBeanDefinitionParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/config/xml/OAuth2SecurityNamespaceHandler
@2.0.0.RELEASE
+#<init>()V
+#init()V

+###org/springframework/security/oauth2/config/xml/ResourceBeanDefinitionParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/config/xml/ResourceBeanDefinitionParser$StringListFactoryBean
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getObject()Ljava/util/List;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;

+###org/springframework/security/oauth2/common/AuthenticationScheme
@1.0.0.RELEASE
+#values()[Lorg/springframework/security/oauth2/common/AuthenticationScheme;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/AuthenticationScheme;

+###org/springframework/security/oauth2/common/DefaultThrowableAnalyzer
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/common/DefaultOAuth2RefreshToken
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/security/oauth2/common/OAuth2AccessTokenJackson1Deserializer
@1.0.1.RELEASE
+#<init>()V
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
@2.4.0.RELEASE
-###org/springframework/security/oauth2/common/OAuth2AccessTokenJackson1Deserializer

+###org/springframework/security/oauth2/common/exceptions/OAuth2ExceptionJackson1Deserializer
@1.0.1.RELEASE
+#<init>()V
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
@2.4.0.RELEASE
-###org/springframework/security/oauth2/common/exceptions/OAuth2ExceptionJackson1Deserializer

+###org/springframework/security/oauth2/common/exceptions/UnsupportedResponseTypeException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/InvalidTokenException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getHttpErrorCode()I
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/UnsupportedGrantTypeException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/UserDeniedAuthorizationException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/InsufficientScopeException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#<init>(Ljava/lang/String;)V
+#getHttpErrorCode()I
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/UnauthorizedUserException
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getHttpErrorCode()I
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/InvalidRequestException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/OAuth2ExceptionJackson2Deserializer
@1.0.1.RELEASE
+#<init>()V
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/springframework/security/oauth2/common/exceptions/RedirectMismatchException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/InvalidGrantException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/OAuth2ExceptionJackson2Serializer
@1.0.1.RELEASE
+#<init>()V
+#serialize(Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V

+###org/springframework/security/oauth2/common/exceptions/ClientAuthenticationException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getHttpErrorCode()I
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/UnapprovedClientAuthenticationException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/oauth2/common/exceptions/OAuth2ExceptionJackson1Serializer
@1.0.1.RELEASE
+#<init>()V
+#serialize(Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
@2.4.0.RELEASE
-###org/springframework/security/oauth2/common/exceptions/OAuth2ExceptionJackson1Serializer

+###org/springframework/security/oauth2/common/exceptions/UnauthorizedClientException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getHttpErrorCode()I
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/BadClientCredentialsException
@1.0.0.RELEASE
+#<init>()V
+#getHttpErrorCode()I
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/InvalidClientException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getHttpErrorCode()I
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/OAuth2Exception
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#getOAuth2ErrorCode()Ljava/lang/String;
+#getHttpErrorCode()I
+#getAdditionalInformation()Ljava/util/Map;
+#addAdditionalInformation(Ljava/lang/String;Ljava/lang/String;)V
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;
+#valueOf(Ljava/util/Map;)Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;
+#toString()Ljava/lang/String;
+#getSummary()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/InvalidScopeException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#<init>(Ljava/lang/String;)V
+#getOAuth2ErrorCode()Ljava/lang/String;

+###org/springframework/security/oauth2/common/exceptions/SerializationException
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/springframework/security/oauth2/common/DefaultExpiringOAuth2RefreshToken
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Date;)V
+#getExpiration()Ljava/util/Date;

+###org/springframework/security/oauth2/common/util/JsonDateSerializer
@2.0.0.RELEASE
+#<init>()V
+#serialize(Ljava/util/Date;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
@2.4.0.RELEASE
+#serialize(Ljava/util/Date;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
-#serialize(Ljava/util/Date;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
-#serialize(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V

+###org/springframework/security/oauth2/common/util/JdbcListFactory
@1.0.0.RELEASE
+#getList(Ljava/lang/String;Ljava/util/Map;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;

+###org/springframework/security/oauth2/common/util/RandomValueStringGenerator
@1.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#generate()Ljava/lang/String;
+#setRandom(Ljava/util/Random;)V
+#setLength(I)V

+###org/springframework/security/oauth2/common/util/JsonDateDeserializer
@2.0.0.RELEASE
+#<init>()V
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/util/Date;
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
@2.4.0.RELEASE
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/util/Date;
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
-#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/util/Date;
-#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;

+###org/springframework/security/oauth2/common/util/OAuth2Utils
@1.0.0.RELEASE
+#<init>()V
+#parseParameterList(Ljava/lang/String;)Ljava/util/Set;
+#formatParameterList(Ljava/util/Collection;)Ljava/lang/String;
+#extractMap(Ljava/lang/String;)Ljava/util/Map;
@2.0.0.RELEASE
+#containsAll(Ljava/util/Set;Ljava/util/Set;)Z

+###org/springframework/security/oauth2/common/util/DefaultJdbcListFactory
@1.0.0.RELEASE
+#<init>(Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations;)V
+#getList(Ljava/lang/String;Ljava/util/Map;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;

+###org/springframework/security/oauth2/common/util/SerializationUtils
@1.0.0.RELEASE
+#<init>()V
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;
@2.4.0.RELEASE
+#getSerializationStrategy()Lorg/springframework/security/oauth2/common/util/SerializationStrategy;
+#setSerializationStrategy(Lorg/springframework/security/oauth2/common/util/SerializationStrategy;)V

+###org/springframework/security/oauth2/common/OAuth2AccessTokenJackson2Serializer
@1.0.1.RELEASE
+#<init>()V
+#serialize(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V

+###org/springframework/security/oauth2/common/OAuth2AccessTokenJackson2Deserializer
@1.0.1.RELEASE
+#<init>()V
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/springframework/security/oauth2/common/OAuth2RefreshToken
@1.0.0.RELEASE
+#getValue()Ljava/lang/String;

+###org/springframework/security/oauth2/common/DefaultOAuth2AccessToken
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#setValue(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/DefaultOAuth2AccessToken;
+#getValue()Ljava/lang/String;
+#getExpiresIn()I
+#getExpiration()Ljava/util/Date;
+#setExpiration(Ljava/util/Date;)V
+#isExpired()Z
+#getTokenType()Ljava/lang/String;
+#setTokenType(Ljava/lang/String;)V
+#getRefreshToken()Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;
+#setRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#getScope()Ljava/util/Set;
+#setScope(Ljava/util/Set;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#valueOf(Ljava/util/Map;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#getAdditionalInformation()Ljava/util/Map;
+#setAdditionalInformation(Ljava/util/Map;)V
@2.0.0.RELEASE
+#setValue(Ljava/lang/String;)V
-#setValue(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/DefaultOAuth2AccessToken;

+###org/springframework/security/oauth2/common/OAuth2AccessTokenJackson1Serializer
@1.0.1.RELEASE
+#<init>()V
+#serialize(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
@2.4.0.RELEASE
-###org/springframework/security/oauth2/common/OAuth2AccessTokenJackson1Serializer

+###org/springframework/security/oauth2/common/OAuth2AccessToken
@1.0.0.RELEASE
+#getAdditionalInformation()Ljava/util/Map;
+#getScope()Ljava/util/Set;
+#getRefreshToken()Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;
+#getTokenType()Ljava/lang/String;
+#isExpired()Z
+#getExpiration()Ljava/util/Date;
+#getExpiresIn()I
+#getValue()Ljava/lang/String;

+###org/springframework/security/oauth2/common/ExpiringOAuth2RefreshToken
@1.0.0.RELEASE
+#getExpiration()Ljava/util/Date;

+###org/springframework/security/oauth2/http/converter/jaxb/JaxbOAuth2ExceptionMessageConverter
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/http/converter/jaxb/JaxbOAuth2AccessTokenMessageConverter
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/http/converter/FormOAuth2ExceptionHttpMessageConverter
@1.0.0.RELEASE
+#<init>()V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#getSupportedMediaTypes()Ljava/util/List;
+#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;
+#write(Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
+#write(Ljava/lang/Object;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
+#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;

+###org/springframework/security/oauth2/http/converter/FormOAuth2AccessTokenMessageConverter
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/client/test/OAuth2ContextSetup
@1.0.0.RELEASE
+#withEnvironment(Lorg/springframework/security/oauth2/client/test/RestTemplateHolder;Lorg/springframework/core/env/Environment;)Lorg/springframework/security/oauth2/client/test/OAuth2ContextSetup;
+#withTestAccounts(Lorg/springframework/security/oauth2/client/test/RestTemplateHolder;Lorg/springframework/security/oauth2/client/test/TestAccounts;)Lorg/springframework/security/oauth2/client/test/OAuth2ContextSetup;
+#standard(Lorg/springframework/security/oauth2/client/test/RestTemplateHolder;)Lorg/springframework/security/oauth2/client/test/OAuth2ContextSetup;
+#apply(Lorg/junit/runners/model/Statement;Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;
+#starting(Lorg/junit/runners/model/FrameworkMethod;)V
+#finished(Lorg/junit/runners/model/FrameworkMethod;)V
+#setAccessTokenProvider(Lorg/springframework/security/oauth2/client/token/AccessTokenProvider;)V
+#setParameters(Ljava/util/Map;)V
+#getAccessToken()Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#getRestTemplate()Lorg/springframework/security/oauth2/client/OAuth2RestTemplate;
+#getResource()Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;
+#getAccessTokenRequest()Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;
+#getOAuth2ClientContext()Lorg/springframework/security/oauth2/client/OAuth2ClientContext;

+###org/springframework/security/oauth2/client/test/RestTemplateHolder
@1.0.0.RELEASE
+#setRestTemplate(Lorg/springframework/web/client/RestOperations;)V
+#getRestTemplate()Lorg/springframework/web/client/RestOperations;

+###org/springframework/security/oauth2/client/test/BeforeOAuth2Context
@1.0.0.RELEASE

+###org/springframework/security/oauth2/client/test/OAuth2ContextConfiguration$ClientCredentials
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/client/test/TestAccounts;)V

+###org/springframework/security/oauth2/client/test/OAuth2ContextConfiguration$ResourceHelper
@1.0.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/resource/BaseOAuth2ProtectedResourceDetails;)V

+###org/springframework/security/oauth2/client/test/TestAccounts
@1.0.0.RELEASE
+#getUserName()Ljava/lang/String;
+#getPassword()Ljava/lang/String;
+#getEmail()Ljava/lang/String;
+#getAdminClientId()Ljava/lang/String;
+#getAdminClientSecret()Ljava/lang/String;
+#getDefaultClientCredentialsResource()Lorg/springframework/security/oauth2/client/token/grant/client/ClientCredentialsResourceDetails;
+#getClientCredentialsResource(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/security/oauth2/client/token/grant/client/ClientCredentialsResourceDetails;
+#getDefaultResourceOwnerPasswordResource()Lorg/springframework/security/oauth2/client/token/grant/password/ResourceOwnerPasswordResourceDetails;
+#getResourceOwnerPasswordResource([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/security/oauth2/client/token/grant/password/ResourceOwnerPasswordResourceDetails;
+#getDefaultImplicitResource()Lorg/springframework/security/oauth2/client/token/grant/implicit/ImplicitResourceDetails;

+###org/springframework/security/oauth2/client/test/OAuth2ContextConfiguration$Password
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/client/test/TestAccounts;)V

+###org/springframework/security/oauth2/client/test/OAuth2ContextConfiguration$Implicit
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/client/test/TestAccounts;)V

+###org/springframework/security/oauth2/client/test/OAuth2ContextConfiguration
@1.0.0.RELEASE
+#value()Ljava/lang/Class;
+#resource()Ljava/lang/Class;
+#initialize()Z

+###org/springframework/security/oauth2/client/token/AccessTokenRequest
@1.0.0.RELEASE
+#getExistingToken()Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#setExistingToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#setAuthorizationCode(Ljava/lang/String;)V
+#getAuthorizationCode()Ljava/lang/String;
+#setCurrentUri(Ljava/lang/String;)V
+#getCurrentUri()Ljava/lang/String;
+#setStateKey(Ljava/lang/String;)V
+#getStateKey()Ljava/lang/String;
+#setPreservedState(Ljava/lang/Object;)V
+#getPreservedState()Ljava/lang/Object;
+#isError()Z
+#setCookie(Ljava/lang/String;)V
+#getCookie()Ljava/lang/String;
@2.0.0.RELEASE
+#setHeaders(Ljava/util/Map;)V
+#getHeaders()Ljava/util/Map;

+###org/springframework/security/oauth2/client/token/AccessTokenProvider
@1.0.0.RELEASE
+#obtainAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#supportsResource(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#refreshAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#supportsRefresh(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z

+###org/springframework/security/oauth2/client/token/DefaultClientKeyGenerator
@1.0.0.RELEASE
+#<init>()V
+#extractKey(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/core/Authentication;)Ljava/lang/String;

+###org/springframework/security/oauth2/client/token/ClientTokenServices
@1.0.0.RELEASE
+#getAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#saveAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/core/Authentication;Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#removeAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/oauth2/client/token/DefaultAccessTokenRequest
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#isError()Z
+#getPreservedState()Ljava/lang/Object;
+#setPreservedState(Ljava/lang/Object;)V
+#getStateKey()Ljava/lang/String;
+#setStateKey(Ljava/lang/String;)V
+#getCurrentUri()Ljava/lang/String;
+#setCurrentUri(Ljava/lang/String;)V
+#getAuthorizationCode()Ljava/lang/String;
+#setAuthorizationCode(Ljava/lang/String;)V
+#setCookie(Ljava/lang/String;)V
+#getCookie()Ljava/lang/String;
+#setExistingToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#getExistingToken()Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#getFirst(Ljava/lang/String;)Ljava/lang/String;
+#add(Ljava/lang/String;Ljava/lang/String;)V
+#set(Ljava/lang/String;Ljava/lang/String;)V
+#setAll(Ljava/util/Map;)V
+#toSingleValueMap()Ljava/util/Map;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/util/List;
+#put(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#remove(Ljava/lang/Object;)Ljava/util/List;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#getFirst(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
+#setHeaders(Ljava/util/Map;)V
+#getHeaders()Ljava/util/Map;
@2.1.1.RELEASE
+#addAll(Ljava/lang/String;Ljava/util/List;)V
@2.1.2.RELEASE
+#addAll(Lorg/springframework/util/MultiValueMap;)V

+###org/springframework/security/oauth2/client/token/AccessTokenProviderChain
@1.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#setClientTokenServices(Lorg/springframework/security/oauth2/client/token/ClientTokenServices;)V
+#supportsResource(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#supportsRefresh(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#obtainAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#refreshAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/client/token/ClientKeyGenerator
@1.0.0.RELEASE
+#extractKey(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/core/Authentication;)Ljava/lang/String;

+###org/springframework/security/oauth2/client/token/RequestEnhancer
@2.0.0.RELEASE
+#enhance(Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpHeaders;)V

+###org/springframework/security/oauth2/client/token/auth/ClientAuthenticationHandler
@1.0.0.RELEASE
+#authenticateTokenRequest(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpHeaders;)V

+###org/springframework/security/oauth2/client/token/auth/DefaultClientAuthenticationHandler
@1.0.0.RELEASE
+#<init>()V
+#authenticateTokenRequest(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpHeaders;)V

+###org/springframework/security/oauth2/client/token/JdbcClientTokenServices
@1.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#setClientKeyGenerator(Lorg/springframework/security/oauth2/client/token/ClientKeyGenerator;)V
+#getAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#saveAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/core/Authentication;Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#removeAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/core/Authentication;)V
+#setInsertAccessTokenSql(Ljava/lang/String;)V
+#setSelectAccessTokenSql(Ljava/lang/String;)V
+#setDeleteAccessTokenSql(Ljava/lang/String;)V

+###org/springframework/security/oauth2/client/token/OAuth2AccessTokenSupport
@1.0.0.RELEASE
+#<init>()V
+#setAuthenticationHandler(Lorg/springframework/security/oauth2/client/token/auth/ClientAuthenticationHandler;)V
+#setMessageConverters(Ljava/util/List;)V
+#setRequestFactory(Lorg/springframework/http/client/ClientHttpRequestFactory;)V
@1.0.4.RELEASE
+#setInterceptors(Ljava/util/List;)V
@2.0.0.RELEASE
+#setTokenRequestEnhancer(Lorg/springframework/security/oauth2/client/token/RequestEnhancer;)V

+###org/springframework/security/oauth2/client/token/grant/redirect/AbstractRedirectResourceDetails
@1.0.0.RELEASE
+#<init>()V
+#setUseCurrentUri(Z)V
+#isUseCurrentUri()Z
+#getUserAuthorizationUri()Ljava/lang/String;
+#setUserAuthorizationUri(Ljava/lang/String;)V
+#getPreEstablishedRedirectUri()Ljava/lang/String;
+#setPreEstablishedRedirectUri(Ljava/lang/String;)V
+#getRedirectUri(Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Ljava/lang/String;

+###org/springframework/security/oauth2/client/token/grant/code/AuthorizationCodeResourceDetails
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/client/token/grant/code/AuthorizationCodeAccessTokenProvider
@1.0.0.RELEASE
+#<init>()V
+#setStateKeyGenerator(Lorg/springframework/security/oauth2/client/filter/state/StateKeyGenerator;)V
+#supportsResource(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#supportsRefresh(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#obtainAuthorizationCode(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Ljava/lang/String;
+#obtainAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#refreshAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
@2.0.0.RELEASE
+#setAuthorizationRequestEnhancer(Lorg/springframework/security/oauth2/client/token/RequestEnhancer;)V
+#setScopePrefix(Ljava/lang/String;)V
@2.0.8.RELEASE
+#setStateMandatory(Z)V

+###org/springframework/security/oauth2/client/token/grant/password/ResourceOwnerPasswordAccessTokenProvider
@1.0.0.RELEASE
+#<init>()V
+#supportsResource(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#supportsRefresh(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#refreshAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#obtainAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/client/token/grant/password/ResourceOwnerPasswordResourceDetails
@1.0.0.RELEASE
+#<init>()V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V

+###org/springframework/security/oauth2/client/token/grant/implicit/ImplicitAccessTokenProvider
@1.0.0.RELEASE
+#<init>()V
+#supportsResource(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#supportsRefresh(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#refreshAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#obtainAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/client/token/grant/implicit/ImplicitResourceDetails
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/client/token/grant/client/ClientCredentialsAccessTokenProvider
@1.0.0.RELEASE
+#<init>()V
+#supportsResource(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#supportsRefresh(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Z
+#refreshAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#obtainAccessToken(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;

+###org/springframework/security/oauth2/client/token/grant/client/ClientCredentialsResourceDetails
@1.0.0.RELEASE
+#<init>()V
+#isClientOnly()Z

+###org/springframework/security/oauth2/client/token/DefaultRequestEnhancer
@2.0.0.RELEASE
+#<init>()V
+#setParameterIncludes(Ljava/util/Collection;)V
+#enhance(Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpHeaders;)V

+###org/springframework/security/oauth2/client/DefaultOAuth2ClientContext
@1.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;)V
+#<init>(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#getAccessToken()Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#setAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#getAccessTokenRequest()Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;
+#setPreservedState(Ljava/lang/String;Ljava/lang/Object;)V
+#removePreservedState(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/security/oauth2/client/OAuth2RestTemplate
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)V
+#<init>(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/OAuth2ClientContext;)V
+#setRetryBadAccessTokens(Z)V
+#setErrorHandler(Lorg/springframework/web/client/ResponseErrorHandler;)V
+#getAccessToken()Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#getOAuth2ClientContext()Lorg/springframework/security/oauth2/client/OAuth2ClientContext;
+#setAccessTokenProvider(Lorg/springframework/security/oauth2/client/token/AccessTokenProvider;)V
@2.0.0.RELEASE
+#setAuthenticator(Lorg/springframework/security/oauth2/client/OAuth2RequestAuthenticator;)V
+#getResource()Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;
@2.5.0.RELEASE
+#setClockSkew(I)V

+###org/springframework/security/oauth2/client/OAuth2RequestAuthenticator
@2.0.0.RELEASE
+#authenticate(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/OAuth2ClientContext;Lorg/springframework/http/client/ClientHttpRequest;)V

+###org/springframework/security/oauth2/client/OAuth2ClientContext
@1.0.0.RELEASE
+#getAccessToken()Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#setAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#getAccessTokenRequest()Lorg/springframework/security/oauth2/client/token/AccessTokenRequest;
+#setPreservedState(Ljava/lang/String;Ljava/lang/Object;)V
+#removePreservedState(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/security/oauth2/client/OAuth2RestOperations
@1.0.0.RELEASE
+#getAccessToken()Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#getOAuth2ClientContext()Lorg/springframework/security/oauth2/client/OAuth2ClientContext;
@2.0.0.RELEASE
+#getResource()Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;

+###org/springframework/security/oauth2/client/DefaultOAuth2RequestAuthenticator
@2.0.0.RELEASE
+#<init>()V
+#authenticate(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Lorg/springframework/security/oauth2/client/OAuth2ClientContext;Lorg/springframework/http/client/ClientHttpRequest;)V

+###org/springframework/security/oauth2/client/http/AccessTokenRequiredException
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Ljava/lang/Throwable;)V
+#getResource()Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;

+###org/springframework/security/oauth2/client/http/OAuth2ErrorHandler
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)V
+#setMessageConverters(Ljava/util/List;)V
+#<init>(Lorg/springframework/web/client/ResponseErrorHandler;Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)V
+#hasError(Lorg/springframework/http/client/ClientHttpResponse;)Z
+#handleError(Lorg/springframework/http/client/ClientHttpResponse;)V

+###org/springframework/security/oauth2/client/http/StringSplitUtils
@1.0.0.RELEASE
+#<init>()V
+#split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#splitEachArrayElementAndCreateMap([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#splitIgnoringQuotes(Ljava/lang/String;C)[Ljava/lang/String;

+###org/springframework/security/oauth2/client/filter/OAuth2ClientAuthenticationProcessingFilter
@1.0.0.RELEASE
+#setTokenServices(Lorg/springframework/security/oauth2/provider/token/ResourceServerTokenServices;)V
+#setRestTemplate(Lorg/springframework/security/oauth2/client/OAuth2RestOperations;)V
+#<init>(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#attemptAuthentication(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
@2.0.10.RELEASE
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V

+###org/springframework/security/oauth2/client/filter/OAuth2ClientContextFilter
@1.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V
+#setThrowableAnalyzer(Lorg/springframework/security/web/util/ThrowableAnalyzer;)V
+#setPortResolver(Lorg/springframework/security/web/PortResolver;)V
+#setRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
@1.0.2.RELEASE
-#setPortResolver(Lorg/springframework/security/web/PortResolver;)V

+###org/springframework/security/oauth2/client/filter/state/StateKeyGenerator
@1.0.0.RELEASE
+#generateKey(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Ljava/lang/String;

+###org/springframework/security/oauth2/client/filter/state/DefaultStateKeyGenerator
@1.0.0.RELEASE
+#<init>()V
+#generateKey(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Ljava/lang/String;

+###org/springframework/security/oauth2/client/resource/OAuth2AccessDeniedException
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;Ljava/lang/Throwable;)V
+#getResource()Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;
+#setResource(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)V
+#getOAuth2ErrorCode()Ljava/lang/String;
+#getHttpErrorCode()I

+###org/springframework/security/oauth2/client/resource/UserApprovalRequiredException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#getApprovalUri()Ljava/lang/String;
+#getParameters()Ljava/util/Map;
+#getClientId()Ljava/lang/String;
+#getScope()Ljava/util/List;

+###org/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails
@1.0.0.RELEASE
+#getId()Ljava/lang/String;
+#getClientId()Ljava/lang/String;
+#getAccessTokenUri()Ljava/lang/String;
+#isScoped()Z
+#getScope()Ljava/util/List;
+#isAuthenticationRequired()Z
+#getClientSecret()Ljava/lang/String;
+#getClientAuthenticationScheme()Lorg/springframework/security/oauth2/common/AuthenticationScheme;
+#getGrantType()Ljava/lang/String;
+#getAuthenticationScheme()Lorg/springframework/security/oauth2/common/AuthenticationScheme;
+#getTokenName()Ljava/lang/String;
+#isClientOnly()Z

+###org/springframework/security/oauth2/client/resource/BaseOAuth2ProtectedResourceDetails
@1.0.0.RELEASE
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getAccessTokenUri()Ljava/lang/String;
+#setAccessTokenUri(Ljava/lang/String;)V
+#isScoped()Z
+#getScope()Ljava/util/List;
+#setScope(Ljava/util/List;)V
+#isAuthenticationRequired()Z
+#getClientSecret()Ljava/lang/String;
+#setClientSecret(Ljava/lang/String;)V
+#getClientAuthenticationScheme()Lorg/springframework/security/oauth2/common/AuthenticationScheme;
+#setClientAuthenticationScheme(Lorg/springframework/security/oauth2/common/AuthenticationScheme;)V
+#isClientOnly()Z
+#getAuthenticationScheme()Lorg/springframework/security/oauth2/common/AuthenticationScheme;
+#setAuthenticationScheme(Lorg/springframework/security/oauth2/common/AuthenticationScheme;)V
+#getTokenName()Ljava/lang/String;
+#setTokenName(Ljava/lang/String;)V
+#getGrantType()Ljava/lang/String;
+#setGrantType(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/security/oauth2/client/resource/UserRedirectRequiredException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#getRedirectUri()Ljava/lang/String;
+#getRequestParams()Ljava/util/Map;
+#getStateKey()Ljava/lang/String;
+#setStateKey(Ljava/lang/String;)V
+#getStateToPreserve()Ljava/lang/Object;
+#setStateToPreserve(Ljava/lang/Object;)V

+###org/springframework/security/oauth2/client/discovery/ProviderConfiguration$Builder
@2.2.0.RELEASE
+#<init>()V
+#issuer(Ljava/lang/String;)V
+#authorizationEndpoint(Ljava/lang/String;)V
+#tokenEndpoint(Ljava/lang/String;)V
+#userInfoEndpoint(Ljava/lang/String;)V
+#jwkSetUri(Ljava/lang/String;)V
+#build()Lorg/springframework/security/oauth2/client/discovery/ProviderConfiguration;

+###org/springframework/security/oauth2/client/discovery/ProviderConfiguration
@2.2.0.RELEASE
+#<init>()V
+#getIssuer()Ljava/net/URL;
+#getAuthorizationEndpoint()Ljava/net/URL;
+#getTokenEndpoint()Ljava/net/URL;
+#getUserInfoEndpoint()Ljava/net/URL;
+#getJwkSetUri()Ljava/net/URL;

+###org/springframework/security/oauth2/client/discovery/ProviderDiscoveryClient
@2.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#discover()Lorg/springframework/security/oauth2/client/discovery/ProviderConfiguration;

+###org/springframework/security/oauth2/client/filter/OAuth2AuthenticationFailureEvent
@2.0.10.RELEASE
+#<init>(Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/oauth2/common/util/Jackson2JsonParser
@2.0.7.RELEASE
+#<init>()V
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#formatMap(Ljava/util/Map;)Ljava/lang/String;

+###org/springframework/security/oauth2/common/util/JacksonJsonParser
@2.0.7.RELEASE
+#<init>()V
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#formatMap(Ljava/util/Map;)Ljava/lang/String;
@2.4.0.RELEASE
-###org/springframework/security/oauth2/common/util/JacksonJsonParser

+###org/springframework/security/oauth2/common/util/JsonParser
@2.0.7.RELEASE
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#formatMap(Ljava/util/Map;)Ljava/lang/String;

+###org/springframework/security/oauth2/common/util/JsonParserFactory
@2.0.7.RELEASE
+#<init>()V
+#create()Lorg/springframework/security/oauth2/common/util/JsonParser;

+###org/springframework/security/oauth2/common/util/ProxyCreator
@2.0.8.RELEASE
+#<init>()V
+#getProxy(Ljava/lang/Class;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;

+###org/springframework/security/oauth2/config/annotation/web/configuration/AuthorizationServerEndpointsConfiguration$AuthorizationServerTokenServicesFactoryBean
@2.1.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;)V
+#getObjectType()Ljava/lang/Class;

+###org/springframework/security/oauth2/provider/expression/OAuth2ExpressionParser
@2.0.6.RELEASE
+#<init>(Lorg/springframework/expression/ExpressionParser;)V
+#parseExpression(Ljava/lang/String;)Lorg/springframework/expression/Expression;
+#parseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/Expression;

+###org/springframework/security/oauth2/provider/token/store/DelegatingJwtClaimsSetVerifier
@2.2.0.RELEASE
+#<init>(Ljava/util/List;)V
+#verify(Ljava/util/Map;)V

+###org/springframework/security/oauth2/provider/token/store/IssuerClaimVerifier
@2.2.0.RELEASE
+#<init>(Ljava/net/URL;)V
+#verify(Ljava/util/Map;)V

+###org/springframework/security/oauth2/provider/token/store/jwk/JwkException
@2.0.13.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getOAuth2ErrorCode()Ljava/lang/String;
+#getHttpErrorCode()I

+###org/springframework/security/oauth2/provider/token/store/jwk/JwkTokenStore
@2.0.13.RELEASE
+#<init>(Ljava/lang/String;)V
+#readAuthentication(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#storeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#removeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#storeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;
+#readAuthenticationForRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#removeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#removeAccessTokenUsingRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#getAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#findTokensByClientIdAndUserName(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
@2.2.0.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/token/AccessTokenConverter;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/token/store/JwtClaimsSetVerifier;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/oauth2/provider/token/AccessTokenConverter;Lorg/springframework/security/oauth2/provider/token/store/JwtClaimsSetVerifier;)V
+#<init>(Ljava/util/List;Lorg/springframework/security/oauth2/provider/token/AccessTokenConverter;Lorg/springframework/security/oauth2/provider/token/store/JwtClaimsSetVerifier;)V

+###org/springframework/security/oauth2/provider/token/store/JwtClaimsSetVerifier
@2.2.0.RELEASE
+#verify(Ljava/util/Map;)V

+###org/springframework/security/oauth2/provider/token/store/redis/BaseRedisTokenStoreSerializationStrategy
@2.0.8.RELEASE
+#<init>()V
+#deserialize([BLjava/lang/Class;)Ljava/lang/Object;
+#deserializeString([B)Ljava/lang/String;
+#serialize(Ljava/lang/Object;)[B
+#serialize(Ljava/lang/String;)[B

+###org/springframework/security/oauth2/provider/token/store/redis/JdkSerializationStrategy
@2.0.8.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/provider/token/store/redis/RedisTokenStore
@2.0.8.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V
+#setAuthenticationKeyGenerator(Lorg/springframework/security/oauth2/provider/token/AuthenticationKeyGenerator;)V
+#setSerializationStrategy(Lorg/springframework/security/oauth2/provider/token/store/redis/RedisTokenStoreSerializationStrategy;)V
+#getAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#readAuthentication(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthenticationForRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthenticationForRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#storeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#removeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#removeAccessToken(Ljava/lang/String;)V
+#storeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;
+#removeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#removeRefreshToken(Ljava/lang/String;)V
+#removeAccessTokenUsingRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#findTokensByClientIdAndUserName(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
@2.0.9.RELEASE
+#setPrefix(Ljava/lang/String;)V

+###org/springframework/security/oauth2/provider/token/store/redis/RedisTokenStoreSerializationStrategy
@2.0.8.RELEASE
+#deserialize([BLjava/lang/Class;)Ljava/lang/Object;
+#deserializeString([B)Ljava/lang/String;
+#serialize(Ljava/lang/Object;)[B
+#serialize(Ljava/lang/String;)[B

+###org/springframework/security/oauth2/provider/token/store/redis/StandardStringSerializationStrategy
@2.0.8.RELEASE
+#<init>()V

+###org/springframework/security/oauth2/common/util/SerializationStrategy
@2.4.0.RELEASE
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;

+###org/springframework/security/oauth2/common/util/WhitelistedSerializationStrategy
@2.4.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/List;)V

+###org/springframework/security/oauth2/common/util/DefaultSerializationStrategy
@2.4.0.RELEASE
+#<init>()V
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;

+###org/springframework/security/oauth2/provider/code/RedisAuthorizationCodeServices
@2.5.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V
+#setSerializationStrategy(Lorg/springframework/security/oauth2/provider/token/store/redis/RedisTokenStoreSerializationStrategy;)V
+#setPrefix(Ljava/lang/String;)V

+###org/springframework/security/oauth2/provider/token/InMemoryTokenStore
@1.0.0.RELEASE
+#<init>()V
+#setFlushInterval(I)V
+#getFlushInterval()I
+#clear()V
+#setAuthenticationKeyGenerator(Lorg/springframework/security/oauth2/provider/token/AuthenticationKeyGenerator;)V
+#getAccessTokenCount()I
+#getRefreshTokenCount()I
+#getExpiryTokenCount()I
+#getAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#readAuthentication(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthenticationForRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthenticationForRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#storeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#removeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#removeAccessToken(Ljava/lang/String;)V
+#storeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;
+#removeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#removeRefreshToken(Ljava/lang/String;)V
+#removeAccessTokenUsingRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
+#findTokensByUserName(Ljava/lang/String;)Ljava/util/Collection;
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/token/InMemoryTokenStore

+###org/springframework/security/oauth2/provider/token/JdbcTokenStore
@1.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#setAuthenticationKeyGenerator(Lorg/springframework/security/oauth2/provider/token/AuthenticationKeyGenerator;)V
+#getAccessToken(Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#storeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#removeAccessToken(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)V
+#removeAccessToken(Ljava/lang/String;)V
+#readAuthentication(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#storeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;Lorg/springframework/security/oauth2/provider/OAuth2Authentication;)V
+#readRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;
+#removeRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#removeRefreshToken(Ljava/lang/String;)V
+#readAuthenticationForRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAuthenticationForRefreshToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#removeAccessTokenUsingRefreshToken(Lorg/springframework/security/oauth2/common/OAuth2RefreshToken;)V
+#removeAccessTokenUsingRefreshToken(Ljava/lang/String;)V
+#findTokensByClientId(Ljava/lang/String;)Ljava/util/Collection;
+#findTokensByUserName(Ljava/lang/String;)Ljava/util/Collection;
+#setInsertAccessTokenSql(Ljava/lang/String;)V
+#setSelectAccessTokenSql(Ljava/lang/String;)V
+#setDeleteAccessTokenSql(Ljava/lang/String;)V
+#setInsertRefreshTokenSql(Ljava/lang/String;)V
+#setSelectRefreshTokenSql(Ljava/lang/String;)V
+#setDeleteRefreshTokenSql(Ljava/lang/String;)V
+#setSelectAccessTokenAuthenticationSql(Ljava/lang/String;)V
+#setSelectRefreshTokenAuthenticationSql(Ljava/lang/String;)V
+#setSelectAccessTokenFromAuthenticationSql(Ljava/lang/String;)V
+#setDeleteAccessTokenFromRefreshTokenSql(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/token/JdbcTokenStore

+###org/springframework/security/oauth2/provider/InMemoryClientDetailsService
@1.0.0.RELEASE
+#<init>()V
+#loadClientByClientId(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/ClientDetails;
+#getClientDetailsStore()Ljava/util/Map;
+#setClientDetailsStore(Ljava/util/Map;)V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/InMemoryClientDetailsService

+###org/springframework/security/oauth2/provider/code/AuthorizationRequestHolder
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)V
+#getAuthenticationRequest()Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#getUserAuthentication()Lorg/springframework/security/core/Authentication;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/code/AuthorizationRequestHolder

+###org/springframework/security/oauth2/provider/BaseClientDetails
@1.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#isSecretRequired()Z
+#getClientSecret()Ljava/lang/String;
+#setClientSecret(Ljava/lang/String;)V
+#isScoped()Z
+#getScope()Ljava/util/Set;
+#setScope(Ljava/util/Collection;)V
+#getResourceIds()Ljava/util/Set;
+#setResourceIds(Ljava/util/Collection;)V
+#getAuthorizedGrantTypes()Ljava/util/Set;
+#setAuthorizedGrantTypes(Ljava/util/Collection;)V
+#getRegisteredRedirectUri()Ljava/util/Set;
+#setRegisteredRedirectUri(Ljava/util/Set;)V
+#getAuthorities()Ljava/util/Collection;
+#setAuthorities(Ljava/util/Collection;)V
+#getAccessTokenValiditySeconds()Ljava/lang/Integer;
+#setAccessTokenValiditySeconds(Ljava/lang/Integer;)V
+#getRefreshTokenValiditySeconds()Ljava/lang/Integer;
+#setRefreshTokenValiditySeconds(Ljava/lang/Integer;)V
+#setAdditionalInformation(Ljava/util/Map;)V
+#getAdditionalInformation()Ljava/util/Map;
+#addAdditionalInformation(Ljava/lang/String;Ljava/lang/Object;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/BaseClientDetails

+###org/springframework/security/oauth2/provider/DefaultAuthorizationRequestManager
@1.0.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/ClientDetailsService;)V
+#createAuthorizationRequest(Ljava/util/Map;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#validateParameters(Ljava/util/Map;Lorg/springframework/security/oauth2/provider/ClientDetails;)V
@1.0.3.RELEASE
+#setRevealValidScopes(Z)V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/DefaultAuthorizationRequestManager

+###org/springframework/security/oauth2/provider/approval/TokenServicesUserApprovalHandler
@1.0.0.RELEASE
+#<init>()V
+#setApprovalParameter(Ljava/lang/String;)V
+#setTokenServices(Lorg/springframework/security/oauth2/provider/token/AuthorizationServerTokenServices;)V
+#afterPropertiesSet()V
+#updateBeforeApproval(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#isApproved(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;Lorg/springframework/security/core/Authentication;)Z
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/approval/TokenServicesUserApprovalHandler

+###org/springframework/security/oauth2/provider/BaseClientDetails$ArrayOrStringDeserializer
@1.0.0.RELEASE
+#<init>()V
+#getValueType()Lorg/codehaus/jackson/type/JavaType;
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/util/Set;
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/BaseClientDetails$ArrayOrStringDeserializer

+###org/springframework/security/oauth2/provider/DefaultAuthorizationRequest
@1.0.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Collection;)V
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
+#<init>(Lorg/springframework/security/oauth2/provider/AuthorizationRequest;)V
+#getAuthorizationParameters()Ljava/util/Map;
+#getApprovalParameters()Ljava/util/Map;
+#getClientId()Ljava/lang/String;
+#getScope()Ljava/util/Set;
+#getResourceIds()Ljava/util/Set;
+#getAuthorities()Ljava/util/Collection;
+#isApproved()Z
+#isDenied()Z
+#getState()Ljava/lang/String;
+#getRedirectUri()Ljava/lang/String;
+#getResponseTypes()Ljava/util/Set;
+#setRedirectUri(Ljava/lang/String;)V
+#addClientDetails(Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#setScope(Ljava/util/Set;)V
+#setResourceIds(Ljava/util/Set;)V
+#setApproved(Z)V
+#setAuthorities(Ljava/util/Collection;)V
+#setAuthorizationParameters(Ljava/util/Map;)V
+#setApprovalParameters(Ljava/util/Map;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.0.3.RELEASE
+#remove(Ljava/util/Collection;)V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/DefaultAuthorizationRequest

+###org/springframework/security/oauth2/provider/JdbcClientDetailsService
@1.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#setPasswordEncoder(Lorg/springframework/security/crypto/password/PasswordEncoder;)V
+#loadClientByClientId(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/ClientDetails;
+#addClientDetails(Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#updateClientDetails(Lorg/springframework/security/oauth2/provider/ClientDetails;)V
+#updateClientSecret(Ljava/lang/String;Ljava/lang/String;)V
+#removeClientDetails(Ljava/lang/String;)V
+#listClientDetails()Ljava/util/List;
+#setSelectClientDetailsSql(Ljava/lang/String;)V
+#setDeleteClientDetailsSql(Ljava/lang/String;)V
+#setUpdateClientDetailsSql(Ljava/lang/String;)V
+#setUpdateClientSecretSql(Ljava/lang/String;)V
+#setInsertClientDetailsSql(Ljava/lang/String;)V
+#setFindClientDetailsSql(Ljava/lang/String;)V
+#setListFactory(Lorg/springframework/security/oauth2/common/util/JdbcListFactory;)V
+#setRowMapper(Lorg/springframework/jdbc/core/RowMapper;)V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/JdbcClientDetailsService

+###org/springframework/security/oauth2/provider/AuthorizationRequestManager
@1.0.0.RELEASE
+#createAuthorizationRequest(Ljava/util/Map;)Lorg/springframework/security/oauth2/provider/AuthorizationRequest;
+#validateParameters(Ljava/util/Map;Lorg/springframework/security/oauth2/provider/ClientDetails;)V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/AuthorizationRequestManager

+###org/springframework/security/oauth2/provider/SaltedClientSecret
@1.0.0.RELEASE
+#getSalt()Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/security/oauth2/provider/SaltedClientSecret

+###org/springframework/security/oauth2/config/ResourceServerBeanDefinitionParser
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/ResourceServerBeanDefinitionParser

+###org/springframework/security/oauth2/config/OAuth2SecurityNamespaceHandler
@1.0.0.RELEASE
+#<init>()V
+#init()V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/OAuth2SecurityNamespaceHandler

+###org/springframework/security/oauth2/config/ResourceBeanDefinitionParser
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/ResourceBeanDefinitionParser

+###org/springframework/security/oauth2/config/ClientBeanDefinitionParser
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/ClientBeanDefinitionParser

+###org/springframework/security/oauth2/config/ClientDetailsServiceBeanDefinitionParser
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/ClientDetailsServiceBeanDefinitionParser

+###org/springframework/security/oauth2/config/ExpressionHandlerBeanDefinitionParser
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/ExpressionHandlerBeanDefinitionParser

+###org/springframework/security/oauth2/config/ConfigUtils
@1.0.0.RELEASE
+#createSecurityMetadataSource(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;
+#findFilterChain(Lorg/springframework/beans/factory/xml/ParserContext;Ljava/lang/String;)Ljava/util/List;
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/ConfigUtils

+###org/springframework/security/oauth2/config/WebExpressionHandlerBeanDefinitionParser
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/WebExpressionHandlerBeanDefinitionParser

+###org/springframework/security/oauth2/config/ResourceBeanDefinitionParser$StringListFactoryBean
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getObject()Ljava/util/List;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/ResourceBeanDefinitionParser$StringListFactoryBean

+###org/springframework/security/oauth2/config/RestTemplateBeanDefinitionParser
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/RestTemplateBeanDefinitionParser

+###org/springframework/security/oauth2/config/OAuth2ClientContextFactoryBean
@1.0.0.RELEASE
+#<init>()V
+#setResource(Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)V
+#setScopedContext(Lorg/springframework/security/oauth2/client/OAuth2ClientContext;)V
+#setBareContext(Lorg/springframework/security/oauth2/client/OAuth2ClientContext;)V
+#getObject()Lorg/springframework/security/oauth2/client/OAuth2ClientContext;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/OAuth2ClientContextFactoryBean

+###org/springframework/security/oauth2/config/ProviderBeanDefinitionParser
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/ProviderBeanDefinitionParser

+###org/springframework/security/oauth2/config/AuthorizationServerBeanDefinitionParser
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/security/oauth2/config/AuthorizationServerBeanDefinitionParser

+###org/springframework/security/oauth2/config/annotation/web/configuration/AuthorizationServerSecurityConfiguration$ClientDetailsAuthenticationManagerConfiguration
@2.0.0.RELEASE
@2.0.5.RELEASE
-###org/springframework/security/oauth2/config/annotation/web/configuration/AuthorizationServerSecurityConfiguration$ClientDetailsAuthenticationManagerConfiguration

+###org/springframework/security/oauth2/common/OAuth2AccessTokenDeserializer
@1.0.0.RELEASE
+#<init>()V
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
@1.0.1.RELEASE
-###org/springframework/security/oauth2/common/OAuth2AccessTokenDeserializer

+###org/springframework/security/oauth2/common/exceptions/OAuth2ExceptionDeserializer
@1.0.0.RELEASE
+#<init>()V
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
@1.0.1.RELEASE
-###org/springframework/security/oauth2/common/exceptions/OAuth2ExceptionDeserializer

+###org/springframework/security/oauth2/common/exceptions/OAuth2ExceptionSerializer
@1.0.0.RELEASE
+#<init>()V
+#serialize(Lorg/springframework/security/oauth2/common/exceptions/OAuth2Exception;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
@1.0.1.RELEASE
-###org/springframework/security/oauth2/common/exceptions/OAuth2ExceptionSerializer

+###org/springframework/security/oauth2/common/OAuth2AccessTokenSerializer
@1.0.0.RELEASE
+#<init>()V
+#serialize(Lorg/springframework/security/oauth2/common/OAuth2AccessToken;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
@1.0.1.RELEASE
-###org/springframework/security/oauth2/common/OAuth2AccessTokenSerializer
