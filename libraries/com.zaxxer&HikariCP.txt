
+###com/zaxxer/hikari/HikariConfig
@1.1.3
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#addDataSourceProperty(Ljava/lang/String;Ljava/lang/String;)V
+#getDataSourceProperties()Ljava/util/Properties;
+#getAcquireIncrement()I
+#setAcquireIncrement(I)V
+#getAcquireRetries()I
+#setAcquireRetries(I)V
+#getAcquireRetryDelay()J
+#setAcquireRetryDelay(J)V
+#getConnectionTestQuery()Ljava/lang/String;
+#setConnectionTestQuery(Ljava/lang/String;)V
+#getConnectionTimeout()J
+#setConnectionTimeout(J)V
+#getDataSourceClassName()Ljava/lang/String;
+#setDataSourceClassName(Ljava/lang/String;)V
+#getIdleTimeout()J
+#setIdleTimeout(J)V
+#isAutoCommit()Z
+#setAutoCommit(Z)V
+#isJdbc4ConnectionTest()Z
+#setJdbc4ConnectionTest(Z)V
+#getLeakDetectionThreshold()J
+#setLeakDetectionThreshold(J)V
+#getMaxLifetime()J
+#setMaxLifetime(J)V
+#getMinimumPoolSize()I
+#setMinimumPoolSize(I)V
+#getMaximumPoolSize()I
+#setMaximumPoolSize(I)V
+#getPoolName()Ljava/lang/String;
+#setPoolName(Ljava/lang/String;)V
+#validate()V
@1.1.4
+#isUseInstrumentation()Z
+#setUseInstrumentation(Z)V
@1.1.7
+#getShadedCodexMapping()Ljava/lang/String;
+#setShadedCodexMapping(Ljava/lang/String;)V
@1.1.8
+#addDataSourceProperty(Ljava/lang/String;Ljava/lang/Object;)V
-#addDataSourceProperty(Ljava/lang/String;Ljava/lang/String;)V
@1.1.9
+#getConnectionInitSql()Ljava/lang/String;
+#setConnectionInitSql(Ljava/lang/String;)V
+#setDataSourceProperties(Ljava/util/Properties;)V
@1.2.2
+#<init>(Ljava/util/Properties;)V
+#getTransactionIsolation()I
+#setTransactionIsolation(Ljava/lang/String;)V
@1.2.5
+#getDataSource()Ljavax/sql/DataSource;
+#setDataSource(Ljavax/sql/DataSource;)V
-#isUseInstrumentation()Z
-#getShadedCodexMapping()Ljava/lang/String;
-#setShadedCodexMapping(Ljava/lang/String;)V
@1.2.7
+#getConnectionCustomizerClassName()Ljava/lang/String;
+#setConnectionCustomizerClassName(Ljava/lang/String;)V
@1.2.9
+#isInitializationFailFast()Z
+#setInitializationFailFast(Z)V
+#isRegisterMbeans()Z
+#setRegisterMbeans(Z)V
@1.3.1
+#getCatalog()Ljava/lang/String;
+#setCatalog(Ljava/lang/String;)V
@1.3.4
*#setAcquireIncrement(I)V[deprecated]
*#setAcquireRetries(I)V[deprecated]
*#setAcquireRetryDelay(J)V[deprecated]
+#setDriverClassName(Ljava/lang/String;)V
+#getJdbcUrl()Ljava/lang/String;
+#setJdbcUrl(Ljava/lang/String;)V
+#isIsolateInternalQueries()Z
+#setIsolateInternalQueries(Z)V
+#isReadOnly()Z
+#setReadOnly(Z)V
+#isRecordMetrics()Z
+#setRecordMetrics(Z)V[deprecated]
*#setUseInstrumentation(Z)V[deprecated]
*#setMinimumPoolSize(I)V[deprecated]
+#getMinimumIdle()I
+#setMinimumIdle(I)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
-#getAcquireIncrement()I
-#getAcquireRetries()I
-#getAcquireRetryDelay()J
-#getMinimumPoolSize()I
@1.3.7
+#getDataSourceJNDI()Ljava/lang/String;
+#setDataSourceJNDI(Ljava/lang/String;)V
@1.3.9
+#getConnectionCustomizer()Lcom/zaxxer/hikari/IConnectionCustomizer;
+#setConnectionCustomizer(Lcom/zaxxer/hikari/IConnectionCustomizer;)V
+#getMetricsTrackerClassName()Ljava/lang/String;
+#setMetricsTrackerClassName(Ljava/lang/String;)V
-#setAcquireIncrement(I)V[deprecated]
-#setAcquireRetries(I)V[deprecated]
-#setAcquireRetryDelay(J)V[deprecated]
-#setUseInstrumentation(Z)V[deprecated]
-#setMinimumPoolSize(I)V[deprecated]
@2.0.0
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)V
@2.1.0
+#getTransactionIsolation()Ljava/lang/String;
-#getTransactionIsolation()I
@2.2.0
*#isJdbc4ConnectionTest()Z[deprecated]
*#setJdbc4ConnectionTest(Z)V[deprecated]
+#getMetricRegistry()Lcom/codahale/metrics/MetricRegistry;
+#setMetricRegistry(Lcom/codahale/metrics/MetricRegistry;)V
-#isRecordMetrics()Z
-#setRecordMetrics(Z)V[deprecated]
-#getMetricsTrackerClassName()Ljava/lang/String;
-#setMetricsTrackerClassName(Ljava/lang/String;)V
@2.2.3
+#getMetricRegistry()Ljava/lang/Object;
+#setMetricRegistry(Ljava/lang/Object;)V
-#getMetricRegistry()Lcom/codahale/metrics/MetricRegistry;
-#setMetricRegistry(Lcom/codahale/metrics/MetricRegistry;)V
@2.3.0
-#getCatalog()Ljava/lang/String;
-#setCatalog(Ljava/lang/String;)V
-#getConnectionCustomizerClassName()Ljava/lang/String;
-#setConnectionCustomizerClassName(Ljava/lang/String;)V
-#getConnectionCustomizer()Lcom/zaxxer/hikari/IConnectionCustomizer;
-#setConnectionCustomizer(Lcom/zaxxer/hikari/IConnectionCustomizer;)V
-#getConnectionTestQuery()Ljava/lang/String;
-#setConnectionTestQuery(Ljava/lang/String;)V
-#getConnectionInitSql()Ljava/lang/String;
-#setConnectionInitSql(Ljava/lang/String;)V
-#getConnectionTimeout()J
-#setConnectionTimeout(J)V
-#getDataSource()Ljavax/sql/DataSource;
-#setDataSource(Ljavax/sql/DataSource;)V
-#getDataSourceClassName()Ljava/lang/String;
-#setDataSourceClassName(Ljava/lang/String;)V
-#addDataSourceProperty(Ljava/lang/String;Ljava/lang/Object;)V
-#getDataSourceJNDI()Ljava/lang/String;
-#setDataSourceJNDI(Ljava/lang/String;)V
-#getDataSourceProperties()Ljava/util/Properties;
-#setDataSourceProperties(Ljava/util/Properties;)V
-#setDriverClassName(Ljava/lang/String;)V
-#getIdleTimeout()J
-#setIdleTimeout(J)V
-#getJdbcUrl()Ljava/lang/String;
-#setJdbcUrl(Ljava/lang/String;)V
-#isAutoCommit()Z
-#setAutoCommit(Z)V
-#isInitializationFailFast()Z
-#setInitializationFailFast(Z)V
-#isIsolateInternalQueries()Z
-#setIsolateInternalQueries(Z)V
-#isJdbc4ConnectionTest()Z[deprecated]
-#setJdbc4ConnectionTest(Z)V[deprecated]
-#getMetricRegistry()Ljava/lang/Object;
-#setMetricRegistry(Ljava/lang/Object;)V
-#isReadOnly()Z
-#setReadOnly(Z)V
-#isRegisterMbeans()Z
-#setRegisterMbeans(Z)V
-#getLeakDetectionThreshold()J
-#setLeakDetectionThreshold(J)V
-#getMaxLifetime()J
-#setMaxLifetime(J)V
-#getMaximumPoolSize()I
-#setMaximumPoolSize(I)V
-#getMinimumIdle()I
-#setMinimumIdle(I)V
-#getPassword()Ljava/lang/String;
-#setPassword(Ljava/lang/String;)V
-#getPoolName()Ljava/lang/String;
-#setPoolName(Ljava/lang/String;)V
-#getTransactionIsolation()Ljava/lang/String;
-#setTransactionIsolation(Ljava/lang/String;)V
-#getUsername()Ljava/lang/String;
-#setUsername(Ljava/lang/String;)V
-#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
-#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)V
-#validate()V
@2.4.0
+#getCatalog()Ljava/lang/String;
+#setCatalog(Ljava/lang/String;)V
+#getConnectionTestQuery()Ljava/lang/String;
+#setConnectionTestQuery(Ljava/lang/String;)V
+#getConnectionInitSql()Ljava/lang/String;
+#setConnectionInitSql(Ljava/lang/String;)V
+#getConnectionTimeout()J
+#setConnectionTimeout(J)V
+#getValidationTimeout()J
+#setValidationTimeout(J)V
+#getDataSource()Ljavax/sql/DataSource;
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSourceClassName()Ljava/lang/String;
+#setDataSourceClassName(Ljava/lang/String;)V
+#addDataSourceProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#getDataSourceJNDI()Ljava/lang/String;
+#setDataSourceJNDI(Ljava/lang/String;)V
+#getDataSourceProperties()Ljava/util/Properties;
+#setDataSourceProperties(Ljava/util/Properties;)V
+#getDriverClassName()Ljava/lang/String;
+#setDriverClassName(Ljava/lang/String;)V
+#getIdleTimeout()J
+#setIdleTimeout(J)V
+#getJdbcUrl()Ljava/lang/String;
+#setJdbcUrl(Ljava/lang/String;)V
+#isAutoCommit()Z
+#setAutoCommit(Z)V
+#isAllowPoolSuspension()Z
+#setAllowPoolSuspension(Z)V
+#isInitializationFailFast()Z
+#setInitializationFailFast(Z)V
+#isIsolateInternalQueries()Z
+#setIsolateInternalQueries(Z)V
+#isJdbc4ConnectionTest()Z[deprecated]
+#setJdbc4ConnectionTest(Z)V[deprecated]
+#getMetricsTrackerFactory()Lcom/zaxxer/hikari/metrics/MetricsTrackerFactory;
+#setMetricsTrackerFactory(Lcom/zaxxer/hikari/metrics/MetricsTrackerFactory;)V
+#getMetricRegistry()Ljava/lang/Object;
+#setMetricRegistry(Ljava/lang/Object;)V
+#getHealthCheckRegistry()Ljava/lang/Object;
+#setHealthCheckRegistry(Ljava/lang/Object;)V
+#getHealthCheckProperties()Ljava/util/Properties;
+#setHealthCheckProperties(Ljava/util/Properties;)V
+#addHealthCheckProperty(Ljava/lang/String;Ljava/lang/String;)V
+#isReadOnly()Ljava/lang/Boolean;
+#setReadOnly(Ljava/lang/Boolean;)V
+#isRegisterMbeans()Z
+#setRegisterMbeans(Z)V
+#getLeakDetectionThreshold()J
+#setLeakDetectionThreshold(J)V
+#getMaxLifetime()J
+#setMaxLifetime(J)V
+#getMaximumPoolSize()I
+#setMaximumPoolSize(I)V
+#getMinimumIdle()I
+#setMinimumIdle(I)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getPoolName()Ljava/lang/String;
+#setPoolName(Ljava/lang/String;)V
+#getScheduledExecutorService()Ljava/util/concurrent/ScheduledThreadPoolExecutor;
+#setScheduledExecutorService(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)V
+#getTransactionIsolation()Ljava/lang/String;
+#setTransactionIsolation(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)V
+#validate()V
+#copyState(Lcom/zaxxer/hikari/HikariConfig;)V
@2.4.1
+#isReadOnly()Z
+#setReadOnly(Z)V
-#isReadOnly()Ljava/lang/Boolean;
-#setReadOnly(Ljava/lang/Boolean;)V
@2.6.0
+#getInitializationFailTimeout()J
+#setInitializationFailTimeout(J)V
*#isInitializationFailFast()Z[deprecated]
*#setInitializationFailFast(Z)V[deprecated]
*#getScheduledExecutorService()Ljava/util/concurrent/ScheduledThreadPoolExecutor;[deprecated]
*#setScheduledExecutorService(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)V[deprecated]
+#getScheduledExecutor()Ljava/util/concurrent/ScheduledExecutorService;
+#setScheduledExecutor(Ljava/util/concurrent/ScheduledExecutorService;)V
@2.7.0
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
@2.7.3
*#copyState(Lcom/zaxxer/hikari/HikariConfig;)V[deprecated]
+#copyStateTo(Lcom/zaxxer/hikari/HikariConfig;)V
@3.0.0
-#isInitializationFailFast()Z[deprecated]
-#setInitializationFailFast(Z)V[deprecated]
-#isJdbc4ConnectionTest()Z[deprecated]
-#setJdbc4ConnectionTest(Z)V[deprecated]
-#getScheduledExecutorService()Ljava/util/concurrent/ScheduledThreadPoolExecutor;[deprecated]
-#setScheduledExecutorService(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)V[deprecated]
-#copyState(Lcom/zaxxer/hikari/HikariConfig;)V[deprecated]
@3.4.3
+#getExceptionOverrideClassName()Ljava/lang/String;
+#setExceptionOverrideClassName(Ljava/lang/String;)V
@4.0.0
+#getKeepaliveTime()J
+#setKeepaliveTime(J)V

+###com/zaxxer/hikari/HikariConfigMBean
@1.1.3
+#getAcquireIncrement()I
+#setAcquireIncrement(I)V
+#getAcquireRetries()I
+#setAcquireRetries(I)V
+#getAcquireRetryDelay()J
+#setAcquireRetryDelay(J)V
+#getConnectionTimeout()J
+#setConnectionTimeout(J)V
+#getIdleTimeout()J
+#setIdleTimeout(J)V
+#getLeakDetectionThreshold()J
+#setLeakDetectionThreshold(J)V
+#getMaxLifetime()J
+#setMaxLifetime(J)V
+#getMinimumPoolSize()I
+#setMinimumPoolSize(I)V
+#getMaximumPoolSize()I
+#setMaximumPoolSize(I)V
+#getPoolName()Ljava/lang/String;
@1.3.4
+#getMinimumIdle()I
+#setMinimumIdle(I)V
-#getAcquireIncrement()I
-#setAcquireIncrement(I)V
-#getAcquireRetries()I
-#setAcquireRetries(I)V
-#getAcquireRetryDelay()J
-#setAcquireRetryDelay(J)V
-#getMinimumPoolSize()I
-#setMinimumPoolSize(I)V
@2.3.1
+#getValidationTimeout()J
+#setValidationTimeout(J)V
@2.3.9
-###com/zaxxer/hikari/HikariConfigMBean

+###com/zaxxer/hikari/HikariDataSource
@1.1.3
+#<init>(Lcom/zaxxer/hikari/HikariConfig;)V
+#getConnection()Ljava/sql/Connection;
+#getConnection(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
+#getLogWriter()Ljava/io/PrintWriter;
+#setLogWriter(Ljava/io/PrintWriter;)V
+#setLoginTimeout(I)V
+#getLoginTimeout()I
+#getParentLogger()Ljava/util/logging/Logger;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
@1.2.2
+#shutdown()V
@1.3.1
+#<init>()V
+#close()V
+#toString()Ljava/lang/String;
@1.3.4
+#evictConnection(Ljava/sql/Connection;)V
@2.1.0
+#getMetricsTracker()Lcom/zaxxer/hikari/metrics/IMetricsTracker;
@2.2.0
-#getMetricsTracker()Lcom/zaxxer/hikari/metrics/IMetricsTracker;
@2.3.0
*#getConnection(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;[deprecated]
+#suspendPool()V
+#resumePool()V
@2.3.4
+#setMetricRegistry(Ljava/lang/Object;)V
+#setHealthCheckRegistry(Ljava/lang/Object;)V
@2.4.0
+#setMetricsTrackerFactory(Lcom/zaxxer/hikari/metrics/MetricsTrackerFactory;)V
+#isClosed()Z
*#shutdown()V[deprecated]
@2.6.1
+#getHikariPoolMXBean()Lcom/zaxxer/hikari/HikariPoolMXBean;
+#getHikariConfigMXBean()Lcom/zaxxer/hikari/HikariConfigMXBean;
*#suspendPool()V[deprecated]
*#resumePool()V[deprecated]
@2.7.8
+#isRunning()Z
@3.0.0
-#suspendPool()V[deprecated]
-#resumePool()V[deprecated]
-#shutdown()V[deprecated]

+###com/zaxxer/hikari/HikariPool
@1.1.3
+#releaseConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#getActiveConnections()I
+#getIdleConnections()I
+#getTotalConnections()I
+#getThreadsAwaitingConnection()I
+#closeIdleConnections()V
@1.3.1
+#toString()Ljava/lang/String;
@1.3.3
+#bagIsEmpty()V
@1.3.4
+#addBagItem()V
-#bagIsEmpty()V
@1.3.7
-###com/zaxxer/hikari/HikariPool

+###com/zaxxer/hikari/HikariPoolMBean
@1.1.3
+#getIdleConnections()I
+#getActiveConnections()I
+#getTotalConnections()I
+#getThreadsAwaitingConnection()I
+#closeIdleConnections()V
@1.3.8
-###com/zaxxer/hikari/HikariPoolMBean

+###com/zaxxer/hikari/javassist/HikariClassTransformer
@1.1.3
+#agentmain(Ljava/lang/String;Ljava/lang/instrument/Instrumentation;)V
+#transform(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B
+#isAgentFailed()Z
@1.1.4
+#<init>()V
+#setScanClass(Ljava/util/HashSet;I)V
-#agentmain(Ljava/lang/String;Ljava/lang/instrument/Instrumentation;)V
@1.2.5
-###com/zaxxer/hikari/javassist/HikariClassTransformer

+###com/zaxxer/hikari/javassist/HikariInject
@1.1.3
@1.2.5
-###com/zaxxer/hikari/javassist/HikariInject

+###com/zaxxer/hikari/javassist/HikariInstrumentationAgent
@1.1.3
+#<init>(Ljavax/sql/DataSource;)V
+#loadTransformerAgent()Z
@1.1.4
+#<init>()V
+#agentmain(Ljava/lang/String;Ljava/lang/instrument/Instrumentation;)V
-#<init>(Ljavax/sql/DataSource;)V
-#loadTransformerAgent()Z
@1.1.7
-###com/zaxxer/hikari/javassist/HikariInstrumentationAgent

+###com/zaxxer/hikari/proxy/CallableStatementProxy
@1.1.3
+#setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
+#executeQuery()Ljava/sql/ResultSet;
+#close()V
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#__executeQuery()Ljava/sql/ResultSet;
+#__close()V
+#__executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#__getGeneratedKeys()Ljava/sql/ResultSet;
@1.1.4
-#setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
-#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
-#executeQuery()Ljava/sql/ResultSet;
-#close()V
-#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
-#getGeneratedKeys()Ljava/sql/ResultSet;
-#__executeQuery()Ljava/sql/ResultSet;
-#__close()V
-#__executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
-#__getGeneratedKeys()Ljava/sql/ResultSet;
@2.4.2
-###com/zaxxer/hikari/proxy/CallableStatementProxy

+###com/zaxxer/hikari/proxy/ConnectionProxy
@1.1.3
+#unregisterStatement(Ljava/lang/Object;)V
+#getCreationTime()J
+#getLastAccess()J
+#markLastAccess()V
+#setParentPool(Lcom/zaxxer/hikari/HikariPool;)V
+#unclose()V
+#captureStack(JLjava/util/Timer;)V
+#isBrokenConnection()Z
+#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
+#getDelegate()Ljava/sql/Connection;
+#close()V
+#isClosed()Z
+#createStatement()Ljava/sql/Statement;
+#createStatement(II)Ljava/sql/Statement;
+#createStatement(III)Ljava/sql/Statement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#isValid(I)Z
+#__close()V
+#__createStatement()Ljava/sql/Statement;
+#__createStatement(II)Ljava/sql/Statement;
+#__createStatement(III)Ljava/sql/Statement;
+#__prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#__prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#__prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#__prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#__prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#__prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#__prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#__prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#__prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
@1.1.4
+#_unregisterStatement(Ljava/lang/Object;)V
+#_getCreationTime()J
+#_getLastAccess()J
+#_markLastAccess()V
+#_setParentPool(Lcom/zaxxer/hikari/HikariPool;)V
+#_unclose()V
+#_captureStack(JLjava/util/Timer;)V
+#_isBrokenConnection()Z
+#_checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
+#__isValid(I)Z
-#unregisterStatement(Ljava/lang/Object;)V
-#getCreationTime()J
-#getLastAccess()J
-#markLastAccess()V
-#setParentPool(Lcom/zaxxer/hikari/HikariPool;)V
-#unclose()V
-#captureStack(JLjava/util/Timer;)V
-#isBrokenConnection()Z
-#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
@1.1.5
-#getDelegate()Ljava/sql/Connection;
@1.2.2
+#_checkException(Ljava/sql/SQLException;)V
-#_checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
@1.2.5
+#unregisterStatement(Ljava/lang/Object;)V
+#getCreationTime()J
+#getLastAccess()J
+#unclose()V
+#realClose()V
+#captureStack(JLjava/util/Timer;)V
+#isBrokenConnection()Z
+#checkException(Ljava/sql/SQLException;)V
-#_unregisterStatement(Ljava/lang/Object;)V
-#_getCreationTime()J
-#_getLastAccess()J
-#_markLastAccess()V
-#_setParentPool(Lcom/zaxxer/hikari/HikariPool;)V
-#_unclose()V
-#_captureStack(JLjava/util/Timer;)V
-#_isBrokenConnection()Z
-#_checkException(Ljava/sql/SQLException;)V
-#__close()V
-#__isValid(I)Z
-#__createStatement()Ljava/sql/Statement;
-#__createStatement(II)Ljava/sql/Statement;
-#__createStatement(III)Ljava/sql/Statement;
-#__prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
-#__prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
-#__prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
-#__prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
-#__prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
-#__prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
-#__prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
-#__prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
-#__prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
@1.2.7
+#untrackStatement(Ljava/lang/Object;)V
+#isTransactionIsolationDirty()Z
+#resetTransactionIsolationDirty()V
+#setTransactionIsolation(I)V
+#isWrapperFor(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
-#unregisterStatement(Ljava/lang/Object;)V
@1.3.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getState()I
+#compareAndSetState(II)Z
@1.3.1
+#setAutoCommit(Z)V
+#setCatalog(Ljava/lang/String;)V
-#isTransactionIsolationDirty()Z
-#resetTransactionIsolationDirty()V
@1.3.2
+#resetConnectionState()V
@1.3.4
+#getLastOpenTime()J
+#setReadOnly(Z)V
@1.3.9
+#getExpirationTime()J
+#unclose(J)V
+#untrackStatement(Ljava/sql/Statement;)V
-#getCreationTime()J
-#unclose()V
-#untrackStatement(Ljava/lang/Object;)V
@2.0.0
+#toString()Ljava/lang/String;
+#captureStack(JLjava/util/concurrent/ScheduledExecutorService;)V
-#captureStack(JLjava/util/Timer;)V
@2.1.0
+#getPoolBagEntry()Lcom/zaxxer/hikari/pool/PoolBagEntry;
+#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#checkException(Ljava/sql/SQLException;)V
-#getExpirationTime()J
-#getLastAccess()J
-#getLastOpenTime()J
-#realClose()V
-#resetConnectionState()V
-#unclose(J)V
-#getState()I
-#compareAndSetState(II)Z
@2.2.0
-#captureStack(JLjava/util/concurrent/ScheduledExecutorService;)V
-#isBrokenConnection()Z
@2.2.5
+#markCommitStateDirty()V
+#commit()V
+#rollback()V
+#rollback(Ljava/sql/Savepoint;)V
@2.3.0
-#isValid(I)Z
@2.4.0
+#setNetworkTimeout(Ljava/util/concurrent/Executor;I)V
@2.4.2
-###com/zaxxer/hikari/proxy/ConnectionProxy

+###com/zaxxer/hikari/proxy/IHikariConnectionProxy
@1.1.3
+#unclose()V
+#__close()V
+#unregisterStatement(Ljava/lang/Object;)V
+#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
+#isBrokenConnection()Z
+#getCreationTime()J
+#getLastAccess()J
+#markLastAccess()V
+#setParentPool(Lcom/zaxxer/hikari/HikariPool;)V
+#getDelegate()Ljava/sql/Connection;
+#captureStack(JLjava/util/Timer;)V
@1.1.4
+#_unclose()V
+#_unregisterStatement(Ljava/lang/Object;)V
+#_checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
+#_isBrokenConnection()Z
+#_getCreationTime()J
+#_getLastAccess()J
+#_markLastAccess()V
+#_setParentPool(Lcom/zaxxer/hikari/HikariPool;)V
+#_captureStack(JLjava/util/Timer;)V
-#unclose()V
-#unregisterStatement(Ljava/lang/Object;)V
-#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
-#isBrokenConnection()Z
-#getCreationTime()J
-#getLastAccess()J
-#markLastAccess()V
-#setParentPool(Lcom/zaxxer/hikari/HikariPool;)V
-#captureStack(JLjava/util/Timer;)V
@1.2.2
+#_checkException(Ljava/sql/SQLException;)V
-#_checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
@1.2.5
+#unclose()V
+#realClose()V
+#unregisterStatement(Ljava/lang/Object;)V
+#checkException(Ljava/sql/SQLException;)V
+#isBrokenConnection()Z
+#getCreationTime()J
+#getLastAccess()J
+#captureStack(JLjava/util/Timer;)V
-#_unclose()V
-#__close()V
-#_unregisterStatement(Ljava/lang/Object;)V
-#_checkException(Ljava/sql/SQLException;)V
-#_isBrokenConnection()Z
-#_getCreationTime()J
-#_getLastAccess()J
-#_markLastAccess()V
-#_setParentPool(Lcom/zaxxer/hikari/HikariPool;)V
-#getDelegate()Ljava/sql/Connection;
-#_captureStack(JLjava/util/Timer;)V
@1.2.7
+#untrackStatement(Ljava/lang/Object;)V
+#isTransactionIsolationDirty()Z
+#resetTransactionIsolationDirty()V
-#unregisterStatement(Ljava/lang/Object;)V
@1.3.1
-#isTransactionIsolationDirty()Z
-#resetTransactionIsolationDirty()V
@1.3.2
+#resetConnectionState()V
@1.3.4
+#getLastOpenTime()J
@1.3.9
+#getExpirationTime()J
+#unclose(J)V
+#untrackStatement(Ljava/sql/Statement;)V
-#getCreationTime()J
-#unclose()V
-#untrackStatement(Ljava/lang/Object;)V
@2.0.0
+#captureStack(JLjava/util/concurrent/ScheduledExecutorService;)V
-#captureStack(JLjava/util/Timer;)V
@2.1.0
+#getPoolBagEntry()Lcom/zaxxer/hikari/pool/PoolBagEntry;
+#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
-#checkException(Ljava/sql/SQLException;)V
-#getExpirationTime()J
-#getLastAccess()J
-#getLastOpenTime()J
-#realClose()V
-#resetConnectionState()V
-#unclose(J)V
@2.2.0
-#captureStack(JLjava/util/concurrent/ScheduledExecutorService;)V
-#isBrokenConnection()Z
@2.2.5
+#markCommitStateDirty()V
@2.4.2
-###com/zaxxer/hikari/proxy/IHikariConnectionProxy

+###com/zaxxer/hikari/proxy/IHikariResultSetProxy
@1.1.3
+#setProxyStatement(Lcom/zaxxer/hikari/proxy/IHikariStatementProxy;)V
@1.1.4
+#_setProxyStatement(Lcom/zaxxer/hikari/proxy/IHikariStatementProxy;)V
-#setProxyStatement(Lcom/zaxxer/hikari/proxy/IHikariStatementProxy;)V
@1.2.5
-###com/zaxxer/hikari/proxy/IHikariResultSetProxy

+###com/zaxxer/hikari/proxy/IHikariStatementProxy
@1.1.3
+#close()V
+#setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
@1.1.4
+#_setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#_getConnectionProxy()Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
+#_releaseResultSet(Lcom/zaxxer/hikari/proxy/IHikariResultSetProxy;)V
+#_checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
-#setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
-#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
@1.2.2
+#_checkException(Ljava/sql/SQLException;)V
-#_checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
@1.2.5
-###com/zaxxer/hikari/proxy/IHikariStatementProxy

+###com/zaxxer/hikari/proxy/JavassistProxyFactoryFactory
@1.1.3
+#getProxyFactory()Lcom/zaxxer/hikari/proxy/ProxyFactory;
@1.2.7
-###com/zaxxer/hikari/proxy/JavassistProxyFactoryFactory

+###com/zaxxer/hikari/proxy/LeakTask
@1.1.3
+#<init>([Ljava/lang/StackTraceElement;J)V
+#run()V
+#cancel()Z
@1.3.4
-###com/zaxxer/hikari/proxy/LeakTask

+###com/zaxxer/hikari/proxy/PreparedStatementProxy
@1.1.3
+#setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
+#executeQuery()Ljava/sql/ResultSet;
+#close()V
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#__executeQuery()Ljava/sql/ResultSet;
+#__close()V
+#__executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#__getGeneratedKeys()Ljava/sql/ResultSet;
@1.1.4
-#setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
-#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
-#close()V
-#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
-#getGeneratedKeys()Ljava/sql/ResultSet;
-#__close()V
-#__executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
-#__getGeneratedKeys()Ljava/sql/ResultSet;
@1.2.5
-#__executeQuery()Ljava/sql/ResultSet;
@2.2.0
-#executeQuery()Ljava/sql/ResultSet;
@2.2.5
+#execute()Z
+#executeQuery()Ljava/sql/ResultSet;
+#executeUpdate()I
+#executeLargeUpdate()J
@2.4.2
-###com/zaxxer/hikari/proxy/PreparedStatementProxy

+###com/zaxxer/hikari/proxy/ProxyFactory
@1.1.3
+#<init>()V
+#getProxyConnection(Ljava/sql/Connection;)Ljava/sql/Connection;
+#getProxyStatement(Lcom/zaxxer/hikari/proxy/ConnectionProxy;Ljava/sql/Statement;)Ljava/sql/Statement;
+#getProxyCallableStatement(Lcom/zaxxer/hikari/proxy/ConnectionProxy;Ljava/sql/CallableStatement;)Ljava/sql/CallableStatement;
+#getProxyPreparedStatement(Lcom/zaxxer/hikari/proxy/ConnectionProxy;Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
+#getProxyResultSet(Lcom/zaxxer/hikari/proxy/IHikariStatementProxy;Ljava/sql/ResultSet;)Ljava/sql/ResultSet;
@1.2.5
+#getProxyConnection(Lcom/zaxxer/hikari/HikariPool;Ljava/sql/Connection;)Ljava/sql/Connection;
+#getProxyResultSet(Lcom/zaxxer/hikari/proxy/StatementProxy;Ljava/sql/ResultSet;)Ljava/sql/ResultSet;
-#getProxyConnection(Ljava/sql/Connection;)Ljava/sql/Connection;
-#getProxyResultSet(Lcom/zaxxer/hikari/proxy/IHikariStatementProxy;Ljava/sql/ResultSet;)Ljava/sql/ResultSet;
@1.2.7
+#getProxyConnection(Lcom/zaxxer/hikari/HikariPool;Ljava/sql/Connection;I)Ljava/sql/Connection;
-#getProxyConnection(Lcom/zaxxer/hikari/HikariPool;Ljava/sql/Connection;)Ljava/sql/Connection;
-#getProxyStatement(Lcom/zaxxer/hikari/proxy/ConnectionProxy;Ljava/sql/Statement;)Ljava/sql/Statement;
-#getProxyCallableStatement(Lcom/zaxxer/hikari/proxy/ConnectionProxy;Ljava/sql/CallableStatement;)Ljava/sql/CallableStatement;
-#getProxyPreparedStatement(Lcom/zaxxer/hikari/proxy/ConnectionProxy;Ljava/sql/PreparedStatement;)Ljava/sql/PreparedStatement;
-#getProxyResultSet(Lcom/zaxxer/hikari/proxy/StatementProxy;Ljava/sql/ResultSet;)Ljava/sql/ResultSet;
@1.3.1
+#getProxyConnection(Lcom/zaxxer/hikari/HikariPool;Ljava/sql/Connection;IZLjava/lang/String;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#getProxyConnection(Lcom/zaxxer/hikari/HikariPool;Ljava/sql/Connection;I)Ljava/sql/Connection;
@1.3.4
+#getProxyConnection(Lcom/zaxxer/hikari/HikariPool;Ljava/sql/Connection;IZZLjava/lang/String;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#<init>()V
-#getProxyConnection(Lcom/zaxxer/hikari/HikariPool;Ljava/sql/Connection;IZLjava/lang/String;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
@1.3.7
+#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Ljava/sql/Connection;IZZLjava/lang/String;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#getProxyConnection(Lcom/zaxxer/hikari/HikariPool;Ljava/sql/Connection;IZZLjava/lang/String;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
@1.3.9
+#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Ljava/sql/Connection;JIZZLjava/lang/String;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Ljava/sql/Connection;IZZLjava/lang/String;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
@2.0.0
+#getProxyConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
@2.1.0
+#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/zaxxer/hikari/pool/PoolBagEntry;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Ljava/sql/Connection;JIZZLjava/lang/String;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#getProxyConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
@2.2.0
+#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/zaxxer/hikari/pool/PoolBagEntry;Lcom/zaxxer/hikari/util/LeakTask;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/zaxxer/hikari/pool/PoolBagEntry;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
@2.3.4
+#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/zaxxer/hikari/pool/PoolBagEntry;Lcom/zaxxer/hikari/pool/LeakTask;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/zaxxer/hikari/pool/PoolBagEntry;Lcom/zaxxer/hikari/util/LeakTask;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
@2.3.13
+#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/zaxxer/hikari/pool/PoolBagEntry;Lcom/zaxxer/hikari/pool/LeakTask;Z)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/zaxxer/hikari/pool/PoolBagEntry;Lcom/zaxxer/hikari/pool/LeakTask;)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
@2.4.0
+#getProxyConnection(Lcom/zaxxer/hikari/pool/PoolBagEntry;Lcom/zaxxer/hikari/pool/LeakTask;J)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#getProxyConnection(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/zaxxer/hikari/pool/PoolBagEntry;Lcom/zaxxer/hikari/pool/LeakTask;Z)Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
@2.4.2
-###com/zaxxer/hikari/proxy/ProxyFactory

+###com/zaxxer/hikari/proxy/ResultSetProxy
@1.1.3
+#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
+#setProxyStatement(Lcom/zaxxer/hikari/proxy/IHikariStatementProxy;)V
+#getStatement()Ljava/sql/Statement;
@1.1.4
+#_checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
+#_setProxyStatement(Lcom/zaxxer/hikari/proxy/IHikariStatementProxy;)V
-#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
-#setProxyStatement(Lcom/zaxxer/hikari/proxy/IHikariStatementProxy;)V
@1.2.2
+#_checkException(Ljava/sql/SQLException;)V
-#_checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
@1.2.5
+#checkException(Ljava/sql/SQLException;)V
-#_checkException(Ljava/sql/SQLException;)V
-#_setProxyStatement(Lcom/zaxxer/hikari/proxy/IHikariStatementProxy;)V
@1.2.9
-###com/zaxxer/hikari/proxy/ResultSetProxy

+###com/zaxxer/hikari/proxy/StatementProxy
@1.1.3
+#setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
+#close()V
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#__close()V
+#__executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#__getGeneratedKeys()Ljava/sql/ResultSet;
@1.1.4
+#_setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#_getConnectionProxy()Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
+#_checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
+#_releaseResultSet(Lcom/zaxxer/hikari/proxy/IHikariResultSetProxy;)V
+#getResultSet()Ljava/sql/ResultSet;
+#getConnection()Ljava/sql/Connection;
+#__getResultSet()Ljava/sql/ResultSet;
-#setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
-#checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
@1.2.2
+#_checkException(Ljava/sql/SQLException;)V
-#_checkException(Ljava/sql/SQLException;)Ljava/sql/SQLException;
@1.2.5
-#_setConnectionProxy(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
-#_getConnectionProxy()Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;
-#_checkException(Ljava/sql/SQLException;)V
-#_releaseResultSet(Lcom/zaxxer/hikari/proxy/IHikariResultSetProxy;)V
-#__close()V
-#__executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
-#__getGeneratedKeys()Ljava/sql/ResultSet;
-#__getResultSet()Ljava/sql/ResultSet;
@1.2.9
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
@2.2.0
-#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
-#getResultSet()Ljava/sql/ResultSet;
-#getGeneratedKeys()Ljava/sql/ResultSet;
@2.2.5
+#execute(Ljava/lang/String;)Z
+#execute(Ljava/lang/String;I)Z
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#executeBatch()[I
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#executeLargeBatch()[J
+#executeLargeUpdate(Ljava/lang/String;)J
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J
@2.3.0
+#getResultSet()Ljava/sql/ResultSet;
@2.4.0
+#toString()Ljava/lang/String;
@2.4.2
-###com/zaxxer/hikari/proxy/StatementProxy

+###com/zaxxer/hikari/util/ClassLoaderUtils
@1.1.3
+#<init>()V
+#getClassLoader()Ljava/lang/ClassLoader;
+#loadClass(Ljava/lang/String;)Ljava/lang/Class;
+#getAllInterfaces(Ljava/lang/Class;)Ljava/util/Set;
@2.2.0
-#getClassLoader()Ljava/lang/ClassLoader;
-#loadClass(Ljava/lang/String;)Ljava/lang/Class;
@2.4.0
-###com/zaxxer/hikari/util/ClassLoaderUtils

+###com/zaxxer/hikari/util/PropertyBeanSetter
@1.1.3
+#<init>()V
+#setTargetFromProperties(Ljava/lang/Object;Ljava/util/Properties;)V
@1.3.7
+#getPropertyNames(Ljava/lang/Class;)Ljava/util/Set;
@1.3.9
+#getProperty(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0
+#copyProperties(Ljava/util/Properties;)Ljava/util/Properties;
@2.4.0
-###com/zaxxer/hikari/util/PropertyBeanSetter

+###com/zaxxer/hikari/HikariConfigMXBean
@2.3.9
+#getConnectionTimeout()J
+#setConnectionTimeout(J)V
+#getValidationTimeout()J
+#setValidationTimeout(J)V
+#getIdleTimeout()J
+#setIdleTimeout(J)V
+#getLeakDetectionThreshold()J
+#setLeakDetectionThreshold(J)V
+#getMaxLifetime()J
+#setMaxLifetime(J)V
+#getMinimumIdle()I
+#setMinimumIdle(I)V
+#getMaximumPoolSize()I
+#setMaximumPoolSize(I)V
+#getPoolName()Ljava/lang/String;
@2.4.1
+#setPassword(Ljava/lang/String;)V
+#setUsername(Ljava/lang/String;)V
@3.1.0
+#getCatalog()Ljava/lang/String;
+#setCatalog(Ljava/lang/String;)V

+###com/zaxxer/hikari/HikariJNDIFactory
@1.3.7
+#<init>()V
+#getObjectInstance(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljava/lang/Object;

+###com/zaxxer/hikari/HikariPoolMXBean
@2.4.0
+#getIdleConnections()I
+#getActiveConnections()I
+#getTotalConnections()I
+#getThreadsAwaitingConnection()I
+#softEvictConnections()V
+#suspendPool()V
+#resumePool()V

+###com/zaxxer/hikari/hibernate/HikariConfigurationUtil
@1.2.5
+#<init>()V
+#loadConfiguration(Ljava/util/Map;)Lcom/zaxxer/hikari/HikariConfig;

+###com/zaxxer/hikari/hibernate/HikariConnectionProvider
@1.2.5
+#<init>()V
+#configure(Ljava/util/Map;)V
+#getConnection()Ljava/sql/Connection;
+#closeConnection(Ljava/sql/Connection;)V
+#supportsAggressiveRelease()Z
+#isUnwrappableAs(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#stop()V

+###com/zaxxer/hikari/metrics/IMetricsTracker
@1.3.9
+#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/IMetricsTracker$MetricsContext;
+#recordConnectionUsage(J)V
@2.1.0
+#getIdleConnections()I
+#getActiveConnections()I
+#getTotalConnections()I
+#getThreadsAwaitingConnection()I
@2.2.0
-###com/zaxxer/hikari/metrics/IMetricsTracker

+###com/zaxxer/hikari/metrics/MetricsTracker
@1.3.4
+#<init>()V
+#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/MetricsTracker$Context;
+#recordConnectionUsage(J)V
@1.3.9
+#<init>(Ljava/lang/String;)V
+#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/IMetricsTracker$MetricsContext;
-#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/MetricsTracker$Context;
@2.1.0
+#<init>(Lcom/zaxxer/hikari/pool/HikariPool;)V
+#getIdleConnections()I
+#getActiveConnections()I
+#getTotalConnections()I
+#getThreadsAwaitingConnection()I
-#<init>()V
-#<init>(Ljava/lang/String;)V
@2.2.0
+#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/MetricsTracker$MetricsContext;
+#recordConnectionUsage(Lcom/zaxxer/hikari/pool/PoolBagEntry;)V
-#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/IMetricsTracker$MetricsContext;
-#recordConnectionUsage(J)V
-#getIdleConnections()I
-#getActiveConnections()I
-#getTotalConnections()I
-#getThreadsAwaitingConnection()I
@2.3.0
+#<init>(Lcom/zaxxer/hikari/pool/BaseHikariPool;)V
+#close()V
-#<init>(Lcom/zaxxer/hikari/pool/HikariPool;)V
@2.4.0
+#<init>()V
+#recordConnectionRequest()Lcom/zaxxer/hikari/metrics/MetricsTracker$MetricsContext;
-#<init>(Lcom/zaxxer/hikari/pool/BaseHikariPool;)V
-#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/MetricsTracker$MetricsContext;
@2.4.2
+#recordConnectionAcquiredNanos(J)V
+#recordConnectionUsageMillis(J)V
-#recordConnectionRequest()Lcom/zaxxer/hikari/metrics/MetricsTracker$MetricsContext;
-#recordConnectionUsage(Lcom/zaxxer/hikari/pool/PoolBagEntry;)V
@2.4.4
+#recordConnectionTimeout()V
@2.6.0
-#recordConnectionAcquiredNanos(J)V
-#recordConnectionUsageMillis(J)V
-#recordConnectionTimeout()V
-#close()V

+###com/zaxxer/hikari/metrics/MetricsTrackerFactory
@2.4.0
+#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/MetricsTracker;
@2.6.0
+#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/IMetricsTracker;
-#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/MetricsTracker;

+###com/zaxxer/hikari/metrics/PoolStats
@2.4.0
+#<init>(J)V
@2.4.2
+#getTotalConnections()I
+#getIdleConnections()I
+#getActiveConnections()I
+#getPendingThreads()I
@2.7.9
+#getMaxConnections()I
+#getMinConnections()I

+###com/zaxxer/hikari/metrics/dropwizard/CodaHaleMetricsTracker
@2.4.2
+#<init>(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;Lcom/codahale/metrics/MetricRegistry;)V
+#close()V
+#recordConnectionAcquiredNanos(J)V
+#recordConnectionUsageMillis(J)V
+#getConnectionAcquisitionTimer()Lcom/codahale/metrics/Timer;
+#getConnectionDurationHistogram()Lcom/codahale/metrics/Histogram;
@2.4.4
+#recordConnectionTimeout()V
@2.6.0
+#recordConnectionCreatedMillis(J)V
+#getConnectionCreationHistogram()Lcom/codahale/metrics/Histogram;
@3.3.0
-#<init>(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;Lcom/codahale/metrics/MetricRegistry;)V

+###com/zaxxer/hikari/metrics/dropwizard/CodahaleHealthChecker
@2.4.2
+#registerHealthChecks(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/zaxxer/hikari/HikariConfig;Lcom/codahale/metrics/health/HealthCheckRegistry;)V

+###com/zaxxer/hikari/metrics/dropwizard/CodahaleMetricsTrackerFactory
@2.4.2
+#<init>(Lcom/codahale/metrics/MetricRegistry;)V
+#getRegistry()Lcom/codahale/metrics/MetricRegistry;
+#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/MetricsTracker;
@2.6.0
+#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/IMetricsTracker;
-#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/MetricsTracker;

+###com/zaxxer/hikari/metrics/micrometer/MicrometerMetricsTracker
@2.7.0
+#recordConnectionAcquiredNanos(J)V
+#recordConnectionUsageMillis(J)V
+#recordConnectionTimeout()V
+#recordConnectionCreatedMillis(J)V
@4.0.0
+#close()V

+###com/zaxxer/hikari/metrics/micrometer/MicrometerMetricsTrackerFactory
@2.7.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/IMetricsTracker;

+###com/zaxxer/hikari/metrics/prometheus/PrometheusHistogramMetricsTrackerFactory
@3.4.0
+#<init>()V
+#<init>(Lio/prometheus/client/CollectorRegistry;)V
+#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/IMetricsTracker;

+###com/zaxxer/hikari/metrics/prometheus/PrometheusMetricsTrackerFactory$RegistrationStatus
@3.4.0
+#values()[Lcom/zaxxer/hikari/metrics/prometheus/PrometheusMetricsTrackerFactory$RegistrationStatus;
+#valueOf(Ljava/lang/String;)Lcom/zaxxer/hikari/metrics/prometheus/PrometheusMetricsTrackerFactory$RegistrationStatus;
@4.0.0
-###com/zaxxer/hikari/metrics/prometheus/PrometheusMetricsTrackerFactory$RegistrationStatus

+###com/zaxxer/hikari/metrics/prometheus/PrometheusMetricsTrackerFactory
@2.4.7
+#<init>()V
+#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/MetricsTracker;
@2.6.0
+#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/IMetricsTracker;
-#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/MetricsTracker;
@3.3.0
+#<init>(Lio/prometheus/client/CollectorRegistry;)V

+###com/zaxxer/hikari/pool/HikariPool$PoolInitializationException
@2.4.2
+#<init>(Ljava/lang/Throwable;)V

+###com/zaxxer/hikari/pool/HikariPool
@1.3.7
+#<init>(Lcom/zaxxer/hikari/HikariConfig;)V
+#<init>(Lcom/zaxxer/hikari/HikariConfig;Ljava/lang/String;Ljava/lang/String;)V
+#getConnection()Ljava/sql/Connection;
+#releaseConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#toString()Ljava/lang/String;
+#shutdown()V
+#getDataSource()Ljavax/sql/DataSource;
+#closeConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#addBagItem()V
+#getActiveConnections()I
+#getIdleConnections()I
+#getTotalConnections()I
+#getThreadsAwaitingConnection()I
+#closeIdleConnections()V
@1.3.9
+#releaseConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;Z)V
-#releaseConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
@2.0.0
+#dumpPoolState()V
@2.1.0
+#releaseConnection(Lcom/zaxxer/hikari/pool/PoolBagEntry;Z)V
+#evictConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#getConfiguration()Lcom/zaxxer/hikari/HikariConfig;
+#getMetricsTracker()Lcom/zaxxer/hikari/metrics/IMetricsTracker;
-#releaseConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;Z)V
-#closeConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
@2.2.0
+#logPoolState([Ljava/lang/String;)V
-#getMetricsTracker()Lcom/zaxxer/hikari/metrics/IMetricsTracker;
-#dumpPoolState()V
@2.2.5
+#softEvictConnections()V
-#closeIdleConnections()V
@2.3.0
-#getConnection()Ljava/sql/Connection;
-#releaseConnection(Lcom/zaxxer/hikari/pool/PoolBagEntry;Z)V
-#shutdown()V
-#evictConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
-#getDataSource()Ljavax/sql/DataSource;
-#getConfiguration()Lcom/zaxxer/hikari/HikariConfig;
-#toString()Ljava/lang/String;
-#getActiveConnections()I
-#getIdleConnections()I
-#getTotalConnections()I
-#getThreadsAwaitingConnection()I
-#logPoolState([Ljava/lang/String;)V
@2.3.7
-#addBagItem()V
@2.4.0
+#getConnection()Ljava/sql/Connection;
+#getConnection(J)Ljava/sql/Connection;
+#releaseConnection(Lcom/zaxxer/hikari/pool/PoolBagEntry;)V
+#shutdown()V
+#evictConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#getDataSource()Ljavax/sql/DataSource;
+#setMetricRegistry(Ljava/lang/Object;)V
+#setMetricsTrackerFactory(Lcom/zaxxer/hikari/metrics/MetricsTrackerFactory;)V
+#setHealthCheckRegistry(Ljava/lang/Object;)V
+#logPoolState([Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#addBagItem()Ljava/util/concurrent/Future;
+#getActiveConnections()I
+#getIdleConnections()I
+#getTotalConnections()I
+#getThreadsAwaitingConnection()I
+#suspendPool()V
+#resumePool()V
-#<init>(Lcom/zaxxer/hikari/HikariConfig;Ljava/lang/String;Ljava/lang/String;)V
@2.4.2
+#evictConnection(Ljava/sql/Connection;)V
+#getUnwrappedDataSource()Ljavax/sql/DataSource;
-#releaseConnection(Lcom/zaxxer/hikari/pool/PoolBagEntry;)V
-#evictConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
-#getDataSource()Ljavax/sql/DataSource;
-#logPoolState([Ljava/lang/String;)V
@2.6.0
+#addBagItem(I)Ljava/util/concurrent/Future;
-#addBagItem()Ljava/util/concurrent/Future;
@2.6.2
+#addBagItem(I)V
-#addBagItem(I)Ljava/util/concurrent/Future;

+###com/zaxxer/hikari/pool/HikariProxyCallableStatement
@2.4.2
+#executeQuery()Ljava/sql/ResultSet;
+#executeUpdate()I
+#setNull(II)V
+#setBoolean(IZ)V
+#setByte(IB)V
+#setShort(IS)V
+#setInt(II)V
+#setLong(IJ)V
+#setFloat(IF)V
+#setDouble(ID)V
+#setBigDecimal(ILjava/math/BigDecimal;)V
+#setString(ILjava/lang/String;)V
+#setBytes(I[B)V
+#setDate(ILjava/sql/Date;)V
+#setTime(ILjava/sql/Time;)V
+#setTimestamp(ILjava/sql/Timestamp;)V
+#setAsciiStream(ILjava/io/InputStream;I)V
+#setUnicodeStream(ILjava/io/InputStream;I)V
+#setBinaryStream(ILjava/io/InputStream;I)V
+#clearParameters()V
+#setObject(ILjava/lang/Object;I)V
+#setObject(ILjava/lang/Object;)V
+#execute()Z
+#addBatch()V
+#setCharacterStream(ILjava/io/Reader;I)V
+#setRef(ILjava/sql/Ref;)V
+#setBlob(ILjava/sql/Blob;)V
+#setClob(ILjava/sql/Clob;)V
+#setArray(ILjava/sql/Array;)V
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#setDate(ILjava/sql/Date;Ljava/util/Calendar;)V
+#setTime(ILjava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
+#setNull(IILjava/lang/String;)V
+#setURL(ILjava/net/URL;)V
+#getParameterMetaData()Ljava/sql/ParameterMetaData;
+#setRowId(ILjava/sql/RowId;)V
+#setNString(ILjava/lang/String;)V
+#setNCharacterStream(ILjava/io/Reader;J)V
+#setNClob(ILjava/sql/NClob;)V
+#setClob(ILjava/io/Reader;J)V
+#setBlob(ILjava/io/InputStream;J)V
+#setNClob(ILjava/io/Reader;J)V
+#setSQLXML(ILjava/sql/SQLXML;)V
+#setObject(ILjava/lang/Object;II)V
+#setAsciiStream(ILjava/io/InputStream;J)V
+#setBinaryStream(ILjava/io/InputStream;J)V
+#setCharacterStream(ILjava/io/Reader;J)V
+#setAsciiStream(ILjava/io/InputStream;)V
+#setBinaryStream(ILjava/io/InputStream;)V
+#setCharacterStream(ILjava/io/Reader;)V
+#setNCharacterStream(ILjava/io/Reader;)V
+#setClob(ILjava/io/Reader;)V
+#setBlob(ILjava/io/InputStream;)V
+#setNClob(ILjava/io/Reader;)V
+#isWrapperFor(Ljava/lang/Class;)Z
+#registerOutParameter(II)V
+#registerOutParameter(III)V
+#wasNull()Z
+#getString(I)Ljava/lang/String;
+#getBoolean(I)Z
+#getByte(I)B
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getFloat(I)F
+#getDouble(I)D
+#getBigDecimal(II)Ljava/math/BigDecimal;
+#getBytes(I)[B
+#getDate(I)Ljava/sql/Date;
+#getTime(I)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getObject(I)Ljava/lang/Object;
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getRef(I)Ljava/sql/Ref;
+#getBlob(I)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getArray(I)Ljava/sql/Array;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#registerOutParameter(IILjava/lang/String;)V
+#registerOutParameter(Ljava/lang/String;I)V
+#registerOutParameter(Ljava/lang/String;II)V
+#registerOutParameter(Ljava/lang/String;ILjava/lang/String;)V
+#getURL(I)Ljava/net/URL;
+#setURL(Ljava/lang/String;Ljava/net/URL;)V
+#setNull(Ljava/lang/String;I)V
+#setBoolean(Ljava/lang/String;Z)V
+#setByte(Ljava/lang/String;B)V
+#setShort(Ljava/lang/String;S)V
+#setInt(Ljava/lang/String;I)V
+#setLong(Ljava/lang/String;J)V
+#setFloat(Ljava/lang/String;F)V
+#setDouble(Ljava/lang/String;D)V
+#setBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#setString(Ljava/lang/String;Ljava/lang/String;)V
+#setBytes(Ljava/lang/String;[B)V
+#setDate(Ljava/lang/String;Ljava/sql/Date;)V
+#setTime(Ljava/lang/String;Ljava/sql/Time;)V
+#setTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;II)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#setDate(Ljava/lang/String;Ljava/sql/Date;Ljava/util/Calendar;)V
+#setTime(Ljava/lang/String;Ljava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;Ljava/util/Calendar;)V
+#setNull(Ljava/lang/String;ILjava/lang/String;)V
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z
+#getByte(Ljava/lang/String;)B
+#getShort(Ljava/lang/String;)S
+#getInt(Ljava/lang/String;)I
+#getLong(Ljava/lang/String;)J
+#getFloat(Ljava/lang/String;)F
+#getDouble(Ljava/lang/String;)D
+#getBytes(Ljava/lang/String;)[B
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#setRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#setNString(Ljava/lang/String;Ljava/lang/String;)V
+#setNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#setNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#setClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#setBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#setSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;
+#getNString(I)Ljava/lang/String;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#setBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#setClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#setNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#setClob(Ljava/lang/String;Ljava/io/Reader;)V
+#setBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#setNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#getMaxFieldSize()I
+#setMaxFieldSize(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#setEscapeProcessing(Z)V
+#getQueryTimeout()I
+#setQueryTimeout(I)V
+#cancel()V
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setCursorName(Ljava/lang/String;)V
+#execute(Ljava/lang/String;)Z
+#getResultSet()Ljava/sql/ResultSet;
+#getUpdateCount()I
+#getMoreResults()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getResultSetConcurrency()I
+#getResultSetType()I
+#addBatch(Ljava/lang/String;)V
+#clearBatch()V
+#executeBatch()[I
+#getConnection()Ljava/sql/Connection;
+#getMoreResults(I)Z
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#getResultSetHoldability()I
+#isClosed()Z
+#setPoolable(Z)V
+#isPoolable()Z
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
@2.4.4
+#getLargeUpdateCount()J
+#setLargeMaxRows(J)V
+#getLargeMaxRows()J
+#executeLargeBatch()[J
+#executeLargeUpdate(Ljava/lang/String;)J
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J
+#setObject(ILjava/lang/Object;Ljava/sql/SQLType;I)V
+#setObject(ILjava/lang/Object;Ljava/sql/SQLType;)V
+#executeLargeUpdate()J
+#setObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;)V
+#registerOutParameter(ILjava/sql/SQLType;)V
+#registerOutParameter(ILjava/sql/SQLType;I)V
+#registerOutParameter(ILjava/sql/SQLType;Ljava/lang/String;)V
+#registerOutParameter(Ljava/lang/String;Ljava/sql/SQLType;)V
+#registerOutParameter(Ljava/lang/String;Ljava/sql/SQLType;I)V
+#registerOutParameter(Ljava/lang/String;Ljava/sql/SQLType;Ljava/lang/String;)V
@3.4.4
+#enquoteLiteral(Ljava/lang/String;)Ljava/lang/String;
+#enquoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;
+#isSimpleIdentifier(Ljava/lang/String;)Z
+#enquoteNCharLiteral(Ljava/lang/String;)Ljava/lang/String;
@3.4.5
-#enquoteLiteral(Ljava/lang/String;)Ljava/lang/String;
-#enquoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;
-#isSimpleIdentifier(Ljava/lang/String;)Z
-#enquoteNCharLiteral(Ljava/lang/String;)Ljava/lang/String;
@5.0.0
+#enquoteLiteral(Ljava/lang/String;)Ljava/lang/String;
+#enquoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;
+#isSimpleIdentifier(Ljava/lang/String;)Z
+#enquoteNCharLiteral(Ljava/lang/String;)Ljava/lang/String;

+###com/zaxxer/hikari/pool/HikariProxyConnection
@2.4.2
+#createStatement()Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#nativeSQL(Ljava/lang/String;)Ljava/lang/String;
+#setAutoCommit(Z)V
+#getAutoCommit()Z
+#commit()V
+#rollback()V
+#isClosed()Z
+#getMetaData()Ljava/sql/DatabaseMetaData;
+#setReadOnly(Z)V
+#isReadOnly()Z
+#setCatalog(Ljava/lang/String;)V
+#getCatalog()Ljava/lang/String;
+#setTransactionIsolation(I)V
+#getTransactionIsolation()I
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#createStatement(II)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#getTypeMap()Ljava/util/Map;
+#setTypeMap(Ljava/util/Map;)V
+#setHoldability(I)V
+#getHoldability()I
+#setSavepoint()Ljava/sql/Savepoint;
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#rollback(Ljava/sql/Savepoint;)V
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#createStatement(III)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#createClob()Ljava/sql/Clob;
+#createBlob()Ljava/sql/Blob;
+#createNClob()Ljava/sql/NClob;
+#createSQLXML()Ljava/sql/SQLXML;
+#isValid(I)Z
+#setClientInfo(Ljava/lang/String;Ljava/lang/String;)V
+#setClientInfo(Ljava/util/Properties;)V
+#getClientInfo(Ljava/lang/String;)Ljava/lang/String;
+#getClientInfo()Ljava/util/Properties;
+#createArrayOf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Array;
+#createStruct(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;
+#setSchema(Ljava/lang/String;)V
+#getSchema()Ljava/lang/String;
+#abort(Ljava/util/concurrent/Executor;)V
+#setNetworkTimeout(Ljava/util/concurrent/Executor;I)V
+#getNetworkTimeout()I
@3.4.4
+#beginRequest()V
+#endRequest()V
+#setShardingKeyIfValid(Ljava/sql/ShardingKey;Ljava/sql/ShardingKey;I)Z
+#setShardingKeyIfValid(Ljava/sql/ShardingKey;I)Z
+#setShardingKey(Ljava/sql/ShardingKey;Ljava/sql/ShardingKey;)V
+#setShardingKey(Ljava/sql/ShardingKey;)V
@3.4.5
-#beginRequest()V
-#endRequest()V
-#setShardingKeyIfValid(Ljava/sql/ShardingKey;Ljava/sql/ShardingKey;I)Z
-#setShardingKeyIfValid(Ljava/sql/ShardingKey;I)Z
-#setShardingKey(Ljava/sql/ShardingKey;Ljava/sql/ShardingKey;)V
-#setShardingKey(Ljava/sql/ShardingKey;)V
@5.0.0
+#beginRequest()V
+#endRequest()V
+#setShardingKeyIfValid(Ljava/sql/ShardingKey;Ljava/sql/ShardingKey;I)Z
+#setShardingKeyIfValid(Ljava/sql/ShardingKey;I)Z
+#setShardingKey(Ljava/sql/ShardingKey;Ljava/sql/ShardingKey;)V
+#setShardingKey(Ljava/sql/ShardingKey;)V

+###com/zaxxer/hikari/pool/HikariProxyDatabaseMetaData
@3.4.0
+#isWrapperFor(Ljava/lang/Class;)Z
+#allProceduresAreCallable()Z
+#allTablesAreSelectable()Z
+#getURL()Ljava/lang/String;
+#getUserName()Ljava/lang/String;
+#isReadOnly()Z
+#nullsAreSortedHigh()Z
+#nullsAreSortedLow()Z
+#nullsAreSortedAtStart()Z
+#nullsAreSortedAtEnd()Z
+#getDatabaseProductName()Ljava/lang/String;
+#getDatabaseProductVersion()Ljava/lang/String;
+#getDriverName()Ljava/lang/String;
+#getDriverVersion()Ljava/lang/String;
+#getDriverMajorVersion()I
+#getDriverMinorVersion()I
+#usesLocalFiles()Z
+#usesLocalFilePerTable()Z
+#supportsMixedCaseIdentifiers()Z
+#storesUpperCaseIdentifiers()Z
+#storesLowerCaseIdentifiers()Z
+#storesMixedCaseIdentifiers()Z
+#supportsMixedCaseQuotedIdentifiers()Z
+#storesUpperCaseQuotedIdentifiers()Z
+#storesLowerCaseQuotedIdentifiers()Z
+#storesMixedCaseQuotedIdentifiers()Z
+#getIdentifierQuoteString()Ljava/lang/String;
+#getSQLKeywords()Ljava/lang/String;
+#getNumericFunctions()Ljava/lang/String;
+#getStringFunctions()Ljava/lang/String;
+#getSystemFunctions()Ljava/lang/String;
+#getTimeDateFunctions()Ljava/lang/String;
+#getSearchStringEscape()Ljava/lang/String;
+#getExtraNameCharacters()Ljava/lang/String;
+#supportsAlterTableWithAddColumn()Z
+#supportsAlterTableWithDropColumn()Z
+#supportsColumnAliasing()Z
+#nullPlusNonNullIsNull()Z
+#supportsConvert()Z
+#supportsConvert(II)Z
+#supportsTableCorrelationNames()Z
+#supportsDifferentTableCorrelationNames()Z
+#supportsExpressionsInOrderBy()Z
+#supportsOrderByUnrelated()Z
+#supportsGroupBy()Z
+#supportsGroupByUnrelated()Z
+#supportsGroupByBeyondSelect()Z
+#supportsLikeEscapeClause()Z
+#supportsMultipleResultSets()Z
+#supportsMultipleTransactions()Z
+#supportsNonNullableColumns()Z
+#supportsMinimumSQLGrammar()Z
+#supportsCoreSQLGrammar()Z
+#supportsExtendedSQLGrammar()Z
+#supportsANSI92EntryLevelSQL()Z
+#supportsANSI92IntermediateSQL()Z
+#supportsANSI92FullSQL()Z
+#supportsIntegrityEnhancementFacility()Z
+#supportsOuterJoins()Z
+#supportsFullOuterJoins()Z
+#supportsLimitedOuterJoins()Z
+#getSchemaTerm()Ljava/lang/String;
+#getProcedureTerm()Ljava/lang/String;
+#getCatalogTerm()Ljava/lang/String;
+#isCatalogAtStart()Z
+#getCatalogSeparator()Ljava/lang/String;
+#supportsSchemasInDataManipulation()Z
+#supportsSchemasInProcedureCalls()Z
+#supportsSchemasInTableDefinitions()Z
+#supportsSchemasInIndexDefinitions()Z
+#supportsSchemasInPrivilegeDefinitions()Z
+#supportsCatalogsInDataManipulation()Z
+#supportsCatalogsInProcedureCalls()Z
+#supportsCatalogsInTableDefinitions()Z
+#supportsCatalogsInIndexDefinitions()Z
+#supportsCatalogsInPrivilegeDefinitions()Z
+#supportsPositionedDelete()Z
+#supportsPositionedUpdate()Z
+#supportsSelectForUpdate()Z
+#supportsStoredProcedures()Z
+#supportsSubqueriesInComparisons()Z
+#supportsSubqueriesInExists()Z
+#supportsSubqueriesInIns()Z
+#supportsSubqueriesInQuantifieds()Z
+#supportsCorrelatedSubqueries()Z
+#supportsUnion()Z
+#supportsUnionAll()Z
+#supportsOpenCursorsAcrossCommit()Z
+#supportsOpenCursorsAcrossRollback()Z
+#supportsOpenStatementsAcrossCommit()Z
+#supportsOpenStatementsAcrossRollback()Z
+#getMaxBinaryLiteralLength()I
+#getMaxCharLiteralLength()I
+#getMaxColumnNameLength()I
+#getMaxColumnsInGroupBy()I
+#getMaxColumnsInIndex()I
+#getMaxColumnsInOrderBy()I
+#getMaxColumnsInSelect()I
+#getMaxColumnsInTable()I
+#getMaxConnections()I
+#getMaxCursorNameLength()I
+#getMaxIndexLength()I
+#getMaxSchemaNameLength()I
+#getMaxProcedureNameLength()I
+#getMaxCatalogNameLength()I
+#getMaxRowSize()I
+#doesMaxRowSizeIncludeBlobs()Z
+#getMaxStatementLength()I
+#getMaxStatements()I
+#getMaxTableNameLength()I
+#getMaxTablesInSelect()I
+#getMaxUserNameLength()I
+#getDefaultTransactionIsolation()I
+#supportsTransactions()Z
+#supportsTransactionIsolationLevel(I)Z
+#supportsDataDefinitionAndDataManipulationTransactions()Z
+#supportsDataManipulationTransactionsOnly()Z
+#dataDefinitionCausesTransactionCommit()Z
+#dataDefinitionIgnoredInTransactions()Z
+#getProcedures(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getProcedureColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTables(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSchemas()Ljava/sql/ResultSet;
+#getCatalogs()Ljava/sql/ResultSet;
+#getTableTypes()Ljava/sql/ResultSet;
+#getColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getColumnPrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTablePrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getBestRowIdentifier(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Ljava/sql/ResultSet;
+#getVersionColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getPrimaryKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getImportedKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getExportedKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getCrossReference(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTypeInfo()Ljava/sql/ResultSet;
+#getIndexInfo(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/sql/ResultSet;
+#supportsResultSetType(I)Z
+#supportsResultSetConcurrency(II)Z
+#ownUpdatesAreVisible(I)Z
+#ownDeletesAreVisible(I)Z
+#ownInsertsAreVisible(I)Z
+#othersUpdatesAreVisible(I)Z
+#othersDeletesAreVisible(I)Z
+#othersInsertsAreVisible(I)Z
+#updatesAreDetected(I)Z
+#deletesAreDetected(I)Z
+#insertsAreDetected(I)Z
+#supportsBatchUpdates()Z
+#getUDTs(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[I)Ljava/sql/ResultSet;
+#supportsSavepoints()Z
+#supportsNamedParameters()Z
+#supportsMultipleOpenResults()Z
+#supportsGetGeneratedKeys()Z
+#getSuperTypes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSuperTables(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getAttributes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#supportsResultSetHoldability(I)Z
+#getResultSetHoldability()I
+#getDatabaseMajorVersion()I
+#getDatabaseMinorVersion()I
+#getJDBCMajorVersion()I
+#getJDBCMinorVersion()I
+#getSQLStateType()I
+#locatorsUpdateCopy()Z
+#supportsStatementPooling()Z
+#getRowIdLifetime()Ljava/sql/RowIdLifetime;
+#getSchemas(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#supportsStoredFunctionsUsingCallSyntax()Z
+#autoCommitFailureClosesAllResultSets()Z
+#getClientInfoProperties()Ljava/sql/ResultSet;
+#getFunctions(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getFunctionColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getPseudoColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#generatedKeyAlwaysReturned()Z
+#getMaxLogicalLobSize()J
+#supportsRefCursors()Z
@3.4.4
+#supportsSharding()Z
@3.4.5
-#supportsSharding()Z
@5.0.0
+#supportsSharding()Z

+###com/zaxxer/hikari/pool/HikariProxyPreparedStatement
@2.4.2
+#executeQuery()Ljava/sql/ResultSet;
+#executeUpdate()I
+#setNull(II)V
+#setBoolean(IZ)V
+#setByte(IB)V
+#setShort(IS)V
+#setInt(II)V
+#setLong(IJ)V
+#setFloat(IF)V
+#setDouble(ID)V
+#setBigDecimal(ILjava/math/BigDecimal;)V
+#setString(ILjava/lang/String;)V
+#setBytes(I[B)V
+#setDate(ILjava/sql/Date;)V
+#setTime(ILjava/sql/Time;)V
+#setTimestamp(ILjava/sql/Timestamp;)V
+#setAsciiStream(ILjava/io/InputStream;I)V
+#setUnicodeStream(ILjava/io/InputStream;I)V
+#setBinaryStream(ILjava/io/InputStream;I)V
+#clearParameters()V
+#setObject(ILjava/lang/Object;I)V
+#setObject(ILjava/lang/Object;)V
+#execute()Z
+#addBatch()V
+#setCharacterStream(ILjava/io/Reader;I)V
+#setRef(ILjava/sql/Ref;)V
+#setBlob(ILjava/sql/Blob;)V
+#setClob(ILjava/sql/Clob;)V
+#setArray(ILjava/sql/Array;)V
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#setDate(ILjava/sql/Date;Ljava/util/Calendar;)V
+#setTime(ILjava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
+#setNull(IILjava/lang/String;)V
+#setURL(ILjava/net/URL;)V
+#getParameterMetaData()Ljava/sql/ParameterMetaData;
+#setRowId(ILjava/sql/RowId;)V
+#setNString(ILjava/lang/String;)V
+#setNCharacterStream(ILjava/io/Reader;J)V
+#setNClob(ILjava/sql/NClob;)V
+#setClob(ILjava/io/Reader;J)V
+#setBlob(ILjava/io/InputStream;J)V
+#setNClob(ILjava/io/Reader;J)V
+#setSQLXML(ILjava/sql/SQLXML;)V
+#setObject(ILjava/lang/Object;II)V
+#setAsciiStream(ILjava/io/InputStream;J)V
+#setBinaryStream(ILjava/io/InputStream;J)V
+#setCharacterStream(ILjava/io/Reader;J)V
+#setAsciiStream(ILjava/io/InputStream;)V
+#setBinaryStream(ILjava/io/InputStream;)V
+#setCharacterStream(ILjava/io/Reader;)V
+#setNCharacterStream(ILjava/io/Reader;)V
+#setClob(ILjava/io/Reader;)V
+#setBlob(ILjava/io/InputStream;)V
+#setNClob(ILjava/io/Reader;)V
+#isWrapperFor(Ljava/lang/Class;)Z
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#getMaxFieldSize()I
+#setMaxFieldSize(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#setEscapeProcessing(Z)V
+#getQueryTimeout()I
+#setQueryTimeout(I)V
+#cancel()V
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setCursorName(Ljava/lang/String;)V
+#execute(Ljava/lang/String;)Z
+#getResultSet()Ljava/sql/ResultSet;
+#getUpdateCount()I
+#getMoreResults()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getResultSetConcurrency()I
+#getResultSetType()I
+#addBatch(Ljava/lang/String;)V
+#clearBatch()V
+#executeBatch()[I
+#getConnection()Ljava/sql/Connection;
+#getMoreResults(I)Z
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#getResultSetHoldability()I
+#isClosed()Z
+#setPoolable(Z)V
+#isPoolable()Z
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
@2.4.4
+#getLargeUpdateCount()J
+#setLargeMaxRows(J)V
+#getLargeMaxRows()J
+#executeLargeBatch()[J
+#executeLargeUpdate(Ljava/lang/String;)J
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J
+#setObject(ILjava/lang/Object;Ljava/sql/SQLType;I)V
+#setObject(ILjava/lang/Object;Ljava/sql/SQLType;)V
+#executeLargeUpdate()J
@3.4.4
+#enquoteLiteral(Ljava/lang/String;)Ljava/lang/String;
+#enquoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;
+#isSimpleIdentifier(Ljava/lang/String;)Z
+#enquoteNCharLiteral(Ljava/lang/String;)Ljava/lang/String;
@3.4.5
-#enquoteLiteral(Ljava/lang/String;)Ljava/lang/String;
-#enquoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;
-#isSimpleIdentifier(Ljava/lang/String;)Z
-#enquoteNCharLiteral(Ljava/lang/String;)Ljava/lang/String;
@5.0.0
+#enquoteLiteral(Ljava/lang/String;)Ljava/lang/String;
+#enquoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;
+#isSimpleIdentifier(Ljava/lang/String;)Z
+#enquoteNCharLiteral(Ljava/lang/String;)Ljava/lang/String;

+###com/zaxxer/hikari/pool/HikariProxyResultSet
@2.4.2
+#next()Z
+#close()V
+#wasNull()Z
+#getString(I)Ljava/lang/String;
+#getBoolean(I)Z
+#getByte(I)B
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getFloat(I)F
+#getDouble(I)D
+#getBigDecimal(II)Ljava/math/BigDecimal;
+#getBytes(I)[B
+#getDate(I)Ljava/sql/Date;
+#getTime(I)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getAsciiStream(I)Ljava/io/InputStream;
+#getUnicodeStream(I)Ljava/io/InputStream;
+#getBinaryStream(I)Ljava/io/InputStream;
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z
+#getByte(Ljava/lang/String;)B
+#getShort(Ljava/lang/String;)S
+#getInt(Ljava/lang/String;)I
+#getLong(Ljava/lang/String;)J
+#getFloat(Ljava/lang/String;)F
+#getDouble(Ljava/lang/String;)D
+#getBigDecimal(Ljava/lang/String;I)Ljava/math/BigDecimal;
+#getBytes(Ljava/lang/String;)[B
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getAsciiStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getUnicodeStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getBinaryStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#getCursorName()Ljava/lang/String;
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#getObject(I)Ljava/lang/Object;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#findColumn(Ljava/lang/String;)I
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#isBeforeFirst()Z
+#isAfterLast()Z
+#isFirst()Z
+#isLast()Z
+#beforeFirst()V
+#afterLast()V
+#first()Z
+#last()Z
+#getRow()I
+#absolute(I)Z
+#relative(I)Z
+#previous()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getType()I
+#getConcurrency()I
+#rowUpdated()Z
+#rowInserted()Z
+#rowDeleted()Z
+#updateNull(I)V
+#updateBoolean(IZ)V
+#updateByte(IB)V
+#updateShort(IS)V
+#updateInt(II)V
+#updateLong(IJ)V
+#updateFloat(IF)V
+#updateDouble(ID)V
+#updateBigDecimal(ILjava/math/BigDecimal;)V
+#updateString(ILjava/lang/String;)V
+#updateBytes(I[B)V
+#updateDate(ILjava/sql/Date;)V
+#updateTime(ILjava/sql/Time;)V
+#updateTimestamp(ILjava/sql/Timestamp;)V
+#updateAsciiStream(ILjava/io/InputStream;I)V
+#updateBinaryStream(ILjava/io/InputStream;I)V
+#updateCharacterStream(ILjava/io/Reader;I)V
+#updateObject(ILjava/lang/Object;I)V
+#updateObject(ILjava/lang/Object;)V
+#updateNull(Ljava/lang/String;)V
+#updateBoolean(Ljava/lang/String;Z)V
+#updateByte(Ljava/lang/String;B)V
+#updateShort(Ljava/lang/String;S)V
+#updateInt(Ljava/lang/String;I)V
+#updateLong(Ljava/lang/String;J)V
+#updateFloat(Ljava/lang/String;F)V
+#updateDouble(Ljava/lang/String;D)V
+#updateBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#updateString(Ljava/lang/String;Ljava/lang/String;)V
+#updateBytes(Ljava/lang/String;[B)V
+#updateDate(Ljava/lang/String;Ljava/sql/Date;)V
+#updateTime(Ljava/lang/String;Ljava/sql/Time;)V
+#updateTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;)V
+#insertRow()V
+#updateRow()V
+#deleteRow()V
+#refreshRow()V
+#cancelRowUpdates()V
+#moveToInsertRow()V
+#moveToCurrentRow()V
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getRef(I)Ljava/sql/Ref;
+#getBlob(I)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getArray(I)Ljava/sql/Array;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getURL(I)Ljava/net/URL;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#updateRef(ILjava/sql/Ref;)V
+#updateRef(Ljava/lang/String;Ljava/sql/Ref;)V
+#updateBlob(ILjava/sql/Blob;)V
+#updateBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#updateClob(ILjava/sql/Clob;)V
+#updateClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#updateArray(ILjava/sql/Array;)V
+#updateArray(Ljava/lang/String;Ljava/sql/Array;)V
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#updateRowId(ILjava/sql/RowId;)V
+#updateRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#getHoldability()I
+#isClosed()Z
+#updateNString(ILjava/lang/String;)V
+#updateNString(Ljava/lang/String;Ljava/lang/String;)V
+#updateNClob(ILjava/sql/NClob;)V
+#updateNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;
+#updateSQLXML(ILjava/sql/SQLXML;)V
+#updateSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#getNString(I)Ljava/lang/String;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#updateNCharacterStream(ILjava/io/Reader;J)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateAsciiStream(ILjava/io/InputStream;J)V
+#updateBinaryStream(ILjava/io/InputStream;J)V
+#updateCharacterStream(ILjava/io/Reader;J)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateBlob(ILjava/io/InputStream;J)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateClob(ILjava/io/Reader;J)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNClob(ILjava/io/Reader;J)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNCharacterStream(ILjava/io/Reader;)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateAsciiStream(ILjava/io/InputStream;)V
+#updateBinaryStream(ILjava/io/InputStream;)V
+#updateCharacterStream(ILjava/io/Reader;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateBlob(ILjava/io/InputStream;)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateClob(ILjava/io/Reader;)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;)V
+#updateNClob(ILjava/io/Reader;)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
@2.4.4
+#updateObject(ILjava/lang/Object;Ljava/sql/SQLType;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;I)V
+#updateObject(ILjava/lang/Object;Ljava/sql/SQLType;)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;)V

+###com/zaxxer/hikari/pool/HikariProxyStatement
@2.4.2
+#isWrapperFor(Ljava/lang/Class;)Z
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#getMaxFieldSize()I
+#setMaxFieldSize(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#setEscapeProcessing(Z)V
+#getQueryTimeout()I
+#setQueryTimeout(I)V
+#cancel()V
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setCursorName(Ljava/lang/String;)V
+#execute(Ljava/lang/String;)Z
+#getResultSet()Ljava/sql/ResultSet;
+#getUpdateCount()I
+#getMoreResults()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getResultSetConcurrency()I
+#getResultSetType()I
+#addBatch(Ljava/lang/String;)V
+#clearBatch()V
+#executeBatch()[I
+#getConnection()Ljava/sql/Connection;
+#getMoreResults(I)Z
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#getResultSetHoldability()I
+#isClosed()Z
+#setPoolable(Z)V
+#isPoolable()Z
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
@2.4.4
+#getLargeUpdateCount()J
+#setLargeMaxRows(J)V
+#getLargeMaxRows()J
+#executeLargeBatch()[J
+#executeLargeUpdate(Ljava/lang/String;)J
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J
@3.4.4
+#enquoteLiteral(Ljava/lang/String;)Ljava/lang/String;
+#enquoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;
+#isSimpleIdentifier(Ljava/lang/String;)Z
+#enquoteNCharLiteral(Ljava/lang/String;)Ljava/lang/String;
@3.4.5
-#enquoteLiteral(Ljava/lang/String;)Ljava/lang/String;
-#enquoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;
-#isSimpleIdentifier(Ljava/lang/String;)Z
-#enquoteNCharLiteral(Ljava/lang/String;)Ljava/lang/String;
@5.0.0
+#enquoteLiteral(Ljava/lang/String;)Ljava/lang/String;
+#enquoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;
+#isSimpleIdentifier(Ljava/lang/String;)Z
+#enquoteNCharLiteral(Ljava/lang/String;)Ljava/lang/String;

+###com/zaxxer/hikari/pool/ProxyCallableStatement
@2.4.2

+###com/zaxxer/hikari/pool/ProxyConnection
@2.4.2
+#toString()Ljava/lang/String;
+#close()V
+#isClosed()Z
+#createStatement()Ljava/sql/Statement;
+#createStatement(II)Ljava/sql/Statement;
+#createStatement(III)Ljava/sql/Statement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#commit()V
+#rollback()V
+#rollback(Ljava/sql/Savepoint;)V
+#setAutoCommit(Z)V
+#setReadOnly(Z)V
+#setTransactionIsolation(I)V
+#setCatalog(Ljava/lang/String;)V
+#setNetworkTimeout(Ljava/util/concurrent/Executor;I)V
+#isWrapperFor(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
@2.6.2
+#getMetaData()Ljava/sql/DatabaseMetaData;
@2.7.0
+#setSchema(Ljava/lang/String;)V

+###com/zaxxer/hikari/pool/ProxyDatabaseMetaData
@3.4.0
+#toString()Ljava/lang/String;
+#getConnection()Ljava/sql/Connection;
+#getProcedures(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getProcedureColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTables(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSchemas()Ljava/sql/ResultSet;
+#getCatalogs()Ljava/sql/ResultSet;
+#getTableTypes()Ljava/sql/ResultSet;
+#getColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getColumnPrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTablePrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getBestRowIdentifier(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Ljava/sql/ResultSet;
+#getVersionColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getPrimaryKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getImportedKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getExportedKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getCrossReference(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTypeInfo()Ljava/sql/ResultSet;
+#getIndexInfo(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/sql/ResultSet;
+#getUDTs(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[I)Ljava/sql/ResultSet;
+#getSuperTypes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSuperTables(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getAttributes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSchemas(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getClientInfoProperties()Ljava/sql/ResultSet;
+#getFunctions(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getFunctionColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getPseudoColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;

+###com/zaxxer/hikari/pool/ProxyFactory
@2.4.2

+###com/zaxxer/hikari/pool/ProxyPreparedStatement
@2.4.2
+#execute()Z
+#executeQuery()Ljava/sql/ResultSet;
+#executeUpdate()I
+#executeLargeUpdate()J

+###com/zaxxer/hikari/pool/ProxyResultSet
@2.4.2
+#toString()Ljava/lang/String;
+#getStatement()Ljava/sql/Statement;
+#updateRow()V
+#insertRow()V
+#deleteRow()V
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;

+###com/zaxxer/hikari/pool/ProxyStatement
@2.4.2
+#toString()Ljava/lang/String;
+#close()V
+#getConnection()Ljava/sql/Connection;
+#execute(Ljava/lang/String;)Z
+#execute(Ljava/lang/String;I)Z
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#executeBatch()[I
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#executeLargeBatch()[J
+#executeLargeUpdate(Ljava/lang/String;)J
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J
+#getResultSet()Ljava/sql/ResultSet;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
@2.7.5
+#getGeneratedKeys()Ljava/sql/ResultSet;

+###com/zaxxer/hikari/util/ClockSource$Factory
@2.4.0
+#<init>()V

+###com/zaxxer/hikari/util/ClockSource$MillisecondClockSource
@2.4.0
+#<init>()V
+#currentTime()J
+#elapsedMillis(J)J
+#elapsedMillis(JJ)J
+#toMillis(J)J
+#plusMillis(JJ)J
@2.4.2
+#elapsedNanos(J)J
+#elapsedNanos(JJ)J
+#getSourceTimeUnit()Ljava/util/concurrent/TimeUnit;
@2.4.4
+#toNanos(J)J
@2.6.0
+#currentTime0()J
+#elapsedMillis0(J)J
+#elapsedMillis0(JJ)J
+#elapsedNanos0(J)J
+#elapsedNanos0(JJ)J
+#toMillis0(J)J
+#toNanos0(J)J
+#plusMillis0(JJ)J
+#getSourceTimeUnit0()Ljava/util/concurrent/TimeUnit;
-#currentTime()J
-#elapsedMillis(J)J
-#elapsedMillis(JJ)J
-#elapsedNanos(J)J
-#elapsedNanos(JJ)J
-#toMillis(J)J
-#toNanos(J)J
-#plusMillis(JJ)J
-#getSourceTimeUnit()Ljava/util/concurrent/TimeUnit;

+###com/zaxxer/hikari/util/ClockSource$NanosecondClockSource
@2.4.0
+#<init>()V
+#currentTime()J
+#toMillis(J)J
+#elapsedMillis(J)J
+#elapsedMillis(JJ)J
+#plusMillis(JJ)J
@2.4.2
+#elapsedNanos(J)J
+#elapsedNanos(JJ)J
+#getSourceTimeUnit()Ljava/util/concurrent/TimeUnit;
@2.4.4
+#toNanos(J)J
+#elapsedDisplayString(JJ)Ljava/lang/String;
@2.6.0
+#currentTime0()J
+#toMillis0(J)J
+#toNanos0(J)J
+#elapsedMillis0(J)J
+#elapsedMillis0(JJ)J
+#elapsedNanos0(J)J
+#elapsedNanos0(JJ)J
+#plusMillis0(JJ)J
+#getSourceTimeUnit0()Ljava/util/concurrent/TimeUnit;
-#currentTime()J
-#toMillis(J)J
-#toNanos(J)J
-#elapsedMillis(J)J
-#elapsedMillis(JJ)J
-#elapsedNanos(J)J
-#elapsedNanos(JJ)J
-#plusMillis(JJ)J
-#getSourceTimeUnit()Ljava/util/concurrent/TimeUnit;
-#elapsedDisplayString(JJ)Ljava/lang/String;

+###com/zaxxer/hikari/util/ClockSource
@2.4.0
+#currentTime()J
+#toMillis(J)J
+#elapsedMillis(J)J
+#elapsedMillis(JJ)J
+#plusMillis(JJ)J
@2.4.2
+#elapsedNanos(J)J
+#elapsedNanos(JJ)J
+#getSourceTimeUnit()Ljava/util/concurrent/TimeUnit;
@2.4.4
+#toNanos(J)J
+#elapsedDisplayString(JJ)Ljava/lang/String;
@2.6.0
+#currentTime0()J
+#toMillis0(J)J
+#toNanos0(J)J
+#elapsedMillis0(J)J
+#elapsedMillis0(JJ)J
+#elapsedNanos0(J)J
+#elapsedNanos0(JJ)J
+#plusMillis0(JJ)J
+#getSourceTimeUnit0()Ljava/util/concurrent/TimeUnit;
+#elapsedDisplayString0(JJ)Ljava/lang/String;

+###com/zaxxer/hikari/util/ConcurrentBag$IBagStateListener
@1.3.3
+#bagIsEmpty()V
@1.3.4
+#addBagItem()V
-#bagIsEmpty()V
@2.3.0
-###com/zaxxer/hikari/util/ConcurrentBag$IBagStateListener

+###com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry
@2.4.0
+#state()Ljava/util/concurrent/atomic/AtomicInteger;
@2.4.1
+#compareAndSet(II)Z
+#getState()I
-#state()Ljava/util/concurrent/atomic/AtomicInteger;
@2.4.2
+#lazySet(I)V
@2.5.1
+#setState(I)V
-#lazySet(I)V

+###com/zaxxer/hikari/util/ConcurrentBag
@1.3.0
+#<init>()V
+#borrow(JLjava/util/concurrent/TimeUnit;)Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;
+#requite(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;)V
+#add(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;)V
+#remove(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;)V
+#values(I)Ljava/util/List;
+#reserve(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;)Z
+#unreserve(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;)V
@1.3.3
+#addBagStateListener(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagStateListener;)V
+#getPendingQueue()I
@1.3.4
+#getCount(I)I
+#size()I
@2.0.0
+#getCount(I)J
+#dumpState()V
-#getCount(I)I
@2.1.0
+#<init>(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagStateListener;)V
+#borrow(JLjava/util/concurrent/TimeUnit;)Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;
+#requite(Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;)V
+#add(Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;)V
+#remove(Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;)V
+#reserve(Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;)Z
+#unreserve(Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;)V
+#getCount(I)I
-#borrow(JLjava/util/concurrent/TimeUnit;)Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;
-#requite(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;)V
-#add(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;)V
-#remove(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;)V
-#reserve(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;)Z
-#unreserve(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagManagable;)V
-#addBagStateListener(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagStateListener;)V
-#getCount(I)J
@2.2.0
+#close()V
-#<init>()V
@2.3.0
+#<init>(Lcom/zaxxer/hikari/util/IBagStateListener;)V
+#borrow(JLjava/util/concurrent/TimeUnit;)Lcom/zaxxer/hikari/util/IConcurrentBagEntry;
+#requite(Lcom/zaxxer/hikari/util/IConcurrentBagEntry;)V
+#add(Lcom/zaxxer/hikari/util/IConcurrentBagEntry;)V
+#remove(Lcom/zaxxer/hikari/util/IConcurrentBagEntry;)Z
+#reserve(Lcom/zaxxer/hikari/util/IConcurrentBagEntry;)Z
+#unreserve(Lcom/zaxxer/hikari/util/IConcurrentBagEntry;)V
-#<init>(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagStateListener;)V
-#borrow(JLjava/util/concurrent/TimeUnit;)Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;
-#requite(Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;)V
-#add(Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;)V
-#remove(Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;)V
-#reserve(Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;)Z
-#unreserve(Lcom/zaxxer/hikari/util/ConcurrentBag$BagEntry;)V
@2.4.0
+#<init>(Lcom/zaxxer/hikari/util/ConcurrentBag$IBagStateListener;)V
+#borrow(JLjava/util/concurrent/TimeUnit;)Lcom/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry;
+#requite(Lcom/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry;)V
+#add(Lcom/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry;)V
+#remove(Lcom/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry;)Z
+#values()Ljava/util/List;
+#reserve(Lcom/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry;)Z
+#unreserve(Lcom/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry;)V
-#<init>(Lcom/zaxxer/hikari/util/IBagStateListener;)V
-#borrow(JLjava/util/concurrent/TimeUnit;)Lcom/zaxxer/hikari/util/IConcurrentBagEntry;
-#requite(Lcom/zaxxer/hikari/util/IConcurrentBagEntry;)V
-#add(Lcom/zaxxer/hikari/util/IConcurrentBagEntry;)V
-#remove(Lcom/zaxxer/hikari/util/IConcurrentBagEntry;)Z
-#reserve(Lcom/zaxxer/hikari/util/IConcurrentBagEntry;)Z
-#unreserve(Lcom/zaxxer/hikari/util/IConcurrentBagEntry;)V
@2.6.0
+#getWaitingThreadCount()I
+#getStateCounts()[I
-#getPendingQueue()I

+###com/zaxxer/hikari/util/DriverDataSource
@1.3.4
+#<init>(Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)V
+#getConnection()Ljava/sql/Connection;
+#getConnection(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
+#getLogWriter()Ljava/io/PrintWriter;
+#setLogWriter(Ljava/io/PrintWriter;)V
+#setLoginTimeout(I)V
+#getLoginTimeout()I
+#getParentLogger()Ljava/util/logging/Logger;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#shutdown()V
@2.3.6
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)V
@2.4.2
-#shutdown()V

+###com/zaxxer/hikari/util/FastList
@1.3.9
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;I)V
+#add(Ljava/lang/Object;)V
+#get(I)Ljava/lang/Object;
+#removeLast()Ljava/lang/Object;
+#remove(Ljava/lang/Object;)V
+#clear()V
+#size()I
@2.4.0
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#isEmpty()Z
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#remove(I)Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#addAll(ILjava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#add(ILjava/lang/Object;)V
+#indexOf(Ljava/lang/Object;)I
+#lastIndexOf(Ljava/lang/Object;)I
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#subList(II)Ljava/util/List;
+#trimToSize()V
+#ensureCapacity(I)V
+#clone()Ljava/lang/Object;
+#forEach(Ljava/util/function/Consumer;)V
+#spliterator()Ljava/util/Spliterator;
+#removeIf(Ljava/util/function/Predicate;)Z
+#replaceAll(Ljava/util/function/UnaryOperator;)V
+#sort(Ljava/util/Comparator;)V
-#add(Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;)V
@2.5.0
-#trimToSize()V
-#ensureCapacity(I)V

+###com/zaxxer/hikari/util/IsolationLevel
@3.4.0
+#values()[Lcom/zaxxer/hikari/util/IsolationLevel;
+#valueOf(Ljava/lang/String;)Lcom/zaxxer/hikari/util/IsolationLevel;
+#getLevelId()I

+###com/zaxxer/hikari/util/JavassistProxyFactory
@2.3.10
+#<init>()V
+#main([Ljava/lang/String;)V
@2.4.0
-###com/zaxxer/hikari/util/JavassistProxyFactory

+###com/zaxxer/hikari/util/PropertyElf
@2.4.0
+#<init>()V
+#setTargetFromProperties(Ljava/lang/Object;Ljava/util/Properties;)V
+#getPropertyNames(Ljava/lang/Class;)Ljava/util/Set;
+#getProperty(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#copyProperties(Ljava/util/Properties;)Ljava/util/Properties;
+#flushCaches()V
@2.4.2
-#flushCaches()V
@3.3.0
-#<init>()V

+###com/zaxxer/hikari/util/SuspendResumeLock
@2.4.2
+#<init>()V
+#acquire()V
+#release()V
+#suspend()V
+#resume()V

+###com/zaxxer/hikari/util/UtilityElf$DefaultThreadFactory
@2.4.4
+#<init>(Ljava/lang/String;Z)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;

+###com/zaxxer/hikari/util/UtilityElf
@2.3.0
+#<init>()V
+#elapsedTimeMs(J)J
+#quietlySleep(J)V
+#setRemoveOnCancelPolicy(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)V
+#createInstance(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#createThreadPoolExecutor(ILjava/lang/String;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)Ljava/util/concurrent/ThreadPoolExecutor;
+#getTransactionIsolation(Ljava/lang/String;)I
@2.4.0
-#elapsedTimeMs(J)J
-#setRemoveOnCancelPolicy(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)V
-#getTransactionIsolation(Ljava/lang/String;)I
@2.4.2
+#getTransactionIsolation(Ljava/lang/String;)I
@2.4.3
+#getNullIfEmpty(Ljava/lang/String;)Ljava/lang/String;
@2.4.7
+#isJdk8Plus()Z
@2.5.0
-#isJdk8Plus()Z
@2.6.0
+#createThreadPoolExecutor(Ljava/util/concurrent/BlockingQueue;Ljava/lang/String;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)Ljava/util/concurrent/ThreadPoolExecutor;
@2.7.8
+#safeIsAssignableFrom(Ljava/lang/Object;Ljava/lang/String;)Z
@4.0.0
-#<init>()V

+###com/zaxxer/hikari/IConnectionCustomizer
@1.2.7
+#customize(Ljava/sql/Connection;)V
@2.4.0
-###com/zaxxer/hikari/IConnectionCustomizer

+###com/zaxxer/hikari/metrics/CodaHaleMetricsTracker$Context
@1.3.4
+#stop()V
@2.2.0
+#setConnectionLastOpen(Lcom/zaxxer/hikari/pool/PoolBagEntry;J)V
@2.4.2
-###com/zaxxer/hikari/metrics/CodaHaleMetricsTracker$Context

+###com/zaxxer/hikari/metrics/CodaHaleMetricsTracker
@1.3.4
+#<init>(Ljava/lang/String;)V
+#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/CodaHaleMetricsTracker$Context;
+#recordConnectionUsage(J)V
+#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/MetricsTracker$Context;
@1.3.9
+#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/IMetricsTracker$MetricsContext;
-#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/MetricsTracker$Context;
@2.1.0
+#<init>(Lcom/zaxxer/hikari/pool/HikariPool;)V
+#getConnectionAcquisitionTimer()Lcom/codahale/metrics/Timer;
+#getConnectionDurationHistogram()Lcom/codahale/metrics/Histogram;
-#<init>(Ljava/lang/String;)V
@2.2.0
+#<init>(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/codahale/metrics/MetricRegistry;)V
+#recordConnectionUsage(Lcom/zaxxer/hikari/pool/PoolBagEntry;)V
+#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/MetricsTracker$MetricsContext;
-#<init>(Lcom/zaxxer/hikari/pool/HikariPool;)V
-#recordConnectionUsage(J)V
-#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/IMetricsTracker$MetricsContext;
@2.3.0
+#<init>(Lcom/zaxxer/hikari/pool/BaseHikariPool;Lcom/codahale/metrics/MetricRegistry;)V
+#close()V
-#<init>(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/codahale/metrics/MetricRegistry;)V
@2.4.0
+#<init>(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;Lcom/codahale/metrics/MetricRegistry;)V
+#recordConnectionRequest()Lcom/zaxxer/hikari/metrics/CodaHaleMetricsTracker$Context;
+#recordConnectionRequest()Lcom/zaxxer/hikari/metrics/MetricsTracker$MetricsContext;
-#<init>(Lcom/zaxxer/hikari/pool/BaseHikariPool;Lcom/codahale/metrics/MetricRegistry;)V
-#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/CodaHaleMetricsTracker$Context;
-#recordConnectionRequest(J)Lcom/zaxxer/hikari/metrics/MetricsTracker$MetricsContext;
@2.4.2
-###com/zaxxer/hikari/metrics/CodaHaleMetricsTracker

+###com/zaxxer/hikari/metrics/CodaHaleShim
@2.2.0
+#initialize()V
@2.3.2
-###com/zaxxer/hikari/metrics/CodaHaleShim

+###com/zaxxer/hikari/metrics/MetricsTracker$MetricsContext
@2.2.0
+#<init>()V
+#stop()V
+#setConnectionLastOpen(Lcom/zaxxer/hikari/pool/PoolBagEntry;J)V
@2.4.2
-###com/zaxxer/hikari/metrics/MetricsTracker$MetricsContext

+###com/zaxxer/hikari/pool/HikariMBeanElf
@1.3.7
+#registerMBeans(Lcom/zaxxer/hikari/HikariConfig;Lcom/zaxxer/hikari/pool/HikariPool;)V
+#unregisterMBeans(Lcom/zaxxer/hikari/HikariConfig;Lcom/zaxxer/hikari/pool/HikariPool;)V
@2.3.0
+#registerMBeans(Lcom/zaxxer/hikari/HikariConfig;Lcom/zaxxer/hikari/pool/BaseHikariPool;)V
+#unregisterMBeans(Lcom/zaxxer/hikari/HikariConfig;Lcom/zaxxer/hikari/pool/BaseHikariPool;)V
-#registerMBeans(Lcom/zaxxer/hikari/HikariConfig;Lcom/zaxxer/hikari/pool/HikariPool;)V
-#unregisterMBeans(Lcom/zaxxer/hikari/HikariConfig;Lcom/zaxxer/hikari/pool/HikariPool;)V
@2.4.0
-###com/zaxxer/hikari/pool/HikariMBeanElf

+###com/zaxxer/hikari/pool/HikariPoolMBean
@1.3.8
+#getIdleConnections()I
+#getActiveConnections()I
+#getTotalConnections()I
+#getThreadsAwaitingConnection()I
+#closeIdleConnections()V
@2.0.0
+#dumpPoolState()V
@2.2.0
-#dumpPoolState()V
@2.2.5
+#softEvictConnections()V
-#closeIdleConnections()V
@2.3.0
+#suspendPool()V
+#resumePool()V
@2.3.9
-###com/zaxxer/hikari/pool/HikariPoolMBean

+###com/zaxxer/hikari/pool/PoolBagEntry
@2.1.0
+#toString()Ljava/lang/String;
@2.2.0
+#<init>(Ljava/sql/Connection;J)V
@2.3.0
+#<init>(Ljava/sql/Connection;Lcom/zaxxer/hikari/pool/BaseHikariPool;)V
+#state()Ljava/util/concurrent/atomic/AtomicInteger;
-#<init>(Ljava/sql/Connection;J)V
@2.4.0
+#<init>(Ljava/sql/Connection;Lcom/zaxxer/hikari/pool/HikariPool;)V
+#releaseConnection(J)V
+#resetConnectionState()V
+#setNetworkTimeout(I)V
+#setTransactionIsolation(I)V
+#setCatalog(Ljava/lang/String;)V
+#setAutoCommit(Z)V
+#setReadOnly(Z)V
-#<init>(Ljava/sql/Connection;Lcom/zaxxer/hikari/pool/BaseHikariPool;)V
@2.4.1
+#getState()I
+#compareAndSet(II)Z
-#state()Ljava/util/concurrent/atomic/AtomicInteger;
@2.4.2
-###com/zaxxer/hikari/pool/PoolBagEntry

+###com/zaxxer/hikari/proxy/JavassistProxyFactory
@1.2.7
+#initialize()V
@2.3.10
-###com/zaxxer/hikari/proxy/JavassistProxyFactory

+###com/zaxxer/hikari/util/ConcurrentBag$BagEntry
@2.1.0
+#<init>()V
@2.3.0
-###com/zaxxer/hikari/util/ConcurrentBag$BagEntry

+###com/zaxxer/hikari/util/DefaultThreadFactory
@2.0.0
+#<init>(Ljava/lang/String;Z)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
@2.4.4
-###com/zaxxer/hikari/util/DefaultThreadFactory

+###com/zaxxer/hikari/util/LeakTask
@2.2.0
+#<init>()V
+#<init>(JLjava/util/concurrent/ScheduledExecutorService;)V
+#run()V
+#cancel()V
@2.3.0
+#start()Lcom/zaxxer/hikari/util/LeakTask;
-#<init>()V
@2.3.4
-###com/zaxxer/hikari/util/LeakTask

+###com/zaxxer/hikari/util/PoolUtilities
@1.3.4
+#<init>()V
+#quietlyCloseConnection(Ljava/sql/Connection;)V
+#executeSqlAutoCommit(Ljava/sql/Connection;Ljava/lang/String;)V
+#quietlySleep(I)V
+#createThreadPoolExecutor(ILjava/lang/String;)Ljava/util/concurrent/ThreadPoolExecutor;
@1.3.7
+#createInstance(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@1.3.9
+#elapsedTimeMs(J)J
+#quietlySleep(J)V
+#createInstance(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
-#quietlySleep(I)V
-#createInstance(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.0
+#createThreadPoolExecutor(ILjava/lang/String;Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ThreadPoolExecutor;
-#createThreadPoolExecutor(ILjava/lang/String;)Ljava/util/concurrent/ThreadPoolExecutor;
@2.1.0
+#getTransactionIsolation(Ljava/lang/String;)I
@2.2.0
+#initializeDataSource(Ljava/lang/String;Ljavax/sql/DataSource;Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/sql/DataSource;
+#createThreadPoolExecutor(ILjava/lang/String;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)Ljava/util/concurrent/ThreadPoolExecutor;
+#isJdbc40Compliant(Ljava/sql/Connection;)Z
+#isJdbc41Compliant(Ljava/sql/Connection;)Z
+#setQueryTimeout(Ljava/sql/Statement;I)V
+#setNetworkTimeout(Ljava/util/concurrent/Executor;Ljava/sql/Connection;JZ)I
+#setLoginTimeout(Ljavax/sql/DataSource;JLorg/slf4j/Logger;)V
-#createThreadPoolExecutor(ILjava/lang/String;Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ThreadPoolExecutor;
@2.2.5
+#executeSql(Ljava/sql/Connection;Ljava/lang/String;Z)V
+#setupConnection(Ljava/sql/Connection;ZZILjava/lang/String;)V
-#executeSqlAutoCommit(Ljava/sql/Connection;Ljava/lang/String;)V
-#isJdbc41Compliant(Ljava/sql/Connection;)Z
@2.3.0
-###com/zaxxer/hikari/util/PoolUtilities

+###com/zaxxer/hikari/HikariMBeanElf
@1.2.1
+#registerMBeans(Lcom/zaxxer/hikari/HikariConfig;Lcom/zaxxer/hikari/HikariPool;)V
@1.2.9
+#unregisterMBeans(Lcom/zaxxer/hikari/HikariConfig;Lcom/zaxxer/hikari/HikariPool;)V
@1.3.7
-###com/zaxxer/hikari/HikariMBeanElf

+###com/zaxxer/hikari/AbstractHikariConfig
@2.3.0
+#<init>()V
+#<init>(Ljava/util/Properties;)V
+#<init>(Ljava/lang/String;)V
+#getCatalog()Ljava/lang/String;
+#setCatalog(Ljava/lang/String;)V
+#getConnectionCustomizerClassName()Ljava/lang/String;[deprecated]
+#setConnectionCustomizerClassName(Ljava/lang/String;)V[deprecated]
+#getConnectionCustomizer()Lcom/zaxxer/hikari/IConnectionCustomizer;[deprecated]
+#setConnectionCustomizer(Lcom/zaxxer/hikari/IConnectionCustomizer;)V[deprecated]
+#getConnectionTestQuery()Ljava/lang/String;
+#setConnectionTestQuery(Ljava/lang/String;)V
+#getConnectionInitSql()Ljava/lang/String;[deprecated]
+#setConnectionInitSql(Ljava/lang/String;)V[deprecated]
+#getConnectionTimeout()J
+#setConnectionTimeout(J)V
+#getDataSource()Ljavax/sql/DataSource;
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSourceClassName()Ljava/lang/String;
+#setDataSourceClassName(Ljava/lang/String;)V
+#addDataSourceProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#getDataSourceJNDI()Ljava/lang/String;
+#setDataSourceJNDI(Ljava/lang/String;)V
+#getDataSourceProperties()Ljava/util/Properties;
+#setDataSourceProperties(Ljava/util/Properties;)V
+#setDriverClassName(Ljava/lang/String;)V
+#getIdleTimeout()J
+#setIdleTimeout(J)V
+#getJdbcUrl()Ljava/lang/String;
+#setJdbcUrl(Ljava/lang/String;)V
+#isAutoCommit()Z
+#setAutoCommit(Z)V
+#isAllowPoolSuspension()Z
+#setAllowPoolSuspension(Z)V
+#isInitializationFailFast()Z
+#setInitializationFailFast(Z)V
+#isIsolateInternalQueries()Z
+#setIsolateInternalQueries(Z)V
+#isJdbc4ConnectionTest()Z[deprecated]
+#setJdbc4ConnectionTest(Z)V[deprecated]
+#getMetricRegistry()Ljava/lang/Object;
+#setMetricRegistry(Ljava/lang/Object;)V
+#isReadOnly()Z
+#setReadOnly(Z)V
+#isRegisterMbeans()Z
+#setRegisterMbeans(Z)V
+#getLeakDetectionThreshold()J
+#setLeakDetectionThreshold(J)V
+#getMaxLifetime()J
+#setMaxLifetime(J)V
+#getMaximumPoolSize()I
+#setMaximumPoolSize(I)V
+#getMinimumIdle()I
+#setMinimumIdle(I)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getPoolName()Ljava/lang/String;
+#setPoolName(Ljava/lang/String;)V
+#getTransactionIsolation()Ljava/lang/String;
+#setTransactionIsolation(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)V
+#validate()V
+#copyState(Lcom/zaxxer/hikari/AbstractHikariConfig;)V
@2.3.1
+#getValidationTimeout()J
+#setValidationTimeout(J)V
@2.3.2
+#getHealthCheckRegistry()Ljava/lang/Object;
+#setHealthCheckRegistry(Ljava/lang/Object;)V
+#getHealthCheckProperties()Ljava/util/Properties;
+#setHealthCheckProperties(Ljava/util/Properties;)V
+#addHealthCheckProperty(Ljava/lang/String;Ljava/lang/String;)V
@2.3.6
+#getDriverClassName()Ljava/lang/String;
@2.4.0
-###com/zaxxer/hikari/AbstractHikariConfig

+###com/zaxxer/hikari/metrics/CodahaleHealthChecker
@2.3.2
+#registerHealthChecks(Lcom/zaxxer/hikari/pool/BaseHikariPool;Lcom/codahale/metrics/health/HealthCheckRegistry;)V
@2.4.0
+#registerHealthChecks(Lcom/zaxxer/hikari/pool/HikariPool;Lcom/zaxxer/hikari/HikariConfig;Lcom/codahale/metrics/health/HealthCheckRegistry;)V
-#registerHealthChecks(Lcom/zaxxer/hikari/pool/BaseHikariPool;Lcom/codahale/metrics/health/HealthCheckRegistry;)V
@2.4.2
-###com/zaxxer/hikari/metrics/CodahaleHealthChecker

+###com/zaxxer/hikari/pool/BaseHikariPool
@2.3.0
+#<init>(Lcom/zaxxer/hikari/HikariConfig;)V
+#<init>(Lcom/zaxxer/hikari/HikariConfig;Ljava/lang/String;Ljava/lang/String;)V
+#getConnection()Ljava/sql/Connection;
+#releaseConnection(Lcom/zaxxer/hikari/pool/PoolBagEntry;)V
+#shutdown()V
+#evictConnection(Lcom/zaxxer/hikari/proxy/IHikariConnectionProxy;)V
+#getDataSource()Ljavax/sql/DataSource;
+#getConfiguration()Lcom/zaxxer/hikari/HikariConfig;
+#toString()Ljava/lang/String;
+#getActiveConnections()I
+#getIdleConnections()I
+#getTotalConnections()I
+#getThreadsAwaitingConnection()I
+#suspendPool()V
+#resumePool()V
+#logPoolState([Ljava/lang/String;)V
@2.3.2
+#getConnection(J)Ljava/sql/Connection;
@2.3.4
+#setMetricRegistry(Lcom/codahale/metrics/MetricRegistry;)V
+#setHealthCheckRegistry(Lcom/codahale/metrics/health/HealthCheckRegistry;)V
@2.3.5
+#setMetricRegistry(Ljava/lang/Object;)V
+#setHealthCheckRegistry(Ljava/lang/Object;)V
-#setMetricRegistry(Lcom/codahale/metrics/MetricRegistry;)V
-#setHealthCheckRegistry(Lcom/codahale/metrics/health/HealthCheckRegistry;)V
@2.3.7
+#addBagItem()Ljava/util/concurrent/Future;
@2.4.0
-###com/zaxxer/hikari/pool/BaseHikariPool

+###com/zaxxer/hikari/pool/GlobalPoolLock
@2.3.0
+#acquire()V
+#release()V
+#suspend()V
+#resume()V
@2.3.4
-###com/zaxxer/hikari/pool/GlobalPoolLock

+###com/zaxxer/hikari/pool/PoolInitializationException
@2.3.3
+#<init>(Ljava/lang/Throwable;)V
@2.4.2
-###com/zaxxer/hikari/pool/PoolInitializationException

+###com/zaxxer/hikari/pool/PoolUtilities
@2.3.0
+#<init>(Lcom/zaxxer/hikari/HikariConfig;)V
+#quietlyCloseConnection(Ljava/sql/Connection;)V
+#executeSql(Ljava/sql/Connection;Ljava/lang/String;Z)V
+#initializeDataSource(Ljava/lang/String;Ljavax/sql/DataSource;Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/sql/DataSource;
+#setupConnection(Ljava/sql/Connection;ZZILjava/lang/String;)V
+#isJdbc4ValidationSupported(Ljava/sql/Connection;)Z
+#setQueryTimeout(Ljava/sql/Statement;I)V
+#getAndSetNetworkTimeout(Ljava/sql/Connection;JZ)I
+#setNetworkTimeout(Ljava/sql/Connection;JZ)V
+#setLoginTimeout(Ljavax/sql/DataSource;J)V
@2.3.1
+#getAndSetNetworkTimeout(Ljava/sql/Connection;J)I
+#setNetworkTimeout(Ljava/sql/Connection;J)V
-#getAndSetNetworkTimeout(Ljava/sql/Connection;JZ)I
-#setNetworkTimeout(Ljava/sql/Connection;JZ)V
@2.3.6
+#initializeDataSource(Ljava/lang/String;Ljavax/sql/DataSource;Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/sql/DataSource;
-#initializeDataSource(Ljava/lang/String;Ljavax/sql/DataSource;Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/sql/DataSource;
@2.3.9
+#quietlyCloseConnection(Ljava/sql/Connection;Ljava/lang/String;)V
-#quietlyCloseConnection(Ljava/sql/Connection;)V
@2.4.0
-###com/zaxxer/hikari/pool/PoolUtilities

+###com/zaxxer/hikari/util/IBagStateListener
@2.3.0
+#addBagItem()V
@2.3.7
+#addBagItem()Ljava/util/concurrent/Future;
-#addBagItem()V
@2.4.0
-###com/zaxxer/hikari/util/IBagStateListener

+###com/zaxxer/hikari/util/IConcurrentBagEntry
@2.3.0
+#state()Ljava/util/concurrent/atomic/AtomicInteger;
@2.4.0
-###com/zaxxer/hikari/util/IConcurrentBagEntry

+###com/zaxxer/hikari/util/Java8ConcurrentBag
@2.3.0
+#<init>(Lcom/zaxxer/hikari/util/IBagStateListener;)V
+#values(I)Ljava/util/List;
+#getCount(I)I
@2.4.0
-###com/zaxxer/hikari/util/Java8ConcurrentBag

+###com/zaxxer/hikari/util/ConcurrentBag$IBagManagable
@1.3.0
+#getState()I
+#compareAndSetState(II)Z
@2.1.0
-###com/zaxxer/hikari/util/ConcurrentBag$IBagManagable

+###com/zaxxer/hikari/util/FastStatementList
@1.2.7
+#<init>()V
+#<init>(I)V
+#add(Ljava/sql/Statement;)V
+#get(I)Ljava/sql/Statement;
+#remove(Ljava/lang/Object;)V
+#clear()V
+#size()I
@1.3.9
-###com/zaxxer/hikari/util/FastStatementList

+###com/zaxxer/hikari/pool/HikariPoolMXBean
@2.3.9
+#getIdleConnections()I
+#getActiveConnections()I
+#getTotalConnections()I
+#getThreadsAwaitingConnection()I
+#softEvictConnections()V
+#suspendPool()V
+#resumePool()V
@2.4.0
-###com/zaxxer/hikari/pool/HikariPoolMXBean

+###com/zaxxer/hikari/pool/LeakTask
@2.3.4
+#<init>(JLjava/util/concurrent/ScheduledExecutorService;)V
+#start(Lcom/zaxxer/hikari/pool/PoolBagEntry;)Lcom/zaxxer/hikari/pool/LeakTask;
+#run()V
+#cancel()V
@2.4.0
-#<init>(JLjava/util/concurrent/ScheduledExecutorService;)V
-#start(Lcom/zaxxer/hikari/pool/PoolBagEntry;)Lcom/zaxxer/hikari/pool/LeakTask;
@2.4.2
-###com/zaxxer/hikari/pool/LeakTask

+###com/zaxxer/hikari/proxy/HikariCallableStatementProxy
@2.3.10
+#registerOutParameter(II)V
+#registerOutParameter(III)V
+#wasNull()Z
+#getString(I)Ljava/lang/String;
+#getBoolean(I)Z
+#getByte(I)B
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getFloat(I)F
+#getDouble(I)D
+#getBigDecimal(II)Ljava/math/BigDecimal;
+#getBytes(I)[B
+#getDate(I)Ljava/sql/Date;
+#getTime(I)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getObject(I)Ljava/lang/Object;
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getRef(I)Ljava/sql/Ref;
+#getBlob(I)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getArray(I)Ljava/sql/Array;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#registerOutParameter(IILjava/lang/String;)V
+#registerOutParameter(Ljava/lang/String;I)V
+#registerOutParameter(Ljava/lang/String;II)V
+#registerOutParameter(Ljava/lang/String;ILjava/lang/String;)V
+#getURL(I)Ljava/net/URL;
+#setURL(Ljava/lang/String;Ljava/net/URL;)V
+#setNull(Ljava/lang/String;I)V
+#setBoolean(Ljava/lang/String;Z)V
+#setByte(Ljava/lang/String;B)V
+#setShort(Ljava/lang/String;S)V
+#setInt(Ljava/lang/String;I)V
+#setLong(Ljava/lang/String;J)V
+#setFloat(Ljava/lang/String;F)V
+#setDouble(Ljava/lang/String;D)V
+#setBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#setString(Ljava/lang/String;Ljava/lang/String;)V
+#setBytes(Ljava/lang/String;[B)V
+#setDate(Ljava/lang/String;Ljava/sql/Date;)V
+#setTime(Ljava/lang/String;Ljava/sql/Time;)V
+#setTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;II)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#setDate(Ljava/lang/String;Ljava/sql/Date;Ljava/util/Calendar;)V
+#setTime(Ljava/lang/String;Ljava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;Ljava/util/Calendar;)V
+#setNull(Ljava/lang/String;ILjava/lang/String;)V
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z
+#getByte(Ljava/lang/String;)B
+#getShort(Ljava/lang/String;)S
+#getInt(Ljava/lang/String;)I
+#getLong(Ljava/lang/String;)J
+#getFloat(Ljava/lang/String;)F
+#getDouble(Ljava/lang/String;)D
+#getBytes(Ljava/lang/String;)[B
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#setRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#setNString(Ljava/lang/String;Ljava/lang/String;)V
+#setNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#setNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#setClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#setBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#setSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;
+#getNString(I)Ljava/lang/String;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#setBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#setClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#setNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#setClob(Ljava/lang/String;Ljava/io/Reader;)V
+#setBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#setNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#getMaxFieldSize()I
+#setMaxFieldSize(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#setEscapeProcessing(Z)V
+#getQueryTimeout()I
+#setQueryTimeout(I)V
+#cancel()V
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setCursorName(Ljava/lang/String;)V
+#execute(Ljava/lang/String;)Z
+#getResultSet()Ljava/sql/ResultSet;
+#getUpdateCount()I
+#getMoreResults()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getResultSetConcurrency()I
+#getResultSetType()I
+#addBatch(Ljava/lang/String;)V
+#clearBatch()V
+#executeBatch()[I
+#getConnection()Ljava/sql/Connection;
+#getMoreResults(I)Z
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#getResultSetHoldability()I
+#isClosed()Z
+#setPoolable(Z)V
+#isPoolable()Z
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
+#executeQuery()Ljava/sql/ResultSet;
+#executeUpdate()I
+#setNull(II)V
+#setBoolean(IZ)V
+#setByte(IB)V
+#setShort(IS)V
+#setInt(II)V
+#setLong(IJ)V
+#setFloat(IF)V
+#setDouble(ID)V
+#setBigDecimal(ILjava/math/BigDecimal;)V
+#setString(ILjava/lang/String;)V
+#setBytes(I[B)V
+#setDate(ILjava/sql/Date;)V
+#setTime(ILjava/sql/Time;)V
+#setTimestamp(ILjava/sql/Timestamp;)V
+#setAsciiStream(ILjava/io/InputStream;I)V
+#setUnicodeStream(ILjava/io/InputStream;I)V
+#setBinaryStream(ILjava/io/InputStream;I)V
+#clearParameters()V
+#setObject(ILjava/lang/Object;I)V
+#setObject(ILjava/lang/Object;)V
+#execute()Z
+#addBatch()V
+#setCharacterStream(ILjava/io/Reader;I)V
+#setRef(ILjava/sql/Ref;)V
+#setBlob(ILjava/sql/Blob;)V
+#setClob(ILjava/sql/Clob;)V
+#setArray(ILjava/sql/Array;)V
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#setDate(ILjava/sql/Date;Ljava/util/Calendar;)V
+#setTime(ILjava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
+#setNull(IILjava/lang/String;)V
+#setURL(ILjava/net/URL;)V
+#getParameterMetaData()Ljava/sql/ParameterMetaData;
+#setRowId(ILjava/sql/RowId;)V
+#setNString(ILjava/lang/String;)V
+#setNCharacterStream(ILjava/io/Reader;J)V
+#setNClob(ILjava/sql/NClob;)V
+#setClob(ILjava/io/Reader;J)V
+#setBlob(ILjava/io/InputStream;J)V
+#setNClob(ILjava/io/Reader;J)V
+#setSQLXML(ILjava/sql/SQLXML;)V
+#setObject(ILjava/lang/Object;II)V
+#setAsciiStream(ILjava/io/InputStream;J)V
+#setBinaryStream(ILjava/io/InputStream;J)V
+#setCharacterStream(ILjava/io/Reader;J)V
+#setAsciiStream(ILjava/io/InputStream;)V
+#setBinaryStream(ILjava/io/InputStream;)V
+#setCharacterStream(ILjava/io/Reader;)V
+#setNCharacterStream(ILjava/io/Reader;)V
+#setClob(ILjava/io/Reader;)V
+#setBlob(ILjava/io/InputStream;)V
+#setNClob(ILjava/io/Reader;)V
@2.4.2
-###com/zaxxer/hikari/proxy/HikariCallableStatementProxy

+###com/zaxxer/hikari/proxy/HikariConnectionProxy
@2.3.10
+#createStatement()Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#nativeSQL(Ljava/lang/String;)Ljava/lang/String;
+#setAutoCommit(Z)V
+#getAutoCommit()Z
+#commit()V
+#rollback()V
+#isClosed()Z
+#getMetaData()Ljava/sql/DatabaseMetaData;
+#setReadOnly(Z)V
+#isReadOnly()Z
+#setCatalog(Ljava/lang/String;)V
+#getCatalog()Ljava/lang/String;
+#setTransactionIsolation(I)V
+#getTransactionIsolation()I
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#createStatement(II)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#getTypeMap()Ljava/util/Map;
+#setTypeMap(Ljava/util/Map;)V
+#setHoldability(I)V
+#getHoldability()I
+#setSavepoint()Ljava/sql/Savepoint;
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#rollback(Ljava/sql/Savepoint;)V
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#createStatement(III)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#createClob()Ljava/sql/Clob;
+#createBlob()Ljava/sql/Blob;
+#createNClob()Ljava/sql/NClob;
+#createSQLXML()Ljava/sql/SQLXML;
+#isValid(I)Z
+#setClientInfo(Ljava/lang/String;Ljava/lang/String;)V
+#setClientInfo(Ljava/util/Properties;)V
+#getClientInfo(Ljava/lang/String;)Ljava/lang/String;
+#getClientInfo()Ljava/util/Properties;
+#createArrayOf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Array;
+#createStruct(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;
+#setSchema(Ljava/lang/String;)V
+#getSchema()Ljava/lang/String;
+#abort(Ljava/util/concurrent/Executor;)V
+#setNetworkTimeout(Ljava/util/concurrent/Executor;I)V
+#getNetworkTimeout()I
@2.4.2
-###com/zaxxer/hikari/proxy/HikariConnectionProxy

+###com/zaxxer/hikari/proxy/HikariPreparedStatementProxy
@2.3.10
+#isWrapperFor(Ljava/lang/Class;)Z
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#getMaxFieldSize()I
+#setMaxFieldSize(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#setEscapeProcessing(Z)V
+#getQueryTimeout()I
+#setQueryTimeout(I)V
+#cancel()V
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setCursorName(Ljava/lang/String;)V
+#execute(Ljava/lang/String;)Z
+#getResultSet()Ljava/sql/ResultSet;
+#getUpdateCount()I
+#getMoreResults()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getResultSetConcurrency()I
+#getResultSetType()I
+#addBatch(Ljava/lang/String;)V
+#clearBatch()V
+#executeBatch()[I
+#getConnection()Ljava/sql/Connection;
+#getMoreResults(I)Z
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#getResultSetHoldability()I
+#isClosed()Z
+#setPoolable(Z)V
+#isPoolable()Z
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
+#executeQuery()Ljava/sql/ResultSet;
+#executeUpdate()I
+#setNull(II)V
+#setBoolean(IZ)V
+#setByte(IB)V
+#setShort(IS)V
+#setInt(II)V
+#setLong(IJ)V
+#setFloat(IF)V
+#setDouble(ID)V
+#setBigDecimal(ILjava/math/BigDecimal;)V
+#setString(ILjava/lang/String;)V
+#setBytes(I[B)V
+#setDate(ILjava/sql/Date;)V
+#setTime(ILjava/sql/Time;)V
+#setTimestamp(ILjava/sql/Timestamp;)V
+#setAsciiStream(ILjava/io/InputStream;I)V
+#setUnicodeStream(ILjava/io/InputStream;I)V
+#setBinaryStream(ILjava/io/InputStream;I)V
+#clearParameters()V
+#setObject(ILjava/lang/Object;I)V
+#setObject(ILjava/lang/Object;)V
+#execute()Z
+#addBatch()V
+#setCharacterStream(ILjava/io/Reader;I)V
+#setRef(ILjava/sql/Ref;)V
+#setBlob(ILjava/sql/Blob;)V
+#setClob(ILjava/sql/Clob;)V
+#setArray(ILjava/sql/Array;)V
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#setDate(ILjava/sql/Date;Ljava/util/Calendar;)V
+#setTime(ILjava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
+#setNull(IILjava/lang/String;)V
+#setURL(ILjava/net/URL;)V
+#getParameterMetaData()Ljava/sql/ParameterMetaData;
+#setRowId(ILjava/sql/RowId;)V
+#setNString(ILjava/lang/String;)V
+#setNCharacterStream(ILjava/io/Reader;J)V
+#setNClob(ILjava/sql/NClob;)V
+#setClob(ILjava/io/Reader;J)V
+#setBlob(ILjava/io/InputStream;J)V
+#setNClob(ILjava/io/Reader;J)V
+#setSQLXML(ILjava/sql/SQLXML;)V
+#setObject(ILjava/lang/Object;II)V
+#setAsciiStream(ILjava/io/InputStream;J)V
+#setBinaryStream(ILjava/io/InputStream;J)V
+#setCharacterStream(ILjava/io/Reader;J)V
+#setAsciiStream(ILjava/io/InputStream;)V
+#setBinaryStream(ILjava/io/InputStream;)V
+#setCharacterStream(ILjava/io/Reader;)V
+#setNCharacterStream(ILjava/io/Reader;)V
+#setClob(ILjava/io/Reader;)V
+#setBlob(ILjava/io/InputStream;)V
+#setNClob(ILjava/io/Reader;)V
@2.4.2
-###com/zaxxer/hikari/proxy/HikariPreparedStatementProxy

+###com/zaxxer/hikari/proxy/HikariResultSetProxy
@2.3.10
+#isWrapperFor(Ljava/lang/Class;)Z
+#close()V
+#next()Z
+#wasNull()Z
+#getString(I)Ljava/lang/String;
+#getBoolean(I)Z
+#getByte(I)B
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getFloat(I)F
+#getDouble(I)D
+#getBigDecimal(II)Ljava/math/BigDecimal;
+#getBytes(I)[B
+#getDate(I)Ljava/sql/Date;
+#getTime(I)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getAsciiStream(I)Ljava/io/InputStream;
+#getUnicodeStream(I)Ljava/io/InputStream;
+#getBinaryStream(I)Ljava/io/InputStream;
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z
+#getByte(Ljava/lang/String;)B
+#getShort(Ljava/lang/String;)S
+#getInt(Ljava/lang/String;)I
+#getLong(Ljava/lang/String;)J
+#getFloat(Ljava/lang/String;)F
+#getDouble(Ljava/lang/String;)D
+#getBigDecimal(Ljava/lang/String;I)Ljava/math/BigDecimal;
+#getBytes(Ljava/lang/String;)[B
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getAsciiStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getUnicodeStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getBinaryStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#getCursorName()Ljava/lang/String;
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#getObject(I)Ljava/lang/Object;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#findColumn(Ljava/lang/String;)I
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#isBeforeFirst()Z
+#isAfterLast()Z
+#isFirst()Z
+#isLast()Z
+#beforeFirst()V
+#afterLast()V
+#first()Z
+#last()Z
+#getRow()I
+#absolute(I)Z
+#relative(I)Z
+#previous()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getType()I
+#getConcurrency()I
+#rowUpdated()Z
+#rowInserted()Z
+#rowDeleted()Z
+#updateNull(I)V
+#updateBoolean(IZ)V
+#updateByte(IB)V
+#updateShort(IS)V
+#updateInt(II)V
+#updateLong(IJ)V
+#updateFloat(IF)V
+#updateDouble(ID)V
+#updateBigDecimal(ILjava/math/BigDecimal;)V
+#updateString(ILjava/lang/String;)V
+#updateBytes(I[B)V
+#updateDate(ILjava/sql/Date;)V
+#updateTime(ILjava/sql/Time;)V
+#updateTimestamp(ILjava/sql/Timestamp;)V
+#updateAsciiStream(ILjava/io/InputStream;I)V
+#updateBinaryStream(ILjava/io/InputStream;I)V
+#updateCharacterStream(ILjava/io/Reader;I)V
+#updateObject(ILjava/lang/Object;I)V
+#updateObject(ILjava/lang/Object;)V
+#updateNull(Ljava/lang/String;)V
+#updateBoolean(Ljava/lang/String;Z)V
+#updateByte(Ljava/lang/String;B)V
+#updateShort(Ljava/lang/String;S)V
+#updateInt(Ljava/lang/String;I)V
+#updateLong(Ljava/lang/String;J)V
+#updateFloat(Ljava/lang/String;F)V
+#updateDouble(Ljava/lang/String;D)V
+#updateBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#updateString(Ljava/lang/String;Ljava/lang/String;)V
+#updateBytes(Ljava/lang/String;[B)V
+#updateDate(Ljava/lang/String;Ljava/sql/Date;)V
+#updateTime(Ljava/lang/String;Ljava/sql/Time;)V
+#updateTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;)V
+#insertRow()V
+#updateRow()V
+#deleteRow()V
+#refreshRow()V
+#cancelRowUpdates()V
+#moveToInsertRow()V
+#moveToCurrentRow()V
+#getStatement()Ljava/sql/Statement;
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getRef(I)Ljava/sql/Ref;
+#getBlob(I)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getArray(I)Ljava/sql/Array;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getURL(I)Ljava/net/URL;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#updateRef(ILjava/sql/Ref;)V
+#updateRef(Ljava/lang/String;Ljava/sql/Ref;)V
+#updateBlob(ILjava/sql/Blob;)V
+#updateBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#updateClob(ILjava/sql/Clob;)V
+#updateClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#updateArray(ILjava/sql/Array;)V
+#updateArray(Ljava/lang/String;Ljava/sql/Array;)V
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#updateRowId(ILjava/sql/RowId;)V
+#updateRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#getHoldability()I
+#isClosed()Z
+#updateNString(ILjava/lang/String;)V
+#updateNString(Ljava/lang/String;Ljava/lang/String;)V
+#updateNClob(ILjava/sql/NClob;)V
+#updateNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;
+#updateSQLXML(ILjava/sql/SQLXML;)V
+#updateSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#getNString(I)Ljava/lang/String;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#updateNCharacterStream(ILjava/io/Reader;J)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateAsciiStream(ILjava/io/InputStream;J)V
+#updateBinaryStream(ILjava/io/InputStream;J)V
+#updateCharacterStream(ILjava/io/Reader;J)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateBlob(ILjava/io/InputStream;J)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateClob(ILjava/io/Reader;J)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNClob(ILjava/io/Reader;J)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNCharacterStream(ILjava/io/Reader;)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateAsciiStream(ILjava/io/InputStream;)V
+#updateBinaryStream(ILjava/io/InputStream;)V
+#updateCharacterStream(ILjava/io/Reader;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateBlob(ILjava/io/InputStream;)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateClob(ILjava/io/Reader;)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;)V
+#updateNClob(ILjava/io/Reader;)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@2.4.1
-#getStatement()Ljava/sql/Statement;
@2.4.2
-###com/zaxxer/hikari/proxy/HikariResultSetProxy

+###com/zaxxer/hikari/proxy/HikariStatementProxy
@2.3.10
+#isWrapperFor(Ljava/lang/Class;)Z
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#getMaxFieldSize()I
+#setMaxFieldSize(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#setEscapeProcessing(Z)V
+#getQueryTimeout()I
+#setQueryTimeout(I)V
+#cancel()V
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setCursorName(Ljava/lang/String;)V
+#execute(Ljava/lang/String;)Z
+#getResultSet()Ljava/sql/ResultSet;
+#getUpdateCount()I
+#getMoreResults()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getResultSetConcurrency()I
+#getResultSetType()I
+#addBatch(Ljava/lang/String;)V
+#clearBatch()V
+#executeBatch()[I
+#getConnection()Ljava/sql/Connection;
+#getMoreResults(I)Z
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#getResultSetHoldability()I
+#isClosed()Z
+#setPoolable(Z)V
+#isPoolable()Z
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
@2.4.2
-###com/zaxxer/hikari/proxy/HikariStatementProxy

+###com/zaxxer/hikari/util/QueuedSequenceSynchronizer
@2.4.0
+#<init>()V
+#signal()V
+#currentSequence()J
+#waitUntilSequenceExceeded(JJ)Z
+#hasQueuedThreads()Z
+#getQueueLength()I
@2.6.1
-###com/zaxxer/hikari/util/QueuedSequenceSynchronizer

+###com/zaxxer/hikari/util/Sequence$DropwizardSequence
@2.4.0
+#<init>(Ljava/lang/Class;)V
+#increment()V
+#get()J
@2.5.0
-###com/zaxxer/hikari/util/Sequence$DropwizardSequence

+###com/zaxxer/hikari/util/Sequence$Factory
@2.4.0
+#<init>()V
+#create()Lcom/zaxxer/hikari/util/Sequence;
@2.6.1
-###com/zaxxer/hikari/util/Sequence$Factory

+###com/zaxxer/hikari/util/Sequence$Java7Sequence
@2.4.0
+#increment()V
@2.4.1
+#<init>()V
@2.6.1
-###com/zaxxer/hikari/util/Sequence$Java7Sequence

+###com/zaxxer/hikari/util/Sequence$Java8Sequence
@2.4.0
+#<init>()V
+#get()J
@2.6.1
-###com/zaxxer/hikari/util/Sequence$Java8Sequence

+###com/zaxxer/hikari/util/Sequence
@2.4.0
+#increment()V
+#get()J
@2.6.1
-###com/zaxxer/hikari/util/Sequence

+###com/zaxxer/hikari/metrics/IMetricsTracker$MetricsContext
@1.3.9
+#<init>()V
+#stop()V
@2.2.0
-###com/zaxxer/hikari/metrics/IMetricsTracker$MetricsContext

+###com/zaxxer/hikari/metrics/MetricsFactory
@1.3.9
+#createMetricsTracker(Ljava/lang/String;Ljava/lang/String;)Lcom/zaxxer/hikari/metrics/IMetricsTracker;
@2.1.0
+#createMetricsTracker(Ljava/lang/String;Lcom/zaxxer/hikari/pool/HikariPool;)Lcom/zaxxer/hikari/metrics/IMetricsTracker;
-#createMetricsTracker(Ljava/lang/String;Ljava/lang/String;)Lcom/zaxxer/hikari/metrics/IMetricsTracker;
@2.2.0
-###com/zaxxer/hikari/metrics/MetricsFactory

+###com/zaxxer/hikari/javassist/AgentRegistrationElf
@1.1.4
+#<init>()V
+#loadTransformerAgent(Ljava/lang/String;)Z
@1.1.7
+#loadTransformerAgent(Ljava/lang/String;Ljava/lang/String;)Z
-#loadTransformerAgent(Ljava/lang/String;)Z
@1.2.5
-###com/zaxxer/hikari/javassist/AgentRegistrationElf

+###com/zaxxer/hikari/javassist/HikariClassScanner
@1.1.4
+#<init>(Lcom/zaxxer/hikari/javassist/HikariClassTransformer;)V
+#scanClasses(Ljava/lang/String;)Z
@1.1.7
+#<init>(Lcom/zaxxer/hikari/javassist/HikariClassTransformer;Ljava/lang/String;)V
-#<init>(Lcom/zaxxer/hikari/javassist/HikariClassTransformer;)V
@1.2.5
-###com/zaxxer/hikari/javassist/HikariClassScanner

+###com/zaxxer/hikari/javassist/HikariOverride
@1.1.4
@1.2.5
-###com/zaxxer/hikari/javassist/HikariOverride

+###com/zaxxer/hikari/SQLExceptionOverride$Override
@3.4.3
+#values()[Lcom/zaxxer/hikari/SQLExceptionOverride$Override;
+#valueOf(Ljava/lang/String;)Lcom/zaxxer/hikari/SQLExceptionOverride$Override;

+###com/zaxxer/hikari/SQLExceptionOverride
@3.4.3
+#adjudicate(Ljava/sql/SQLException;)Lcom/zaxxer/hikari/SQLExceptionOverride$Override;

+###com/zaxxer/hikari/metrics/MetricsTracker$Context
@1.3.4
+#<init>()V
+#stop()V
@1.3.9
-###com/zaxxer/hikari/metrics/MetricsTracker$Context

+###com/zaxxer/hikari/metrics/CodahaleMetricsTrackerFactory
@2.4.0
+#<init>(Lcom/codahale/metrics/MetricRegistry;)V
+#getRegistry()Lcom/codahale/metrics/MetricRegistry;
+#create(Ljava/lang/String;Lcom/zaxxer/hikari/metrics/PoolStats;)Lcom/zaxxer/hikari/metrics/MetricsTracker;
@2.4.2
-###com/zaxxer/hikari/metrics/CodahaleMetricsTrackerFactory

+###com/zaxxer/hikari/pool/PoolElf
@2.4.0
+#<init>(Lcom/zaxxer/hikari/HikariConfig;)V
+#quietlyCloseConnection(Ljava/sql/Connection;Ljava/lang/String;)V
+#getTransactionIsolation(Ljava/lang/String;)I
@2.4.2
-###com/zaxxer/hikari/pool/PoolElf
