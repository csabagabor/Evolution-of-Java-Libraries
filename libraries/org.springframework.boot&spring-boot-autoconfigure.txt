
+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#mbeanServer()Lorg/springframework/jmx/support/MBeanServerFactoryBean;
@1.1.2.RELEASE
+#mbeanServer()Ljavax/management/MBeanServer;
-#mbeanServer()Lorg/springframework/jmx/support/MBeanServerFactoryBean;
@1.3.4.RELEASE
-#mbeanServer()Ljavax/management/MBeanServer;
@2.5.0
+#integrationGlobalProperties(Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties;)Lorg/springframework/integration/context/IntegrationProperties;

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationJmxConfiguration
@1.1.0.RELEASE
@1.3.6.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#integrationMbeanExporter()Lorg/springframework/integration/monitor/IntegrationMBeanExporter;
@2.2.0.RELEASE
+#integrationMbeanExporter(Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/core/env/Environment;)Lorg/springframework/integration/monitor/IntegrationMBeanExporter;
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
-#integrationMbeanExporter()Lorg/springframework/integration/monitor/IntegrationMBeanExporter;
@2.7.0
+#integrationMbeanExporter(Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/boot/autoconfigure/jmx/JmxProperties;)Lorg/springframework/integration/monitor/IntegrationMBeanExporter;
-#integrationMbeanExporter(Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/core/env/Environment;)Lorg/springframework/integration/monitor/IntegrationMBeanExporter;

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationConfiguration
@1.1.0.RELEASE
@2.6.0
+#defaultPollerMetadata(Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties;)Lorg/springframework/integration/scheduling/PollerMetadata;

+###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayJpaDependencyConfiguration
@1.1.0.RELEASE
+#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayJpaDependencyConfiguration

+###org/springframework/boot/autoconfigure/flyway/FlywayDataSource
@1.1.0.RELEASE

+###org/springframework/boot/autoconfigure/flyway/FlywayProperties
@1.1.0.RELEASE
+#<init>()V
+#setLocations(Ljava/util/List;)V
+#getLocations()Ljava/util/List;
+#setCheckLocation(Z)V
+#isCheckLocation()Z
+#isEnabled()Z
+#setEnabled(Z)V
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#getInitSqls()Ljava/util/List;
+#setInitSqls(Ljava/util/List;)V
+#isCreateDataSource()Z
@2.1.0.RELEASE
+#getEncoding()Ljava/nio/charset/Charset;
+#setEncoding(Ljava/nio/charset/Charset;)V
+#getConnectRetries()I
+#setConnectRetries(I)V
+#getSchemas()Ljava/util/List;
+#setSchemas(Ljava/util/List;)V
+#getTable()Ljava/lang/String;
+#setTable(Ljava/lang/String;)V
+#getBaselineDescription()Ljava/lang/String;
+#setBaselineDescription(Ljava/lang/String;)V
+#getBaselineVersion()Ljava/lang/String;
+#setBaselineVersion(Ljava/lang/String;)V
+#getInstalledBy()Ljava/lang/String;
+#setInstalledBy(Ljava/lang/String;)V
+#getPlaceholders()Ljava/util/Map;
+#setPlaceholders(Ljava/util/Map;)V
+#getPlaceholderPrefix()Ljava/lang/String;
+#setPlaceholderPrefix(Ljava/lang/String;)V
+#getPlaceholderSuffix()Ljava/lang/String;
+#setPlaceholderSuffix(Ljava/lang/String;)V
+#isPlaceholderReplacement()Z
+#setPlaceholderReplacement(Z)V
+#getSqlMigrationPrefix()Ljava/lang/String;
+#setSqlMigrationPrefix(Ljava/lang/String;)V
+#getSqlMigrationSuffixes()Ljava/util/List;
+#setSqlMigrationSuffixes(Ljava/util/List;)V
+#getSqlMigrationSeparator()Ljava/lang/String;
+#setSqlMigrationSeparator(Ljava/lang/String;)V
+#getRepeatableSqlMigrationPrefix()Ljava/lang/String;
+#setRepeatableSqlMigrationPrefix(Ljava/lang/String;)V
+#getTarget()Ljava/lang/String;
+#setTarget(Ljava/lang/String;)V
+#isBaselineOnMigrate()Z
+#setBaselineOnMigrate(Z)V
+#isCleanDisabled()Z
+#setCleanDisabled(Z)V
+#isCleanOnValidationError()Z
+#setCleanOnValidationError(Z)V
+#isGroup()Z
+#setGroup(Z)V
+#isIgnoreMissingMigrations()Z
+#setIgnoreMissingMigrations(Z)V
+#isIgnoreIgnoredMigrations()Z
+#setIgnoreIgnoredMigrations(Z)V
+#isIgnorePendingMigrations()Z
+#setIgnorePendingMigrations(Z)V
+#isIgnoreFutureMigrations()Z
+#setIgnoreFutureMigrations(Z)V
+#isMixed()Z
+#setMixed(Z)V
+#isOutOfOrder()Z
+#setOutOfOrder(Z)V
+#isSkipDefaultCallbacks()Z
+#setSkipDefaultCallbacks(Z)V
+#isSkipDefaultResolvers()Z
+#setSkipDefaultResolvers(Z)V
+#isValidateOnMigrate()Z
+#setValidateOnMigrate(Z)V
@2.2.0.RELEASE
+#getTablespace()Ljava/lang/String;
+#setTablespace(Ljava/lang/String;)V
+#getBatch()Ljava/lang/Boolean;
+#setBatch(Ljava/lang/Boolean;)V
+#getDryRunOutput()Ljava/io/File;
+#setDryRunOutput(Ljava/io/File;)V
+#getErrorOverrides()[Ljava/lang/String;
+#setErrorOverrides([Ljava/lang/String;)V
+#getLicenseKey()Ljava/lang/String;
+#setLicenseKey(Ljava/lang/String;)V
+#getOracleSqlplus()Ljava/lang/Boolean;
+#setOracleSqlplus(Ljava/lang/Boolean;)V
+#getOracleSqlplusWarn()Ljava/lang/Boolean;
+#setOracleSqlplusWarn(Ljava/lang/Boolean;)V
+#getStream()Ljava/lang/Boolean;
+#setStream(Ljava/lang/Boolean;)V
+#getUndoSqlMigrationPrefix()Ljava/lang/String;
+#setUndoSqlMigrationPrefix(Ljava/lang/String;)V
@2.3.0.RELEASE
+#getDefaultSchema()Ljava/lang/String;
+#setDefaultSchema(Ljava/lang/String;)V
+#isValidateMigrationNaming()Z
+#setValidateMigrationNaming(Z)V
@2.4.0
+#getLockRetryCount()Ljava/lang/Integer;
+#setLockRetryCount(Ljava/lang/Integer;)V
+#isCreateSchemas()Z
+#setCreateSchemas(Z)V
+#getCherryPick()[Ljava/lang/String;
+#setCherryPick([Ljava/lang/String;)V
+#getJdbcProperties()Ljava/util/Map;
+#setJdbcProperties(Ljava/util/Map;)V
+#getOracleKerberosCacheFile()Ljava/lang/String;
+#setOracleKerberosCacheFile(Ljava/lang/String;)V
+#getOracleKerberosConfigFile()Ljava/lang/String;
+#setOracleKerberosConfigFile(Ljava/lang/String;)V
+#getOutputQueryResults()Ljava/lang/Boolean;
+#setOutputQueryResults(Ljava/lang/Boolean;)V
+#getSkipExecutingMigrations()Ljava/lang/Boolean;
+#setSkipExecutingMigrations(Ljava/lang/Boolean;)V
@2.5.0
*#isCheckLocation()Z[deprecated]
*#setCheckLocation(Z)V[deprecated]
*#isCreateDataSource()Z[deprecated]
+#getDriverClassName()Ljava/lang/String;
+#setDriverClassName(Ljava/lang/String;)V
+#getVaultUrl()Ljava/lang/String;
+#setVaultUrl(Ljava/lang/String;)V
+#getVaultToken()Ljava/lang/String;
+#setVaultToken(Ljava/lang/String;)V
+#getVaultSecrets()Ljava/util/List;
+#setVaultSecrets(Ljava/util/List;)V
@2.6.0
+#isFailOnMissingLocations()Z
+#setFailOnMissingLocations(Z)V
+#getConnectRetriesInterval()Ljava/time/Duration;
+#setConnectRetriesInterval(Ljava/time/Duration;)V
*#isIgnoreMissingMigrations()Z[deprecated]
*#setIgnoreMissingMigrations(Z)V[deprecated]
*#isIgnoreIgnoredMigrations()Z[deprecated]
*#setIgnoreIgnoredMigrations(Z)V[deprecated]
*#isIgnorePendingMigrations()Z[deprecated]
*#setIgnorePendingMigrations(Z)V[deprecated]
*#isIgnoreFutureMigrations()Z[deprecated]
*#setIgnoreFutureMigrations(Z)V[deprecated]
+#getOracleWalletLocation()Ljava/lang/String;
+#setOracleWalletLocation(Ljava/lang/String;)V
+#getKerberosConfigFile()Ljava/lang/String;
+#setKerberosConfigFile(Ljava/lang/String;)V
*#getOracleKerberosConfigFile()Ljava/lang/String;[deprecated]
*#setOracleKerberosConfigFile(Ljava/lang/String;)V[deprecated]
+#getSqlServerKerberosLoginFile()Ljava/lang/String;
+#setSqlServerKerberosLoginFile(Ljava/lang/String;)V
+#getIgnoreMigrationPatterns()Ljava/util/List;
+#setIgnoreMigrationPatterns(Ljava/util/List;)V
+#getDetectEncoding()Ljava/lang/Boolean;
+#setDetectEncoding(Ljava/lang/Boolean;)V
+#getBaselineMigrationPrefix()Ljava/lang/String;
+#setBaselineMigrationPrefix(Ljava/lang/String;)V
+#getScriptPlaceholderPrefix()Ljava/lang/String;
+#setScriptPlaceholderPrefix(Ljava/lang/String;)V
+#getScriptPlaceholderSuffix()Ljava/lang/String;
+#setScriptPlaceholderSuffix(Ljava/lang/String;)V
-#getVaultUrl()Ljava/lang/String;
-#setVaultUrl(Ljava/lang/String;)V
-#getVaultToken()Ljava/lang/String;
-#setVaultToken(Ljava/lang/String;)V
-#getVaultSecrets()Ljava/util/List;
-#setVaultSecrets(Ljava/util/List;)V
@2.7.0
+#getPlaceholderSeparator()Ljava/lang/String;
+#setPlaceholderSeparator(Ljava/lang/String;)V
-#isCheckLocation()Z[deprecated]
-#setCheckLocation(Z)V[deprecated]
-#isCreateDataSource()Z[deprecated]
@3.0.0
+#getLockRetryCount()I
-#getLockRetryCount()Ljava/lang/Integer;
-#isIgnoreMissingMigrations()Z[deprecated]
-#setIgnoreMissingMigrations(Z)V[deprecated]
-#isIgnoreIgnoredMigrations()Z[deprecated]
-#setIgnoreIgnoredMigrations(Z)V[deprecated]
-#isIgnorePendingMigrations()Z[deprecated]
-#setIgnorePendingMigrations(Z)V[deprecated]
-#isIgnoreFutureMigrations()Z[deprecated]
-#setIgnoreFutureMigrations(Z)V[deprecated]
-#getOracleKerberosConfigFile()Ljava/lang/String;[deprecated]
-#setOracleKerberosConfigFile(Ljava/lang/String;)V[deprecated]
-#getBaselineMigrationPrefix()Ljava/lang/String;
-#setBaselineMigrationPrefix(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@1.3.0.RELEASE
+#stringToMigrationVersionConverter()Lorg/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$StringToMigrationVersionConverter;
@1.3.2.RELEASE
+#stringOrNumberMigrationVersionConverter()Lorg/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter;
-#stringToMigrationVersionConverter()Lorg/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$StringToMigrationVersionConverter;
@2.0.0.RELEASE
+#flywayDefaultDdlModeProvider(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/flyway/FlywaySchemaManagementProvider;

+###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration
@1.1.0.RELEASE
+#<init>()V
+#checkLocationExists()V
+#flyway()Lorg/flywaydb/core/Flyway;
@1.3.0.RELEASE
+#flywayInitializer(Lorg/flywaydb/core/Flyway;)Lorg/springframework/boot/autoconfigure/flyway/FlywayMigrationInitializer;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/flyway/FlywayProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>()V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/flyway/FlywayProperties;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/flyway/FlywayProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#checkLocationExists()V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/flyway/FlywayProperties;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/flyway/FlywayProperties;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.2.0.RELEASE
+#<init>()V
+#flyway(Lorg/springframework/boot/autoconfigure/flyway/FlywayProperties;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/flywaydb/core/Flyway;
+#flywayInitializer(Lorg/flywaydb/core/Flyway;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/flyway/FlywayMigrationInitializer;
-#<init>(Lorg/springframework/boot/autoconfigure/flyway/FlywayProperties;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#flyway()Lorg/flywaydb/core/Flyway;
-#flywayInitializer(Lorg/flywaydb/core/Flyway;)Lorg/springframework/boot/autoconfigure/flyway/FlywayMigrationInitializer;
@2.5.0
+#flyway(Lorg/springframework/boot/autoconfigure/flyway/FlywayProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/flywaydb/core/Flyway;
-#flyway(Lorg/springframework/boot/autoconfigure/flyway/FlywayProperties;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/flywaydb/core/Flyway;
@3.0.0
*#flyway(Lorg/springframework/boot/autoconfigure/flyway/FlywayProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/flywaydb/core/Flyway;[deprecated]

+###org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#messageSource()Lorg/springframework/context/MessageSource;
@1.1.0.RELEASE
+#getBasename()Ljava/lang/String;
+#setBasename(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setEncoding(Ljava/lang/String;)V
+#getCacheSeconds()I
+#setCacheSeconds(I)V
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
@1.3.0.RELEASE
+#getEncoding()Ljava/nio/charset/Charset;
+#setEncoding(Ljava/nio/charset/Charset;)V
+#isFallbackToSystemLocale()Z
+#setFallbackToSystemLocale(Z)V
-#getEncoding()Ljava/lang/String;
-#setEncoding(Ljava/lang/String;)V
@1.4.0.RELEASE
+#isAlwaysUseMessageFormat()Z
+#setAlwaysUseMessageFormat(Z)V
@1.5.0.RELEASE
-#messageSource()Lorg/springframework/context/MessageSource;
-#getBasename()Ljava/lang/String;
-#setBasename(Ljava/lang/String;)V
-#getEncoding()Ljava/nio/charset/Charset;
-#setEncoding(Ljava/nio/charset/Charset;)V
-#getCacheSeconds()I
-#setCacheSeconds(I)V
-#isFallbackToSystemLocale()Z
-#setFallbackToSystemLocale(Z)V
-#isAlwaysUseMessageFormat()Z
-#setAlwaysUseMessageFormat(Z)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration

+###org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#close()V
+#mongo()Lcom/mongodb/Mongo;
@1.3.0.RELEASE
+#mongo()Lcom/mongodb/MongoClient;
-#mongo()Lcom/mongodb/Mongo;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/core/env/Environment;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>()V
+#mongo(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/core/env/Environment;)Lcom/mongodb/MongoClient;
-#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/core/env/Environment;)V
-#close()V
-#mongo()Lcom/mongodb/MongoClient;
@2.3.0.RELEASE
+#mongo(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/mongodb/client/MongoClient;
-#mongo(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/core/env/Environment;)Lcom/mongodb/MongoClient;
@2.4.0
+#mongo(Lorg/springframework/beans/factory/ObjectProvider;Lcom/mongodb/MongoClientSettings;)Lcom/mongodb/client/MongoClient;
-#mongo(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/mongodb/client/MongoClient;

+###org/springframework/boot/autoconfigure/mongo/MongoProperties
@1.0.0.RELEASE
+#<init>()V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getDatabase()Ljava/lang/String;
+#setDatabase(Ljava/lang/String;)V
+#getUri()Ljava/lang/String;
+#setUri(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getMongoClientDatabase()Ljava/lang/String;
+#createMongoClient()Lcom/mongodb/MongoClient;
@1.1.0.RELEASE
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()[C
+#setPassword([C)V
+#clearPassword()V
+#getGridFsDatabase()Ljava/lang/String;
+#setGridFsDatabase(Ljava/lang/String;)V
+#createMongoClient(Lcom/mongodb/MongoClientOptions;)Lcom/mongodb/MongoClient;
-#createMongoClient()Lcom/mongodb/MongoClient;
@1.1.10.RELEASE
+#getPort()Ljava/lang/Integer;
+#setPort(Ljava/lang/Integer;)V
-#getPort()I
-#setPort(I)V
@1.2.0.RELEASE
+#getAuthenticationDatabase()Ljava/lang/String;
+#setAuthenticationDatabase(Ljava/lang/String;)V
@1.3.0.RELEASE
+#getFieldNamingStrategy()Ljava/lang/Class;
+#setFieldNamingStrategy(Ljava/lang/Class;)V
*#createMongoClient(Lcom/mongodb/MongoClientOptions;)Lcom/mongodb/MongoClient;[deprecated]
+#createMongoClient(Lcom/mongodb/MongoClientOptions;Lorg/springframework/core/env/Environment;)Lcom/mongodb/MongoClient;
@1.4.0.RELEASE
-#createMongoClient(Lcom/mongodb/MongoClientOptions;)Lcom/mongodb/MongoClient;[deprecated]
@1.5.0.RELEASE
+#determineUri()Ljava/lang/String;
@2.0.0.RELEASE
-#clearPassword()V
-#createMongoClient(Lcom/mongodb/MongoClientOptions;Lorg/springframework/core/env/Environment;)Lcom/mongodb/MongoClient;
@2.2.0.RELEASE
+#isAutoIndexCreation()Ljava/lang/Boolean;
+#setAutoIndexCreation(Ljava/lang/Boolean;)V
@2.3.0.RELEASE
+#getReplicaSetName()Ljava/lang/String;
+#setReplicaSetName(Ljava/lang/String;)V
+#getUuidRepresentation()Lorg/bson/UuidRepresentation;
+#setUuidRepresentation(Lorg/bson/UuidRepresentation;)V
@2.4.0
+#getGridfs()Lorg/springframework/boot/autoconfigure/mongo/MongoProperties$Gridfs;
*#getGridFsDatabase()Ljava/lang/String;[deprecated]
*#setGridFsDatabase(Ljava/lang/String;)V[deprecated]
@2.6.0
-#getGridFsDatabase()Ljava/lang/String;[deprecated]
-#setGridFsDatabase(Ljava/lang/String;)V[deprecated]
@3.0.0
+#getAdditionalHosts()Ljava/util/List;
+#setAdditionalHosts(Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/mongo/MongoDataAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#mongoDbFactory(Lcom/mongodb/Mongo;)Lorg/springframework/data/mongodb/MongoDbFactory;
+#mongoTemplate(Lorg/springframework/data/mongodb/MongoDbFactory;)Lorg/springframework/data/mongodb/core/MongoTemplate;
+#gridFsTemplate(Lcom/mongodb/Mongo;Lorg/springframework/data/mongodb/core/MongoTemplate;)Lorg/springframework/data/mongodb/gridfs/GridFsTemplate;
@1.1.5.RELEASE
+#gridFsTemplate(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/MongoTemplate;)Lorg/springframework/data/mongodb/gridfs/GridFsTemplate;
-#gridFsTemplate(Lcom/mongodb/Mongo;Lorg/springframework/data/mongodb/core/MongoTemplate;)Lorg/springframework/data/mongodb/gridfs/GridFsTemplate;
@1.2.0.RELEASE
+#mongoTemplate(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)Lorg/springframework/data/mongodb/core/MongoTemplate;
+#mappingMongoConverter(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
+#mongoMappingContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
-#mongoTemplate(Lorg/springframework/data/mongodb/MongoDbFactory;)Lorg/springframework/data/mongodb/core/MongoTemplate;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/mongo/MongoDataAutoConfiguration

+###org/springframework/boot/autoconfigure/AutoConfigureBefore
@1.0.0.RELEASE
+#value()[Ljava/lang/Class;
@1.2.2.RELEASE
+#name()[Ljava/lang/String;

+###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration
@1.1.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateProperties
@1.1.0.RELEASE
+#<init>()V
+#setCheckTemplateLocation(Z)V
+#isCheckTemplateLocation()Z
+#getViewNames()[Ljava/lang/String;
+#setViewNames([Ljava/lang/String;)V
+#isCache()Z
+#setCache(Z)V
+#getContentType()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#getCharSet()Ljava/lang/String;
+#setCharSet(Ljava/lang/String;)V
+#getPrefix()Ljava/lang/String;
+#setPrefix(Ljava/lang/String;)V
+#getSuffix()Ljava/lang/String;
+#setSuffix(Ljava/lang/String;)V
+#setConfiguration(Ljava/util/Map;)V
+#getConfiguration()Ljava/util/Map;
@1.2.0.RELEASE
-#setCheckTemplateLocation(Z)V
-#isCheckTemplateLocation()Z
-#getViewNames()[Ljava/lang/String;
-#setViewNames([Ljava/lang/String;)V
-#isCache()Z
-#setCache(Z)V
-#getContentType()Ljava/lang/String;
-#setContentType(Ljava/lang/String;)V
-#getCharSet()Ljava/lang/String;
-#setCharSet(Ljava/lang/String;)V
@1.2.4.RELEASE
-#setConfiguration(Ljava/util/Map;)V
-#getConfiguration()Ljava/util/Map;
@1.3.0.RELEASE
+#getResourceLoaderPath()Ljava/lang/String;
+#setResourceLoaderPath(Ljava/lang/String;)V
-#getPrefix()Ljava/lang/String;
-#setPrefix(Ljava/lang/String;)V
-#getSuffix()Ljava/lang/String;
-#setSuffix(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateResolver
@1.1.0.RELEASE
+#<init>()V
+#configure(Ljava/lang/ClassLoader;Lgroovy/text/markup/TemplateConfiguration;)V
+#resolveTemplate(Ljava/lang/String;)Ljava/net/URL;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateResolver

+###org/springframework/boot/autoconfigure/groovy/template/web/GroovyTemplateViewResolver
@1.1.0.RELEASE
+#<init>()V
+#setTemplateEngine(Lgroovy/text/TemplateEngine;)V
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/groovy/template/web/GroovyTemplateViewResolver

+###org/springframework/boot/autoconfigure/groovy/template/web/GroovyTemplateView
@1.1.0.RELEASE
+#<init>(Lgroovy/text/Template;)V
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/groovy/template/web/GroovyTemplateView

+###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration
@1.1.0.RELEASE
+#<init>()V
+#groovyTemplateConfiguration()Lgroovy/text/markup/TemplateConfiguration;
+#groovyTemplateEngine()Lgroovy/text/TemplateEngine;
@1.2.0.RELEASE
+#checkTemplateLocationExists()V
+#groovyMarkupConfigurer()Lorg/springframework/web/servlet/view/groovy/GroovyMarkupConfigurer;
-#groovyTemplateConfiguration()Lgroovy/text/markup/TemplateConfiguration;
-#groovyTemplateEngine()Lgroovy/text/TemplateEngine;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/groovy/template/GroovyTemplateProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>()V
@2.2.0.RELEASE
+#groovyMarkupConfigurer(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/web/servlet/view/groovy/GroovyMarkupConfigurer;
-#groovyMarkupConfigurer()Lorg/springframework/web/servlet/view/groovy/GroovyMarkupConfigurer;
@2.2.7.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/groovy/template/GroovyTemplateProperties;)V
-#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/groovy/template/GroovyTemplateProperties;Lorg/springframework/beans/factory/ObjectProvider;)V

+###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyWebConfiguration
@1.1.0.RELEASE
+#<init>()V
+#groovyTemplateViewResolver(Lgroovy/text/TemplateEngine;)Lorg/springframework/boot/autoconfigure/groovy/template/web/GroovyTemplateViewResolver;
@1.2.0.RELEASE
+#groovyMarkupViewResolver()Lorg/springframework/web/servlet/view/groovy/GroovyMarkupViewResolver;
-#groovyTemplateViewResolver(Lgroovy/text/TemplateEngine;)Lorg/springframework/boot/autoconfigure/groovy/template/web/GroovyTemplateViewResolver;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/groovy/template/GroovyTemplateProperties;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>()V
+#groovyMarkupViewResolver(Lorg/springframework/boot/autoconfigure/groovy/template/GroovyTemplateProperties;)Lorg/springframework/web/servlet/view/groovy/GroovyMarkupViewResolver;
-#<init>(Lorg/springframework/boot/autoconfigure/groovy/template/GroovyTemplateProperties;)V
-#groovyMarkupViewResolver()Lorg/springframework/web/servlet/view/groovy/GroovyMarkupViewResolver;

+###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAvailabilityProvider
@1.1.0.RELEASE
+#<init>()V
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z
@1.4.6.RELEASE
-#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z
@1.5.0.RELEASE
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z
@1.5.3.RELEASE
-#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z

+###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$BaseGroovyTemplateConfiguration
@1.1.0.RELEASE
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$BaseGroovyTemplateConfiguration

+###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovySimpleConfiguration
@1.1.0.RELEASE
+#<init>()V
+#groovyTemplateEngine()Lgroovy/text/TemplateEngine;
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovySimpleConfiguration

+###org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration
@1.1.0.RELEASE
+#defaultErrorView()Lorg/springframework/web/servlet/View;
+#beanNameViewResolver()Lorg/springframework/web/servlet/view/BeanNameViewResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration

+###org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#hiddenHttpMethodFilter()Lorg/springframework/web/filter/HiddenHttpMethodFilter;
+#templateExists(Lorg/springframework/core/env/Environment;Lorg/springframework/core/io/ResourceLoader;Ljava/lang/String;)Z
@1.1.0.RELEASE
-#templateExists(Lorg/springframework/core/env/Environment;Lorg/springframework/core/io/ResourceLoader;Ljava/lang/String;)Z
@1.3.0.RELEASE
+#hiddenHttpMethodFilter()Lorg/springframework/boot/context/web/OrderedHiddenHttpMethodFilter;
+#httpPutFormContentFilter()Lorg/springframework/boot/context/web/OrderedHttpPutFormContentFilter;
-#hiddenHttpMethodFilter()Lorg/springframework/web/filter/HiddenHttpMethodFilter;
@1.4.0.RELEASE
+#hiddenHttpMethodFilter()Lorg/springframework/boot/web/filter/OrderedHiddenHttpMethodFilter;
+#httpPutFormContentFilter()Lorg/springframework/boot/web/filter/OrderedHttpPutFormContentFilter;
-#hiddenHttpMethodFilter()Lorg/springframework/boot/context/web/OrderedHiddenHttpMethodFilter;
-#httpPutFormContentFilter()Lorg/springframework/boot/context/web/OrderedHttpPutFormContentFilter;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration

+###org/springframework/boot/autoconfigure/web/ResourceProperties
@1.1.0.RELEASE
+#<init>()V
+#getCachePeriod()Ljava/lang/Integer;
+#setCachePeriod(Ljava/lang/Integer;)V
+#isAddMappings()Z
+#setAddMappings(Z)V
@1.3.0.RELEASE
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#getStaticLocations()[Ljava/lang/String;
+#setStaticLocations([Ljava/lang/String;)V
+#getWelcomePage()Lorg/springframework/core/io/Resource;
+#getChain()Lorg/springframework/boot/autoconfigure/web/ResourceProperties$Chain;
@1.5.11.RELEASE
+#afterPropertiesSet()V
@2.0.0.RELEASE
+#getCache()Lorg/springframework/boot/autoconfigure/web/ResourceProperties$Cache;
-#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
-#afterPropertiesSet()V
-#getWelcomePage()Lorg/springframework/core/io/Resource;
-#getCachePeriod()Ljava/lang/Integer;
-#setCachePeriod(Ljava/lang/Integer;)V
@2.4.0
+#getCache()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Cache;
+#getChain()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain;
-#setStaticLocations([Ljava/lang/String;)V
-#setAddMappings(Z)V
@2.6.0
-###org/springframework/boot/autoconfigure/web/ResourceProperties

+###org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration$DispatcherServletConfiguration
@1.0.0.RELEASE
+#dispatcherServlet()Lorg/springframework/web/servlet/DispatcherServlet;
+#dispatcherServletRegistration()Lorg/springframework/boot/context/embedded/ServletRegistrationBean;
@1.2.1.RELEASE
+#multipartResolver(Lorg/springframework/web/multipart/MultipartResolver;)Lorg/springframework/web/multipart/MultipartResolver;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/WebMvcProperties;)V
-#dispatcherServletRegistration()Lorg/springframework/boot/context/embedded/ServletRegistrationBean;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration$DispatcherServletConfiguration

+###org/springframework/boot/autoconfigure/web/JspTemplateAvailabilityProvider
@1.1.0.RELEASE
+#<init>()V
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/JspTemplateAvailabilityProvider

+###org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter
@1.0.0.RELEASE
+#<init>()V
+#configureMessageConverters(Ljava/util/List;)V
+#defaultViewResolver()Lorg/springframework/web/servlet/view/InternalResourceViewResolver;
+#requestContextListener()Lorg/springframework/web/context/request/RequestContextListener;
+#beanNameViewResolver()Lorg/springframework/web/servlet/view/BeanNameViewResolver;
+#viewResolver(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
+#addFormatters(Lorg/springframework/format/FormatterRegistry;)V
+#addResourceHandlers(Lorg/springframework/web/servlet/config/annotation/ResourceHandlerRegistry;)V
+#addViewControllers(Lorg/springframework/web/servlet/config/annotation/ViewControllerRegistry;)V
@1.0.2.RELEASE
+#localeResolver()Lorg/springframework/web/servlet/LocaleResolver;
@1.1.0.RELEASE
+#dateFormatter()Lorg/springframework/format/Formatter;
+#getMessageCodesResolver()Lorg/springframework/validation/MessageCodesResolver;
@1.2.8.RELEASE
+#configureContentNegotiation(Lorg/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer;)V
@1.3.0.RELEASE
+#configureAsyncSupport(Lorg/springframework/web/servlet/config/annotation/AsyncSupportConfigurer;)V
+#requestContextFilter()Lorg/springframework/web/filter/RequestContextFilter;
-#requestContextListener()Lorg/springframework/web/context/request/RequestContextListener;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/boot/autoconfigure/web/HttpMessageConverters;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>()V
@1.4.1.RELEASE
+#welcomePageHandlerMapping(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)Lorg/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$WelcomePageHandlerMapping;
-#addViewControllers(Lorg/springframework/web/servlet/config/annotation/ViewControllerRegistry;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter

+###org/springframework/boot/autoconfigure/web/ServerProperties
@1.0.0.RELEASE
+#<init>()V
+#getTomcat()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;
+#getContextPath()Ljava/lang/String;
+#setContextPath(Ljava/lang/String;)V
+#getServletPath()Ljava/lang/String;
+#setServletPath(Ljava/lang/String;)V
+#getPort()Ljava/lang/Integer;
+#setPort(Ljava/lang/Integer;)V
+#getAddress()Ljava/net/InetAddress;
+#setAddress(Ljava/net/InetAddress;)V
+#getSessionTimeout()Ljava/lang/Integer;
+#setSessionTimeout(Ljava/lang/Integer;)V
+#setLoader(Ljava/lang/String;)V
+#customize(Lorg/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainer;)V
@1.1.0.RELEASE
+#getServletMapping()Ljava/lang/String;
+#getServletPrefix()Ljava/lang/String;
+#getPathsArray(Ljava/util/Collection;)[Ljava/lang/String;
+#getPathsArray([Ljava/lang/String;)[Ljava/lang/String;
+#getPath(Ljava/lang/String;)Ljava/lang/String;
@1.1.7.RELEASE
+#getSsl()Lorg/springframework/boot/context/embedded/Ssl;
+#setSsl(Lorg/springframework/boot/context/embedded/Ssl;)V
@1.2.0.RELEASE
+#getUndertow()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Undertow;
+#getContextParameters()Ljava/util/Map;
@1.2.1.RELEASE
+#getOrder()I
@1.3.0.RELEASE
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#isUseForwardHeaders()Ljava/lang/Boolean;
+#setUseForwardHeaders(Ljava/lang/Boolean;)V
*#getSessionTimeout()Ljava/lang/Integer;[deprecated]
*#setSessionTimeout(Ljava/lang/Integer;)V[deprecated]
+#getError()Lorg/springframework/boot/autoconfigure/web/ErrorProperties;
+#getSession()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Session;
+#setSession(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Session;)V
+#getCompression()Lorg/springframework/boot/context/embedded/Compression;
+#getJspServlet()Lorg/springframework/boot/context/embedded/JspServlet;
+#setJspServlet(Lorg/springframework/boot/context/embedded/JspServlet;)V
@1.3.1.RELEASE
+#getServerHeader()Ljava/lang/String;
+#setServerHeader(Ljava/lang/String;)V
@1.4.0.RELEASE
+#getMaxHttpHeaderSize()I
+#setMaxHttpHeaderSize(I)V
+#getMaxHttpPostSize()I
+#setMaxHttpPostSize(I)V
+#getConnectionTimeout()Ljava/lang/Integer;
+#setConnectionTimeout(Ljava/lang/Integer;)V
+#getJetty()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty;
-#getSessionTimeout()Ljava/lang/Integer;[deprecated]
-#setSessionTimeout(Ljava/lang/Integer;)V[deprecated]
@1.5.0.RELEASE
*#getMaxHttpPostSize()I[deprecated]
*#setMaxHttpPostSize(I)V[deprecated]
@2.0.0.RELEASE
+#getConnectionTimeout()Ljava/time/Duration;
+#setConnectionTimeout(Ljava/time/Duration;)V
+#getSsl()Lorg/springframework/boot/web/server/Ssl;
+#setSsl(Lorg/springframework/boot/web/server/Ssl;)V
+#getCompression()Lorg/springframework/boot/web/server/Compression;
+#getHttp2()Lorg/springframework/boot/web/server/Http2;
+#getServlet()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Servlet;
-#getOrder()I
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
-#customize(Lorg/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainer;)V
-#getServletMapping()Ljava/lang/String;
-#getPath(Ljava/lang/String;)Ljava/lang/String;
-#getServletPrefix()Ljava/lang/String;
-#getPathsArray(Ljava/util/Collection;)[Ljava/lang/String;
-#getPathsArray([Ljava/lang/String;)[Ljava/lang/String;
-#setLoader(Ljava/lang/String;)V
-#getContextPath()Ljava/lang/String;
-#setContextPath(Ljava/lang/String;)V
-#getDisplayName()Ljava/lang/String;
-#setDisplayName(Ljava/lang/String;)V
-#getServletPath()Ljava/lang/String;
-#setServletPath(Ljava/lang/String;)V
-#getContextParameters()Ljava/util/Map;
-#getMaxHttpPostSize()I[deprecated]
-#setMaxHttpPostSize(I)V[deprecated]
-#getConnectionTimeout()Ljava/lang/Integer;
-#setConnectionTimeout(Ljava/lang/Integer;)V
-#getSession()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Session;
-#setSession(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Session;)V
-#getSsl()Lorg/springframework/boot/context/embedded/Ssl;
-#setSsl(Lorg/springframework/boot/context/embedded/Ssl;)V
-#getCompression()Lorg/springframework/boot/context/embedded/Compression;
-#getJspServlet()Lorg/springframework/boot/context/embedded/JspServlet;
-#setJspServlet(Lorg/springframework/boot/context/embedded/JspServlet;)V
@2.1.0.RELEASE
+#getMaxHttpHeaderSize()Lorg/springframework/util/unit/DataSize;
+#setMaxHttpHeaderSize(Lorg/springframework/util/unit/DataSize;)V
-#getMaxHttpHeaderSize()I
-#setMaxHttpHeaderSize(I)V
@2.1.10.RELEASE
*#getConnectionTimeout()Ljava/time/Duration;[deprecated]
*#setConnectionTimeout(Ljava/time/Duration;)V[deprecated]
+#getNetty()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Netty;
@2.2.0.RELEASE
+#getForwardHeadersStrategy()Lorg/springframework/boot/autoconfigure/web/ServerProperties$ForwardHeadersStrategy;
+#setForwardHeadersStrategy(Lorg/springframework/boot/autoconfigure/web/ServerProperties$ForwardHeadersStrategy;)V
@2.2.7.RELEASE
*#isUseForwardHeaders()Ljava/lang/Boolean;[deprecated]
*#setUseForwardHeaders(Ljava/lang/Boolean;)V[deprecated]
@2.3.0.RELEASE
+#getShutdown()Lorg/springframework/boot/web/server/Shutdown;
+#setShutdown(Lorg/springframework/boot/web/server/Shutdown;)V
-#isUseForwardHeaders()Ljava/lang/Boolean;[deprecated]
-#setUseForwardHeaders(Ljava/lang/Boolean;)V[deprecated]
-#getConnectionTimeout()Ljava/time/Duration;[deprecated]
-#setConnectionTimeout(Ljava/time/Duration;)V[deprecated]
@2.6.0
+#getReactive()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Reactive;
@3.0.0
*#getMaxHttpHeaderSize()Lorg/springframework/util/unit/DataSize;[deprecated]
*#setMaxHttpHeaderSize(Lorg/springframework/util/unit/DataSize;)V[deprecated]
+#getMaxHttpRequestHeaderSize()Lorg/springframework/util/unit/DataSize;
+#setMaxHttpRequestHeaderSize(Lorg/springframework/util/unit/DataSize;)V

+###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration

+###org/springframework/boot/autoconfigure/web/DefaultErrorAttributes
@1.1.0.RELEASE
+#<init>()V
+#getOrder()I
+#resolveException(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Exception;)Lorg/springframework/web/servlet/ModelAndView;
+#getErrorAttributes(Lorg/springframework/web/context/request/RequestAttributes;Z)Ljava/util/Map;
+#getError(Lorg/springframework/web/context/request/RequestAttributes;)Ljava/lang/Throwable;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/DefaultErrorAttributes

+###org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration
@1.0.0.RELEASE
+#<init>()V
+#faviconHandlerMapping()Lorg/springframework/web/servlet/handler/SimpleUrlHandlerMapping;
@1.1.7.RELEASE
+#faviconRequestHandler()Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;
@1.2.0.RELEASE
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
@1.3.0.RELEASE
-#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)V
-#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration

+###org/springframework/boot/autoconfigure/web/MultipartAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#multipartResolver()Lorg/springframework/web/multipart/support/StandardServletMultipartResolver;
@1.1.0.RELEASE
+#multipartConfigElement()Ljavax/servlet/MultipartConfigElement;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/MultipartProperties;)V
-#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/MultipartAutoConfiguration

+###org/springframework/boot/autoconfigure/web/ErrorController
@1.1.0.RELEASE
+#getErrorPath()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/ErrorController

+###org/springframework/boot/autoconfigure/web/MultipartProperties
@1.1.0.RELEASE
+#<init>()V
+#getMaxFileSize()Ljava/lang/String;
+#getMaxRequestSize()Ljava/lang/String;
+#getFileSizeThreshold()Ljava/lang/String;
+#getLocation()Ljava/lang/String;
+#setMaxFileSize(Ljava/lang/String;)V
+#setMaxRequestSize(Ljava/lang/String;)V
+#setLocation(Ljava/lang/String;)V
+#setFileSizeThreshold(Ljava/lang/String;)V
+#createMultipartConfig()Ljavax/servlet/MultipartConfigElement;
@1.2.5.RELEASE
+#getEnabled()Z
+#setEnabled(Z)V
@1.4.1.RELEASE
+#isResolveLazily()Z
+#setResolveLazily(Z)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/MultipartProperties

+###org/springframework/boot/autoconfigure/web/HttpMapperProperties
@1.0.0.RELEASE
+#<init>()V
+#setJsonPrettyPrint(Z)V
+#isJsonPrettyPrint()Z
+#setJsonSortKeys(Z)V
+#isJsonSortKeys()Z
@1.2.0.RELEASE
+#setJsonPrettyPrint(Ljava/lang/Boolean;)V
+#isJsonPrettyPrint()Ljava/lang/Boolean;
+#setJsonSortKeys(Ljava/lang/Boolean;)V
+#isJsonSortKeys()Ljava/lang/Boolean;
-#setJsonPrettyPrint(Z)V
-#isJsonPrettyPrint()Z
-#setJsonSortKeys(Z)V
-#isJsonSortKeys()Z
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/web/HttpMapperProperties

+###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedServletContainerCustomizerBeanPostProcessorRegistrar
@1.0.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedServletContainerCustomizerBeanPostProcessorRegistrar

+###org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#serverProperties()Lorg/springframework/boot/autoconfigure/web/ServerProperties;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#customize(Lorg/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainer;)V
@1.2.1.RELEASE
+#getOrder()I
@1.3.0.RELEASE
+#duplicateServerPropertiesDetector()Lorg/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration$DuplicateServerPropertiesDetector;
-#getOrder()I
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#customize(Lorg/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainer;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration

+###org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration

+###org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#errorAttributes()Lorg/springframework/boot/autoconfigure/web/DefaultErrorAttributes;
+#basicErrorController(Lorg/springframework/boot/autoconfigure/web/ErrorAttributes;)Lorg/springframework/boot/autoconfigure/web/BasicErrorController;
+#customize(Lorg/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainer;)V
@1.2.1.RELEASE
+#getOrder()I
@1.2.8.RELEASE
+#preserveErrorControllerTargetClassPostProcessor()Lorg/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor;
@1.3.0.RELEASE
+#errorPageCustomizer()Lorg/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration$ErrorPageCustomizer;
-#getOrder()I
-#customize(Lorg/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainer;)V
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)V
+#conventionErrorViewResolver()Lorg/springframework/boot/autoconfigure/web/DefaultErrorViewResolver;
-#<init>()V
@1.5.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)V
-#conventionErrorViewResolver()Lorg/springframework/boot/autoconfigure/web/DefaultErrorViewResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration

+###org/springframework/boot/autoconfigure/web/ErrorAttributes
@1.1.0.RELEASE
+#getErrorAttributes(Lorg/springframework/web/context/request/RequestAttributes;Z)Ljava/util/Map;
+#getError(Lorg/springframework/web/context/request/RequestAttributes;)Ljava/lang/Throwable;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/ErrorAttributes

+###org/springframework/boot/autoconfigure/web/WebMvcProperties
@1.1.0.RELEASE
+#<init>()V
+#getMessageCodesResolverFormat()Lorg/springframework/validation/DefaultMessageCodesResolver$Format;
+#setMessageCodesResolverFormat(Lorg/springframework/validation/DefaultMessageCodesResolver$Format;)V
+#getLocale()Ljava/lang/String;
+#setLocale(Ljava/lang/String;)V
+#getDateFormat()Ljava/lang/String;
+#setDateFormat(Ljava/lang/String;)V
@1.2.0.RELEASE
+#isIgnoreDefaultModelOnRedirect()Z
+#setIgnoreDefaultModelOnRedirect(Z)V
@1.2.8.RELEASE
+#getMediaTypes()Ljava/util/Map;
+#setMediaTypes(Ljava/util/Map;)V
@1.3.0.RELEASE
+#getLocale()Ljava/util/Locale;
+#setLocale(Ljava/util/Locale;)V
+#isThrowExceptionIfNoHandlerFound()Z
+#setThrowExceptionIfNoHandlerFound(Z)V
+#isDispatchOptionsRequest()Z
+#setDispatchOptionsRequest(Z)V
+#isDispatchTraceRequest()Z
+#setDispatchTraceRequest(Z)V
+#getStaticPathPattern()Ljava/lang/String;
+#setStaticPathPattern(Ljava/lang/String;)V
+#getAsync()Lorg/springframework/boot/autoconfigure/web/WebMvcProperties$Async;
+#getView()Lorg/springframework/boot/autoconfigure/web/WebMvcProperties$View;
-#getLocale()Ljava/lang/String;
-#setLocale(Ljava/lang/String;)V
@1.4.0.RELEASE
+#getLocaleResolver()Lorg/springframework/boot/autoconfigure/web/WebMvcProperties$LocaleResolver;
+#setLocaleResolver(Lorg/springframework/boot/autoconfigure/web/WebMvcProperties$LocaleResolver;)V
+#isLogResolvedException()Z
+#setLogResolvedException(Z)V
+#getServlet()Lorg/springframework/boot/autoconfigure/web/WebMvcProperties$Servlet;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcProperties

+###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedJetty
@1.0.0.RELEASE
+#<init>()V
+#jettyEmbeddedServletContainerFactory()Lorg/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedJetty

+###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedTomcat
@1.0.0.RELEASE
+#<init>()V
+#tomcatEmbeddedServletContainerFactory()Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedTomcat

+###org/springframework/boot/autoconfigure/web/HttpMessageConverters
@1.0.0.RELEASE
+#<init>([Lorg/springframework/http/converter/HttpMessageConverter;)V
+#<init>(Ljava/util/Collection;)V
+#iterator()Ljava/util/Iterator;
+#getConverters()Ljava/util/List;
@1.1.6.RELEASE
+#<init>(ZLjava/util/Collection;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/HttpMessageConverters

+###org/springframework/boot/autoconfigure/web/BasicErrorController
@1.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ErrorAttributes;)V
+#getErrorPath()Ljava/lang/String;
+#errorHtml(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;
+#error(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;
@1.2.8.RELEASE
+#errorHtml(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;
-#errorHtml(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;
@1.3.0.RELEASE
*#<init>(Lorg/springframework/boot/autoconfigure/web/ErrorAttributes;)V[deprecated]
+#<init>(Lorg/springframework/boot/autoconfigure/web/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ErrorProperties;)V
+#errorHtml(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;
-#errorHtml(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;
@1.3.1.RELEASE
+#errorHtml(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;
-#errorHtml(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ErrorProperties;Ljava/util/List;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ErrorAttributes;)V[deprecated]
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/BasicErrorController

+###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration$ObjectMappers
@1.0.0.RELEASE
+#init()V
+#jacksonObjectMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
+#mappingJackson2HttpMessageConverter(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lorg/springframework/http/converter/json/MappingJackson2HttpMessageConverter;
@1.1.0.RELEASE
-#init()V
-#jacksonObjectMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration$ObjectMappers

+###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#messageConverters()Lorg/springframework/boot/autoconfigure/web/HttpMessageConverters;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration

+###org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat
@1.0.0.RELEASE
+#<init>()V
+#getMaxThreads()I
+#setMaxThreads(I)V
+#getAccessLogEnabled()Z
+#setAccessLogEnabled(Z)V
+#getBackgroundProcessorDelay()I
+#setBackgroundProcessorDelay(I)V
+#getBasedir()Ljava/io/File;
+#setBasedir(Ljava/io/File;)V
+#getAccessLogPattern()Ljava/lang/String;
+#setAccessLogPattern(Ljava/lang/String;)V
+#getProtocolHeader()Ljava/lang/String;
+#setProtocolHeader(Ljava/lang/String;)V
+#getRemoteIpHeader()Ljava/lang/String;
+#setRemoteIpHeader(Ljava/lang/String;)V
+#getUriEncoding()Ljava/lang/String;
+#setUriEncoding(Ljava/lang/String;)V
@1.1.0.RELEASE
+#getMaxHttpHeaderSize()I
+#setMaxHttpHeaderSize(I)V
@1.1.7.RELEASE
+#getInternalProxies()Ljava/lang/String;
+#setInternalProxies(Ljava/lang/String;)V
+#getPortHeader()Ljava/lang/String;
+#setPortHeader(Ljava/lang/String;)V
@1.2.2.RELEASE
+#getCompressableMimeTypes()Ljava/lang/String;
+#setCompressableMimeTypes(Ljava/lang/String;)V
+#getCompression()Ljava/lang/String;
+#setCompression(Ljava/lang/String;)V
@1.2.5.RELEASE
+#getProtocolHeaderHttpsValue()Ljava/lang/String;
+#setProtocolHeaderHttpsValue(Ljava/lang/String;)V
@1.3.0.RELEASE
+#getAccesslog()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
*#getAccessLogEnabled()Z[deprecated]
*#setAccessLogEnabled(Z)V[deprecated]
*#getAccessLogPattern()Ljava/lang/String;[deprecated]
*#setAccessLogPattern(Ljava/lang/String;)V[deprecated]
+#getUriEncoding()Ljava/nio/charset/Charset;
+#setUriEncoding(Ljava/nio/charset/Charset;)V
-#getCompressableMimeTypes()Ljava/lang/String;
-#setCompressableMimeTypes(Ljava/lang/String;)V
-#getCompression()Ljava/lang/String;
-#setCompression(Ljava/lang/String;)V
-#getUriEncoding()Ljava/lang/String;
-#setUriEncoding(Ljava/lang/String;)V
@1.4.0.RELEASE
+#getMinSpareThreads()I
+#setMinSpareThreads(I)V
*#getMaxHttpHeaderSize()I[deprecated]
*#setMaxHttpHeaderSize(I)V[deprecated]
+#getRedirectContextRoot()Ljava/lang/Boolean;
+#setRedirectContextRoot(Ljava/lang/Boolean;)V
-#getAccessLogEnabled()Z[deprecated]
-#setAccessLogEnabled(Z)V[deprecated]
-#getAccessLogPattern()Ljava/lang/String;[deprecated]
-#setAccessLogPattern(Ljava/lang/String;)V[deprecated]
@1.5.0.RELEASE
+#getMaxHttpPostSize()I
+#setMaxHttpPostSize(I)V
+#getMaxConnections()I
+#setMaxConnections(I)V
+#getAcceptCount()I
+#setAcceptCount(I)V
+#getAdditionalTldSkipPatterns()Ljava/util/List;
+#setAdditionalTldSkipPatterns(Ljava/util/List;)V
-#getMaxHttpHeaderSize()I[deprecated]
-#setMaxHttpHeaderSize(I)V[deprecated]
@2.0.0.RELEASE
+#getBackgroundProcessorDelay()Ljava/time/Duration;
+#setBackgroundProcessorDelay(Ljava/time/Duration;)V
+#getUseRelativeRedirects()Ljava/lang/Boolean;
+#setUseRelativeRedirects(Ljava/lang/Boolean;)V
+#getMaxHttpHeaderSize()I
+#setMaxHttpHeaderSize(I)V
+#getResource()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Resource;
-#getBackgroundProcessorDelay()I
-#setBackgroundProcessorDelay(I)V
@2.1.0.RELEASE
+#getMaxHttpPostSize()Lorg/springframework/util/unit/DataSize;
+#setMaxHttpPostSize(Lorg/springframework/util/unit/DataSize;)V
+#getMaxHttpHeaderSize()Lorg/springframework/util/unit/DataSize;[deprecated]
+#setMaxHttpHeaderSize(Lorg/springframework/util/unit/DataSize;)V[deprecated]
+#getMaxSwallowSize()Lorg/springframework/util/unit/DataSize;
+#setMaxSwallowSize(Lorg/springframework/util/unit/DataSize;)V
-#getMaxHttpPostSize()I
-#setMaxHttpPostSize(I)V
-#getMaxHttpHeaderSize()I
-#setMaxHttpHeaderSize(I)V
@2.1.10.RELEASE
*#getMaxHttpPostSize()Lorg/springframework/util/unit/DataSize;[deprecated]
*#setMaxHttpPostSize(Lorg/springframework/util/unit/DataSize;)V[deprecated]
+#getMaxHttpFormPostSize()Lorg/springframework/util/unit/DataSize;
+#setMaxHttpFormPostSize(Lorg/springframework/util/unit/DataSize;)V
+#getConnectionTimeout()Ljava/time/Duration;
+#setConnectionTimeout(Ljava/time/Duration;)V
@2.2.0.RELEASE
+#getHostHeader()Ljava/lang/String;
+#setHostHeader(Ljava/lang/String;)V
+#getProcessorCache()I
+#setProcessorCache(I)V
+#getRelaxedPathChars()Ljava/util/List;
+#setRelaxedPathChars(Ljava/util/List;)V
+#getRelaxedQueryChars()Ljava/util/List;
+#setRelaxedQueryChars(Ljava/util/List;)V
+#getMbeanregistry()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Mbeanregistry;
-#getMaxHttpFormPostSize()Lorg/springframework/util/unit/DataSize;
-#setMaxHttpFormPostSize(Lorg/springframework/util/unit/DataSize;)V
-#getMaxHttpHeaderSize()Lorg/springframework/util/unit/DataSize;[deprecated]
-#setMaxHttpHeaderSize(Lorg/springframework/util/unit/DataSize;)V[deprecated]
@2.2.1.RELEASE
*#getMaxHttpPostSize()Lorg/springframework/util/unit/DataSize;[deprecated]
*#setMaxHttpPostSize(Lorg/springframework/util/unit/DataSize;)V[deprecated]
+#getMaxHttpFormPostSize()Lorg/springframework/util/unit/DataSize;
+#setMaxHttpFormPostSize(Lorg/springframework/util/unit/DataSize;)V
@2.2.7.RELEASE
+#getUseRelativeRedirects()Z
+#setUseRelativeRedirects(Z)V
*#setUseRelativeRedirects(Ljava/lang/Boolean;)V[deprecated]
-#getUseRelativeRedirects()Ljava/lang/Boolean;
@2.2.8.RELEASE
+#getUseRelativeRedirects()Ljava/lang/Boolean;[deprecated]
+#isUseRelativeRedirects()Z
-#getUseRelativeRedirects()Z
@2.3.0.RELEASE
*#getMaxThreads()I[deprecated]
*#setMaxThreads(I)V[deprecated]
*#getMinSpareThreads()I[deprecated]
*#setMinSpareThreads(I)V[deprecated]
+#getThreads()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads;
*#getInternalProxies()Ljava/lang/String;[deprecated]
*#setInternalProxies(Ljava/lang/String;)V[deprecated]
*#getProtocolHeader()Ljava/lang/String;[deprecated]
*#setProtocolHeader(Ljava/lang/String;)V[deprecated]
*#getProtocolHeaderHttpsValue()Ljava/lang/String;[deprecated]
*#setProtocolHeaderHttpsValue(Ljava/lang/String;)V[deprecated]
*#getHostHeader()Ljava/lang/String;[deprecated]
*#setHostHeader(Ljava/lang/String;)V[deprecated]
*#getPortHeader()Ljava/lang/String;[deprecated]
*#setPortHeader(Ljava/lang/String;)V[deprecated]
*#getRemoteIpHeader()Ljava/lang/String;[deprecated]
*#setRemoteIpHeader(Ljava/lang/String;)V[deprecated]
+#getRemoteip()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip;
-#getMaxHttpPostSize()Lorg/springframework/util/unit/DataSize;[deprecated]
-#setMaxHttpPostSize(Lorg/springframework/util/unit/DataSize;)V[deprecated]
@2.5.0
+#getKeepAliveTimeout()Ljava/time/Duration;
+#setKeepAliveTimeout(Ljava/time/Duration;)V
+#getMaxKeepAliveRequests()I
+#setMaxKeepAliveRequests(I)V
-#getMaxThreads()I[deprecated]
-#setMaxThreads(I)V[deprecated]
-#getMinSpareThreads()I[deprecated]
-#setMinSpareThreads(I)V[deprecated]
-#getInternalProxies()Ljava/lang/String;[deprecated]
-#setInternalProxies(Ljava/lang/String;)V[deprecated]
-#getProtocolHeader()Ljava/lang/String;[deprecated]
-#setProtocolHeader(Ljava/lang/String;)V[deprecated]
-#getProtocolHeaderHttpsValue()Ljava/lang/String;[deprecated]
-#setProtocolHeaderHttpsValue(Ljava/lang/String;)V[deprecated]
-#getHostHeader()Ljava/lang/String;[deprecated]
-#setHostHeader(Ljava/lang/String;)V[deprecated]
-#getPortHeader()Ljava/lang/String;[deprecated]
-#setPortHeader(Ljava/lang/String;)V[deprecated]
-#getRemoteIpHeader()Ljava/lang/String;[deprecated]
-#setRemoteIpHeader(Ljava/lang/String;)V[deprecated]
-#getUseRelativeRedirects()Ljava/lang/Boolean;[deprecated]
-#setUseRelativeRedirects(Ljava/lang/Boolean;)V[deprecated]
@2.6.0
+#isRejectIllegalHeader()Z
+#setRejectIllegalHeader(Z)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties
@1.0.0.RELEASE
+#<init>()V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPort()I
+#setAddresses(Ljava/lang/String;)V
+#getAddresses()Ljava/lang/String;
+#setPort(I)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#isDynamic()Z
+#setDynamic(Z)V
+#getVirtualHost()Ljava/lang/String;
+#setVirtualHost(Ljava/lang/String;)V
@1.2.0.RELEASE
-#isDynamic()Z
-#setDynamic(Z)V
@1.3.0.RELEASE
+#getSsl()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl;
+#getRequestedHeartbeat()Ljava/lang/Integer;
+#setRequestedHeartbeat(Ljava/lang/Integer;)V
+#getListener()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener;
@1.4.0.RELEASE
+#determineHost()Ljava/lang/String;
+#determinePort()I
+#determineAddresses()Ljava/lang/String;
+#determineUsername()Ljava/lang/String;
+#determinePassword()Ljava/lang/String;
+#determineVirtualHost()Ljava/lang/String;
+#isPublisherConfirms()Z
+#setPublisherConfirms(Z)V
+#isPublisherReturns()Z
+#setPublisherReturns(Z)V
+#getConnectionTimeout()Ljava/lang/Integer;
+#setConnectionTimeout(Ljava/lang/Integer;)V
+#getCache()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache;
+#getTemplate()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Template;
@2.0.0.RELEASE
+#getRequestedHeartbeat()Ljava/time/Duration;
+#setRequestedHeartbeat(Ljava/time/Duration;)V
+#getConnectionTimeout()Ljava/time/Duration;
+#setConnectionTimeout(Ljava/time/Duration;)V
-#getRequestedHeartbeat()Ljava/lang/Integer;
-#setRequestedHeartbeat(Ljava/lang/Integer;)V
-#getConnectionTimeout()Ljava/lang/Integer;
-#setConnectionTimeout(Ljava/lang/Integer;)V
@2.2.0.RELEASE
*#setPublisherConfirms(Z)V[deprecated]
+#setPublisherConfirmType(Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory$ConfirmType;)V
+#getPublisherConfirmType()Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory$ConfirmType;
@2.2.7.RELEASE
*#isPublisherConfirms()Z[deprecated]
@2.3.0.RELEASE
+#getPort()Ljava/lang/Integer;
+#setPort(Ljava/lang/Integer;)V
+#getRequestedChannelMax()I
+#setRequestedChannelMax(I)V
-#getPort()I
-#setPort(I)V
-#isPublisherConfirms()Z[deprecated]
-#setPublisherConfirms(Z)V[deprecated]
@2.4.0
+#getAddressShuffleMode()Lorg/springframework/amqp/rabbit/connection/AbstractConnectionFactory$AddressShuffleMode;
+#setAddressShuffleMode(Lorg/springframework/amqp/rabbit/connection/AbstractConnectionFactory$AddressShuffleMode;)V
+#getChannelRpcTimeout()Ljava/time/Duration;
+#setChannelRpcTimeout(Ljava/time/Duration;)V
@2.6.0
+#getStream()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Stream;

+###org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#amqpAdmin(Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;)Lorg/springframework/amqp/core/AmqpAdmin;
+#rabbitTemplate()Lorg/springframework/amqp/rabbit/core/RabbitTemplate;
@1.2.5.RELEASE
+#amqpAdmin(Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)Lorg/springframework/amqp/core/AmqpAdmin;
-#amqpAdmin(Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;)Lorg/springframework/amqp/core/AmqpAdmin;
@1.2.6.RELEASE
+#rabbitTemplate(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)Lorg/springframework/amqp/rabbit/core/RabbitTemplate;
-#rabbitTemplate()Lorg/springframework/amqp/rabbit/core/RabbitTemplate;
@1.3.0.RELEASE
+#rabbitTemplate()Lorg/springframework/amqp/rabbit/core/RabbitTemplate;
-#rabbitTemplate(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)Lorg/springframework/amqp/rabbit/core/RabbitTemplate;
@1.4.0.RELEASE
-#amqpAdmin(Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)Lorg/springframework/amqp/core/AmqpAdmin;
-#rabbitTemplate()Lorg/springframework/amqp/rabbit/core/RabbitTemplate;

+###org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration$RabbitConnectionFactoryCreator
@1.0.0.RELEASE
+#rabbitConnectionFactory(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;
@1.3.0.RELEASE
+#rabbitConnectionFactory(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;
-#rabbitConnectionFactory(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;
@2.0.1.RELEASE
+#rabbitConnectionFactory(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;
-#rabbitConnectionFactory(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;
@2.4.0
+#rabbitConnectionFactory(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;
-#rabbitConnectionFactory(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;
@2.5.0
+#rabbitConnectionFactory(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;
-#rabbitConnectionFactory(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;
@2.6.0
-#rabbitConnectionFactory(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;

+###org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#jacksonObjectMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
@1.1.2.RELEASE
-#jacksonObjectMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
@1.4.0.RELEASE
+#jsonComponentModule()Lorg/springframework/boot/jackson/JsonComponentModule;
@2.7.0
+#jsonMixinModule(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/jackson/JsonMixinModule;
@3.0.0
-#jsonMixinModule(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/jackson/JsonMixinModule;

+###org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration
@1.1.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration$JpaWebConfiguration
@1.1.0.RELEASE
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration$JpaWebConfiguration

+###org/springframework/boot/autoconfigure/data/jpa/EntityManagerFactoryDependsOnPostProcessor
@1.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@1.3.0.RELEASE
+#<init>([Ljava/lang/String;)V
-#<init>(Ljava/lang/String;)V
-#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@2.1.8.RELEASE
+#<init>([Ljava/lang/Class;)V
@2.7.0
-###org/springframework/boot/autoconfigure/data/jpa/EntityManagerFactoryDependsOnPostProcessor

+###org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@2.1.0.RELEASE
+#entityManagerFactoryBootstrapExecutorCustomizer(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilderCustomizer;
@2.1.2.RELEASE
+#entityManagerFactoryBootstrapExecutorCustomizer(Ljava/util/Map;)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilderCustomizer;
-#entityManagerFactoryBootstrapExecutorCustomizer(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilderCustomizer;

+###org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration
@1.1.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/AbstractRepositoryConfigurationSourceSupport
@1.0.0.RELEASE
+#<init>()V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
@2.2.0.RELEASE
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/beans/factory/support/BeanNameGenerator;)V
-#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@2.3.2.RELEASE
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V

+###org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@1.3.0.RELEASE
+#springBootRepositoryRestConfigurer()Lorg/springframework/boot/autoconfigure/data/rest/SpringBootRepositoryRestConfigurer;
@2.4.5
+#springBootRepositoryRestConfigurer(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/boot/autoconfigure/data/rest/RepositoryRestProperties;)Lorg/springframework/boot/autoconfigure/data/rest/SpringBootRepositoryRestConfigurer;
-#springBootRepositoryRestConfigurer()Lorg/springframework/boot/autoconfigure/data/rest/SpringBootRepositoryRestConfigurer;

+###org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@2.5.0
-###org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration

+###org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder
@1.1.0.RELEASE
+#create()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
+#create(Ljava/lang/ClassLoader;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
+#<init>(Ljava/lang/ClassLoader;)V
+#build()Ljavax/sql/DataSource;
+#type(Ljava/lang/Class;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
+#url(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
+#driverClassName(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
+#username(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
+#password(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
+#findType()Ljava/lang/Class;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder

+###org/springframework/boot/autoconfigure/jdbc/EmbeddedDataSourceConfiguration
@1.0.0.RELEASE
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#dataSource()Ljavax/sql/DataSource;
+#close()V
@1.3.0.RELEASE
+#dataSource()Lorg/springframework/jdbc/datasource/embedded/EmbeddedDatabase;
-#dataSource()Ljavax/sql/DataSource;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>()V
+#dataSource(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)Lorg/springframework/jdbc/datasource/embedded/EmbeddedDatabase;
-#<init>(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)V
-#dataSource()Lorg/springframework/jdbc/datasource/embedded/EmbeddedDatabase;
-#close()V

+###org/springframework/boot/autoconfigure/jdbc/DataSourceProperties
@1.1.0.RELEASE
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#afterPropertiesSet()V
+#getUrl()Ljava/lang/String;
+#getUsername()Ljava/lang/String;
+#getPassword()Ljava/lang/String;
+#setDriverClassName(Ljava/lang/String;)V
+#setUrl(Ljava/lang/String;)V
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#isInitialize()Z
+#setInitialize(Z)V
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#getData()Ljava/lang/String;
+#setData(Ljava/lang/String;)V
+#isContinueOnError()Z
+#setContinueOnError(Z)V
+#getSeparator()Ljava/lang/String;
+#setSeparator(Ljava/lang/String;)V
+#getClassLoader()Ljava/lang/ClassLoader;
@1.1.4.RELEASE
+#getSqlScriptEncoding()Ljava/lang/String;
+#setSqlScriptEncoding(Ljava/lang/String;)V
@1.2.0.RELEASE
+#getDriverClassName()Ljava/lang/String;
+#getJndiName()Ljava/lang/String;
+#setJndiName(Ljava/lang/String;)V
+#getXa()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
+#setXa(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;)V
@1.3.0.RELEASE
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getType()Ljava/lang/Class;
+#setType(Ljava/lang/Class;)V
+#getSqlScriptEncoding()Ljava/nio/charset/Charset;
+#setSqlScriptEncoding(Ljava/nio/charset/Charset;)V
-#getSqlScriptEncoding()Ljava/lang/String;
-#setSqlScriptEncoding(Ljava/lang/String;)V
@1.4.0.RELEASE
+#determineDriverClassName()Ljava/lang/String;
+#determineUrl()Ljava/lang/String;
+#determineUsername()Ljava/lang/String;
+#determinePassword()Ljava/lang/String;
+#getSchemaUsername()Ljava/lang/String;
+#setSchemaUsername(Ljava/lang/String;)V
+#getSchemaPassword()Ljava/lang/String;
+#setSchemaPassword(Ljava/lang/String;)V
+#getDataUsername()Ljava/lang/String;
+#setDataUsername(Ljava/lang/String;)V
+#getDataPassword()Ljava/lang/String;
+#setDataPassword(Ljava/lang/String;)V
@1.4.1.RELEASE
+#initializeDataSourceBuilder()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
@1.4.2.RELEASE
+#isGenerateUniqueName()Z
+#setGenerateUniqueName(Z)V
@1.5.0.RELEASE
+#getSchema()Ljava/util/List;
+#setSchema(Ljava/util/List;)V
+#getData()Ljava/util/List;
+#setData(Ljava/util/List;)V
-#getSchema()Ljava/lang/String;
-#setSchema(Ljava/lang/String;)V
-#getData()Ljava/lang/String;
-#setData(Ljava/lang/String;)V
@2.0.0.RELEASE
+#initializeDataSourceBuilder()Lorg/springframework/boot/jdbc/DataSourceBuilder;
+#determineDatabaseName()Ljava/lang/String;
+#getInitializationMode()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
+#setInitializationMode(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
-#initializeDataSourceBuilder()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
-#isInitialize()Z
-#setInitialize(Z)V
@2.5.0
*#getInitializationMode()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;[deprecated]
*#setInitializationMode(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V[deprecated]
*#getPlatform()Ljava/lang/String;[deprecated]
*#setPlatform(Ljava/lang/String;)V[deprecated]
*#getSchema()Ljava/util/List;[deprecated]
*#setSchema(Ljava/util/List;)V[deprecated]
*#getSchemaUsername()Ljava/lang/String;[deprecated]
*#setSchemaUsername(Ljava/lang/String;)V[deprecated]
*#getSchemaPassword()Ljava/lang/String;[deprecated]
*#setSchemaPassword(Ljava/lang/String;)V[deprecated]
*#getData()Ljava/util/List;[deprecated]
*#setData(Ljava/util/List;)V[deprecated]
*#getDataUsername()Ljava/lang/String;[deprecated]
*#setDataUsername(Ljava/lang/String;)V[deprecated]
*#getDataPassword()Ljava/lang/String;[deprecated]
*#setDataPassword(Ljava/lang/String;)V[deprecated]
*#isContinueOnError()Z[deprecated]
*#setContinueOnError(Z)V[deprecated]
*#getSeparator()Ljava/lang/String;[deprecated]
*#setSeparator(Ljava/lang/String;)V[deprecated]
*#getSqlScriptEncoding()Ljava/nio/charset/Charset;[deprecated]
*#setSqlScriptEncoding(Ljava/nio/charset/Charset;)V[deprecated]
+#getEmbeddedDatabaseConnection()Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
+#setEmbeddedDatabaseConnection(Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;)V
@2.7.0
-#getInitializationMode()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;[deprecated]
-#setInitializationMode(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V[deprecated]
-#getPlatform()Ljava/lang/String;[deprecated]
-#setPlatform(Ljava/lang/String;)V[deprecated]
-#getSchema()Ljava/util/List;[deprecated]
-#setSchema(Ljava/util/List;)V[deprecated]
-#getSchemaUsername()Ljava/lang/String;[deprecated]
-#setSchemaUsername(Ljava/lang/String;)V[deprecated]
-#getSchemaPassword()Ljava/lang/String;[deprecated]
-#setSchemaPassword(Ljava/lang/String;)V[deprecated]
-#getData()Ljava/util/List;[deprecated]
-#setData(Ljava/util/List;)V[deprecated]
-#getDataUsername()Ljava/lang/String;[deprecated]
-#setDataUsername(Ljava/lang/String;)V[deprecated]
-#getDataPassword()Ljava/lang/String;[deprecated]
-#setDataPassword(Ljava/lang/String;)V[deprecated]
-#isContinueOnError()Z[deprecated]
-#setContinueOnError(Z)V[deprecated]
-#getSeparator()Ljava/lang/String;[deprecated]
-#setSeparator(Ljava/lang/String;)V[deprecated]
-#getSqlScriptEncoding()Ljava/nio/charset/Charset;[deprecated]
-#setSqlScriptEncoding(Ljava/nio/charset/Charset;)V[deprecated]

+###org/springframework/boot/autoconfigure/jdbc/DataSourceInitializedEvent
@1.1.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/DataSourceInitializedEvent

+###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$DataSourceInitializerConfiguration
@1.1.3.RELEASE
+#dataSourceInitializer()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceInitializer;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$DataSourceInitializerConfiguration

+###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$JdbcTemplateConfiguration
@1.0.0.RELEASE
+#jdbcTemplate()Lorg/springframework/jdbc/core/JdbcTemplate;
+#namedParameterJdbcTemplate()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$JdbcTemplateConfiguration

+###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$NonEmbeddedConfiguration
@1.1.0.RELEASE
+#dataSource()Ljavax/sql/DataSource;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$NonEmbeddedConfiguration

+###org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration$TransactionManagementConfiguration
@1.0.0.RELEASE
@1.5.3.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration$TransactionManagementConfiguration

+###org/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection
@1.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
+#getDriverClassName()Ljava/lang/String;
+#getType()Lorg/springframework/jdbc/datasource/embedded/EmbeddedDatabaseType;
+#getUrl()Ljava/lang/String;
+#isEmbedded(Ljava/lang/String;)Z
+#get(Ljava/lang/ClassLoader;)Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
@1.0.1.RELEASE
+#isEmbedded(Ljavax/sql/DataSource;)Z
@1.3.1.RELEASE
+#getUrl(Ljava/lang/String;)Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection

+###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$EmbeddedConfiguration
@1.0.0.RELEASE
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$EmbeddedConfiguration

+###org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#getOrder()I
+#transactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
@1.3.0.RELEASE
+#transactionManager()Lorg/springframework/jdbc/datasource/DataSourceTransactionManager;
-#getOrder()I
-#transactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
@1.4.0.RELEASE
-#transactionManager()Lorg/springframework/jdbc/datasource/DataSourceTransactionManager;

+###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#containsAutoConfiguredDataSource(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Z
@1.1.0.RELEASE
+#dataSourceAutoConfigurationInitializer()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceInitializer;
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
@1.1.3.RELEASE
-#dataSourceAutoConfigurationInitializer()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceInitializer;
@1.4.0.RELEASE
+#dataSourceInitializer()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceInitializer;
@1.5.0.RELEASE
+#dataSourceInitializer(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceInitializer;
-#dataSourceInitializer()Lorg/springframework/boot/autoconfigure/jdbc/DataSourceInitializer;
@2.0.0.RELEASE
-#dataSourceInitializer(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceInitializer;
-#containsAutoConfiguredDataSource(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Z

+###org/springframework/boot/autoconfigure/PropertyPlaceholderAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#propertySourcesPlaceholderConfigurer()Lorg/springframework/context/support/PropertySourcesPlaceholderConfigurer;
@1.5.0.RELEASE
-#propertySourcesPlaceholderConfigurer()Lorg/springframework/context/support/PropertySourcesPlaceholderConfigurer;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/PropertyPlaceholderAutoConfiguration

+###org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration$ResourceBundleCondition
@1.1.0.RELEASE
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration$ResourceBundleCondition

+###org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration
@1.1.0.RELEASE
+#<init>()V
+#checkChangelogExists()V
+#liquibase()Lliquibase/integration/spring/SpringLiquibase;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/core/io/ResourceLoader;Ljavax/sql/DataSource;)V
-#<init>()V
@1.4.1.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/core/io/ResourceLoader;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/core/io/ResourceLoader;Ljavax/sql/DataSource;)V
@1.4.5.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/core/io/ResourceLoader;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;)V
@1.5.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/core/io/ResourceLoader;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@1.5.2.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/core/io/ResourceLoader;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.1.7.RELEASE
-#checkChangelogExists()V
@2.1.8.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;)V
+#liquibase(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lliquibase/integration/spring/SpringLiquibase;
-#<init>(Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseProperties;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#liquibase()Lliquibase/integration/spring/SpringLiquibase;
@2.5.0
+#liquibase(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lliquibase/integration/spring/SpringLiquibase;
-#liquibase(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lliquibase/integration/spring/SpringLiquibase;

+###org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties
@1.1.0.RELEASE
+#<init>()V
+#getChangeLog()Ljava/lang/String;
+#setChangeLog(Ljava/lang/String;)V
+#isCheckChangeLogLocation()Z
+#setCheckChangeLogLocation(Z)V
+#getContexts()Ljava/lang/String;
+#setContexts(Ljava/lang/String;)V
+#getDefaultSchema()Ljava/lang/String;
+#setDefaultSchema(Ljava/lang/String;)V
+#isDropFirst()Z
+#setDropFirst(Z)V
+#isEnabled()Z
+#setEnabled(Z)V
@1.1.7.RELEASE
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
@1.3.0.RELEASE
+#getLabels()Ljava/lang/String;
+#setLabels(Ljava/lang/String;)V
+#getParameters()Ljava/util/Map;
+#setParameters(Ljava/util/Map;)V
@1.4.0.RELEASE
+#getRollbackFile()Ljava/io/File;
+#setRollbackFile(Ljava/io/File;)V
@2.1.0.RELEASE
+#getLiquibaseSchema()Ljava/lang/String;
+#setLiquibaseSchema(Ljava/lang/String;)V
+#getLiquibaseTablespace()Ljava/lang/String;
+#setLiquibaseTablespace(Ljava/lang/String;)V
+#getDatabaseChangeLogTable()Ljava/lang/String;
+#setDatabaseChangeLogTable(Ljava/lang/String;)V
+#getDatabaseChangeLogLockTable()Ljava/lang/String;
+#setDatabaseChangeLogLockTable(Ljava/lang/String;)V
+#isTestRollbackOnUpdate()Z
+#setTestRollbackOnUpdate(Z)V
@2.1.7.RELEASE
-#isCheckChangeLogLocation()Z
-#setCheckChangeLogLocation(Z)V
@2.3.0.RELEASE
+#isClearChecksums()Z
+#setClearChecksums(Z)V
+#getTag()Ljava/lang/String;
+#setTag(Ljava/lang/String;)V
@2.4.0
+#getDriverClassName()Ljava/lang/String;
+#setDriverClassName(Ljava/lang/String;)V
@3.0.0
+#getLabelFilter()Ljava/lang/String;
+#setLabelFilter(Ljava/lang/String;)V
*#getLabels()Ljava/lang/String;[deprecated]
*#setLabels(Ljava/lang/String;)V[deprecated]

+###org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
+#liquibaseDefaultDdlModeProvider(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/liquibase/LiquibaseSchemaManagementProvider;

+###org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseJpaDependencyConfiguration
@1.1.0.RELEASE
+#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseJpaDependencyConfiguration

+###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchDataAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#elasticsearchTemplate(Lorg/elasticsearch/client/Client;)Lorg/springframework/data/elasticsearch/core/ElasticsearchTemplate;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchDataAutoConfiguration

+###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchProperties
@1.1.0.RELEASE
+#<init>()V
+#getClusterName()Ljava/lang/String;
+#setClusterName(Ljava/lang/String;)V
+#getClusterNodes()Ljava/lang/String;
+#setClusterNodes(Ljava/lang/String;)V
@1.2.3.RELEASE
+#getProperties()Ljava/util/Map;
+#setProperties(Ljava/util/Map;)V
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchProperties

+###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#elasticsearchClient()Lorg/elasticsearch/client/Client;
+#destroy()V
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchAutoConfiguration

+###org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration$FreeMarkerNonWebConfiguration
@1.1.0.RELEASE
+#<init>()V
+#freeMarkerConfiguration()Lorg/springframework/ui/freemarker/FreeMarkerConfigurationFactoryBean;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration$FreeMarkerNonWebConfiguration

+###org/springframework/boot/autoconfigure/freemarker/FreeMarkerTemplateAvailabilityProvider
@1.1.0.RELEASE
+#<init>()V
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z
@1.4.6.RELEASE
-#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z
@1.5.0.RELEASE
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z
@1.5.3.RELEASE
-#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z

+###org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration$FreeMarkerWebConfiguration
@1.1.0.RELEASE
+#<init>()V
+#freeMarkerConfigurer()Lorg/springframework/web/servlet/view/freemarker/FreeMarkerConfigurer;
+#freeMarkerConfiguration(Lorg/springframework/web/servlet/view/freemarker/FreeMarkerConfig;)Lfreemarker/template/Configuration;
+#freeMarkerViewResolver()Lorg/springframework/web/servlet/view/freemarker/FreeMarkerViewResolver;
@1.4.0.RELEASE
+#resourceUrlEncodingFilter()Lorg/springframework/web/servlet/resource/ResourceUrlEncodingFilter;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration$FreeMarkerWebConfiguration

+###org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties
@1.1.0.RELEASE
+#<init>()V
+#getSettings()Ljava/util/Map;
+#setSettings(Ljava/util/Map;)V
+#getTemplateLoaderPath()Ljava/lang/String;
+#setTemplateLoaderPath(Ljava/lang/String;)V
+#applyToViewResolver(Lorg/springframework/web/servlet/view/freemarker/FreeMarkerViewResolver;)V
@1.1.6.RELEASE
-#applyToViewResolver(Lorg/springframework/web/servlet/view/freemarker/FreeMarkerViewResolver;)V
@1.2.0.RELEASE
+#getTemplateLoaderPath()[Ljava/lang/String;
+#setTemplateLoaderPath([Ljava/lang/String;)V
-#getTemplateLoaderPath()Ljava/lang/String;
-#setTemplateLoaderPath(Ljava/lang/String;)V
@1.3.0.RELEASE
+#isPreferFileSystemAccess()Z
+#setPreferFileSystemAccess(Z)V

+###org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration$FreeMarkerConfiguration
@1.1.0.RELEASE
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration$FreeMarkerConfiguration

+###org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#checkTemplateLocationExists()V
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties;)V
-#<init>()V

+###org/springframework/boot/autoconfigure/redis/RedisProperties$Pool
@1.0.0.RELEASE
+#<init>()V
+#getMaxIdle()I
+#setMaxIdle(I)V
+#getMinIdle()I
+#setMinIdle(I)V
+#getMaxActive()I
+#setMaxActive(I)V
+#getMaxWait()I
+#setMaxWait(I)V
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/redis/RedisProperties$Pool

+###org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration$RedisConnectionConfiguration
@1.0.0.RELEASE
@1.1.7.RELEASE
+#redisConnectionFactory()Lorg/springframework/data/redis/connection/RedisConnectionFactory;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration$RedisConnectionConfiguration

+###org/springframework/boot/autoconfigure/redis/RedisProperties
@1.0.0.RELEASE
+#<init>()V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getPool()Lorg/springframework/boot/autoconfigure/redis/RedisProperties$Pool;
+#setPool(Lorg/springframework/boot/autoconfigure/redis/RedisProperties$Pool;)V
@1.2.0.RELEASE
+#getDatabase()I
+#setDatabase(I)V
+#getSentinel()Lorg/springframework/boot/autoconfigure/redis/RedisProperties$Sentinel;
+#setSentinel(Lorg/springframework/boot/autoconfigure/redis/RedisProperties$Sentinel;)V
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/redis/RedisProperties

+###org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration$RedisPooledConnectionConfiguration
@1.0.0.RELEASE
+#lettucePool()Lorg/springframework/data/redis/connection/lettuce/LettucePool;
@1.1.0.RELEASE
-#lettucePool()Lorg/springframework/data/redis/connection/lettuce/LettucePool;
@1.1.7.RELEASE
+#redisConnectionFactory()Lorg/springframework/data/redis/connection/RedisConnectionFactory;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration$RedisPooledConnectionConfiguration

+###org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration$RedisConfiguration
@1.0.0.RELEASE
@1.1.7.RELEASE
+#redisTemplate(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/core/RedisOperations;
+#stringRedisTemplate(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/core/StringRedisTemplate;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration$RedisConfiguration

+###org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#redisProperties()Lorg/springframework/boot/autoconfigure/redis/RedisProperties;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration

+###org/springframework/boot/autoconfigure/social/LinkedInAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/LinkedInAutoConfiguration

+###org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration$AuthenticationUserIdSourceConfig
@1.1.0.RELEASE
+#getUserIdSource()Lorg/springframework/social/UserIdSource;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration$AuthenticationUserIdSourceConfig

+###org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration$FacebookAutoConfigurationAdapter
@1.1.0.RELEASE
+#facebook(Lorg/springframework/social/connect/ConnectionRepository;)Lorg/springframework/social/facebook/api/Facebook;
+#facebookConnectView()Lorg/springframework/web/servlet/View;
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration$FacebookAutoConfigurationAdapter

+###org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration$SpringSocialThymeleafConfig
@1.1.2.RELEASE
+#springSocialDialect()Lorg/springframework/social/connect/web/thymeleaf/SpringSocialDialect;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration$SpringSocialThymeleafConfig

+###org/springframework/boot/autoconfigure/social/TwitterAutoConfiguration$TwitterAutoConfigurationAdapter
@1.1.0.RELEASE
+#twitter(Lorg/springframework/social/connect/ConnectionRepository;)Lorg/springframework/social/twitter/api/Twitter;
+#twitterConnectView()Lorg/springframework/web/servlet/View;
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/social/TwitterAutoConfiguration$TwitterAutoConfigurationAdapter

+###org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration$AnonymousUserIdSourceConfig
@1.1.0.RELEASE
+#getUserIdSource()Lorg/springframework/social/UserIdSource;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration$AnonymousUserIdSourceConfig

+###org/springframework/boot/autoconfigure/social/LinkedInAutoConfiguration$LinkedInAutoConfigurationAdapter
@1.1.0.RELEASE
+#linkedin(Lorg/springframework/social/connect/ConnectionRepository;)Lorg/springframework/social/linkedin/api/LinkedIn;
+#linkedInConnectView()Lorg/springframework/web/servlet/View;
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/social/LinkedInAutoConfiguration$LinkedInAutoConfigurationAdapter

+###org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration

+###org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration$SocialAutoConfigurationAdapter
@1.1.0.RELEASE
+#connectController(Lorg/springframework/social/connect/ConnectionFactoryLocator;Lorg/springframework/social/connect/ConnectionRepository;)Lorg/springframework/social/connect/web/ConnectController;
+#beanNameViewResolver()Lorg/springframework/web/servlet/ViewResolver;
+#signInController(Lorg/springframework/social/connect/ConnectionFactoryLocator;Lorg/springframework/social/connect/UsersConnectionRepository;Lorg/springframework/social/connect/web/SignInAdapter;)Lorg/springframework/social/connect/web/ProviderSignInController;
@1.3.0.RELEASE
+#beanNameViewResolver()Lorg/springframework/web/servlet/view/BeanNameViewResolver;
-#beanNameViewResolver()Lorg/springframework/web/servlet/ViewResolver;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration$SocialAutoConfigurationAdapter

+###org/springframework/boot/autoconfigure/social/TwitterAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/TwitterAutoConfiguration

+###org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration
@1.0.0.RELEASE
+#securityDialect()Lorg/thymeleaf/extras/springsecurity3/dialect/SpringSecurityDialect;
@1.3.0.RELEASE
+#securityDialect()Lorg/thymeleaf/extras/springsecurity4/dialect/SpringSecurityDialect;
-#securityDialect()Lorg/thymeleaf/extras/springsecurity3/dialect/SpringSecurityDialect;
@2.1.0.RELEASE
+#securityDialect()Lorg/thymeleaf/extras/springsecurity5/dialect/SpringSecurityDialect;
-#securityDialect()Lorg/thymeleaf/extras/springsecurity4/dialect/SpringSecurityDialect;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafTemplateAvailabilityProvider
@1.1.0.RELEASE
+#<init>()V
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafViewResolverConfiguration
@1.0.0.RELEASE
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#thymeleafViewResolver()Lorg/thymeleaf/spring4/view/ThymeleafViewResolver;
@1.2.0.RELEASE
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafViewResolverConfiguration

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration
@1.0.0.RELEASE
+#templateEngine()Lorg/thymeleaf/spring4/SpringTemplateEngine;
@1.4.0.RELEASE
+#<init>(Ljava/util/Collection;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties;Ljava/util/Collection;Lorg/springframework/beans/factory/ObjectProvider;)V
+#templateEngine()Lorg/thymeleaf/spring5/SpringTemplateEngine;
-#<init>(Ljava/util/Collection;Lorg/springframework/beans/factory/ObjectProvider;)V
-#templateEngine()Lorg/thymeleaf/spring4/SpringTemplateEngine;
@2.2.0.RELEASE
-#<init>(Lorg/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties;Ljava/util/Collection;Lorg/springframework/beans/factory/ObjectProvider;)V
-#templateEngine()Lorg/thymeleaf/spring5/SpringTemplateEngine;
@2.5.11
-###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafWebLayoutConfiguration
@1.0.0.RELEASE
+#layoutDialect()Lnz/net/ultraq/thymeleaf/LayoutDialect;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafWebLayoutConfiguration

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration
@1.0.0.RELEASE
+#<init>()V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#checkTemplateLocationExists()V
+#defaultTemplateResolver()Lorg/thymeleaf/templateresolver/ITemplateResolver;
+#templateExists(Lorg/springframework/core/env/Environment;Lorg/springframework/core/io/ResourceLoader;Ljava/lang/String;)Z
@1.1.0.RELEASE
-#templateExists(Lorg/springframework/core/env/Environment;Lorg/springframework/core/io/ResourceLoader;Ljava/lang/String;)Z
@1.1.7.RELEASE
+#thymeleafResourceResolver()Lorg/thymeleaf/spring4/resourceresolver/SpringResourceResourceResolver;
@1.2.0.RELEASE
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
@1.3.0.RELEASE
+#defaultTemplateResolver()Lorg/thymeleaf/templateresolver/TemplateResolver;
-#defaultTemplateResolver()Lorg/thymeleaf/templateresolver/ITemplateResolver;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration

+###org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#rootReactor(Lreactor/core/Environment;)Lreactor/core/Reactor;
@1.3.0.RELEASE
+#eventBus(Lreactor/Environment;)Lreactor/bus/EventBus;
-#rootReactor(Lreactor/core/Environment;)Lreactor/core/Reactor;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration

+###org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration$ReactorConfiguration
@1.0.0.RELEASE
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration$ReactorConfiguration

+###org/springframework/boot/autoconfigure/AutoConfigurationPackages
@1.0.0.RELEASE
+#<init>()V
+#get(Lorg/springframework/beans/factory/BeanFactory;)Ljava/util/List;
@1.1.0.RELEASE
+#has(Lorg/springframework/beans/factory/BeanFactory;)Z
+#set(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;[Ljava/lang/String;)V
@1.2.0.RELEASE
+#register(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;[Ljava/lang/String;)V
-#set(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;[Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration
@1.1.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration$HypermediaConfiguration
@1.1.0.RELEASE
@1.3.0.RELEASE
+#halObjectMapperConfigurer()Lorg/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration$HalObjectMapperConfigurer;
@2.0.4.RELEASE
-#halObjectMapperConfigurer()Lorg/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration$HalObjectMapperConfigurer;

+###org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration$EntityLinksConfiguration
@1.1.2.RELEASE
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration$EntityLinksConfiguration

+###org/springframework/boot/autoconfigure/velocity/VelocityAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#checkTemplateLocationExists()V
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/velocity/VelocityProperties;)V
-#<init>()V
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/velocity/VelocityAutoConfiguration

+###org/springframework/boot/autoconfigure/velocity/VelocityTemplateAvailabilityProvider
@1.1.0.RELEASE
+#<init>()V
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z
@1.4.6.RELEASE
-#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/velocity/VelocityTemplateAvailabilityProvider

+###org/springframework/boot/autoconfigure/velocity/VelocityAutoConfiguration$VelocityWebConfiguration
@1.1.0.RELEASE
+#<init>()V
+#velocityConfigurer()Lorg/springframework/web/servlet/view/velocity/VelocityConfigurer;
+#velocityEngine(Lorg/springframework/web/servlet/view/velocity/VelocityConfigurer;)Lorg/apache/velocity/app/VelocityEngine;
+#velocityViewResolver()Lorg/springframework/web/servlet/view/velocity/VelocityViewResolver;
@1.3.0.RELEASE
+#velocityViewResolver()Lorg/springframework/boot/web/servlet/view/velocity/EmbeddedVelocityViewResolver;
+#resourceUrlEncodingFilter()Lorg/springframework/web/servlet/resource/ResourceUrlEncodingFilter;
-#velocityViewResolver()Lorg/springframework/web/servlet/view/velocity/VelocityViewResolver;
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/velocity/VelocityAutoConfiguration$VelocityWebConfiguration

+###org/springframework/boot/autoconfigure/velocity/VelocityAutoConfiguration$VelocityNonWebConfiguration
@1.1.0.RELEASE
+#<init>()V
+#velocityConfiguration()Lorg/springframework/ui/velocity/VelocityEngineFactoryBean;
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/velocity/VelocityAutoConfiguration$VelocityNonWebConfiguration

+###org/springframework/boot/autoconfigure/velocity/VelocityAutoConfiguration$VelocityConfiguration
@1.1.0.RELEASE
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/velocity/VelocityAutoConfiguration$VelocityConfiguration

+###org/springframework/boot/autoconfigure/velocity/VelocityProperties
@1.1.0.RELEASE
+#<init>()V
+#getDateToolAttribute()Ljava/lang/String;
+#setDateToolAttribute(Ljava/lang/String;)V
+#getNumberToolAttribute()Ljava/lang/String;
+#setNumberToolAttribute(Ljava/lang/String;)V
+#getProperties()Ljava/util/Map;
+#setProperties(Ljava/util/Map;)V
+#getResourceLoaderPath()Ljava/lang/String;
+#setResourceLoaderPath(Ljava/lang/String;)V
+#getToolboxConfigLocation()Ljava/lang/String;
+#setToolboxConfigLocation(Ljava/lang/String;)V
+#applyToViewResolver(Lorg/springframework/web/servlet/view/velocity/VelocityViewResolver;)V
@1.1.6.RELEASE
+#applyToViewResolver(Ljava/lang/Object;)V
-#applyToViewResolver(Lorg/springframework/web/servlet/view/velocity/VelocityViewResolver;)V
@1.2.0.RELEASE
+#isPreferFileSystemAccess()Z
+#setPreferFileSystemAccess(Z)V
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/velocity/VelocityProperties

+###org/springframework/boot/autoconfigure/AutoConfigureAfter
@1.0.0.RELEASE
+#value()[Ljava/lang/Class;
@1.2.2.RELEASE
+#name()[Ljava/lang/String;

+###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter
@1.1.0.RELEASE
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter

+###org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration
@1.0.0.RELEASE
+#<init>()V
+#init(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;)V
+#authenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@1.1.5.RELEASE
+#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.1.6.RELEASE
+#configure(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@1.1.7.RELEASE
+#authenticationManager(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;)Lorg/springframework/security/authentication/AuthenticationManager;
-#init(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;)V
-#configure(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;)V
-#authenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
-#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
-#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
-#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
-#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.1.9.RELEASE
+#authenticationManager(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/authentication/AuthenticationManager;
-#authenticationManager(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;)Lorg/springframework/security/authentication/AuthenticationManager;
@1.1.11.RELEASE
+#authenticationManager(Lorg/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration;)Lorg/springframework/security/authentication/AuthenticationManager;
+#bootDefaultingAuthenticationConfigurerAdapter(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;Ljava/util/List;)Lorg/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration$BootDefaultingAuthenticationConfigurerAdapter;
-#authenticationManager(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/authentication/AuthenticationManager;
@1.1.12.RELEASE
+#springBootAuthenticationConfigurerAdapter(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;Ljava/util/List;)Lorg/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration$SpringBootAuthenticationConfigurerAdapter;
-#bootDefaultingAuthenticationConfigurerAdapter(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;Ljava/util/List;)Lorg/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration$BootDefaultingAuthenticationConfigurerAdapter;
@1.2.0.RELEASE
+#authenticationManager(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/authentication/AuthenticationManager;
-#authenticationManager(Lorg/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration;)Lorg/springframework/security/authentication/AuthenticationManager;
-#springBootAuthenticationConfigurerAdapter(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;Ljava/util/List;)Lorg/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration$SpringBootAuthenticationConfigurerAdapter;
@1.2.2.RELEASE
+#authenticationManager(Lorg/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration;)Lorg/springframework/security/authentication/AuthenticationManager;
+#bootDefaultingAuthenticationConfigurerAdapter(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;Ljava/util/List;)Lorg/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration$BootDefaultingAuthenticationConfigurerAdapter;
-#authenticationManager(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/authentication/AuthenticationManager;
@1.2.3.RELEASE
+#springBootAuthenticationConfigurerAdapter(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;Ljava/util/List;)Lorg/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration$SpringBootAuthenticationConfigurerAdapter;
-#bootDefaultingAuthenticationConfigurerAdapter(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;Ljava/util/List;)Lorg/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration$BootDefaultingAuthenticationConfigurerAdapter;
@1.5.0.RELEASE
+#authenticationManagerConfigurationListener()Lorg/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration$AuthenticationManagerConfigurationListener;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration

+###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$WebMvcSecurityConfigurationConditions$DefaultWebMvcSecurityConfiguration
@1.0.0.RELEASE
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$WebMvcSecurityConfigurationConditions$DefaultWebMvcSecurityConfiguration

+###org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#securityProperties()Lorg/springframework/boot/autoconfigure/security/SecurityProperties;
@1.1.0.RELEASE
+#authenticationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)Lorg/springframework/security/authentication/AuthenticationEventPublisher;
@1.3.0.RELEASE
+#authenticationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)Lorg/springframework/security/authentication/DefaultAuthenticationEventPublisher;
-#authenticationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)Lorg/springframework/security/authentication/AuthenticationEventPublisher;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration

+###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$DefaultWebSecurityConfiguration
@1.0.0.RELEASE
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$DefaultWebSecurityConfiguration

+###org/springframework/boot/autoconfigure/security/SecurityProperties$Basic
@1.0.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getRealm()Ljava/lang/String;
+#setRealm(Ljava/lang/String;)V
+#getPath()[Ljava/lang/String;
+#setPath([Ljava/lang/String;)V
@1.2.2.RELEASE
+#getAuthorizeMode()Lorg/springframework/boot/autoconfigure/security/SecurityAuthorizeMode;
+#setAuthorizeMode(Lorg/springframework/boot/autoconfigure/security/SecurityAuthorizeMode;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SecurityProperties$Basic

+###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration
@1.0.0.RELEASE
+#<init>()V
+#authenticationEventPublisher()Lorg/springframework/security/authentication/AuthenticationEventPublisher;
+#ignoredPathsWebSecurityConfigurerAdapter()Lorg/springframework/security/config/annotation/web/WebSecurityConfigurer;
+#configureHeaders(Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers;)V
+#getIgnored(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Ljava/util/List;
@1.1.0.RELEASE
-#authenticationEventPublisher()Lorg/springframework/security/authentication/AuthenticationEventPublisher;
@1.2.0.RELEASE
+#securityFilterChainRegistration(Ljavax/servlet/Filter;Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
@1.3.0.RELEASE
+#ignoredPathsWebSecurityConfigurerAdapter()Lorg/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter;
-#ignoredPathsWebSecurityConfigurerAdapter()Lorg/springframework/security/config/annotation/web/WebSecurityConfigurer;
-#securityFilterChainRegistration(Ljavax/servlet/Filter;Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
@1.5.0.RELEASE
+#ignoredPathsWebSecurityConfigurerAdapter(Ljava/util/List;)Lorg/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter;
+#defaultIgnoredRequestsCustomizer(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/security/SecurityProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/security/IgnoredRequestCustomizer;
-#ignoredPathsWebSecurityConfigurerAdapter()Lorg/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter;
@1.5.2.RELEASE
-#getIgnored(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Ljava/util/List;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration

+###org/springframework/boot/autoconfigure/security/SecurityProperties$User
@1.0.0.RELEASE
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getRole()Ljava/util/List;
+#isDefaultPassword()Z
@1.0.2.RELEASE
+#setRole(Ljava/util/List;)V
@2.0.0.RELEASE
+#getRoles()Ljava/util/List;
+#setRoles(Ljava/util/List;)V
+#isPasswordGenerated()Z
-#getRole()Ljava/util/List;
-#setRole(Ljava/util/List;)V
-#isDefaultPassword()Z

+###org/springframework/boot/autoconfigure/security/SecurityPrequisite
@1.0.0.RELEASE
@1.2.1.RELEASE
-###org/springframework/boot/autoconfigure/security/SecurityPrequisite

+###org/springframework/boot/autoconfigure/security/FallbackWebSecurityAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/FallbackWebSecurityAutoConfiguration

+###org/springframework/boot/autoconfigure/security/SecurityProperties$Headers$HSTS
@1.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers$HSTS;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers$HSTS;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SecurityProperties$Headers$HSTS

+###org/springframework/boot/autoconfigure/security/SecurityProperties
@1.0.0.RELEASE
+#<init>()V
+#getHeaders()Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers;
+#getUser()Lorg/springframework/boot/autoconfigure/security/SecurityProperties$User;
+#getSessions()Lorg/springframework/security/config/http/SessionCreationPolicy;
+#setSessions(Lorg/springframework/security/config/http/SessionCreationPolicy;)V
+#getBasic()Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Basic;
+#setBasic(Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Basic;)V
+#isRequireSsl()Z
+#setRequireSsl(Z)V
+#isEnableCsrf()Z
+#setEnableCsrf(Z)V
+#setIgnored(Ljava/util/List;)V
+#getIgnored()Ljava/util/List;
@1.2.0.RELEASE
+#getFilterOrder()I
+#setFilterOrder(I)V
@1.3.1.RELEASE
+#getFilterDispatcherTypes()Ljava/util/Set;
+#setFilterDispatcherTypes(Ljava/util/Set;)V
@2.0.0.RELEASE
+#getFilter()Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Filter;
-#getHeaders()Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers;
-#getSessions()Lorg/springframework/security/config/http/SessionCreationPolicy;
-#setSessions(Lorg/springframework/security/config/http/SessionCreationPolicy;)V
-#getBasic()Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Basic;
-#setBasic(Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Basic;)V
-#isRequireSsl()Z
-#setRequireSsl(Z)V
-#isEnableCsrf()Z
-#setEnableCsrf(Z)V
-#setIgnored(Ljava/util/List;)V
-#getIgnored()Ljava/util/List;
-#getFilterOrder()I
-#setFilterOrder(I)V
-#getFilterDispatcherTypes()Ljava/util/Set;
-#setFilterDispatcherTypes(Ljava/util/Set;)V

+###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$ApplicationWebSecurityConfigurerAdapter
@1.0.0.RELEASE
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$ApplicationWebSecurityConfigurerAdapter

+###org/springframework/boot/autoconfigure/security/SecurityProperties$Headers
@1.0.0.RELEASE
+#<init>()V
+#isXss()Z
+#setXss(Z)V
+#isCache()Z
+#setCache(Z)V
+#isFrame()Z
+#setFrame(Z)V
+#isContentType()Z
+#setContentType(Z)V
+#getHsts()Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers$HSTS;
+#setHsts(Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers$HSTS;)V
@1.5.0.RELEASE
+#getContentSecurityPolicy()Ljava/lang/String;
+#setContentSecurityPolicy(Ljava/lang/String;)V
+#getContentSecurityPolicyMode()Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers$ContentSecurityPolicyMode;
+#setContentSecurityPolicyMode(Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers$ContentSecurityPolicyMode;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SecurityProperties$Headers

+###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$WebMvcSecurityConfigurationConditions
@1.0.0.RELEASE
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration$WebMvcSecurityConfigurationConditions

+###org/springframework/boot/autoconfigure/jmx/ParentAwareNamingStrategy
@1.1.0.RELEASE
+#<init>(Lorg/springframework/jmx/export/metadata/JmxAttributeSource;)V
+#setEnsureUniqueRuntimeObjectNames(Z)V
+#getObjectName(Ljava/lang/Object;Ljava/lang/String;)Ljavax/management/ObjectName;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V

+###org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
@1.1.0.RELEASE
+#mbeanExporter()Lorg/springframework/jmx/export/annotation/AnnotationMBeanExporter;
+#objectNamingStrategy()Lorg/springframework/boot/autoconfigure/jmx/ParentAwareNamingStrategy;
+#mbeanServer()Lorg/springframework/jmx/support/MBeanServerFactoryBean;
@1.1.2.RELEASE
+#mbeanServer()Ljavax/management/MBeanServer;
-#mbeanServer()Lorg/springframework/jmx/support/MBeanServerFactoryBean;
@1.1.11.RELEASE
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#mbeanExporter(Lorg/springframework/jmx/export/naming/ObjectNamingStrategy;)Lorg/springframework/jmx/export/annotation/AnnotationMBeanExporter;
-#mbeanExporter()Lorg/springframework/jmx/export/annotation/AnnotationMBeanExporter;
@1.2.0.RELEASE
+#mbeanExporter()Lorg/springframework/jmx/export/annotation/AnnotationMBeanExporter;
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#mbeanExporter(Lorg/springframework/jmx/export/naming/ObjectNamingStrategy;)Lorg/springframework/jmx/export/annotation/AnnotationMBeanExporter;
@1.2.1.RELEASE
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#mbeanExporter(Lorg/springframework/jmx/export/naming/ObjectNamingStrategy;)Lorg/springframework/jmx/export/annotation/AnnotationMBeanExporter;
-#mbeanExporter()Lorg/springframework/jmx/export/annotation/AnnotationMBeanExporter;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;)V
+#mbeanExporter(Lorg/springframework/jmx/export/naming/ObjectNamingStrategy;Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/jmx/export/annotation/AnnotationMBeanExporter;
-#<init>()V
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#mbeanExporter(Lorg/springframework/jmx/export/naming/ObjectNamingStrategy;)Lorg/springframework/jmx/export/annotation/AnnotationMBeanExporter;
@2.7.0
+#<init>(Lorg/springframework/boot/autoconfigure/jmx/JmxProperties;)V
-#<init>(Lorg/springframework/core/env/Environment;)V

+###org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer
@1.0.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#logAutoConfigurationReport(Z)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer

+###org/springframework/boot/autoconfigure/solr/SolrProperties
@1.1.0.RELEASE
+#<init>()V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getZkHost()Ljava/lang/String;
+#setZkHost(Ljava/lang/String;)V
@3.0.0
-###org/springframework/boot/autoconfigure/solr/SolrProperties

+###org/springframework/boot/autoconfigure/solr/SolrAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#close()V
+#solrServer()Lorg/apache/solr/client/solrj/SolrServer;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/solr/SolrProperties;)V
+#solrClient()Lorg/apache/solr/client/solrj/SolrClient;
-#<init>()V
-#close()V
-#solrServer()Lorg/apache/solr/client/solrj/SolrServer;
@2.2.0.RELEASE
+#<init>()V
+#solrClient(Lorg/springframework/boot/autoconfigure/solr/SolrProperties;)Lorg/apache/solr/client/solrj/SolrClient;
-#<init>(Lorg/springframework/boot/autoconfigure/solr/SolrProperties;)V
-#solrClient()Lorg/apache/solr/client/solrj/SolrClient;
@3.0.0
-###org/springframework/boot/autoconfigure/solr/SolrAutoConfiguration

+###org/springframework/boot/autoconfigure/EnableAutoConfiguration
@1.0.0.RELEASE
+#exclude()[Ljava/lang/Class;
@1.3.0.RELEASE
+#excludeName()[Ljava/lang/String;

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingViewResolverConfiguration
@1.1.0.RELEASE
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingViewResolverConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingViewResolverConfiguration$ThymeleafViewResolverViewResolverDelegateConfiguration
@1.1.0.RELEASE
+#deviceDelegatingViewResolver()Lorg/springframework/mobile/device/view/LiteDeviceDelegatingViewResolver;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingViewResolverConfiguration$ThymeleafViewResolverViewResolverDelegateConfiguration

+###org/springframework/boot/autoconfigure/mobile/SitePreferenceAutoConfiguration$SitePreferenceAutoConfigurationAdapter
@1.1.0.RELEASE
+#sitePreferenceHandlerInterceptor()Lorg/springframework/mobile/device/site/SitePreferenceHandlerInterceptor;
+#sitePreferenceHandlerMethodArgumentResolver()Lorg/springframework/mobile/device/site/SitePreferenceHandlerMethodArgumentResolver;
+#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V
+#addArgumentResolvers(Ljava/util/List;)V
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/SitePreferenceAutoConfiguration$SitePreferenceAutoConfigurationAdapter

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingViewResolverConfiguration$InternalResourceViewResolverDelegateConfiguration
@1.1.0.RELEASE
+#deviceDelegatingViewResolver()Lorg/springframework/mobile/device/view/LiteDeviceDelegatingViewResolver;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingViewResolverConfiguration$InternalResourceViewResolverDelegateConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceResolverAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
@1.4.0.RELEASE
+#deviceResolverHandlerInterceptor()Lorg/springframework/mobile/device/DeviceResolverHandlerInterceptor;
+#deviceHandlerMethodArgumentResolver()Lorg/springframework/mobile/device/DeviceHandlerMethodArgumentResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceResolverAutoConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceResolverAutoConfiguration$DeviceResolverAutoConfigurationAdapter
@1.0.0.RELEASE
+#deviceResolverHandlerInterceptor()Lorg/springframework/mobile/device/DeviceResolverHandlerInterceptor;
+#deviceHandlerMethodArgumentResolver()Lorg/springframework/mobile/device/DeviceHandlerMethodArgumentResolver;
+#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V
+#addArgumentResolvers(Ljava/util/List;)V
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceResolverAutoConfiguration$DeviceResolverAutoConfigurationAdapter

+###org/springframework/boot/autoconfigure/mobile/SitePreferenceAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@1.4.0.RELEASE
+#sitePreferenceHandlerInterceptor()Lorg/springframework/mobile/device/site/SitePreferenceHandlerInterceptor;
+#sitePreferenceHandlerMethodArgumentResolver()Lorg/springframework/mobile/device/site/SitePreferenceHandlerMethodArgumentResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/SitePreferenceAutoConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration

+###org/springframework/boot/autoconfigure/condition/ConditionalOnBean
@1.0.0.RELEASE
+#value()[Ljava/lang/Class;
+#annotation()[Ljava/lang/Class;
+#name()[Ljava/lang/String;
+#search()Lorg/springframework/boot/autoconfigure/condition/SearchStrategy;
@1.2.0.RELEASE
+#type()[Ljava/lang/String;
@2.1.0.RELEASE
+#parameterizedContainer()[Ljava/lang/Class;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnJava$Range
@1.1.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/condition/ConditionalOnJava$Range;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionalOnJava$Range;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnNotWebApplication
@1.0.0.RELEASE

+###org/springframework/boot/autoconfigure/condition/ConditionOutcome
@1.0.0.RELEASE
+#<init>(ZLjava/lang/String;)V
+#match()Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#match(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#noMatch(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#isMatch()Z
+#getMessage()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.2.0.RELEASE
+#toString()Ljava/lang/String;
@1.3.0.RELEASE
+#inverse(Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
@1.4.1.RELEASE
+#<init>(ZLorg/springframework/boot/autoconfigure/condition/ConditionMessage;)V
+#match(Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#noMatch(Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#getConditionMessage()Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;

+###org/springframework/boot/autoconfigure/condition/ConditionEvaluationReport
@1.0.0.RELEASE
+#recordConditionEvaluation(Ljava/lang/String;Lorg/springframework/context/annotation/Condition;Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;)V
+#getConditionAndOutcomesBySource()Ljava/util/Map;
+#getParent()Lorg/springframework/boot/autoconfigure/condition/ConditionEvaluationReport;
+#get(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Lorg/springframework/boot/autoconfigure/condition/ConditionEvaluationReport;
@1.3.0.RELEASE
+#recordExclusions(Ljava/util/Collection;)V
+#recordEvaluationCandidates(Ljava/util/List;)V
+#getExclusions()Ljava/util/List;
+#getUnconditionalClasses()Ljava/util/Set;
@2.0.0.RELEASE
+#getDelta(Lorg/springframework/boot/autoconfigure/condition/ConditionEvaluationReport;)Lorg/springframework/boot/autoconfigure/condition/ConditionEvaluationReport;
@2.1.0.RELEASE
+#find(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/boot/autoconfigure/condition/ConditionEvaluationReport;

+###org/springframework/boot/autoconfigure/condition/SearchStrategy
@1.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/condition/SearchStrategy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/SearchStrategy;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication
@1.0.0.RELEASE
@2.0.0.RELEASE
+#type()Lorg/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication$Type;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnClass
@1.0.0.RELEASE
+#value()[Ljava/lang/Class;
+#name()[Ljava/lang/String;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnExpression
@1.0.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnJava$JavaVersion
@1.1.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/condition/ConditionalOnJava$JavaVersion;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionalOnJava$JavaVersion;
+#isWithin(Lorg/springframework/boot/autoconfigure/condition/ConditionalOnJava$Range;Lorg/springframework/boot/autoconfigure/condition/ConditionalOnJava$JavaVersion;)Z
+#toString()Ljava/lang/String;
+#getJavaVersion()Lorg/springframework/boot/autoconfigure/condition/ConditionalOnJava$JavaVersion;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/condition/ConditionalOnJava$JavaVersion

+###org/springframework/boot/autoconfigure/condition/ConditionalOnResource
@1.0.0.RELEASE
+#resources()[Ljava/lang/String;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnJava
@1.1.0.RELEASE
+#range()Lorg/springframework/boot/autoconfigure/condition/ConditionalOnJava$Range;
+#value()Lorg/springframework/boot/autoconfigure/condition/ConditionalOnJava$JavaVersion;
@2.0.0.RELEASE
+#value()Lorg/springframework/boot/system/JavaVersion;
-#value()Lorg/springframework/boot/autoconfigure/condition/ConditionalOnJava$JavaVersion;

+###org/springframework/boot/autoconfigure/condition/ConditionEvaluationReport$ConditionAndOutcome
@1.0.0.RELEASE
+#<init>(Lorg/springframework/context/annotation/Condition;Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;)V
+#getCondition()Lorg/springframework/context/annotation/Condition;
+#getOutcome()Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.2.2.RELEASE
+#toString()Ljava/lang/String;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean
@1.0.0.RELEASE
+#value()[Ljava/lang/Class;
+#annotation()[Ljava/lang/Class;
+#name()[Ljava/lang/String;
+#search()Lorg/springframework/boot/autoconfigure/condition/SearchStrategy;
@1.2.0.RELEASE
+#type()[Ljava/lang/String;
@1.2.5.RELEASE
+#ignored()[Ljava/lang/Class;
+#ignoredType()[Ljava/lang/String;
@2.1.0.RELEASE
+#parameterizedContainer()[Ljava/lang/Class;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnMissingClass
@1.0.0.RELEASE
+#value()[Ljava/lang/Class;
+#name()[Ljava/lang/String;
@1.1.0.RELEASE
*#value()[Ljava/lang/Class;[deprecated]
@1.3.0.RELEASE
+#value()[Ljava/lang/String;
-#value()[Ljava/lang/Class;[deprecated]
@1.4.0.RELEASE
-#name()[Ljava/lang/String;

+###org/springframework/boot/autoconfigure/condition/ConditionEvaluationReport$ConditionAndOutcomes
@1.0.0.RELEASE
+#<init>()V
+#add(Lorg/springframework/context/annotation/Condition;Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;)V
+#isFullMatch()Z
+#iterator()Ljava/util/Iterator;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnProperty
@1.1.0.RELEASE
+#prefix()Ljava/lang/String;
+#value()[Ljava/lang/String;
+#relaxedNames()Z
@1.2.0.RELEASE
+#name()[Ljava/lang/String;
+#havingValue()Ljava/lang/String;
+#matchIfMissing()Z
@2.0.0.RELEASE
-#relaxedNames()Z

+###org/springframework/boot/autoconfigure/condition/SpringBootCondition
@1.0.0.RELEASE
+#<init>()V
+#matches(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Z
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;

+###org/springframework/boot/autoconfigure/template/AbstractTemplateViewResolverProperties
@1.1.0.RELEASE
+#setCheckTemplateLocation(Z)V
+#isCheckTemplateLocation()Z
+#getViewNames()[Ljava/lang/String;
+#setViewNames([Ljava/lang/String;)V
+#isCache()Z
+#setCache(Z)V
+#getContentType()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#getCharSet()Ljava/lang/String;
+#setCharSet(Ljava/lang/String;)V
+#getPrefix()Ljava/lang/String;
+#setPrefix(Ljava/lang/String;)V
+#getSuffix()Ljava/lang/String;
+#setSuffix(Ljava/lang/String;)V
+#getRequestContextAttribute()Ljava/lang/String;
+#setRequestContextAttribute(Ljava/lang/String;)V
+#isExposeRequestAttributes()Z
+#setExposeRequestAttributes(Z)V
+#isExposeSessionAttributes()Z
+#setExposeSessionAttributes(Z)V
+#isAllowRequestOverride()Z
+#setAllowRequestOverride(Z)V
+#isExposeSpringMacroHelpers()Z
+#setExposeSpringMacroHelpers(Z)V
@1.1.6.RELEASE
+#applyToViewResolver(Ljava/lang/Object;)V
@1.2.0.RELEASE
-#setCheckTemplateLocation(Z)V
-#isCheckTemplateLocation()Z
-#getViewNames()[Ljava/lang/String;
-#setViewNames([Ljava/lang/String;)V
-#isCache()Z
-#setCache(Z)V
-#getContentType()Ljava/lang/String;
-#setContentType(Ljava/lang/String;)V
-#getCharSet()Ljava/lang/String;
-#setCharSet(Ljava/lang/String;)V
@1.2.6.RELEASE
+#isAllowSessionOverride()Z
+#setAllowSessionOverride(Z)V
@2.0.0.RELEASE
+#applyToMvcViewResolver(Ljava/lang/Object;)V
-#applyToViewResolver(Ljava/lang/Object;)V

+###org/springframework/boot/autoconfigure/template/TemplateAvailabilityProvider
@1.1.0.RELEASE
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z

+###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
@3.0.0
-###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfiguration

+###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties
@1.1.0.RELEASE
+#<init>()V
+#getBrokerUrl()Ljava/lang/String;
+#setBrokerUrl(Ljava/lang/String;)V
+#isInMemory()Z
+#setInMemory(Z)V
+#isPooled()Z
+#setPooled(Z)V
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#createConnectionFactory()Ljavax/jms/ConnectionFactory;
+#determineBrokerUrl(Lorg/springframework/core/env/Environment;)Ljava/lang/String;
@1.2.0.RELEASE
-#createConnectionFactory()Ljavax/jms/ConnectionFactory;
-#determineBrokerUrl(Lorg/springframework/core/env/Environment;)Ljava/lang/String;
@1.4.0.RELEASE
*#isPooled()Z[deprecated]
*#setPooled(Z)V[deprecated]
+#getPool()Lorg/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties$Pool;
+#setPool(Lorg/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties$Pool;)V
+#getPackages()Lorg/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties$Packages;
@1.5.0.RELEASE
-#isPooled()Z[deprecated]
-#setPooled(Z)V[deprecated]
@1.5.5.RELEASE
+#getCloseTimeout()I
+#setCloseTimeout(I)V
+#isNonBlockingRedelivery()Z
+#setNonBlockingRedelivery(Z)V
+#getSendTimeout()I
+#setSendTimeout(I)V
@2.0.0.RELEASE
+#getCloseTimeout()Ljava/time/Duration;
+#setCloseTimeout(Ljava/time/Duration;)V
+#getSendTimeout()Ljava/time/Duration;
+#setSendTimeout(Ljava/time/Duration;)V
-#getCloseTimeout()I
-#setCloseTimeout(I)V
-#getSendTimeout()I
-#setSendTimeout(I)V
@2.1.0.RELEASE
+#getPool()Lorg/springframework/boot/autoconfigure/jms/JmsPoolConnectionFactoryProperties;
-#getPool()Lorg/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties$Pool;
-#setPool(Lorg/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties$Pool;)V
@3.0.0
-###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties

+###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfiguration$NetworkBroker
@1.1.0.RELEASE
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfiguration$NetworkBroker

+###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfiguration$EmbeddedBroker
@1.1.0.RELEASE
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfiguration$EmbeddedBroker

+###org/springframework/boot/autoconfigure/jms/hornetq/HornetQAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#jmsConnectionFactory()Ljavax/jms/ConnectionFactory;
@1.2.0.RELEASE
-#jmsConnectionFactory()Ljavax/jms/ConnectionFactory;
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/hornetq/HornetQAutoConfiguration

+###org/springframework/boot/autoconfigure/jms/hornetq/HornetQProperties
@1.1.0.RELEASE
+#<init>()V
+#getMode()Lorg/springframework/boot/autoconfigure/jms/hornetq/HornetQMode;
+#setMode(Lorg/springframework/boot/autoconfigure/jms/hornetq/HornetQMode;)V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getEmbedded()Lorg/springframework/boot/autoconfigure/jms/hornetq/HornetQProperties$Embedded;
@1.4.0.RELEASE
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/hornetq/HornetQProperties

+###org/springframework/boot/autoconfigure/jms/hornetq/HornetQProperties$Embedded
@1.1.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#isPersistent()Z
+#setPersistent(Z)V
+#getDataDirectory()Ljava/lang/String;
+#setDataDirectory(Ljava/lang/String;)V
+#getQueues()[Ljava/lang/String;
+#setQueues([Ljava/lang/String;)V
+#getTopics()[Ljava/lang/String;
+#setTopics([Ljava/lang/String;)V
+#getClusterPassword()Ljava/lang/String;
+#setClusterPassword(Ljava/lang/String;)V
+#isDefaultClusterPassword()Z
@1.1.2.RELEASE
+#getServerId()I
+#setServerId(I)V
+#generateTransportParameters()Ljava/util/Map;
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/hornetq/HornetQProperties$Embedded

+###org/springframework/boot/autoconfigure/jms/hornetq/HornetQConfigurationCustomizer
@1.1.0.RELEASE
+#customize(Lorg/hornetq/core/config/Configuration;)V
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/hornetq/HornetQConfigurationCustomizer

+###org/springframework/boot/autoconfigure/jms/hornetq/HornetQMode
@1.1.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/jms/hornetq/HornetQMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jms/hornetq/HornetQMode;
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/hornetq/HornetQMode

+###org/springframework/boot/autoconfigure/jms/hornetq/HornetQNoOpBindingRegistry
@1.1.0.RELEASE
+#<init>()V
+#lookup(Ljava/lang/String;)Ljava/lang/Object;
+#bind(Ljava/lang/String;Ljava/lang/Object;)Z
+#unbind(Ljava/lang/String;)V
+#close()V
+#getContext()Ljava/lang/Object;
+#setContext(Ljava/lang/Object;)V
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/hornetq/HornetQNoOpBindingRegistry

+###org/springframework/boot/autoconfigure/jms/JmsAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#jmsTemplate()Lorg/springframework/jms/core/JmsTemplate;
@1.4.0.RELEASE
-#jmsTemplate()Lorg/springframework/jms/core/JmsTemplate;

+###org/springframework/boot/autoconfigure/jms/JmsProperties
@1.1.0.RELEASE
+#<init>()V
+#isPubSubDomain()Z
+#setPubSubDomain(Z)V
@1.2.0.RELEASE
+#getJndiName()Ljava/lang/String;
+#setJndiName(Ljava/lang/String;)V
@1.3.0.RELEASE
+#getListener()Lorg/springframework/boot/autoconfigure/jms/JmsProperties$Listener;
@1.5.0.RELEASE
+#getTemplate()Lorg/springframework/boot/autoconfigure/jms/JmsProperties$Template;
@2.1.0.RELEASE
+#getCache()Lorg/springframework/boot/autoconfigure/jms/JmsProperties$Cache;

+###org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$Builder
@1.1.0.RELEASE
+#packages([Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#packages([Ljava/lang/Class;)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#persistenceUnit(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#properties(Ljava/util/Map;)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#build()Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;
@1.2.0.RELEASE
+#jta(Z)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$Builder;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$Builder

+###org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration
@1.0.0.RELEASE
+#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V
+#openEntityManagerInViewInterceptor()Lorg/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor;
@1.1.11.RELEASE
-#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V
-#openEntityManagerInViewInterceptor()Lorg/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor;
@1.2.0.RELEASE
+#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V
+#openEntityManagerInViewInterceptor()Lorg/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor;
@1.2.2.RELEASE
-#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V
-#openEntityManagerInViewInterceptor()Lorg/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor;
@2.2.0.RELEASE
+#openEntityManagerInViewInterceptor()Lorg/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor;
+#openEntityManagerInViewInterceptorConfigurer(Lorg/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor;)Lorg/springframework/web/servlet/config/annotation/WebMvcConfigurer;

+###org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder
@1.1.0.RELEASE
+#<init>(Lorg/springframework/orm/jpa/JpaVendorAdapter;Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties;Lorg/springframework/orm/jpa/persistenceunit/PersistenceUnitManager;)V
+#dataSource(Ljavax/sql/DataSource;)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#setCallback(Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$EntityManagerFactoryBeanCallback;)V
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder

+###org/springframework/boot/autoconfigure/orm/jpa/JpaProperties$Hibernate
@1.1.0.RELEASE
+#<init>()V
+#getNamingStrategy()Ljava/lang/Class;
+#setNamingStrategy(Ljava/lang/Class;)V
+#setNamingstrategy(Ljava/lang/Class;)V[deprecated]
+#getDdlAuto()Ljava/lang/String;
+#setDdlAuto(Ljava/lang/String;)V
@1.3.0.RELEASE
-#setNamingstrategy(Ljava/lang/Class;)V[deprecated]
@1.4.0.RELEASE
+#getNamingStrategy()Ljava/lang/String;[deprecated]
+#setNamingStrategy(Ljava/lang/String;)V[deprecated]
+#isUseNewIdGeneratorMappings()Z
+#setUseNewIdGeneratorMappings(Z)V
+#getNaming()Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties$Naming;
-#getNamingStrategy()Ljava/lang/Class;
-#setNamingStrategy(Ljava/lang/Class;)V
@1.5.0.RELEASE
-#getNamingStrategy()Ljava/lang/String;[deprecated]
-#setNamingStrategy(Ljava/lang/String;)V[deprecated]
@2.0.0.RELEASE
+#isUseNewIdGeneratorMappings()Ljava/lang/Boolean;
+#setUseNewIdGeneratorMappings(Ljava/lang/Boolean;)V
-#isUseNewIdGeneratorMappings()Z
-#setUseNewIdGeneratorMappings(Z)V
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/orm/jpa/JpaProperties$Hibernate

+###org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration
@1.0.0.RELEASE
+#<init>()V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#transactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
+#entityManagerFactory(Lorg/springframework/orm/jpa/JpaVendorAdapter;)Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;
+#jpaVendorAdapter()Lorg/springframework/orm/jpa/JpaVendorAdapter;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@1.1.0.RELEASE
+#entityManagerFactoryBuilder(Lorg/springframework/orm/jpa/JpaVendorAdapter;)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder;
+#entityManagerFactory(Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder;)Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
-#entityManagerFactory(Lorg/springframework/orm/jpa/JpaVendorAdapter;)Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;
@1.3.0.RELEASE
+#entityManagerFactoryBuilder(Lorg/springframework/orm/jpa/JpaVendorAdapter;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder;
+#entityManagerFactory(Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder;)Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;
-#entityManagerFactoryBuilder(Lorg/springframework/orm/jpa/JpaVendorAdapter;)Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder;
-#entityManagerFactory(Lorg/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder;)Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;
@1.4.0.RELEASE
+#entityManagerFactoryBuilder(Lorg/springframework/orm/jpa/JpaVendorAdapter;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder;
-#<init>()V
-#entityManagerFactoryBuilder(Lorg/springframework/orm/jpa/JpaVendorAdapter;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder;
@2.1.0.RELEASE
+#entityManagerFactoryBuilder(Lorg/springframework/orm/jpa/JpaVendorAdapter;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder;
-#entityManagerFactoryBuilder(Lorg/springframework/orm/jpa/JpaVendorAdapter;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder;
@2.2.0.RELEASE
+#transactionManager(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/transaction/PlatformTransactionManager;
-#transactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
@3.0.0
+#entityManagerFactory(Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder;Lorg/springframework/orm/jpa/persistenceunit/PersistenceManagedTypes;)Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;
-#entityManagerFactory(Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder;)Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$EntityManagerFactoryBeanCallback
@1.1.0.RELEASE
+#execute(Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;)V
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder$EntityManagerFactoryBeanCallback

+###org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
@1.0.1.RELEASE
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@1.1.0.RELEASE
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
@1.4.0.RELEASE
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>()V
@1.5.0.RELEASE
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.0.RELEASE
+#<init>()V
-#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V

+###org/springframework/boot/autoconfigure/orm/jpa/JpaProperties
@1.1.0.RELEASE
+#<init>()V
+#getProperties()Ljava/util/Map;
+#setProperties(Ljava/util/Map;)V
+#getDatabasePlatform()Ljava/lang/String;
+#setDatabasePlatform(Ljava/lang/String;)V
+#getDatabase()Lorg/springframework/orm/jpa/vendor/Database;
+#setDatabase(Lorg/springframework/orm/jpa/vendor/Database;)V
+#isGenerateDdl()Z
+#setGenerateDdl(Z)V
+#isShowSql()Z
+#setShowSql(Z)V
+#getHibernate()Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties$Hibernate;
+#setHibernate(Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties$Hibernate;)V
+#getHibernateProperties(Ljavax/sql/DataSource;)Ljava/util/Map;
@1.5.0.RELEASE
+#determineDatabase(Ljavax/sql/DataSource;)Lorg/springframework/orm/jpa/vendor/Database;
@2.0.0.RELEASE
+#getMappingResources()Ljava/util/List;
+#getOpenInView()Ljava/lang/Boolean;
+#setOpenInView(Ljava/lang/Boolean;)V
+#getHibernateProperties(Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;)Ljava/util/Map;
-#getHibernateProperties(Ljavax/sql/DataSource;)Ljava/util/Map;
@2.1.0.RELEASE
-#getHibernate()Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties$Hibernate;
-#setHibernate(Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties$Hibernate;)V
-#getHibernateProperties(Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;)Ljava/util/Map;
@2.2.0.RELEASE
*#determineDatabase(Ljavax/sql/DataSource;)Lorg/springframework/orm/jpa/vendor/Database;[deprecated]
@2.3.0.RELEASE
-#determineDatabase(Ljavax/sql/DataSource;)Lorg/springframework/orm/jpa/vendor/Database;[deprecated]

+###org/springframework/boot/autoconfigure/batch/JobExecutionEvent
@1.0.0.RELEASE
+#<init>(Lorg/springframework/batch/core/JobExecution;)V
+#getJobExecution()Lorg/springframework/batch/core/JobExecution;

+###org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#batchDatabaseInitializer()Lorg/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer;
+#jobLauncherCommandLineRunner(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;)Lorg/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner;
+#jobExecutionExitCodeGenerator()Lorg/springframework/boot/ExitCodeGenerator;
+#jobExplorer(Ljavax/sql/DataSource;)Lorg/springframework/batch/core/explore/JobExplorer;
+#jobOperator(Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/configuration/ListableJobLocator;Lorg/springframework/batch/core/repository/JobRepository;)Lorg/springframework/batch/core/launch/JobOperator;
@1.3.0.RELEASE
+#jobExecutionExitCodeGenerator()Lorg/springframework/boot/autoconfigure/batch/JobExecutionExitCodeGenerator;
+#jobOperator(Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/configuration/ListableJobLocator;Lorg/springframework/batch/core/repository/JobRepository;)Lorg/springframework/batch/core/launch/support/SimpleJobOperator;
-#jobExecutionExitCodeGenerator()Lorg/springframework/boot/ExitCodeGenerator;
-#jobOperator(Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/configuration/ListableJobLocator;Lorg/springframework/batch/core/repository/JobRepository;)Lorg/springframework/batch/core/launch/JobOperator;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/batch/BatchProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>()V
@1.5.0.RELEASE
+#batchDatabaseInitializer(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer;
-#batchDatabaseInitializer()Lorg/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer;
@2.0.0.RELEASE
+#batchDataSourceInitializer(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/boot/autoconfigure/batch/BatchDataSourceInitializer;
-#batchDatabaseInitializer(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer;
-#jobExplorer(Ljavax/sql/DataSource;)Lorg/springframework/batch/core/explore/JobExplorer;
@2.0.7.RELEASE
+#jobLauncherCommandLineRunner(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/repository/JobRepository;)Lorg/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner;
-#jobLauncherCommandLineRunner(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;)Lorg/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner;
@2.1.7.RELEASE
+#<init>()V
+#jobLauncherCommandLineRunner(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/repository/JobRepository;Lorg/springframework/boot/autoconfigure/batch/BatchProperties;)Lorg/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner;
+#jobOperator(Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/configuration/ListableJobLocator;Lorg/springframework/batch/core/repository/JobRepository;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/batch/core/launch/support/SimpleJobOperator;
-#<init>(Lorg/springframework/boot/autoconfigure/batch/BatchProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#batchDataSourceInitializer(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/boot/autoconfigure/batch/BatchDataSourceInitializer;
-#jobLauncherCommandLineRunner(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/repository/JobRepository;)Lorg/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner;
-#jobOperator(Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/configuration/ListableJobLocator;Lorg/springframework/batch/core/repository/JobRepository;)Lorg/springframework/batch/core/launch/support/SimpleJobOperator;
@2.2.0.RELEASE
+#jobOperator(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/configuration/ListableJobLocator;Lorg/springframework/batch/core/repository/JobRepository;)Lorg/springframework/batch/core/launch/support/SimpleJobOperator;
-#jobOperator(Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/configuration/ListableJobLocator;Lorg/springframework/batch/core/repository/JobRepository;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/batch/core/launch/support/SimpleJobOperator;
@2.3.0.RELEASE
+#jobLauncherApplicationRunner(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/repository/JobRepository;Lorg/springframework/boot/autoconfigure/batch/BatchProperties;)Lorg/springframework/boot/autoconfigure/batch/JobLauncherApplicationRunner;
-#jobLauncherCommandLineRunner(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/repository/JobRepository;Lorg/springframework/boot/autoconfigure/batch/BatchProperties;)Lorg/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner;

+###org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration$JpaBatchConfiguration
@1.0.0.RELEASE
+#jpaBatchConfigurer(Ljavax/sql/DataSource;Ljavax/persistence/EntityManagerFactory;)Lorg/springframework/batch/core/configuration/annotation/BatchConfigurer;
+#basicBatchConfigurer(Ljavax/sql/DataSource;)Lorg/springframework/batch/core/configuration/annotation/BatchConfigurer;
@1.3.0.RELEASE
+#jpaBatchConfigurer(Ljavax/sql/DataSource;Ljavax/persistence/EntityManagerFactory;)Lorg/springframework/boot/autoconfigure/batch/BasicBatchConfigurer;
+#basicBatchConfigurer(Ljavax/sql/DataSource;)Lorg/springframework/boot/autoconfigure/batch/BasicBatchConfigurer;
-#jpaBatchConfigurer(Ljavax/sql/DataSource;Ljavax/persistence/EntityManagerFactory;)Lorg/springframework/batch/core/configuration/annotation/BatchConfigurer;
-#basicBatchConfigurer(Ljavax/sql/DataSource;)Lorg/springframework/batch/core/configuration/annotation/BatchConfigurer;
@1.5.0.RELEASE
+#jpaBatchConfigurer(Ljavax/sql/DataSource;Ljavax/persistence/EntityManagerFactory;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/batch/BasicBatchConfigurer;
+#basicBatchConfigurer(Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/batch/BasicBatchConfigurer;
-#jpaBatchConfigurer(Ljavax/sql/DataSource;Ljavax/persistence/EntityManagerFactory;)Lorg/springframework/boot/autoconfigure/batch/BasicBatchConfigurer;
-#basicBatchConfigurer(Ljavax/sql/DataSource;)Lorg/springframework/boot/autoconfigure/batch/BasicBatchConfigurer;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration$JpaBatchConfiguration

+###org/springframework/boot/autoconfigure/batch/JobExecutionExitCodeGenerator
@1.0.0.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/boot/autoconfigure/batch/JobExecutionEvent;)V
+#getExitCode()I
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner
@1.0.0.RELEASE
+#<init>(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;)V
+#setJobNames(Ljava/lang/String;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setJobRegistry(Lorg/springframework/batch/core/configuration/JobRegistry;)V
+#setJobParametersConverter(Lorg/springframework/batch/core/converter/JobParametersConverter;)V
+#setJobs(Ljava/util/Collection;)V
+#run([Ljava/lang/String;)V
@2.0.0.RELEASE
+#setOrder(I)V
+#getOrder()I
@2.0.7.RELEASE
*#<init>(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;)V[deprecated]
+#<init>(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/repository/JobRepository;)V
@2.2.0.RELEASE
-#<init>(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;)V[deprecated]
@2.3.0.RELEASE
-#setOrder(I)V
-#getOrder()I
-#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
-#setJobRegistry(Lorg/springframework/batch/core/configuration/JobRegistry;)V
-#setJobNames(Ljava/lang/String;)V
-#setJobParametersConverter(Lorg/springframework/batch/core/converter/JobParametersConverter;)V
-#setJobs(Ljava/util/Collection;)V
-#run([Ljava/lang/String;)V
@2.6.0
-###org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner

+###org/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer
@1.0.0.RELEASE
+#<init>()V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
@1.2.0.RELEASE
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
@1.5.0.RELEASE
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/batch/BatchProperties;)V
-#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer

+###org/springframework/boot/autoconfigure/batch/BasicBatchConfigurer
@1.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#<init>(Ljavax/sql/DataSource;Ljavax/persistence/EntityManagerFactory;)V
+#getJobRepository()Lorg/springframework/batch/core/repository/JobRepository;
+#getTransactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
+#getJobLauncher()Lorg/springframework/batch/core/launch/JobLauncher;
+#initialize()V
@1.1.4.RELEASE
+#getJobExplorer()Lorg/springframework/batch/core/explore/JobExplorer;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/batch/BasicBatchConfigurer

+###org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$CglibAutoProxyConfiguration
@1.0.0.RELEASE
+#<init>()V
@2.2.1.RELEASE
-###org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$CglibAutoProxyConfiguration

+###org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$JdkDynamicAutoProxyConfiguration
@1.0.0.RELEASE
+#<init>()V
@2.2.1.RELEASE
-###org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$JdkDynamicAutoProxyConfiguration

+###org/springframework/boot/autoconfigure/aop/AopAutoConfiguration
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/websocket/WebSocketAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#websocketContainerCustomizer()Lorg/springframework/boot/context/embedded/EmbeddedServletContainerCustomizer;
@1.2.0.RELEASE
-#websocketContainerCustomizer()Lorg/springframework/boot/context/embedded/EmbeddedServletContainerCustomizer;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/websocket/WebSocketAutoConfiguration

+###org/springframework/boot/autoconfigure/cache/JCacheManagerCustomizer
@1.3.0.RELEASE
+#customize(Ljavax/cache/CacheManager;)V

+###org/springframework/boot/autoconfigure/cache/InfinispanCacheConfiguration
@1.3.0.RELEASE
+#<init>()V
+#cacheManager(Lorg/infinispan/manager/EmbeddedCacheManager;)Lorg/infinispan/spring/provider/SpringEmbeddedCacheManager;
+#infinispanCacheManager()Lorg/infinispan/manager/EmbeddedCacheManager;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>()V
+#cacheManager(Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Lorg/infinispan/manager/EmbeddedCacheManager;)Lorg/infinispan/spring/embedded/provider/SpringEmbeddedCacheManager;
+#infinispanCacheManager(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/infinispan/manager/EmbeddedCacheManager;
-#<init>(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Lorg/springframework/beans/factory/ObjectProvider;)V
-#cacheManager(Lorg/infinispan/manager/EmbeddedCacheManager;)Lorg/infinispan/spring/provider/SpringEmbeddedCacheManager;
-#infinispanCacheManager()Lorg/infinispan/manager/EmbeddedCacheManager;

+###org/springframework/boot/autoconfigure/logging/ConditionEvaluationReportLoggingListener
@2.0.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#logAutoConfigurationReport(Z)V
@2.0.6.RELEASE
+#<init>(Lorg/springframework/boot/logging/LogLevel;)V
+#getLogLevelForReport()Lorg/springframework/boot/logging/LogLevel;
@3.0.0
+#forLogLevel(Lorg/springframework/boot/logging/LogLevel;)Lorg/springframework/boot/autoconfigure/logging/ConditionEvaluationReportLoggingListener;
-#<init>(Lorg/springframework/boot/logging/LogLevel;)V
-#getLogLevelForReport()Lorg/springframework/boot/logging/LogLevel;
-#logAutoConfigurationReport(Z)V

+###org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer
@2.0.0.RELEASE
+#<init>()V
+#configure(Lorg/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory;Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)V
@2.6.0
-#<init>()V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template
@1.4.0.RELEASE
+#<init>()V
+#getRetry()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Retry;
+#getMandatory()Ljava/lang/Boolean;
+#setMandatory(Ljava/lang/Boolean;)V
+#getReceiveTimeout()Ljava/lang/Long;
+#setReceiveTimeout(Ljava/lang/Long;)V
+#getReplyTimeout()Ljava/lang/Long;
+#setReplyTimeout(Ljava/lang/Long;)V
@2.0.0.RELEASE
+#getReceiveTimeout()Ljava/time/Duration;
+#setReceiveTimeout(Ljava/time/Duration;)V
+#getReplyTimeout()Ljava/time/Duration;
+#setReplyTimeout(Ljava/time/Duration;)V
+#getExchange()Ljava/lang/String;
+#setExchange(Ljava/lang/String;)V
+#getRoutingKey()Ljava/lang/String;
+#setRoutingKey(Ljava/lang/String;)V
-#getReceiveTimeout()Ljava/lang/Long;
-#setReceiveTimeout(Ljava/lang/Long;)V
-#getReplyTimeout()Ljava/lang/Long;
-#setReplyTimeout(Ljava/lang/Long;)V
@2.1.0.RELEASE
+#getQueue()Ljava/lang/String;
+#setQueue(Ljava/lang/String;)V
@2.1.1.RELEASE
+#getDefaultReceiveQueue()Ljava/lang/String;
+#setDefaultReceiveQueue(Ljava/lang/String;)V
*#getQueue()Ljava/lang/String;[deprecated]
*#setQueue(Ljava/lang/String;)V[deprecated]
@2.2.0.RELEASE
-#getQueue()Ljava/lang/String;[deprecated]
-#setQueue(Ljava/lang/String;)V[deprecated]

+###org/springframework/boot/autoconfigure/amqp/DirectRabbitListenerContainerFactoryConfigurer
@2.0.0.RELEASE
+#<init>()V
+#configure(Lorg/springframework/amqp/rabbit/config/DirectRabbitListenerContainerFactory;Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)V
+#configure(Lorg/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory;Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)V
@2.6.0
*#<init>()V[deprecated]
+#<init>(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
@3.0.0
-#<init>()V[deprecated]

+###org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration$RabbitTemplateConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
+#rabbitTemplate(Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)Lorg/springframework/amqp/rabbit/core/RabbitTemplate;
+#amqpAdmin(Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)Lorg/springframework/amqp/core/AmqpAdmin;
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
@2.2.0.RELEASE
+#rabbitTemplate(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)Lorg/springframework/amqp/rabbit/core/RabbitTemplate;
-#<init>(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#rabbitTemplate(Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)Lorg/springframework/amqp/rabbit/core/RabbitTemplate;
@2.3.0.RELEASE
+#rabbitTemplateConfigurer(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/amqp/RabbitTemplateConfigurer;
+#rabbitTemplate(Lorg/springframework/boot/autoconfigure/amqp/RabbitTemplateConfigurer;Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)Lorg/springframework/amqp/rabbit/core/RabbitTemplate;
-#rabbitTemplate(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)Lorg/springframework/amqp/rabbit/core/RabbitTemplate;

+###org/springframework/boot/autoconfigure/amqp/RabbitRetryTemplateCustomizer
@2.1.0.RELEASE
+#customize(Lorg/springframework/boot/autoconfigure/amqp/RabbitRetryTemplateCustomizer$Target;Lorg/springframework/retry/support/RetryTemplate;)V

+###org/springframework/boot/autoconfigure/info/ProjectInfoProperties$Git
@1.4.0.RELEASE
+#<init>()V
+#getLocation()Lorg/springframework/core/io/Resource;
+#setLocation(Lorg/springframework/core/io/Resource;)V
@2.1.0.RELEASE
+#getEncoding()Ljava/nio/charset/Charset;
+#setEncoding(Ljava/nio/charset/Charset;)V

+###org/springframework/boot/autoconfigure/info/ProjectInfoProperties$Build
@1.4.0.RELEASE
+#<init>()V
+#getLocation()Lorg/springframework/core/io/Resource;
+#setLocation(Lorg/springframework/core/io/Resource;)V
@2.1.0.RELEASE
+#getEncoding()Ljava/nio/charset/Charset;
+#setEncoding(Ljava/nio/charset/Charset;)V

+###org/springframework/boot/autoconfigure/sendgrid/SendGridProperties$Proxy
@1.3.0.RELEASE
+#<init>()V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPort()Ljava/lang/Integer;
+#setPort(Ljava/lang/Integer;)V

+###org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#sendGrid()Lcom/sendgrid/SendGrid;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/sendgrid/SendGridProperties;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>()V
+#sendGrid(Lorg/springframework/boot/autoconfigure/sendgrid/SendGridProperties;)Lcom/sendgrid/SendGrid;
-#<init>(Lorg/springframework/boot/autoconfigure/sendgrid/SendGridProperties;)V
-#sendGrid()Lcom/sendgrid/SendGrid;

+###org/springframework/boot/autoconfigure/jms/artemis/ArtemisAutoConfiguration
@1.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/jms/artemis/ArtemisNoOpBindingRegistry
@1.3.0.RELEASE
+#<init>()V
+#lookup(Ljava/lang/String;)Ljava/lang/Object;
+#bind(Ljava/lang/String;Ljava/lang/Object;)Z
+#unbind(Ljava/lang/String;)V
+#close()V

+###org/springframework/boot/autoconfigure/jms/artemis/ArtemisMode
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/jms/artemis/ArtemisMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jms/artemis/ArtemisMode;

+###org/springframework/boot/autoconfigure/jms/JmsPoolConnectionFactoryFactory
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/jms/JmsPoolConnectionFactoryProperties;)V
+#createPooledConnectionFactory(Ljavax/jms/ConnectionFactory;)Lorg/messaginghub/pooled/jms/JmsPoolConnectionFactory;
@3.0.0
+#createPooledConnectionFactory(Ljakarta/jms/ConnectionFactory;)Lorg/messaginghub/pooled/jms/JmsPoolConnectionFactory;
-#createPooledConnectionFactory(Ljavax/jms/ConnectionFactory;)Lorg/messaginghub/pooled/jms/JmsPoolConnectionFactory;

+###org/springframework/boot/autoconfigure/jms/JmsAutoConfiguration$MessagingTemplateConfiguration
@1.2.0.RELEASE
+#jmsMessagingTemplate(Lorg/springframework/jms/core/JmsTemplate;)Lorg/springframework/jms/core/JmsMessagingTemplate;
@2.2.0.RELEASE
+#jmsMessagingTemplate(Lorg/springframework/boot/autoconfigure/jms/JmsProperties;Lorg/springframework/jms/core/JmsTemplate;)Lorg/springframework/jms/core/JmsMessagingTemplate;
-#jmsMessagingTemplate(Lorg/springframework/jms/core/JmsTemplate;)Lorg/springframework/jms/core/JmsMessagingTemplate;

+###org/springframework/boot/autoconfigure/jms/JndiConnectionFactoryAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
+#connectionFactory()Ljavax/jms/ConnectionFactory;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/jms/JmsProperties;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>()V
+#connectionFactory(Lorg/springframework/boot/autoconfigure/jms/JmsProperties;)Ljavax/jms/ConnectionFactory;
-#<init>(Lorg/springframework/boot/autoconfigure/jms/JmsProperties;)V
-#connectionFactory()Ljavax/jms/ConnectionFactory;
@2.2.5.RELEASE
+#jmsConnectionFactory(Lorg/springframework/boot/autoconfigure/jms/JmsProperties;)Ljavax/jms/ConnectionFactory;
-#connectionFactory(Lorg/springframework/boot/autoconfigure/jms/JmsProperties;)Ljavax/jms/ConnectionFactory;
@3.0.0
+#jmsConnectionFactory(Lorg/springframework/boot/autoconfigure/jms/JmsProperties;)Ljakarta/jms/ConnectionFactory;
-#jmsConnectionFactory(Lorg/springframework/boot/autoconfigure/jms/JmsProperties;)Ljavax/jms/ConnectionFactory;

+###org/springframework/boot/autoconfigure/jms/JmsProperties$Template
@1.5.0.RELEASE
+#<init>()V
+#getDefaultDestination()Ljava/lang/String;
+#setDefaultDestination(Ljava/lang/String;)V
+#getDeliveryDelay()Ljava/lang/Long;
+#setDeliveryDelay(Ljava/lang/Long;)V
+#getDeliveryMode()Lorg/springframework/boot/autoconfigure/jms/JmsProperties$DeliveryMode;
+#setDeliveryMode(Lorg/springframework/boot/autoconfigure/jms/JmsProperties$DeliveryMode;)V
+#getPriority()Ljava/lang/Integer;
+#setPriority(Ljava/lang/Integer;)V
+#getTimeToLive()Ljava/lang/Long;
+#setTimeToLive(Ljava/lang/Long;)V
+#determineQosEnabled()Z
+#getQosEnabled()Ljava/lang/Boolean;
+#setQosEnabled(Ljava/lang/Boolean;)V
+#getReceiveTimeout()Ljava/lang/Long;
+#setReceiveTimeout(Ljava/lang/Long;)V
@2.0.0.RELEASE
+#getDeliveryDelay()Ljava/time/Duration;
+#setDeliveryDelay(Ljava/time/Duration;)V
+#getTimeToLive()Ljava/time/Duration;
+#setTimeToLive(Ljava/time/Duration;)V
+#getReceiveTimeout()Ljava/time/Duration;
+#setReceiveTimeout(Ljava/time/Duration;)V
-#getDeliveryDelay()Ljava/lang/Long;
-#setDeliveryDelay(Ljava/lang/Long;)V
-#getTimeToLive()Ljava/lang/Long;
-#setTimeToLive(Ljava/lang/Long;)V
-#getReceiveTimeout()Ljava/lang/Long;
-#setReceiveTimeout(Ljava/lang/Long;)V

+###org/springframework/boot/autoconfigure/rsocket/RSocketStrategiesAutoConfiguration
@2.2.0.RELEASE
+#<init>()V
+#rSocketStrategies(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/messaging/rsocket/RSocketStrategies;

+###org/springframework/boot/autoconfigure/rsocket/RSocketStrategiesAutoConfiguration$JacksonCborStrategyConfiguration
@2.2.0.RELEASE
+#jacksonCborRSocketStrategyCustomizer(Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;)Lorg/springframework/boot/rsocket/messaging/RSocketStrategiesCustomizer;

+###org/springframework/boot/autoconfigure/webservices/WebServicesProperties
@1.4.0.RELEASE
+#<init>()V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getServlet()Lorg/springframework/boot/autoconfigure/webservices/WebServicesProperties$Servlet;

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationManagementConfiguration
@1.5.0.RELEASE

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationJdbcConfiguration
@2.0.0.RELEASE
+#integrationDataSourceInitializer(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties;)Lorg/springframework/boot/autoconfigure/integration/IntegrationDataSourceInitializer;
@2.6.0
+#integrationDataSourceInitializer(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties;)Lorg/springframework/boot/autoconfigure/integration/IntegrationDataSourceScriptDatabaseInitializer;
-#integrationDataSourceInitializer(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties;)Lorg/springframework/boot/autoconfigure/integration/IntegrationDataSourceInitializer;

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider
@2.2.0.RELEASE
+#<init>()V
+#getEntityId()Ljava/lang/String;
+#setEntityId(Ljava/lang/String;)V
+#getSsoUrl()Ljava/lang/String;
+#setSsoUrl(Ljava/lang/String;)V
+#getVerification()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider$Verification;
@2.3.0.RELEASE
*#getSsoUrl()Ljava/lang/String;[deprecated]
*#setSsoUrl(Ljava/lang/String;)V[deprecated]
+#getSinglesignon()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider$Singlesignon;
@2.4.0
+#getMetadataUri()Ljava/lang/String;
+#setMetadataUri(Ljava/lang/String;)V
@2.5.0
-#getSsoUrl()Ljava/lang/String;[deprecated]
-#setSsoUrl(Ljava/lang/String;)V[deprecated]
@2.7.0
-###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties$Provider
@2.0.0.RELEASE
+#<init>()V
+#getAuthorizationUri()Ljava/lang/String;
+#setAuthorizationUri(Ljava/lang/String;)V
+#getTokenUri()Ljava/lang/String;
+#setTokenUri(Ljava/lang/String;)V
+#getUserInfoUri()Ljava/lang/String;
+#setUserInfoUri(Ljava/lang/String;)V
+#getUserNameAttribute()Ljava/lang/String;
+#setUserNameAttribute(Ljava/lang/String;)V
+#getJwkSetUri()Ljava/lang/String;
+#setJwkSetUri(Ljava/lang/String;)V
@2.1.0.RELEASE
+#getUserInfoAuthenticationMethod()Ljava/lang/String;
+#setUserInfoAuthenticationMethod(Ljava/lang/String;)V
+#getIssuerUri()Ljava/lang/String;
+#setIssuerUri(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/security/oauth2/client/servlet/OAuth2ClientAutoConfiguration
@2.1.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/security/oauth2/resource/KeyValueCondition
@2.2.0.RELEASE
+#<init>()V
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;

+###org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerAutoConfiguration
@2.1.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#inMemoryUserDetailsManager(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/security/provisioning/InMemoryUserDetailsManager;
+#getOrDeducePassword(Lorg/springframework/boot/autoconfigure/security/SecurityProperties$User;Lorg/springframework/security/crypto/password/PasswordEncoder;)Ljava/lang/String;
@2.0.1.RELEASE
-#getOrDeducePassword(Lorg/springframework/boot/autoconfigure/security/SecurityProperties$User;Lorg/springframework/security/crypto/password/PasswordEncoder;)Ljava/lang/String;

+###org/springframework/boot/autoconfigure/security/servlet/SpringBootWebSecurityConfiguration
@2.0.0.RELEASE
+#<init>()V
@2.4.0
-###org/springframework/boot/autoconfigure/security/servlet/SpringBootWebSecurityConfiguration

+###org/springframework/boot/autoconfigure/security/servlet/JerseyRequestMatcherProvider
@2.0.7.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;)V
+#getRequestMatcher(Ljava/lang/String;)Lorg/springframework/security/web/util/matcher/RequestMatcher;
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/security/servlet/JerseyRequestMatcherProvider

+###org/springframework/boot/autoconfigure/mustache/MustacheProperties
@1.2.2.RELEASE
+#<init>()V
+#getPrefix()Ljava/lang/String;
+#setPrefix(Ljava/lang/String;)V
+#getSuffix()Ljava/lang/String;
+#setSuffix(Ljava/lang/String;)V
@2.7.0
+#getServlet()Lorg/springframework/boot/autoconfigure/mustache/MustacheProperties$Servlet;
+#getReactive()Lorg/springframework/boot/autoconfigure/mustache/MustacheProperties$Reactive;
+#getViewNames()[Ljava/lang/String;
+#setViewNames([Ljava/lang/String;)V
+#getRequestContextAttribute()Ljava/lang/String;
+#setRequestContextAttribute(Ljava/lang/String;)V
+#getCharset()Ljava/nio/charset/Charset;
+#getCharsetName()Ljava/lang/String;
+#setCharset(Ljava/nio/charset/Charset;)V
+#isCheckTemplateLocation()Z
+#setCheckTemplateLocation(Z)V
+#isEnabled()Z
+#setEnabled(Z)V
+#isAllowRequestOverride()Z[deprecated]
+#setAllowRequestOverride(Z)V[deprecated]
+#isAllowSessionOverride()Z[deprecated]
+#setAllowSessionOverride(Z)V[deprecated]
+#isCache()Z[deprecated]
+#setCache(Z)V[deprecated]
+#getContentType()Lorg/springframework/util/MimeType;[deprecated]
+#setContentType(Lorg/springframework/util/MimeType;)V[deprecated]
+#isExposeRequestAttributes()Z[deprecated]
+#setExposeRequestAttributes(Z)V[deprecated]
+#isExposeSessionAttributes()Z[deprecated]
+#setExposeSessionAttributes(Z)V[deprecated]
+#isExposeSpringMacroHelpers()Z[deprecated]
+#setExposeSpringMacroHelpers(Z)V[deprecated]
@3.0.0
-#isAllowRequestOverride()Z[deprecated]
-#setAllowRequestOverride(Z)V[deprecated]
-#isAllowSessionOverride()Z[deprecated]
-#setAllowSessionOverride(Z)V[deprecated]
-#isCache()Z[deprecated]
-#setCache(Z)V[deprecated]
-#getContentType()Lorg/springframework/util/MimeType;[deprecated]
-#setContentType(Lorg/springframework/util/MimeType;)V[deprecated]
-#isExposeRequestAttributes()Z[deprecated]
-#setExposeRequestAttributes(Z)V[deprecated]
-#isExposeSessionAttributes()Z[deprecated]
-#setExposeSessionAttributes(Z)V[deprecated]
-#isExposeSpringMacroHelpers()Z[deprecated]
-#setExposeSpringMacroHelpers(Z)V[deprecated]

+###org/springframework/boot/autoconfigure/data/mongo/ReactiveStreamsMongoClientDependsOnBeanFactoryPostProcessor
@2.0.0.RELEASE
+#<init>([Ljava/lang/String;)V
@2.1.7.RELEASE
*#<init>([Ljava/lang/String;)V[deprecated]
+#<init>([Ljava/lang/Class;)V
@2.3.0.RELEASE
-#<init>([Ljava/lang/String;)V[deprecated]
@3.0.0
-###org/springframework/boot/autoconfigure/data/mongo/ReactiveStreamsMongoClientDependsOnBeanFactoryPostProcessor

+###org/springframework/boot/autoconfigure/data/mongo/MongoClientDependsOnBeanFactoryPostProcessor
@1.3.0.RELEASE
+#<init>([Ljava/lang/String;)V
@2.1.7.RELEASE
*#<init>([Ljava/lang/String;)V[deprecated]
+#<init>([Ljava/lang/Class;)V
@2.3.0.RELEASE
-#<init>([Ljava/lang/String;)V[deprecated]
@3.0.0
-###org/springframework/boot/autoconfigure/data/mongo/MongoClientDependsOnBeanFactoryPostProcessor

+###org/springframework/boot/autoconfigure/data/couchbase/CouchbaseDataProperties
@1.4.0.RELEASE
+#<init>()V
+#isAutoIndex()Z
+#setAutoIndex(Z)V
+#getConsistency()Lorg/springframework/data/couchbase/core/query/Consistency;
+#setConsistency(Lorg/springframework/data/couchbase/core/query/Consistency;)V
@2.3.0.RELEASE
+#getBucketName()Ljava/lang/String;
+#setBucketName(Ljava/lang/String;)V
+#getScopeName()Ljava/lang/String;
+#setScopeName(Ljava/lang/String;)V
+#getFieldNamingStrategy()Ljava/lang/Class;
+#setFieldNamingStrategy(Ljava/lang/Class;)V
+#getTypeKey()Ljava/lang/String;
+#setTypeKey(Ljava/lang/String;)V
-#getConsistency()Lorg/springframework/data/couchbase/core/query/Consistency;
-#setConsistency(Lorg/springframework/data/couchbase/core/query/Consistency;)V

+###org/springframework/boot/autoconfigure/data/couchbase/CouchbaseDataAutoConfiguration$ValidationConfiguration
@1.4.0.RELEASE
+#<init>()V
+#validationEventListener(Ljavax/validation/Validator;)Lorg/springframework/data/couchbase/core/mapping/event/ValidatingCouchbaseEventListener;
@3.0.0
+#validationEventListener(Ljakarta/validation/Validator;)Lorg/springframework/data/couchbase/core/mapping/event/ValidatingCouchbaseEventListener;
-#validationEventListener(Ljavax/validation/Validator;)Lorg/springframework/data/couchbase/core/mapping/event/ValidatingCouchbaseEventListener;

+###org/springframework/boot/autoconfigure/data/couchbase/SpringBootCouchbaseConfigurer
@1.4.0.RELEASE
+#<init>(Lcom/couchbase/client/java/env/CouchbaseEnvironment;Lcom/couchbase/client/java/Cluster;Lcom/couchbase/client/java/cluster/ClusterInfo;Lcom/couchbase/client/java/Bucket;)V
+#couchbaseEnvironment()Lcom/couchbase/client/java/env/CouchbaseEnvironment;
+#couchbaseCluster()Lcom/couchbase/client/java/Cluster;
+#couchbaseClusterInfo()Lcom/couchbase/client/java/cluster/ClusterInfo;
+#couchbaseClient()Lcom/couchbase/client/java/Bucket;
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/data/couchbase/SpringBootCouchbaseConfigurer

+###org/springframework/boot/autoconfigure/data/couchbase/CouchbaseRepositoriesAutoConfiguration
@1.4.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/redis/JedisClientConfigurationBuilderCustomizer
@2.0.0.RELEASE
+#customize(Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;)V

+###org/springframework/boot/autoconfigure/data/redis/RedisProperties
@1.3.0.RELEASE
+#<init>()V
+#getDatabase()I
+#setDatabase(I)V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#setTimeout(I)V
+#getTimeout()I
+#getSentinel()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Sentinel;
+#setSentinel(Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Sentinel;)V
+#getPool()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool;
+#setPool(Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool;)V
@1.4.0.RELEASE
+#getCluster()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Cluster;
+#setCluster(Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Cluster;)V
@1.5.0.RELEASE
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#isSsl()Z
+#setSsl(Z)V
@2.0.0.RELEASE
+#setTimeout(Ljava/time/Duration;)V
+#getTimeout()Ljava/time/Duration;
+#getJedis()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Jedis;
+#getLettuce()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Lettuce;
-#setTimeout(I)V
-#getTimeout()I
-#getPool()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool;
-#setPool(Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool;)V
@2.2.0.RELEASE
+#getClientName()Ljava/lang/String;
+#setClientName(Ljava/lang/String;)V
@2.4.0
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getConnectTimeout()Ljava/time/Duration;
+#setConnectTimeout(Ljava/time/Duration;)V
+#getClientType()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$ClientType;
+#setClientType(Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$ClientType;)V

+###org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#redisProperties()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties;
@1.4.0.RELEASE
-#redisProperties()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties;
@2.0.0.RELEASE
+#redisTemplate(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/core/RedisTemplate;
+#stringRedisTemplate(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/core/StringRedisTemplate;

+###org/springframework/boot/autoconfigure/data/rest/RepositoryRestProperties
@1.3.0.RELEASE
+#<init>()V
+#getBasePath()Ljava/lang/String;
+#setBasePath(Ljava/lang/String;)V
+#getDefaultPageSize()Ljava/lang/Integer;
+#setDefaultPageSize(Ljava/lang/Integer;)V
+#getMaxPageSize()Ljava/lang/Integer;
+#setMaxPageSize(Ljava/lang/Integer;)V
+#getPageParamName()Ljava/lang/String;
+#setPageParamName(Ljava/lang/String;)V
+#getLimitParamName()Ljava/lang/String;
+#setLimitParamName(Ljava/lang/String;)V
+#getSortParamName()Ljava/lang/String;
+#setSortParamName(Ljava/lang/String;)V
+#getDefaultMediaType()Lorg/springframework/http/MediaType;
+#setDefaultMediaType(Lorg/springframework/http/MediaType;)V
+#getReturnBodyOnCreate()Ljava/lang/Boolean;
+#setReturnBodyOnCreate(Ljava/lang/Boolean;)V
+#getReturnBodyOnUpdate()Ljava/lang/Boolean;
+#setReturnBodyOnUpdate(Ljava/lang/Boolean;)V
+#getEnableEnumTranslation()Ljava/lang/Boolean;
+#setEnableEnumTranslation(Ljava/lang/Boolean;)V
+#applyTo(Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;)V
@1.5.0.RELEASE
+#getDetectionStrategy()Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;
+#setDetectionStrategy(Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;)V

+###org/springframework/boot/autoconfigure/data/web/SpringDataWebProperties$Sort
@2.0.0.RELEASE
+#<init>()V
+#getSortParameter()Ljava/lang/String;
+#setSortParameter(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration$JdbcStoreTypeConfiguration
@2.0.0.RELEASE
+#dataSourceCustomizer(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/quartz/SchedulerFactoryBeanCustomizer;
+#quartzDataSourceInitializer(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;)Lorg/springframework/boot/autoconfigure/quartz/QuartzDataSourceInitializer;
+#dataSourceInitializerSchedulerDependencyPostProcessor()Lorg/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration$JdbcStoreTypeConfiguration$DataSourceInitializerSchedulerDependencyPostProcessor;
@2.0.2.RELEASE
+#dataSourceCustomizer(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/quartz/SchedulerFactoryBeanCustomizer;
+#quartzDataSourceInitializer(Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;)Lorg/springframework/boot/autoconfigure/quartz/QuartzDataSourceInitializer;
-#dataSourceCustomizer(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/quartz/SchedulerFactoryBeanCustomizer;
-#quartzDataSourceInitializer(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;)Lorg/springframework/boot/autoconfigure/quartz/QuartzDataSourceInitializer;
@2.1.8.RELEASE
-#dataSourceInitializerSchedulerDependencyPostProcessor()Lorg/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration$JdbcStoreTypeConfiguration$DataSourceInitializerSchedulerDependencyPostProcessor;
@2.2.12.RELEASE
+#dataSourceCustomizer(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/quartz/SchedulerFactoryBeanCustomizer;
-#dataSourceCustomizer(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/quartz/SchedulerFactoryBeanCustomizer;
@2.3.0.RELEASE
+#dataSourceCustomizer(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/quartz/SchedulerFactoryBeanCustomizer;
-#dataSourceCustomizer(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/quartz/SchedulerFactoryBeanCustomizer;
@2.3.6.RELEASE
+#dataSourceCustomizer(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/quartz/SchedulerFactoryBeanCustomizer;
-#dataSourceCustomizer(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/quartz/SchedulerFactoryBeanCustomizer;
@2.6.0
+#quartzDataSourceScriptDatabaseInitializer(Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;)Lorg/springframework/boot/autoconfigure/quartz/QuartzDataSourceScriptDatabaseInitializer;
-#quartzDataSourceInitializer(Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;)Lorg/springframework/boot/autoconfigure/quartz/QuartzDataSourceInitializer;

+###org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/context/ApplicationContext;)V
+#quartzScheduler()Lorg/springframework/scheduling/quartz/SchedulerFactoryBean;
@2.0.2.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/context/ApplicationContext;)V
-#<init>(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/context/ApplicationContext;)V
@2.1.3.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Ljava/util/Map;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/context/ApplicationContext;)V
-#<init>(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/context/ApplicationContext;)V
@2.2.0.RELEASE
+#<init>()V
+#quartzScheduler(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Ljava/util/Map;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/scheduling/quartz/SchedulerFactoryBean;
-#<init>(Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Ljava/util/Map;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/context/ApplicationContext;)V
-#quartzScheduler()Lorg/springframework/scheduling/quartz/SchedulerFactoryBean;

+###org/springframework/boot/autoconfigure/quartz/QuartzDataSourceInitializer
@2.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;)V
@3.0.0
-###org/springframework/boot/autoconfigure/quartz/QuartzDataSourceInitializer

+###org/springframework/boot/autoconfigure/quartz/JobStoreType
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/quartz/JobStoreType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/quartz/JobStoreType;

+###org/springframework/boot/autoconfigure/quartz/QuartzDataSource
@2.0.2.RELEASE

+###org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties
@2.1.0.RELEASE
+#<init>()V
+#getDdlAuto()Ljava/lang/String;
+#setDdlAuto(Ljava/lang/String;)V
+#isUseNewIdGeneratorMappings()Ljava/lang/Boolean;
+#setUseNewIdGeneratorMappings(Ljava/lang/Boolean;)V
+#getNaming()Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateProperties$Naming;
+#determineHibernateProperties(Ljava/util/Map;Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;)Ljava/util/Map;
@3.0.0
-#isUseNewIdGeneratorMappings()Ljava/lang/Boolean;
-#setUseNewIdGeneratorMappings(Ljava/lang/Boolean;)V

+###org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration
@1.2.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
@1.4.0.RELEASE

+###org/springframework/boot/autoconfigure/transaction/TransactionProperties
@1.5.0.RELEASE
+#<init>()V
+#getDefaultTimeout()Ljava/lang/Integer;
+#setDefaultTimeout(Ljava/lang/Integer;)V
+#getRollbackOnCommitFailure()Ljava/lang/Boolean;
+#setRollbackOnCommitFailure(Ljava/lang/Boolean;)V
+#customize(Lorg/springframework/transaction/support/AbstractPlatformTransactionManager;)V
+#customize(Lorg/springframework/transaction/PlatformTransactionManager;)V
@2.0.0.RELEASE
+#getDefaultTimeout()Ljava/time/Duration;
+#setDefaultTimeout(Ljava/time/Duration;)V
-#getDefaultTimeout()Ljava/lang/Integer;
-#setDefaultTimeout(Ljava/lang/Integer;)V

+###org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$TransactionTemplateConfiguration
@1.5.0.RELEASE
+#<init>(Lorg/springframework/transaction/PlatformTransactionManager;)V
+#transactionTemplate()Lorg/springframework/transaction/support/TransactionTemplate;
@2.2.0.RELEASE
+#<init>()V
+#transactionTemplate(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/transaction/support/TransactionTemplate;
-#<init>(Lorg/springframework/transaction/PlatformTransactionManager;)V
-#transactionTemplate()Lorg/springframework/transaction/support/TransactionTemplate;

+###org/springframework/boot/autoconfigure/websocket/servlet/UndertowWebSocketServletWebServerCustomizer
@2.0.0.RELEASE
+#<init>()V
+#customize(Lorg/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/websocket/servlet/JettyWebSocketServletWebServerCustomizer
@2.0.0.RELEASE
+#<init>()V
+#customize(Lorg/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Producer
@1.5.0.RELEASE
+#<init>()V
+#getSsl()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Ssl;
+#getAcks()Ljava/lang/String;
+#setAcks(Ljava/lang/String;)V
+#getBatchSize()Ljava/lang/Integer;
+#setBatchSize(Ljava/lang/Integer;)V
+#getBootstrapServers()Ljava/util/List;
+#setBootstrapServers(Ljava/util/List;)V
+#getBufferMemory()Ljava/lang/Long;
+#setBufferMemory(Ljava/lang/Long;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getCompressionType()Ljava/lang/String;
+#setCompressionType(Ljava/lang/String;)V
+#getKeySerializer()Ljava/lang/Class;
+#setKeySerializer(Ljava/lang/Class;)V
+#getValueSerializer()Ljava/lang/Class;
+#setValueSerializer(Ljava/lang/Class;)V
+#getRetries()Ljava/lang/Integer;
+#setRetries(Ljava/lang/Integer;)V
+#buildProperties()Ljava/util/Map;
@2.0.0.RELEASE
+#getTransactionIdPrefix()Ljava/lang/String;
+#setTransactionIdPrefix(Ljava/lang/String;)V
+#getProperties()Ljava/util/Map;
@2.1.0.RELEASE
+#getBatchSize()Lorg/springframework/util/unit/DataSize;
+#setBatchSize(Lorg/springframework/util/unit/DataSize;)V
+#getBufferMemory()Lorg/springframework/util/unit/DataSize;
+#setBufferMemory(Lorg/springframework/util/unit/DataSize;)V
-#getBatchSize()Ljava/lang/Integer;
-#setBatchSize(Ljava/lang/Integer;)V
-#getBufferMemory()Ljava/lang/Long;
-#setBufferMemory(Ljava/lang/Long;)V
@2.3.0.RELEASE
+#getSecurity()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Security;

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Streams
@2.1.0.RELEASE
+#<init>()V
+#getSsl()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Ssl;
+#getApplicationId()Ljava/lang/String;
+#setApplicationId(Ljava/lang/String;)V
+#isAutoStartup()Z
+#setAutoStartup(Z)V
+#getBootstrapServers()Ljava/util/List;
+#setBootstrapServers(Ljava/util/List;)V
+#getCacheMaxBytesBuffering()Ljava/lang/Integer;[deprecated]
+#setCacheMaxBytesBuffering(Ljava/lang/Integer;)V[deprecated]
+#getCacheMaxSizeBuffering()Lorg/springframework/util/unit/DataSize;
+#setCacheMaxSizeBuffering(Lorg/springframework/util/unit/DataSize;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getReplicationFactor()Ljava/lang/Integer;
+#setReplicationFactor(Ljava/lang/Integer;)V
+#getStateDir()Ljava/lang/String;
+#setStateDir(Ljava/lang/String;)V
+#getProperties()Ljava/util/Map;
+#buildProperties()Ljava/util/Map;
@2.2.0.RELEASE
-#getCacheMaxBytesBuffering()Ljava/lang/Integer;[deprecated]
-#setCacheMaxBytesBuffering(Ljava/lang/Integer;)V[deprecated]
@2.3.0.RELEASE
+#getSecurity()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Security;
@2.4.0
+#getCleanup()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Cleanup;

+###org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
+#gson()Lcom/google/gson/Gson;
@2.0.0.RELEASE
+#gsonBuilder(Ljava/util/List;)Lcom/google/gson/GsonBuilder;
+#gson(Lcom/google/gson/GsonBuilder;)Lcom/google/gson/Gson;
+#standardGsonBuilderCustomizer(Lorg/springframework/boot/autoconfigure/gson/GsonProperties;)Lorg/springframework/boot/autoconfigure/gson/GsonAutoConfiguration$StandardGsonBuilderCustomizer;
-#gson()Lcom/google/gson/Gson;

+###org/springframework/boot/autoconfigure/gson/GsonBuilderCustomizer
@2.0.0.RELEASE
+#customize(Lcom/google/gson/GsonBuilder;)V

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties$Reactive
@2.0.0.RELEASE
+#<init>()V
+#getMediaTypes()Ljava/util/List;
+#setMediaTypes(Ljava/util/List;)V
+#getMaxChunkSize()I
+#setMaxChunkSize(I)V
+#getFullModeViewNames()[Ljava/lang/String;
+#setFullModeViewNames([Ljava/lang/String;)V
+#getChunkedModeViewNames()[Ljava/lang/String;
+#setChunkedModeViewNames([Ljava/lang/String;)V
@2.1.0.RELEASE
+#getMaxChunkSize()Lorg/springframework/util/unit/DataSize;
+#setMaxChunkSize(Lorg/springframework/util/unit/DataSize;)V
-#getMaxChunkSize()I
-#setMaxChunkSize(I)V

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties
@1.2.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#isCheckTemplateLocation()Z
+#setCheckTemplateLocation(Z)V
+#getPrefix()Ljava/lang/String;
+#setPrefix(Ljava/lang/String;)V
+#getSuffix()Ljava/lang/String;
+#setSuffix(Ljava/lang/String;)V
+#getMode()Ljava/lang/String;
+#setMode(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setEncoding(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#isCache()Z
+#setCache(Z)V
+#getExcludedViewNames()[Ljava/lang/String;
+#setExcludedViewNames([Ljava/lang/String;)V
+#getViewNames()[Ljava/lang/String;
+#setViewNames([Ljava/lang/String;)V
@1.3.0.RELEASE
+#getEncoding()Ljava/nio/charset/Charset;
+#setEncoding(Ljava/nio/charset/Charset;)V
+#getContentType()Lorg/springframework/util/MimeType;
+#setContentType(Lorg/springframework/util/MimeType;)V
+#getTemplateResolverOrder()Ljava/lang/Integer;
+#setTemplateResolverOrder(Ljava/lang/Integer;)V
-#getEncoding()Ljava/lang/String;
-#setEncoding(Ljava/lang/String;)V
-#getContentType()Ljava/lang/String;
-#setContentType(Ljava/lang/String;)V
@1.4.1.RELEASE
+#isCheckTemplate()Z
+#setCheckTemplate(Z)V
@2.0.0.RELEASE
+#isEnableSpringElCompiler()Z
+#setEnableSpringElCompiler(Z)V
+#getReactive()Lorg/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties$Reactive;
+#getServlet()Lorg/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties$Servlet;
-#getContentType()Lorg/springframework/util/MimeType;
-#setContentType(Lorg/springframework/util/MimeType;)V
@2.1.0.RELEASE
+#isRenderHiddenMarkersBeforeCheckboxes()Z
+#setRenderHiddenMarkersBeforeCheckboxes(Z)V

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Env
@1.4.0.RELEASE
+#<init>()V
+#getEndpoints()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Endpoints;
+#getSsl()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Ssl;
+#getTimeouts()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Timeouts;
@2.2.3.RELEASE
+#getBootstrap()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Bootstrap;
@2.3.0.RELEASE
+#getIo()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Io;
-#getBootstrap()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Bootstrap;
-#getEndpoints()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Endpoints;

+###org/springframework/boot/autoconfigure/AutoConfigurationMetadata
@1.5.0.RELEASE
+#wasProcessed(Ljava/lang/String;)Z
+#getInteger(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Integer;
+#getInteger(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
+#getSet(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#getSet(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/boot/autoconfigure/context/MessageSourceProperties
@2.0.0.RELEASE
+#<init>()V
+#getBasename()Ljava/lang/String;
+#setBasename(Ljava/lang/String;)V
+#getEncoding()Ljava/nio/charset/Charset;
+#setEncoding(Ljava/nio/charset/Charset;)V
+#getCacheDuration()Ljava/time/Duration;
+#setCacheDuration(Ljava/time/Duration;)V
+#isFallbackToSystemLocale()Z
+#setFallbackToSystemLocale(Z)V
+#isAlwaysUseMessageFormat()Z
+#setAlwaysUseMessageFormat(Z)V
+#isUseCodeAsDefaultMessage()Z
+#setUseCodeAsDefaultMessage(Z)V

+###org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfiguration
@1.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/task/TaskSchedulingProperties$Shutdown
@2.2.0.RELEASE
+#<init>()V
+#isAwaitTermination()Z
+#setAwaitTermination(Z)V
+#getAwaitTerminationPeriod()Ljava/time/Duration;
+#setAwaitTerminationPeriod(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration
@2.1.0.RELEASE
+#<init>()V
+#taskScheduler(Lorg/springframework/boot/task/TaskSchedulerBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
+#taskSchedulerBuilder(Lorg/springframework/boot/autoconfigure/task/TaskSchedulingProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/task/TaskSchedulerBuilder;
@2.4.6
+#scheduledBeanLazyInitializationExcludeFilter()Lorg/springframework/boot/LazyInitializationExcludeFilter;

+###org/springframework/boot/autoconfigure/cassandra/CassandraProperties
@1.3.0.RELEASE
+#<init>()V
+#getKeyspaceName()Ljava/lang/String;
+#setKeyspaceName(Ljava/lang/String;)V
+#getClusterName()Ljava/lang/String;
+#setClusterName(Ljava/lang/String;)V
+#getContactPoints()Ljava/lang/String;
+#setContactPoints(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getCompression()Lcom/datastax/driver/core/ProtocolOptions$Compression;
+#setCompression(Lcom/datastax/driver/core/ProtocolOptions$Compression;)V
+#getLoadBalancingPolicy()Ljava/lang/Class;
+#setLoadBalancingPolicy(Ljava/lang/Class;)V
+#getConsistencyLevel()Lcom/datastax/driver/core/ConsistencyLevel;
+#setConsistencyLevel(Lcom/datastax/driver/core/ConsistencyLevel;)V
+#getSerialConsistencyLevel()Lcom/datastax/driver/core/ConsistencyLevel;
+#setSerialConsistencyLevel(Lcom/datastax/driver/core/ConsistencyLevel;)V
+#getFetchSize()I
+#setFetchSize(I)V
+#getReconnectionPolicy()Ljava/lang/Class;
+#setReconnectionPolicy(Ljava/lang/Class;)V
+#getRetryPolicy()Ljava/lang/Class;
+#setRetryPolicy(Ljava/lang/Class;)V
+#getConnectTimeoutMillis()I
+#setConnectTimeoutMillis(I)V
+#getReadTimeoutMillis()I
+#setReadTimeoutMillis(I)V
+#isSsl()Z
+#setSsl(Z)V
@1.4.0.RELEASE
+#getSchemaAction()Ljava/lang/String;
+#setSchemaAction(Ljava/lang/String;)V
@2.0.0.RELEASE
+#getContactPoints()Ljava/util/List;
+#getConnectTimeout()Ljava/time/Duration;
+#setConnectTimeout(Ljava/time/Duration;)V
+#getReadTimeout()Ljava/time/Duration;
+#setReadTimeout(Ljava/time/Duration;)V
+#getPool()Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$Pool;
-#getContactPoints()Ljava/lang/String;
-#setContactPoints(Ljava/lang/String;)V
-#getConnectTimeoutMillis()I
-#setConnectTimeoutMillis(I)V
-#getReadTimeoutMillis()I
-#setReadTimeoutMillis(I)V
@2.1.0.RELEASE
*#getLoadBalancingPolicy()Ljava/lang/Class;[deprecated]
*#setLoadBalancingPolicy(Ljava/lang/Class;)V[deprecated]
*#getReconnectionPolicy()Ljava/lang/Class;[deprecated]
*#setReconnectionPolicy(Ljava/lang/Class;)V[deprecated]
*#getRetryPolicy()Ljava/lang/Class;[deprecated]
*#setRetryPolicy(Ljava/lang/Class;)V[deprecated]
+#isJmxEnabled()Z
+#setJmxEnabled(Z)V
@2.2.0.RELEASE
-#getLoadBalancingPolicy()Ljava/lang/Class;[deprecated]
-#setLoadBalancingPolicy(Ljava/lang/Class;)V[deprecated]
-#getReconnectionPolicy()Ljava/lang/Class;[deprecated]
-#setReconnectionPolicy(Ljava/lang/Class;)V[deprecated]
-#getRetryPolicy()Ljava/lang/Class;[deprecated]
-#setRetryPolicy(Ljava/lang/Class;)V[deprecated]
@2.3.0.RELEASE
+#getSessionName()Ljava/lang/String;
+#setSessionName(Ljava/lang/String;)V
*#getClusterName()Ljava/lang/String;[deprecated]
*#setClusterName(Ljava/lang/String;)V[deprecated]
+#getLocalDatacenter()Ljava/lang/String;
+#setLocalDatacenter(Ljava/lang/String;)V
+#getCompression()Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$Compression;
+#setCompression(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$Compression;)V
+#getConsistencyLevel()Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;[deprecated]
+#setConsistencyLevel(Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;)V[deprecated]
+#getSerialConsistencyLevel()Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;[deprecated]
+#setSerialConsistencyLevel(Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;)V[deprecated]
*#getFetchSize()I[deprecated]
*#setFetchSize(I)V[deprecated]
*#getConnectTimeout()Ljava/time/Duration;[deprecated]
*#setConnectTimeout(Ljava/time/Duration;)V[deprecated]
*#getReadTimeout()Ljava/time/Duration;[deprecated]
*#setReadTimeout(Ljava/time/Duration;)V[deprecated]
+#getConnection()Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$Connection;
+#getRequest()Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$Request;
-#getCompression()Lcom/datastax/driver/core/ProtocolOptions$Compression;
-#setCompression(Lcom/datastax/driver/core/ProtocolOptions$Compression;)V
-#getConsistencyLevel()Lcom/datastax/driver/core/ConsistencyLevel;
-#setConsistencyLevel(Lcom/datastax/driver/core/ConsistencyLevel;)V
-#getSerialConsistencyLevel()Lcom/datastax/driver/core/ConsistencyLevel;
-#setSerialConsistencyLevel(Lcom/datastax/driver/core/ConsistencyLevel;)V
-#isJmxEnabled()Z
-#setJmxEnabled(Z)V
@2.5.0
+#getConfig()Lorg/springframework/core/io/Resource;
+#setConfig(Lorg/springframework/core/io/Resource;)V
+#getControlconnection()Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$Controlconnection;
-#getClusterName()Ljava/lang/String;[deprecated]
-#setClusterName(Ljava/lang/String;)V[deprecated]
-#getConsistencyLevel()Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;[deprecated]
-#setConsistencyLevel(Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;)V[deprecated]
-#getSerialConsistencyLevel()Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;[deprecated]
-#setSerialConsistencyLevel(Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;)V[deprecated]
-#getFetchSize()I[deprecated]
-#setFetchSize(I)V[deprecated]
-#getConnectTimeout()Ljava/time/Duration;[deprecated]
-#setConnectTimeout(Ljava/time/Duration;)V[deprecated]
-#getReadTimeout()Ljava/time/Duration;[deprecated]
-#setReadTimeout(Ljava/time/Duration;)V[deprecated]
@2.6.9
+#setContactPoints(Ljava/util/List;)V
@2.7.0
-#setContactPoints(Ljava/util/List;)V
@2.7.1
+#setContactPoints(Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/domain/EntityScanPackages
@1.4.0.RELEASE
+#getPackageNames()Ljava/util/List;
+#get(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/boot/autoconfigure/domain/EntityScanPackages;
+#register(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;[Ljava/lang/String;)V
+#register(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/util/Collection;)V

+###org/springframework/boot/autoconfigure/ldap/LdapAutoConfiguration
@1.5.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/ldap/LdapProperties;Lorg/springframework/core/env/Environment;)V
+#ldapContextSource()Lorg/springframework/ldap/core/ContextSource;
@2.1.0.RELEASE
+#ldapContextSource()Lorg/springframework/ldap/core/support/LdapContextSource;
+#ldapTemplate(Lorg/springframework/ldap/core/ContextSource;)Lorg/springframework/ldap/core/LdapTemplate;
-#ldapContextSource()Lorg/springframework/ldap/core/ContextSource;
@2.2.0.RELEASE
+#<init>()V
+#ldapContextSource(Lorg/springframework/boot/autoconfigure/ldap/LdapProperties;Lorg/springframework/core/env/Environment;)Lorg/springframework/ldap/core/support/LdapContextSource;
-#<init>(Lorg/springframework/boot/autoconfigure/ldap/LdapProperties;Lorg/springframework/core/env/Environment;)V
-#ldapContextSource()Lorg/springframework/ldap/core/support/LdapContextSource;
@2.3.0.RELEASE
+#ldapContextSource(Lorg/springframework/boot/autoconfigure/ldap/LdapProperties;Lorg/springframework/core/env/Environment;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/ldap/core/support/LdapContextSource;
-#ldapContextSource(Lorg/springframework/boot/autoconfigure/ldap/LdapProperties;Lorg/springframework/core/env/Environment;)Lorg/springframework/ldap/core/support/LdapContextSource;
@2.4.0
+#ldapTemplate(Lorg/springframework/boot/autoconfigure/ldap/LdapProperties;Lorg/springframework/ldap/core/ContextSource;)Lorg/springframework/ldap/core/LdapTemplate;
-#ldapTemplate(Lorg/springframework/ldap/core/ContextSource;)Lorg/springframework/ldap/core/LdapTemplate;

+###org/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties$Proxy
@1.4.0.RELEASE
+#<init>()V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPort()Ljava/lang/Integer;
+#setPort(Ljava/lang/Integer;)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties$Proxy

+###org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientBuilderCustomizer
@2.1.0.RELEASE
+#customize(Lorg/elasticsearch/client/RestClientBuilder;)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientBuilderCustomizer

+###org/springframework/boot/autoconfigure/flyway/FlywayMigrationInitializer
@1.3.0.RELEASE
+#<init>(Lorg/flywaydb/core/Flyway;)V
+#<init>(Lorg/flywaydb/core/Flyway;Lorg/springframework/boot/autoconfigure/flyway/FlywayMigrationStrategy;)V
+#afterPropertiesSet()V
+#getOrder()I
+#setOrder(I)V

+###org/springframework/boot/autoconfigure/flyway/FlywayMigrationStrategy
@1.3.0.RELEASE
+#migrate(Lorg/flywaydb/core/Flyway;)V

+###org/springframework/boot/autoconfigure/flyway/FlywayMigrationScriptMissingException
@2.2.0.RELEASE
+#getLocations()Ljava/util/List;
@2.7.0
-###org/springframework/boot/autoconfigure/flyway/FlywayMigrationScriptMissingException

+###org/springframework/boot/autoconfigure/ImportAutoConfiguration
@1.4.0.RELEASE
+#value()[Ljava/lang/Class;
@1.5.0.RELEASE
+#classes()[Ljava/lang/Class;
+#exclude()[Ljava/lang/Class;

+###org/springframework/boot/autoconfigure/condition/OnPropertyListCondition
@2.0.5.RELEASE
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;

+###org/springframework/boot/autoconfigure/condition/AllNestedConditions
@1.3.0.RELEASE
+#<init>(Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;)V
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
@1.5.22.RELEASE
-#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
-#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
@2.0.0.RELEASE
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
@2.0.1.RELEASE
-#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
-#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;

+###org/springframework/boot/autoconfigure/condition/ResourceCondition
@1.3.0.RELEASE
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;

+###org/springframework/boot/autoconfigure/session/MongoSessionProperties
@2.0.0.RELEASE
+#<init>()V
+#getCollectionName()Ljava/lang/String;
+#setCollectionName(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/session/SessionProperties$Servlet
@2.0.0.RELEASE
+#<init>()V
+#getFilterOrder()I
+#setFilterOrder(I)V
+#getFilterDispatcherTypes()Ljava/util/Set;
+#setFilterDispatcherTypes(Ljava/util/Set;)V

+###org/springframework/boot/autoconfigure/session/SessionRepositoryUnavailableException
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/boot/autoconfigure/session/StoreType;)V
+#getStoreType()Lorg/springframework/boot/autoconfigure/session/StoreType;
@3.0.0
-###org/springframework/boot/autoconfigure/session/SessionRepositoryUnavailableException

+###org/springframework/boot/autoconfigure/BackgroundPreinitializer
@1.3.0.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationStartedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.3.2.RELEASE
-#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationStartedEvent;)V
@1.3.4.RELEASE
+#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent;)V
@1.5.7.RELEASE
+#onApplicationEvent(Lorg/springframework/boot/context/event/SpringApplicationEvent;)V
-#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent;)V
@3.0.0
+#getOrder()I

+###org/springframework/boot/autoconfigure/jersey/JerseyProperties$Type
@1.2.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/jersey/JerseyProperties$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jersey/JerseyProperties$Type;

+###org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration$JerseyWebApplicationInitializer
@1.3.1.RELEASE
+#<init>()V
+#onStartup(Ljavax/servlet/ServletContext;)V
@3.0.0
+#onStartup(Ljakarta/servlet/ServletContext;)V
-#onStartup(Ljavax/servlet/ServletContext;)V

+###org/springframework/boot/autoconfigure/jersey/JerseyProperties
@1.2.0.RELEASE
+#<init>()V
+#getFilter()Lorg/springframework/boot/autoconfigure/jersey/JerseyProperties$Filter;
+#setFilter(Lorg/springframework/boot/autoconfigure/jersey/JerseyProperties$Filter;)V
+#getType()Lorg/springframework/boot/autoconfigure/jersey/JerseyProperties$Type;
+#setType(Lorg/springframework/boot/autoconfigure/jersey/JerseyProperties$Type;)V
+#getInit()Ljava/util/Map;
+#setInit(Ljava/util/Map;)V
@1.3.0.RELEASE
+#getApplicationPath()Ljava/lang/String;
+#setApplicationPath(Ljava/lang/String;)V
@1.4.0.RELEASE
+#getServlet()Lorg/springframework/boot/autoconfigure/jersey/JerseyProperties$Servlet;
-#setFilter(Lorg/springframework/boot/autoconfigure/jersey/JerseyProperties$Filter;)V

+###org/springframework/boot/autoconfigure/hateoas/HypermediaHttpMessageConverterConfiguration
@1.3.0.RELEASE
+#<init>()V
+#halMessageConverterSupportedMediaTypeCustomizer()Lorg/springframework/boot/autoconfigure/hateoas/HypermediaHttpMessageConverterConfiguration$HalMessageConverterSupportedMediaTypesCustomizer;
@2.7.0
-###org/springframework/boot/autoconfigure/hateoas/HypermediaHttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#restTemplateBuilder()Lorg/springframework/boot/web/client/RestTemplateBuilder;
@2.2.0.RELEASE
+#<init>()V
+#restTemplateBuilder(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#restTemplateBuilder()Lorg/springframework/boot/web/client/RestTemplateBuilder;
@2.4.0
+#restTemplateBuilderConfigurer(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/web/client/RestTemplateBuilderConfigurer;
+#restTemplateBuilder(Lorg/springframework/boot/autoconfigure/web/client/RestTemplateBuilderConfigurer;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
-#restTemplateBuilder(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/web/client/RestTemplateBuilder;

+###org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog
@2.0.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getFilename()Ljava/lang/String;
+#setFilename(Ljava/lang/String;)V
+#getFileDateFormat()Ljava/lang/String;
+#setFileDateFormat(Ljava/lang/String;)V
+#getRetentionPeriod()I
+#setRetentionPeriod(I)V
+#isAppend()Z
+#setAppend(Z)V
+#isExtendedFormat()Z
+#setExtendedFormat(Z)V
+#getDateFormat()Ljava/lang/String;
+#setDateFormat(Ljava/lang/String;)V
+#getLocale()Ljava/util/Locale;
+#setLocale(Ljava/util/Locale;)V
+#getTimeZone()Ljava/util/TimeZone;
+#setTimeZone(Ljava/util/TimeZone;)V
+#isLogCookies()Z
+#setLogCookies(Z)V
+#isLogServer()Z
+#setLogServer(Z)V
+#isLogLatency()Z
+#setLogLatency(Z)V
@2.2.0.RELEASE
+#getFormat()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog$FORMAT;
+#setFormat(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog$FORMAT;)V
+#getCustomFormat()Ljava/lang/String;
+#setCustomFormat(Ljava/lang/String;)V
+#getIgnorePaths()Ljava/util/List;
+#setIgnorePaths(Ljava/util/List;)V
-#isExtendedFormat()Z
-#setExtendedFormat(Z)V
-#getDateFormat()Ljava/lang/String;
-#setDateFormat(Ljava/lang/String;)V
-#getLocale()Ljava/util/Locale;
-#setLocale(Ljava/util/Locale;)V
-#getTimeZone()Ljava/util/TimeZone;
-#setTimeZone(Ljava/util/TimeZone;)V
-#isLogCookies()Z
-#setLogCookies(Z)V
-#isLogServer()Z
-#setLogServer(Z)V
-#isLogLatency()Z
-#setLogLatency(Z)V

+###org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog
@1.3.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getPattern()Ljava/lang/String;
+#setPattern(Ljava/lang/String;)V
+#getDirectory()Ljava/lang/String;
+#setDirectory(Ljava/lang/String;)V
+#getPrefix()Ljava/lang/String;
+#setPrefix(Ljava/lang/String;)V
+#getSuffix()Ljava/lang/String;
+#setSuffix(Ljava/lang/String;)V
@1.4.0.RELEASE
+#isRenameOnRotate()Z
+#setRenameOnRotate(Z)V
@1.4.3.RELEASE
+#isRequestAttributesEnabled()Z
+#setRequestAttributesEnabled(Z)V
@1.5.0.RELEASE
+#isRotate()Z
+#setRotate(Z)V
+#isBuffered()Z
+#setBuffered(Z)V
@1.5.3.RELEASE
+#getFileDateFormat()Ljava/lang/String;
+#setFileDateFormat(Ljava/lang/String;)V
@2.2.0.RELEASE
+#getConditionIf()Ljava/lang/String;
+#setConditionIf(Ljava/lang/String;)V
+#getConditionUnless()Ljava/lang/String;
+#setConditionUnless(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setEncoding(Ljava/lang/String;)V
+#getLocale()Ljava/lang/String;
+#setLocale(Ljava/lang/String;)V
+#isCheckExists()Z
+#setCheckExists(Z)V
+#getMaxDays()I
+#setMaxDays(I)V
+#isIpv6Canonical()Z
+#setIpv6Canonical(Z)V

+###org/springframework/boot/autoconfigure/web/ResourceProperties$Strategy
@1.3.0.RELEASE
+#<init>()V
+#getFixed()Lorg/springframework/boot/autoconfigure/web/ResourceProperties$Fixed;
+#getContent()Lorg/springframework/boot/autoconfigure/web/ResourceProperties$Content;
@2.4.0
+#getContent()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain$Strategy$Content;
+#getFixed()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain$Strategy$Fixed;
@2.6.0
-###org/springframework/boot/autoconfigure/web/ResourceProperties$Strategy

+###org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/web/reactive/TomcatReactiveWebServerFactoryCustomizer
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#customize(Lorg/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory;)V
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WebFluxConfig
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#configureArgumentResolvers(Lorg/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer;)V
+#configureHttpMessageCodecs(Lorg/springframework/http/codec/ServerCodecConfigurer;)V
+#addResourceHandlers(Lorg/springframework/web/reactive/config/ResourceHandlerRegistry;)V
+#configureViewResolvers(Lorg/springframework/web/reactive/config/ViewResolverRegistry;)V
+#addFormatters(Lorg/springframework/format/FormatterRegistry;)V
@2.4.0
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.6.0
+#<init>(Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V

+###org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
+#webClientBuilder(Ljava/util/List;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
@2.0.1.RELEASE
+#webClientBuilder()Lorg/springframework/web/reactive/function/client/WebClient$Builder;
-#webClientBuilder(Ljava/util/List;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
@2.3.0.RELEASE
+#<init>()V
+#webClientBuilder(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
-#webClientBuilder()Lorg/springframework/web/reactive/function/client/WebClient$Builder;

+###org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorConfiguration$ReactorNetty
@2.1.0.RELEASE
+#<init>()V
+#reactorClientResourceFactory()Lorg/springframework/http/client/reactive/ReactorResourceFactory;
+#reactorClientHttpConnector(Lorg/springframework/http/client/reactive/ReactorResourceFactory;)Lorg/springframework/http/client/reactive/ReactorClientHttpConnector;
@2.3.0.RELEASE
+#reactorClientHttpConnector(Lorg/springframework/http/client/reactive/ReactorResourceFactory;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/http/client/reactive/ReactorClientHttpConnector;
-#reactorClientHttpConnector(Lorg/springframework/http/client/reactive/ReactorResourceFactory;)Lorg/springframework/http/client/reactive/ReactorClientHttpConnector;
@2.5.0
-###org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorConfiguration$ReactorNetty

+###org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientCodecCustomizer
@2.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#customize(Lorg/springframework/web/reactive/function/client/WebClient$Builder;)V

+###org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration$WebClientCodecsConfiguration
@2.0.0.RELEASE
+#exchangeStrategiesCustomizer(Ljava/util/List;)Lorg/springframework/boot/autoconfigure/web/reactive/function/client/WebClientCodecCustomizer;
@2.3.0.RELEASE
+#exchangeStrategiesCustomizer(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/web/reactive/function/client/WebClientCodecCustomizer;
-#exchangeStrategiesCustomizer(Ljava/util/List;)Lorg/springframework/boot/autoconfigure/web/reactive/function/client/WebClientCodecCustomizer;

+###org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorConfiguration$JettyClient
@2.1.0.RELEASE
+#<init>()V
+#jettyClientResourceFactory()Lorg/springframework/http/client/reactive/JettyResourceFactory;
+#jettyClientHttpConnector(Lorg/springframework/http/client/reactive/JettyResourceFactory;)Lorg/springframework/http/client/reactive/JettyClientHttpConnector;
@2.5.0
-###org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorConfiguration$JettyClient

+###org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar
@2.0.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V

+###org/springframework/boot/autoconfigure/web/ResourceProperties$Content
@1.3.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getPaths()[Ljava/lang/String;
+#setPaths([Ljava/lang/String;)V
@2.4.0
-#setEnabled(Z)V
-#setPaths([Ljava/lang/String;)V
@2.6.0
-###org/springframework/boot/autoconfigure/web/ResourceProperties$Content

+###org/springframework/boot/autoconfigure/web/ErrorProperties
@1.3.0.RELEASE
+#<init>()V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getIncludeStacktrace()Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;
+#setIncludeStacktrace(Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;)V
@2.0.0.RELEASE
+#isIncludeException()Z
+#setIncludeException(Z)V
@2.0.1.RELEASE
+#getWhitelabel()Lorg/springframework/boot/autoconfigure/web/ErrorProperties$Whitelabel;
+#setWhitelabel(Lorg/springframework/boot/autoconfigure/web/ErrorProperties$Whitelabel;)V
@2.1.0.RELEASE
-#setWhitelabel(Lorg/springframework/boot/autoconfigure/web/ErrorProperties$Whitelabel;)V
@2.3.0.RELEASE
+#getIncludeMessage()Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeAttribute;
+#setIncludeMessage(Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeAttribute;)V
+#getIncludeBindingErrors()Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeAttribute;
+#setIncludeBindingErrors(Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeAttribute;)V
@2.5.0
+#getIncludeStacktrace()Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeAttribute;
+#setIncludeStacktrace(Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeAttribute;)V
-#getIncludeStacktrace()Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;
-#setIncludeStacktrace(Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;)V

+###org/springframework/boot/autoconfigure/web/ServerProperties$Undertow$Options
@2.2.0.RELEASE
+#<init>()V
+#getServer()Ljava/util/Map;
+#getSocket()Ljava/util/Map;

+###org/springframework/boot/autoconfigure/web/embedded/NettyWebServerFactoryCustomizer
@2.1.0.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory;)V
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration
@2.0.0.RELEASE
+#<init>()V
+#tomcatWebServerFactoryCustomizer(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer;

+###org/springframework/boot/autoconfigure/web/servlet/MultipartProperties
@2.0.0.RELEASE
+#<init>()V
+#getEnabled()Z
+#setEnabled(Z)V
+#getLocation()Ljava/lang/String;
+#setLocation(Ljava/lang/String;)V
+#getMaxFileSize()Ljava/lang/String;
+#setMaxFileSize(Ljava/lang/String;)V
+#getMaxRequestSize()Ljava/lang/String;
+#setMaxRequestSize(Ljava/lang/String;)V
+#getFileSizeThreshold()Ljava/lang/String;
+#setFileSizeThreshold(Ljava/lang/String;)V
+#isResolveLazily()Z
+#setResolveLazily(Z)V
+#createMultipartConfig()Ljavax/servlet/MultipartConfigElement;
@2.1.0.RELEASE
+#getMaxFileSize()Lorg/springframework/util/unit/DataSize;
+#setMaxFileSize(Lorg/springframework/util/unit/DataSize;)V
+#getMaxRequestSize()Lorg/springframework/util/unit/DataSize;
+#setMaxRequestSize(Lorg/springframework/util/unit/DataSize;)V
+#getFileSizeThreshold()Lorg/springframework/util/unit/DataSize;
+#setFileSizeThreshold(Lorg/springframework/util/unit/DataSize;)V
-#getMaxFileSize()Ljava/lang/String;
-#setMaxFileSize(Ljava/lang/String;)V
-#getMaxRequestSize()Ljava/lang/String;
-#setMaxRequestSize(Ljava/lang/String;)V
-#getFileSizeThreshold()Ljava/lang/String;
-#setFileSizeThreshold(Ljava/lang/String;)V
@3.0.0
+#createMultipartConfig()Ljakarta/servlet/MultipartConfigElement;
-#createMultipartConfig()Ljavax/servlet/MultipartConfigElement;

+###org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedTomcat
@2.0.0.RELEASE
+#<init>()V
+#tomcatServletWebServerFactory()Lorg/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory;
@2.1.12.RELEASE
-###org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedTomcat

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcRegistrations
@2.0.0.RELEASE
+#getRequestMappingHandlerMapping()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;
+#getRequestMappingHandlerAdapter()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter;
+#getExceptionHandlerExceptionResolver()Lorg/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver;

+###org/springframework/boot/autoconfigure/cloud/CloudServiceConnectorsAutoConfiguration
@2.1.0.RELEASE
+#<init>()V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/cloud/CloudServiceConnectorsAutoConfiguration

+###org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#springApplicationAdminRegistrar()Lorg/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/core/env/Environment;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>()V
+#springApplicationAdminRegistrar(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar;
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/core/env/Environment;)V
-#springApplicationAdminRegistrar()Lorg/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar;

+###org/springframework/boot/autoconfigure/cache/CacheType
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/cache/CacheType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/cache/CacheType;

+###org/springframework/boot/autoconfigure/cache/CacheProperties$Infinispan
@1.3.0.RELEASE
+#<init>()V
+#getConfig()Lorg/springframework/core/io/Resource;
+#setConfig(Lorg/springframework/core/io/Resource;)V

+###org/springframework/boot/autoconfigure/jms/JmsAutoConfiguration$JmsTemplateConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/jms/JmsProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#jmsTemplate(Ljavax/jms/ConnectionFactory;)Lorg/springframework/jms/core/JmsTemplate;
@3.0.0
+#jmsTemplate(Ljakarta/jms/ConnectionFactory;)Lorg/springframework/jms/core/JmsTemplate;
-#jmsTemplate(Ljavax/jms/ConnectionFactory;)Lorg/springframework/jms/core/JmsTemplate;

+###org/springframework/boot/autoconfigure/jms/JmsProperties$DeliveryMode
@1.5.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/jms/JmsProperties$DeliveryMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jms/JmsProperties$DeliveryMode;
+#getValue()I

+###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryCustomizer
@1.5.5.RELEASE
+#customize(Lorg/apache/activemq/ActiveMQConnectionFactory;)V
@3.0.0
-###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryCustomizer

+###org/springframework/boot/autoconfigure/rsocket/RSocketProperties
@2.2.0.RELEASE
+#<init>()V
+#getServer()Lorg/springframework/boot/autoconfigure/rsocket/RSocketProperties$Server;

+###org/springframework/boot/autoconfigure/rsocket/RSocketMessagingAutoConfiguration
@2.2.0.RELEASE
+#<init>()V
+#messageHandler(Lorg/springframework/messaging/rsocket/RSocketStrategies;)Lorg/springframework/messaging/rsocket/annotation/support/RSocketMessageHandler;
@2.3.0.RELEASE
+#messageHandler(Lorg/springframework/messaging/rsocket/RSocketStrategies;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/messaging/rsocket/annotation/support/RSocketMessageHandler;
-#messageHandler(Lorg/springframework/messaging/rsocket/RSocketStrategies;)Lorg/springframework/messaging/rsocket/annotation/support/RSocketMessageHandler;

+###org/springframework/boot/autoconfigure/rsocket/RSocketRequesterAutoConfiguration
@2.2.0.RELEASE
+#<init>()V
+#rSocketRequesterBuilder(Lorg/springframework/messaging/rsocket/RSocketStrategies;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
@2.6.0
+#rSocketRequesterBuilder(Lorg/springframework/messaging/rsocket/RSocketStrategies;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
-#rSocketRequesterBuilder(Lorg/springframework/messaging/rsocket/RSocketStrategies;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;

+###org/springframework/boot/autoconfigure/webservices/WebServicesAutoConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/webservices/WebServicesProperties;)V
+#messageDispatcherServlet(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
@2.0.0.RELEASE
+#wsdlDefinitionBeanFactoryPostProcessor()Lorg/springframework/boot/autoconfigure/webservices/WebServicesAutoConfiguration$WsdlDefinitionBeanFactoryPostProcessor;
@2.2.0.RELEASE
+#<init>()V
+#messageDispatcherServlet(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/webservices/WebServicesProperties;)Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
-#<init>(Lorg/springframework/boot/autoconfigure/webservices/WebServicesProperties;)V
-#messageDispatcherServlet(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/web/servlet/ServletRegistrationBean;

+###org/springframework/boot/autoconfigure/webservices/WebServicesProperties$Servlet
@1.4.0.RELEASE
+#<init>()V
+#getInit()Ljava/util/Map;
+#setInit(Ljava/util/Map;)V
+#getLoadOnStartup()I
+#setLoadOnStartup(I)V

+###org/springframework/boot/autoconfigure/integration/IntegrationDataSourceInitializer
@2.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties;)V
@3.0.0
-###org/springframework/boot/autoconfigure/integration/IntegrationDataSourceInitializer

+###org/springframework/boot/autoconfigure/integration/IntegrationProperties
@2.0.0.RELEASE
+#<init>()V
+#getJdbc()Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties$Jdbc;
@2.3.0.RELEASE
+#getRsocket()Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties$RSocket;
@2.5.0
+#getChannel()Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties$Channel;
+#getEndpoint()Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties$Endpoint;
+#getError()Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties$Error;
@2.6.0
+#getPoller()Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties$Poller;
+#getManagement()Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties$Management;

+###org/springframework/boot/autoconfigure/AutoConfigurations
@2.0.0.RELEASE
+#getOrder()I
+#of([Ljava/lang/Class;)Lorg/springframework/boot/autoconfigure/AutoConfigurations;

+###org/springframework/boot/autoconfigure/AutoConfigurationImportSelector$AutoConfigurationEntry
@2.1.0.RELEASE
+#getConfigurations()Ljava/util/List;
+#getExclusions()Ljava/util/Set;

+###org/springframework/boot/autoconfigure/AutoConfigurationImportFilter
@1.5.0.RELEASE
+#match([Ljava/lang/String;Lorg/springframework/boot/autoconfigure/AutoConfigurationMetadata;)[Z

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyAutoConfiguration
@2.2.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties
@2.2.0.RELEASE
+#<init>()V
+#getRegistration()Ljava/util/Map;

+###org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#reactiveUserDetailsService(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/security/core/userdetails/MapReactiveUserDetailsService;

+###org/springframework/boot/autoconfigure/security/reactive/PathRequest
@2.0.0.RELEASE
+#toStaticResources()Lorg/springframework/boot/autoconfigure/security/reactive/StaticResourceRequest;

+###org/springframework/boot/autoconfigure/security/reactive/ReactiveSecurityAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter
@2.1.0.RELEASE
+#getClientRegistrations(Lorg/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties;)Ljava/util/Map;

+###org/springframework/boot/autoconfigure/security/oauth2/resource/IssuerUriCondition
@2.1.0.RELEASE
+#<init>()V
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;

+###org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerAutoConfiguration
@2.1.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerProperties$Opaquetoken
@2.2.0.RELEASE
+#<init>()V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getClientSecret()Ljava/lang/String;
+#setClientSecret(Ljava/lang/String;)V
+#getIntrospectionUri()Ljava/lang/String;
+#setIntrospectionUri(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/security/servlet/PathRequest
@2.0.0.RELEASE
+#toStaticResources()Lorg/springframework/boot/autoconfigure/security/servlet/StaticResourceRequest;
+#toH2Console()Lorg/springframework/boot/autoconfigure/security/servlet/PathRequest$H2ConsoleRequestMatcher;

+###org/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider
@2.0.5.RELEASE
+#getRequestMatcher(Ljava/lang/String;)Lorg/springframework/security/web/util/matcher/RequestMatcher;

+###org/springframework/boot/autoconfigure/mustache/MustacheEnvironmentCollector
@1.2.2.RELEASE
+#<init>()V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#createFetcher(Ljava/lang/Object;Ljava/lang/String;)Lcom/samskivert/mustache/Mustache$VariableFetcher;
@2.7.0
-###org/springframework/boot/autoconfigure/mustache/MustacheEnvironmentCollector

+###org/springframework/boot/autoconfigure/data/ConditionalOnRepositoryType
@2.0.0.RELEASE
+#store()Ljava/lang/String;
+#type()Lorg/springframework/boot/autoconfigure/data/RepositoryType;

+###org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#mongoDbFactory(Lcom/mongodb/MongoClient;)Lorg/springframework/data/mongodb/core/SimpleMongoDbFactory;
+#mongoTemplate(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)Lorg/springframework/data/mongodb/core/MongoTemplate;
+#mappingMongoConverter(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
+#mongoMappingContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
+#gridFsTemplate(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/MongoTemplate;)Lorg/springframework/data/mongodb/gridfs/GridFsTemplate;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;)V
-#<init>()V
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@1.4.1.RELEASE
+#mappingMongoConverter(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/data/mongodb/core/convert/CustomConversions;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
+#mongoMappingContext(Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/data/mongodb/core/convert/CustomConversions;)Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
+#customConversions()Lorg/springframework/data/mongodb/core/convert/CustomConversions;
-#mappingMongoConverter(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
-#mongoMappingContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
@1.5.2.RELEASE
+#mongoCustomConversions()Lorg/springframework/data/mongodb/core/convert/CustomConversions;
-#customConversions()Lorg/springframework/data/mongodb/core/convert/CustomConversions;
@2.0.0.RELEASE
+#mappingMongoConverter(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
+#mongoMappingContext(Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;)Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
+#mongoCustomConversions()Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;
-#mappingMongoConverter(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/data/mongodb/core/convert/CustomConversions;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
-#mongoMappingContext(Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/data/mongodb/core/convert/CustomConversions;)Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
-#mongoCustomConversions()Lorg/springframework/data/mongodb/core/convert/CustomConversions;
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;)V
+#mongoDbFactory(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/data/mongodb/core/MongoDbFactorySupport;
-#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;)V
-#mongoDbFactory(Lcom/mongodb/MongoClient;)Lorg/springframework/data/mongodb/core/SimpleMongoDbFactory;
-#mongoMappingContext(Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;)Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
-#mongoCustomConversions()Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;
@2.1.7.RELEASE
+#<init>()V
-#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;)V
-#mongoDbFactory(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/data/mongodb/core/MongoDbFactorySupport;
-#mongoTemplate(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)Lorg/springframework/data/mongodb/core/MongoTemplate;
-#mappingMongoConverter(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
-#gridFsTemplate(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/MongoTemplate;)Lorg/springframework/data/mongodb/gridfs/GridFsTemplate;

+###org/springframework/boot/autoconfigure/data/mongo/MongoReactiveRepositoriesAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/mongo/MongoReactiveDataAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;)V
+#reactiveMongoDatabaseFactory(Lcom/mongodb/reactivestreams/client/MongoClient;)Lorg/springframework/data/mongodb/core/SimpleReactiveMongoDatabaseFactory;
+#reactiveMongoTemplate(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;
@2.1.0.RELEASE
+#mappingMongoConverter(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
@2.2.0.RELEASE
+#<init>()V
+#reactiveMongoDatabaseFactory(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lcom/mongodb/reactivestreams/client/MongoClient;)Lorg/springframework/data/mongodb/core/SimpleReactiveMongoDatabaseFactory;
+#dataBufferFactory()Lorg/springframework/core/io/buffer/DefaultDataBufferFactory;
+#reactiveGridFsTemplate(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;Lorg/springframework/core/io/buffer/DataBufferFactory;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate;
-#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;)V
-#reactiveMongoDatabaseFactory(Lcom/mongodb/reactivestreams/client/MongoClient;)Lorg/springframework/data/mongodb/core/SimpleReactiveMongoDatabaseFactory;
@2.3.0.RELEASE
+#reactiveGridFsTemplate(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate;
-#reactiveGridFsTemplate(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;Lorg/springframework/core/io/buffer/DataBufferFactory;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate;

+###org/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties
@1.4.0.RELEASE
+#<init>()V
+#getUri()Ljava/lang/String;
+#setUri(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getCompiler()Ljava/lang/String;
+#setCompiler(Ljava/lang/String;)V
+#getEmbedded()Lorg/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties$Embedded;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#createConfiguration()Lorg/neo4j/ogm/config/Configuration;
@2.0.0.RELEASE
+#getAutoIndex()Lorg/neo4j/ogm/config/AutoIndexMode;
+#setAutoIndex(Lorg/neo4j/ogm/config/AutoIndexMode;)V
+#getOpenInView()Ljava/lang/Boolean;
+#setOpenInView(Ljava/lang/Boolean;)V
-#getCompiler()Ljava/lang/String;
-#setCompiler(Ljava/lang/String;)V
@2.2.0.RELEASE
+#isUseNativeTypes()Z
+#setUseNativeTypes(Z)V
@2.3.0.RELEASE
-#getOpenInView()Ljava/lang/Boolean;
-#setOpenInView(Ljava/lang/Boolean;)V
@2.4.0
-###org/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties

+###org/springframework/boot/autoconfigure/data/couchbase/CouchbaseReactiveRepositoriesAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/redis/RedisProperties$Cluster
@1.4.0.RELEASE
+#<init>()V
+#getNodes()Ljava/util/List;
+#setNodes(Ljava/util/List;)V
+#getMaxRedirects()Ljava/lang/Integer;
+#setMaxRedirects(Ljava/lang/Integer;)V

+###org/springframework/boot/autoconfigure/data/redis/RedisReactiveAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#reactiveRedisTemplate(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/data/redis/core/ReactiveRedisTemplate;
@2.2.0.RELEASE
+#reactiveStringRedisTemplate(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;)Lorg/springframework/data/redis/core/ReactiveStringRedisTemplate;

+###org/springframework/boot/autoconfigure/data/ldap/LdapRepositoriesAutoConfiguration
@1.5.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchProperties
@1.3.0.RELEASE
+#<init>()V
+#getClusterName()Ljava/lang/String;
+#setClusterName(Ljava/lang/String;)V
+#getClusterNodes()Ljava/lang/String;
+#setClusterNodes(Ljava/lang/String;)V
+#getProperties()Ljava/util/Map;
+#setProperties(Ljava/util/Map;)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchProperties

+###org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties$Naming
@2.1.0.RELEASE
+#<init>()V
+#getImplicitStrategy()Ljava/lang/String;
+#setImplicitStrategy(Ljava/lang/String;)V
+#getPhysicalStrategy()Ljava/lang/String;
+#setPhysicalStrategy(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/orm/jpa/HibernatePropertiesCustomizer
@2.0.0.RELEASE
+#customize(Ljava/util/Map;)V

+###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceConfiguration
@1.4.0.RELEASE

+###org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration
@1.4.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#jdbcTemplate()Lorg/springframework/jdbc/core/JdbcTemplate;
+#namedParameterJdbcTemplate()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
@2.0.0.RELEASE
+#<init>()V
-#<init>(Ljavax/sql/DataSource;)V
-#jdbcTemplate()Lorg/springframework/jdbc/core/JdbcTemplate;
-#namedParameterJdbcTemplate()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;

+###org/springframework/boot/autoconfigure/jdbc/JdbcOperationsDependsOnPostProcessor
@2.0.4.RELEASE
+#<init>([Ljava/lang/String;)V
@2.1.8.RELEASE
+#<init>([Ljava/lang/Class;)V
@2.7.0
-###org/springframework/boot/autoconfigure/jdbc/JdbcOperationsDependsOnPostProcessor

+###org/springframework/boot/autoconfigure/jdbc/XADataSourceAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
+#dataSource()Ljavax/sql/DataSource;
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/jdbc/XADataSourceWrapper;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>()V
+#dataSource(Lorg/springframework/boot/jdbc/XADataSourceWrapper;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/beans/factory/ObjectProvider;)Ljavax/sql/DataSource;
-#<init>(Lorg/springframework/boot/jdbc/XADataSourceWrapper;Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#dataSource()Ljavax/sql/DataSource;

+###org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$JdkDynamicAutoProxyConfiguration
@1.5.3.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/transaction/PlatformTransactionManagerCustomizer
@1.5.0.RELEASE
+#customize(Lorg/springframework/transaction/PlatformTransactionManager;)V

+###org/springframework/boot/autoconfigure/transaction/jta/JtaProperties
@1.3.0.RELEASE
+#<init>()V
+#setLogDir(Ljava/lang/String;)V
+#getLogDir()Ljava/lang/String;
+#getTransactionManagerId()Ljava/lang/String;
+#setTransactionManagerId(Ljava/lang/String;)V
@3.0.0
-###org/springframework/boot/autoconfigure/transaction/jta/JtaProperties

+###org/springframework/boot/autoconfigure/influx/InfluxDbOkHttpClientBuilderProvider
@2.1.0.RELEASE

+###org/springframework/boot/autoconfigure/influx/InfluxDbAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
+#influxDb()Lorg/influxdb/InfluxDB;
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.2.0.RELEASE
+#<init>()V
+#influxDb(Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/influxdb/InfluxDB;
-#<init>(Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#influxDb()Lorg/influxdb/InfluxDB;
@2.5.0
+#influxDb(Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/influxdb/InfluxDB;
-#influxDb(Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/influxdb/InfluxDB;

+###org/springframework/boot/autoconfigure/websocket/reactive/TomcatWebSocketReactiveWebServerCustomizer
@2.0.0.RELEASE
+#<init>()V
+#customize(Lorg/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/validation/ValidatorAdapter
@2.0.0.RELEASE
+#getTarget()Lorg/springframework/validation/Validator;
+#supports(Ljava/lang/Class;)Z
+#validate(Ljava/lang/Object;Lorg/springframework/validation/Errors;)V
+#validate(Ljava/lang/Object;Lorg/springframework/validation/Errors;[Ljava/lang/Object;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#afterPropertiesSet()V
+#destroy()V
+#get(Lorg/springframework/context/ApplicationContext;Lorg/springframework/validation/Validator;)Lorg/springframework/validation/Validator;

+###org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration
@1.5.0.RELEASE
+#<init>()V
+#validator()Ljavax/validation/Validator;
+#methodValidationPostProcessor(Ljavax/validation/Validator;)Lorg/springframework/validation/beanvalidation/MethodValidationPostProcessor;
@1.5.2.RELEASE
+#jsr303Validator()Ljavax/validation/Validator;
-#validator()Ljavax/validation/Validator;
@1.5.3.RELEASE
+#methodValidationPostProcessor(Lorg/springframework/core/env/Environment;Ljavax/validation/Validator;)Lorg/springframework/validation/beanvalidation/MethodValidationPostProcessor;
-#jsr303Validator()Ljavax/validation/Validator;
-#methodValidationPostProcessor(Ljavax/validation/Validator;)Lorg/springframework/validation/beanvalidation/MethodValidationPostProcessor;
@1.5.4.RELEASE
+#defaultValidator()Lorg/springframework/validation/beanvalidation/LocalValidatorFactoryBean;
@2.4.0
+#methodValidationPostProcessor(Lorg/springframework/core/env/Environment;Ljavax/validation/Validator;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/validation/beanvalidation/MethodValidationPostProcessor;
-#methodValidationPostProcessor(Lorg/springframework/core/env/Environment;Ljavax/validation/Validator;)Lorg/springframework/validation/beanvalidation/MethodValidationPostProcessor;
@2.6.0
+#defaultValidator(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/validation/beanvalidation/LocalValidatorFactoryBean;
-#defaultValidator()Lorg/springframework/validation/beanvalidation/LocalValidatorFactoryBean;
@3.0.0
+#defaultValidator(Lorg/springframework/context/ApplicationContext;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/validation/beanvalidation/LocalValidatorFactoryBean;
+#methodValidationPostProcessor(Lorg/springframework/core/env/Environment;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/validation/beanvalidation/MethodValidationPostProcessor;
-#defaultValidator(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/validation/beanvalidation/LocalValidatorFactoryBean;
-#methodValidationPostProcessor(Lorg/springframework/core/env/Environment;Ljavax/validation/Validator;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/validation/beanvalidation/MethodValidationPostProcessor;

+###org/springframework/boot/autoconfigure/AutoConfigureOrder
@1.3.0.RELEASE
+#value()I

+###org/springframework/boot/autoconfigure/mail/MailSenderValidatorAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#validateConnection()V
@1.4.0.RELEASE
+#<init>(Lorg/springframework/mail/javamail/JavaMailSenderImpl;)V
-#<init>()V

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Admin
@2.0.0.RELEASE
+#<init>()V
+#getSsl()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Ssl;
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#isFailFast()Z
+#setFailFast(Z)V
+#getProperties()Ljava/util/Map;
+#buildProperties()Ljava/util/Map;
@2.3.0.RELEASE
+#getSecurity()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Security;
@3.0.0
+#isModifyTopicConfigs()Z
+#setModifyTopicConfigs(Z)V

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties
@1.5.0.RELEASE
+#<init>()V
+#getBootstrapServers()Ljava/util/List;
+#setBootstrapServers(Ljava/util/List;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getProperties()Ljava/util/Map;
+#setProperties(Ljava/util/Map;)V
+#getConsumer()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Consumer;
+#getProducer()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Producer;
+#getListener()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener;
+#getSsl()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Ssl;
+#getTemplate()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Template;
+#buildConsumerProperties()Ljava/util/Map;
+#buildProducerProperties()Ljava/util/Map;
@2.0.0.RELEASE
+#getAdmin()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Admin;
+#getJaas()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Jaas;
+#buildAdminProperties()Ljava/util/Map;
-#setProperties(Ljava/util/Map;)V
@2.1.0.RELEASE
+#getStreams()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Streams;
+#buildStreamsProperties()Ljava/util/Map;
@2.3.0.RELEASE
+#getSecurity()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Security;
@2.7.0
+#getRetry()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Retry;

+###org/springframework/boot/autoconfigure/mongo/MongoClientSettingsBuilderCustomizer
@2.0.0.RELEASE
+#customize(Lcom/mongodb/async/client/MongoClientSettings$Builder;)V
@2.1.0.RELEASE
+#customize(Lcom/mongodb/MongoClientSettings$Builder;)V
-#customize(Lcom/mongodb/async/client/MongoClientSettings$Builder;)V

+###org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
+#close()V
+#reactiveStreamsMongoClient(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/mongodb/reactivestreams/client/MongoClient;
@2.2.0.RELEASE
+#<init>()V
+#reactiveStreamsMongoClient(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/mongodb/reactivestreams/client/MongoClient;
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
-#close()V
-#reactiveStreamsMongoClient(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/mongodb/reactivestreams/client/MongoClient;
@2.4.0
+#reactiveStreamsMongoClient(Lorg/springframework/beans/factory/ObjectProvider;Lcom/mongodb/MongoClientSettings;)Lcom/mongodb/reactivestreams/client/MongoClient;
-#reactiveStreamsMongoClient(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/mongodb/reactivestreams/client/MongoClient;

+###org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#embeddedMongoRuntimeConfig()Lde/flapdoodle/embed/process/config/IRuntimeConfig;
+#embeddedMongoServer(Lde/flapdoodle/embed/mongo/config/IMongodConfig;)Lde/flapdoodle/embed/mongo/MongodExecutable;
+#embeddedMongoConfiguration()Lde/flapdoodle/embed/mongo/config/IMongodConfig;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties;Lorg/springframework/context/ApplicationContext;Lde/flapdoodle/embed/process/config/IRuntimeConfig;)V
-#<init>()V
-#embeddedMongoRuntimeConfig()Lde/flapdoodle/embed/process/config/IRuntimeConfig;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties;)V
+#embeddedMongoServer(Lde/flapdoodle/embed/mongo/config/IMongodConfig;Lde/flapdoodle/embed/process/config/IRuntimeConfig;Lorg/springframework/context/ApplicationContext;)Lde/flapdoodle/embed/mongo/MongodExecutable;
+#embeddedMongoConfiguration(Lorg/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties;)Lde/flapdoodle/embed/mongo/config/IMongodConfig;
-#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties;Lorg/springframework/context/ApplicationContext;Lde/flapdoodle/embed/process/config/IRuntimeConfig;)V
-#embeddedMongoServer(Lde/flapdoodle/embed/mongo/config/IMongodConfig;)Lde/flapdoodle/embed/mongo/MongodExecutable;
-#embeddedMongoConfiguration()Lde/flapdoodle/embed/mongo/config/IMongodConfig;
@2.5.0
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;)V
+#embeddedMongoServer(Lde/flapdoodle/embed/mongo/config/MongodConfig;Lde/flapdoodle/embed/process/config/RuntimeConfig;Lorg/springframework/context/ApplicationContext;)Lde/flapdoodle/embed/mongo/MongodExecutable;
+#embeddedMongoConfiguration(Lorg/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties;)Lde/flapdoodle/embed/mongo/config/MongodConfig;
-#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties;)V
-#embeddedMongoServer(Lde/flapdoodle/embed/mongo/config/IMongodConfig;Lde/flapdoodle/embed/process/config/IRuntimeConfig;Lorg/springframework/context/ApplicationContext;)Lde/flapdoodle/embed/mongo/MongodExecutable;
-#embeddedMongoConfiguration(Lorg/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties;)Lde/flapdoodle/embed/mongo/config/IMongodConfig;
@3.0.0
-###org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration

+###org/springframework/boot/autoconfigure/mongo/ReactiveMongoClientFactory
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Ljava/util/List;)V
+#createMongoClient(Lcom/mongodb/async/client/MongoClientSettings;)Lcom/mongodb/reactivestreams/client/MongoClient;
@2.1.0.RELEASE
+#createMongoClient(Lcom/mongodb/MongoClientSettings;)Lcom/mongodb/reactivestreams/client/MongoClient;
-#createMongoClient(Lcom/mongodb/async/client/MongoClientSettings;)Lcom/mongodb/reactivestreams/client/MongoClient;
@2.3.0.RELEASE
-#createMongoClient(Lcom/mongodb/MongoClientSettings;)Lcom/mongodb/reactivestreams/client/MongoClient;
@2.4.0
*#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Ljava/util/List;)V[deprecated]
+#<init>(Ljava/util/List;)V
@2.5.0
-#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Ljava/util/List;)V[deprecated]

+###org/springframework/boot/autoconfigure/liquibase/DataSourceClosingSpringLiquibase
@2.0.6.RELEASE
+#<init>()V
+#setCloseDataSourceOnceMigrated(Z)V
+#afterPropertiesSet()V
+#destroy()V

+###org/springframework/boot/autoconfigure/h2/H2ConsoleProperties
@1.3.0.RELEASE
+#<init>()V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getEnabled()Z
+#setEnabled(Z)V
@1.4.0.RELEASE
+#getSettings()Lorg/springframework/boot/autoconfigure/h2/H2ConsoleProperties$Settings;

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties
@1.4.0.RELEASE
+#<init>()V
+#getBootstrapHosts()Ljava/util/List;
+#setBootstrapHosts(Ljava/util/List;)V
+#getBucket()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Bucket;
+#getEnv()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Env;
@2.2.0.RELEASE
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
@2.3.0.RELEASE
+#getConnectionString()Ljava/lang/String;
+#setConnectionString(Ljava/lang/String;)V
-#getBootstrapHosts()Ljava/util/List;
-#setBootstrapHosts(Ljava/util/List;)V
-#getBucket()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Bucket;

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Bucket
@1.4.0.RELEASE
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Bucket

+###org/springframework/boot/autoconfigure/task/TaskSchedulingProperties
@2.1.0.RELEASE
+#<init>()V
+#getPool()Lorg/springframework/boot/autoconfigure/task/TaskSchedulingProperties$Pool;
+#getThreadNamePrefix()Ljava/lang/String;
+#setThreadNamePrefix(Ljava/lang/String;)V
@2.2.0.RELEASE
+#getShutdown()Lorg/springframework/boot/autoconfigure/task/TaskSchedulingProperties$Shutdown;

+###org/springframework/boot/autoconfigure/task/TaskExecutionProperties$Shutdown
@2.2.0.RELEASE
+#<init>()V
+#isAwaitTermination()Z
+#setAwaitTermination(Z)V
+#getAwaitTerminationPeriod()Ljava/time/Duration;
+#setAwaitTerminationPeriod(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/cassandra/ClusterFactory
@2.2.0.RELEASE
+#create(Lcom/datastax/driver/core/Cluster$Initializer;)Lcom/datastax/driver/core/Cluster;
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/cassandra/ClusterFactory

+###org/springframework/boot/autoconfigure/jooq/SpringTransactionProvider
@1.5.10.RELEASE
+#<init>(Lorg/springframework/transaction/PlatformTransactionManager;)V
+#begin(Lorg/jooq/TransactionContext;)V
+#commit(Lorg/jooq/TransactionContext;)V
+#rollback(Lorg/jooq/TransactionContext;)V

+###org/springframework/boot/autoconfigure/jooq/JooqExceptionTranslator
@1.5.10.RELEASE
+#<init>()V
+#exception(Lorg/jooq/ExecuteContext;)V

+###org/springframework/boot/autoconfigure/jooq/JooqAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#dataSourceConnectionProvider(Ljavax/sql/DataSource;)Lorg/jooq/impl/DataSourceConnectionProvider;
+#transactionProvider(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/boot/autoconfigure/jooq/SpringTransactionProvider;
+#jooqExceptionTranslatorExecuteListenerProvider()Lorg/jooq/impl/DefaultExecuteListenerProvider;

+###org/springframework/boot/autoconfigure/jooq/JooqAutoConfiguration$DslContextConfiguration
@1.3.0.RELEASE
+#<init>()V
+#dslContext(Lorg/jooq/Configuration;)Lorg/jooq/impl/DefaultDSLContext;
+#jooqConfiguration()Lorg/jooq/impl/DefaultConfiguration;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;[Lorg/jooq/ExecuteListenerProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>()V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;[Lorg/jooq/ExecuteListenerProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;[Lorg/jooq/ExecuteListenerProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.1.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;[Lorg/jooq/ExecuteListenerProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;[Lorg/jooq/ExecuteListenerProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.3.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;[Lorg/jooq/ExecuteListenerProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;[Lorg/jooq/ExecuteListenerProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;[Lorg/jooq/ExecuteListenerProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;[Lorg/jooq/ExecuteListenerProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.2.0.RELEASE
+#<init>()V
+#jooqConfiguration(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/jooq/impl/DefaultConfiguration;
-#<init>(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;[Lorg/jooq/ExecuteListenerProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#jooqConfiguration()Lorg/jooq/impl/DefaultConfiguration;
@2.5.0
+#jooqConfiguration(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/jooq/impl/DefaultConfiguration;
+#jooqProvidersDefaultConfigurationCustomizer(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/jooq/DefaultConfigurationCustomizer;[deprecated]
-#jooqConfiguration(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/jooq/impl/DefaultConfiguration;
@3.0.0
-#jooqProvidersDefaultConfigurationCustomizer(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/jooq/DefaultConfigurationCustomizer;[deprecated]
@3.0.3
+#jooqConfiguration(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/jooq/impl/DefaultConfiguration;
-#jooqConfiguration(Lorg/springframework/boot/autoconfigure/jooq/JooqProperties;Lorg/jooq/ConnectionProvider;Ljavax/sql/DataSource;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/jooq/impl/DefaultConfiguration;

+###org/springframework/boot/autoconfigure/ldap/LdapProperties
@1.5.0.RELEASE
+#<init>()V
+#getUrls()[Ljava/lang/String;
+#setUrls([Ljava/lang/String;)V
+#getBase()Ljava/lang/String;
+#setBase(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getBaseEnvironment()Ljava/util/Map;
+#setBaseEnvironment(Ljava/util/Map;)V
+#determineUrls(Lorg/springframework/core/env/Environment;)[Ljava/lang/String;
@2.0.0.RELEASE
+#getAnonymousReadOnly()Z
+#setAnonymousReadOnly(Z)V
-#setBaseEnvironment(Ljava/util/Map;)V
@2.1.14.RELEASE
+#getAnonymousReadOnly()Ljava/lang/Boolean;
+#setAnonymousReadOnly(Ljava/lang/Boolean;)V
-#getAnonymousReadOnly()Z
-#setAnonymousReadOnly(Z)V
@2.2.0.RELEASE
+#getAnonymousReadOnly()Z
+#setAnonymousReadOnly(Z)V
-#getAnonymousReadOnly()Ljava/lang/Boolean;
-#setAnonymousReadOnly(Ljava/lang/Boolean;)V
@2.2.7.RELEASE
+#getAnonymousReadOnly()Ljava/lang/Boolean;
+#setAnonymousReadOnly(Ljava/lang/Boolean;)V
-#getAnonymousReadOnly()Z
-#setAnonymousReadOnly(Z)V
@2.4.0
+#getTemplate()Lorg/springframework/boot/autoconfigure/ldap/LdapProperties$Template;

+###org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration
@1.5.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties;Lorg/springframework/boot/autoconfigure/ldap/LdapProperties;Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/core/env/Environment;)V
+#ldapContextSource()Lorg/springframework/ldap/core/ContextSource;
+#directoryServer()Lcom/unboundid/ldap/listener/InMemoryDirectoryServer;
+#close()V
@2.1.0.RELEASE
+#ldapContextSource()Lorg/springframework/ldap/core/support/LdapContextSource;
-#ldapContextSource()Lorg/springframework/ldap/core/ContextSource;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties;)V
+#ldapContextSource(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/autoconfigure/ldap/LdapProperties;)Lorg/springframework/ldap/core/support/LdapContextSource;
+#directoryServer(Lorg/springframework/context/ApplicationContext;)Lcom/unboundid/ldap/listener/InMemoryDirectoryServer;
-#<init>(Lorg/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties;Lorg/springframework/boot/autoconfigure/ldap/LdapProperties;Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/core/env/Environment;)V
-#ldapContextSource()Lorg/springframework/ldap/core/support/LdapContextSource;
-#directoryServer()Lcom/unboundid/ldap/listener/InMemoryDirectoryServer;
@2.3.0.RELEASE
-#ldapContextSource(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/autoconfigure/ldap/LdapProperties;)Lorg/springframework/ldap/core/support/LdapContextSource;

+###org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties
@1.5.0.RELEASE
+#<init>()V
+#getPort()I
+#setPort(I)V
+#getCredential()Lorg/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties$Credential;
+#setCredential(Lorg/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties$Credential;)V
+#getBaseDn()Ljava/lang/String;
+#setBaseDn(Ljava/lang/String;)V
+#getLdif()Ljava/lang/String;
+#setLdif(Ljava/lang/String;)V
@1.5.2.RELEASE
+#getValidation()Lorg/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties$Validation;
@2.0.0.RELEASE
+#getBaseDn()Ljava/util/List;
+#setBaseDn(Ljava/util/List;)V
-#getBaseDn()Ljava/lang/String;
-#setBaseDn(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/elasticsearch/jest/HttpClientConfigBuilderCustomizer
@1.5.0.RELEASE
+#customize(Lio/searchbox/client/config/HttpClientConfig$Builder;)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/jest/HttpClientConfigBuilderCustomizer

+###org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientAutoConfiguration
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/elasticsearch/rest/RestClientProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
+#restClient(Lorg/elasticsearch/client/RestClientBuilder;)Lorg/elasticsearch/client/RestClient;
+#restClientBuilder()Lorg/elasticsearch/client/RestClientBuilder;
@2.1.7.RELEASE
+#<init>()V
-#<init>(Lorg/springframework/boot/autoconfigure/elasticsearch/rest/RestClientProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#restClient(Lorg/elasticsearch/client/RestClientBuilder;)Lorg/elasticsearch/client/RestClient;
-#restClientBuilder()Lorg/elasticsearch/client/RestClientBuilder;
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientAutoConfiguration

+###org/springframework/boot/autoconfigure/jackson/Jackson2ObjectMapperBuilderCustomizer
@1.4.0.RELEASE
+#customize(Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;)V

+###org/springframework/boot/autoconfigure/SpringBootApplication
@1.2.0.RELEASE
@1.2.1.RELEASE
+#exclude()[Ljava/lang/Class;
@1.3.0.RELEASE
+#excludeName()[Ljava/lang/String;
+#scanBasePackages()[Ljava/lang/String;
+#scanBasePackageClasses()[Ljava/lang/Class;
@2.2.0.RELEASE
+#proxyBeanMethods()Z
@2.3.0.RELEASE
+#nameGenerator()Ljava/lang/Class;

+###org/springframework/boot/autoconfigure/batch/BatchDataSource
@2.2.0.RELEASE

+###org/springframework/boot/autoconfigure/condition/ConditionMessage
@1.4.1.RELEASE
+#isEmpty()Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#append(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#andCondition(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$Builder;
+#andCondition(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$Builder;
+#empty()Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#of(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#of(Ljava/util/Collection;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#forCondition(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$Builder;
+#forCondition(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$Builder;

+###org/springframework/boot/autoconfigure/condition/OnJndiCondition$JndiLocator
@1.2.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#lookupFirstLocation()Ljava/lang/String;

+###org/springframework/boot/autoconfigure/condition/FilteringSpringBootCondition$ClassNameFilter
@2.1.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/condition/FilteringSpringBootCondition$ClassNameFilter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/FilteringSpringBootCondition$ClassNameFilter;
+#matches(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
+#isPresent(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
@2.2.0.RELEASE
-#matches(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
-#isPresent(Ljava/lang/String;Ljava/lang/ClassLoader;)Z

+###org/springframework/boot/autoconfigure/condition/ConditionalOnCloudPlatform
@1.5.0.RELEASE
+#value()Lorg/springframework/boot/cloud/CloudPlatform;

+###org/springframework/boot/autoconfigure/http/HttpProperties$Encoding
@2.1.0.RELEASE
+#<init>()V
+#getCharset()Ljava/nio/charset/Charset;
+#setCharset(Ljava/nio/charset/Charset;)V
+#isForce()Z
+#setForce(Z)V
+#isForceRequest()Z
+#setForceRequest(Z)V
+#isForceResponse()Z
+#setForceResponse(Z)V
+#getMapping()Ljava/util/Map;
+#setMapping(Ljava/util/Map;)V
+#shouldForce(Lorg/springframework/boot/autoconfigure/http/HttpProperties$Encoding$Type;)Z
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/http/HttpProperties$Encoding

+###org/springframework/boot/autoconfigure/session/MongoSessionConfiguration$SpringBootMongoHttpSessionConfiguration
@1.4.0.RELEASE
+#<init>()V
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;)V
@2.0.0.RELEASE
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Lorg/springframework/boot/autoconfigure/session/MongoSessionProperties;)V
-#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;)V
@2.4.0
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Lorg/springframework/boot/autoconfigure/session/MongoSessionProperties;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
-#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Lorg/springframework/boot/autoconfigure/session/MongoSessionProperties;)V
@3.0.0
-###org/springframework/boot/autoconfigure/session/MongoSessionConfiguration$SpringBootMongoHttpSessionConfiguration

+###org/springframework/boot/autoconfigure/session/RedisSessionProperties
@2.0.0.RELEASE
+#<init>()V
+#getNamespace()Ljava/lang/String;
+#setNamespace(Ljava/lang/String;)V
+#getFlushMode()Lorg/springframework/session/data/redis/RedisFlushMode;
+#setFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V
+#getCleanupCron()Ljava/lang/String;
+#setCleanupCron(Ljava/lang/String;)V
@2.2.0.RELEASE
+#getFlushMode()Lorg/springframework/session/FlushMode;
+#setFlushMode(Lorg/springframework/session/FlushMode;)V
+#getSaveMode()Lorg/springframework/session/SaveMode;
+#setSaveMode(Lorg/springframework/session/SaveMode;)V
+#getConfigureAction()Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties$ConfigureAction;
+#setConfigureAction(Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties$ConfigureAction;)V
-#getFlushMode()Lorg/springframework/session/data/redis/RedisFlushMode;
-#setFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V
@3.0.0
+#getRepositoryType()Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties$RepositoryType;
+#setRepositoryType(Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties$RepositoryType;)V

+###org/springframework/boot/autoconfigure/jersey/JerseyProperties$Servlet
@1.4.0.RELEASE
+#<init>()V
+#getLoadOnStartup()I
+#setLoadOnStartup(I)V

+###org/springframework/boot/autoconfigure/jersey/JerseyProperties$Filter
@1.2.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V

+###org/springframework/boot/autoconfigure/hateoas/HateoasProperties
@1.2.1.RELEASE
+#<init>()V
+#isApplyToPrimaryObjectMapper()Z
+#setApplyToPrimaryObjectMapper(Z)V
@1.3.0.RELEASE
+#getUseHalAsDefaultJsonMediaType()Z
+#setUseHalAsDefaultJsonMediaType(Z)V
-#isApplyToPrimaryObjectMapper()Z
-#setApplyToPrimaryObjectMapper(Z)V

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$EnableWebFluxConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;)V
+#webFluxConversionService()Lorg/springframework/format/support/FormattingConversionService;
+#webFluxValidator()Lorg/springframework/validation/Validator;
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;)V
@2.4.0
+#<init>(Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
+#localeContextResolver()Lorg/springframework/web/server/i18n/LocaleContextResolver;
-#<init>(Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.5.0
+#webSessionManager()Lorg/springframework/web/server/session/WebSessionManager;
@2.6.0
+#<init>(Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
+#webSessionManager(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/web/server/session/WebSessionManager;
-#<init>(Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#webSessionManager()Lorg/springframework/web/server/session/WebSessionManager;

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxRegistrations
@2.1.0.RELEASE
+#getRequestMappingHandlerMapping()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMapping;
+#getRequestMappingHandlerAdapter()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter;

+###org/springframework/boot/autoconfigure/web/format/WebConversionService
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
@2.3.0.RELEASE
*#<init>(Ljava/lang/String;)V[deprecated]
+#<init>(Lorg/springframework/boot/autoconfigure/web/format/DateTimeFormatters;)V
@2.5.0
-#<init>(Ljava/lang/String;)V[deprecated]

+###org/springframework/boot/autoconfigure/web/ResourceProperties$Chain
@1.3.0.RELEASE
+#<init>()V
+#getEnabled()Ljava/lang/Boolean;
+#setEnabled(Z)V
+#isCache()Z
+#setCache(Z)V
+#getStrategy()Lorg/springframework/boot/autoconfigure/web/ResourceProperties$Strategy;
+#isHtmlApplicationCache()Z
+#setHtmlApplicationCache(Z)V
@1.4.0.RELEASE
+#isGzipped()Z
+#setGzipped(Z)V
@2.1.0.RELEASE
+#isCompressed()Z
+#setCompressed(Z)V
-#isGzipped()Z
-#setGzipped(Z)V
@2.4.0
+#getStrategy()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain$Strategy;
-#setEnabled(Z)V
-#setCache(Z)V
-#setCompressed(Z)V
@2.6.0
-###org/springframework/boot/autoconfigure/web/ResourceProperties$Chain

+###org/springframework/boot/autoconfigure/web/ServerProperties$ForwardHeadersStrategy
@2.2.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/web/ServerProperties$ForwardHeadersStrategy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/ServerProperties$ForwardHeadersStrategy;

+###org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration
@2.1.0.RELEASE
+#<init>()V
+#nettyWebServerFactoryCustomizer(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/boot/autoconfigure/web/embedded/NettyWebServerFactoryCustomizer;

+###org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration
@2.0.0.RELEASE
+#<init>()V
+#undertowWebServerFactoryCustomizer(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/boot/autoconfigure/web/embedded/UndertowWebServerFactoryCustomizer;

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/boot/autoconfigure/http/HttpMessageConverters;Lorg/springframework/beans/factory/ObjectProvider;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#configureMessageConverters(Ljava/util/List;)V
+#configureAsyncSupport(Lorg/springframework/web/servlet/config/annotation/AsyncSupportConfigurer;)V
+#configurePathMatch(Lorg/springframework/web/servlet/config/annotation/PathMatchConfigurer;)V
+#configureContentNegotiation(Lorg/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer;)V
+#defaultViewResolver()Lorg/springframework/web/servlet/view/InternalResourceViewResolver;
+#beanNameViewResolver()Lorg/springframework/web/servlet/view/BeanNameViewResolver;
+#viewResolver(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/web/servlet/view/ContentNegotiatingViewResolver;
+#localeResolver()Lorg/springframework/web/servlet/LocaleResolver;
+#getMessageCodesResolver()Lorg/springframework/validation/MessageCodesResolver;
+#addFormatters(Lorg/springframework/format/FormatterRegistry;)V
+#addResourceHandlers(Lorg/springframework/web/servlet/config/annotation/ResourceHandlerRegistry;)V
+#welcomePageHandlerMapping(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping;
+#requestContextFilter()Lorg/springframework/web/filter/RequestContextFilter;
@2.0.4.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/boot/autoconfigure/http/HttpMessageConverters;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.1.7.RELEASE
-#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
-#welcomePageHandlerMapping(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping;
@2.2.13.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#addResourceHandlers(Lorg/springframework/web/servlet/config/annotation/ResourceHandlerRegistry;)V
@2.3.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#addResourceHandlers(Lorg/springframework/web/servlet/config/annotation/ResourceHandlerRegistry;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.3.1.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.3.3.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.3.8.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#addResourceHandlers(Lorg/springframework/web/servlet/config/annotation/ResourceHandlerRegistry;)V
@2.3.12.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#addResourceHandlers(Lorg/springframework/web/servlet/config/annotation/ResourceHandlerRegistry;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.4.0
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#localeResolver()Lorg/springframework/web/servlet/LocaleResolver;
@2.4.2
+#<init>(Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#addResourceHandlers(Lorg/springframework/web/servlet/config/annotation/ResourceHandlerRegistry;)V
@2.4.7
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#addResourceHandlers(Lorg/springframework/web/servlet/config/annotation/ResourceHandlerRegistry;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.6.0
+#<init>(Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@3.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
+#requestMappingHandlerAdapter()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter;
+#requestMappingHandlerMapping()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;
+#mvcConversionService()Lorg/springframework/format/support/FormattingConversionService;
+#mvcValidator()Lorg/springframework/validation/Validator;
+#mvcContentNegotiationManager()Lorg/springframework/web/accept/ContentNegotiationManager;
@2.1.7.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
+#welcomePageHandlerMapping(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
@2.2.0.RELEASE
+#requestMappingHandlerAdapter(Lorg/springframework/web/accept/ContentNegotiationManager;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/validation/Validator;)Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter;
+#requestMappingHandlerMapping(Lorg/springframework/web/accept/ContentNegotiationManager;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/web/servlet/resource/ResourceUrlProvider;)Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;
+#welcomePageHandlerMapping(Lorg/springframework/context/ApplicationContext;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/web/servlet/resource/ResourceUrlProvider;)Lorg/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping;
-#requestMappingHandlerAdapter()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter;
-#requestMappingHandlerMapping()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;
-#welcomePageHandlerMapping(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping;
@2.2.13.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
+#resourceHandlerMapping(Lorg/springframework/web/util/UrlPathHelper;Lorg/springframework/util/PathMatcher;Lorg/springframework/web/accept/ContentNegotiationManager;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/web/servlet/resource/ResourceUrlProvider;)Lorg/springframework/web/servlet/HandlerMapping;
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
@2.3.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
-#resourceHandlerMapping(Lorg/springframework/web/util/UrlPathHelper;Lorg/springframework/util/PathMatcher;Lorg/springframework/web/accept/ContentNegotiationManager;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/web/servlet/resource/ResourceUrlProvider;)Lorg/springframework/web/servlet/HandlerMapping;
@2.3.8.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
+#resourceHandlerMapping(Lorg/springframework/web/util/UrlPathHelper;Lorg/springframework/util/PathMatcher;Lorg/springframework/web/accept/ContentNegotiationManager;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/web/servlet/resource/ResourceUrlProvider;)Lorg/springframework/web/servlet/HandlerMapping;
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
@2.3.12.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
@2.4.0
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
+#localeResolver()Lorg/springframework/web/servlet/LocaleResolver;
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
-#resourceHandlerMapping(Lorg/springframework/web/util/UrlPathHelper;Lorg/springframework/util/PathMatcher;Lorg/springframework/web/accept/ContentNegotiationManager;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/web/servlet/resource/ResourceUrlProvider;)Lorg/springframework/web/servlet/HandlerMapping;
@2.4.2
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
+#themeResolver()Lorg/springframework/web/servlet/ThemeResolver;
+#flashMapManager()Lorg/springframework/web/servlet/FlashMapManager;
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
@2.6.0
+#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
@2.7.0
-#requestMappingHandlerMapping(Lorg/springframework/web/accept/ContentNegotiationManager;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/web/servlet/resource/ResourceUrlProvider;)Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;
@3.0.0
*#themeResolver()Lorg/springframework/web/servlet/ThemeResolver;[deprecated]

+###org/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath
@2.0.7.RELEASE
+#getPath()Ljava/lang/String;
+#getRelativePath(Ljava/lang/String;)Ljava/lang/String;
+#getPrefix()Ljava/lang/String;
+#getUrlMapping()Ljava/lang/String;
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath

+###org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
+#dispatcherServletRegistration(Lorg/springframework/web/servlet/DispatcherServlet;)Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
@2.0.4.RELEASE
+#dispatcherServletRegistration(Lorg/springframework/web/servlet/DispatcherServlet;)Lorg/springframework/boot/autoconfigure/web/servlet/DispatcherServletRegistrationBean;
-#dispatcherServletRegistration(Lorg/springframework/web/servlet/DispatcherServlet;)Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.2.0.RELEASE
+#dispatcherServletRegistration(Lorg/springframework/web/servlet/DispatcherServlet;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/web/servlet/DispatcherServletRegistrationBean;
-#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#dispatcherServletRegistration(Lorg/springframework/web/servlet/DispatcherServlet;)Lorg/springframework/boot/autoconfigure/web/servlet/DispatcherServletRegistrationBean;

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$View
@2.0.0.RELEASE
+#<init>()V
+#getPrefix()Ljava/lang/String;
+#setPrefix(Ljava/lang/String;)V
+#getSuffix()Ljava/lang/String;
+#setSuffix(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/AutoConfigurationImportSelector
@1.5.0.RELEASE
+#<init>()V
+#selectImports(Lorg/springframework/core/type/AnnotationMetadata;)[Ljava/lang/String;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#getOrder()I
@2.0.1.RELEASE
+#getImportGroup()Ljava/lang/Class;
@2.3.0.RELEASE
+#getExclusionFilter()Ljava/util/function/Predicate;

+###org/springframework/boot/autoconfigure/cache/CacheProperties$EhCache
@1.3.0.RELEASE
+#<init>()V
+#getConfig()Lorg/springframework/core/io/Resource;
+#setConfig(Lorg/springframework/core/io/Resource;)V
@3.0.0
-###org/springframework/boot/autoconfigure/cache/CacheProperties$EhCache

+###org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#cacheAutoConfigurationValidatorPostProcessor()Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidatorPostProcessor;
+#cacheAutoConfigurationValidator()Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator;
@1.5.0.RELEASE
+#cacheManagerCustomizers(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;
@1.5.13.RELEASE
+#cacheAutoConfigurationValidator(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator;
-#cacheAutoConfigurationValidatorPostProcessor()Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidatorPostProcessor;
-#cacheAutoConfigurationValidator()Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator;
@2.0.0.RELEASE
+#cacheAutoConfigurationValidatorPostProcessor()Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidatorPostProcessor;
+#cacheAutoConfigurationValidator()Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator;
-#cacheAutoConfigurationValidator(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator;
@2.0.2.RELEASE
+#cacheAutoConfigurationValidator(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator;
-#cacheAutoConfigurationValidatorPostProcessor()Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidatorPostProcessor;
-#cacheAutoConfigurationValidator()Lorg/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator;

+###org/springframework/boot/autoconfigure/cache/CacheProperties$Caffeine
@1.4.0.RELEASE
+#<init>()V
+#getSpec()Ljava/lang/String;
+#setSpec(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/cache/CacheProperties$Redis
@2.0.0.RELEASE
+#<init>()V
+#getTimeToLive()Ljava/time/Duration;
+#setTimeToLive(Ljava/time/Duration;)V
+#isCacheNullValues()Z
+#setCacheNullValues(Z)V
+#getKeyPrefix()Ljava/lang/String;
+#setKeyPrefix(Ljava/lang/String;)V
+#isUseKeyPrefix()Z
+#setUseKeyPrefix(Z)V
@2.4.0
+#isEnableStatistics()Z
+#setEnableStatistics(Z)V

+###org/springframework/boot/autoconfigure/cache/CacheProperties$Couchbase
@1.4.0.RELEASE
+#<init>()V
+#getExpiration()I
+#setExpiration(I)V
@1.5.0.RELEASE
+#getExpirationSeconds()I
@2.0.0.RELEASE
+#getExpiration()Ljava/time/Duration;
+#setExpiration(Ljava/time/Duration;)V
-#getExpiration()I
-#getExpirationSeconds()I
-#setExpiration(I)V

+###org/springframework/boot/autoconfigure/jms/JmsProperties$Cache
@2.1.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#isConsumers()Z
+#setConsumers(Z)V
+#isProducers()Z
+#setProducers(Z)V
+#getSessionCacheSize()I
+#setSessionCacheSize(I)V

+###org/springframework/boot/autoconfigure/template/AbstractViewResolverProperties
@1.2.0.RELEASE
+#<init>()V
+#setEnabled(Z)V
+#isEnabled()Z
+#setCheckTemplateLocation(Z)V
+#isCheckTemplateLocation()Z
+#getViewNames()[Ljava/lang/String;
+#setViewNames([Ljava/lang/String;)V
+#isCache()Z
+#setCache(Z)V
+#getContentType()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#getCharSet()Ljava/lang/String;[deprecated]
+#setCharSet(Ljava/lang/String;)V[deprecated]
+#getCharset()Ljava/lang/String;
+#setCharset(Ljava/lang/String;)V
@1.3.0.RELEASE
+#getContentType()Lorg/springframework/util/MimeType;
+#setContentType(Lorg/springframework/util/MimeType;)V
+#getCharset()Ljava/nio/charset/Charset;
+#getCharsetName()Ljava/lang/String;
+#setCharset(Ljava/nio/charset/Charset;)V
-#getContentType()Ljava/lang/String;
-#setContentType(Ljava/lang/String;)V
-#getCharSet()Ljava/lang/String;[deprecated]
-#setCharSet(Ljava/lang/String;)V[deprecated]
-#getCharset()Ljava/lang/String;
-#setCharset(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/template/TemplateLocation
@1.2.1.RELEASE
+#<init>(Ljava/lang/String;)V
+#exists(Lorg/springframework/core/io/support/ResourcePatternResolver;)Z
+#toString()Ljava/lang/String;

+###org/springframework/boot/autoconfigure/template/PathBasedTemplateAvailabilityProvider$TemplateAvailabilityProperties
@1.4.6.RELEASE
+#getPrefix()Ljava/lang/String;
+#setPrefix(Ljava/lang/String;)V
+#getSuffix()Ljava/lang/String;
+#setSuffix(Ljava/lang/String;)V
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/template/PathBasedTemplateAvailabilityProvider$TemplateAvailabilityProperties

+###org/springframework/boot/autoconfigure/template/TemplateAvailabilityProviders
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
+#<init>(Ljava/lang/ClassLoader;)V
+#getProviders()Ljava/util/List;
+#getProvider(Ljava/lang/String;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProvider;
+#getProvider(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/boot/autoconfigure/template/TemplateAvailabilityProvider;

+###org/springframework/boot/autoconfigure/webservices/WebServicesAutoConfiguration$WsConfiguration
@1.4.0.RELEASE

+###org/springframework/boot/autoconfigure/integration/IntegrationProperties$Jdbc
@2.0.0.RELEASE
+#<init>()V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
+#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V
@2.5.8
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V
@2.6.0
+#getInitializeSchema()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
+#setInitializeSchema(Lorg/springframework/boot/sql/init/DatabaseInitializationMode;)V
-#getPlatform()Ljava/lang/String;
-#setPlatform(Ljava/lang/String;)V
-#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
-#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V
@2.6.2
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Registration$Signing$Credential
@2.2.0.RELEASE
+#<init>()V
+#getPrivateKeyLocation()Lorg/springframework/core/io/Resource;
+#setPrivateKeyLocation(Lorg/springframework/core/io/Resource;)V
+#getCertificateLocation()Lorg/springframework/core/io/Resource;
+#setCertificateLocation(Lorg/springframework/core/io/Resource;)V

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider$Verification
@2.2.0.RELEASE
+#<init>()V
+#getCredentials()Ljava/util/List;
@2.4.0
+#setCredentials(Ljava/util/List;)V
@2.7.0
-###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider$Verification

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider$Verification$Credential
@2.2.0.RELEASE
+#<init>()V
+#getCertificateLocation()Lorg/springframework/core/io/Resource;
+#setCertificateLocation(Lorg/springframework/core/io/Resource;)V
@2.7.0
-###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider$Verification$Credential

+###org/springframework/boot/autoconfigure/security/reactive/StaticResourceRequest$StaticResourceServerWebExchange
@2.0.0.RELEASE
+#excluding(Lorg/springframework/boot/autoconfigure/security/StaticResourceLocation;[Lorg/springframework/boot/autoconfigure/security/StaticResourceLocation;)Lorg/springframework/boot/autoconfigure/security/reactive/StaticResourceRequest$StaticResourceServerWebExchange;
+#excluding(Ljava/util/Set;)Lorg/springframework/boot/autoconfigure/security/reactive/StaticResourceRequest$StaticResourceServerWebExchange;
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/boot/autoconfigure/security/reactive/StaticResourceRequest
@2.0.0.RELEASE
+#atCommonLocations()Lorg/springframework/boot/autoconfigure/security/reactive/StaticResourceRequest$StaticResourceServerWebExchange;
+#at(Lorg/springframework/boot/autoconfigure/security/StaticResourceLocation;[Lorg/springframework/boot/autoconfigure/security/StaticResourceLocation;)Lorg/springframework/boot/autoconfigure/security/reactive/StaticResourceRequest$StaticResourceServerWebExchange;
+#at(Ljava/util/Set;)Lorg/springframework/boot/autoconfigure/security/reactive/StaticResourceRequest$StaticResourceServerWebExchange;

+###org/springframework/boot/autoconfigure/security/StaticResourceLocation
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/security/StaticResourceLocation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/security/StaticResourceLocation;
+#getPatterns()Ljava/util/stream/Stream;

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties$Registration
@2.0.0.RELEASE
+#<init>()V
+#getProvider()Ljava/lang/String;
+#setProvider(Ljava/lang/String;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getClientSecret()Ljava/lang/String;
+#setClientSecret(Ljava/lang/String;)V
+#getClientAuthenticationMethod()Ljava/lang/String;
+#setClientAuthenticationMethod(Ljava/lang/String;)V
+#getAuthorizationGrantType()Ljava/lang/String;
+#setAuthorizationGrantType(Ljava/lang/String;)V
+#getRedirectUriTemplate()Ljava/lang/String;
+#setRedirectUriTemplate(Ljava/lang/String;)V
+#getScope()Ljava/util/Set;
+#setScope(Ljava/util/Set;)V
+#getClientName()Ljava/lang/String;
+#setClientName(Ljava/lang/String;)V
@2.1.0.RELEASE
+#getRedirectUri()Ljava/lang/String;
+#setRedirectUri(Ljava/lang/String;)V
*#getRedirectUriTemplate()Ljava/lang/String;[deprecated]
*#setRedirectUriTemplate(Ljava/lang/String;)V[deprecated]
@2.2.0.RELEASE
-#getRedirectUriTemplate()Ljava/lang/String;[deprecated]
-#setRedirectUriTemplate(Ljava/lang/String;)V[deprecated]

+###org/springframework/boot/autoconfigure/data/RepositoryType
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/data/RepositoryType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/data/RepositoryType;

+###org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfiguration
@1.4.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/cassandra/CassandraReactiveDataAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#reactiveCassandraSession(Lcom/datastax/driver/core/Session;)Lorg/springframework/data/cassandra/ReactiveSession;
+#reactiveCassandraSessionFactory(Lorg/springframework/data/cassandra/ReactiveSession;)Lorg/springframework/data/cassandra/ReactiveSessionFactory;
+#reactiveCassandraTemplate(Lorg/springframework/data/cassandra/ReactiveSession;Lorg/springframework/data/cassandra/core/convert/CassandraConverter;)Lorg/springframework/data/cassandra/core/ReactiveCassandraTemplate;
@2.3.0.RELEASE
+#reactiveCassandraSession(Lcom/datastax/oss/driver/api/core/CqlSession;)Lorg/springframework/data/cassandra/ReactiveSession;
-#reactiveCassandraSession(Lcom/datastax/driver/core/Session;)Lorg/springframework/data/cassandra/ReactiveSession;

+###org/springframework/boot/autoconfigure/data/cassandra/CassandraRepositoriesAutoConfiguration
@1.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveElasticsearchRepositoriesAutoConfiguration
@2.2.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/web/SpringDataWebAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/data/web/SpringDataWebProperties;)V
+#pageableCustomizer()Lorg/springframework/data/web/config/PageableHandlerMethodArgumentResolverCustomizer;
+#sortCustomizer()Lorg/springframework/data/web/config/SortHandlerMethodArgumentResolverCustomizer;
-#<init>()V

+###org/springframework/boot/autoconfigure/jdbc/JdbcProperties
@2.0.0.RELEASE
+#<init>()V
+#getTemplate()Lorg/springframework/boot/autoconfigure/jdbc/JdbcProperties$Template;

+###org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa
@1.2.0.RELEASE
+#<init>()V
+#getDataSourceClassName()Ljava/lang/String;
+#setDataSourceClassName(Ljava/lang/String;)V
+#getProperties()Ljava/util/Map;
+#setProperties(Ljava/util/Map;)V

+###org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcOperationsDependsOnPostProcessor
@2.1.4.RELEASE
+#<init>([Ljava/lang/String;)V
@2.1.8.RELEASE
+#<init>([Ljava/lang/Class;)V
@2.7.0
-###org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcOperationsDependsOnPostProcessor

+###org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#transactionTemplate()Lorg/springframework/transaction/support/TransactionTemplate;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/transaction/PlatformTransactionManager;)V
-#<init>()V
@1.5.0.RELEASE
+#<init>()V
+#platformTransactionManagerCustomizers(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizers;
-#<init>(Lorg/springframework/transaction/PlatformTransactionManager;)V
-#transactionTemplate()Lorg/springframework/transaction/support/TransactionTemplate;
@2.2.0.RELEASE
+#transactionalOperator(Lorg/springframework/transaction/ReactiveTransactionManager;)Lorg/springframework/transaction/reactive/TransactionalOperator;

+###org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration
@1.5.3.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/websocket/servlet/WebSocketMessagingAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/websocket/servlet/TomcatWebSocketServletWebServerCustomizer
@2.0.0.RELEASE
+#<init>()V
+#customize(Lorg/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/AutoConfigurationPackage
@1.3.0.RELEASE
@2.3.0.RELEASE
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;

+###org/springframework/boot/autoconfigure/mail/MailProperties
@1.2.0.RELEASE
+#<init>()V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPort()Ljava/lang/Integer;
+#setPort(Ljava/lang/Integer;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getDefaultEncoding()Ljava/lang/String;
+#setDefaultEncoding(Ljava/lang/String;)V
+#getProperties()Ljava/util/Map;
@1.3.0.RELEASE
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
+#getDefaultEncoding()Ljava/nio/charset/Charset;
+#setDefaultEncoding(Ljava/nio/charset/Charset;)V
+#setJndiName(Ljava/lang/String;)V
+#getJndiName()Ljava/lang/String;
+#isTestConnection()Z
+#setTestConnection(Z)V
-#getDefaultEncoding()Ljava/lang/String;
-#setDefaultEncoding(Ljava/lang/String;)V
@2.1.0.RELEASE
-#isTestConnection()Z
-#setTestConnection(Z)V

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener
@1.5.0.RELEASE
+#<init>()V
+#getAckMode()Lorg/springframework/kafka/listener/AbstractMessageListenerContainer$AckMode;
+#setAckMode(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer$AckMode;)V
+#getConcurrency()Ljava/lang/Integer;
+#setConcurrency(Ljava/lang/Integer;)V
+#getPollTimeout()Ljava/lang/Long;
+#setPollTimeout(Ljava/lang/Long;)V
+#getAckCount()Ljava/lang/Integer;
+#setAckCount(Ljava/lang/Integer;)V
+#getAckTime()Ljava/lang/Long;
+#setAckTime(Ljava/lang/Long;)V
@2.0.0.RELEASE
+#getType()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type;
+#setType(Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getPollTimeout()Ljava/time/Duration;
+#setPollTimeout(Ljava/time/Duration;)V
+#getNoPollThreshold()Ljava/lang/Float;
+#setNoPollThreshold(Ljava/lang/Float;)V
+#getAckTime()Ljava/time/Duration;
+#setAckTime(Ljava/time/Duration;)V
+#getIdleEventInterval()Ljava/time/Duration;
+#setIdleEventInterval(Ljava/time/Duration;)V
+#getMonitorInterval()Ljava/time/Duration;
+#setMonitorInterval(Ljava/time/Duration;)V
+#getLogContainerConfig()Ljava/lang/Boolean;
+#setLogContainerConfig(Ljava/lang/Boolean;)V
-#getPollTimeout()Ljava/lang/Long;
-#setPollTimeout(Ljava/lang/Long;)V
-#getAckTime()Ljava/lang/Long;
-#setAckTime(Ljava/lang/Long;)V
@2.1.0.RELEASE
+#getAckMode()Lorg/springframework/kafka/listener/ContainerProperties$AckMode;
+#setAckMode(Lorg/springframework/kafka/listener/ContainerProperties$AckMode;)V
-#getAckMode()Lorg/springframework/kafka/listener/AbstractMessageListenerContainer$AckMode;
-#setAckMode(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer$AckMode;)V
@2.2.0.RELEASE
+#isMissingTopicsFatal()Z
+#setMissingTopicsFatal(Z)V
@2.4.0
+#getIdleBetweenPolls()Ljava/time/Duration;
+#setIdleBetweenPolls(Ljava/time/Duration;)V
@2.5.0
+#isOnlyLogRecordMetadata()Z
+#setOnlyLogRecordMetadata(Z)V
@2.6.5
*#isOnlyLogRecordMetadata()Z[deprecated]
*#setOnlyLogRecordMetadata(Z)V[deprecated]
@2.7.0
+#getIdlePartitionEventInterval()Ljava/time/Duration;
+#setIdlePartitionEventInterval(Ljava/time/Duration;)V
+#isImmediateStop()Z
+#setImmediateStop(Z)V
@3.0.0
+#getAsyncAcks()Ljava/lang/Boolean;
+#setAsyncAcks(Ljava/lang/Boolean;)V
-#isOnlyLogRecordMetadata()Z[deprecated]
-#setOnlyLogRecordMetadata(Z)V[deprecated]

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Jaas
@2.0.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getLoginModule()Ljava/lang/String;
+#setLoginModule(Ljava/lang/String;)V
+#getControlFlag()Lorg/springframework/kafka/security/jaas/KafkaJaasLoginModuleInitializer$ControlFlag;
+#setControlFlag(Lorg/springframework/kafka/security/jaas/KafkaJaasLoginModuleInitializer$ControlFlag;)V
+#getOptions()Ljava/util/Map;
+#setOptions(Ljava/util/Map;)V

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Template
@1.5.0.RELEASE
+#<init>()V
+#getDefaultTopic()Ljava/lang/String;
+#setDefaultTopic(Ljava/lang/String;)V
@2.7.0
+#getTransactionIdPrefix()Ljava/lang/String;
+#setTransactionIdPrefix(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties$Storage
@1.4.0.RELEASE
+#<init>()V
+#getOplogSize()Ljava/lang/Integer;
+#setOplogSize(Ljava/lang/Integer;)V
+#getReplSetName()Ljava/lang/String;
+#setReplSetName(Ljava/lang/String;)V
+#getDatabaseDir()Ljava/lang/String;
+#setDatabaseDir(Ljava/lang/String;)V
@2.1.0.RELEASE
+#getOplogSize()Lorg/springframework/util/unit/DataSize;
+#setOplogSize(Lorg/springframework/util/unit/DataSize;)V
-#getOplogSize()Ljava/lang/Integer;
-#setOplogSize(Ljava/lang/Integer;)V
@3.0.0
-###org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties$Storage

+###org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor
@1.3.0.RELEASE
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@2.1.10.RELEASE
+#getOrder()I
@2.2.0.RELEASE
-#getOrder()I
@2.2.1.RELEASE
+#getOrder()I

+###org/springframework/boot/autoconfigure/h2/H2ConsoleAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#h2Console()Lorg/springframework/boot/context/embedded/ServletRegistrationBean;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/h2/H2ConsoleProperties;)V
+#h2Console()Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
-#<init>()V
-#h2Console()Lorg/springframework/boot/context/embedded/ServletRegistrationBean;
@2.2.0.RELEASE
+#<init>()V
+#h2Console(Lorg/springframework/boot/autoconfigure/h2/H2ConsoleProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
-#<init>(Lorg/springframework/boot/autoconfigure/h2/H2ConsoleProperties;)V
-#h2Console()Lorg/springframework/boot/web/servlet/ServletRegistrationBean;

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties$Servlet
@2.0.0.RELEASE
+#<init>()V
+#getContentType()Lorg/springframework/util/MimeType;
+#setContentType(Lorg/springframework/util/MimeType;)V
@2.1.0.RELEASE
+#isProducePartialOutputWhileProcessing()Z
+#setProducePartialOutputWhileProcessing(Z)V

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration
@1.4.0.RELEASE
+#<init>()V
@2.3.0.RELEASE
+#couchbaseClusterEnvironment(Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/couchbase/client/java/env/ClusterEnvironment;
+#couchbaseCluster(Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties;Lcom/couchbase/client/java/env/ClusterEnvironment;)Lcom/couchbase/client/java/Cluster;

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseConfiguration
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties;)V
+#couchbaseEnvironment()Lcom/couchbase/client/java/env/DefaultCouchbaseEnvironment;
+#couchbaseCluster()Lcom/couchbase/client/java/Cluster;
+#couchbaseClusterInfo()Lcom/couchbase/client/java/cluster/ClusterInfo;
+#couchbaseClient()Lcom/couchbase/client/java/Bucket;
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/couchbase/CouchbaseConfiguration

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Endpoints
@1.4.0.RELEASE
+#<init>()V
+#getKeyValue()I
+#setKeyValue(I)V
+#getQuery()I
+#setQuery(I)V
+#getView()I
+#setView(I)V
@2.0.2.RELEASE
*#setKeyValue(I)V[deprecated]
+#getQuery()Ljava/lang/Integer;[deprecated]
+#setQuery(Ljava/lang/Integer;)V[deprecated]
+#getQueryservice()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Endpoints$CouchbaseService;
+#getView()Ljava/lang/Integer;[deprecated]
+#setView(Ljava/lang/Integer;)V[deprecated]
+#getViewservice()Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Endpoints$CouchbaseService;
-#getQuery()I
-#setQuery(I)V
-#getView()I
-#setView(I)V
@2.1.0.RELEASE
-#getQuery()Ljava/lang/Integer;[deprecated]
-#setQuery(Ljava/lang/Integer;)V[deprecated]
-#getView()Ljava/lang/Integer;[deprecated]
-#setView(Ljava/lang/Integer;)V[deprecated]
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Endpoints

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Timeouts
@1.4.0.RELEASE
+#<init>()V
+#getConnect()J
+#setConnect(J)V
+#getKeyValue()J
+#setKeyValue(J)V
+#getQuery()J
+#setQuery(J)V
+#getSocketConnect()I
+#setSocketConnect(I)V
+#getView()J
+#setView(J)V
@2.0.0.RELEASE
+#getConnect()Ljava/time/Duration;
+#setConnect(Ljava/time/Duration;)V
+#getKeyValue()Ljava/time/Duration;
+#setKeyValue(Ljava/time/Duration;)V
+#getQuery()Ljava/time/Duration;
+#setQuery(Ljava/time/Duration;)V
+#getSocketConnect()Ljava/time/Duration;
+#setSocketConnect(Ljava/time/Duration;)V
+#getView()Ljava/time/Duration;
+#setView(Ljava/time/Duration;)V
-#getConnect()J
-#setConnect(J)V
-#getKeyValue()J
-#setKeyValue(J)V
-#getQuery()J
-#setQuery(J)V
-#getSocketConnect()I
-#setSocketConnect(I)V
-#getView()J
-#setView(J)V
@2.3.0.RELEASE
+#getDisconnect()Ljava/time/Duration;
+#setDisconnect(Ljava/time/Duration;)V
+#getKeyValueDurable()Ljava/time/Duration;
+#setKeyValueDurable(Ljava/time/Duration;)V
+#getSearch()Ljava/time/Duration;
+#setSearch(Ljava/time/Duration;)V
+#getAnalytics()Ljava/time/Duration;
+#setAnalytics(Ljava/time/Duration;)V
+#getManagement()Ljava/time/Duration;
+#setManagement(Ljava/time/Duration;)V
-#getSocketConnect()Ljava/time/Duration;
-#setSocketConnect(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration$ResourceBundleCondition
@1.5.0.RELEASE
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;

+###org/springframework/boot/autoconfigure/hazelcast/HazelcastConfigResourceCondition
@1.3.0.RELEASE

+###org/springframework/boot/autoconfigure/task/TaskExecutionProperties$Pool
@2.1.0.RELEASE
+#<init>()V
+#getQueueCapacity()I
+#setQueueCapacity(I)V
+#getCoreSize()I
+#setCoreSize(I)V
+#getMaxSize()I
+#setMaxSize(I)V
+#isAllowCoreThreadTimeout()Z
+#setAllowCoreThreadTimeout(Z)V
+#getKeepAlive()Ljava/time/Duration;
+#setKeepAlive(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/cassandra/CassandraProperties$Pool
@2.0.0.RELEASE
+#<init>()V
+#getIdleTimeout()Ljava/time/Duration;
+#setIdleTimeout(Ljava/time/Duration;)V
+#getPoolTimeout()Ljava/time/Duration;
+#setPoolTimeout(Ljava/time/Duration;)V
+#getHeartbeatInterval()Ljava/time/Duration;
+#setHeartbeatInterval(Ljava/time/Duration;)V
+#getMaxQueueSize()I
+#setMaxQueueSize(I)V
@2.3.0.RELEASE
-#getPoolTimeout()Ljava/time/Duration;
-#setPoolTimeout(Ljava/time/Duration;)V
-#getMaxQueueSize()I
-#setMaxQueueSize(I)V

+###org/springframework/boot/autoconfigure/domain/EntityScanner
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
+#scan([Ljava/lang/Class;)Ljava/util/Set;

+###org/springframework/boot/autoconfigure/AutoConfigurationImportEvent
@1.5.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/util/List;Ljava/util/Set;)V
+#getCandidateConfigurations()Ljava/util/List;
+#getExclusions()Ljava/util/Set;

+###org/springframework/boot/autoconfigure/jooq/JooqProperties
@1.3.0.RELEASE
+#<init>()V
+#getSqlDialect()Lorg/jooq/SQLDialect;
+#setSqlDialect(Lorg/jooq/SQLDialect;)V
@2.0.0.RELEASE
+#determineSqlDialect(Ljavax/sql/DataSource;)Lorg/jooq/SQLDialect;

+###org/springframework/boot/autoconfigure/flyway/FlywayConfigurationCustomizer
@2.1.0.RELEASE
+#customize(Lorg/flywaydb/core/api/configuration/FluentConfiguration;)V

+###org/springframework/boot/autoconfigure/batch/BatchDataSourceInitializer
@2.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/batch/BatchProperties;)V
@3.0.0
-###org/springframework/boot/autoconfigure/batch/BatchDataSourceInitializer

+###org/springframework/boot/autoconfigure/condition/ConditionalOnJndi
@1.2.0.RELEASE
+#value()[Ljava/lang/String;

+###org/springframework/boot/autoconfigure/condition/ConditionMessage$ItemsBuilder
@1.4.1.RELEASE
+#atAll()Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#items([Ljava/lang/Object;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#items(Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$Style;[Ljava/lang/Object;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#items(Ljava/util/Collection;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#items(Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$Style;Ljava/util/Collection;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;

+###org/springframework/boot/autoconfigure/condition/AnyNestedCondition
@1.2.0.RELEASE
+#<init>(Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;)V
+#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
@1.5.22.RELEASE
-#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
-#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
@2.0.0.RELEASE
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
@2.0.1.RELEASE
-#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
-#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;

+###org/springframework/boot/autoconfigure/condition/ConditionMessage$Builder
@1.4.1.RELEASE
+#foundExactly(Ljava/lang/Object;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#found(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$ItemsBuilder;
+#found(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$ItemsBuilder;
+#didNotFind(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$ItemsBuilder;
+#didNotFind(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$ItemsBuilder;
+#resultedIn(Ljava/lang/Object;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#available(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#notAvailable(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;
+#because(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage;

+###org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/session/JdbcSessionProperties
@2.0.0.RELEASE
+#<init>()V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#getTableName()Ljava/lang/String;
+#setTableName(Ljava/lang/String;)V
+#getCleanupCron()Ljava/lang/String;
+#setCleanupCron(Ljava/lang/String;)V
+#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
+#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V
@2.2.0.RELEASE
+#getFlushMode()Lorg/springframework/session/FlushMode;
+#setFlushMode(Lorg/springframework/session/FlushMode;)V
+#getSaveMode()Lorg/springframework/session/SaveMode;
+#setSaveMode(Lorg/springframework/session/SaveMode;)V
@2.5.8
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V
@2.6.0
+#getInitializeSchema()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
+#setInitializeSchema(Lorg/springframework/boot/sql/init/DatabaseInitializationMode;)V
-#getPlatform()Ljava/lang/String;
-#setPlatform(Ljava/lang/String;)V
-#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
-#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V
@2.6.2
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/session/HazelcastSessionProperties
@2.0.0.RELEASE
+#<init>()V
+#getMapName()Ljava/lang/String;
+#setMapName(Ljava/lang/String;)V
+#getFlushMode()Lorg/springframework/session/hazelcast/HazelcastFlushMode;
+#setFlushMode(Lorg/springframework/session/hazelcast/HazelcastFlushMode;)V
@2.2.0.RELEASE
+#getFlushMode()Lorg/springframework/session/FlushMode;
+#setFlushMode(Lorg/springframework/session/FlushMode;)V
+#getSaveMode()Lorg/springframework/session/SaveMode;
+#setSaveMode(Lorg/springframework/session/SaveMode;)V
-#getFlushMode()Lorg/springframework/session/hazelcast/HazelcastFlushMode;
-#setFlushMode(Lorg/springframework/session/hazelcast/HazelcastFlushMode;)V

+###org/springframework/boot/autoconfigure/session/NonUniqueSessionRepositoryException
@2.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#getAvailableCandidates()Ljava/util/List;
@3.0.0
-###org/springframework/boot/autoconfigure/session/NonUniqueSessionRepositoryException

+###org/springframework/boot/autoconfigure/session/RedisSessionConfiguration$SpringBootRedisHttpSessionConfiguration
@1.4.0.RELEASE
+#<init>()V
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;)V
+#validate()V
@1.5.0.RELEASE
-#validate()V
@2.0.0.RELEASE
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties;)V
-#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;)V
@2.4.0
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
-#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties;)V
@3.0.0
-###org/springframework/boot/autoconfigure/session/RedisSessionConfiguration$SpringBootRedisHttpSessionConfiguration

+###org/springframework/boot/autoconfigure/session/SessionAutoConfiguration
@1.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/session/RedisSessionProperties$ConfigureAction
@2.2.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties$ConfigureAction;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties$ConfigureAction;

+###org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/context/ApplicationContext;)V
+#setMessageWriters(Ljava/util/List;)V
+#setMessageReaders(Ljava/util/List;)V
+#setViewResolvers(Ljava/util/List;)V
+#afterPropertiesSet()V
+#handle(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
@2.4.0
*#<init>(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/context/ApplicationContext;)V[deprecated]
+#<init>(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources;Lorg/springframework/context/ApplicationContext;)V
@2.6.0
-#<init>(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/context/ApplicationContext;)V[deprecated]

+###org/springframework/boot/autoconfigure/web/reactive/ResourceHandlerRegistrationCustomizer
@2.1.0.RELEASE
+#customize(Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;)V

+###org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#reactiveWebServerFactoryCustomizer(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer;
@2.2.0.RELEASE
+#tomcatReactiveWebServerFactoryCustomizer(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/boot/autoconfigure/web/reactive/TomcatReactiveWebServerFactoryCustomizer;
+#forwardedHeaderTransformer()Lorg/springframework/web/server/adapter/ForwardedHeaderTransformer;

+###org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration$AnnotationConfig
@2.0.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
+#httpHandler()Lorg/springframework/http/server/reactive/HttpHandler;
@2.3.0.RELEASE
+#httpHandler(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/http/server/reactive/HttpHandler;
-#httpHandler()Lorg/springframework/http/server/reactive/HttpHandler;

+###org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration
@2.1.0.RELEASE
+#<init>()V
+#clientConnectorCustomizer(Lorg/springframework/http/client/reactive/ClientHttpConnector;)Lorg/springframework/boot/web/reactive/function/client/WebClientCustomizer;

+###org/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;

+###org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Resource
@2.0.0.RELEASE
+#<init>()V
+#getCacheTtl()Ljava/time/Duration;
+#setCacheTtl(Ljava/time/Duration;)V
@2.1.0.RELEASE
+#isAllowCaching()Z
+#setAllowCaching(Z)V

+###org/springframework/boot/autoconfigure/web/ServerProperties$Servlet
@2.0.0.RELEASE
+#<init>()V
+#getContextPath()Ljava/lang/String;
+#setContextPath(Ljava/lang/String;)V
+#getApplicationDisplayName()Ljava/lang/String;
+#setApplicationDisplayName(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getContextParameters()Ljava/util/Map;
+#getJsp()Lorg/springframework/boot/web/servlet/server/Jsp;
+#getSession()Lorg/springframework/boot/web/servlet/server/Session;
+#getServletMapping()Ljava/lang/String;
+#getPath(Ljava/lang/String;)Ljava/lang/String;
+#getServletPrefix()Ljava/lang/String;
+#getPathsArray(Ljava/util/Collection;)[Ljava/lang/String;
+#getPathsArray([Ljava/lang/String;)[Ljava/lang/String;
@2.0.4.RELEASE
*#getServletMapping()Ljava/lang/String;[deprecated]
*#getPath(Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#getServletPrefix()Ljava/lang/String;[deprecated]
*#getPathsArray(Ljava/util/Collection;)[Ljava/lang/String;[deprecated]
*#getPathsArray([Ljava/lang/String;)[Ljava/lang/String;[deprecated]
@2.1.0.RELEASE
-#getPath()Ljava/lang/String;
-#setPath(Ljava/lang/String;)V
-#getServletMapping()Ljava/lang/String;[deprecated]
-#getPath(Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#getServletPrefix()Ljava/lang/String;[deprecated]
-#getPathsArray(Ljava/util/Collection;)[Ljava/lang/String;[deprecated]
-#getPathsArray([Ljava/lang/String;)[Ljava/lang/String;[deprecated]
@2.3.0.RELEASE
+#isRegisterDefaultServlet()Z
+#setRegisterDefaultServlet(Z)V
+#getEncoding()Lorg/springframework/boot/web/servlet/server/Encoding;

+###org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog$FORMAT
@2.2.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog$FORMAT;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog$FORMAT;

+###org/springframework/boot/autoconfigure/web/ErrorProperties$Whitelabel
@2.0.1.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/boot/autoconfigure/web/ServerProperties$Jetty
@1.4.0.RELEASE
+#<init>()V
+#getAcceptors()Ljava/lang/Integer;
+#setAcceptors(Ljava/lang/Integer;)V
+#getSelectors()Ljava/lang/Integer;
+#setSelectors(Ljava/lang/Integer;)V
@1.5.0.RELEASE
+#getMaxHttpPostSize()I
+#setMaxHttpPostSize(I)V
@2.0.0.RELEASE
+#getAccesslog()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Accesslog;
@2.1.0.RELEASE
+#getMaxHttpPostSize()Lorg/springframework/util/unit/DataSize;
+#setMaxHttpPostSize(Lorg/springframework/util/unit/DataSize;)V
-#getMaxHttpPostSize()I
-#setMaxHttpPostSize(I)V
@2.1.10.RELEASE
*#getMaxHttpPostSize()Lorg/springframework/util/unit/DataSize;[deprecated]
*#setMaxHttpPostSize(Lorg/springframework/util/unit/DataSize;)V[deprecated]
+#getMaxHttpFormPostSize()Lorg/springframework/util/unit/DataSize;
+#setMaxHttpFormPostSize(Lorg/springframework/util/unit/DataSize;)V
+#getConnectionIdleTimeout()Ljava/time/Duration;
+#setConnectionIdleTimeout(Ljava/time/Duration;)V
@2.2.0.RELEASE
+#setMinThreads(Ljava/lang/Integer;)V
+#getMinThreads()Ljava/lang/Integer;
+#setMaxThreads(Ljava/lang/Integer;)V
+#getMaxThreads()Ljava/lang/Integer;
+#setThreadIdleTimeout(Ljava/time/Duration;)V
+#getThreadIdleTimeout()Ljava/time/Duration;
-#getMaxHttpFormPostSize()Lorg/springframework/util/unit/DataSize;
-#setMaxHttpFormPostSize(Lorg/springframework/util/unit/DataSize;)V
@2.2.1.RELEASE
*#getMaxHttpPostSize()Lorg/springframework/util/unit/DataSize;[deprecated]
*#setMaxHttpPostSize(Lorg/springframework/util/unit/DataSize;)V[deprecated]
+#getMaxHttpFormPostSize()Lorg/springframework/util/unit/DataSize;
+#setMaxHttpFormPostSize(Lorg/springframework/util/unit/DataSize;)V
@2.3.0.RELEASE
+#getThreads()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Threads;
*#getAcceptors()Ljava/lang/Integer;[deprecated]
*#setAcceptors(Ljava/lang/Integer;)V[deprecated]
*#getSelectors()Ljava/lang/Integer;[deprecated]
*#setSelectors(Ljava/lang/Integer;)V[deprecated]
*#getMinThreads()Ljava/lang/Integer;[deprecated]
*#setMinThreads(Ljava/lang/Integer;)V[deprecated]
*#getMaxThreads()Ljava/lang/Integer;[deprecated]
*#setMaxThreads(Ljava/lang/Integer;)V[deprecated]
+#getMaxQueueCapacity()Ljava/lang/Integer;[deprecated]
+#setMaxQueueCapacity(Ljava/lang/Integer;)V[deprecated]
*#getThreadIdleTimeout()Ljava/time/Duration;[deprecated]
*#setThreadIdleTimeout(Ljava/time/Duration;)V[deprecated]
-#getMaxHttpPostSize()Lorg/springframework/util/unit/DataSize;[deprecated]
-#setMaxHttpPostSize(Lorg/springframework/util/unit/DataSize;)V[deprecated]
@2.5.0
-#getAcceptors()Ljava/lang/Integer;[deprecated]
-#setAcceptors(Ljava/lang/Integer;)V[deprecated]
-#getSelectors()Ljava/lang/Integer;[deprecated]
-#setSelectors(Ljava/lang/Integer;)V[deprecated]
-#getMinThreads()Ljava/lang/Integer;[deprecated]
-#setMinThreads(Ljava/lang/Integer;)V[deprecated]
-#getMaxThreads()Ljava/lang/Integer;[deprecated]
-#setMaxThreads(Ljava/lang/Integer;)V[deprecated]
-#getMaxQueueCapacity()Ljava/lang/Integer;[deprecated]
-#setMaxQueueCapacity(Ljava/lang/Integer;)V[deprecated]
-#getThreadIdleTimeout()Ljava/time/Duration;[deprecated]
-#setThreadIdleTimeout(Ljava/time/Duration;)V[deprecated]

+###org/springframework/boot/autoconfigure/web/ServerProperties$Undertow$Accesslog
@1.3.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getPattern()Ljava/lang/String;
+#setPattern(Ljava/lang/String;)V
+#getDir()Ljava/io/File;
+#setDir(Ljava/io/File;)V
@1.3.4.RELEASE
+#getEnabled()Ljava/lang/Boolean;
+#setEnabled(Ljava/lang/Boolean;)V
-#isEnabled()Z
-#setEnabled(Z)V
@1.4.1.RELEASE
+#getPrefix()Ljava/lang/String;
+#setPrefix(Ljava/lang/String;)V
+#getSuffix()Ljava/lang/String;
+#setSuffix(Ljava/lang/String;)V
@1.5.0.RELEASE
+#isRotate()Z
+#setRotate(Z)V
@2.0.0.RELEASE
+#isEnabled()Z
+#setEnabled(Z)V
-#getEnabled()Ljava/lang/Boolean;
-#setEnabled(Ljava/lang/Boolean;)V

+###org/springframework/boot/autoconfigure/web/ServerProperties$Undertow
@1.2.0.RELEASE
+#<init>()V
+#getBufferSize()Ljava/lang/Integer;
+#setBufferSize(Ljava/lang/Integer;)V
+#getBuffersPerRegion()Ljava/lang/Integer;
+#setBuffersPerRegion(Ljava/lang/Integer;)V
+#getIoThreads()Ljava/lang/Integer;
+#setIoThreads(Ljava/lang/Integer;)V
+#getWorkerThreads()Ljava/lang/Integer;
+#setWorkerThreads(Ljava/lang/Integer;)V
+#getDirectBuffers()Ljava/lang/Boolean;
+#setDirectBuffers(Ljava/lang/Boolean;)V
@1.3.0.RELEASE
+#getAccesslog()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Undertow$Accesslog;
+#getAccessLogPattern()Ljava/lang/String;[deprecated]
+#setAccessLogPattern(Ljava/lang/String;)V[deprecated]
+#isAccessLogEnabled()Z[deprecated]
+#setAccessLogEnabled(Z)V[deprecated]
+#getAccessLogDir()Ljava/io/File;[deprecated]
+#setAccessLogDir(Ljava/io/File;)V[deprecated]
@1.4.0.RELEASE
-#getAccessLogPattern()Ljava/lang/String;[deprecated]
-#setAccessLogPattern(Ljava/lang/String;)V[deprecated]
-#isAccessLogEnabled()Z[deprecated]
-#setAccessLogEnabled(Z)V[deprecated]
-#getAccessLogDir()Ljava/io/File;[deprecated]
-#setAccessLogDir(Ljava/io/File;)V[deprecated]
@1.5.0.RELEASE
+#getMaxHttpPostSize()J
+#setMaxHttpPostSize(J)V
@2.0.0.RELEASE
+#isEagerFilterInit()Z
+#setEagerFilterInit(Z)V
-#getBuffersPerRegion()Ljava/lang/Integer;
-#setBuffersPerRegion(Ljava/lang/Integer;)V
@2.1.0.RELEASE
+#getMaxHttpPostSize()Lorg/springframework/util/unit/DataSize;
+#setMaxHttpPostSize(Lorg/springframework/util/unit/DataSize;)V
+#getBufferSize()Lorg/springframework/util/unit/DataSize;
+#setBufferSize(Lorg/springframework/util/unit/DataSize;)V
-#getMaxHttpPostSize()J
-#setMaxHttpPostSize(J)V
-#getBufferSize()Ljava/lang/Integer;
-#setBufferSize(Ljava/lang/Integer;)V
@2.1.10.RELEASE
+#getNoRequestTimeout()Ljava/time/Duration;
+#setNoRequestTimeout(Ljava/time/Duration;)V
@2.2.0.RELEASE
+#getMaxParameters()I
+#setMaxParameters(Ljava/lang/Integer;)V
+#getMaxHeaders()I
+#setMaxHeaders(I)V
+#getMaxCookies()Ljava/lang/Integer;
+#setMaxCookies(Ljava/lang/Integer;)V
+#isAllowEncodedSlash()Z
+#setAllowEncodedSlash(Z)V
+#isDecodeUrl()Z
+#setDecodeUrl(Ljava/lang/Boolean;)V
+#getUrlCharset()Ljava/nio/charset/Charset;
+#setUrlCharset(Ljava/nio/charset/Charset;)V
+#isAlwaysSetKeepAlive()Z
+#setAlwaysSetKeepAlive(Z)V
+#getOptions()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Undertow$Options;
@2.3.0.RELEASE
*#getIoThreads()Ljava/lang/Integer;[deprecated]
*#setIoThreads(Ljava/lang/Integer;)V[deprecated]
*#getWorkerThreads()Ljava/lang/Integer;[deprecated]
*#setWorkerThreads(Ljava/lang/Integer;)V[deprecated]
+#getThreads()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Undertow$Threads;
@2.4.0
+#isPreservePathOnForward()Z
+#setPreservePathOnForward(Z)V
@2.5.0
-#getIoThreads()Ljava/lang/Integer;[deprecated]
-#setIoThreads(Ljava/lang/Integer;)V[deprecated]
-#getWorkerThreads()Ljava/lang/Integer;[deprecated]
-#setWorkerThreads(Ljava/lang/Integer;)V[deprecated]
@3.0.3
*#isAllowEncodedSlash()Z[deprecated]
*#setAllowEncodedSlash(Z)V[deprecated]
+#getDecodeSlash()Ljava/lang/Boolean;
+#setDecodeSlash(Ljava/lang/Boolean;)V

+###org/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory;)V
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/embedded/tomcat/ConfigurableTomcatWebServerFactory;)V
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Pathmatch
@2.0.0.RELEASE
+#<init>()V
+#isUseSuffixPattern()Z
+#setUseSuffixPattern(Z)V
+#isUseRegisteredSuffixPattern()Z
+#setUseRegisteredSuffixPattern(Z)V
@2.2.6.RELEASE
*#isUseSuffixPattern()Z[deprecated]
*#setUseSuffixPattern(Z)V[deprecated]
*#isUseRegisteredSuffixPattern()Z[deprecated]
*#setUseRegisteredSuffixPattern(Z)V[deprecated]
@2.4.0
+#getMatchingStrategy()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$MatchingStrategy;
+#setMatchingStrategy(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$MatchingStrategy;)V
@3.0.0
-#isUseSuffixPattern()Z[deprecated]
-#setUseSuffixPattern(Z)V[deprecated]
-#isUseRegisteredSuffixPattern()Z[deprecated]
-#setUseRegisteredSuffixPattern(Z)V[deprecated]

+###org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration
@2.0.0.RELEASE
+#defaultErrorView()Lorg/springframework/web/servlet/View;
+#beanNameViewResolver()Lorg/springframework/web/servlet/view/BeanNameViewResolver;

+###org/springframework/boot/autoconfigure/web/servlet/error/ErrorViewResolver
@2.0.0.RELEASE
+#resolveErrorView(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/http/HttpStatus;Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;
@3.0.0
+#resolveErrorView(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/http/HttpStatus;Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;
-#resolveErrorView(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/http/HttpStatus;Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;

+###org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;)V
+#dispatcherServlet()Lorg/springframework/web/servlet/DispatcherServlet;
+#multipartResolver(Lorg/springframework/web/multipart/MultipartResolver;)Lorg/springframework/web/multipart/MultipartResolver;
@2.0.2.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#mainDispatcherServletPathProvider()Lorg/springframework/boot/autoconfigure/web/servlet/DispatcherServletPathProvider;
-#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;)V
@2.0.4.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
-#mainDispatcherServletPathProvider()Lorg/springframework/boot/autoconfigure/web/servlet/DispatcherServletPathProvider;
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/http/HttpProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;)V
@2.2.0.RELEASE
+#dispatcherServlet(Lorg/springframework/boot/autoconfigure/http/HttpProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;)Lorg/springframework/web/servlet/DispatcherServlet;
-#<init>(Lorg/springframework/boot/autoconfigure/http/HttpProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;)V
-#dispatcherServlet()Lorg/springframework/web/servlet/DispatcherServlet;
@2.3.0.RELEASE
+#dispatcherServlet(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;)Lorg/springframework/web/servlet/DispatcherServlet;
-#dispatcherServlet(Lorg/springframework/boot/autoconfigure/http/HttpProperties;Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties;)Lorg/springframework/web/servlet/DispatcherServlet;

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Servlet
@2.0.0.RELEASE
+#<init>()V
+#getLoadOnStartup()I
+#setLoadOnStartup(I)V
@2.1.0.RELEASE
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getServletMapping()Ljava/lang/String;
+#getPath(Ljava/lang/String;)Ljava/lang/String;
+#getServletPrefix()Ljava/lang/String;

+###org/springframework/boot/autoconfigure/web/servlet/TomcatServletWebServerFactoryCustomizer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory;)V
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/web/servlet/UndertowServletWebServerFactoryCustomizer
@2.1.7.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#customize(Lorg/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory;)V
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedJetty
@2.0.0.RELEASE
+#<init>()V
+#JettyServletWebServerFactory()Lorg/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory;
@2.1.12.RELEASE
-###org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedJetty

+###org/springframework/boot/autoconfigure/web/servlet/DispatcherServletPath
@2.0.4.RELEASE
+#getPath()Ljava/lang/String;
+#getRelativePath(Ljava/lang/String;)Ljava/lang/String;
+#getPrefix()Ljava/lang/String;
+#getServletUrlMapping()Ljava/lang/String;

+###org/springframework/boot/autoconfigure/web/ResourceProperties$Cache$Cachecontrol
@2.0.0.RELEASE
+#<init>()V
+#getMaxAge()Ljava/time/Duration;
+#setMaxAge(Ljava/time/Duration;)V
+#getNoCache()Ljava/lang/Boolean;
+#setNoCache(Ljava/lang/Boolean;)V
+#getNoStore()Ljava/lang/Boolean;
+#setNoStore(Ljava/lang/Boolean;)V
+#getMustRevalidate()Ljava/lang/Boolean;
+#setMustRevalidate(Ljava/lang/Boolean;)V
+#getNoTransform()Ljava/lang/Boolean;
+#setNoTransform(Ljava/lang/Boolean;)V
+#getCachePublic()Ljava/lang/Boolean;
+#setCachePublic(Ljava/lang/Boolean;)V
+#getCachePrivate()Ljava/lang/Boolean;
+#setCachePrivate(Ljava/lang/Boolean;)V
+#getProxyRevalidate()Ljava/lang/Boolean;
+#setProxyRevalidate(Ljava/lang/Boolean;)V
+#getStaleWhileRevalidate()Ljava/time/Duration;
+#setStaleWhileRevalidate(Ljava/time/Duration;)V
+#getStaleIfError()Ljava/time/Duration;
+#setStaleIfError(Ljava/time/Duration;)V
+#getSMaxAge()Ljava/time/Duration;
+#setSMaxAge(Ljava/time/Duration;)V
+#toHttpCacheControl()Lorg/springframework/http/CacheControl;
@2.4.0
-#setMaxAge(Ljava/time/Duration;)V
-#setNoCache(Ljava/lang/Boolean;)V
-#setNoStore(Ljava/lang/Boolean;)V
-#setMustRevalidate(Ljava/lang/Boolean;)V
-#setNoTransform(Ljava/lang/Boolean;)V
-#setCachePublic(Ljava/lang/Boolean;)V
-#setCachePrivate(Ljava/lang/Boolean;)V
-#setProxyRevalidate(Ljava/lang/Boolean;)V
-#setStaleWhileRevalidate(Ljava/time/Duration;)V
-#setStaleIfError(Ljava/time/Duration;)V
-#setSMaxAge(Ljava/time/Duration;)V
-#toHttpCacheControl()Lorg/springframework/http/CacheControl;
@2.6.0
-###org/springframework/boot/autoconfigure/web/ResourceProperties$Cache$Cachecontrol

+###org/springframework/boot/autoconfigure/cache/CacheProperties
@1.3.0.RELEASE
+#<init>()V
+#getType()Lorg/springframework/boot/autoconfigure/cache/CacheType;
+#setType(Lorg/springframework/boot/autoconfigure/cache/CacheType;)V
+#getCacheNames()Ljava/util/List;
+#setCacheNames(Ljava/util/List;)V
+#getEhcache()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$EhCache;
+#getHazelcast()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$Hazelcast;
+#getInfinispan()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$Infinispan;
+#getJcache()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$JCache;
+#getGuava()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$Guava;
+#resolveConfigLocation(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/io/Resource;
@1.4.0.RELEASE
+#getCaffeine()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$Caffeine;
+#getCouchbase()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$Couchbase;
@1.5.2.RELEASE
*#getHazelcast()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$Hazelcast;[deprecated]
@2.0.0.RELEASE
+#getRedis()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$Redis;
-#getHazelcast()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$Hazelcast;[deprecated]
-#getGuava()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$Guava;
@3.0.0
-#getEhcache()Lorg/springframework/boot/autoconfigure/cache/CacheProperties$EhCache;

+###org/springframework/boot/autoconfigure/cache/CacheManagerCustomizers
@1.5.0.RELEASE
+#<init>(Ljava/util/List;)V
+#customize(Lorg/springframework/cache/CacheManager;)Lorg/springframework/cache/CacheManager;

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$Retry
@1.4.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getMaxAttempts()I
+#setMaxAttempts(I)V
+#getInitialInterval()J
+#setInitialInterval(J)V
+#getMultiplier()D
+#setMultiplier(D)V
+#getMaxInterval()J
+#setMaxInterval(J)V
@2.0.0.RELEASE
+#getInitialInterval()Ljava/time/Duration;
+#setInitialInterval(Ljava/time/Duration;)V
+#getMaxInterval()Ljava/time/Duration;
+#setMaxInterval(Ljava/time/Duration;)V
-#getInitialInterval()J
-#setInitialInterval(J)V
-#getMaxInterval()J
-#setMaxInterval(J)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$SimpleContainer
@2.0.0.RELEASE
+#<init>()V
+#getConcurrency()Ljava/lang/Integer;
+#setConcurrency(Ljava/lang/Integer;)V
+#getMaxConcurrency()Ljava/lang/Integer;
+#setMaxConcurrency(Ljava/lang/Integer;)V
+#getTransactionSize()Ljava/lang/Integer;
+#setTransactionSize(Ljava/lang/Integer;)V
@2.1.0.RELEASE
+#isMissingQueuesFatal()Z
+#setMissingQueuesFatal(Z)V
@2.2.0.RELEASE
*#getTransactionSize()Ljava/lang/Integer;[deprecated]
*#setTransactionSize(Ljava/lang/Integer;)V[deprecated]
+#getBatchSize()Ljava/lang/Integer;
+#setBatchSize(Ljava/lang/Integer;)V
@2.3.0.RELEASE
-#getTransactionSize()Ljava/lang/Integer;[deprecated]
-#setTransactionSize(Ljava/lang/Integer;)V[deprecated]
@2.4.0
+#isConsumerBatchEnabled()Z
+#setConsumerBatchEnabled(Z)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl
@1.3.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getKeyStore()Ljava/lang/String;
+#setKeyStore(Ljava/lang/String;)V
+#getKeyStorePassword()Ljava/lang/String;
+#setKeyStorePassword(Ljava/lang/String;)V
+#getTrustStore()Ljava/lang/String;
+#setTrustStore(Ljava/lang/String;)V
+#getTrustStorePassword()Ljava/lang/String;
+#setTrustStorePassword(Ljava/lang/String;)V
@1.3.4.RELEASE
+#getAlgorithm()Ljava/lang/String;
+#setAlgorithm(Ljava/lang/String;)V
@1.5.16.RELEASE
+#isValidateServerCertificate()Z
+#setValidateServerCertificate(Z)V
+#getVerifyHostname()Ljava/lang/Boolean;
+#setVerifyHostname(Ljava/lang/Boolean;)V
@2.0.0.RELEASE
+#getKeyStoreType()Ljava/lang/String;
+#setKeyStoreType(Ljava/lang/String;)V
+#getTrustStoreType()Ljava/lang/String;
+#setTrustStoreType(Ljava/lang/String;)V
-#isValidateServerCertificate()Z
-#setValidateServerCertificate(Z)V
-#getVerifyHostname()Ljava/lang/Boolean;
-#setVerifyHostname(Ljava/lang/Boolean;)V
@2.0.5.RELEASE
+#isValidateServerCertificate()Z
+#setValidateServerCertificate(Z)V
+#getVerifyHostname()Ljava/lang/Boolean;
+#setVerifyHostname(Ljava/lang/Boolean;)V
@2.1.0.RELEASE
+#getVerifyHostname()Z
+#setVerifyHostname(Z)V
-#getVerifyHostname()Ljava/lang/Boolean;
-#setVerifyHostname(Ljava/lang/Boolean;)V
@2.1.10.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
+#determineEnabled()Z
-#<init>()V
@2.2.0.RELEASE
+#<init>()V
-#<init>(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
-#determineEnabled()Z
@2.2.1.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
+#determineEnabled()Z
-#<init>()V
@2.3.0.RELEASE
+#getEnabled()Ljava/lang/Boolean;
+#setEnabled(Ljava/lang/Boolean;)V
-#isEnabled()Z
-#setEnabled(Z)V
@2.5.0
+#getKeyStoreAlgorithm()Ljava/lang/String;
+#setKeyStoreAlgorithm(Ljava/lang/String;)V
+#getTrustStoreAlgorithm()Ljava/lang/String;
+#setTrustStoreAlgorithm(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry
@1.4.0.RELEASE
+#<init>()V
+#isStateless()Z
+#setStateless(Z)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer
@1.5.4.RELEASE
+#<init>()V
+#isAutoStartup()Z
+#setAutoStartup(Z)V
+#getAcknowledgeMode()Lorg/springframework/amqp/core/AcknowledgeMode;
+#setAcknowledgeMode(Lorg/springframework/amqp/core/AcknowledgeMode;)V
+#getConcurrency()Ljava/lang/Integer;
+#setConcurrency(Ljava/lang/Integer;)V
+#getMaxConcurrency()Ljava/lang/Integer;
+#setMaxConcurrency(Ljava/lang/Integer;)V
+#getPrefetch()Ljava/lang/Integer;
+#setPrefetch(Ljava/lang/Integer;)V
+#getTransactionSize()Ljava/lang/Integer;
+#setTransactionSize(Ljava/lang/Integer;)V
+#getDefaultRequeueRejected()Ljava/lang/Boolean;
+#setDefaultRequeueRejected(Ljava/lang/Boolean;)V
+#getIdleEventInterval()Ljava/lang/Long;
+#setIdleEventInterval(Ljava/lang/Long;)V
+#getRetry()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry;
@2.0.0.RELEASE
+#getIdleEventInterval()Ljava/time/Duration;
+#setIdleEventInterval(Ljava/time/Duration;)V
-#getConcurrency()Ljava/lang/Integer;
-#setConcurrency(Ljava/lang/Integer;)V
-#getMaxConcurrency()Ljava/lang/Integer;
-#setMaxConcurrency(Ljava/lang/Integer;)V
-#getTransactionSize()Ljava/lang/Integer;
-#setTransactionSize(Ljava/lang/Integer;)V
-#getIdleEventInterval()Ljava/lang/Long;
-#setIdleEventInterval(Ljava/lang/Long;)V
@2.1.0.RELEASE
+#isMissingQueuesFatal()Z
@2.4.0
+#isDeBatchingEnabled()Z
+#setDeBatchingEnabled(Z)V
@2.6.0
-#isAutoStartup()Z
-#setAutoStartup(Z)V

+###org/springframework/boot/autoconfigure/amqp/SimpleRabbitListenerContainerFactoryConfigurer
@1.3.3.RELEASE
+#<init>()V
+#configure(Lorg/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory;Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)V
@2.0.0.RELEASE
+#configure(Lorg/springframework/amqp/rabbit/config/AbstractRabbitListenerContainerFactory;Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)V
@2.6.0
*#<init>()V[deprecated]
+#<init>(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
@3.0.0
-#<init>()V[deprecated]

+###org/springframework/boot/autoconfigure/jms/artemis/ArtemisProperties$Embedded
@1.3.0.RELEASE
+#<init>()V
+#getServerId()I
+#setServerId(I)V
+#isEnabled()Z
+#setEnabled(Z)V
+#isPersistent()Z
+#setPersistent(Z)V
+#getDataDirectory()Ljava/lang/String;
+#setDataDirectory(Ljava/lang/String;)V
+#getQueues()[Ljava/lang/String;
+#setQueues([Ljava/lang/String;)V
+#getTopics()[Ljava/lang/String;
+#setTopics([Ljava/lang/String;)V
+#getClusterPassword()Ljava/lang/String;
+#setClusterPassword(Ljava/lang/String;)V
+#isDefaultClusterPassword()Z
+#generateTransportParameters()Ljava/util/Map;

+###org/springframework/boot/autoconfigure/jms/DefaultJmsListenerContainerFactoryConfigurer
@1.3.3.RELEASE
+#<init>()V
+#configure(Lorg/springframework/jms/config/DefaultJmsListenerContainerFactory;Ljavax/jms/ConnectionFactory;)V
@3.0.0
+#configure(Lorg/springframework/jms/config/DefaultJmsListenerContainerFactory;Ljakarta/jms/ConnectionFactory;)V
-#configure(Lorg/springframework/jms/config/DefaultJmsListenerContainerFactory;Ljavax/jms/ConnectionFactory;)V

+###org/springframework/boot/autoconfigure/jms/JmsProperties$AcknowledgeMode
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/jms/JmsProperties$AcknowledgeMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jms/JmsProperties$AcknowledgeMode;
+#getMode()I

+###org/springframework/boot/autoconfigure/cache/CouchbaseCacheConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Lcom/couchbase/client/java/Bucket;)V
+#cacheManager()Lcom/couchbase/client/spring/cache/CouchbaseCacheManager;
@2.2.0.RELEASE
+#<init>()V
+#cacheManager(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Lcom/couchbase/client/java/Bucket;)Lcom/couchbase/client/spring/cache/CouchbaseCacheManager;
-#<init>(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Lcom/couchbase/client/java/Bucket;)V
-#cacheManager()Lcom/couchbase/client/spring/cache/CouchbaseCacheManager;
@2.3.0.RELEASE
+#cacheManager(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Lorg/springframework/data/couchbase/CouchbaseClientFactory;)Lorg/springframework/data/couchbase/cache/CouchbaseCacheManager;
-#cacheManager(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Lcom/couchbase/client/java/Bucket;)Lcom/couchbase/client/spring/cache/CouchbaseCacheManager;
@2.3.3.RELEASE
+#cacheManager(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/data/couchbase/CouchbaseClientFactory;)Lorg/springframework/data/couchbase/cache/CouchbaseCacheManager;
-#cacheManager(Lorg/springframework/boot/autoconfigure/cache/CacheProperties;Lorg/springframework/boot/autoconfigure/cache/CacheManagerCustomizers;Lorg/springframework/data/couchbase/CouchbaseClientFactory;)Lorg/springframework/data/couchbase/cache/CouchbaseCacheManager;
@2.5.0
-###org/springframework/boot/autoconfigure/cache/CouchbaseCacheConfiguration

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache$Channel
@1.4.0.RELEASE
+#<init>()V
+#getSize()Ljava/lang/Integer;
+#setSize(Ljava/lang/Integer;)V
+#getCheckoutTimeout()Ljava/lang/Long;
+#setCheckoutTimeout(Ljava/lang/Long;)V
@2.0.0.RELEASE
+#getCheckoutTimeout()Ljava/time/Duration;
+#setCheckoutTimeout(Ljava/time/Duration;)V
-#getCheckoutTimeout()Ljava/lang/Long;
-#setCheckoutTimeout(Ljava/lang/Long;)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$ContainerType
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$ContainerType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$ContainerType;

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache$Connection
@1.4.0.RELEASE
+#<init>()V
+#getMode()Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory$CacheMode;
+#setMode(Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory$CacheMode;)V
+#getSize()Ljava/lang/Integer;
+#setSize(Ljava/lang/Integer;)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener
@1.3.0.RELEASE
+#<init>()V
+#isAutoStartup()Z
+#setAutoStartup(Z)V
+#getAcknowledgeMode()Lorg/springframework/amqp/core/AcknowledgeMode;
+#setAcknowledgeMode(Lorg/springframework/amqp/core/AcknowledgeMode;)V
+#getConcurrency()Ljava/lang/Integer;
+#setConcurrency(Ljava/lang/Integer;)V
+#getMaxConcurrency()Ljava/lang/Integer;
+#setMaxConcurrency(Ljava/lang/Integer;)V
+#getPrefetch()Ljava/lang/Integer;
+#setPrefetch(Ljava/lang/Integer;)V
+#getTransactionSize()Ljava/lang/Integer;
+#setTransactionSize(Ljava/lang/Integer;)V
@1.4.0.RELEASE
+#getDefaultRequeueRejected()Ljava/lang/Boolean;
+#setDefaultRequeueRejected(Ljava/lang/Boolean;)V
+#getRetry()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry;
@1.5.0.RELEASE
+#getIdleEventInterval()Ljava/lang/Long;
+#setIdleEventInterval(Ljava/lang/Long;)V
@1.5.4.RELEASE
*#isAutoStartup()Z[deprecated]
*#setAutoStartup(Z)V[deprecated]
*#getAcknowledgeMode()Lorg/springframework/amqp/core/AcknowledgeMode;[deprecated]
*#setAcknowledgeMode(Lorg/springframework/amqp/core/AcknowledgeMode;)V[deprecated]
*#getConcurrency()Ljava/lang/Integer;[deprecated]
*#setConcurrency(Ljava/lang/Integer;)V[deprecated]
*#getMaxConcurrency()Ljava/lang/Integer;[deprecated]
*#setMaxConcurrency(Ljava/lang/Integer;)V[deprecated]
*#getPrefetch()Ljava/lang/Integer;[deprecated]
*#setPrefetch(Ljava/lang/Integer;)V[deprecated]
*#getTransactionSize()Ljava/lang/Integer;[deprecated]
*#setTransactionSize(Ljava/lang/Integer;)V[deprecated]
*#getDefaultRequeueRejected()Ljava/lang/Boolean;[deprecated]
*#setDefaultRequeueRejected(Ljava/lang/Boolean;)V[deprecated]
*#getIdleEventInterval()Ljava/lang/Long;[deprecated]
*#setIdleEventInterval(Ljava/lang/Long;)V[deprecated]
*#getRetry()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry;[deprecated]
+#getSimple()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer;
@2.0.0.RELEASE
+#getType()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$ContainerType;
+#setType(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$ContainerType;)V
+#getSimple()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$SimpleContainer;
+#getDirect()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$DirectContainer;
-#isAutoStartup()Z[deprecated]
-#setAutoStartup(Z)V[deprecated]
-#getAcknowledgeMode()Lorg/springframework/amqp/core/AcknowledgeMode;[deprecated]
-#setAcknowledgeMode(Lorg/springframework/amqp/core/AcknowledgeMode;)V[deprecated]
-#getConcurrency()Ljava/lang/Integer;[deprecated]
-#setConcurrency(Ljava/lang/Integer;)V[deprecated]
-#getMaxConcurrency()Ljava/lang/Integer;[deprecated]
-#setMaxConcurrency(Ljava/lang/Integer;)V[deprecated]
-#getPrefetch()Ljava/lang/Integer;[deprecated]
-#setPrefetch(Ljava/lang/Integer;)V[deprecated]
-#getTransactionSize()Ljava/lang/Integer;[deprecated]
-#setTransactionSize(Ljava/lang/Integer;)V[deprecated]
-#getDefaultRequeueRejected()Ljava/lang/Boolean;[deprecated]
-#setDefaultRequeueRejected(Ljava/lang/Boolean;)V[deprecated]
-#getIdleEventInterval()Ljava/lang/Long;[deprecated]
-#setIdleEventInterval(Ljava/lang/Long;)V[deprecated]
-#getRetry()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry;[deprecated]
-#getSimple()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer;
@2.6.0
+#getStream()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$StreamContainer;

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$DirectContainer
@2.0.0.RELEASE
+#<init>()V
+#getConsumersPerQueue()Ljava/lang/Integer;
+#setConsumersPerQueue(Ljava/lang/Integer;)V
@2.1.0.RELEASE
+#isMissingQueuesFatal()Z
+#setMissingQueuesFatal(Z)V

+###org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration$MessagingTemplateConfiguration
@1.2.0.RELEASE
+#rabbitMessagingTemplate(Lorg/springframework/amqp/rabbit/core/RabbitTemplate;)Lorg/springframework/amqp/rabbit/core/RabbitMessagingTemplate;

+###org/springframework/boot/autoconfigure/jms/artemis/ArtemisConfigurationCustomizer
@1.3.0.RELEASE
+#customize(Lorg/apache/activemq/artemis/core/config/Configuration;)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache
@1.4.0.RELEASE
+#<init>()V
+#getChannel()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache$Channel;
+#getConnection()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache$Connection;

+###org/springframework/boot/autoconfigure/info/ProjectInfoProperties
@1.4.0.RELEASE
+#<init>()V
+#getBuild()Lorg/springframework/boot/autoconfigure/info/ProjectInfoProperties$Build;
+#getGit()Lorg/springframework/boot/autoconfigure/info/ProjectInfoProperties$Git;

+###org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/info/ProjectInfoProperties;)V
+#gitProperties()Lorg/springframework/boot/info/GitProperties;
+#buildProperties()Lorg/springframework/boot/info/BuildProperties;

+###org/springframework/boot/autoconfigure/sendgrid/SendGridProperties
@1.3.0.RELEASE
+#<init>()V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getProxy()Lorg/springframework/boot/autoconfigure/sendgrid/SendGridProperties$Proxy;
+#setProxy(Lorg/springframework/boot/autoconfigure/sendgrid/SendGridProperties$Proxy;)V
+#isProxyConfigured()Z
@1.4.0.RELEASE
+#getApiKey()Ljava/lang/String;
+#setApiKey(Ljava/lang/String;)V
@2.0.0.RELEASE
-#getUsername()Ljava/lang/String;
-#setUsername(Ljava/lang/String;)V
-#getPassword()Ljava/lang/String;
-#setPassword(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/jms/artemis/ArtemisProperties
@1.3.0.RELEASE
+#<init>()V
+#getMode()Lorg/springframework/boot/autoconfigure/jms/artemis/ArtemisMode;
+#setMode(Lorg/springframework/boot/autoconfigure/jms/artemis/ArtemisMode;)V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getEmbedded()Lorg/springframework/boot/autoconfigure/jms/artemis/ArtemisProperties$Embedded;
@1.4.0.RELEASE
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
@2.1.0.RELEASE
+#getPool()Lorg/springframework/boot/autoconfigure/jms/JmsPoolConnectionFactoryProperties;
@2.5.0
+#getBrokerUrl()Ljava/lang/String;
+#setBrokerUrl(Ljava/lang/String;)V
*#getHost()Ljava/lang/String;[deprecated]
*#setHost(Ljava/lang/String;)V[deprecated]
*#getPort()I[deprecated]
*#setPort(I)V[deprecated]
@2.7.0
-#getHost()Ljava/lang/String;[deprecated]
-#setHost(Ljava/lang/String;)V[deprecated]
-#getPort()I[deprecated]
-#setPort(I)V[deprecated]

+###org/springframework/boot/autoconfigure/jms/JmsProperties$Listener
@1.3.0.RELEASE
+#<init>()V
+#isAutoStartup()Z
+#setAutoStartup(Z)V
+#getAcknowledgeMode()Lorg/springframework/boot/autoconfigure/jms/JmsProperties$AcknowledgeMode;
+#setAcknowledgeMode(Lorg/springframework/boot/autoconfigure/jms/JmsProperties$AcknowledgeMode;)V
+#getConcurrency()Ljava/lang/Integer;
+#setConcurrency(Ljava/lang/Integer;)V
+#getMaxConcurrency()Ljava/lang/Integer;
+#setMaxConcurrency(Ljava/lang/Integer;)V
+#formatConcurrency()Ljava/lang/String;
@2.2.0.RELEASE
+#getReceiveTimeout()Ljava/time/Duration;
+#setReceiveTimeout(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/cache/CacheProperties$JCache
@1.3.0.RELEASE
+#<init>()V
+#getProvider()Ljava/lang/String;
+#setProvider(Ljava/lang/String;)V
+#getConfig()Lorg/springframework/core/io/Resource;
+#setConfig(Lorg/springframework/core/io/Resource;)V

+###org/springframework/boot/autoconfigure/cache/RedisCacheManagerBuilderCustomizer
@2.2.0.RELEASE
+#customize(Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;)V

+###org/springframework/boot/autoconfigure/amqp/RabbitRetryTemplateCustomizer$Target
@2.1.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/amqp/RabbitRetryTemplateCustomizer$Target;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/amqp/RabbitRetryTemplateCustomizer$Target;

+###org/springframework/boot/autoconfigure/jms/JmsPoolConnectionFactoryProperties
@2.1.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#isBlockIfFull()Z
+#setBlockIfFull(Z)V
+#getBlockIfFullTimeout()Ljava/time/Duration;
+#setBlockIfFullTimeout(Ljava/time/Duration;)V
+#getIdleTimeout()Ljava/time/Duration;
+#setIdleTimeout(Ljava/time/Duration;)V
+#getMaxConnections()I
+#setMaxConnections(I)V
+#getMaximumActiveSessionPerConnection()I[deprecated]
+#setMaximumActiveSessionPerConnection(I)V[deprecated]
+#getMaxSessionsPerConnection()I
+#setMaxSessionsPerConnection(I)V
+#getTimeBetweenExpirationCheck()Ljava/time/Duration;
+#setTimeBetweenExpirationCheck(Ljava/time/Duration;)V
+#isUseAnonymousProducers()Z
+#setUseAnonymousProducers(Z)V
@2.2.0.RELEASE
-#getMaximumActiveSessionPerConnection()I[deprecated]
-#setMaximumActiveSessionPerConnection(I)V[deprecated]

+###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties$Packages
@1.4.0.RELEASE
+#<init>()V
+#getTrustAll()Ljava/lang/Boolean;
+#setTrustAll(Ljava/lang/Boolean;)V
+#getTrusted()Ljava/util/List;
+#setTrusted(Ljava/util/List;)V
@3.0.0
-###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties$Packages

+###org/springframework/boot/autoconfigure/rsocket/RSocketProperties$Server
@2.2.0.RELEASE
+#<init>()V
+#getPort()Ljava/lang/Integer;
+#setPort(Ljava/lang/Integer;)V
+#getAddress()Ljava/net/InetAddress;
+#setAddress(Ljava/net/InetAddress;)V
+#getTransport()Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;
+#setTransport(Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;)V
+#getMappingPath()Ljava/lang/String;
+#setMappingPath(Ljava/lang/String;)V
@2.4.0
+#getFragmentSize()Lorg/springframework/util/unit/DataSize;
+#setFragmentSize(Lorg/springframework/util/unit/DataSize;)V
+#getSsl()Lorg/springframework/boot/web/server/Ssl;
+#setSsl(Lorg/springframework/boot/web/server/Ssl;)V

+###org/springframework/boot/autoconfigure/rsocket/RSocketStrategiesAutoConfiguration$JacksonJsonStrategyConfiguration
@2.2.0.RELEASE
+#jacksonJsonRSocketStrategyCustomizer(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lorg/springframework/boot/rsocket/messaging/RSocketStrategiesCustomizer;

+###org/springframework/boot/autoconfigure/webservices/client/WebServiceTemplateAutoConfiguration
@2.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
+#webServiceTemplateBuilder()Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
@2.2.0.RELEASE
+#<init>()V
+#webServiceTemplateBuilder(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
-#webServiceTemplateBuilder()Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationComponentScanConfiguration
@2.0.2.RELEASE

+###org/springframework/boot/autoconfigure/security/SecurityProperties$Filter
@2.0.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
+#getDispatcherTypes()Ljava/util/Set;
+#setDispatcherTypes(Ljava/util/Set;)V

+###org/springframework/boot/autoconfigure/security/oauth2/client/reactive/ReactiveOAuth2ClientAutoConfiguration
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties;)V
+#clientRegistrationRepository()Lorg/springframework/security/oauth2/client/registration/InMemoryReactiveClientRegistrationRepository;
+#authorizedClientService(Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;)Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;
+#authorizedClientRepository(Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;)Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;
@2.1.9.RELEASE
+#<init>()V
-#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties;)V
-#clientRegistrationRepository()Lorg/springframework/security/oauth2/client/registration/InMemoryReactiveClientRegistrationRepository;
-#authorizedClientService(Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;)Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;
-#authorizedClientRepository(Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;)Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties
@2.0.0.RELEASE
+#<init>()V
+#getProvider()Ljava/util/Map;
+#getRegistration()Ljava/util/Map;
+#validate()V
@2.2.12.RELEASE
+#afterPropertiesSet()V
@2.3.0.RELEASE
-#afterPropertiesSet()V
@2.3.6.RELEASE
+#afterPropertiesSet()V

+###org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerProperties$Jwt
@2.1.0.RELEASE
+#<init>()V
+#getJwkSetUri()Ljava/lang/String;
+#setJwkSetUri(Ljava/lang/String;)V
+#getIssuerUri()Ljava/lang/String;
+#setIssuerUri(Ljava/lang/String;)V
@2.2.0.RELEASE
+#getJwsAlgorithm()Ljava/lang/String;
+#setJwsAlgorithm(Ljava/lang/String;)V
+#getPublicKeyLocation()Lorg/springframework/core/io/Resource;
+#setPublicKeyLocation(Lorg/springframework/core/io/Resource;)V
+#readPublicKey()Ljava/lang/String;
@2.7.0
+#getAudiences()Ljava/util/List;
+#setAudiences(Ljava/util/List;)V
@2.7.1
*#getJwsAlgorithm()Ljava/lang/String;[deprecated]
*#setJwsAlgorithm(Ljava/lang/String;)V[deprecated]
+#getJwsAlgorithms()Ljava/util/List;
+#setJwsAlgorithms(Ljava/util/List;)V
@3.0.0
-#getJwsAlgorithm()Ljava/lang/String;[deprecated]
-#setJwsAlgorithm(Ljava/lang/String;)V[deprecated]

+###org/springframework/boot/autoconfigure/security/SecurityDataConfiguration
@1.3.0.RELEASE
+#<init>()V
+#securityEvaluationContextExtension()Lorg/springframework/security/data/repository/query/SecurityEvaluationContextExtension;

+###org/springframework/boot/autoconfigure/security/servlet/SecurityFilterAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#securityFilterChainRegistration(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Lorg/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean;

+###org/springframework/boot/autoconfigure/security/servlet/WebSecurityEnablerConfiguration
@2.0.0.RELEASE
+#<init>()V
@2.4.0
-###org/springframework/boot/autoconfigure/security/servlet/WebSecurityEnablerConfiguration

+###org/springframework/boot/autoconfigure/mustache/MustacheResourceTemplateLoader
@1.2.2.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setCharset(Ljava/lang/String;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#getTemplate(Ljava/lang/String;)Ljava/io/Reader;

+###org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties;)V
+#configuration()Lorg/neo4j/ogm/config/Configuration;
@1.5.0.RELEASE
+#<init>()V
+#configuration(Lorg/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties;)Lorg/neo4j/ogm/config/Configuration;
+#sessionFactory(Lorg/neo4j/ogm/config/Configuration;Lorg/springframework/context/ApplicationContext;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/neo4j/ogm/session/SessionFactory;
+#neo4jTemplate(Lorg/neo4j/ogm/session/SessionFactory;)Lorg/springframework/data/neo4j/template/Neo4jTemplate;
+#transactionManager(Lorg/neo4j/ogm/session/SessionFactory;Lorg/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/data/neo4j/transaction/Neo4jTransactionManager;
-#<init>(Lorg/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties;)V
-#configuration()Lorg/neo4j/ogm/config/Configuration;
@2.0.0.RELEASE
-#neo4jTemplate(Lorg/neo4j/ogm/session/SessionFactory;)Lorg/springframework/data/neo4j/template/Neo4jTemplate;
@2.1.7.RELEASE
+#transactionManager(Lorg/neo4j/ogm/session/SessionFactory;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/data/neo4j/transaction/Neo4jTransactionManager;
-#configuration(Lorg/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties;)Lorg/neo4j/ogm/config/Configuration;
-#sessionFactory(Lorg/neo4j/ogm/config/Configuration;Lorg/springframework/context/ApplicationContext;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/neo4j/ogm/session/SessionFactory;
-#transactionManager(Lorg/neo4j/ogm/session/SessionFactory;Lorg/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/data/neo4j/transaction/Neo4jTransactionManager;
@2.4.0
+#neo4jConversions()Lorg/springframework/data/neo4j/core/convert/Neo4jConversions;
+#neo4jMappingContext(Lorg/springframework/context/ApplicationContext;Lorg/springframework/data/neo4j/core/convert/Neo4jConversions;)Lorg/springframework/data/neo4j/core/mapping/Neo4jMappingContext;
+#databaseSelectionProvider(Lorg/springframework/boot/autoconfigure/data/neo4j/Neo4jDataProperties;)Lorg/springframework/data/neo4j/core/DatabaseSelectionProvider;
+#neo4jClient(Lorg/neo4j/driver/Driver;)Lorg/springframework/data/neo4j/core/Neo4jClient;
+#neo4jTemplate(Lorg/springframework/data/neo4j/core/Neo4jClient;Lorg/springframework/data/neo4j/core/mapping/Neo4jMappingContext;Lorg/springframework/data/neo4j/core/DatabaseSelectionProvider;)Lorg/springframework/data/neo4j/core/Neo4jTemplate;
+#transactionManager(Lorg/neo4j/driver/Driver;Lorg/springframework/data/neo4j/core/DatabaseSelectionProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/data/neo4j/core/transaction/Neo4jTransactionManager;
-#transactionManager(Lorg/neo4j/ogm/session/SessionFactory;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/data/neo4j/transaction/Neo4jTransactionManager;
@2.5.0
+#neo4jClient(Lorg/neo4j/driver/Driver;Lorg/springframework/data/neo4j/core/DatabaseSelectionProvider;)Lorg/springframework/data/neo4j/core/Neo4jClient;
+#neo4jTemplate(Lorg/springframework/data/neo4j/core/Neo4jClient;Lorg/springframework/data/neo4j/core/mapping/Neo4jMappingContext;)Lorg/springframework/data/neo4j/core/Neo4jTemplate;
-#neo4jClient(Lorg/neo4j/driver/Driver;)Lorg/springframework/data/neo4j/core/Neo4jClient;
-#neo4jTemplate(Lorg/springframework/data/neo4j/core/Neo4jClient;Lorg/springframework/data/neo4j/core/mapping/Neo4jMappingContext;Lorg/springframework/data/neo4j/core/DatabaseSelectionProvider;)Lorg/springframework/data/neo4j/core/Neo4jTemplate;

+###org/springframework/boot/autoconfigure/data/couchbase/CouchbaseDataAutoConfiguration
@1.4.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfiguration
@1.4.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/redis/LettuceClientConfigurationBuilderCustomizer
@2.0.0.RELEASE
+#customize(Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;)V

+###org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#cassandraMapping()Lorg/springframework/data/cassandra/mapping/CassandraMappingContext;
+#cassandraConverter(Lorg/springframework/data/cassandra/mapping/CassandraMappingContext;)Lorg/springframework/data/cassandra/convert/CassandraConverter;
+#session(Lorg/springframework/data/cassandra/convert/CassandraConverter;)Lorg/springframework/data/cassandra/config/CassandraSessionFactoryBean;
+#cassandraTemplate(Lcom/datastax/driver/core/Session;Lorg/springframework/data/cassandra/convert/CassandraConverter;)Lorg/springframework/data/cassandra/core/CassandraTemplate;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;Lcom/datastax/driver/core/Cluster;Lorg/springframework/core/env/Environment;)V
-#<init>()V
@2.0.0.RELEASE
+#cassandraMapping(Lorg/springframework/data/cassandra/core/convert/CassandraCustomConversions;)Lorg/springframework/data/cassandra/core/mapping/CassandraMappingContext;
+#cassandraConverter(Lorg/springframework/data/cassandra/core/mapping/CassandraMappingContext;Lorg/springframework/data/cassandra/core/convert/CassandraCustomConversions;)Lorg/springframework/data/cassandra/core/convert/CassandraConverter;
+#cassandraSession(Lorg/springframework/data/cassandra/core/convert/CassandraConverter;)Lorg/springframework/data/cassandra/config/CassandraSessionFactoryBean;
+#cassandraTemplate(Lcom/datastax/driver/core/Session;Lorg/springframework/data/cassandra/core/convert/CassandraConverter;)Lorg/springframework/data/cassandra/core/CassandraTemplate;
+#cassandraCustomConversions()Lorg/springframework/data/cassandra/core/convert/CassandraCustomConversions;
-#cassandraMapping()Lorg/springframework/data/cassandra/mapping/CassandraMappingContext;
-#cassandraConverter(Lorg/springframework/data/cassandra/mapping/CassandraMappingContext;)Lorg/springframework/data/cassandra/convert/CassandraConverter;
-#session(Lorg/springframework/data/cassandra/convert/CassandraConverter;)Lorg/springframework/data/cassandra/config/CassandraSessionFactoryBean;
-#cassandraTemplate(Lcom/datastax/driver/core/Session;Lorg/springframework/data/cassandra/convert/CassandraConverter;)Lorg/springframework/data/cassandra/core/CassandraTemplate;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;Lcom/datastax/driver/core/Cluster;)V
+#cassandraMapping(Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/data/cassandra/core/convert/CassandraCustomConversions;)Lorg/springframework/data/cassandra/core/mapping/CassandraMappingContext;
+#cassandraSession(Lorg/springframework/core/env/Environment;Lorg/springframework/data/cassandra/core/convert/CassandraConverter;)Lorg/springframework/data/cassandra/config/CassandraSessionFactoryBean;
-#<init>(Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;Lcom/datastax/driver/core/Cluster;Lorg/springframework/core/env/Environment;)V
-#cassandraMapping(Lorg/springframework/data/cassandra/core/convert/CassandraCustomConversions;)Lorg/springframework/data/cassandra/core/mapping/CassandraMappingContext;
-#cassandraSession(Lorg/springframework/data/cassandra/core/convert/CassandraConverter;)Lorg/springframework/data/cassandra/config/CassandraSessionFactoryBean;
@2.3.0.RELEASE
+#<init>(Lcom/datastax/oss/driver/api/core/CqlSession;)V
+#cassandraSessionFactory(Lorg/springframework/core/env/Environment;Lorg/springframework/data/cassandra/core/convert/CassandraConverter;)Lorg/springframework/data/cassandra/config/SessionFactoryFactoryBean;
+#cassandraTemplate(Lorg/springframework/data/cassandra/SessionFactory;Lorg/springframework/data/cassandra/core/convert/CassandraConverter;)Lorg/springframework/data/cassandra/core/CassandraTemplate;
-#<init>(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;Lcom/datastax/driver/core/Cluster;)V
-#cassandraSession(Lorg/springframework/core/env/Environment;Lorg/springframework/data/cassandra/core/convert/CassandraConverter;)Lorg/springframework/data/cassandra/config/CassandraSessionFactoryBean;
-#cassandraTemplate(Lcom/datastax/driver/core/Session;Lorg/springframework/data/cassandra/core/convert/CassandraConverter;)Lorg/springframework/data/cassandra/core/CassandraTemplate;
@3.0.0
+#cassandraManagedTypes(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/data/cassandra/CassandraManagedTypes;
+#cassandraMappingContext(Lorg/springframework/data/cassandra/CassandraManagedTypes;Lorg/springframework/data/cassandra/core/convert/CassandraCustomConversions;)Lorg/springframework/data/cassandra/core/mapping/CassandraMappingContext;
-#cassandraMapping(Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/data/cassandra/core/convert/CassandraCustomConversions;)Lorg/springframework/data/cassandra/core/mapping/CassandraMappingContext;

+###org/springframework/boot/autoconfigure/data/cassandra/CassandraReactiveRepositoriesAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveRestClientProperties
@2.2.0.RELEASE
+#<init>()V
+#getEndpoints()Ljava/util/List;
+#setEndpoints(Ljava/util/List;)V
+#isUseSsl()Z
+#setUseSsl(Z)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getConnectionTimeout()Ljava/time/Duration;
+#setConnectionTimeout(Ljava/time/Duration;)V
+#getSocketTimeout()Ljava/time/Duration;
+#setSocketTimeout(Ljava/time/Duration;)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveRestClientProperties

+###org/springframework/boot/autoconfigure/orm/jpa/HibernateSettings
@2.0.0.RELEASE
+#<init>()V
+#ddlAuto(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;
+#getDdlAuto()Ljava/lang/String;
+#implicitNamingStrategy(Lorg/hibernate/boot/model/naming/ImplicitNamingStrategy;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;
+#getImplicitNamingStrategy()Lorg/hibernate/boot/model/naming/ImplicitNamingStrategy;
+#physicalNamingStrategy(Lorg/hibernate/boot/model/naming/PhysicalNamingStrategy;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;
+#getPhysicalNamingStrategy()Lorg/hibernate/boot/model/naming/PhysicalNamingStrategy;
+#hibernatePropertiesCustomizers(Ljava/util/Collection;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;
+#getHibernatePropertiesCustomizers()Ljava/util/Collection;
@2.0.1.RELEASE
+#ddlAuto(Ljava/util/function/Supplier;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;
*#ddlAuto(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;[deprecated]
@2.0.2.RELEASE
-#implicitNamingStrategy(Lorg/hibernate/boot/model/naming/ImplicitNamingStrategy;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;
-#getImplicitNamingStrategy()Lorg/hibernate/boot/model/naming/ImplicitNamingStrategy;
-#physicalNamingStrategy(Lorg/hibernate/boot/model/naming/PhysicalNamingStrategy;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;
-#getPhysicalNamingStrategy()Lorg/hibernate/boot/model/naming/PhysicalNamingStrategy;
@2.1.0.RELEASE
-#ddlAuto(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;[deprecated]

+###org/springframework/boot/autoconfigure/jdbc/JndiDataSourceAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
+#dataSource(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)Ljavax/sql/DataSource;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>()V
+#dataSource(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;Lorg/springframework/context/ApplicationContext;)Ljavax/sql/DataSource;
-#<init>(Lorg/springframework/context/ApplicationContext;)V
-#dataSource(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)Ljavax/sql/DataSource;

+###org/springframework/boot/autoconfigure/jdbc/DataSourceSchemaCreatedEvent
@2.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
@2.7.0
-###org/springframework/boot/autoconfigure/jdbc/DataSourceSchemaCreatedEvent

+###org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration
@1.5.3.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/websocket/reactive/WebSocketReactiveAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/mail/MailSenderAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
+#mailSender()Lorg/springframework/mail/javamail/JavaMailSender;
@1.3.0.RELEASE
+#mailSender()Lorg/springframework/mail/javamail/JavaMailSenderImpl;
-#mailSender()Lorg/springframework/mail/javamail/JavaMailSender;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mail/MailProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>()V
@1.5.14.RELEASE
+#<init>()V
-#<init>(Lorg/springframework/boot/autoconfigure/mail/MailProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#mailSender()Lorg/springframework/mail/javamail/JavaMailSenderImpl;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mail/MailProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
+#mailSender()Lorg/springframework/mail/javamail/JavaMailSenderImpl;
-#<init>()V
@2.0.3.RELEASE
+#<init>()V
-#<init>(Lorg/springframework/boot/autoconfigure/mail/MailProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#mailSender()Lorg/springframework/mail/javamail/JavaMailSenderImpl;

+###org/springframework/boot/autoconfigure/freemarker/FreeMarkerTemplateAvailabilityProvider$FreeMarkerTemplateAvailabilityProperties
@2.2.0.RELEASE
+#getTemplateLoaderPath()Ljava/util/List;
+#setTemplateLoaderPath(Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Listener$Type;

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Ssl
@1.5.0.RELEASE
+#<init>()V
+#getKeyPassword()Ljava/lang/String;
+#setKeyPassword(Ljava/lang/String;)V
+#getKeystoreLocation()Lorg/springframework/core/io/Resource;
+#setKeystoreLocation(Lorg/springframework/core/io/Resource;)V
+#getKeystorePassword()Ljava/lang/String;
+#setKeystorePassword(Ljava/lang/String;)V
+#getTruststoreLocation()Lorg/springframework/core/io/Resource;
+#setTruststoreLocation(Lorg/springframework/core/io/Resource;)V
+#getTruststorePassword()Ljava/lang/String;
+#setTruststorePassword(Ljava/lang/String;)V
@2.0.2.RELEASE
+#getKeyStoreType()Ljava/lang/String;
+#setKeyStoreType(Ljava/lang/String;)V
+#getTrustStoreType()Ljava/lang/String;
+#setTrustStoreType(Ljava/lang/String;)V
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
+#buildProperties()Ljava/util/Map;
@2.1.0.RELEASE
+#getKeyStoreLocation()Lorg/springframework/core/io/Resource;
+#setKeyStoreLocation(Lorg/springframework/core/io/Resource;)V
+#getKeyStorePassword()Ljava/lang/String;
+#setKeyStorePassword(Ljava/lang/String;)V
+#getTrustStoreLocation()Lorg/springframework/core/io/Resource;
+#setTrustStoreLocation(Lorg/springframework/core/io/Resource;)V
+#getTrustStorePassword()Ljava/lang/String;
+#setTrustStorePassword(Ljava/lang/String;)V
-#getKeystoreLocation()Lorg/springframework/core/io/Resource;
-#setKeystoreLocation(Lorg/springframework/core/io/Resource;)V
-#getKeystorePassword()Ljava/lang/String;
-#setKeystorePassword(Ljava/lang/String;)V
-#getTruststoreLocation()Lorg/springframework/core/io/Resource;
-#setTruststoreLocation(Lorg/springframework/core/io/Resource;)V
-#getTruststorePassword()Ljava/lang/String;
-#setTruststorePassword(Ljava/lang/String;)V
@2.6.0
+#getKeyStoreCertificateChain()Ljava/lang/String;
+#setKeyStoreCertificateChain(Ljava/lang/String;)V
+#getKeyStoreKey()Ljava/lang/String;
+#setKeyStoreKey(Ljava/lang/String;)V
+#getTrustStoreCertificates()Ljava/lang/String;
+#setTrustStoreCertificates(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer
@1.5.0.RELEASE
+#<init>()V
+#configure(Lorg/springframework/kafka/config/ConcurrentKafkaListenerContainerFactory;Lorg/springframework/kafka/core/ConsumerFactory;)V
@2.6.0
+#setCommonErrorHandler(Lorg/springframework/kafka/listener/CommonErrorHandler;)V

+###org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration
@1.5.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties;)V
+#kafkaTemplate(Lorg/springframework/kafka/core/ProducerFactory;Lorg/springframework/kafka/support/ProducerListener;)Lorg/springframework/kafka/core/KafkaTemplate;
+#kafkaProducerListener()Lorg/springframework/kafka/support/ProducerListener;
+#kafkaConsumerFactory()Lorg/springframework/kafka/core/ConsumerFactory;
+#kafkaProducerFactory()Lorg/springframework/kafka/core/ProducerFactory;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
+#kafkaTransactionManager(Lorg/springframework/kafka/core/ProducerFactory;)Lorg/springframework/kafka/transaction/KafkaTransactionManager;
+#kafkaJaasInitializer()Lorg/springframework/kafka/security/jaas/KafkaJaasLoginModuleInitializer;
+#kafkaAdmin()Lorg/springframework/kafka/core/KafkaAdmin;
-#<init>(Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties;)V
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties;)V
+#kafkaTemplate(Lorg/springframework/kafka/core/ProducerFactory;Lorg/springframework/kafka/support/ProducerListener;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/KafkaTemplate;
-#<init>(Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#kafkaTemplate(Lorg/springframework/kafka/core/ProducerFactory;Lorg/springframework/kafka/support/ProducerListener;)Lorg/springframework/kafka/core/KafkaTemplate;
@2.3.0.RELEASE
+#kafkaConsumerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/ConsumerFactory;
+#kafkaProducerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/ProducerFactory;
-#kafkaConsumerFactory()Lorg/springframework/kafka/core/ConsumerFactory;
-#kafkaProducerFactory()Lorg/springframework/kafka/core/ProducerFactory;
@2.6.13
+#kafkaProducerListener()Lorg/springframework/kafka/support/LoggingProducerListener;
+#kafkaConsumerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/DefaultKafkaConsumerFactory;
+#kafkaProducerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/DefaultKafkaProducerFactory;
-#kafkaProducerListener()Lorg/springframework/kafka/support/ProducerListener;
-#kafkaConsumerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/ConsumerFactory;
-#kafkaProducerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/ProducerFactory;
@2.7.0
+#kafkaProducerListener()Lorg/springframework/kafka/support/ProducerListener;
+#kafkaConsumerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/ConsumerFactory;
+#kafkaProducerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/ProducerFactory;
+#kafkaRetryTopicConfiguration(Lorg/springframework/kafka/core/KafkaTemplate;)Lorg/springframework/kafka/retrytopic/RetryTopicConfiguration;
-#kafkaProducerListener()Lorg/springframework/kafka/support/LoggingProducerListener;
-#kafkaConsumerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/DefaultKafkaConsumerFactory;
-#kafkaProducerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/DefaultKafkaProducerFactory;
@2.7.5
+#kafkaProducerListener()Lorg/springframework/kafka/support/LoggingProducerListener;
+#kafkaConsumerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/DefaultKafkaConsumerFactory;
+#kafkaProducerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/DefaultKafkaProducerFactory;
-#kafkaProducerListener()Lorg/springframework/kafka/support/ProducerListener;
-#kafkaConsumerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/ConsumerFactory;
-#kafkaProducerFactory(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/kafka/core/ProducerFactory;

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Consumer
@1.5.0.RELEASE
+#<init>()V
+#getSsl()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Ssl;
+#getAutoCommitInterval()Ljava/lang/Integer;
+#setAutoCommitInterval(Ljava/lang/Integer;)V
+#getAutoOffsetReset()Ljava/lang/String;
+#setAutoOffsetReset(Ljava/lang/String;)V
+#getBootstrapServers()Ljava/util/List;
+#setBootstrapServers(Ljava/util/List;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getEnableAutoCommit()Ljava/lang/Boolean;
+#setEnableAutoCommit(Ljava/lang/Boolean;)V
+#getFetchMaxWait()Ljava/lang/Integer;
+#setFetchMaxWait(Ljava/lang/Integer;)V
+#getFetchMinSize()Ljava/lang/Integer;
+#setFetchMinSize(Ljava/lang/Integer;)V
+#getGroupId()Ljava/lang/String;
+#setGroupId(Ljava/lang/String;)V
+#getHeartbeatInterval()Ljava/lang/Integer;
+#setHeartbeatInterval(Ljava/lang/Integer;)V
+#getKeyDeserializer()Ljava/lang/Class;
+#setKeyDeserializer(Ljava/lang/Class;)V
+#getValueDeserializer()Ljava/lang/Class;
+#setValueDeserializer(Ljava/lang/Class;)V
+#getMaxPollRecords()Ljava/lang/Integer;
+#setMaxPollRecords(Ljava/lang/Integer;)V
+#buildProperties()Ljava/util/Map;
@2.0.0.RELEASE
+#getAutoCommitInterval()Ljava/time/Duration;
+#setAutoCommitInterval(Ljava/time/Duration;)V
+#getFetchMaxWait()Ljava/time/Duration;
+#setFetchMaxWait(Ljava/time/Duration;)V
+#getHeartbeatInterval()Ljava/time/Duration;
+#setHeartbeatInterval(Ljava/time/Duration;)V
+#getProperties()Ljava/util/Map;
-#getAutoCommitInterval()Ljava/lang/Integer;
-#setAutoCommitInterval(Ljava/lang/Integer;)V
-#getFetchMaxWait()Ljava/lang/Integer;
-#setFetchMaxWait(Ljava/lang/Integer;)V
-#getHeartbeatInterval()Ljava/lang/Integer;
-#setHeartbeatInterval(Ljava/lang/Integer;)V
@2.1.0.RELEASE
+#getFetchMinSize()Lorg/springframework/util/unit/DataSize;
+#setFetchMinSize(Lorg/springframework/util/unit/DataSize;)V
-#getFetchMinSize()Ljava/lang/Integer;
-#setFetchMinSize(Ljava/lang/Integer;)V
@2.2.0.RELEASE
+#getIsolationLevel()Lorg/apache/kafka/common/requests/IsolationLevel;
+#setIsolationLevel(Lorg/apache/kafka/common/requests/IsolationLevel;)V
@2.3.0.RELEASE
+#getSecurity()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Security;
+#getIsolationLevel()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$IsolationLevel;
+#setIsolationLevel(Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$IsolationLevel;)V
-#getIsolationLevel()Lorg/apache/kafka/common/requests/IsolationLevel;
-#setIsolationLevel(Lorg/apache/kafka/common/requests/IsolationLevel;)V

+###org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties
@1.3.0.RELEASE
+#<init>()V
+#getVersion()Ljava/lang/String;
+#setVersion(Ljava/lang/String;)V
+#getFeatures()Ljava/util/Set;
+#setFeatures(Ljava/util/Set;)V
@1.4.0.RELEASE
+#getStorage()Lorg/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties$Storage;
@2.7.0
-#getFeatures()Ljava/util/Set;
-#setFeatures(Ljava/util/Set;)V
@3.0.0
-###org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoProperties

+###org/springframework/boot/autoconfigure/gson/GsonProperties
@2.0.0.RELEASE
+#<init>()V
+#getGenerateNonExecutableJson()Ljava/lang/Boolean;
+#setGenerateNonExecutableJson(Ljava/lang/Boolean;)V
+#getExcludeFieldsWithoutExposeAnnotation()Ljava/lang/Boolean;
+#setExcludeFieldsWithoutExposeAnnotation(Ljava/lang/Boolean;)V
+#getSerializeNulls()Ljava/lang/Boolean;
+#setSerializeNulls(Ljava/lang/Boolean;)V
+#getEnableComplexMapKeySerialization()Ljava/lang/Boolean;
+#setEnableComplexMapKeySerialization(Ljava/lang/Boolean;)V
+#getDisableInnerClassSerialization()Ljava/lang/Boolean;
+#setDisableInnerClassSerialization(Ljava/lang/Boolean;)V
+#getLongSerializationPolicy()Lcom/google/gson/LongSerializationPolicy;
+#setLongSerializationPolicy(Lcom/google/gson/LongSerializationPolicy;)V
+#getFieldNamingPolicy()Lcom/google/gson/FieldNamingPolicy;
+#setFieldNamingPolicy(Lcom/google/gson/FieldNamingPolicy;)V
+#getPrettyPrinting()Ljava/lang/Boolean;
+#setPrettyPrinting(Ljava/lang/Boolean;)V
+#getLenient()Ljava/lang/Boolean;
+#setLenient(Ljava/lang/Boolean;)V
+#getDisableHtmlEscaping()Ljava/lang/Boolean;
+#setDisableHtmlEscaping(Ljava/lang/Boolean;)V
+#getDateFormat()Ljava/lang/String;
+#setDateFormat(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/liquibase/LiquibaseDataSource
@1.4.1.RELEASE

+###org/springframework/boot/autoconfigure/h2/H2ConsoleProperties$Settings
@1.4.0.RELEASE
+#<init>()V
+#isTrace()Z
+#setTrace(Z)V
+#isWebAllowOthers()Z
+#setWebAllowOthers(Z)V
@2.4.0
+#getWebAdminPassword()Ljava/lang/String;
+#setWebAdminPassword(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Endpoints$CouchbaseService
@2.0.2.RELEASE
+#<init>()V
+#getMinEndpoints()I
+#setMinEndpoints(I)V
+#getMaxEndpoints()I
+#setMaxEndpoints(I)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Endpoints$CouchbaseService

+###org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration
@1.5.0.RELEASE
+#<init>()V
+#propertySourcesPlaceholderConfigurer()Lorg/springframework/context/support/PropertySourcesPlaceholderConfigurer;

+###org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration
@1.5.0.RELEASE
+#<init>()V
+#messageSource()Lorg/springframework/context/MessageSource;
+#getBasename()Ljava/lang/String;
+#setBasename(Ljava/lang/String;)V
+#getEncoding()Ljava/nio/charset/Charset;
+#setEncoding(Ljava/nio/charset/Charset;)V
+#getCacheSeconds()I
+#setCacheSeconds(I)V
+#isFallbackToSystemLocale()Z
+#setFallbackToSystemLocale(Z)V
+#isAlwaysUseMessageFormat()Z
+#setAlwaysUseMessageFormat(Z)V
@2.0.0.RELEASE
+#messageSourceProperties()Lorg/springframework/boot/autoconfigure/context/MessageSourceProperties;
-#getBasename()Ljava/lang/String;
-#setBasename(Ljava/lang/String;)V
-#getEncoding()Ljava/nio/charset/Charset;
-#setEncoding(Ljava/nio/charset/Charset;)V
-#getCacheSeconds()I
-#setCacheSeconds(I)V
-#isFallbackToSystemLocale()Z
-#setFallbackToSystemLocale(Z)V
-#isAlwaysUseMessageFormat()Z
-#setAlwaysUseMessageFormat(Z)V
@2.1.0.RELEASE
+#messageSource(Lorg/springframework/boot/autoconfigure/context/MessageSourceProperties;)Lorg/springframework/context/MessageSource;
-#messageSource()Lorg/springframework/context/MessageSource;

+###org/springframework/boot/autoconfigure/hazelcast/HazelcastInstanceFactory
@1.3.0.RELEASE
+#<init>(Lorg/springframework/core/io/Resource;)V
+#<init>(Lcom/hazelcast/config/Config;)V
+#getHazelcastInstance()Lcom/hazelcast/core/HazelcastInstance;
@2.6.0
-###org/springframework/boot/autoconfigure/hazelcast/HazelcastInstanceFactory

+###org/springframework/boot/autoconfigure/hazelcast/HazelcastJpaDependencyAutoConfiguration
@1.3.2.RELEASE
+#<init>()V
+#hazelcastInstanceJpaDependencyPostProcessor()Lorg/springframework/boot/autoconfigure/hazelcast/HazelcastJpaDependencyAutoConfiguration$HazelcastInstanceJpaDependencyPostProcessor;
@2.2.0.RELEASE
-#hazelcastInstanceJpaDependencyPostProcessor()Lorg/springframework/boot/autoconfigure/hazelcast/HazelcastJpaDependencyAutoConfiguration$HazelcastInstanceJpaDependencyPostProcessor;

+###org/springframework/boot/autoconfigure/hazelcast/HazelcastProperties
@1.3.0.RELEASE
+#<init>()V
+#getConfig()Lorg/springframework/core/io/Resource;
+#setConfig(Lorg/springframework/core/io/Resource;)V
+#resolveConfigLocation()Lorg/springframework/core/io/Resource;

+###org/springframework/boot/autoconfigure/task/TaskExecutionProperties
@2.1.0.RELEASE
+#<init>()V
+#getPool()Lorg/springframework/boot/autoconfigure/task/TaskExecutionProperties$Pool;
+#getThreadNamePrefix()Ljava/lang/String;
+#setThreadNamePrefix(Ljava/lang/String;)V
@2.2.0.RELEASE
+#getShutdown()Lorg/springframework/boot/autoconfigure/task/TaskExecutionProperties$Shutdown;

+###org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
+#persistenceExceptionTranslationPostProcessor()Lorg/springframework/dao/annotation/PersistenceExceptionTranslationPostProcessor;
@1.5.3.RELEASE
+#persistenceExceptionTranslationPostProcessor(Lorg/springframework/core/env/Environment;)Lorg/springframework/dao/annotation/PersistenceExceptionTranslationPostProcessor;
-#persistenceExceptionTranslationPostProcessor()Lorg/springframework/dao/annotation/PersistenceExceptionTranslationPostProcessor;

+###org/springframework/boot/autoconfigure/cassandra/ClusterBuilderCustomizer
@1.5.0.RELEASE
+#customize(Lcom/datastax/driver/core/Cluster$Builder;)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/cassandra/ClusterBuilderCustomizer

+###org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties$Validation
@1.5.2.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getSchema()Lorg/springframework/core/io/Resource;
+#setSchema(Lorg/springframework/core/io/Resource;)V

+###org/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties
@1.4.0.RELEASE
+#<init>()V
+#getUris()Ljava/util/List;
+#setUris(Ljava/util/List;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getConnectionTimeout()I
+#setConnectionTimeout(I)V
+#getReadTimeout()I
+#setReadTimeout(I)V
+#getProxy()Lorg/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties$Proxy;
@1.5.0.RELEASE
+#isMultiThreaded()Z
+#setMultiThreaded(Z)V
@2.0.0.RELEASE
+#getConnectionTimeout()Ljava/time/Duration;
+#setConnectionTimeout(Ljava/time/Duration;)V
+#getReadTimeout()Ljava/time/Duration;
+#setReadTimeout(Ljava/time/Duration;)V
-#getConnectionTimeout()I
-#setConnectionTimeout(I)V
-#getReadTimeout()I
-#setReadTimeout(I)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties

+###org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientProperties
@2.1.0.RELEASE
+#<init>()V
+#getUris()Ljava/util/List;
+#setUris(Ljava/util/List;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
@2.2.0.RELEASE
+#getConnectionTimeout()Ljava/time/Duration;
+#setConnectionTimeout(Ljava/time/Duration;)V
+#getReadTimeout()Ljava/time/Duration;
+#setReadTimeout(Ljava/time/Duration;)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientProperties

+###org/springframework/boot/autoconfigure/jackson/JacksonProperties
@1.2.0.RELEASE
+#<init>()V
+#getDateFormat()Ljava/lang/String;
+#setDateFormat(Ljava/lang/String;)V
+#getPropertyNamingStrategy()Ljava/lang/String;
+#setPropertyNamingStrategy(Ljava/lang/String;)V
+#getSerialization()Ljava/util/Map;
+#getDeserialization()Ljava/util/Map;
+#getMapper()Ljava/util/Map;
+#getParser()Ljava/util/Map;
+#getGenerator()Ljava/util/Map;
@1.2.2.RELEASE
+#getJodaDateTimeFormat()Ljava/lang/String;
+#setJodaDateTimeFormat(Ljava/lang/String;)V
@1.3.0.RELEASE
+#getSerializationInclusion()Lcom/fasterxml/jackson/annotation/JsonInclude$Include;
+#setSerializationInclusion(Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)V
+#getTimeZone()Ljava/util/TimeZone;
+#setTimeZone(Ljava/util/TimeZone;)V
+#getLocale()Ljava/util/Locale;
+#setLocale(Ljava/util/Locale;)V
@1.4.0.RELEASE
*#getSerializationInclusion()Lcom/fasterxml/jackson/annotation/JsonInclude$Include;[deprecated]
*#setSerializationInclusion(Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)V[deprecated]
+#getDefaultPropertyInclusion()Lcom/fasterxml/jackson/annotation/JsonInclude$Include;
+#setDefaultPropertyInclusion(Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)V
@1.5.0.RELEASE
-#getSerializationInclusion()Lcom/fasterxml/jackson/annotation/JsonInclude$Include;[deprecated]
-#setSerializationInclusion(Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)V[deprecated]
@2.1.0.RELEASE
+#getVisibility()Ljava/util/Map;
@2.2.0.RELEASE
*#getJodaDateTimeFormat()Ljava/lang/String;[deprecated]
@2.2.7.RELEASE
*#setJodaDateTimeFormat(Ljava/lang/String;)V[deprecated]
@2.3.0.RELEASE
-#getJodaDateTimeFormat()Ljava/lang/String;[deprecated]
-#setJodaDateTimeFormat(Ljava/lang/String;)V[deprecated]
@2.6.0
+#getDefaultLeniency()Ljava/lang/Boolean;
+#setDefaultLeniency(Ljava/lang/Boolean;)V
+#getConstructorDetector()Lorg/springframework/boot/autoconfigure/jackson/JacksonProperties$ConstructorDetectorStrategy;
+#setConstructorDetector(Lorg/springframework/boot/autoconfigure/jackson/JacksonProperties$ConstructorDetectorStrategy;)V

+###org/springframework/boot/autoconfigure/batch/BatchProperties
@1.2.0.RELEASE
+#<init>()V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#getInitializer()Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Initializer;
+#getJob()Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Job;
@1.3.0.RELEASE
+#setTablePrefix(Ljava/lang/String;)V
+#getTablePrefix()Ljava/lang/String;
@2.0.0.RELEASE
+#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
+#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V
-#getInitializer()Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Initializer;
@2.5.0
*#getSchema()Ljava/lang/String;[deprecated]
*#setSchema(Ljava/lang/String;)V[deprecated]
*#getTablePrefix()Ljava/lang/String;[deprecated]
*#setTablePrefix(Ljava/lang/String;)V[deprecated]
*#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;[deprecated]
*#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V[deprecated]
+#getJdbc()Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Jdbc;
@2.6.0
+#getInitializeSchema()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;[deprecated]
+#setInitializeSchema(Lorg/springframework/boot/sql/init/DatabaseInitializationMode;)V[deprecated]
-#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;[deprecated]
-#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V[deprecated]
@2.7.0
-#getSchema()Ljava/lang/String;[deprecated]
-#setSchema(Ljava/lang/String;)V[deprecated]
-#getTablePrefix()Ljava/lang/String;[deprecated]
-#setTablePrefix(Ljava/lang/String;)V[deprecated]
-#getInitializeSchema()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;[deprecated]
-#setInitializeSchema(Lorg/springframework/boot/sql/init/DatabaseInitializationMode;)V[deprecated]

+###org/springframework/boot/autoconfigure/batch/BatchProperties$Job
@1.2.0.RELEASE
+#<init>()V
+#getNames()Ljava/lang/String;
+#setNames(Ljava/lang/String;)V
@3.0.0
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
-#getNames()Ljava/lang/String;
-#setNames(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/batch/JpaBatchConfigurer
@2.0.0.RELEASE
@3.0.0
-###org/springframework/boot/autoconfigure/batch/JpaBatchConfigurer

+###org/springframework/boot/autoconfigure/condition/NoneNestedConditions
@1.3.0.RELEASE
+#<init>(Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;)V
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
@1.5.22.RELEASE
-#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
-#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
@2.0.0.RELEASE
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
+#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
@2.0.1.RELEASE
-#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
-#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;

+###org/springframework/boot/autoconfigure/http/HttpMessageConverters
@2.0.0.RELEASE
+#<init>([Lorg/springframework/http/converter/HttpMessageConverter;)V
+#<init>(Ljava/util/Collection;)V
+#<init>(ZLjava/util/Collection;)V
+#iterator()Ljava/util/Iterator;
+#getConverters()Ljava/util/List;

+###org/springframework/boot/autoconfigure/http/HttpProperties$Encoding$Type
@2.1.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/http/HttpProperties$Encoding$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/http/HttpProperties$Encoding$Type;
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/http/HttpProperties$Encoding$Type

+###org/springframework/boot/autoconfigure/session/JdbcSessionDataSourceInitializer
@2.0.0.RELEASE
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/session/JdbcSessionProperties;)V
@3.0.0
-###org/springframework/boot/autoconfigure/session/JdbcSessionDataSourceInitializer

+###org/springframework/boot/autoconfigure/session/SessionProperties
@1.4.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
+#getStoreType()Lorg/springframework/boot/autoconfigure/session/StoreType;
+#setStoreType(Lorg/springframework/boot/autoconfigure/session/StoreType;)V
+#getTimeout()Ljava/lang/Integer;
+#getHazelcast()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Hazelcast;
+#getJdbc()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Jdbc;
+#getMongo()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Mongo;
+#getRedis()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Redis;
@2.0.0.RELEASE
+#getTimeout()Ljava/time/Duration;
+#getServlet()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Servlet;
+#setServlet(Lorg/springframework/boot/autoconfigure/session/SessionProperties$Servlet;)V
-#getTimeout()Ljava/lang/Integer;
-#getHazelcast()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Hazelcast;
-#getJdbc()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Jdbc;
-#getMongo()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Mongo;
-#getRedis()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Redis;
@2.0.2.RELEASE
+#checkSessionTimeout()V
+#setTimeout(Ljava/time/Duration;)V
@2.2.0.RELEASE
+#<init>()V
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
@2.2.11.RELEASE
-#checkSessionTimeout()V
@2.3.0.RELEASE
+#checkSessionTimeout()V
@2.3.5.RELEASE
-#checkSessionTimeout()V
@2.4.0
+#determineTimeout(Ljava/util/function/Supplier;)Ljava/time/Duration;
@3.0.0
-#getStoreType()Lorg/springframework/boot/autoconfigure/session/StoreType;
-#setStoreType(Lorg/springframework/boot/autoconfigure/session/StoreType;)V

+###org/springframework/boot/autoconfigure/AutoConfigurationExcludeFilter
@1.5.0.RELEASE
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#match(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z

+###org/springframework/boot/autoconfigure/jersey/ResourceConfigCustomizer
@1.4.0.RELEASE
+#customize(Lorg/glassfish/jersey/server/ResourceConfig;)V

+###org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Mbeanregistry
@2.2.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/boot/autoconfigure/web/ConditionalOnEnabledResourceChain
@1.3.0.RELEASE

+###org/springframework/boot/autoconfigure/web/reactive/error/ErrorWebFluxAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/context/ApplicationContext;)V
+#errorWebExceptionHandler(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;)Lorg/springframework/boot/web/reactive/error/ErrorWebExceptionHandler;
+#errorAttributes()Lorg/springframework/boot/web/reactive/error/DefaultErrorAttributes;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#errorWebExceptionHandler(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/web/reactive/error/ErrorWebExceptionHandler;
-#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/context/ApplicationContext;)V
-#errorWebExceptionHandler(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;)Lorg/springframework/boot/web/reactive/error/ErrorWebExceptionHandler;
@2.4.0
+#errorWebExceptionHandler(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/web/reactive/error/ErrorWebExceptionHandler;
-#errorWebExceptionHandler(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/web/reactive/error/ErrorWebExceptionHandler;
@2.6.0
+#errorWebExceptionHandler(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/web/reactive/error/ErrorWebExceptionHandler;
-#errorWebExceptionHandler(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/web/reactive/error/ErrorWebExceptionHandler;

+###org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/ErrorProperties;Lorg/springframework/context/ApplicationContext;)V
@2.4.0
*#<init>(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/ErrorProperties;Lorg/springframework/context/ApplicationContext;)V[deprecated]
+#<init>(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources;Lorg/springframework/boot/autoconfigure/web/ErrorProperties;Lorg/springframework/context/ApplicationContext;)V
@2.6.0
-#<init>(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/ErrorProperties;Lorg/springframework/context/ApplicationContext;)V[deprecated]

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
@2.0.5.RELEASE
+#hiddenHttpMethodFilter()Lorg/springframework/boot/web/reactive/filter/OrderedHiddenHttpMethodFilter;

+###org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/reactive/server/ConfigurableReactiveWebServerFactory;)V
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties
@2.0.0.RELEASE
+#<init>()V
+#getDateFormat()Ljava/lang/String;
+#setDateFormat(Ljava/lang/String;)V
+#getStaticPathPattern()Ljava/lang/String;
+#setStaticPathPattern(Ljava/lang/String;)V
@2.3.0.RELEASE
+#getBasePath()Ljava/lang/String;
+#setBasePath(Ljava/lang/String;)V
*#getDateFormat()Ljava/lang/String;[deprecated]
*#setDateFormat(Ljava/lang/String;)V[deprecated]
+#getFormat()Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Format;
@2.5.0
+#getSession()Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Session;
-#getDateFormat()Ljava/lang/String;[deprecated]
-#setDateFormat(Ljava/lang/String;)V[deprecated]
@3.0.0
+#getProblemdetails()Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Problemdetails;
+#getWebjarsPathPattern()Ljava/lang/String;
+#setWebjarsPathPattern(Ljava/lang/String;)V
-#getSession()Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Session;

+###org/springframework/boot/autoconfigure/web/ResourceProperties$Fixed
@1.3.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getPaths()[Ljava/lang/String;
+#setPaths([Ljava/lang/String;)V
+#getVersion()Ljava/lang/String;
+#setVersion(Ljava/lang/String;)V
@2.4.0
-#setEnabled(Z)V
-#setPaths([Ljava/lang/String;)V
-#setVersion(Ljava/lang/String;)V
@2.6.0
-###org/springframework/boot/autoconfigure/web/ResourceProperties$Fixed

+###org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration
@2.0.0.RELEASE
+#<init>()V
+#jettyWebServerFactoryCustomizer(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer;

+###org/springframework/boot/autoconfigure/web/embedded/UndertowWebServerFactoryCustomizer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/embedded/undertow/ConfigurableUndertowWebServerFactory;)V
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#servletWebServerFactoryCustomizer(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer;
+#tomcatServletWebServerFactoryCustomizer(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/boot/autoconfigure/web/servlet/TomcatServletWebServerFactoryCustomizer;
@2.2.0.RELEASE
+#forwardedHeaderFilter()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
@2.4.0
+#servletWebServerFactoryCustomizer(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer;
-#servletWebServerFactoryCustomizer(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer;
@2.5.10
-#forwardedHeaderFilter()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
@2.6.0
+#servletWebServerFactoryCustomizer(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer;
+#forwardedHeaderFilter()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
-#servletWebServerFactoryCustomizer(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer;
@2.6.4
-#forwardedHeaderFilter()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;

+###org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar
@2.0.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V

+###org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
+#errorAttributes()Lorg/springframework/boot/web/servlet/error/DefaultErrorAttributes;
+#basicErrorController(Lorg/springframework/boot/web/servlet/error/ErrorAttributes;)Lorg/springframework/boot/autoconfigure/web/servlet/error/BasicErrorController;
+#errorPageCustomizer()Lorg/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorPageCustomizer;
+#preserveErrorControllerTargetClassPostProcessor()Lorg/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor;
@2.0.4.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/web/servlet/DispatcherServletPath;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#basicErrorController(Lorg/springframework/boot/web/servlet/error/ErrorAttributes;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/web/servlet/error/BasicErrorController;
+#errorPageCustomizer(Lorg/springframework/boot/autoconfigure/web/servlet/DispatcherServletPath;)Lorg/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorPageCustomizer;
-#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/web/servlet/DispatcherServletPath;Lorg/springframework/beans/factory/ObjectProvider;)V
-#basicErrorController(Lorg/springframework/boot/web/servlet/error/ErrorAttributes;)Lorg/springframework/boot/autoconfigure/web/servlet/error/BasicErrorController;
-#errorPageCustomizer()Lorg/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorPageCustomizer;

+###org/springframework/boot/autoconfigure/web/servlet/error/BasicErrorController
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/web/servlet/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ErrorProperties;)V
+#<init>(Lorg/springframework/boot/web/servlet/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ErrorProperties;Ljava/util/List;)V
+#getErrorPath()Ljava/lang/String;
+#errorHtml(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;
+#error(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;
@2.2.3.RELEASE
+#mediaTypeNotAcceptable(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;
@2.4.0
*#getErrorPath()Ljava/lang/String;[deprecated]
@2.5.0
-#getErrorPath()Ljava/lang/String;[deprecated]
@3.0.0
+#errorHtml(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;
+#error(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;
+#mediaTypeNotAcceptable(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;
-#errorHtml(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;
-#error(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;
-#mediaTypeNotAcceptable(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Async
@2.0.0.RELEASE
+#<init>()V
+#getRequestTimeout()Ljava/time/Duration;
+#setRequestTimeout(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties
@2.0.0.RELEASE
+#<init>()V
+#getMessageCodesResolverFormat()Lorg/springframework/validation/DefaultMessageCodesResolver$Format;
+#setMessageCodesResolverFormat(Lorg/springframework/validation/DefaultMessageCodesResolver$Format;)V
+#getLocale()Ljava/util/Locale;
+#setLocale(Ljava/util/Locale;)V
+#getLocaleResolver()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$LocaleResolver;
+#setLocaleResolver(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$LocaleResolver;)V
+#getDateFormat()Ljava/lang/String;
+#setDateFormat(Ljava/lang/String;)V
+#isIgnoreDefaultModelOnRedirect()Z
+#setIgnoreDefaultModelOnRedirect(Z)V
+#isThrowExceptionIfNoHandlerFound()Z
+#setThrowExceptionIfNoHandlerFound(Z)V
+#isLogResolvedException()Z
+#setLogResolvedException(Z)V
+#isDispatchOptionsRequest()Z
+#setDispatchOptionsRequest(Z)V
+#isDispatchTraceRequest()Z
+#setDispatchTraceRequest(Z)V
+#getStaticPathPattern()Ljava/lang/String;
+#setStaticPathPattern(Ljava/lang/String;)V
+#getAsync()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Async;
+#getServlet()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Servlet;
+#getView()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$View;
+#getContentnegotiation()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Contentnegotiation;
+#getPathmatch()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Pathmatch;
@2.2.0.RELEASE
+#isPublishRequestHandledEvents()Z
+#setPublishRequestHandledEvents(Z)V
@2.3.0.RELEASE
*#getDateFormat()Ljava/lang/String;[deprecated]
*#setDateFormat(Ljava/lang/String;)V[deprecated]
+#getFormat()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Format;
+#isLogRequestDetails()Z
+#setLogRequestDetails(Z)V
@2.4.0
*#getLocale()Ljava/util/Locale;[deprecated]
*#getLocaleResolver()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$LocaleResolver;[deprecated]
+#checkConfiguration()V
@2.6.0
-#getLocale()Ljava/util/Locale;[deprecated]
-#setLocale(Ljava/util/Locale;)V
-#getLocaleResolver()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$LocaleResolver;[deprecated]
-#setLocaleResolver(Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$LocaleResolver;)V
@3.0.0
*#isIgnoreDefaultModelOnRedirect()Z[deprecated]
*#setIgnoreDefaultModelOnRedirect(Z)V[deprecated]
+#getWebjarsPathPattern()Ljava/lang/String;
+#setWebjarsPathPattern(Ljava/lang/String;)V
+#getProblemdetails()Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Problemdetails;
-#getDateFormat()Ljava/lang/String;[deprecated]
-#setDateFormat(Ljava/lang/String;)V[deprecated]
-#checkConfiguration()V

+###org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedUndertow
@2.0.0.RELEASE
+#<init>()V
+#undertowServletWebServerFactory()Lorg/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory;
@2.1.12.RELEASE
-###org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedUndertow

+###org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/http/HttpEncodingProperties;)V
+#characterEncodingFilter()Lorg/springframework/web/filter/CharacterEncodingFilter;
+#localeCharsetMappingsCustomizer()Lorg/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer;
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/http/HttpProperties;)V
-#<init>(Lorg/springframework/boot/autoconfigure/http/HttpEncodingProperties;)V
@2.3.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
-#<init>(Lorg/springframework/boot/autoconfigure/http/HttpProperties;)V

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Contentnegotiation
@2.0.0.RELEASE
+#<init>()V
+#isFavorPathExtension()Z
+#setFavorPathExtension(Z)V
+#isFavorParameter()Z
+#setFavorParameter(Z)V
+#getMediaTypes()Ljava/util/Map;
+#setMediaTypes(Ljava/util/Map;)V
+#getParameterName()Ljava/lang/String;
+#setParameterName(Ljava/lang/String;)V
@2.2.6.RELEASE
*#isFavorPathExtension()Z[deprecated]
*#setFavorPathExtension(Z)V[deprecated]
@3.0.0
-#isFavorPathExtension()Z[deprecated]
-#setFavorPathExtension(Z)V[deprecated]

+###org/springframework/boot/autoconfigure/cache/CacheManagerCustomizer
@1.3.3.RELEASE
+#customize(Lorg/springframework/cache/CacheManager;)V

+###org/springframework/boot/autoconfigure/AutoConfigurationImportListener
@1.5.0.RELEASE
+#onAutoConfigurationImportEvent(Lorg/springframework/boot/autoconfigure/AutoConfigurationImportEvent;)V

+###org/springframework/boot/autoconfigure/logging/ConditionEvaluationReportMessage
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/condition/ConditionEvaluationReport;)V
+#toString()Ljava/lang/String;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/condition/ConditionEvaluationReport;Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration
@2.2.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAvailabilityProvider$GroovyTemplateAvailabilityProperties
@2.2.0.RELEASE
+#getResourceLoaderPath()Ljava/util/List;
+#setResourceLoaderPath(Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/template/PathBasedTemplateAvailabilityProvider
@1.4.6.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/template/PathBasedTemplateAvailabilityProvider

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationManagementConfiguration$EnableIntegrationManagementConfiguration
@1.5.0.RELEASE

+###org/springframework/boot/autoconfigure/security/rsocket/RSocketSecurityAutoConfiguration
@2.2.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Registration
@2.2.0.RELEASE
+#<init>()V
+#getSigning()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Registration$Signing;
@2.2.3.RELEASE
+#getIdentityprovider()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider;
@2.4.0
+#getEntityId()Ljava/lang/String;
+#setEntityId(Ljava/lang/String;)V
+#getAcs()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Registration$Acs;
+#getDecryption()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Decryption;
@2.7.0
+#getAssertingparty()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$AssertingParty;
+#getIdentityprovider()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$AssertingParty;[deprecated]
+#getSinglelogout()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Singlelogout;
-#getIdentityprovider()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider;
@3.0.0
-#getIdentityprovider()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$AssertingParty;[deprecated]

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Registration$Signing
@2.2.0.RELEASE
+#<init>()V
+#getCredentials()Ljava/util/List;
@2.4.0
+#setCredentials(Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/security/oauth2/client/ClientsConfiguredCondition
@2.1.0.RELEASE
+#<init>()V
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;

+###org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerProperties
@2.1.0.RELEASE
+#<init>()V
+#getJwt()Lorg/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerProperties$Jwt;
@2.2.0.RELEASE
+#getOpaquetoken()Lorg/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerProperties$Opaquetoken;
+#validate()V
@2.2.12.RELEASE
+#afterPropertiesSet()V
@2.3.0.RELEASE
-#afterPropertiesSet()V
-#validate()V

+###org/springframework/boot/autoconfigure/security/servlet/SecurityAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#authenticationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)Lorg/springframework/security/authentication/DefaultAuthenticationEventPublisher;

+###org/springframework/boot/autoconfigure/security/servlet/StaticResourceRequest$StaticResourceRequestMatcher
@2.0.0.RELEASE
+#excluding(Lorg/springframework/boot/autoconfigure/security/StaticResourceLocation;[Lorg/springframework/boot/autoconfigure/security/StaticResourceLocation;)Lorg/springframework/boot/autoconfigure/security/servlet/StaticResourceRequest$StaticResourceRequestMatcher;
+#excluding(Ljava/util/Set;)Lorg/springframework/boot/autoconfigure/security/servlet/StaticResourceRequest$StaticResourceRequestMatcher;

+###org/springframework/boot/autoconfigure/security/servlet/AntPathRequestMatcherProvider
@2.1.8.RELEASE
+#<init>(Ljava/util/function/Function;)V
+#getRequestMatcher(Ljava/lang/String;)Lorg/springframework/security/web/util/matcher/RequestMatcher;

+###org/springframework/boot/autoconfigure/security/servlet/PathRequest$H2ConsoleRequestMatcher
@2.0.0.RELEASE

+###org/springframework/boot/autoconfigure/security/servlet/StaticResourceRequest
@2.0.0.RELEASE
+#atCommonLocations()Lorg/springframework/boot/autoconfigure/security/servlet/StaticResourceRequest$StaticResourceRequestMatcher;
+#at(Lorg/springframework/boot/autoconfigure/security/StaticResourceLocation;[Lorg/springframework/boot/autoconfigure/security/StaticResourceLocation;)Lorg/springframework/boot/autoconfigure/security/servlet/StaticResourceRequest$StaticResourceRequestMatcher;
+#at(Ljava/util/Set;)Lorg/springframework/boot/autoconfigure/security/servlet/StaticResourceRequest$StaticResourceRequestMatcher;

+###org/springframework/boot/autoconfigure/mustache/MustacheAutoConfiguration
@1.2.2.RELEASE
+#<init>()V
+#checkTemplateLocationExists()V
+#mustacheCompiler(Lcom/samskivert/mustache/Mustache$TemplateLoader;)Lcom/samskivert/mustache/Mustache$Compiler;
+#mustacheTemplateLoader()Lorg/springframework/boot/autoconfigure/mustache/MustacheResourceTemplateLoader;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mustache/MustacheProperties;Lorg/springframework/core/env/Environment;Lorg/springframework/context/ApplicationContext;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mustache/MustacheProperties;Lorg/springframework/context/ApplicationContext;)V
+#mustacheCompiler(Lcom/samskivert/mustache/Mustache$TemplateLoader;Lorg/springframework/core/env/Environment;)Lcom/samskivert/mustache/Mustache$Compiler;
-#<init>(Lorg/springframework/boot/autoconfigure/mustache/MustacheProperties;Lorg/springframework/core/env/Environment;Lorg/springframework/context/ApplicationContext;)V
-#mustacheCompiler(Lcom/samskivert/mustache/Mustache$TemplateLoader;)Lcom/samskivert/mustache/Mustache$Compiler;
@2.7.0
+#mustacheCompiler(Lcom/samskivert/mustache/Mustache$TemplateLoader;)Lcom/samskivert/mustache/Mustache$Compiler;
-#mustacheCompiler(Lcom/samskivert/mustache/Mustache$TemplateLoader;Lorg/springframework/core/env/Environment;)Lcom/samskivert/mustache/Mustache$Compiler;

+###org/springframework/boot/autoconfigure/mustache/MustacheTemplateAvailabilityProvider
@1.2.2.RELEASE
+#<init>()V
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z

+###org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesAutoConfiguration
@2.1.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties$Embedded
@1.4.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
@2.4.0
-###org/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties$Embedded

+###org/springframework/boot/autoconfigure/data/couchbase/CouchbaseReactiveDataAutoConfiguration
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/redis/RedisProperties$Jedis
@2.0.0.RELEASE
+#<init>()V
+#getPool()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool;
+#setPool(Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool;)V
@2.6.0
-#setPool(Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool;)V

+###org/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool
@1.3.0.RELEASE
+#<init>()V
+#getMaxIdle()I
+#setMaxIdle(I)V
+#getMinIdle()I
+#setMinIdle(I)V
+#getMaxActive()I
+#setMaxActive(I)V
+#getMaxWait()I
+#setMaxWait(I)V
@2.0.0.RELEASE
+#getMaxWait()Ljava/time/Duration;
+#setMaxWait(Ljava/time/Duration;)V
-#getMaxWait()I
-#setMaxWait(I)V
@2.1.5.RELEASE
+#getTimeBetweenEvictionRuns()Ljava/time/Duration;
+#setTimeBetweenEvictionRuns(Ljava/time/Duration;)V
@2.6.0
+#getEnabled()Ljava/lang/Boolean;
+#setEnabled(Ljava/lang/Boolean;)V

+###org/springframework/boot/autoconfigure/data/redis/RedisProperties$Lettuce
@2.0.0.RELEASE
+#<init>()V
+#getShutdownTimeout()Ljava/time/Duration;
+#setShutdownTimeout(Ljava/time/Duration;)V
+#getPool()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool;
+#setPool(Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool;)V
@2.3.0.RELEASE
+#getCluster()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Lettuce$Cluster;
@2.6.0
-#setPool(Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Pool;)V

+###org/springframework/boot/autoconfigure/data/redis/RedisProperties$Sentinel
@1.3.0.RELEASE
+#<init>()V
+#getMaster()Ljava/lang/String;
+#setMaster(Ljava/lang/String;)V
+#getNodes()Ljava/lang/String;
+#setNodes(Ljava/lang/String;)V
@2.0.0.RELEASE
+#getNodes()Ljava/util/List;
+#setNodes(Ljava/util/List;)V
-#getNodes()Ljava/lang/String;
-#setNodes(Ljava/lang/String;)V
@2.3.0.RELEASE
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
@2.7.0
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#elasticsearchClient()Lorg/elasticsearch/client/Client;
+#destroy()V
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchProperties;)V
-#<init>()V
@2.0.0.RELEASE
+#elasticsearchClient()Lorg/elasticsearch/client/transport/TransportClient;
-#elasticsearchClient()Lorg/elasticsearch/client/Client;
-#destroy()V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchAutoConfiguration

+###org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveRestClientAutoConfiguration
@2.2.0.RELEASE
+#<init>()V
+#clientConfiguration(Lorg/springframework/boot/autoconfigure/data/elasticsearch/ReactiveRestClientProperties;)Lorg/springframework/data/elasticsearch/client/ClientConfiguration;
+#reactiveElasticsearchClient(Lorg/springframework/data/elasticsearch/client/ClientConfiguration;)Lorg/springframework/data/elasticsearch/client/reactive/ReactiveElasticsearchClient;
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveRestClientAutoConfiguration

+###org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchDataAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#elasticsearchTemplate(Lorg/elasticsearch/client/Client;)Lorg/springframework/data/elasticsearch/core/ElasticsearchTemplate;
@1.3.1.RELEASE
+#elasticsearchTemplate(Lorg/elasticsearch/client/Client;Lorg/springframework/data/elasticsearch/core/convert/ElasticsearchConverter;)Lorg/springframework/data/elasticsearch/core/ElasticsearchTemplate;
+#elasticsearchConverter(Lorg/springframework/data/elasticsearch/core/mapping/SimpleElasticsearchMappingContext;)Lorg/springframework/data/elasticsearch/core/convert/ElasticsearchConverter;
+#mappingContext()Lorg/springframework/data/elasticsearch/core/mapping/SimpleElasticsearchMappingContext;
-#elasticsearchTemplate(Lorg/elasticsearch/client/Client;)Lorg/springframework/data/elasticsearch/core/ElasticsearchTemplate;
@2.2.0.RELEASE
-#elasticsearchTemplate(Lorg/elasticsearch/client/Client;Lorg/springframework/data/elasticsearch/core/convert/ElasticsearchConverter;)Lorg/springframework/data/elasticsearch/core/ElasticsearchTemplate;
-#elasticsearchConverter(Lorg/springframework/data/elasticsearch/core/mapping/SimpleElasticsearchMappingContext;)Lorg/springframework/data/elasticsearch/core/convert/ElasticsearchConverter;
-#mappingContext()Lorg/springframework/data/elasticsearch/core/mapping/SimpleElasticsearchMappingContext;

+###org/springframework/boot/autoconfigure/data/web/SpringDataWebProperties$Pageable
@2.0.0.RELEASE
+#<init>()V
+#getPageParameter()Ljava/lang/String;
+#setPageParameter(Ljava/lang/String;)V
+#getSizeParameter()Ljava/lang/String;
+#setSizeParameter(Ljava/lang/String;)V
+#isOneIndexedParameters()Z
+#setOneIndexedParameters(Z)V
+#getPrefix()Ljava/lang/String;
+#setPrefix(Ljava/lang/String;)V
+#getQualifierDelimiter()Ljava/lang/String;
+#setQualifierDelimiter(Ljava/lang/String;)V
+#getDefaultPageSize()I
+#setDefaultPageSize(I)V
+#getMaxPageSize()I
+#setMaxPageSize(I)V

+###org/springframework/boot/autoconfigure/data/web/SpringDataWebProperties
@2.0.0.RELEASE
+#<init>()V
+#getPageable()Lorg/springframework/boot/autoconfigure/data/web/SpringDataWebProperties$Pageable;
+#getSort()Lorg/springframework/boot/autoconfigure/data/web/SpringDataWebProperties$Sort;

+###org/springframework/boot/autoconfigure/quartz/SchedulerFactoryBeanCustomizer
@2.0.0.RELEASE
+#customize(Lorg/springframework/scheduling/quartz/SchedulerFactoryBean;)V

+###org/springframework/boot/autoconfigure/quartz/QuartzProperties$Jdbc
@2.0.0.RELEASE
+#<init>()V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
+#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V
@2.0.3.RELEASE
+#getCommentPrefix()Ljava/lang/String;
+#setCommentPrefix(Ljava/lang/String;)V
@2.2.0.RELEASE
+#getCommentPrefix()Ljava/util/List;
+#setCommentPrefix(Ljava/util/List;)V
-#getCommentPrefix()Ljava/lang/String;
-#setCommentPrefix(Ljava/lang/String;)V
@2.5.8
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V
@2.6.0
+#getInitializeSchema()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
+#setInitializeSchema(Lorg/springframework/boot/sql/init/DatabaseInitializationMode;)V
-#getPlatform()Ljava/lang/String;
-#setPlatform(Ljava/lang/String;)V
-#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
-#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V
@2.6.2
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/quartz/QuartzProperties
@2.0.0.RELEASE
+#<init>()V
+#getJobStoreType()Lorg/springframework/boot/autoconfigure/quartz/JobStoreType;
+#setJobStoreType(Lorg/springframework/boot/autoconfigure/quartz/JobStoreType;)V
+#getProperties()Ljava/util/Map;
+#getJdbc()Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties$Jdbc;
@2.1.0.RELEASE
+#getSchedulerName()Ljava/lang/String;
+#setSchedulerName(Ljava/lang/String;)V
+#isAutoStartup()Z
+#setAutoStartup(Z)V
+#getStartupDelay()Ljava/time/Duration;
+#setStartupDelay(Ljava/time/Duration;)V
+#isWaitForJobsToCompleteOnShutdown()Z
+#setWaitForJobsToCompleteOnShutdown(Z)V
+#isOverwriteExistingJobs()Z
+#setOverwriteExistingJobs(Z)V

+###org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilderCustomizer
@2.1.0.RELEASE
+#customize(Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder;)V

+###org/springframework/boot/autoconfigure/jdbc/JdbcProperties$Template
@2.0.0.RELEASE
+#<init>()V
+#getFetchSize()I
+#setFetchSize(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#getQueryTimeout()Ljava/time/Duration;
+#setQueryTimeout(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizers
@1.5.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#customize(Lorg/springframework/transaction/PlatformTransactionManager;)V

+###org/springframework/boot/autoconfigure/transaction/jta/JtaAutoConfiguration
@1.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/influx/InfluxDbProperties
@2.0.0.RELEASE
+#<init>()V
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/mongo/MongoClientFactory
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;)V
+#createMongoClient(Lcom/mongodb/MongoClientOptions;)Lcom/mongodb/MongoClient;
@2.3.0.RELEASE
*#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;)V[deprecated]
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Ljava/util/List;)V
-#createMongoClient(Lcom/mongodb/MongoClientOptions;)Lcom/mongodb/MongoClient;
@2.4.0
*#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Ljava/util/List;)V[deprecated]
+#<init>(Ljava/util/List;)V
@2.5.0
-#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;)V[deprecated]
-#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;Ljava/util/List;)V[deprecated]

+###org/springframework/boot/autoconfigure/mongo/embedded/DownloadConfigBuilderCustomizer
@2.2.0.RELEASE
+#customize(Lde/flapdoodle/embed/mongo/config/DownloadConfigBuilder;)V
@2.5.0
+#customize(Lde/flapdoodle/embed/process/config/store/ImmutableDownloadConfig$Builder;)V
-#customize(Lde/flapdoodle/embed/mongo/config/DownloadConfigBuilder;)V
@3.0.0
-###org/springframework/boot/autoconfigure/mongo/embedded/DownloadConfigBuilderCustomizer

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Ssl
@1.4.0.RELEASE
+#<init>()V
+#getEnabled()Ljava/lang/Boolean;
+#setEnabled(Ljava/lang/Boolean;)V
+#getKeyStore()Ljava/lang/String;
+#setKeyStore(Ljava/lang/String;)V
+#getKeyStorePassword()Ljava/lang/String;
+#setKeyStorePassword(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration
@1.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/hazelcast/HazelcastClientFactory
@2.0.0.RELEASE
+#<init>(Lorg/springframework/core/io/Resource;)V
+#<init>(Lcom/hazelcast/client/config/ClientConfig;)V
+#getHazelcastInstance()Lcom/hazelcast/core/HazelcastInstance;
@2.6.0
-###org/springframework/boot/autoconfigure/hazelcast/HazelcastClientFactory

+###org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/task/TaskExecutionProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#taskExecutorBuilder()Lorg/springframework/boot/task/TaskExecutorBuilder;
+#applicationTaskExecutor(Lorg/springframework/boot/task/TaskExecutorBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
@2.2.0.RELEASE
+#<init>()V
+#taskExecutorBuilder(Lorg/springframework/boot/autoconfigure/task/TaskExecutionProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/task/TaskExecutorBuilder;
-#<init>(Lorg/springframework/boot/autoconfigure/task/TaskExecutionProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#taskExecutorBuilder()Lorg/springframework/boot/task/TaskExecutorBuilder;

+###org/springframework/boot/autoconfigure/task/TaskSchedulingProperties$Pool
@2.1.0.RELEASE
+#<init>()V
+#getSize()I
+#setSize(I)V

+###org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#cluster()Lcom/datastax/driver/core/Cluster;
+#instantiate(Ljava/lang/Class;)Ljava/lang/Object;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;)V
-#<init>()V
@1.5.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;)V
@2.0.0.RELEASE
+#cassandraCluster()Lcom/datastax/driver/core/Cluster;
-#cluster()Lcom/datastax/driver/core/Cluster;
-#instantiate(Ljava/lang/Class;)Ljava/lang/Object;
@2.2.0.RELEASE
+#<init>()V
+#cassandraCluster(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/datastax/driver/core/Cluster;
-#<init>(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#cassandraCluster()Lcom/datastax/driver/core/Cluster;
@2.3.0.RELEASE
+#cassandraSession(Lcom/datastax/oss/driver/api/core/CqlSessionBuilder;)Lcom/datastax/oss/driver/api/core/CqlSession;
+#cassandraSessionBuilder(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;Lcom/datastax/oss/driver/api/core/config/DriverConfigLoader;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/datastax/oss/driver/api/core/CqlSessionBuilder;
+#cassandraDriverConfigLoader(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/datastax/oss/driver/api/core/config/DriverConfigLoader;
-#cassandraCluster(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lcom/datastax/driver/core/Cluster;

+###org/springframework/boot/autoconfigure/domain/EntityScan
@1.4.0.RELEASE
+#value()[Ljava/lang/String;
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;

+###org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties$Credential
@1.5.2.RELEASE
+#<init>()V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/elasticsearch/jest/JestAutoConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
+#jestClient()Lio/searchbox/client/JestClient;
@1.5.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.2.0.RELEASE
+#<init>()V
+#jestClient(Lorg/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lio/searchbox/client/JestClient;
-#<init>(Lorg/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#jestClient()Lio/searchbox/client/JestClient;
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/jest/JestAutoConfiguration

+###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayNamedParameterJdbcOperationsDependencyConfiguration
@2.1.4.RELEASE
+#<init>()V
@2.5.0
-###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayNamedParameterJdbcOperationsDependencyConfiguration

+###org/springframework/boot/autoconfigure/condition/AbstractNestedCondition
@1.5.22.RELEASE
+#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/condition/AbstractNestedCondition

+###org/springframework/boot/autoconfigure/condition/ConditionalOnSingleCandidate
@1.3.0.RELEASE
+#value()Ljava/lang/Class;
+#type()Ljava/lang/String;
+#search()Lorg/springframework/boot/autoconfigure/condition/SearchStrategy;

+###org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication$Type
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication$Type;

+###org/springframework/boot/autoconfigure/condition/ConditionMessage$Style
@1.4.1.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$Style;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/condition/ConditionMessage$Style;
+#applyTo(Ljava/util/Collection;)Ljava/util/Collection;

+###org/springframework/boot/autoconfigure/condition/AbstractNestedCondition$MemberMatchOutcomes
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/condition/AbstractNestedCondition$MemberConditions;)V
+#getAll()Ljava/util/List;
+#getMatches()Ljava/util/List;
+#getNonMatches()Ljava/util/List;

+###org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration
@2.0.0.RELEASE
+#stringHttpMessageConverter()Lorg/springframework/http/converter/StringHttpMessageConverter;
@2.2.0.RELEASE
+#stringHttpMessageConverter(Lorg/springframework/boot/autoconfigure/http/HttpProperties;)Lorg/springframework/http/converter/StringHttpMessageConverter;
-#stringHttpMessageConverter()Lorg/springframework/http/converter/StringHttpMessageConverter;
@2.3.0.RELEASE
+#stringHttpMessageConverter(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/http/converter/StringHttpMessageConverter;
-#stringHttpMessageConverter(Lorg/springframework/boot/autoconfigure/http/HttpProperties;)Lorg/springframework/http/converter/StringHttpMessageConverter;
@2.3.1.RELEASE
+#stringHttpMessageConverter(Lorg/springframework/core/env/Environment;)Lorg/springframework/http/converter/StringHttpMessageConverter;
-#stringHttpMessageConverter(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/http/converter/StringHttpMessageConverter;

+###org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration
@2.0.0.RELEASE
+#mappingJackson2XmlHttpMessageConverter(Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;)Lorg/springframework/http/converter/xml/MappingJackson2XmlHttpMessageConverter;

+###org/springframework/boot/autoconfigure/http/HttpProperties
@2.1.0.RELEASE
+#<init>()V
+#isLogRequestDetails()Z
+#setLogRequestDetails(Z)V
+#getEncoding()Lorg/springframework/boot/autoconfigure/http/HttpProperties$Encoding;
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/http/HttpProperties

+###org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
+#messageConverters()Lorg/springframework/boot/autoconfigure/http/HttpMessageConverters;
@2.2.0.RELEASE
+#<init>()V
+#messageConverters(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/http/HttpMessageConverters;
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
-#messageConverters()Lorg/springframework/boot/autoconfigure/http/HttpMessageConverters;

+###org/springframework/boot/autoconfigure/jsonb/JsonbAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#jsonb()Ljavax/json/bind/Jsonb;
@3.0.0
+#jsonb()Ljakarta/json/bind/Jsonb;
-#jsonb()Ljavax/json/bind/Jsonb;

+###org/springframework/boot/autoconfigure/session/HazelcastSessionConfiguration$SpringBootHazelcastHttpSessionConfiguration
@1.4.0.RELEASE
+#<init>()V
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;)V
@2.0.0.RELEASE
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Lorg/springframework/boot/autoconfigure/session/HazelcastSessionProperties;)V
-#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;)V
@2.4.0
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Lorg/springframework/boot/autoconfigure/session/HazelcastSessionProperties;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
-#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Lorg/springframework/boot/autoconfigure/session/HazelcastSessionProperties;)V
@3.0.0
-###org/springframework/boot/autoconfigure/session/HazelcastSessionConfiguration$SpringBootHazelcastHttpSessionConfiguration

+###org/springframework/boot/autoconfigure/session/StoreType
@1.4.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/session/StoreType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/session/StoreType;
@3.0.0
-###org/springframework/boot/autoconfigure/session/StoreType

+###org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
+#path()V
+#requestContextFilter()Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
+#jerseyFilterRegistration()Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
+#jerseyServletRegistration()Lorg/springframework/boot/context/embedded/ServletRegistrationBean;
+#onStartup(Ljavax/servlet/ServletContext;)V
@1.3.1.RELEASE
-#onStartup(Ljavax/servlet/ServletContext;)V
@1.3.2.RELEASE
+#setServletContext(Ljavax/servlet/ServletContext;)V
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/jersey/JerseyProperties;Lorg/glassfish/jersey/server/ResourceConfig;Lorg/springframework/beans/factory/ObjectProvider;)V
+#requestContextFilter()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
+#jerseyFilterRegistration()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
+#jerseyServletRegistration()Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
-#<init>()V
-#requestContextFilter()Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
-#jerseyFilterRegistration()Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
-#jerseyServletRegistration()Lorg/springframework/boot/context/embedded/ServletRegistrationBean;
@2.0.7.RELEASE
+#jerseyApplicationPath()Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;
+#jerseyFilterRegistration(Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;)Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
+#jerseyServletRegistration(Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;)Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
-#jerseyFilterRegistration()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
-#jerseyServletRegistration()Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
@2.1.0.RELEASE
+#jerseyFilterRegistration()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
+#jerseyServletRegistration()Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
-#jerseyApplicationPath()Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;
-#jerseyFilterRegistration(Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;)Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
-#jerseyServletRegistration(Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;)Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
@2.1.1.RELEASE
+#jerseyApplicationPath()Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;
+#jerseyFilterRegistration(Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;)Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
+#jerseyServletRegistration(Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;)Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
-#requestContextFilter()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
-#jerseyFilterRegistration()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
-#jerseyServletRegistration()Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
@2.1.3.RELEASE
+#requestContextFilter()Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
@2.2.12.RELEASE
-#path()V
@2.3.0.RELEASE
+#path()V
@2.3.6.RELEASE
-#path()V
@3.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/boot/autoconfigure/web/ResourceProperties$Cache
@2.0.0.RELEASE
+#<init>()V
+#getPeriod()Ljava/time/Duration;
+#setPeriod(Ljava/time/Duration;)V
+#getCachecontrol()Lorg/springframework/boot/autoconfigure/web/ResourceProperties$Cache$Cachecontrol;
@2.4.0
+#isUseLastModified()Z
+#getCachecontrol()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Cache$Cachecontrol;
-#setPeriod(Ljava/time/Duration;)V
@2.6.0
-###org/springframework/boot/autoconfigure/web/ResourceProperties$Cache

+###org/springframework/boot/autoconfigure/web/ServerProperties$Netty
@2.1.10.RELEASE
+#<init>()V
+#getConnectionTimeout()Ljava/time/Duration;
+#setConnectionTimeout(Ljava/time/Duration;)V
@2.4.0
+#getH2cMaxContentLength()Lorg/springframework/util/unit/DataSize;
+#setH2cMaxContentLength(Lorg/springframework/util/unit/DataSize;)V
+#getInitialBufferSize()Lorg/springframework/util/unit/DataSize;
+#setInitialBufferSize(Lorg/springframework/util/unit/DataSize;)V
+#getMaxChunkSize()Lorg/springframework/util/unit/DataSize;
+#setMaxChunkSize(Lorg/springframework/util/unit/DataSize;)V
+#getMaxInitialLineLength()Lorg/springframework/util/unit/DataSize;
+#setMaxInitialLineLength(Lorg/springframework/util/unit/DataSize;)V
+#isValidateHeaders()Z
+#setValidateHeaders(Z)V
@2.6.0
+#getIdleTimeout()Ljava/time/Duration;
+#setIdleTimeout(Ljava/time/Duration;)V
@2.7.0
+#getMaxKeepAliveRequests()Ljava/lang/Integer;
+#setMaxKeepAliveRequests(Ljava/lang/Integer;)V
@3.0.0
*#getMaxChunkSize()Lorg/springframework/util/unit/DataSize;[deprecated]
*#setMaxChunkSize(Lorg/springframework/util/unit/DataSize;)V[deprecated]

+###org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#getOrder()I
+#customize(Lorg/springframework/boot/web/servlet/server/ConfigurableServletWebServerFactory;)V
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V
@2.4.0
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/web/servlet/JspTemplateAvailabilityProvider
@2.0.0.RELEASE
+#<init>()V
+#isTemplateAvailable(Ljava/lang/String;Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/core/io/ResourceLoader;)Z

+###org/springframework/boot/autoconfigure/web/servlet/DispatcherServletRegistrationBean
@2.0.4.RELEASE
+#<init>(Lorg/springframework/web/servlet/DispatcherServlet;Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setUrlMappings(Ljava/util/Collection;)V
+#addUrlMappings([Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/web/servlet/error/AbstractErrorController
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/web/servlet/error/ErrorAttributes;)V
+#<init>(Lorg/springframework/boot/web/servlet/error/ErrorAttributes;Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/web/servlet/error/DefaultErrorViewResolver
@2.0.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)V
+#resolveErrorView(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/http/HttpStatus;Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;
+#getOrder()I
+#setOrder(I)V
@2.4.0
*#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)V[deprecated]
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources;)V
@2.6.0
-#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)V[deprecated]
@3.0.0
+#resolveErrorView(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/http/HttpStatus;Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;
-#resolveErrorView(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/http/HttpStatus;Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#hiddenHttpMethodFilter()Lorg/springframework/boot/web/servlet/filter/OrderedHiddenHttpMethodFilter;
+#httpPutFormContentFilter()Lorg/springframework/boot/web/servlet/filter/OrderedHttpPutFormContentFilter;
@2.1.0.RELEASE
+#formContentFilter()Lorg/springframework/boot/web/servlet/filter/OrderedFormContentFilter;
-#httpPutFormContentFilter()Lorg/springframework/boot/web/servlet/filter/OrderedHttpPutFormContentFilter;

+###org/springframework/boot/autoconfigure/web/servlet/ConditionalOnMissingFilterBean
@2.1.0.RELEASE
+#value()[Ljava/lang/Class;

+###org/springframework/boot/autoconfigure/web/servlet/MultipartAutoConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/servlet/MultipartProperties;)V
+#multipartConfigElement()Ljavax/servlet/MultipartConfigElement;
+#multipartResolver()Lorg/springframework/web/multipart/support/StandardServletMultipartResolver;
@3.0.0
+#multipartConfigElement()Ljakarta/servlet/MultipartConfigElement;
-#multipartConfigElement()Ljavax/servlet/MultipartConfigElement;

+###org/springframework/boot/autoconfigure/web/servlet/DefaultJerseyApplicationPath
@2.1.3.RELEASE
+#<init>(Ljava/lang/String;Lorg/glassfish/jersey/server/ResourceConfig;)V
+#getPath()Ljava/lang/String;

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$LocaleResolver
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$LocaleResolver;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$LocaleResolver;
@2.6.0
-###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$LocaleResolver

+###org/springframework/boot/autoconfigure/AbstractDatabaseInitializer
@1.5.0.RELEASE
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/AbstractDatabaseInitializer

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration$CouchbaseConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/couchbase/CouchbaseProperties;)V
+#couchbaseEnvironment()Lcom/couchbase/client/java/env/DefaultCouchbaseEnvironment;
+#couchbaseCluster()Lcom/couchbase/client/java/Cluster;
+#couchbaseClusterInfo()Lcom/couchbase/client/java/cluster/ClusterInfo;
+#couchbaseClient()Lcom/couchbase/client/java/Bucket;
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration$CouchbaseConfiguration

+###org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadata
@1.2.0.RELEASE
+#getUsage()Ljava/lang/Float;
+#getActive()Ljava/lang/Integer;
+#getMax()Ljava/lang/Integer;
+#getMin()Ljava/lang/Integer;
+#getValidationQuery()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadata

+###org/springframework/boot/autoconfigure/jdbc/metadata/AbstractDataSourcePoolMetadata
@1.2.0.RELEASE
+#getUsage()Ljava/lang/Float;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/metadata/AbstractDataSourcePoolMetadata

+###org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProviders
@1.2.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#getDataSourcePoolMetadata(Ljavax/sql/DataSource;)Lorg/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadata;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProviders

+###org/springframework/boot/autoconfigure/jdbc/metadata/HikariDataSourcePoolMetadata
@1.2.0.RELEASE
+#<init>(Lcom/zaxxer/hikari/HikariDataSource;)V
+#getActive()Ljava/lang/Integer;
+#getMax()Ljava/lang/Integer;
+#getMin()Ljava/lang/Integer;
+#getValidationQuery()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/metadata/HikariDataSourcePoolMetadata

+###org/springframework/boot/autoconfigure/jdbc/metadata/CommonsDbcpDataSourcePoolMetadata
@1.2.0.RELEASE
+#<init>(Lorg/apache/commons/dbcp/BasicDataSource;)V
+#getActive()Ljava/lang/Integer;
+#getMax()Ljava/lang/Integer;
+#getMin()Ljava/lang/Integer;
+#getValidationQuery()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/metadata/CommonsDbcpDataSourcePoolMetadata

+###org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvider
@1.2.0.RELEASE
+#getDataSourcePoolMetadata(Ljavax/sql/DataSource;)Lorg/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadata;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvider

+###org/springframework/boot/autoconfigure/jdbc/metadata/TomcatDataSourcePoolMetadata
@1.2.0.RELEASE
+#<init>(Lorg/apache/tomcat/jdbc/pool/DataSource;)V
+#getActive()Ljava/lang/Integer;
+#getMax()Ljava/lang/Integer;
+#getMin()Ljava/lang/Integer;
+#getValidationQuery()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/metadata/TomcatDataSourcePoolMetadata

+###org/springframework/boot/autoconfigure/jdbc/metadata/CommonsDbcp2DataSourcePoolMetadata
@1.3.1.RELEASE
+#<init>(Lorg/apache/commons/dbcp2/BasicDataSource;)V
+#getActive()Ljava/lang/Integer;
+#getMax()Ljava/lang/Integer;
+#getMin()Ljava/lang/Integer;
+#getValidationQuery()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/metadata/CommonsDbcp2DataSourcePoolMetadata

+###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$TomcatDataSourceJmxConfiguration
@1.2.0.RELEASE
+#dataSourceMBean(Ljavax/sql/DataSource;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$TomcatDataSourceJmxConfiguration

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect
@1.4.0.RELEASE
+#java8TimeDialect()Lorg/thymeleaf/extras/java8time/dialect/Java8TimeDialect;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafResourceHandlingConfig
@1.3.0.RELEASE
+#resourceUrlEncodingFilter()Lorg/springframework/web/servlet/resource/ResourceUrlEncodingFilter;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafResourceHandlingConfig

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$DataAttributeDialectConfiguration
@1.2.0.RELEASE
+#dialect()Lcom/github/mxab/thymeleaf/extras/dataattribute/dialect/DataAttributeDialect;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$DataAttributeDialectConfiguration

+###org/springframework/boot/autoconfigure/websocket/JettyWebSocketContainerCustomizer
@1.2.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/websocket/JettyWebSocketContainerCustomizer

+###org/springframework/boot/autoconfigure/websocket/TomcatWebSocketContainerCustomizer
@1.2.0.RELEASE
+#<init>()V
+#doCustomize(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
+#doCustomize(Lorg/springframework/boot/context/embedded/EmbeddedServletContainerFactory;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/websocket/TomcatWebSocketContainerCustomizer

+###org/springframework/boot/autoconfigure/websocket/UndertowWebSocketContainerCustomizer
@1.2.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/websocket/UndertowWebSocketContainerCustomizer

+###org/springframework/boot/autoconfigure/websocket/WebSocketMessagingAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/websocket/WebSocketMessagingAutoConfiguration

+###org/springframework/boot/autoconfigure/websocket/WebSocketContainerCustomizer
@1.2.0.RELEASE
+#<init>()V
+#customize(Lorg/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainer;)V
@1.2.1.RELEASE
+#getOrder()I
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/websocket/WebSocketContainerCustomizer

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingJspViewResolverConfiguration
@1.4.0.RELEASE
+#deviceDelegatingJspViewResolver(Lorg/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverFactory;Lorg/springframework/web/servlet/view/InternalResourceViewResolver;)Lorg/springframework/mobile/device/view/LiteDeviceDelegatingViewResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingJspViewResolverConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingGroovyMarkupViewResolverConfiguration
@1.4.0.RELEASE
+#deviceDelegatingGroovyMarkupViewResolver(Lorg/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverFactory;Lorg/springframework/web/servlet/view/groovy/GroovyMarkupViewResolver;)Lorg/springframework/mobile/device/view/LiteDeviceDelegatingViewResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingGroovyMarkupViewResolverConfiguration

+###org/springframework/boot/autoconfigure/mobile/SitePreferenceAutoConfiguration$SitePreferenceMvcConfiguration
@1.2.0.RELEASE
+#sitePreferenceHandlerInterceptor()Lorg/springframework/mobile/device/site/SitePreferenceHandlerInterceptor;
+#sitePreferenceHandlerMethodArgumentResolver()Lorg/springframework/mobile/device/site/SitePreferenceHandlerMethodArgumentResolver;
+#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V
+#addArgumentResolvers(Ljava/util/List;)V
@1.4.0.RELEASE
-#sitePreferenceHandlerInterceptor()Lorg/springframework/mobile/device/site/SitePreferenceHandlerInterceptor;
-#sitePreferenceHandlerMethodArgumentResolver()Lorg/springframework/mobile/device/site/SitePreferenceHandlerMethodArgumentResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/SitePreferenceAutoConfiguration$SitePreferenceMvcConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceResolverAutoConfiguration$DeviceResolverMvcConfiguration
@1.2.0.RELEASE
+#deviceResolverHandlerInterceptor()Lorg/springframework/mobile/device/DeviceResolverHandlerInterceptor;
+#deviceHandlerMethodArgumentResolver()Lorg/springframework/mobile/device/DeviceHandlerMethodArgumentResolver;
+#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V
+#addArgumentResolvers(Ljava/util/List;)V
@1.4.0.RELEASE
-#deviceResolverHandlerInterceptor()Lorg/springframework/mobile/device/DeviceResolverHandlerInterceptor;
-#deviceHandlerMethodArgumentResolver()Lorg/springframework/mobile/device/DeviceHandlerMethodArgumentResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceResolverAutoConfiguration$DeviceResolverMvcConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingThymeleafViewResolverConfiguration
@1.4.0.RELEASE
+#deviceDelegatingThymeleafViewResolver(Lorg/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverFactory;Lorg/thymeleaf/spring4/view/ThymeleafViewResolver;)Lorg/springframework/mobile/device/view/LiteDeviceDelegatingViewResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingThymeleafViewResolverConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$LiteDeviceDelegatingViewResolverFactoryConfiguration
@1.4.0.RELEASE
+#deviceDelegatingViewResolverFactory(Lorg/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverProperties;)Lorg/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverFactory;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$LiteDeviceDelegatingViewResolverFactoryConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverFactory
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverProperties;)V
+#createViewResolver(Lorg/springframework/web/servlet/ViewResolver;I)Lorg/springframework/mobile/device/view/LiteDeviceDelegatingViewResolver;
+#createViewResolver(Lorg/springframework/web/servlet/ViewResolver;)Lorg/springframework/mobile/device/view/LiteDeviceDelegatingViewResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverFactory

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingMustacheViewResolverConfiguration
@1.4.0.RELEASE
+#deviceDelegatingMustacheViewResolver(Lorg/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverFactory;Lorg/springframework/boot/autoconfigure/mustache/web/MustacheViewResolver;)Lorg/springframework/mobile/device/view/LiteDeviceDelegatingViewResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingMustacheViewResolverConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingFreeMarkerViewResolverConfiguration
@1.4.0.RELEASE
+#deviceDelegatingFreeMarkerViewResolver(Lorg/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverFactory;Lorg/springframework/web/servlet/view/freemarker/FreeMarkerViewResolver;)Lorg/springframework/mobile/device/view/LiteDeviceDelegatingViewResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration$DeviceDelegatingFreeMarkerViewResolverConfiguration

+###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverProperties
@1.2.0.RELEASE
+#<init>()V
+#getNormalPrefix()Ljava/lang/String;
+#setNormalPrefix(Ljava/lang/String;)V
+#getNormalSuffix()Ljava/lang/String;
+#setNormalSuffix(Ljava/lang/String;)V
+#getMobilePrefix()Ljava/lang/String;
+#setMobilePrefix(Ljava/lang/String;)V
+#getMobileSuffix()Ljava/lang/String;
+#setMobileSuffix(Ljava/lang/String;)V
+#getTabletPrefix()Ljava/lang/String;
+#setTabletPrefix(Ljava/lang/String;)V
+#getTabletSuffix()Ljava/lang/String;
+#setTabletSuffix(Ljava/lang/String;)V
@1.3.0.RELEASE
+#setEnableFallback(Z)V
+#isEnableFallback()Z
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverProperties

+###org/springframework/boot/autoconfigure/batch/BatchProperties$Initializer
@1.2.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
@1.4.1.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/batch/BatchProperties;)V
-#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/batch/BatchProperties$Initializer

+###org/springframework/boot/autoconfigure/mustache/MustacheCompilerFactoryBean
@1.2.2.RELEASE
+#<init>()V
+#setDelims(Ljava/lang/String;)V
+#setTemplateLoader(Lcom/samskivert/mustache/Mustache$TemplateLoader;)V
+#setFormatter(Lcom/samskivert/mustache/Mustache$Formatter;)V
+#setEscaper(Lcom/samskivert/mustache/Mustache$Escaper;)V
+#setCollector(Lcom/samskivert/mustache/Mustache$Collector;)V
+#getObject()Lcom/samskivert/mustache/Mustache$Compiler;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@1.3.0.RELEASE
+#setDefaultValue(Ljava/lang/String;)V
+#setEmptyStringIsFalse(Ljava/lang/Boolean;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mustache/MustacheCompilerFactoryBean

+###org/springframework/boot/autoconfigure/mustache/MustacheAutoConfiguration$MustacheWebConfiguration
@1.2.2.RELEASE
+#mustacheViewResolver(Lcom/samskivert/mustache/Mustache$Compiler;)Lorg/springframework/boot/autoconfigure/mustache/web/MustacheViewResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mustache/MustacheAutoConfiguration$MustacheWebConfiguration

+###org/springframework/boot/autoconfigure/mustache/web/MustacheViewResolver
@1.2.2.RELEASE
+#<init>()V
+#setCompiler(Lcom/samskivert/mustache/Mustache$Compiler;)V
@1.2.3.RELEASE
+#setCharset(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mustache/web/MustacheViewResolver

+###org/springframework/boot/autoconfigure/mustache/web/MustacheView
@1.2.2.RELEASE
+#<init>(Lcom/samskivert/mustache/Template;)V
@1.2.5.RELEASE
+#<init>()V
+#setTemplate(Lcom/samskivert/mustache/Template;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/mustache/web/MustacheView

+###org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration$JndiConfiguration
@1.2.0.RELEASE
+#destinationResolver()Lorg/springframework/jms/support/destination/DestinationResolver;
@1.3.0.RELEASE
+#destinationResolver()Lorg/springframework/jms/support/destination/JndiDestinationResolver;
-#destinationResolver()Lorg/springframework/jms/support/destination/DestinationResolver;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration$JndiConfiguration

+###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties$Pool
@1.4.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getMaxConnections()I
+#setMaxConnections(I)V
+#getIdleTimeout()I
+#setIdleTimeout(I)V
+#getExpiryTimeout()J
+#setExpiryTimeout(J)V
@1.5.5.RELEASE
+#isBlockIfFull()Z
+#setBlockIfFull(Z)V
+#getBlockIfFullTimeout()J
+#setBlockIfFullTimeout(J)V
+#isCreateConnectionOnStartup()Z
+#setCreateConnectionOnStartup(Z)V
+#getMaximumActiveSessionPerConnection()I
+#setMaximumActiveSessionPerConnection(I)V
+#isReconnectOnException()Z
+#setReconnectOnException(Z)V
+#getTimeBetweenExpirationCheck()J
+#setTimeBetweenExpirationCheck(J)V
+#isUseAnonymousProducers()Z
+#setUseAnonymousProducers(Z)V
@2.0.0.RELEASE
+#getBlockIfFullTimeout()Ljava/time/Duration;
+#setBlockIfFullTimeout(Ljava/time/Duration;)V
+#getExpiryTimeout()Ljava/time/Duration;
+#setExpiryTimeout(Ljava/time/Duration;)V
+#getIdleTimeout()Ljava/time/Duration;
+#setIdleTimeout(Ljava/time/Duration;)V
+#getTimeBetweenExpirationCheck()Ljava/time/Duration;
+#setTimeBetweenExpirationCheck(Ljava/time/Duration;)V
-#getBlockIfFullTimeout()J
-#setBlockIfFullTimeout(J)V
-#getExpiryTimeout()J
-#setExpiryTimeout(J)V
-#getIdleTimeout()I
-#setIdleTimeout(I)V
-#getTimeBetweenExpirationCheck()J
-#setTimeBetweenExpirationCheck(J)V
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties$Pool

+###org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration$EnableJmsConfiguration
@1.2.0.RELEASE
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration$EnableJmsConfiguration

+###org/springframework/boot/autoconfigure/social/LinkedInProperties
@1.2.0.RELEASE
+#<init>()V
+#setAppSecret(Ljava/lang/String;)V
+#getAppSecret()Ljava/lang/String;
+#setAppId(Ljava/lang/String;)V
+#getAppId()Ljava/lang/String;
@1.4.0.RELEASE
-#setAppSecret(Ljava/lang/String;)V
-#getAppSecret()Ljava/lang/String;
-#setAppId(Ljava/lang/String;)V
-#getAppId()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/LinkedInProperties

+###org/springframework/boot/autoconfigure/social/TwitterProperties
@1.2.0.RELEASE
+#<init>()V
+#setAppSecret(Ljava/lang/String;)V
+#getAppSecret()Ljava/lang/String;
+#setAppId(Ljava/lang/String;)V
+#getAppId()Ljava/lang/String;
@1.4.0.RELEASE
-#setAppSecret(Ljava/lang/String;)V
-#getAppSecret()Ljava/lang/String;
-#setAppId(Ljava/lang/String;)V
-#getAppId()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/TwitterProperties

+###org/springframework/boot/autoconfigure/social/LinkedInAutoConfiguration$LinkedInConfigurerAdapter
@1.2.0.RELEASE
+#linkedin(Lorg/springframework/social/connect/ConnectionRepository;)Lorg/springframework/social/linkedin/api/LinkedIn;
+#linkedInConnectView()Lorg/springframework/web/servlet/View;
@1.3.0.RELEASE
+#linkedInConnectView()Lorg/springframework/social/connect/web/GenericConnectionStatusView;
-#linkedInConnectView()Lorg/springframework/web/servlet/View;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/LinkedInAutoConfiguration$LinkedInConfigurerAdapter

+###org/springframework/boot/autoconfigure/social/SocialProperties
@1.4.0.RELEASE
+#<init>()V
+#getAppId()Ljava/lang/String;
+#setAppId(Ljava/lang/String;)V
+#getAppSecret()Ljava/lang/String;
+#setAppSecret(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/SocialProperties

+###org/springframework/boot/autoconfigure/social/SocialAutoConfigurerAdapter
@1.4.0.RELEASE
+#<init>()V
+#addConnectionFactories(Lorg/springframework/social/config/annotation/ConnectionFactoryConfigurer;Lorg/springframework/core/env/Environment;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/SocialAutoConfigurerAdapter

+###org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration$FacebookConfigurerAdapter
@1.2.0.RELEASE
+#facebook(Lorg/springframework/social/connect/ConnectionRepository;)Lorg/springframework/social/facebook/api/Facebook;
+#facebookConnectView()Lorg/springframework/web/servlet/View;
@1.3.0.RELEASE
+#facebookConnectView()Lorg/springframework/social/connect/web/GenericConnectionStatusView;
-#facebookConnectView()Lorg/springframework/web/servlet/View;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration$FacebookConfigurerAdapter

+###org/springframework/boot/autoconfigure/social/FacebookProperties
@1.2.0.RELEASE
+#<init>()V
+#setAppSecret(Ljava/lang/String;)V
+#getAppSecret()Ljava/lang/String;
+#setAppId(Ljava/lang/String;)V
+#getAppId()Ljava/lang/String;
@1.4.0.RELEASE
-#setAppSecret(Ljava/lang/String;)V
-#getAppSecret()Ljava/lang/String;
-#setAppId(Ljava/lang/String;)V
-#getAppId()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/FacebookProperties

+###org/springframework/boot/autoconfigure/social/TwitterAutoConfiguration$TwitterConfigurerAdapter
@1.2.0.RELEASE
+#twitter(Lorg/springframework/social/connect/ConnectionRepository;)Lorg/springframework/social/twitter/api/Twitter;
+#twitterConnectView()Lorg/springframework/web/servlet/View;
@1.3.0.RELEASE
+#twitterConnectView()Lorg/springframework/social/connect/web/GenericConnectionStatusView;
-#twitterConnectView()Lorg/springframework/web/servlet/View;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/social/TwitterAutoConfiguration$TwitterConfigurerAdapter

+###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration$FlywayInitializerJpaDependencyConfiguration
@1.3.0.RELEASE
+#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration$FlywayInitializerJpaDependencyConfiguration

+###org/springframework/boot/autoconfigure/validation/DelegatingValidator
@1.5.3.RELEASE
+#<init>(Ljavax/validation/Validator;)V
+#<init>(Lorg/springframework/validation/Validator;)V
+#supports(Ljava/lang/Class;)Z
+#validate(Ljava/lang/Object;Lorg/springframework/validation/Errors;)V
+#validate(Ljava/lang/Object;Lorg/springframework/validation/Errors;[Ljava/lang/Object;)V
@1.5.4.RELEASE
-###org/springframework/boot/autoconfigure/validation/DelegatingValidator

+###org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration$Neo4jWebConfiguration$Neo4jWebMvcConfiguration
@1.5.0.RELEASE
+#neo4jOpenSessionInViewInterceptor()Lorg/springframework/data/neo4j/web/support/OpenSessionInViewInterceptor;
+#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration$Neo4jWebConfiguration$Neo4jWebMvcConfiguration

+###org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration$Neo4jWebConfiguration
@1.5.0.RELEASE
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration$Neo4jWebConfiguration

+###org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration
@1.3.0.RELEASE
+#redisConnectionFactory()Lorg/springframework/data/redis/connection/jedis/JedisConnectionFactory;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration

+###org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConfiguration
@1.3.0.RELEASE
+#redisTemplate(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/core/RedisTemplate;
+#stringRedisTemplate(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/core/StringRedisTemplate;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConfiguration

+###org/springframework/boot/autoconfigure/data/ldap/LdapDataAutoConfiguration
@1.5.0.RELEASE
+#<init>()V
+#ldapTemplate(Lorg/springframework/ldap/core/ContextSource;)Lorg/springframework/ldap/core/LdapTemplate;
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/data/ldap/LdapDataAutoConfiguration

+###org/springframework/boot/autoconfigure/security/BootGlobalAuthenticationConfiguration
@1.1.11.RELEASE
+#<init>()V
+#bootGlobalAuthenticationConfigurationAdapter(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/autoconfigure/security/BootGlobalAuthenticationConfiguration$BootGlobalAuthenticationConfigurationAdapter;
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/security/BootGlobalAuthenticationConfiguration

+###org/springframework/boot/autoconfigure/security/SecurityPrerequisite
@1.2.1.RELEASE
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SecurityPrerequisite

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoCustomConfiguration
@1.3.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setImportMetadata(Lorg/springframework/core/type/AnnotationMetadata;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@1.4.0.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoCustomConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration
@1.3.0.RELEASE
+#<init>()V
+#oauth2RestTemplate(Lorg/springframework/security/oauth2/client/OAuth2ClientContext;Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Lorg/springframework/security/oauth2/client/OAuth2RestTemplate;
@1.4.0.RELEASE
-#oauth2RestTemplate(Lorg/springframework/security/oauth2/client/OAuth2ClientContext;Lorg/springframework/security/oauth2/client/resource/OAuth2ProtectedResourceDetails;)Lorg/springframework/security/oauth2/client/OAuth2RestTemplate;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration$RequestScopedConfiguration
@1.3.0.RELEASE
+#oauth2ClientContext()Lorg/springframework/security/oauth2/client/DefaultOAuth2ClientContext;
@1.3.4.RELEASE
+#oauth2RemoteResource()Lorg/springframework/security/oauth2/client/token/grant/code/AuthorizationCodeResourceDetails;
@1.4.0.RELEASE
-#oauth2RemoteResource()Lorg/springframework/security/oauth2/client/token/grant/code/AuthorizationCodeResourceDetails;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration$RequestScopedConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration$SingletonScopedConfiguration
@1.3.0.RELEASE
+#oauth2RemoteResource()Lorg/springframework/security/oauth2/client/token/grant/client/ClientCredentialsResourceDetails;
+#oauth2ClientContext()Lorg/springframework/security/oauth2/client/DefaultOAuth2ClientContext;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration$SingletonScopedConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration$SessionScopedConfiguration
@1.3.0.RELEASE
+#oauth2ClientFilterRegistration(Lorg/springframework/security/oauth2/client/filter/OAuth2ClientContextFilter;)Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
@1.3.4.RELEASE
+#oauth2RemoteResource()Lorg/springframework/security/oauth2/client/token/grant/code/AuthorizationCodeResourceDetails;
+#oauth2ClientFilterRegistration(Lorg/springframework/security/oauth2/client/filter/OAuth2ClientContextFilter;Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
-#oauth2ClientFilterRegistration(Lorg/springframework/security/oauth2/client/filter/OAuth2ClientContextFilter;)Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
@1.4.0.RELEASE
+#oauth2ClientFilterRegistration(Lorg/springframework/security/oauth2/client/filter/OAuth2ClientContextFilter;Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Lorg/springframework/boot/web/servlet/FilterRegistrationBean;
-#oauth2RemoteResource()Lorg/springframework/security/oauth2/client/token/grant/code/AuthorizationCodeResourceDetails;
-#oauth2ClientFilterRegistration(Lorg/springframework/security/oauth2/client/filter/OAuth2ClientContextFilter;Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration$SessionScopedConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoDefaultConfiguration$NeedsWebSecurityCondition
@1.3.0.RELEASE
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoDefaultConfiguration$NeedsWebSecurityCondition

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoDefaultConfiguration
@1.3.0.RELEASE
+#<init>()V
+#getOrder()I
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoProperties;)V
-#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoDefaultConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/client/EnableOAuth2Sso
@1.3.0.RELEASE
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/EnableOAuth2Sso

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration$SessionScopedConfiguration$ClientContextConfiguration
@1.3.0.RELEASE
+#oauth2ClientContext()Lorg/springframework/security/oauth2/client/DefaultOAuth2ClientContext;
@1.5.5.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration$SessionScopedConfiguration$ClientContextConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoProperties
@1.3.0.RELEASE
+#<init>()V
+#getLoginPath()Ljava/lang/String;
+#setLoginPath(Ljava/lang/String;)V
+#getFilterOrder()Ljava/lang/Integer;
+#setFilterOrder(Ljava/lang/Integer;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoProperties

+###org/springframework/boot/autoconfigure/security/oauth2/OAuth2ClientProperties
@1.3.0.RELEASE
+#<init>()V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getClientSecret()Ljava/lang/String;
+#setClientSecret(Ljava/lang/String;)V
+#isDefaultSecret()Z
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/OAuth2ClientProperties

+###org/springframework/boot/autoconfigure/security/oauth2/method/OAuth2MethodSecurityConfiguration
@1.3.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/method/OAuth2MethodSecurityConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/authserver/OAuth2AuthorizationServerConfiguration
@1.3.0.RELEASE
+#<init>()V
+#configure(Lorg/springframework/security/oauth2/config/annotation/configurers/ClientDetailsServiceConfigurer;)V
+#configure(Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer;)V
+#configure(Lorg/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer;)V
@1.4.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/client/BaseClientDetails;Lorg/springframework/security/authentication/AuthenticationManager;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/boot/autoconfigure/security/oauth2/authserver/AuthorizationServerProperties;)V
-#<init>()V
@1.5.0.RELEASE
+#<init>(Lorg/springframework/security/oauth2/provider/client/BaseClientDetails;Lorg/springframework/security/authentication/AuthenticationManager;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/boot/autoconfigure/security/oauth2/authserver/AuthorizationServerProperties;)V
-#<init>(Lorg/springframework/security/oauth2/provider/client/BaseClientDetails;Lorg/springframework/security/authentication/AuthenticationManager;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/boot/autoconfigure/security/oauth2/authserver/AuthorizationServerProperties;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/authserver/OAuth2AuthorizationServerConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/authserver/AuthorizationServerProperties
@1.3.0.RELEASE
+#<init>()V
+#getCheckTokenAccess()Ljava/lang/String;
+#setCheckTokenAccess(Ljava/lang/String;)V
+#getTokenKeyAccess()Ljava/lang/String;
+#setTokenKeyAccess(Ljava/lang/String;)V
+#getRealm()Ljava/lang/String;
+#setRealm(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/authserver/AuthorizationServerProperties

+###org/springframework/boot/autoconfigure/security/oauth2/authserver/OAuth2AuthorizationServerConfiguration$BaseClientDetailsConfiguration
@1.3.0.RELEASE
+#oauth2ClientDetails()Lorg/springframework/security/oauth2/provider/client/BaseClientDetails;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/authserver/OAuth2AuthorizationServerConfiguration$BaseClientDetailsConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/authserver/OAuth2AuthorizationServerConfiguration$ClientDetailsLogger
@1.3.0.RELEASE
+#init()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/authserver/OAuth2AuthorizationServerConfiguration$ClientDetailsLogger

+###org/springframework/boot/autoconfigure/security/oauth2/OAuth2AutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#resourceServerProperties()Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/OAuth2ClientProperties;)V
-#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/OAuth2AutoConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoTokenServices
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setTokenType(Ljava/lang/String;)V
+#setRestTemplate(Lorg/springframework/security/oauth2/client/OAuth2RestOperations;)V
+#setAuthoritiesExtractor(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/AuthoritiesExtractor;)V
+#loadAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
@1.4.0.RELEASE
+#setPrincipalExtractor(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/PrincipalExtractor;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoTokenServices

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$RemoteTokenServicesConfiguration$UserInfoTokenServicesConfiguration
@1.3.0.RELEASE
+#userInfoTokenServices()Lorg/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoTokenServices;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;Lorg/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoRestTemplateFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$RemoteTokenServicesConfiguration$UserInfoTokenServicesConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$RemoteTokenServicesConfiguration
@1.3.0.RELEASE
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$RemoteTokenServicesConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractor
@1.3.0.RELEASE
+#<init>()V
+#extractAuthorities(Ljava/util/Map;)Ljava/util/List;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractor

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$RemoteTokenServicesConfiguration$TokenInfoServicesConfiguration
@1.3.0.RELEASE
+#remoteTokenServices()Lorg/springframework/security/oauth2/provider/token/RemoteTokenServices;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$RemoteTokenServicesConfiguration$TokenInfoServicesConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/resource/JwtAccessTokenConverterConfigurer
@1.3.0.RELEASE
+#configure(Lorg/springframework/security/oauth2/provider/token/store/JwtAccessTokenConverter;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/JwtAccessTokenConverterConfigurer

+###org/springframework/boot/autoconfigure/security/oauth2/resource/DefaultUserInfoRestTemplateFactory
@1.5.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#getUserInfoRestTemplate()Lorg/springframework/security/oauth2/client/OAuth2RestTemplate;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/DefaultUserInfoRestTemplateFactory

+###org/springframework/boot/autoconfigure/security/oauth2/resource/SpringSocialTokenServices
@1.3.0.RELEASE
+#<init>(Lorg/springframework/social/connect/support/OAuth2ConnectionFactory;Ljava/lang/String;)V
+#loadAuthentication(Ljava/lang/String;)Lorg/springframework/security/oauth2/provider/OAuth2Authentication;
+#readAccessToken(Ljava/lang/String;)Lorg/springframework/security/oauth2/common/OAuth2AccessToken;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/SpringSocialTokenServices

+###org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerConfiguration$ResourceServerCondition
@1.3.0.RELEASE
+#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerConfiguration$ResourceServerCondition

+###org/springframework/boot/autoconfigure/security/oauth2/resource/FixedPrincipalExtractor
@1.4.0.RELEASE
+#<init>()V
+#extractPrincipal(Ljava/util/Map;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/FixedPrincipalExtractor

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration
@1.3.0.RELEASE
+#jwtTokenServices()Lorg/springframework/security/oauth2/provider/token/DefaultTokenServices;
+#jwtTokenStore()Lorg/springframework/security/oauth2/provider/token/TokenStore;
+#jwtTokenEnhancer()Lorg/springframework/security/oauth2/provider/token/store/JwtAccessTokenConverter;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
@1.5.2.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
@1.5.5.RELEASE
+#jwtTokenServices(Lorg/springframework/security/oauth2/provider/token/TokenStore;)Lorg/springframework/security/oauth2/provider/token/DefaultTokenServices;
-#jwtTokenServices()Lorg/springframework/security/oauth2/provider/token/DefaultTokenServices;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties
@1.3.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#getResourceId()Ljava/lang/String;
+#getServiceId()Ljava/lang/String;
+#setServiceId(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getUserInfoUri()Ljava/lang/String;
+#setUserInfoUri(Ljava/lang/String;)V
+#getTokenInfoUri()Ljava/lang/String;
+#setTokenInfoUri(Ljava/lang/String;)V
+#isPreferTokenInfo()Z
+#setPreferTokenInfo(Z)V
+#getTokenType()Ljava/lang/String;
+#setTokenType(Ljava/lang/String;)V
+#getJwt()Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties$Jwt;
+#setJwt(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties$Jwt;)V
+#getClientId()Ljava/lang/String;
+#getClientSecret()Ljava/lang/String;
+#supports(Ljava/lang/Class;)Z
+#validate(Ljava/lang/Object;Lorg/springframework/validation/Errors;)V
@1.5.0.RELEASE
+#getFilterOrder()I
+#setFilterOrder(I)V
@1.5.2.RELEASE
+#getJwk()Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties$Jwk;
+#setJwk(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties$Jwk;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties$Jwk
@1.5.2.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;)V
+#getKeySetUri()Ljava/lang/String;
+#setKeySetUri(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties$Jwk

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration
@1.3.0.RELEASE
+#<init>()V
@1.4.0.RELEASE
+#userInfoRestTemplateFactory(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoRestTemplateFactory;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties$Jwt
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;)V
+#getKeyValue()Ljava/lang/String;
+#setKeyValue(Ljava/lang/String;)V
+#setKeyUri(Ljava/lang/String;)V
+#getKeyUri()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties$Jwt

+###org/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoRestTemplateFactory
@1.4.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#getUserInfoRestTemplate()Lorg/springframework/security/oauth2/client/OAuth2RestTemplate;
@1.5.0.RELEASE
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoRestTemplateFactory

+###org/springframework/boot/autoconfigure/security/oauth2/resource/PrincipalExtractor
@1.4.0.RELEASE
+#extractPrincipal(Ljava/util/Map;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/PrincipalExtractor

+###org/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoRestTemplateCustomizer
@1.3.0.RELEASE
+#customize(Lorg/springframework/security/oauth2/client/OAuth2RestTemplate;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoRestTemplateCustomizer

+###org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerConfiguration
@1.3.0.RELEASE
+#<init>()V
+#resourceServer()Lorg/springframework/security/oauth2/config/annotation/web/configuration/ResourceServerConfigurer;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;)V
-#<init>()V
@1.5.0.RELEASE
+#resourceServerFilterChainOrderProcessor(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;)Lorg/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerConfiguration$ResourceServerFilterChainOrderProcessor;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerConfiguration$ResourceSecurityConfigurer
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;)V
+#configure(Lorg/springframework/security/oauth2/config/annotation/web/configurers/ResourceServerSecurityConfigurer;)V
+#configure(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerConfiguration$ResourceSecurityConfigurer

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$RemoteTokenServicesConfiguration$SocialTokenServicesConfiguration
@1.3.0.RELEASE
+#socialTokenServices()Lorg/springframework/boot/autoconfigure/security/oauth2/resource/SpringSocialTokenServices;
+#userInfoTokenServices()Lorg/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoTokenServices;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoRestTemplateFactory;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$RemoteTokenServicesConfiguration$SocialTokenServicesConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/resource/JwtAccessTokenConverterRestTemplateCustomizer
@1.5.2.RELEASE
+#customize(Lorg/springframework/web/client/RestTemplate;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/JwtAccessTokenConverterRestTemplateCustomizer

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwkTokenStoreConfiguration
@1.5.2.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties;)V
+#jwkTokenServices()Lorg/springframework/security/oauth2/provider/token/DefaultTokenServices;
+#jwkTokenStore()Lorg/springframework/security/oauth2/provider/token/TokenStore;
@1.5.5.RELEASE
+#jwkTokenServices(Lorg/springframework/security/oauth2/provider/token/TokenStore;)Lorg/springframework/security/oauth2/provider/token/DefaultTokenServices;
-#jwkTokenServices()Lorg/springframework/security/oauth2/provider/token/DefaultTokenServices;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwkTokenStoreConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/resource/AuthoritiesExtractor
@1.3.0.RELEASE
+#extractAuthorities(Ljava/util/Map;)Ljava/util/List;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/AuthoritiesExtractor

+###org/springframework/boot/autoconfigure/security/Http401AuthenticationEntryPoint
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/Http401AuthenticationEntryPoint

+###org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration$AuthenticationManagerConfigurationListener
@1.1.7.RELEASE
+#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.2.0.RELEASE
+#afterSingletonsInstantiated()V
-#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
-#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration$AuthenticationManagerConfigurationListener

+###org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#securityFilterChainRegistration(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Lorg/springframework/boot/context/embedded/DelegatingFilterProxyRegistrationBean;
@1.3.1.RELEASE
+#securityProperties()Lorg/springframework/boot/autoconfigure/security/SecurityProperties;
@1.4.0.RELEASE
+#securityFilterChainRegistration(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Lorg/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean;
-#securityFilterChainRegistration(Lorg/springframework/boot/autoconfigure/security/SecurityProperties;)Lorg/springframework/boot/context/embedded/DelegatingFilterProxyRegistrationBean;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration

+###org/springframework/boot/autoconfigure/security/SecurityProperties$Headers$ContentSecurityPolicyMode
@1.5.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers$ContentSecurityPolicyMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/security/SecurityProperties$Headers$ContentSecurityPolicyMode;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SecurityProperties$Headers$ContentSecurityPolicyMode

+###org/springframework/boot/autoconfigure/security/SecurityAuthorizeMode
@1.2.2.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/security/SecurityAuthorizeMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/security/SecurityAuthorizeMode;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/SecurityAuthorizeMode

+###org/springframework/boot/autoconfigure/security/IgnoredRequestCustomizer
@1.5.0.RELEASE
+#customize(Lorg/springframework/security/config/annotation/web/builders/WebSecurity$IgnoredRequestConfigurer;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/security/IgnoredRequestCustomizer

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationComponentScanAutoConfiguration
@1.5.0.RELEASE
@2.0.2.RELEASE
-###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationComponentScanAutoConfiguration

+###org/springframework/boot/autoconfigure/web/DefaultErrorViewResolver
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)V
+#resolveErrorView(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/http/HttpStatus;Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;
+#getOrder()I
+#setOrder(I)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/DefaultErrorViewResolver

+###org/springframework/boot/autoconfigure/web/WebMvcProperties$LocaleResolver
@1.4.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/web/WebMvcProperties$LocaleResolver;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/WebMvcProperties$LocaleResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcProperties$LocaleResolver

+###org/springframework/boot/autoconfigure/web/AbstractErrorController
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ErrorAttributes;)V
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ErrorAttributes;Ljava/util/List;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/AbstractErrorController

+###org/springframework/boot/autoconfigure/web/GsonHttpMessageConvertersConfiguration$GsonHttpMessageConverterConfiguration
@1.2.2.RELEASE
+#gsonHttpMessageConverter(Lcom/google/gson/Gson;)Lorg/springframework/http/converter/json/GsonHttpMessageConverter;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/GsonHttpMessageConvertersConfiguration$GsonHttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/web/WebMvcProperties$View
@1.3.0.RELEASE
+#<init>()V
+#getPrefix()Ljava/lang/String;
+#setPrefix(Ljava/lang/String;)V
+#getSuffix()Ljava/lang/String;
+#setSuffix(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcProperties$View

+###org/springframework/boot/autoconfigure/web/HttpEncodingProperties
@1.2.0.RELEASE
+#<init>()V
+#getCharset()Ljava/nio/charset/Charset;
+#setCharset(Ljava/nio/charset/Charset;)V
+#isForce()Z
+#setForce(Z)V
@1.4.0.RELEASE
+#isForceRequest()Z
+#setForceRequest(Z)V
+#isForceResponse()Z
+#setForceResponse(Z)V
+#getMapping()Ljava/util/Map;
+#setMapping(Ljava/util/Map;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/HttpEncodingProperties

+###org/springframework/boot/autoconfigure/web/WebClientAutoConfiguration
@1.4.0.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebClientAutoConfiguration

+###org/springframework/boot/autoconfigure/web/WebMvcRegistrationsAdapter
@1.4.0.RELEASE
+#<init>()V
+#getRequestMappingHandlerMapping()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;
+#getRequestMappingHandlerAdapter()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter;
+#getExceptionHandlerExceptionResolver()Lorg/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcRegistrationsAdapter

+###org/springframework/boot/autoconfigure/web/WebMvcRegistrations
@1.4.0.RELEASE
+#getRequestMappingHandlerMapping()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;
+#getRequestMappingHandlerAdapter()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter;
+#getExceptionHandlerExceptionResolver()Lorg/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcRegistrations

+###org/springframework/boot/autoconfigure/web/WebClientAutoConfiguration$RestTemplateConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#restTemplateBuilder()Lorg/springframework/boot/web/client/RestTemplateBuilder;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebClientAutoConfiguration$RestTemplateConfiguration

+###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedUndertow
@1.2.0.RELEASE
+#<init>()V
+#undertowEmbeddedServletContainerFactory()Lorg/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$EmbeddedUndertow

+###org/springframework/boot/autoconfigure/web/ServerProperties$Session$Cookie
@1.3.0.RELEASE
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDomain()Ljava/lang/String;
+#setDomain(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getHttpOnly()Ljava/lang/Boolean;
+#setHttpOnly(Ljava/lang/Boolean;)V
+#getSecure()Ljava/lang/Boolean;
+#setSecure(Ljava/lang/Boolean;)V
+#getMaxAge()Ljava/lang/Integer;
+#setMaxAge(Ljava/lang/Integer;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/ServerProperties$Session$Cookie

+###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$BeanPostProcessorsRegistrar
@1.4.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfiguration$BeanPostProcessorsRegistrar

+###org/springframework/boot/autoconfigure/web/WebMvcProperties$Servlet
@1.4.0.RELEASE
+#<init>()V
+#getLoadOnStartup()I
+#setLoadOnStartup(I)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcProperties$Servlet

+###org/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
+#characterEncodingFilter()Lorg/springframework/web/filter/CharacterEncodingFilter;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/HttpEncodingProperties;)V
+#localeCharsetMappingsCustomizer()Lorg/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer;
-#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration

+###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration
@1.2.0.RELEASE
+#stringHttpMessageConverter()Lorg/springframework/http/converter/StringHttpMessageConverter;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/web/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration
@1.2.2.RELEASE
+#mappingJackson2HttpMessageConverter(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lorg/springframework/http/converter/json/MappingJackson2HttpMessageConverter;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/web/ErrorViewResolver
@1.4.0.RELEASE
+#resolveErrorView(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/http/HttpStatus;Ljava/util/Map;)Lorg/springframework/web/servlet/ModelAndView;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/ErrorViewResolver

+###org/springframework/boot/autoconfigure/web/WebMvcProperties$Async
@1.3.0.RELEASE
+#<init>()V
+#getRequestTimeout()Ljava/lang/Long;
+#setRequestTimeout(Ljava/lang/Long;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcProperties$Async

+###org/springframework/boot/autoconfigure/web/JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration
@1.2.2.RELEASE
+#mappingJackson2XmlHttpMessageConverter(Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;)Lorg/springframework/http/converter/xml/MappingJackson2XmlHttpMessageConverter;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/web/WebMvcProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
+#dispatcherServletRegistration(Lorg/springframework/web/servlet/DispatcherServlet;)Lorg/springframework/boot/web/servlet/ServletRegistrationBean;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration

+###org/springframework/boot/autoconfigure/web/ServerProperties$Session
@1.3.0.RELEASE
+#<init>()V
+#getCookie()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Session$Cookie;
+#getTimeout()Ljava/lang/Integer;
+#setTimeout(Ljava/lang/Integer;)V
+#getTrackingModes()Ljava/util/Set;
+#setTrackingModes(Ljava/util/Set;)V
+#isPersistent()Z
+#setPersistent(Z)V
+#getStoreDir()Ljava/io/File;
+#setStoreDir(Ljava/io/File;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/ServerProperties$Session

+###org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration
@1.1.11.RELEASE
+#<init>()V
+#requestMappingHandlerMapping()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;
@1.2.0.RELEASE
+#requestMappingHandlerAdapter()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter;
-#requestMappingHandlerMapping()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;
@1.2.1.RELEASE
+#requestMappingHandlerMapping()Lorg/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
-#<init>()V
@1.5.2.RELEASE
+#mvcValidator()Lorg/springframework/validation/Validator;
@1.5.3.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/context/ApplicationContext;)V
+#mvcContentNegotiationManager()Lorg/springframework/web/accept/ContentNegotiationManager;
+#afterPropertiesSet()V
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
@1.5.4.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/context/ApplicationContext;)V
-#afterPropertiesSet()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration

+###org/springframework/boot/autoconfigure/orm/jpa/JpaProperties$Naming
@1.4.0.RELEASE
+#<init>()V
+#getImplicitStrategy()Ljava/lang/String;
+#setImplicitStrategy(Ljava/lang/String;)V
+#getPhysicalStrategy()Ljava/lang/String;
+#setPhysicalStrategy(Ljava/lang/String;)V
+#getStrategy()Ljava/lang/String;
+#setStrategy(Ljava/lang/String;)V
@2.0.0.RELEASE
-#getStrategy()Ljava/lang/String;
-#setStrategy(Ljava/lang/String;)V
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/orm/jpa/JpaProperties$Naming

+###org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration
@1.1.11.RELEASE
+#openEntityManagerInViewInterceptor()Lorg/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor;
+#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V
@1.2.0.RELEASE
-###org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration

+###org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelector
@1.3.0.RELEASE
+#<init>()V
+#selectImports(Lorg/springframework/core/type/AnnotationMetadata;)[Ljava/lang/String;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
@1.4.0.RELEASE
+#getOrder()I
@1.5.0.RELEASE
-#selectImports(Lorg/springframework/core/type/AnnotationMetadata;)[Ljava/lang/String;
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
-#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
-#getOrder()I
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelector

+###org/springframework/boot/autoconfigure/kafka/KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration
@1.5.0.RELEASE
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/kafka/KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration

+###org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration$EmbeddedMongoDependencyConfiguration
@1.3.0.RELEASE
+#<init>()V
@2.1.7.RELEASE
-#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration$EmbeddedMongoDependencyConfiguration

+###org/springframework/boot/autoconfigure/cache/CacheProperties$Guava
@1.3.0.RELEASE
+#<init>()V
+#getSpec()Ljava/lang/String;
+#setSpec(Ljava/lang/String;)V
@1.5.0.RELEASE
*#getSpec()Ljava/lang/String;[deprecated]
*#setSpec(Ljava/lang/String;)V[deprecated]
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/cache/CacheProperties$Guava

+###org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerJpaDependencyConfiguration
@1.3.0.RELEASE
+#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerJpaDependencyConfiguration

+###org/springframework/boot/autoconfigure/cache/CacheProperties$Hazelcast
@1.3.0.RELEASE
+#<init>()V
+#getConfig()Lorg/springframework/core/io/Resource;
+#setConfig(Lorg/springframework/core/io/Resource;)V
@1.5.2.RELEASE
*#getConfig()Lorg/springframework/core/io/Resource;[deprecated]
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/cache/CacheProperties$Hazelcast

+###org/springframework/boot/autoconfigure/session/SessionProperties$Jdbc
@1.4.0.RELEASE
+#<init>()V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#getTableName()Ljava/lang/String;
+#setTableName(Ljava/lang/String;)V
+#getInitializer()Lorg/springframework/boot/autoconfigure/session/SessionProperties$Jdbc$Initializer;
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/session/SessionProperties$Jdbc

+###org/springframework/boot/autoconfigure/session/JdbcSessionConfiguration$SpringBootJdbcHttpSessionConfiguration
@1.4.0.RELEASE
+#<init>()V
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;)V
@2.0.0.RELEASE
+#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Lorg/springframework/boot/autoconfigure/session/JdbcSessionProperties;)V
-#customize(Lorg/springframework/boot/autoconfigure/session/SessionProperties;)V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/session/JdbcSessionConfiguration$SpringBootJdbcHttpSessionConfiguration

+###org/springframework/boot/autoconfigure/session/SessionProperties$Hazelcast
@1.4.0.RELEASE
+#<init>()V
+#getMapName()Ljava/lang/String;
+#setMapName(Ljava/lang/String;)V
@1.5.0.RELEASE
+#getFlushMode()Lorg/springframework/session/hazelcast/HazelcastFlushMode;
+#setFlushMode(Lorg/springframework/session/hazelcast/HazelcastFlushMode;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/session/SessionProperties$Hazelcast

+###org/springframework/boot/autoconfigure/session/SessionProperties$Mongo
@1.4.0.RELEASE
+#<init>()V
+#getCollectionName()Ljava/lang/String;
+#setCollectionName(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/session/SessionProperties$Mongo

+###org/springframework/boot/autoconfigure/session/SessionProperties$Redis
@1.4.0.RELEASE
+#<init>()V
+#getNamespace()Ljava/lang/String;
+#setNamespace(Ljava/lang/String;)V
+#getFlushMode()Lorg/springframework/session/data/redis/RedisFlushMode;
+#setFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/session/SessionProperties$Redis

+###org/springframework/boot/autoconfigure/session/SessionProperties$Jdbc$Initializer
@1.4.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
@1.4.1.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/session/SessionProperties$Jdbc;)V
-#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/session/SessionProperties$Jdbc$Initializer

+###org/springframework/boot/autoconfigure/session/JdbcSessionDatabaseInitializer
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;)V
@1.5.0.RELEASE
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/session/SessionProperties;)V
-#<init>(Lorg/springframework/boot/autoconfigure/session/SessionProperties;Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;)V
@2.0.0.RELEASE
-###org/springframework/boot/autoconfigure/session/JdbcSessionDatabaseInitializer

+###org/springframework/boot/autoconfigure/amqp/RabbitAnnotationDrivenConfiguration$EnableRabbitConfiguration
@1.2.0.RELEASE
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/amqp/RabbitAnnotationDrivenConfiguration$EnableRabbitConfiguration

+###org/springframework/boot/autoconfigure/transaction/jta/NarayanaJtaConfiguration
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/transaction/jta/JtaProperties;)V
+#narayanaProperties()Lorg/springframework/boot/jta/narayana/NarayanaProperties;
+#narayanaConfiguration(Lorg/springframework/boot/jta/narayana/NarayanaProperties;)Lorg/springframework/boot/jta/narayana/NarayanaConfigurationBean;
+#narayanaUserTransaction()Ljavax/transaction/UserTransaction;
+#narayanaTransactionManager()Ljavax/transaction/TransactionManager;
+#narayanaRecoveryManagerService()Lcom/arjuna/ats/jbossatx/jta/RecoveryManagerService;
+#narayanaRecoveryManager(Lcom/arjuna/ats/jbossatx/jta/RecoveryManagerService;)Lorg/springframework/boot/jta/narayana/NarayanaRecoveryManagerBean;
+#transactionManager(Ljavax/transaction/UserTransaction;Ljavax/transaction/TransactionManager;)Lorg/springframework/transaction/jta/JtaTransactionManager;
+#xaDataSourceWrapper(Lorg/springframework/boot/jta/narayana/NarayanaRecoveryManagerBean;Lorg/springframework/boot/jta/narayana/NarayanaProperties;)Lorg/springframework/boot/jta/XADataSourceWrapper;
+#narayanaBeanFactoryPostProcessor()Lorg/springframework/boot/jta/narayana/NarayanaBeanFactoryPostProcessor;
@1.5.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/transaction/jta/JtaProperties;Lorg/springframework/beans/factory/ObjectProvider;)V
-#<init>(Lorg/springframework/boot/autoconfigure/transaction/jta/JtaProperties;)V
@2.0.0.RELEASE
+#xaDataSourceWrapper(Lorg/springframework/boot/jta/narayana/NarayanaRecoveryManagerBean;Lorg/springframework/boot/jta/narayana/NarayanaProperties;)Lorg/springframework/boot/jdbc/XADataSourceWrapper;
-#xaDataSourceWrapper(Lorg/springframework/boot/jta/narayana/NarayanaRecoveryManagerBean;Lorg/springframework/boot/jta/narayana/NarayanaProperties;)Lorg/springframework/boot/jta/XADataSourceWrapper;
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/transaction/jta/NarayanaJtaConfiguration

+###org/springframework/boot/autoconfigure/cloud/CloudAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/cloud/CloudAutoConfiguration

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Io
@2.3.0.RELEASE
+#<init>()V
+#getMinEndpoints()I
+#setMinEndpoints(I)V
+#getMaxEndpoints()I
+#setMaxEndpoints(I)V
+#getIdleHttpConnectionTimeout()Ljava/time/Duration;
+#setIdleHttpConnectionTimeout(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/couchbase/ClusterEnvironmentBuilderCustomizer
@2.3.0.RELEASE
+#customize(Lcom/couchbase/client/java/env/ClusterEnvironment$Builder;)V

+###org/springframework/boot/autoconfigure/r2dbc/EmbeddedDatabaseConnection
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/r2dbc/EmbeddedDatabaseConnection;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/r2dbc/EmbeddedDatabaseConnection;
+#getDriverClassName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getUrl(Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/ClassLoader;)Lorg/springframework/boot/autoconfigure/r2dbc/EmbeddedDatabaseConnection;
@2.7.0
-###org/springframework/boot/autoconfigure/r2dbc/EmbeddedDatabaseConnection

+###org/springframework/boot/autoconfigure/r2dbc/R2dbcAutoConfiguration
@2.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryBuilder
@2.3.0.RELEASE
+#of(Lorg/springframework/boot/autoconfigure/r2dbc/R2dbcProperties;Ljava/util/function/Supplier;)Lorg/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryBuilder;
+#configure(Ljava/util/function/Consumer;)Lorg/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryBuilder;
+#username(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryBuilder;
+#password(Ljava/lang/CharSequence;)Lorg/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryBuilder;
+#hostname(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryBuilder;
+#port(I)Lorg/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryBuilder;
+#database(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryBuilder;
+#build()Lio/r2dbc/spi/ConnectionFactory;
+#buildOptions()Lio/r2dbc/spi/ConnectionFactoryOptions;
@2.7.0
-###org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryBuilder

+###org/springframework/boot/autoconfigure/r2dbc/R2dbcProperties$Pool
@2.3.0.RELEASE
+#<init>()V
+#getMaxIdleTime()Ljava/time/Duration;
+#setMaxIdleTime(Ljava/time/Duration;)V
+#getInitialSize()I
+#setInitialSize(I)V
+#getMaxSize()I
+#setMaxSize(I)V
+#getValidationQuery()Ljava/lang/String;
+#setValidationQuery(Ljava/lang/String;)V
@2.4.0
+#getMaxLifeTime()Ljava/time/Duration;
+#setMaxLifeTime(Ljava/time/Duration;)V
+#getMaxAcquireTime()Ljava/time/Duration;
+#setMaxAcquireTime(Ljava/time/Duration;)V
+#getMaxCreateConnectionTime()Ljava/time/Duration;
+#setMaxCreateConnectionTime(Ljava/time/Duration;)V
+#getValidationDepth()Lio/r2dbc/spi/ValidationDepth;
+#setValidationDepth(Lio/r2dbc/spi/ValidationDepth;)V
@2.6.0
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/boot/autoconfigure/r2dbc/R2dbcTransactionManagerAutoConfiguration
@2.4.0
+#<init>()V
+#connectionFactoryTransactionManager(Lio/r2dbc/spi/ConnectionFactory;)Lorg/springframework/r2dbc/connection/R2dbcTransactionManager;

+###org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryOptionsBuilderCustomizer
@2.3.0.RELEASE
+#customize(Lio/r2dbc/spi/ConnectionFactoryOptions$Builder;)V

+###org/springframework/boot/autoconfigure/r2dbc/R2dbcProperties
@2.3.0.RELEASE
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#isGenerateUniqueName()Z
+#setGenerateUniqueName(Z)V
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getProperties()Ljava/util/Map;
+#getPool()Lorg/springframework/boot/autoconfigure/r2dbc/R2dbcProperties$Pool;
+#determineUniqueName()Ljava/lang/String;

+###org/springframework/boot/autoconfigure/data/r2dbc/R2dbcDataAutoConfiguration
@2.3.0.RELEASE
+#<init>(Lio/r2dbc/spi/ConnectionFactory;)V
+#r2dbcDatabaseClient(Lorg/springframework/data/r2dbc/core/ReactiveDataAccessStrategy;Lorg/springframework/data/r2dbc/support/R2dbcExceptionTranslator;)Lorg/springframework/data/r2dbc/core/DatabaseClient;
+#r2dbcMappingContext(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/data/r2dbc/convert/R2dbcCustomConversions;)Lorg/springframework/data/r2dbc/mapping/R2dbcMappingContext;
+#reactiveDataAccessStrategy(Lorg/springframework/data/r2dbc/mapping/R2dbcMappingContext;Lorg/springframework/data/r2dbc/convert/R2dbcCustomConversions;)Lorg/springframework/data/r2dbc/core/ReactiveDataAccessStrategy;
+#r2dbcCustomConversions()Lorg/springframework/data/r2dbc/convert/R2dbcCustomConversions;
+#r2dbcExceptionTranslator()Lorg/springframework/data/r2dbc/support/R2dbcExceptionTranslator;
@2.4.0
+#<init>(Lorg/springframework/r2dbc/core/DatabaseClient;)V
+#r2dbcEntityTemplate(Lorg/springframework/data/r2dbc/convert/R2dbcConverter;)Lorg/springframework/data/r2dbc/core/R2dbcEntityTemplate;
+#r2dbcConverter(Lorg/springframework/data/r2dbc/mapping/R2dbcMappingContext;Lorg/springframework/data/r2dbc/convert/R2dbcCustomConversions;)Lorg/springframework/data/r2dbc/convert/MappingR2dbcConverter;
-#<init>(Lio/r2dbc/spi/ConnectionFactory;)V
-#r2dbcDatabaseClient(Lorg/springframework/data/r2dbc/core/ReactiveDataAccessStrategy;Lorg/springframework/data/r2dbc/support/R2dbcExceptionTranslator;)Lorg/springframework/data/r2dbc/core/DatabaseClient;
-#reactiveDataAccessStrategy(Lorg/springframework/data/r2dbc/mapping/R2dbcMappingContext;Lorg/springframework/data/r2dbc/convert/R2dbcCustomConversions;)Lorg/springframework/data/r2dbc/core/ReactiveDataAccessStrategy;
-#r2dbcExceptionTranslator()Lorg/springframework/data/r2dbc/support/R2dbcExceptionTranslator;
@3.0.0
+#r2dbcMappingContext(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/data/r2dbc/convert/R2dbcCustomConversions;Lorg/springframework/data/relational/RelationalManagedTypes;)Lorg/springframework/data/r2dbc/mapping/R2dbcMappingContext;
-#r2dbcMappingContext(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/data/r2dbc/convert/R2dbcCustomConversions;)Lorg/springframework/data/r2dbc/mapping/R2dbcMappingContext;

+###org/springframework/boot/autoconfigure/data/r2dbc/R2dbcRepositoriesAutoConfiguration
@2.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/data/neo4j/Neo4jReactiveDataAutoConfiguration
@2.4.0
+#<init>()V
+#reactiveDatabaseSelectionProvider(Lorg/springframework/boot/autoconfigure/data/neo4j/Neo4jDataProperties;)Lorg/springframework/data/neo4j/core/ReactiveDatabaseSelectionProvider;
+#reactiveNeo4jClient(Lorg/neo4j/driver/Driver;)Lorg/springframework/data/neo4j/core/ReactiveNeo4jClient;
+#reactiveNeo4jTemplate(Lorg/springframework/data/neo4j/core/ReactiveNeo4jClient;Lorg/springframework/data/neo4j/core/mapping/Neo4jMappingContext;Lorg/springframework/data/neo4j/core/ReactiveDatabaseSelectionProvider;)Lorg/springframework/data/neo4j/core/ReactiveNeo4jTemplate;
@2.5.0
+#reactiveNeo4jClient(Lorg/neo4j/driver/Driver;Lorg/springframework/data/neo4j/core/ReactiveDatabaseSelectionProvider;)Lorg/springframework/data/neo4j/core/ReactiveNeo4jClient;
+#reactiveNeo4jTemplate(Lorg/springframework/data/neo4j/core/ReactiveNeo4jClient;Lorg/springframework/data/neo4j/core/mapping/Neo4jMappingContext;)Lorg/springframework/data/neo4j/core/ReactiveNeo4jTemplate;
-#reactiveNeo4jClient(Lorg/neo4j/driver/Driver;)Lorg/springframework/data/neo4j/core/ReactiveNeo4jClient;
-#reactiveNeo4jTemplate(Lorg/springframework/data/neo4j/core/ReactiveNeo4jClient;Lorg/springframework/data/neo4j/core/mapping/Neo4jMappingContext;Lorg/springframework/data/neo4j/core/ReactiveDatabaseSelectionProvider;)Lorg/springframework/data/neo4j/core/ReactiveNeo4jTemplate;

+###org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataProperties
@2.4.0
+#<init>()V
+#getDatabase()Ljava/lang/String;
+#setDatabase(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/data/neo4j/Neo4jReactiveRepositoriesAutoConfiguration
@2.4.0
+#<init>()V

+###org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveElasticsearchRestClientProperties
@2.3.0.RELEASE
+#<init>()V
+#getEndpoints()Ljava/util/List;
+#setEndpoints(Ljava/util/List;)V
+#isUseSsl()Z
+#setUseSsl(Z)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getConnectionTimeout()Ljava/time/Duration;
+#setConnectionTimeout(Ljava/time/Duration;)V
+#getSocketTimeout()Ljava/time/Duration;
+#setSocketTimeout(Ljava/time/Duration;)V
+#getMaxInMemorySize()Lorg/springframework/util/unit/DataSize;
+#setMaxInMemorySize(Lorg/springframework/util/unit/DataSize;)V
@2.6.0
-#getEndpoints()Ljava/util/List;
-#setEndpoints(Ljava/util/List;)V
-#isUseSsl()Z
-#setUseSsl(Z)V
-#getUsername()Ljava/lang/String;
-#setUsername(Ljava/lang/String;)V
-#getPassword()Ljava/lang/String;
-#setPassword(Ljava/lang/String;)V
-#getConnectionTimeout()Ljava/time/Duration;
-#setConnectionTimeout(Ljava/time/Duration;)V
-#getSocketTimeout()Ljava/time/Duration;
-#setSocketTimeout(Ljava/time/Duration;)V
@3.0.0
-###org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveElasticsearchRestClientProperties

+###org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveElasticsearchRestClientAutoConfiguration
@2.3.0.RELEASE
+#<init>()V
+#clientConfiguration(Lorg/springframework/boot/autoconfigure/data/elasticsearch/ReactiveElasticsearchRestClientProperties;)Lorg/springframework/data/elasticsearch/client/ClientConfiguration;
+#reactiveElasticsearchClient(Lorg/springframework/data/elasticsearch/client/ClientConfiguration;)Lorg/springframework/data/elasticsearch/client/reactive/ReactiveElasticsearchClient;
@2.6.0
+#clientConfiguration()Lorg/springframework/data/elasticsearch/client/ClientConfiguration;
-#<init>()V
-#clientConfiguration(Lorg/springframework/boot/autoconfigure/data/elasticsearch/ReactiveElasticsearchRestClientProperties;)Lorg/springframework/data/elasticsearch/client/ClientConfiguration;
@3.0.0
-###org/springframework/boot/autoconfigure/data/elasticsearch/ReactiveElasticsearchRestClientAutoConfiguration

+###org/springframework/boot/autoconfigure/data/redis/RedisProperties$ClientType
@2.4.0
+#values()[Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$ClientType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$ClientType;

+###org/springframework/boot/autoconfigure/data/redis/RedisProperties$Lettuce$Cluster$Refresh
@2.3.0.RELEASE
+#<init>()V
+#getPeriod()Ljava/time/Duration;
+#setPeriod(Ljava/time/Duration;)V
+#isAdaptive()Z
+#setAdaptive(Z)V
@2.4.0
+#isDynamicRefreshSources()Z
+#setDynamicRefreshSources(Z)V

+###org/springframework/boot/autoconfigure/data/redis/RedisProperties$Lettuce$Cluster
@2.3.0.RELEASE
+#<init>()V
+#getRefresh()Lorg/springframework/boot/autoconfigure/data/redis/RedisProperties$Lettuce$Cluster$Refresh;

+###org/springframework/boot/autoconfigure/mongo/MongoPropertiesClientSettingsBuilderCustomizer
@2.4.0
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;)V
+#customize(Lcom/mongodb/MongoClientSettings$Builder;)V
+#getOrder()I
+#setOrder(I)V
@3.0.0
+#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;)V
-#<init>(Lorg/springframework/boot/autoconfigure/mongo/MongoProperties;Lorg/springframework/core/env/Environment;)V

+###org/springframework/boot/autoconfigure/mongo/MongoClientFactorySupport
@2.3.0.RELEASE
+#createMongoClient(Lcom/mongodb/MongoClientSettings;)Ljava/lang/Object;

+###org/springframework/boot/autoconfigure/mongo/MongoProperties$Gridfs
@2.4.0
+#<init>()V
+#getDatabase()Ljava/lang/String;
+#setDatabase(Ljava/lang/String;)V
+#getBucket()Ljava/lang/String;
+#setBucket(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/jooq/DslContextDependsOnPostProcessor
@2.3.9.RELEASE
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/lang/Class;)V
@2.4.0
-###org/springframework/boot/autoconfigure/jooq/DslContextDependsOnPostProcessor

+###org/springframework/boot/autoconfigure/jooq/DefaultConfigurationCustomizer
@2.5.0
+#customize(Lorg/jooq/impl/DefaultConfiguration;)V

+###org/springframework/boot/autoconfigure/amqp/ConnectionFactoryCustomizer
@2.5.0
+#customize(Lcom/rabbitmq/client/ConnectionFactory;)V

+###org/springframework/boot/autoconfigure/amqp/RabbitTemplateConfigurer
@2.3.0.RELEASE
+#<init>()V
+#configure(Lorg/springframework/amqp/rabbit/core/RabbitTemplate;Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)V
@2.6.0
*#<init>()V[deprecated]
+#<init>(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
+#setMessageConverter(Lorg/springframework/amqp/support/converter/MessageConverter;)V
+#setRetryTemplateCustomizers(Ljava/util/List;)V
@3.0.0
-#<init>()V[deprecated]

+###org/springframework/boot/autoconfigure/batch/BatchProperties$Jdbc
@2.5.0
+#<init>()V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#getTablePrefix()Ljava/lang/String;
+#setTablePrefix(Ljava/lang/String;)V
+#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
+#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V
@2.5.8
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V
@2.6.0
+#getInitializeSchema()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
+#setInitializeSchema(Lorg/springframework/boot/sql/init/DatabaseInitializationMode;)V
-#getPlatform()Ljava/lang/String;
-#setPlatform(Ljava/lang/String;)V
-#getInitializeSchema()Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
-#setInitializeSchema(Lorg/springframework/boot/jdbc/DataSourceInitializationMode;)V
@2.6.2
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V
@2.7.0
+#getIsolationLevelForCreate()Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Isolation;
+#setIsolationLevelForCreate(Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Isolation;)V
@3.0.0
+#getIsolationLevelForCreate()Lorg/springframework/transaction/annotation/Isolation;
+#setIsolationLevelForCreate(Lorg/springframework/transaction/annotation/Isolation;)V
-#getIsolationLevelForCreate()Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Isolation;
-#setIsolationLevelForCreate(Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Isolation;)V

+###org/springframework/boot/autoconfigure/batch/JobLauncherApplicationRunner
@2.3.0.RELEASE
+#<init>(Lorg/springframework/batch/core/launch/JobLauncher;Lorg/springframework/batch/core/explore/JobExplorer;Lorg/springframework/batch/core/repository/JobRepository;)V
+#setOrder(I)V
+#getOrder()I
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setJobRegistry(Lorg/springframework/batch/core/configuration/JobRegistry;)V
+#setJobNames(Ljava/lang/String;)V
+#setJobParametersConverter(Lorg/springframework/batch/core/converter/JobParametersConverter;)V
+#setJobs(Ljava/util/Collection;)V
+#run(Lorg/springframework/boot/ApplicationArguments;)V
+#run([Ljava/lang/String;)V
@3.0.0
+#validate()V
+#setJobName(Ljava/lang/String;)V
-#setJobNames(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/codec/CodecProperties
@2.2.1.RELEASE
+#<init>()V
+#getMaxInMemorySize()Lorg/springframework/util/unit/DataSize;
+#setMaxInMemorySize(Lorg/springframework/util/unit/DataSize;)V
@2.3.0.RELEASE
+#isLogRequestDetails()Z
+#setLogRequestDetails(Z)V

+###org/springframework/boot/autoconfigure/security/ConditionalOnDefaultWebSecurity
@2.4.0

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Registration$Acs
@2.4.0
+#<init>()V
+#getLocation()Ljava/lang/String;
+#setLocation(Ljava/lang/String;)V
+#getBinding()Lorg/springframework/security/saml2/provider/service/registration/Saml2MessageBinding;
+#setBinding(Lorg/springframework/security/saml2/provider/service/registration/Saml2MessageBinding;)V

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Decryption
@2.4.0
+#<init>()V
+#getCredentials()Ljava/util/List;
+#setCredentials(Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Decryption$Credential
@2.4.0
+#<init>()V
+#getPrivateKeyLocation()Lorg/springframework/core/io/Resource;
+#setPrivateKeyLocation(Lorg/springframework/core/io/Resource;)V
+#getCertificateLocation()Lorg/springframework/core/io/Resource;
+#setCertificateLocation(Lorg/springframework/core/io/Resource;)V

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider$Singlesignon
@2.3.0.RELEASE
+#<init>()V
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#getBinding()Lorg/springframework/security/saml2/provider/service/registration/Saml2MessageBinding;
+#setBinding(Lorg/springframework/security/saml2/provider/service/registration/Saml2MessageBinding;)V
+#isSignRequest()Z
+#setSignRequest(Z)V
@2.7.0
-###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Identityprovider$Singlesignon

+###org/springframework/boot/autoconfigure/netty/NettyAutoConfiguration
@2.5.0
+#<init>(Lorg/springframework/boot/autoconfigure/netty/NettyProperties;)V

+###org/springframework/boot/autoconfigure/netty/NettyProperties
@2.5.0
+#<init>()V
+#getLeakDetection()Lorg/springframework/boot/autoconfigure/netty/NettyProperties$LeakDetection;
+#setLeakDetection(Lorg/springframework/boot/autoconfigure/netty/NettyProperties$LeakDetection;)V

+###org/springframework/boot/autoconfigure/netty/NettyProperties$LeakDetection
@2.5.0
+#values()[Lorg/springframework/boot/autoconfigure/netty/NettyProperties$LeakDetection;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/netty/NettyProperties$LeakDetection;

+###org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration
@2.5.0
+#<init>()V

+###org/springframework/boot/autoconfigure/sql/init/SqlInitializationProperties
@2.5.0
+#<init>()V
+#getSchemaLocations()Ljava/util/List;
+#setSchemaLocations(Ljava/util/List;)V
+#getDataLocations()Ljava/util/List;
+#setDataLocations(Ljava/util/List;)V
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#isContinueOnError()Z
+#setContinueOnError(Z)V
+#getSeparator()Ljava/lang/String;
+#setSeparator(Ljava/lang/String;)V
+#getEncoding()Ljava/nio/charset/Charset;
+#setEncoding(Ljava/nio/charset/Charset;)V
@2.5.1
+#getMode()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
+#setMode(Lorg/springframework/boot/sql/init/DatabaseInitializationMode;)V

+###org/springframework/boot/autoconfigure/condition/ConditionalOnWarDeployment
@2.3.0.RELEASE

+###org/springframework/boot/autoconfigure/ldap/LdapProperties$Template
@2.4.0
+#<init>()V
+#isIgnorePartialResultException()Z
+#setIgnorePartialResultException(Z)V
+#isIgnoreNameNotFoundException()Z
+#setIgnoreNameNotFoundException(Z)V
+#isIgnoreSizeLimitExceededException()Z
+#setIgnoreSizeLimitExceededException(Ljava/lang/Boolean;)V

+###org/springframework/boot/autoconfigure/context/LifecycleAutoConfiguration
@2.3.0.RELEASE
+#<init>()V
+#defaultLifecycleProcessor(Lorg/springframework/boot/autoconfigure/context/LifecycleProperties;)Lorg/springframework/context/support/DefaultLifecycleProcessor;

+###org/springframework/boot/autoconfigure/context/LifecycleProperties
@2.3.0.RELEASE
+#<init>()V
+#getTimeoutPerShutdownPhase()Ljava/time/Duration;
+#setTimeoutPerShutdownPhase(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/cassandra/CassandraProperties$Throttler
@2.3.0.RELEASE
+#<init>()V
+#getType()Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$ThrottlerType;
+#setType(Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$ThrottlerType;)V
+#getMaxQueueSize()I
+#setMaxQueueSize(I)V
+#getMaxConcurrentRequests()I
+#setMaxConcurrentRequests(I)V
+#getMaxRequestsPerSecond()I
+#setMaxRequestsPerSecond(I)V
+#getDrainInterval()Ljava/time/Duration;
+#setDrainInterval(Ljava/time/Duration;)V
@2.6.9
+#getMaxQueueSize()Ljava/lang/Integer;
+#getMaxConcurrentRequests()Ljava/lang/Integer;
+#getMaxRequestsPerSecond()Ljava/lang/Integer;
-#getMaxQueueSize()I
-#getMaxConcurrentRequests()I
-#getMaxRequestsPerSecond()I
@2.7.0
+#getMaxQueueSize()I
+#getMaxConcurrentRequests()I
+#getMaxRequestsPerSecond()I
-#getMaxQueueSize()Ljava/lang/Integer;
-#getMaxConcurrentRequests()Ljava/lang/Integer;
-#getMaxRequestsPerSecond()Ljava/lang/Integer;
@2.7.1
+#getMaxQueueSize()Ljava/lang/Integer;
+#getMaxConcurrentRequests()Ljava/lang/Integer;
+#getMaxRequestsPerSecond()Ljava/lang/Integer;
-#getMaxQueueSize()I
-#getMaxConcurrentRequests()I
-#getMaxRequestsPerSecond()I

+###org/springframework/boot/autoconfigure/cassandra/CassandraProperties$ThrottlerType
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$ThrottlerType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$ThrottlerType;
+#type()Ljava/lang/String;

+###org/springframework/boot/autoconfigure/cassandra/CassandraProperties$Request
@2.3.0.RELEASE
+#<init>()V
+#getTimeout()Ljava/time/Duration;
+#setTimeout(Ljava/time/Duration;)V
+#getConsistency()Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;
+#setConsistency(Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;)V
+#getSerialConsistency()Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;
+#setSerialConsistency(Lcom/datastax/oss/driver/api/core/DefaultConsistencyLevel;)V
+#getPageSize()I
+#setPageSize(I)V
+#getThrottler()Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$Throttler;
@2.6.9
+#getPageSize()Ljava/lang/Integer;
-#getPageSize()I
@2.7.0
+#getPageSize()I
-#getPageSize()Ljava/lang/Integer;
@2.7.1
+#getPageSize()Ljava/lang/Integer;
-#getPageSize()I

+###org/springframework/boot/autoconfigure/cassandra/CqlSessionBuilderCustomizer
@2.3.0.RELEASE
+#customize(Lcom/datastax/oss/driver/api/core/CqlSessionBuilder;)V

+###org/springframework/boot/autoconfigure/cassandra/CassandraProperties$Controlconnection
@2.5.0
+#<init>()V
+#getTimeout()Ljava/time/Duration;
+#setTimeout(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/cassandra/CassandraProperties$Connection
@2.3.0.RELEASE
+#<init>()V
+#getConnectTimeout()Ljava/time/Duration;
+#setConnectTimeout(Ljava/time/Duration;)V
+#getInitQueryTimeout()Ljava/time/Duration;
+#setInitQueryTimeout(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/cassandra/DriverConfigLoaderBuilderCustomizer
@2.3.0.RELEASE
+#customize(Lcom/datastax/oss/driver/api/core/config/ProgrammaticDriverConfigLoaderBuilder;)V

+###org/springframework/boot/autoconfigure/cassandra/CassandraProperties$Compression
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$Compression;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/cassandra/CassandraProperties$Compression;

+###org/springframework/boot/autoconfigure/availability/ApplicationAvailabilityAutoConfiguration
@2.3.0.RELEASE
+#<init>()V
+#applicationAvailability()Lorg/springframework/boot/availability/ApplicationAvailabilityBean;

+###org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryDependsOnPostProcessor
@2.5.0
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/lang/Class;)V

+###org/springframework/boot/autoconfigure/neo4j/Neo4jProperties
@2.4.0
+#<init>()V
+#getUri()Ljava/net/URI;
+#setUri(Ljava/net/URI;)V
+#getConnectionTimeout()Ljava/time/Duration;
+#setConnectionTimeout(Ljava/time/Duration;)V
+#getMaxTransactionRetryTime()Ljava/time/Duration;
+#setMaxTransactionRetryTime(Ljava/time/Duration;)V
+#getAuthentication()Lorg/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Authentication;
+#getPool()Lorg/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Pool;
+#getSecurity()Lorg/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Security;

+###org/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Security
@2.4.0
+#<init>()V
+#isEncrypted()Z
+#setEncrypted(Z)V
+#getTrustStrategy()Lorg/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Security$TrustStrategy;
+#setTrustStrategy(Lorg/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Security$TrustStrategy;)V
+#getCertFile()Ljava/io/File;
+#setCertFile(Ljava/io/File;)V
+#isHostnameVerificationEnabled()Z
+#setHostnameVerificationEnabled(Z)V

+###org/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Authentication
@2.4.0
+#<init>()V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getRealm()Ljava/lang/String;
+#setRealm(Ljava/lang/String;)V
+#getKerberosTicket()Ljava/lang/String;
+#setKerberosTicket(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/neo4j/Neo4jAutoConfiguration
@2.4.0
+#<init>()V
+#neo4jDriver(Lorg/springframework/boot/autoconfigure/neo4j/Neo4jProperties;Lorg/springframework/core/env/Environment;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/neo4j/driver/Driver;

+###org/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Pool
@2.4.0
+#<init>()V
+#isLogLeakedSessions()Z
+#setLogLeakedSessions(Z)V
+#getMaxConnectionPoolSize()I
+#setMaxConnectionPoolSize(I)V
+#getIdleTimeBeforeConnectionTest()Ljava/time/Duration;
+#setIdleTimeBeforeConnectionTest(Ljava/time/Duration;)V
+#getMaxConnectionLifetime()Ljava/time/Duration;
+#setMaxConnectionLifetime(Ljava/time/Duration;)V
+#getConnectionAcquisitionTimeout()Ljava/time/Duration;
+#setConnectionAcquisitionTimeout(Ljava/time/Duration;)V
+#isMetricsEnabled()Z
+#setMetricsEnabled(Z)V

+###org/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Security$TrustStrategy
@2.4.0
+#values()[Lorg/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Security$TrustStrategy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/neo4j/Neo4jProperties$Security$TrustStrategy;

+###org/springframework/boot/autoconfigure/neo4j/ConfigBuilderCustomizer
@2.4.0
+#customize(Lorg/neo4j/driver/Config$ConfigBuilder;)V

+###org/springframework/boot/autoconfigure/kafka/StreamsBuilderFactoryBeanCustomizer
@2.3.2.RELEASE
+#customize(Lorg/springframework/kafka/config/StreamsBuilderFactoryBean;)V

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Cleanup
@2.4.0
+#<init>()V
+#isOnStartup()Z
+#setOnStartup(Z)V
+#isOnShutdown()Z
+#setOnShutdown(Z)V

+###org/springframework/boot/autoconfigure/kafka/DefaultKafkaConsumerFactoryCustomizer
@2.3.0.RELEASE
+#customize(Lorg/springframework/kafka/core/DefaultKafkaConsumerFactory;)V

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Security
@2.3.0.RELEASE
+#<init>()V
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
+#buildProperties()Ljava/util/Map;

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$IsolationLevel
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$IsolationLevel;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$IsolationLevel;
+#id()B

+###org/springframework/boot/autoconfigure/kafka/DefaultKafkaProducerFactoryCustomizer
@2.3.0.RELEASE
+#customize(Lorg/springframework/kafka/core/DefaultKafkaProducerFactory;)V

+###org/springframework/boot/autoconfigure/cache/CouchbaseCacheManagerBuilderCustomizer
@2.3.3.RELEASE
+#customize(Lorg/springframework/data/couchbase/cache/CouchbaseCacheManager$CouchbaseCacheManagerBuilder;)V

+###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientAutoConfiguration
@2.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientProperties
@2.3.0.RELEASE
+#<init>()V
+#getUris()Ljava/util/List;
+#setUris(Ljava/util/List;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getConnectionTimeout()Ljava/time/Duration;
+#setConnectionTimeout(Ljava/time/Duration;)V
+#getReadTimeout()Ljava/time/Duration;
+#setReadTimeout(Ljava/time/Duration;)V
@2.5.0
+#getSniffer()Lorg/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientProperties$Sniffer;
@2.6.0
-#getUris()Ljava/util/List;
-#setUris(Ljava/util/List;)V
-#getUsername()Ljava/lang/String;
-#setUsername(Ljava/lang/String;)V
-#getPassword()Ljava/lang/String;
-#setPassword(Ljava/lang/String;)V
-#getConnectionTimeout()Ljava/time/Duration;
-#setConnectionTimeout(Ljava/time/Duration;)V
-#getReadTimeout()Ljava/time/Duration;
-#setReadTimeout(Ljava/time/Duration;)V
@3.0.0
-###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientProperties

+###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientProperties$Sniffer
@2.5.0
+#<init>()V
+#getInterval()Ljava/time/Duration;
+#setInterval(Ljava/time/Duration;)V
+#getDelayAfterFailure()Ljava/time/Duration;
+#setDelayAfterFailure(Ljava/time/Duration;)V
@3.0.0
-###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientProperties$Sniffer

+###org/springframework/boot/autoconfigure/elasticsearch/RestClientBuilderCustomizer
@2.3.0.RELEASE
+#customize(Lorg/elasticsearch/client/RestClientBuilder;)V
+#customize(Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;)V
+#customize(Lorg/apache/http/client/config/RequestConfig$Builder;)V

+###org/springframework/boot/autoconfigure/influx/InfluxDbCustomizer
@2.5.0
+#customize(Lorg/influxdb/InfluxDB;)V

+###org/springframework/boot/autoconfigure/quartz/QuartzTransactionManager
@2.2.12.RELEASE
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/quartz/QuartzTransactionManager

+###org/springframework/boot/autoconfigure/rsocket/RSocketMessageHandlerCustomizer
@2.3.0.RELEASE
+#customize(Lorg/springframework/messaging/rsocket/annotation/support/RSocketMessageHandler;)V

+###org/springframework/boot/autoconfigure/session/DefaultCookieSerializerCustomizer
@2.3.0.RELEASE
+#customize(Lorg/springframework/session/web/http/DefaultCookieSerializer;)V

+###org/springframework/boot/autoconfigure/web/WebProperties$Resources$Cache$Cachecontrol
@2.4.0
+#<init>()V
+#getMaxAge()Ljava/time/Duration;
+#setMaxAge(Ljava/time/Duration;)V
+#getNoCache()Ljava/lang/Boolean;
+#setNoCache(Ljava/lang/Boolean;)V
+#getNoStore()Ljava/lang/Boolean;
+#setNoStore(Ljava/lang/Boolean;)V
+#getMustRevalidate()Ljava/lang/Boolean;
+#setMustRevalidate(Ljava/lang/Boolean;)V
+#getNoTransform()Ljava/lang/Boolean;
+#setNoTransform(Ljava/lang/Boolean;)V
+#getCachePublic()Ljava/lang/Boolean;
+#setCachePublic(Ljava/lang/Boolean;)V
+#getCachePrivate()Ljava/lang/Boolean;
+#setCachePrivate(Ljava/lang/Boolean;)V
+#getProxyRevalidate()Ljava/lang/Boolean;
+#setProxyRevalidate(Ljava/lang/Boolean;)V
+#getStaleWhileRevalidate()Ljava/time/Duration;
+#setStaleWhileRevalidate(Ljava/time/Duration;)V
+#getStaleIfError()Ljava/time/Duration;
+#setStaleIfError(Ljava/time/Duration;)V
+#getSMaxAge()Ljava/time/Duration;
+#setSMaxAge(Ljava/time/Duration;)V
+#toHttpCacheControl()Lorg/springframework/http/CacheControl;

+###org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Threads
@2.3.0.RELEASE
+#<init>()V
+#getMax()I
+#setMax(I)V
+#getMinSpare()I
+#setMinSpare(I)V

+###org/springframework/boot/autoconfigure/web/ServerProperties$Undertow$Threads
@2.3.0.RELEASE
+#<init>()V
+#getIo()Ljava/lang/Integer;
+#setIo(Ljava/lang/Integer;)V
+#getWorker()Ljava/lang/Integer;
+#setWorker(Ljava/lang/Integer;)V

+###org/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain
@2.4.0
+#<init>()V
+#getEnabled()Ljava/lang/Boolean;
+#setEnabled(Z)V
+#isCache()Z
+#setCache(Z)V
+#getStrategy()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain$Strategy;
+#isCompressed()Z
+#setCompressed(Z)V

+###org/springframework/boot/autoconfigure/web/client/RestTemplateBuilderConfigurer
@2.4.0
+#<init>()V
+#configure(Lorg/springframework/boot/web/client/RestTemplateBuilder;)Lorg/springframework/boot/web/client/RestTemplateBuilder;

+###org/springframework/boot/autoconfigure/web/WebProperties$Resources
@2.4.0
+#<init>()V
+#getStaticLocations()[Ljava/lang/String;
+#setStaticLocations([Ljava/lang/String;)V
+#isAddMappings()Z
+#setAddMappings(Z)V
+#getChain()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain;
+#getCache()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Cache;
+#hasBeenCustomized()Z

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$MatchingStrategy
@2.4.0
+#values()[Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$MatchingStrategy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$MatchingStrategy;

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Format
@2.3.0.RELEASE
+#<init>()V
+#getDate()Ljava/lang/String;
+#setDate(Ljava/lang/String;)V
+#getTime()Ljava/lang/String;
+#setTime(Ljava/lang/String;)V
+#getDateTime()Ljava/lang/String;
+#setDateTime(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain$Strategy
@2.4.0
+#<init>()V
+#getFixed()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain$Strategy$Fixed;
+#getContent()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain$Strategy$Content;

+###org/springframework/boot/autoconfigure/web/ServerProperties$Jetty$Threads
@2.3.0.RELEASE
+#<init>()V
+#getAcceptors()Ljava/lang/Integer;
+#setAcceptors(Ljava/lang/Integer;)V
+#getSelectors()Ljava/lang/Integer;
+#setSelectors(Ljava/lang/Integer;)V
+#setMin(Ljava/lang/Integer;)V
+#getMin()Ljava/lang/Integer;
+#setMax(Ljava/lang/Integer;)V
+#getMax()Ljava/lang/Integer;
+#getMaxQueueCapacity()Ljava/lang/Integer;
+#setMaxQueueCapacity(Ljava/lang/Integer;)V
+#setIdleTimeout(Ljava/time/Duration;)V
+#getIdleTimeout()Ljava/time/Duration;

+###org/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain$Strategy$Fixed
@2.4.0
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getPaths()[Ljava/lang/String;
+#setPaths([Ljava/lang/String;)V
+#getVersion()Ljava/lang/String;
+#setVersion(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/web/format/DateTimeFormatters
@2.3.0.RELEASE
+#<init>()V
+#dateFormat(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/format/DateTimeFormatters;
+#timeFormat(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/format/DateTimeFormatters;
+#dateTimeFormat(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/format/DateTimeFormatters;

+###org/springframework/boot/autoconfigure/web/WebProperties$LocaleResolver
@2.4.0
+#values()[Lorg/springframework/boot/autoconfigure/web/WebProperties$LocaleResolver;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/WebProperties$LocaleResolver;

+###org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Remoteip
@2.3.0.RELEASE
+#<init>()V
+#getInternalProxies()Ljava/lang/String;
+#setInternalProxies(Ljava/lang/String;)V
+#getProtocolHeader()Ljava/lang/String;
+#setProtocolHeader(Ljava/lang/String;)V
+#getProtocolHeaderHttpsValue()Ljava/lang/String;
+#getHostHeader()Ljava/lang/String;
+#setHostHeader(Ljava/lang/String;)V
+#setProtocolHeaderHttpsValue(Ljava/lang/String;)V
+#getPortHeader()Ljava/lang/String;
+#setPortHeader(Ljava/lang/String;)V
+#getRemoteIpHeader()Ljava/lang/String;
+#setRemoteIpHeader(Ljava/lang/String;)V
@3.0.0
+#getTrustedProxies()Ljava/lang/String;
+#setTrustedProxies(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/web/WebProperties$Resources$Cache
@2.4.0
+#<init>()V
+#getPeriod()Ljava/time/Duration;
+#setPeriod(Ljava/time/Duration;)V
+#getCachecontrol()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources$Cache$Cachecontrol;
+#isUseLastModified()Z
+#setUseLastModified(Z)V

+###org/springframework/boot/autoconfigure/web/WebProperties$Resources$Chain$Strategy$Content
@2.4.0
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getPaths()[Ljava/lang/String;
+#setPaths([Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/web/WebProperties
@2.4.0
+#<init>()V
+#getLocale()Ljava/util/Locale;
+#setLocale(Ljava/util/Locale;)V
+#getLocaleResolver()Lorg/springframework/boot/autoconfigure/web/WebProperties$LocaleResolver;
+#setLocaleResolver(Lorg/springframework/boot/autoconfigure/web/WebProperties$LocaleResolver;)V
+#getResources()Lorg/springframework/boot/autoconfigure/web/WebProperties$Resources;

+###org/springframework/boot/autoconfigure/web/ErrorProperties$IncludeAttribute
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeAttribute;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeAttribute;

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WelcomePageConfiguration
@2.3.1.RELEASE
+#<init>()V
+#welcomePageRouterFunction(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)Lorg/springframework/web/reactive/function/server/RouterFunction;
@2.3.2.RELEASE
+#welcomePageRouterFunctionMapping(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)Lorg/springframework/web/reactive/function/server/support/RouterFunctionMapping;
-#welcomePageRouterFunction(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)Lorg/springframework/web/reactive/function/server/RouterFunction;
@2.4.0
+#welcomePageRouterFunctionMapping(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;)Lorg/springframework/web/reactive/function/server/support/RouterFunctionMapping;
-#welcomePageRouterFunctionMapping(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)Lorg/springframework/web/reactive/function/server/support/RouterFunctionMapping;
@2.6.0
+#welcomePageRouterFunctionMapping(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;)Lorg/springframework/web/reactive/function/server/support/RouterFunctionMapping;
-#welcomePageRouterFunctionMapping(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/boot/autoconfigure/web/WebProperties;)Lorg/springframework/web/reactive/function/server/support/RouterFunctionMapping;

+###org/springframework/boot/autoconfigure/web/reactive/function/client/ReactorNettyHttpClientMapper
@2.3.0.RELEASE
+#configure(Lreactor/netty/http/client/HttpClient;)Lreactor/netty/http/client/HttpClient;

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Format
@2.3.0.RELEASE
+#<init>()V
+#getDate()Ljava/lang/String;
+#setDate(Ljava/lang/String;)V
+#getTime()Ljava/lang/String;
+#setTime(Ljava/lang/String;)V
+#getDateTime()Ljava/lang/String;
+#setDateTime(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$SameSite
@2.5.0
+#values()[Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$SameSite;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$SameSite;
+#attribute()Ljava/lang/String;
@3.0.0
-###org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$SameSite

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Session
@2.5.0
+#<init>()V
+#getCookie()Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Cookie;
@3.0.0
-###org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Session

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Cookie
@2.5.0
+#<init>()V
+#getSameSite()Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$SameSite;
+#setSameSite(Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$SameSite;)V
@3.0.0
-###org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Cookie

+###org/springframework/boot/autoconfigure/integration/IntegrationProperties$Error
@2.5.0
+#<init>()V
+#isRequireSubscribers()Z
+#setRequireSubscribers(Z)V
+#isIgnoreFailures()Z
+#setIgnoreFailures(Z)V

+###org/springframework/boot/autoconfigure/integration/IntegrationProperties$Endpoint
@2.5.0
+#<init>()V
+#setThrowExceptionOnLateReply(Z)V
+#isThrowExceptionOnLateReply()Z
+#getReadOnlyHeaders()Ljava/util/List;
+#setReadOnlyHeaders(Ljava/util/List;)V
+#getNoAutoStartup()Ljava/util/List;
+#setNoAutoStartup(Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationRSocketConfiguration$IntegrationRSocketClientConfiguration
@2.3.0.RELEASE
+#clientRSocketConnector(Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties;Lorg/springframework/messaging/rsocket/RSocketStrategies;)Lorg/springframework/integration/rsocket/ClientRSocketConnector;

+###org/springframework/boot/autoconfigure/integration/IntegrationProperties$RSocket$Client
@2.3.0.RELEASE
+#<init>()V
+#setHost(Ljava/lang/String;)V
+#getHost()Ljava/lang/String;
+#setPort(Ljava/lang/Integer;)V
+#getPort()Ljava/lang/Integer;
+#setUri(Ljava/net/URI;)V
+#getUri()Ljava/net/URI;

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationRSocketConfiguration$IntegrationRSocketServerConfiguration
@2.3.0.RELEASE
+#serverRSocketMessageHandler(Lorg/springframework/messaging/rsocket/RSocketStrategies;Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties;)Lorg/springframework/messaging/rsocket/annotation/support/RSocketMessageHandler;
+#serverRSocketConnector(Lorg/springframework/integration/rsocket/ServerRSocketMessageHandler;)Lorg/springframework/integration/rsocket/ServerRSocketConnector;

+###org/springframework/boot/autoconfigure/integration/IntegrationProperties$Channel
@2.5.0
+#<init>()V
+#setAutoCreate(Z)V
+#isAutoCreate()Z
+#setMaxUnicastSubscribers(I)V
+#getMaxUnicastSubscribers()I
+#setMaxBroadcastSubscribers(I)V
+#getMaxBroadcastSubscribers()I

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationRSocketConfiguration
@2.3.0.RELEASE

+###org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration$IntegrationTaskSchedulerConfiguration
@2.5.0
+#taskScheduler(Lorg/springframework/boot/task/TaskSchedulerBuilder;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;

+###org/springframework/boot/autoconfigure/integration/IntegrationProperties$RSocket$Server
@2.3.0.RELEASE
+#<init>()V
+#isMessageMappingEnabled()Z
+#setMessageMappingEnabled(Z)V

+###org/springframework/boot/autoconfigure/integration/IntegrationProperties$RSocket
@2.3.0.RELEASE
+#<init>()V
+#getClient()Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties$RSocket$Client;
+#getServer()Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties$RSocket$Server;

+###org/springframework/boot/autoconfigure/security/servlet/SecurityRequestMatcherProviderAutoConfiguration
@2.0.5.RELEASE
+#<init>()V
+#requestMatcherProvider(Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;)Lorg/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider;
@2.0.7.RELEASE
-#requestMatcherProvider(Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;)Lorg/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider;
@2.1.0.RELEASE
+#requestMatcherProvider(Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;)Lorg/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider;
@2.1.1.RELEASE
-#requestMatcherProvider(Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;)Lorg/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider;
@2.1.8.RELEASE
-###org/springframework/boot/autoconfigure/security/servlet/SecurityRequestMatcherProviderAutoConfiguration

+###org/springframework/boot/autoconfigure/reactor/core/ReactorCoreAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/reactor/core/ReactorCoreAutoConfiguration

+###org/springframework/boot/autoconfigure/reactor/core/ReactorCoreProperties$StacktraceMode
@2.0.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/reactor/core/ReactorCoreProperties$StacktraceMode

+###org/springframework/boot/autoconfigure/http/HttpEncodingProperties$Type
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/autoconfigure/http/HttpEncodingProperties$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/http/HttpEncodingProperties$Type;
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/http/HttpEncodingProperties$Type

+###org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration
@2.0.0.RELEASE
+#mappingJackson2HttpMessageConverter(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lorg/springframework/http/converter/json/MappingJackson2HttpMessageConverter;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration$EmbeddedReactiveMongoDependencyConfiguration
@2.0.0.RELEASE
+#<init>()V
@2.1.7.RELEASE
-#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration$EmbeddedReactiveMongoDependencyConfiguration

+###org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseJdbcOperationsDependencyConfiguration
@2.0.4.RELEASE
+#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseJdbcOperationsDependencyConfiguration

+###org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$GsonHttpMessageConverterConfiguration
@2.0.0.RELEASE
+#gsonHttpMessageConverter(Lcom/google/gson/Gson;)Lorg/springframework/http/converter/json/GsonHttpMessageConverter;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$GsonHttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/http/JsonbHttpMessageConvertersConfiguration$JsonbHttpMessageConverterConfiguration
@2.0.0.RELEASE
+#jsonbHttpMessageConverter(Ljavax/json/bind/Jsonb;)Lorg/springframework/http/converter/json/JsonbHttpMessageConverter;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/http/JsonbHttpMessageConvertersConfiguration$JsonbHttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/http/HttpEncodingProperties
@2.0.0.RELEASE
+#<init>()V
+#getCharset()Ljava/nio/charset/Charset;
+#setCharset(Ljava/nio/charset/Charset;)V
+#isForce()Z
+#setForce(Z)V
+#isForceRequest()Z
+#setForceRequest(Z)V
+#isForceResponse()Z
+#setForceResponse(Z)V
+#getMapping()Ljava/util/Map;
+#setMapping(Ljava/util/Map;)V
+#shouldForce(Lorg/springframework/boot/autoconfigure/http/HttpEncodingProperties$Type;)Z
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/http/HttpEncodingProperties

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafSecurity5DialectConfiguration
@2.0.6.RELEASE
+#securityDialect()Lorg/thymeleaf/extras/springsecurity5/dialect/SpringSecurityDialect;
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafSecurity5DialectConfiguration

+###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration$FlywayInitializerJdbcOperationsDependencyConfiguration
@2.0.4.RELEASE
+#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration$FlywayInitializerJdbcOperationsDependencyConfiguration

+###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayJdbcOperationsDependencyConfiguration
@2.0.4.RELEASE
+#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayJdbcOperationsDependencyConfiguration

+###org/springframework/boot/autoconfigure/security/servlet/MvcRequestMatcherProvider
@2.0.5.RELEASE
+#<init>(Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;)V
+#getRequestMatcher(Ljava/lang/String;)Lorg/springframework/security/web/util/matcher/RequestMatcher;
@2.1.8.RELEASE
-###org/springframework/boot/autoconfigure/security/servlet/MvcRequestMatcherProvider

+###org/springframework/boot/autoconfigure/reactor/core/ReactorCoreProperties
@2.0.0.RELEASE
+#<init>()V
+#getStacktraceMode()Lorg/springframework/boot/autoconfigure/reactor/core/ReactorCoreProperties$StacktraceMode;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/reactor/core/ReactorCoreProperties

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/web/ResourceProperties;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#faviconHandlerMapping()Lorg/springframework/web/servlet/handler/SimpleUrlHandlerMapping;
+#faviconRequestHandler()Lorg/springframework/web/servlet/resource/ResourceHttpRequestHandler;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration

+###org/springframework/boot/autoconfigure/web/servlet/DispatcherServletPathProvider
@2.0.2.RELEASE
+#getServletPath()Ljava/lang/String;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/web/servlet/DispatcherServletPathProvider

+###org/springframework/boot/autoconfigure/data/redis/RedisConnectionConfiguration$ConnectionInfo
@2.0.0.RELEASE
+#<init>(Ljava/net/URI;ZLjava/lang/String;)V
+#isUseSsl()Z
+#getHostName()Ljava/lang/String;
+#getPort()I
+#getPassword()Ljava/lang/String;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/data/redis/RedisConnectionConfiguration$ConnectionInfo

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientAutoConfiguration

+###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayDslContextDependsOnPostProcessor
@2.3.9.RELEASE
+#<init>()V
@2.4.0
-###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayDslContextDependsOnPostProcessor

+###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Bootstrap
@2.2.3.RELEASE
+#<init>()V
+#getHttpDirectPort()Ljava/lang/Integer;
+#setHttpDirectPort(Ljava/lang/Integer;)V
+#getHttpSslPort()Ljava/lang/Integer;
+#setHttpSslPort(Ljava/lang/Integer;)V
@2.3.0.RELEASE
-###org/springframework/boot/autoconfigure/couchbase/CouchbaseProperties$Bootstrap

+###org/springframework/boot/autoconfigure/web/GzipFilterProperties
@1.2.2.RELEASE
+#<init>()V
+#getBufferSize()Ljava/lang/Integer;
+#setBufferSize(Ljava/lang/Integer;)V
+#getMinGzipSize()Ljava/lang/Integer;
+#setMinGzipSize(Ljava/lang/Integer;)V
+#getDeflateCompressionLevel()Ljava/lang/Integer;
+#setDeflateCompressionLevel(Ljava/lang/Integer;)V
+#getDeflateNoWrap()Ljava/lang/Boolean;
+#setDeflateNoWrap(Ljava/lang/Boolean;)V
+#getMethods()Ljava/util/List;
+#setMethods(Ljava/util/List;)V
+#getMimeTypes()Ljava/util/List;
+#setMimeTypes(Ljava/util/List;)V
+#getExcludedAgents()Ljava/lang/String;
+#setExcludedAgents(Ljava/lang/String;)V
+#getExcludedAgentPatterns()Ljava/lang/String;
+#setExcludedAgentPatterns(Ljava/lang/String;)V
+#getExcludedPaths()Ljava/lang/String;
+#setExcludedPaths(Ljava/lang/String;)V
+#getExcludedPathPatterns()Ljava/lang/String;
+#setExcludedPathPatterns(Ljava/lang/String;)V
+#getVary()Ljava/lang/String;
+#setVary(Ljava/lang/String;)V
@1.2.4.RELEASE
+#getExcludedMimeTypes()Ljava/util/List;
+#setExcludedMimeTypes(Ljava/util/List;)V
+#getExcludeAgentPatterns()Ljava/lang/String;
+#setExcludeAgentPatterns(Ljava/lang/String;)V
+#getExcludePaths()Ljava/lang/String;
+#setExcludePaths(Ljava/lang/String;)V
+#getExcludePathPatterns()Ljava/lang/String;
+#setExcludePathPatterns(Ljava/lang/String;)V
-#getExcludedAgentPatterns()Ljava/lang/String;
-#setExcludedAgentPatterns(Ljava/lang/String;)V
-#getExcludedPaths()Ljava/lang/String;
-#setExcludedPaths(Ljava/lang/String;)V
-#getExcludedPathPatterns()Ljava/lang/String;
-#setExcludedPathPatterns(Ljava/lang/String;)V
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/web/GzipFilterProperties

+###org/springframework/boot/autoconfigure/web/GzipFilterAutoConfiguration
@1.2.2.RELEASE
+#<init>()V
+#gzipFilter()Lorg/springframework/boot/context/embedded/FilterRegistrationBean;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/web/GzipFilterAutoConfiguration

+###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafConditionalCommentsDialectConfiguration
@1.2.1.RELEASE
+#conditionalCommentsDialect()Lorg/thymeleaf/extras/conditionalcomments/dialect/ConditionalCommentsDialect;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafConditionalCommentsDialectConfiguration

+###org/springframework/boot/autoconfigure/data/rest/SpringBootRepositoryRestMvcConfiguration
@1.2.2.RELEASE
+#<init>()V
+#config()Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/data/rest/SpringBootRepositoryRestMvcConfiguration

+###org/springframework/boot/autoconfigure/condition/OnBeanCondition
@1.2.0.RELEASE
+#<init>()V
+#getConfigurationPhase()Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/condition/OnBeanCondition

+###org/springframework/boot/autoconfigure/jta/JtaProperties
@1.2.0.RELEASE
+#<init>()V
+#setLogDir(Ljava/lang/String;)V
+#getLogDir()Ljava/lang/String;
+#getTransactionManagerId()Ljava/lang/String;
+#setTransactionManagerId(Ljava/lang/String;)V
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/jta/JtaProperties

+###org/springframework/boot/autoconfigure/jta/JtaAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/jta/JtaAutoConfiguration

+###org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration$HypermediaConfiguration$HalObjectMapperConfiguration
@1.2.0.RELEASE
+#halObjectMapperConfigurer()Lorg/springframework/beans/factory/config/BeanPostProcessor;
@1.2.1.RELEASE
+#configurePrimaryObjectMapper()V
+#halObjectMapperConfigurer()Lorg/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration$HalObjectMapperConfigurer;
-#halObjectMapperConfigurer()Lorg/springframework/beans/factory/config/BeanPostProcessor;
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration$HypermediaConfiguration$HalObjectMapperConfiguration

+###org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration$AbstractRedisConfiguration
@1.2.0.RELEASE
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration$AbstractRedisConfiguration

+###org/springframework/boot/autoconfigure/redis/RedisProperties$Sentinel
@1.2.0.RELEASE
+#<init>()V
+#getMaster()Ljava/lang/String;
+#setMaster(Ljava/lang/String;)V
+#getNodes()Ljava/lang/String;
+#setNodes(Ljava/lang/String;)V
@1.3.0.RELEASE
-###org/springframework/boot/autoconfigure/redis/RedisProperties$Sentinel

+###org/springframework/boot/autoconfigure/data/redis/ClientResourcesBuilderCustomizer
@2.6.0
+#customize(Lio/lettuce/core/resource/ClientResources$Builder;)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$BaseContainer
@2.6.0
+#<init>()V
+#isAutoStartup()Z
+#setAutoStartup(Z)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$Stream
@2.6.0
+#<init>()V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
@2.7.0
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/amqp/CachingConnectionFactoryConfigurer
@2.6.0
+#<init>(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
+#configure(Lorg/springframework/amqp/rabbit/connection/CachingConnectionFactory;Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
+#configure(Lorg/springframework/amqp/rabbit/connection/AbstractConnectionFactory;Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V

+###org/springframework/boot/autoconfigure/amqp/RabbitProperties$StreamContainer
@2.6.0
+#<init>()V
+#isNativeListener()Z
+#setNativeListener(Z)V

+###org/springframework/boot/autoconfigure/amqp/AbstractConnectionFactoryConfigurer
@2.6.0
+#setConnectionNameStrategy(Lorg/springframework/amqp/rabbit/connection/ConnectionNameStrategy;)V
+#configure(Lorg/springframework/amqp/rabbit/connection/AbstractConnectionFactory;)V

+###org/springframework/boot/autoconfigure/amqp/RabbitConnectionFactoryBeanConfigurer
@2.6.0
+#<init>(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;)V
+#setCredentialsProvider(Lcom/rabbitmq/client/impl/CredentialsProvider;)V
+#setCredentialsRefreshService(Lcom/rabbitmq/client/impl/CredentialsRefreshService;)V
+#configure(Lorg/springframework/amqp/rabbit/connection/RabbitConnectionFactoryBean;)V

+###org/springframework/boot/autoconfigure/batch/BatchDataSourceScriptDatabaseInitializer
@2.6.0
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Jdbc;)V
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;)V
+#getSettings(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Jdbc;)Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;

+###org/springframework/boot/autoconfigure/jackson/JacksonProperties$ConstructorDetectorStrategy
@2.6.0
+#values()[Lorg/springframework/boot/autoconfigure/jackson/JacksonProperties$ConstructorDetectorStrategy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jackson/JacksonProperties$ConstructorDetectorStrategy;

+###org/springframework/boot/autoconfigure/sql/init/OnDatabaseInitializationCondition
@2.6.2
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;

+###org/springframework/boot/autoconfigure/sql/init/SqlR2dbcScriptDatabaseInitializer
@2.6.0
+#<init>(Lio/r2dbc/spi/ConnectionFactory;Lorg/springframework/boot/autoconfigure/sql/init/SqlInitializationProperties;)V
+#<init>(Lio/r2dbc/spi/ConnectionFactory;Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;)V
+#getSettings(Lorg/springframework/boot/autoconfigure/sql/init/SqlInitializationProperties;)Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;

+###org/springframework/boot/autoconfigure/sql/init/SqlDataSourceScriptDatabaseInitializer
@2.6.0
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/sql/init/SqlInitializationProperties;)V
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;)V
+#getSettings(Lorg/springframework/boot/autoconfigure/sql/init/SqlInitializationProperties;)Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;

+###org/springframework/boot/autoconfigure/quartz/QuartzDataSourceScriptDatabaseInitializer
@2.6.0
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;)V
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;)V
+#getSettings(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/quartz/QuartzProperties;)Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;

+###org/springframework/boot/autoconfigure/session/JdbcSessionDataSourceScriptDatabaseInitializer
@2.6.0
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/session/JdbcSessionProperties;)V
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;)V

+###org/springframework/boot/autoconfigure/web/ServerProperties$Reactive
@2.6.0
+#<init>()V
+#getSession()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Reactive$Session;

+###org/springframework/boot/autoconfigure/web/ServerProperties$Reactive$Session
@2.6.0
+#<init>()V
+#getTimeout()Ljava/time/Duration;
+#setTimeout(Ljava/time/Duration;)V
+#getCookie()Lorg/springframework/boot/web/server/Cookie;

+###org/springframework/boot/autoconfigure/web/reactive/ReactiveMultipartAutoConfiguration
@2.6.0
+#<init>()V

+###org/springframework/boot/autoconfigure/web/reactive/ReactiveMultipartProperties
@2.6.0
+#<init>()V
+#getMaxInMemorySize()Lorg/springframework/util/unit/DataSize;
+#setMaxInMemorySize(Lorg/springframework/util/unit/DataSize;)V
+#getMaxHeadersSize()Lorg/springframework/util/unit/DataSize;
+#setMaxHeadersSize(Lorg/springframework/util/unit/DataSize;)V
+#getMaxDiskUsagePerPart()Lorg/springframework/util/unit/DataSize;
+#setMaxDiskUsagePerPart(Lorg/springframework/util/unit/DataSize;)V
+#getMaxParts()Ljava/lang/Integer;
+#setMaxParts(Ljava/lang/Integer;)V
+#getStreaming()Ljava/lang/Boolean;
+#setStreaming(Ljava/lang/Boolean;)V
+#getFileStorageDirectory()Ljava/lang/String;
+#setFileStorageDirectory(Ljava/lang/String;)V
+#getHeadersCharset()Ljava/nio/charset/Charset;
+#setHeadersCharset(Ljava/nio/charset/Charset;)V
@3.0.0
-#getStreaming()Ljava/lang/Boolean;
-#setStreaming(Ljava/lang/Boolean;)V

+###org/springframework/boot/autoconfigure/web/reactive/WebSessionIdResolverAutoConfiguration
@2.6.0
+#<init>(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;)V
+#webSessionIdResolver()Lorg/springframework/web/server/session/WebSessionIdResolver;

+###org/springframework/boot/autoconfigure/integration/IntegrationDataSourceScriptDatabaseInitializer
@2.6.0
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/integration/IntegrationProperties$Jdbc;)V
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;)V

+###org/springframework/boot/autoconfigure/integration/IntegrationProperties$Poller
@2.6.0
+#<init>()V
+#getMaxMessagesPerPoll()I
+#setMaxMessagesPerPoll(I)V
+#getReceiveTimeout()Ljava/time/Duration;
+#setReceiveTimeout(Ljava/time/Duration;)V
+#getFixedDelay()Ljava/time/Duration;
+#setFixedDelay(Ljava/time/Duration;)V
+#getFixedRate()Ljava/time/Duration;
+#setFixedRate(Ljava/time/Duration;)V
+#getInitialDelay()Ljava/time/Duration;
+#setInitialDelay(Ljava/time/Duration;)V
+#getCron()Ljava/lang/String;
+#setCron(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/integration/IntegrationProperties$Management
@2.6.0
+#<init>()V
+#isDefaultLoggingEnabled()Z
+#setDefaultLoggingEnabled(Z)V
@3.0.0
+#getObservationPatterns()Ljava/util/List;
+#setObservationPatterns(Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration$Neo4jOgmSessionFactoryConfiguration
@2.1.7.RELEASE
+#configuration(Lorg/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties;)Lorg/neo4j/ogm/config/Configuration;
+#sessionFactory(Lorg/neo4j/ogm/config/Configuration;Lorg/springframework/context/ApplicationContext;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/neo4j/ogm/session/SessionFactory;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration$Neo4jOgmSessionFactoryConfiguration

+###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration$FlywayInitializerNamedParameterJdbcOperationsDependencyConfiguration
@2.1.4.RELEASE
+#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration$FlywayInitializerNamedParameterJdbcOperationsDependencyConfiguration

+###org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseNamedParameterJdbcOperationsDependencyConfiguration
@2.1.4.RELEASE
+#<init>()V
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseNamedParameterJdbcOperationsDependencyConfiguration

+###org/springframework/boot/autoconfigure/condition/OnBeanCondition$MatchResult
@2.1.0.RELEASE
+#isAllMatched()Z
+#isAnyMatched()Z
+#getMatchedAnnotations()Ljava/util/Map;
+#getMatchedNames()Ljava/util/List;
+#getMatchedTypes()Ljava/util/Map;
+#getUnmatchedAnnotations()Ljava/util/List;
+#getUnmatchedNames()Ljava/util/List;
+#getUnmatchedTypes()Ljava/util/List;
+#getNamesOfAllMatches()Ljava/util/Set;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/condition/OnBeanCondition$MatchResult

+###org/springframework/boot/autoconfigure/condition/OnBeanCondition$BeanSearchSpec
@2.1.0.RELEASE
+#<init>(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;Ljava/lang/Class;)V
+#<init>(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;Ljava/lang/Class;Ljava/lang/Class;)V
+#getTypeExtractor(Ljava/lang/ClassLoader;)Lorg/springframework/boot/autoconfigure/condition/BeanTypeRegistry$TypeExtractor;
+#getStrategy()Lorg/springframework/boot/autoconfigure/condition/SearchStrategy;
+#getNames()Ljava/util/List;
+#getTypes()Ljava/util/List;
+#getAnnotations()Ljava/util/List;
+#getIgnoredTypes()Ljava/util/List;
+#toString()Ljava/lang/String;
@2.2.0.RELEASE
-###org/springframework/boot/autoconfigure/condition/OnBeanCondition$BeanSearchSpec

+###org/springframework/boot/autoconfigure/security/servlet/SecurityRequestMatcherProviderAutoConfiguration$JerseyRequestMatcherConfiguration
@2.0.7.RELEASE
+#<init>()V
+#requestMatcherProvider(Lorg/springframework/boot/autoconfigure/web/servlet/JerseyApplicationPath;)Lorg/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider;
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/security/servlet/SecurityRequestMatcherProviderAutoConfiguration$JerseyRequestMatcherConfiguration

+###org/springframework/boot/autoconfigure/security/servlet/SecurityRequestMatcherProviderAutoConfiguration$MvcRequestMatcherConfiguration
@2.0.7.RELEASE
+#<init>()V
+#requestMatcherProvider(Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;)Lorg/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider;
@2.1.0.RELEASE
-###org/springframework/boot/autoconfigure/security/servlet/SecurityRequestMatcherProviderAutoConfiguration$MvcRequestMatcherConfiguration

+###org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientAutoConfiguration$RestHighLevelClientConfiguration
@2.1.0.RELEASE
+#<init>()V
+#restHighLevelClient(Lorg/elasticsearch/client/RestClientBuilder;)Lorg/elasticsearch/client/RestHighLevelClient;
@2.1.7.RELEASE
-###org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientAutoConfiguration$RestHighLevelClientConfiguration

+###org/springframework/boot/autoconfigure/amqp/RabbitStreamTemplateConfigurer
@2.7.0
+#<init>()V
+#setMessageConverter(Lorg/springframework/amqp/support/converter/MessageConverter;)V
+#setStreamMessageConverter(Lorg/springframework/rabbit/stream/support/converter/StreamMessageConverter;)V
+#setProducerCustomizer(Lorg/springframework/rabbit/stream/producer/ProducerCustomizer;)V
+#configure(Lorg/springframework/rabbit/stream/producer/RabbitStreamTemplate;)V

+###org/springframework/boot/autoconfigure/batch/BatchProperties$Isolation
@2.7.0
+#values()[Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Isolation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/batch/BatchProperties$Isolation;
@3.0.0
-###org/springframework/boot/autoconfigure/batch/BatchProperties$Isolation

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$AssertingParty$Verification
@2.7.0
+#<init>()V
+#getCredentials()Ljava/util/List;
+#setCredentials(Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$AssertingParty$Verification$Credential
@2.7.0
+#<init>()V
+#getCertificateLocation()Lorg/springframework/core/io/Resource;
+#setCertificateLocation(Lorg/springframework/core/io/Resource;)V

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Singlelogout
@2.7.0
+#<init>()V
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#getResponseUrl()Ljava/lang/String;
+#setResponseUrl(Ljava/lang/String;)V
+#getBinding()Lorg/springframework/security/saml2/provider/service/registration/Saml2MessageBinding;
+#setBinding(Lorg/springframework/security/saml2/provider/service/registration/Saml2MessageBinding;)V

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$AssertingParty
@2.7.0
+#<init>()V
+#getEntityId()Ljava/lang/String;
+#setEntityId(Ljava/lang/String;)V
+#getMetadataUri()Ljava/lang/String;
+#setMetadataUri(Ljava/lang/String;)V
+#getSinglesignon()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$AssertingParty$Singlesignon;
+#getVerification()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$AssertingParty$Verification;
+#getSinglelogout()Lorg/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$Singlelogout;

+###org/springframework/boot/autoconfigure/security/saml2/Saml2RelyingPartyProperties$AssertingParty$Singlesignon
@2.7.0
+#<init>()V
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#getBinding()Lorg/springframework/security/saml2/provider/service/registration/Saml2MessageBinding;
+#setBinding(Lorg/springframework/security/saml2/provider/service/registration/Saml2MessageBinding;)V
+#isSignRequest()Z
+#getSignRequest()Ljava/lang/Boolean;
+#setSignRequest(Ljava/lang/Boolean;)V
@3.0.0
+#setSignRequest(Z)V
-#getSignRequest()Ljava/lang/Boolean;
-#setSignRequest(Ljava/lang/Boolean;)V

+###org/springframework/boot/autoconfigure/AutoConfiguration
@2.7.0
+#value()Ljava/lang/String;
+#before()[Ljava/lang/Class;
+#beforeName()[Ljava/lang/String;
+#after()[Ljava/lang/Class;
+#afterName()[Ljava/lang/String;

+###org/springframework/boot/autoconfigure/jmx/JmxProperties
@2.7.0
+#<init>()V
+#getEnabled()Z
+#setEnabled(Z)V
+#isUniqueNames()Z
+#setUniqueNames(Z)V
+#getServer()Ljava/lang/String;
+#setServer(Ljava/lang/String;)V
+#getDefaultDomain()Ljava/lang/String;
+#setDefaultDomain(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Retry$Topic
@2.7.0
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getAttempts()I
+#setAttempts(I)V
+#getDelay()Ljava/time/Duration;
+#setDelay(Ljava/time/Duration;)V
+#getMultiplier()D
+#setMultiplier(D)V
+#getMaxDelay()Ljava/time/Duration;
+#setMaxDelay(Ljava/time/Duration;)V
+#isRandomBackOff()Z
+#setRandomBackOff(Z)V

+###org/springframework/boot/autoconfigure/kafka/KafkaProperties$Retry
@2.7.0
+#<init>()V
+#getTopic()Lorg/springframework/boot/autoconfigure/kafka/KafkaProperties$Retry$Topic;

+###org/springframework/boot/autoconfigure/cache/Cache2kBuilderCustomizer
@2.7.0
+#customize(Lorg/cache2k/Cache2kBuilder;)V

+###org/springframework/boot/autoconfigure/hazelcast/HazelcastConfigCustomizer
@2.7.0
+#customize(Lcom/hazelcast/config/Config;)V

+###org/springframework/boot/autoconfigure/graphql/data/GraphQlQueryByExampleAutoConfiguration
@2.7.0
+#<init>()V
+#queryByExampleRegistrar(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/graphql/GraphQlSourceBuilderCustomizer;

+###org/springframework/boot/autoconfigure/graphql/data/GraphQlQuerydslAutoConfiguration
@2.7.0
+#<init>()V
+#querydslRegistrar(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/graphql/GraphQlSourceBuilderCustomizer;

+###org/springframework/boot/autoconfigure/graphql/data/GraphQlReactiveQueryByExampleAutoConfiguration
@2.7.0
+#<init>()V
+#reactiveQueryByExampleRegistrar(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/graphql/GraphQlSourceBuilderCustomizer;

+###org/springframework/boot/autoconfigure/graphql/data/GraphQlReactiveQuerydslAutoConfiguration
@2.7.0
+#<init>()V
+#reactiveQuerydslRegistrar(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/boot/autoconfigure/graphql/GraphQlSourceBuilderCustomizer;

+###org/springframework/boot/autoconfigure/graphql/GraphQlProperties$Schema
@2.7.0
+#<init>()V
+#getLocations()[Ljava/lang/String;
+#setLocations([Ljava/lang/String;)V
+#getFileExtensions()[Ljava/lang/String;
+#setFileExtensions([Ljava/lang/String;)V
+#getIntrospection()Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties$Schema$Introspection;
+#getPrinter()Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties$Schema$Printer;

+###org/springframework/boot/autoconfigure/graphql/GraphQlProperties
@2.7.0
+#<init>()V
+#getGraphiql()Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties$Graphiql;
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getSchema()Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties$Schema;
+#getWebsocket()Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties$Websocket;
+#getRsocket()Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties$Rsocket;

+###org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration$GraphQlEndpointCorsConfiguration
@2.7.0
+#<init>(Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;Lorg/springframework/boot/autoconfigure/graphql/GraphQlCorsProperties;)V
+#addCorsMappings(Lorg/springframework/web/servlet/config/annotation/CorsRegistry;)V

+###org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration$WebSocketConfiguration
@2.7.0
+#<init>()V
+#graphQlWebSocketHandler(Lorg/springframework/graphql/server/WebGraphQlHandler;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;Lorg/springframework/boot/autoconfigure/http/HttpMessageConverters;)Lorg/springframework/graphql/server/webmvc/GraphQlWebSocketHandler;
+#graphQlWebSocketMapping(Lorg/springframework/graphql/server/webmvc/GraphQlWebSocketHandler;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;)Lorg/springframework/web/servlet/HandlerMapping;

+###org/springframework/boot/autoconfigure/graphql/servlet/GraphQlWebMvcAutoConfiguration
@2.7.0
+#<init>()V
+#graphQlHttpHandler(Lorg/springframework/graphql/server/WebGraphQlHandler;)Lorg/springframework/graphql/server/webmvc/GraphQlHttpHandler;
+#webGraphQlHandler(Lorg/springframework/graphql/ExecutionGraphQlService;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/graphql/server/WebGraphQlHandler;
+#graphQlRouterFunction(Lorg/springframework/graphql/server/webmvc/GraphQlHttpHandler;Lorg/springframework/graphql/execution/GraphQlSource;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;)Lorg/springframework/web/servlet/function/RouterFunction;
@3.0.0
+#webGraphQlHandler(Lorg/springframework/graphql/ExecutionGraphQlService;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/graphql/server/WebGraphQlHandler;
-#webGraphQlHandler(Lorg/springframework/graphql/ExecutionGraphQlService;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/graphql/server/WebGraphQlHandler;

+###org/springframework/boot/autoconfigure/graphql/security/GraphQlWebMvcSecurityAutoConfiguration
@2.7.0
+#<init>()V
+#securityDataFetcherExceptionResolver()Lorg/springframework/graphql/execution/SecurityDataFetcherExceptionResolver;
+#securityContextThreadLocalAccessor()Lorg/springframework/graphql/execution/SecurityContextThreadLocalAccessor;
@3.0.0
-#securityContextThreadLocalAccessor()Lorg/springframework/graphql/execution/SecurityContextThreadLocalAccessor;

+###org/springframework/boot/autoconfigure/graphql/security/GraphQlWebFluxSecurityAutoConfiguration
@2.7.0
+#<init>()V
+#reactiveSecurityDataFetcherExceptionResolver()Lorg/springframework/graphql/execution/ReactiveSecurityDataFetcherExceptionResolver;

+###org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration
@2.7.0
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
+#graphQlSource(Lorg/springframework/core/io/support/ResourcePatternResolver;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/graphql/execution/GraphQlSource;
+#batchLoaderRegistry()Lorg/springframework/graphql/execution/BatchLoaderRegistry;
+#executionGraphQlService(Lorg/springframework/graphql/execution/GraphQlSource;Lorg/springframework/graphql/execution/BatchLoaderRegistry;)Lorg/springframework/graphql/ExecutionGraphQlService;
+#annotatedControllerConfigurer()Lorg/springframework/graphql/data/method/annotation/support/AnnotatedControllerConfigurer;
@2.7.2
+#graphQlSource(Lorg/springframework/core/io/support/ResourcePatternResolver;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/graphql/execution/GraphQlSource;
-#graphQlSource(Lorg/springframework/core/io/support/ResourcePatternResolver;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/graphql/execution/GraphQlSource;

+###org/springframework/boot/autoconfigure/graphql/ConditionalOnGraphQlSchema
@2.7.0

+###org/springframework/boot/autoconfigure/graphql/GraphQlSourceBuilderCustomizer
@2.7.0
+#customize(Lorg/springframework/graphql/execution/GraphQlSource$SchemaResourceBuilder;)V

+###org/springframework/boot/autoconfigure/graphql/GraphQlProperties$Rsocket
@2.7.0
+#<init>()V
+#getMapping()Ljava/lang/String;
+#setMapping(Ljava/lang/String;)V

+###org/springframework/boot/autoconfigure/graphql/GraphQlProperties$Websocket
@2.7.0
+#<init>()V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getConnectionInitTimeout()Ljava/time/Duration;
+#setConnectionInitTimeout(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/graphql/GraphQlProperties$Schema$Introspection
@2.7.0
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/boot/autoconfigure/graphql/rsocket/RSocketGraphQlClientAutoConfiguration
@2.7.0
+#<init>()V
+#rsocketGraphQlClientBuilder(Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;)Lorg/springframework/graphql/client/RSocketGraphQlClient$Builder;

+###org/springframework/boot/autoconfigure/graphql/rsocket/GraphQlRSocketAutoConfiguration
@2.7.0
+#<init>()V
+#graphQlRSocketHandler(Lorg/springframework/graphql/ExecutionGraphQlService;Lorg/springframework/beans/factory/ObjectProvider;Lcom/fasterxml/jackson/databind/ObjectMapper;)Lorg/springframework/graphql/server/GraphQlRSocketHandler;
+#graphQlRSocketController(Lorg/springframework/graphql/server/GraphQlRSocketHandler;)Lorg/springframework/boot/autoconfigure/graphql/rsocket/GraphQlRSocketController;

+###org/springframework/boot/autoconfigure/graphql/GraphQlCorsProperties
@2.7.0
+#<init>()V
+#getAllowedOrigins()Ljava/util/List;
+#setAllowedOrigins(Ljava/util/List;)V
+#getAllowedOriginPatterns()Ljava/util/List;
+#setAllowedOriginPatterns(Ljava/util/List;)V
+#getAllowedMethods()Ljava/util/List;
+#setAllowedMethods(Ljava/util/List;)V
+#getAllowedHeaders()Ljava/util/List;
+#setAllowedHeaders(Ljava/util/List;)V
+#getExposedHeaders()Ljava/util/List;
+#setExposedHeaders(Ljava/util/List;)V
+#getAllowCredentials()Ljava/lang/Boolean;
+#setAllowCredentials(Ljava/lang/Boolean;)V
+#getMaxAge()Ljava/time/Duration;
+#setMaxAge(Ljava/time/Duration;)V
+#toCorsConfiguration()Lorg/springframework/web/cors/CorsConfiguration;

+###org/springframework/boot/autoconfigure/graphql/GraphQlProperties$Graphiql
@2.7.0
+#<init>()V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/boot/autoconfigure/graphql/GraphQlProperties$Schema$Printer
@2.7.0
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/boot/autoconfigure/graphql/reactive/GraphQlWebFluxAutoConfiguration$WebSocketConfiguration
@2.7.0
+#<init>()V
+#graphQlWebSocketHandler(Lorg/springframework/graphql/server/WebGraphQlHandler;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;Lorg/springframework/http/codec/ServerCodecConfigurer;)Lorg/springframework/graphql/server/webflux/GraphQlWebSocketHandler;
+#graphQlWebSocketEndpoint(Lorg/springframework/graphql/server/webflux/GraphQlWebSocketHandler;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;)Lorg/springframework/web/reactive/HandlerMapping;

+###org/springframework/boot/autoconfigure/graphql/reactive/GraphQlWebFluxAutoConfiguration
@2.7.0
+#<init>()V
+#graphQlHttpHandler(Lorg/springframework/graphql/server/WebGraphQlHandler;)Lorg/springframework/graphql/server/webflux/GraphQlHttpHandler;
+#webGraphQlHandler(Lorg/springframework/graphql/ExecutionGraphQlService;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/graphql/server/WebGraphQlHandler;
+#graphQlEndpoint(Lorg/springframework/graphql/server/webflux/GraphQlHttpHandler;Lorg/springframework/graphql/execution/GraphQlSource;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;)Lorg/springframework/web/reactive/function/server/RouterFunction;
@2.7.1
+#graphQlRouterFunction(Lorg/springframework/graphql/server/webflux/GraphQlHttpHandler;Lorg/springframework/graphql/execution/GraphQlSource;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;)Lorg/springframework/web/reactive/function/server/RouterFunction;
-#graphQlEndpoint(Lorg/springframework/graphql/server/webflux/GraphQlHttpHandler;Lorg/springframework/graphql/execution/GraphQlSource;Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;)Lorg/springframework/web/reactive/function/server/RouterFunction;

+###org/springframework/boot/autoconfigure/graphql/reactive/GraphQlWebFluxAutoConfiguration$GraphQlEndpointCorsConfiguration
@2.7.0
+#<init>(Lorg/springframework/boot/autoconfigure/graphql/GraphQlProperties;Lorg/springframework/boot/autoconfigure/graphql/GraphQlCorsProperties;)V
+#addCorsMappings(Lorg/springframework/web/reactive/config/CorsRegistry;)V

+###org/springframework/boot/autoconfigure/mustache/MustacheProperties$Reactive
@2.7.0
+#<init>()V
+#getMediaTypes()Ljava/util/List;
+#setMediaTypes(Ljava/util/List;)V

+###org/springframework/boot/autoconfigure/mustache/MustacheProperties$Servlet
@2.7.0
+#<init>()V
+#isAllowRequestOverride()Z
+#setAllowRequestOverride(Z)V
+#isAllowSessionOverride()Z
+#setAllowSessionOverride(Z)V
+#isCache()Z
+#setCache(Z)V
+#getContentType()Lorg/springframework/util/MimeType;
+#setContentType(Lorg/springframework/util/MimeType;)V
+#isExposeRequestAttributes()Z
+#setExposeRequestAttributes(Z)V
+#isExposeSessionAttributes()Z
+#setExposeSessionAttributes(Z)V
+#isExposeSpringMacroHelpers()Z
+#setExposeSpringMacroHelpers(Z)V

+###org/springframework/boot/autoconfigure/data/r2dbc/R2dbcTransactionManagerAutoConfiguration
@2.3.0.RELEASE
+#<init>()V
+#connectionFactoryTransactionManager(Lio/r2dbc/spi/ConnectionFactory;)Lorg/springframework/data/r2dbc/connectionfactory/R2dbcTransactionManager;
@2.4.0
-###org/springframework/boot/autoconfigure/data/r2dbc/R2dbcTransactionManagerAutoConfiguration

+###org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$AbstractRedisConfiguration
@1.3.0.RELEASE
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$AbstractRedisConfiguration

+###org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisPooledConnectionConfiguration
@1.3.0.RELEASE
+#redisConnectionFactory()Lorg/springframework/data/redis/connection/jedis/JedisConnectionFactory;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisPooledConnectionConfiguration

+###org/springframework/boot/autoconfigure/session/SessionAutoConfiguration$SessionRedisHttpConfiguration
@1.3.0.RELEASE
+#<init>()V
+#applyConfigurationProperties()V
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/session/SessionAutoConfiguration$SessionRedisHttpConfiguration

+###org/springframework/boot/autoconfigure/session/SessionAutoConfiguration$SessionRedisHttpConfiguration$ServerPropertiesConfiguration
@1.3.0.RELEASE
+#<init>()V
+#serverProperties()Lorg/springframework/boot/autoconfigure/web/ServerProperties;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/session/SessionAutoConfiguration$SessionRedisHttpConfiguration$ServerPropertiesConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration$BaseConfiguration
@1.3.0.RELEASE
+#oauth2RemoteResource()Lorg/springframework/security/oauth2/client/token/grant/code/AuthorizationCodeResourceDetails;
@1.3.4.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration$BaseConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoCustomConfiguration$WebSecurityEnhancerCondition
@1.3.0.RELEASE
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
@1.4.1.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2SsoCustomConfiguration$WebSecurityEnhancerCondition

+###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$UserInfoRestTemplateConfiguration
@1.3.0.RELEASE
+#userInfoRestTemplate()Lorg/springframework/security/oauth2/client/OAuth2RestTemplate;
@1.4.0.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$UserInfoRestTemplateConfiguration

+###org/springframework/boot/autoconfigure/test/ImportAutoConfiguration
@1.3.0.RELEASE
+#value()[Ljava/lang/Class;
@1.5.0.RELEASE
-###org/springframework/boot/autoconfigure/test/ImportAutoConfiguration

+###org/springframework/boot/autoconfigure/amqp/EnvironmentBuilderCustomizer
@3.0.0
+#customize(Lcom/rabbitmq/stream/EnvironmentBuilder;)V

+###org/springframework/boot/autoconfigure/validation/ValidationConfigurationCustomizer
@3.0.0
+#customize(Ljakarta/validation/Configuration;)V

+###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchProperties$Restclient$Sniffer
@3.0.0
+#<init>()V
+#getInterval()Ljava/time/Duration;
+#setInterval(Ljava/time/Duration;)V
+#getDelayAfterFailure()Ljava/time/Duration;
+#setDelayAfterFailure(Ljava/time/Duration;)V

+###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchClientAutoConfiguration
@3.0.0
+#<init>()V

+###org/springframework/boot/autoconfigure/elasticsearch/ReactiveElasticsearchClientAutoConfiguration
@3.0.0
+#<init>()V

+###org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchProperties$Restclient
@3.0.0
+#<init>()V
+#getSniffer()Lorg/springframework/boot/autoconfigure/elasticsearch/ElasticsearchProperties$Restclient$Sniffer;

+###org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyProperties
@2.7.9
+#<init>()V
+#getShutdownQuietPeriod()Ljava/time/Duration;
+#setShutdownQuietPeriod(Ljava/time/Duration;)V
@3.0.0
-###org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyProperties

+###org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyConfigurations
@2.7.9
@3.0.0
-###org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyConfigurations

+###org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyConfigurations$ReactorResourceFactoryConfiguration
@2.7.9
+#<init>()V
@3.0.0
-###org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyConfigurations$ReactorResourceFactoryConfiguration

+###org/springframework/boot/autoconfigure/session/RedisSessionProperties$RepositoryType
@3.0.0
+#values()[Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties$RepositoryType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/session/RedisSessionProperties$RepositoryType;

+###org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties$Problemdetails
@3.0.0
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/boot/autoconfigure/web/WebResourcesRuntimeHints
@3.0.0
+#<init>()V
+#registerHints(Lorg/springframework/aot/hint/RuntimeHints;Ljava/lang/ClassLoader;)V

+###org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties$Problemdetails
@3.0.0
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/boot/autoconfigure/mongo/MongoTemplateAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#mongoTemplate(Lcom/mongodb/Mongo;)Lorg/springframework/data/mongodb/core/MongoTemplate;
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/mongo/MongoTemplateAutoConfiguration

+###org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfiguration$JpaWebConfiguration
@1.0.0.RELEASE
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfiguration$JpaWebConfiguration

+###org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfiguration

+###org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfiguration

+###org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfiguration
@1.0.0.RELEASE
+#<init>()V
+#dataSource()Ljavax/sql/DataSource;
+#close()V
+#setJdbcInterceptors(Ljava/lang/String;)V
+#setValidationInterval(J)V
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfiguration

+###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$TomcatConfiguration
@1.0.0.RELEASE
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$TomcatConfiguration

+###org/springframework/boot/autoconfigure/jdbc/AbstractDataSourceConfiguration
@1.0.0.RELEASE
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#afterPropertiesSet()V
+#setDriverClassName(Ljava/lang/String;)V
+#setInitialSize(I)V
+#setUrl(Ljava/lang/String;)V
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#setMaxActive(I)V
+#setMaxIdle(I)V
+#setMinIdle(I)V
+#setValidationQuery(Ljava/lang/String;)V
+#setTestOnBorrow(Z)V
+#setTestOnReturn(Z)V
+#setTestWhileIdle(Z)V
+#setTimeBetweenEvictionRunsMillis(I)V
+#setMinEvictableIdleTimeMillis(I)V
+#setMaxWait(I)V
+#getInitialSize()I
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/AbstractDataSourceConfiguration

+###org/springframework/boot/autoconfigure/jdbc/CommonsDataSourceConfiguration
@1.0.0.RELEASE
+#<init>()V
+#dataSource()Ljavax/sql/DataSource;
+#close()V
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/CommonsDataSourceConfiguration

+###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$DbcpConfiguration
@1.0.0.RELEASE
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$DbcpConfiguration

+###org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration$MBeanExport
@1.0.0.RELEASE
+#<init>()V
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration$MBeanExport

+###org/springframework/boot/autoconfigure/condition/OnExpressionCondition
@1.0.0.RELEASE
+#<init>()V
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/condition/OnExpressionCondition

+###org/springframework/boot/autoconfigure/jms/JmsTemplateProperties
@1.0.0.RELEASE
+#<init>()V
+#isPubSubDomain()Z
+#setPubSubDomain(Z)V
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/JmsTemplateProperties

+###org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfiguration$ActiveMQConnectionFactoryCreator
@1.0.0.RELEASE
+#jmsConnectionFactory()Ljavax/jms/ConnectionFactory;
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfiguration$ActiveMQConnectionFactoryCreator

+###org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#jmsTemplate()Lorg/springframework/jms/core/JmsTemplate;
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfiguration

+###org/springframework/boot/autoconfigure/jms/ActiveMQProperties
@1.0.0.RELEASE
+#<init>()V
+#getBrokerUrl()Ljava/lang/String;
+#setBrokerUrl(Ljava/lang/String;)V
+#isInMemory()Z
+#setInMemory(Z)V
+#isPooled()Z
+#setPooled(Z)V
@1.0.1.RELEASE
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
@1.1.0.RELEASE
-###org/springframework/boot/autoconfigure/jms/ActiveMQProperties

+###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration$MappingJackson2HttpMessageConverterConfiguration
@1.2.0.RELEASE
+#mappingJackson2HttpMessageConverter(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lorg/springframework/http/converter/json/MappingJackson2HttpMessageConverter;
@1.2.2.RELEASE
-###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration$MappingJackson2HttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration
@1.2.0.RELEASE
+#mappingJackson2XmlHttpMessageConverter(Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;)Lorg/springframework/http/converter/xml/MappingJackson2XmlHttpMessageConverter;
@1.2.2.RELEASE
-###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration$GsonHttpMessageConverterConfiguration
@1.2.0.RELEASE
+#gsonHttpMessageConverter(Lcom/google/gson/Gson;)Lorg/springframework/http/converter/json/GsonHttpMessageConverter;
@1.2.2.RELEASE
-###org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration$GsonHttpMessageConverterConfiguration

+###org/springframework/boot/autoconfigure/security/oauth2/OAuth2AutoConfiguration$ResourceServerOrderProcessor
@1.3.0.RELEASE
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@1.3.1.RELEASE
-###org/springframework/boot/autoconfigure/security/oauth2/OAuth2AutoConfiguration$ResourceServerOrderProcessor

+###org/springframework/boot/autoconfigure/freemarker/FreeMarkerNonWebConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties;)V
+#freeMarkerConfiguration()Lorg/springframework/ui/freemarker/FreeMarkerConfigurationFactoryBean;
@2.0.1.RELEASE
-###org/springframework/boot/autoconfigure/freemarker/FreeMarkerNonWebConfiguration
