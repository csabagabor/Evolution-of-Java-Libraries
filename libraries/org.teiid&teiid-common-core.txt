
+###org/teiid/core/BundleUtil
@10.0.0.Alpha2
+#getBundleUtil(Ljava/lang/Class;)Lorg/teiid/core/BundleUtil;
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;)V
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#keyExists(Ljava/lang/String;)Z
+#getString(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;
+#getString(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
+#gs(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
+#gs(Lorg/teiid/core/BundleUtil$Event;[Ljava/lang/Object;)Ljava/lang/String;
+#getStringOrKey(Ljava/lang/String;)Ljava/lang/String;

+###org/teiid/core/types/basic/NumberToDoubleTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;ZZ)V
+#getSourceType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z
@10.0.0.Beta1
-#getSourceType()Ljava/lang/Class;

+###org/teiid/core/types/basic/FixedNumberToBigIntegerTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;

+###org/teiid/core/types/basic/TimestampToDateTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/NumberToLongTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;ZZ)V
+#getSourceType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z
@10.0.0.Beta1
-#getSourceType()Ljava/lang/Class;

+###org/teiid/core/types/basic/StringToTimeTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/FixedNumberToBigDecimalTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;

+###org/teiid/core/types/ClobType$Type
@10.0.0.Alpha2
+#values()[Lorg/teiid/core/types/ClobType$Type;
+#valueOf(Ljava/lang/String;)Lorg/teiid/core/types/ClobType$Type;

+###org/teiid/core/types/LobSearchUtil
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/core/types/DataTypeManager$DefaultDataTypes
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/core/types/JDBCSQLTypeInfo
@10.0.0.Alpha2
+#getSQLType(Ljava/lang/String;)I
+#getSQLTypeFromClass(Ljava/lang/String;)I
+#getSQLTypeFromRuntimeType(Ljava/lang/Class;)I
+#getJavaClassName(I)Ljava/lang/String;
+#getTypeName(I)Ljava/lang/String;
+#getMMTypeNames()Ljava/util/Set;
+#getMaxDisplaySize(Ljava/lang/Class;)Ljava/lang/Integer;
+#getMaxDisplaySize(Ljava/lang/String;)Ljava/lang/Integer;
+#getDefaultPrecision(Ljava/lang/Class;)Ljava/lang/Integer;
+#getDefaultPrecision(Ljava/lang/String;)Ljava/lang/Integer;

+###org/teiid/core/types/Sequencable
@10.0.0.Alpha2
+#getCharSequence()Ljava/lang/CharSequence;

+###org/teiid/core/types/InputStreamFactory$FileInputStreamFactory
@10.0.0.Alpha2
+#<init>(Ljava/io/File;)V
+#getLength()J
+#getInputStream()Ljava/io/InputStream;
+#getStorageMode()Lorg/teiid/core/types/InputStreamFactory$StorageMode;

+###org/teiid/core/util/ExecutorUtils
@10.0.0.Alpha2
+#<init>()V
+#newFixedThreadPool(ILjava/lang/String;)Ljava/util/concurrent/ExecutorService;
+#newFixedThreadPool(IILjava/lang/String;)Ljava/util/concurrent/ExecutorService;
+#getDirectExecutor()Ljava/util/concurrent/Executor;

+###org/teiid/core/util/SqlUtil
@10.0.0.Alpha2
+#isUpdateSql(Ljava/lang/String;)Z
+#getKeyword(Ljava/lang/String;)Ljava/lang/String;
+#createFeatureNotSupportedException()Ljava/sql/SQLException;

+###org/teiid/core/util/StringUtil$Constants
@10.0.0.Alpha2

+###org/teiid/core/TeiidProcessingException
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;Ljava/lang/String;)V

+###org/teiid/core/TeiidException
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;Ljava/lang/String;)V
+#getCode()Ljava/lang/String;
+#setCode(Ljava/lang/String;)V
+#getOriginalType()Ljava/lang/String;
+#setOriginalType(Ljava/lang/String;)V
+#getMessage()Ljava/lang/String;

+###org/teiid/core/types/basic/AnyToStringTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;

+###org/teiid/core/types/basic/StringToCharacterTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/StringToBigIntegerTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/NumberToBooleanTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Comparable;)V
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#isExplicit()Z

+###org/teiid/core/types/basic/TimeToTimestampTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;

+###org/teiid/core/types/BinaryType
@10.0.0.Alpha2
+#<init>([B)V
+#getBytesDirect()[B
+#getBytes()[B
+#getByte(I)B
+#getLength()I
+#compareTo(Lorg/teiid/core/types/BinaryType;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toBlob()Lorg/teiid/core/types/BlobType;
+#compareTo(Ljava/lang/Object;)I

+###org/teiid/core/types/ClobType
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/sql/Clob;)V
+#getAsciiStream()Ljava/io/InputStream;
+#getCharacterStream()Ljava/io/Reader;
+#getSubString(JI)Ljava/lang/String;
+#position(Ljava/sql/Clob;J)J
+#position(Ljava/lang/String;J)J
+#setAsciiStream(J)Ljava/io/OutputStream;
+#setCharacterStream(J)Ljava/io/Writer;
+#setString(JLjava/lang/String;II)I
+#setString(JLjava/lang/String;)I
+#truncate(J)V
+#getString(Ljava/sql/Clob;)Ljava/lang/String;
+#getCharSequence()Ljava/lang/CharSequence;
+#free()V
+#getCharacterStream(JJ)Ljava/io/Reader;
+#compareTo(Lorg/teiid/core/types/ClobType;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getType()Lorg/teiid/core/types/ClobType$Type;
+#setType(Lorg/teiid/core/types/ClobType$Type;)V
+#readExternal(Ljava/io/ObjectInput;)V
+#writeExternal(Ljava/io/ObjectOutput;)V
+#compareTo(Ljava/lang/Object;)I
@11.2.0
-#getAsciiStream()Ljava/io/InputStream;
-#getCharacterStream()Ljava/io/Reader;
-#getSubString(JI)Ljava/lang/String;
-#position(Ljava/sql/Clob;J)J
-#position(Ljava/lang/String;J)J
-#setAsciiStream(J)Ljava/io/OutputStream;
-#setCharacterStream(J)Ljava/io/Writer;
-#setString(JLjava/lang/String;II)I
-#setString(JLjava/lang/String;)I
-#truncate(J)V
-#getString(Ljava/sql/Clob;)Ljava/lang/String;
-#getCharSequence()Ljava/lang/CharSequence;
-#free()V
-#getCharacterStream(JJ)Ljava/io/Reader;
-#compareTo(Lorg/teiid/core/types/ClobType;)I
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#compareTo(Ljava/lang/Object;)I

+###org/teiid/core/types/InputStreamFactory$StreamFactoryReference
@10.0.0.Alpha2
+#setStreamFactory(Lorg/teiid/core/types/InputStreamFactory;)V

+###org/teiid/core/util/AccessibleBufferedInputStream
@10.0.0.Alpha2
+#<init>(Ljava/io/InputStream;I)V
+#getBuffer()[B
+#getCount()I
+#getPosition()I
+#setPosition(I)V

+###org/teiid/core/CorePlugin
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/core/types/BaseLob
@10.0.0.Alpha2
+#<init>()V
+#setStreamFactory(Lorg/teiid/core/types/InputStreamFactory;)V
+#getStreamFactory()Lorg/teiid/core/types/InputStreamFactory;
+#setEncoding(Ljava/lang/String;)V
+#getCharset()Ljava/nio/charset/Charset;
+#setCharset(Ljava/nio/charset/Charset;)V
+#free()V
+#getCharacterStream()Ljava/io/Reader;
+#getBinaryStream()Ljava/io/InputStream;
+#readExternal(Ljava/io/ObjectInput;)V
+#writeExternal(Ljava/io/ObjectOutput;)V
+#length()J

+###org/teiid/core/types/basic/FloatingNumberToBigDecimalTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;

+###org/teiid/core/types/basic/StringToIntegerTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/StringToBigDecimalTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/BinaryToBlobTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;

+###org/teiid/core/types/basic/NumberToNumberTransform
@10.0.0.Beta1
+#<init>(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Class;)V
+#getSourceType()Ljava/lang/Class;

+###org/teiid/core/types/ArrayImpl
@10.0.0.Alpha2
+#<init>([Ljava/lang/Object;)V
+#<init>()V
+#compareTo(Lorg/teiid/core/types/ArrayImpl;)I
+#compareTo(Lorg/teiid/core/types/ArrayImpl;ZLjava/util/Comparator;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getValues()[Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#isZeroBased()Z
+#setZeroBased(Z)V
+#free()V
+#getArray()Ljava/lang/Object;
+#getArray(Ljava/util/Map;)Ljava/lang/Object;
+#getArray(JI)Ljava/lang/Object;
+#getArray(JILjava/util/Map;)Ljava/lang/Object;
+#getBaseType()I
+#getBaseTypeName()Ljava/lang/String;
+#getResultSet()Ljava/sql/ResultSet;
+#getResultSet(Ljava/util/Map;)Ljava/sql/ResultSet;
+#getResultSet(JI)Ljava/sql/ResultSet;
+#getResultSet(JILjava/util/Map;)Ljava/sql/ResultSet;
+#readExternal(Ljava/io/ObjectInput;)V
+#writeExternal(Ljava/io/ObjectOutput;)V
+#compareTo(Ljava/lang/Object;)I

+###org/teiid/core/types/DataTypeManager
@10.0.0.Alpha2
+#nextPowOf2(I)I
+#getTypeCode(Ljava/lang/Class;)I
+#getClass(I)Ljava/lang/Class;
+#getAllDataTypeNames()Ljava/util/Set;
+#getAllDataTypeClasses()Ljava/util/Set;
+#getDataTypeClass(Ljava/lang/String;)Ljava/lang/Class;
+#isArrayType(Ljava/lang/String;)Z
+#getDataTypeName(Ljava/lang/Class;)Ljava/lang/String;
+#determineDataTypeClass(Ljava/lang/Object;)Ljava/lang/Class;
+#getTransform(Ljava/lang/Class;Ljava/lang/Class;)Lorg/teiid/core/types/Transform;
+#getTransform(Ljava/lang/String;Ljava/lang/String;)Lorg/teiid/core/types/Transform;
+#isTransformable(Ljava/lang/Class;Ljava/lang/Class;)Z
+#isTransformable(Ljava/lang/String;Ljava/lang/String;)Z
+#getImplicitConversions(Ljava/lang/String;Ljava/util/Collection;)V
+#isImplicitConversion(Ljava/lang/String;Ljava/lang/String;)Z
+#getComponentType(Ljava/lang/String;)Ljava/lang/String;
+#isExplicitConversion(Ljava/lang/String;Ljava/lang/String;)Z
+#isLOB(Ljava/lang/Class;)Z
+#isLOB(Ljava/lang/String;)Z
+#convertToRuntimeType(Ljava/lang/Object;Z)Ljava/lang/Object;
+#getRuntimeType(Ljava/lang/Class;)Ljava/lang/Class;
+#transformValue(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#transformValue(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
+#isNonComparable(Ljava/lang/String;)Z
+#setValueCacheEnabled(Z)V
+#isValueCacheEnabled()Z
+#getCanonicalValue(Ljava/lang/Object;)Ljava/lang/Object;
+#getCanonicalString(Ljava/lang/String;)Ljava/lang/String;
+#isHashable(Ljava/lang/Class;)Z
+#getArrayType(Ljava/lang/Class;)Ljava/lang/Class;
@10.0.0.CR2
+#hasLength(Ljava/lang/String;)Z

+###org/teiid/core/types/InputStreamFactory$ClobInputStreamFactory
@10.0.0.Alpha2
+#<init>(Ljava/sql/Clob;)V
+#getCharset()Ljava/nio/charset/Charset;
+#setCharset(Ljava/nio/charset/Charset;)V
+#getInputStream()Ljava/io/InputStream;
+#getCharacterStream()Ljava/io/Reader;
+#getContentType()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getOutputStream()Ljava/io/OutputStream;
+#getStorageMode()Lorg/teiid/core/types/InputStreamFactory$StorageMode;
+#getReader(Ljava/io/Reader;)Ljava/io/Reader;
@12.0.0
+#setTemporary(Z)V

+###org/teiid/core/util/MixinProxy
@10.0.0.Alpha2
+#<init>([Ljava/lang/Object;)V
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;

+###org/teiid/core/util/HashCodeUtil
@10.0.0.Alpha2
+#<init>()V
+#hashCode(IZ)I
+#hashCode(II)I
+#hashCode(IJ)I
+#hashCode(IF)I
+#hashCode(ID)I
+#hashCode(I[Ljava/lang/Object;)I
+#expHashCode(I[Ljava/lang/Object;)I
+#expHashCode(ILjava/util/Collection;)I
+#expHashCode(Ljava/lang/CharSequence;)I
+#expHashCode(Ljava/lang/CharSequence;Z)I

+###org/teiid/core/util/PropertiesUtils
@10.0.0.Alpha2
+#<init>()V
+#clone(Ljava/util/Properties;)Ljava/util/Properties;
+#clone(Ljava/util/Properties;Ljava/util/Properties;Z)Ljava/util/Properties;
+#compare(Ljava/util/Properties;Ljava/util/Properties;)I
+#putAll(Ljava/util/Properties;Ljava/util/Properties;)V
+#setOverrideProperies(Ljava/util/Properties;Ljava/util/Properties;)V
+#getIntProperty(Ljava/util/Properties;Ljava/lang/String;I)I
+#getLongProperty(Ljava/util/Properties;Ljava/lang/String;J)J
+#getFloatProperty(Ljava/util/Properties;Ljava/lang/String;F)F
+#getDoubleProperty(Ljava/util/Properties;Ljava/lang/String;D)D
+#getBooleanProperty(Ljava/util/Properties;Ljava/lang/String;Z)Z
+#loadHeader(Ljava/lang/String;)Ljava/lang/String;
+#load(Ljava/lang/String;)Ljava/util/Properties;
+#loadFromURL(Ljava/net/URL;)Ljava/util/Properties;
+#loadAsResource(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Properties;
+#sort(Ljava/util/Properties;)Ljava/util/Properties;
+#print(Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;)V
+#print(Ljava/lang/String;Ljava/util/Properties;)V
+#print(Ljava/io/PrintStream;Ljava/util/Properties;)V
+#prettyPrint(Ljava/util/Properties;)Ljava/lang/String;
+#sortPropertiesForPrinting(Ljava/util/Properties;)Ljava/util/Collection;
+#saveConvert(Ljava/lang/String;Z)Ljava/lang/String;
+#toHex(I)C
+#toHex([B)Ljava/lang/String;
+#toHex(Ljava/lang/StringBuilder;Ljava/io/InputStream;)V
+#copyProperty(Ljava/util/Properties;Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;)V
+#resolveNestedProperties(Ljava/util/Properties;)Ljava/util/Properties;
+#setBeanProperties(Ljava/lang/Object;Ljava/util/Properties;Ljava/lang/String;)V
+#setBeanProperties(Ljava/lang/Object;Ljava/util/Properties;Ljava/lang/String;Z)V
+#setBeanProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
@10.3.0
+#getHierarchicalProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getHierarchicalProperty(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
-#compare(Ljava/util/Properties;Ljava/util/Properties;)I
-#setOverrideProperies(Ljava/util/Properties;Ljava/util/Properties;)V
-#sort(Ljava/util/Properties;)Ljava/util/Properties;
-#prettyPrint(Ljava/util/Properties;)Ljava/lang/String;
-#copyProperty(Ljava/util/Properties;Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;)V
@10.3.1
+#getCombinedProperties()Ljava/util/Properties;
@12.0.0
+#fromHex(Ljava/lang/String;)[B
@12.1.0
-#print(Ljava/io/PrintStream;Ljava/util/Properties;)V
-#sortPropertiesForPrinting(Ljava/util/Properties;)Ljava/util/Collection;
@12.3.0
-#loadHeader(Ljava/lang/String;)Ljava/lang/String;
-#loadFromURL(Ljava/net/URL;)Ljava/util/Properties;
-#loadAsResource(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Properties;
-#print(Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;)V
-#print(Ljava/lang/String;Ljava/util/Properties;)V
-#saveConvert(Ljava/lang/String;Z)Ljava/lang/String;
@13.0.1
+#getDefaultProperties()Ljava/util/Properties;
-#resolveNestedProperties(Ljava/util/Properties;)Ljava/util/Properties;
-#getCombinedProperties()Ljava/util/Properties;

+###org/teiid/core/util/ReaderInputStream
@10.0.0.Alpha2
+#<init>(Ljava/io/Reader;Ljava/nio/charset/Charset;)V
+#<init>(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V
+#<init>(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
+#read([BII)I
+#read()I
+#close()V

+###org/teiid/core/util/ExternalizeUtil
@10.0.0.Alpha2
+#writeArray(Ljava/io/ObjectOutput;[Ljava/lang/Object;)V
+#writeCollection(Ljava/io/ObjectOutput;Ljava/util/Collection;)V
+#writeList(Ljava/io/ObjectOutput;Ljava/util/List;)V
+#writeMap(Ljava/io/ObjectOutput;Ljava/util/Map;)V
+#readArray(Ljava/io/ObjectInput;Ljava/lang/Class;)[Ljava/lang/Object;
+#readStringArray(Ljava/io/ObjectInput;)[Ljava/lang/String;
+#readList(Ljava/io/ObjectInput;Ljava/lang/Class;)Ljava/util/List;
+#readList(Ljava/io/ObjectInput;)Ljava/util/List;
+#readMap(Ljava/io/ObjectInput;)Ljava/util/Map;
+#writeEnum(Ljava/io/ObjectOutput;Ljava/lang/Enum;)V
+#readEnum(Ljava/io/ObjectInput;Ljava/lang/Class;Ljava/lang/Enum;)Ljava/lang/Enum;

+###org/teiid/core/types/StandardXMLTranslator
@10.0.0.Alpha2
+#getThreadLocalTransformerFactory()Ljavax/xml/transform/TransformerFactory;
+#<init>(Ljavax/xml/transform/Source;)V
+#translate(Ljava/io/Writer;)V

+###org/teiid/core/types/basic/BooleanToNumberTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;

+###org/teiid/core/types/basic/BlobToBinaryTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#isExplicit()Z
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;

+###org/teiid/core/types/basic/StringToClobTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;

+###org/teiid/core/types/basic/NumberToFloatTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;ZZ)V
+#getSourceType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z
@10.0.0.Beta1
-#getSourceType()Ljava/lang/Class;

+###org/teiid/core/types/DataTypeManager$WeakReferenceHashedValueCache
@10.0.0.Alpha2
+#<init>(I)V
+#getByHash(Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Ljava/lang/Object;)Ljava/lang/Object;

+###org/teiid/core/types/DataTypeManager$DefaultDataClasses
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/core/types/DataTypeManager$DataTypeAliases
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/core/types/InputStreamFactory$StorageMode
@10.0.0.Alpha2
+#values()[Lorg/teiid/core/types/InputStreamFactory$StorageMode;
+#valueOf(Ljava/lang/String;)Lorg/teiid/core/types/InputStreamFactory$StorageMode;

+###org/teiid/core/types/Transform
@10.0.0.Alpha2
+#<init>()V
+#transform(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getSourceTypeName()Ljava/lang/String;
+#getTargetType()Ljava/lang/Class;
+#getTargetTypeName()Ljava/lang/String;
+#getDisplayName()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#isExplicit()Z
+#toString()Ljava/lang/String;

+###org/teiid/core/TeiidRuntimeException
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V
+#getCode()Ljava/lang/String;
+#getMessage()Ljava/lang/String;

+###org/teiid/core/crypto/DhKeyGenerator
@10.0.0.Alpha2
+#<init>()V
+#createPublicKey(Z)[B
+#getSymmetricCryptor([BZLjava/lang/ClassLoader;ZZ)Lorg/teiid/core/crypto/SymmetricCryptor;
+#main([Ljava/lang/String;)V

+###org/teiid/core/TeiidComponentException
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;Ljava/lang/String;)V

+###org/teiid/core/util/FileUtils
@10.0.0.Alpha2
+#toFileNameWithExtension(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#toFileNameWithExtension(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#isFilenameValid(Ljava/lang/String;)Z
+#copy(Ljava/lang/String;Ljava/lang/String;)V
+#copy(Ljava/lang/String;Ljava/lang/String;Z)V
+#copyDirectoryContentsRecursively(Ljava/io/File;Ljava/io/File;)V
+#copyFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#copyFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#copyDirectoriesRecursively(Ljava/io/File;Ljava/io/File;)V
+#write(Ljava/io/InputStream;Ljava/lang/String;)V
+#write(Ljava/io/InputStream;Ljava/io/File;)V
+#write(Ljava/io/InputStream;Ljava/io/File;I)V
+#write(Ljava/io/File;Ljava/io/OutputStream;)V
+#write(Ljava/io/File;Ljava/io/OutputStream;I)V
+#write(Ljava/io/InputStream;Ljava/io/OutputStream;I)V
+#write([BLjava/lang/String;)V
+#write([BLjava/io/File;)V
+#findAllFilesInDirectoryRecursively(Ljava/lang/String;)[Ljava/io/File;
+#findAllFilesInDirectory(Ljava/lang/String;)[Ljava/io/File;
+#getFilenameWithoutExtension(Ljava/lang/String;)Ljava/lang/String;
+#getBaseFileNameWithoutExtension(Ljava/lang/String;)Ljava/lang/String;
+#getExtension(Ljava/io/File;)Ljava/lang/String;
+#getExtension(Ljava/lang/String;)Ljava/lang/String;
+#isArchiveFileName(Ljava/lang/String;)Z
+#isClassFileName(Ljava/lang/String;)Z
+#isJavaFileName(Ljava/lang/String;)Z
+#convertByteArrayToFile([BLjava/lang/String;Ljava/lang/String;)Ljava/io/File;
+#removeDirectoryAndChildren(Ljava/io/File;)V
+#removeChildrenRecursively(Ljava/io/File;)V
+#buildDirectoryPath([Ljava/lang/String;)Ljava/lang/String;
+#rename(Ljava/lang/String;Ljava/lang/String;Z)V
+#remove(Ljava/io/File;)V
+#remove(Ljava/lang/String;)V
@12.1.0
-#toFileNameWithExtension(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#toFileNameWithExtension(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
-#isFilenameValid(Ljava/lang/String;)Z
-#copy(Ljava/lang/String;Ljava/lang/String;)V
-#copy(Ljava/lang/String;Ljava/lang/String;Z)V
-#copyDirectoryContentsRecursively(Ljava/io/File;Ljava/io/File;)V
-#copyFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#copyFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#copyDirectoriesRecursively(Ljava/io/File;Ljava/io/File;)V
-#write(Ljava/io/InputStream;Ljava/lang/String;)V
-#write(Ljava/io/InputStream;Ljava/io/File;)V
-#write(Ljava/io/InputStream;Ljava/io/File;I)V
-#write(Ljava/io/File;Ljava/io/OutputStream;)V
-#write(Ljava/io/File;Ljava/io/OutputStream;I)V
-#write(Ljava/io/InputStream;Ljava/io/OutputStream;I)V
-#write([BLjava/lang/String;)V
-#write([BLjava/io/File;)V
-#findAllFilesInDirectoryRecursively(Ljava/lang/String;)[Ljava/io/File;
-#findAllFilesInDirectory(Ljava/lang/String;)[Ljava/io/File;
-#getFilenameWithoutExtension(Ljava/lang/String;)Ljava/lang/String;
-#getExtension(Ljava/io/File;)Ljava/lang/String;
-#getExtension(Ljava/lang/String;)Ljava/lang/String;
-#isArchiveFileName(Ljava/lang/String;)Z
-#isClassFileName(Ljava/lang/String;)Z
-#isJavaFileName(Ljava/lang/String;)Z
-#convertByteArrayToFile([BLjava/lang/String;Ljava/lang/String;)Ljava/io/File;
-#buildDirectoryPath([Ljava/lang/String;)Ljava/lang/String;
-#rename(Ljava/lang/String;Ljava/lang/String;Z)V
@12.3.0
-#remove(Ljava/lang/String;)V

+###org/teiid/core/util/ApplicationInfo
@10.0.0.Alpha2
+#getReleaseNumber()Ljava/lang/String;
+#getMajorReleaseVersion()I
+#getMinorReleaseVersion()I
+#getBuildNumber()Ljava/lang/String;
+#getUrl()Ljava/lang/String;
+#getCopyright()Ljava/lang/String;
+#getBuildDate()Ljava/lang/String;
+#getInstance()Lorg/teiid/core/util/ApplicationInfo;
+#getClasspathInfo()Ljava/lang/String;
@12.3.0
-#getClasspathInfo()Ljava/lang/String;

+###org/teiid/core/util/FileUtils$Constants
@10.0.0.Alpha2
@12.1.0
-###org/teiid/core/util/FileUtils$Constants

+###org/teiid/core/util/InputStreamReader
@10.0.0.Alpha2
+#<init>(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)V
+#<init>(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;I)V
+#close()V
+#read([CII)I

+###org/teiid/core/util/PasswordMaskUtil
@10.0.0.Alpha2
+#<init>(Ljava/util/Properties;)V
+#toString()Ljava/lang/String;
+#doesNameEndWithPasswordSuffix(Ljava/lang/String;)Z
@12.1.0
-###org/teiid/core/util/PasswordMaskUtil

+###org/teiid/core/BundleUtil$Event
@10.0.0.Alpha2

+###org/teiid/core/types/SQLXMLImpl
@10.0.0.Alpha2
+#<init>()V
+#<init>([B)V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/types/InputStreamFactory;)V
+#getCharset()Ljava/nio/charset/Charset;
+#getSource(Ljava/lang/Class;)Ljavax/xml/transform/Source;
+#getString()Ljava/lang/String;
+#setBinaryStream()Ljava/io/OutputStream;
+#setCharacterStream()Ljava/io/Writer;
+#setString(Ljava/lang/String;)V
+#setResult(Ljava/lang/Class;)Ljavax/xml/transform/Result;
@15.0.0
+#quickLength(Ljava/sql/SQLXML;)J

+###org/teiid/core/types/basic/FloatingNumberToBigIntegerTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/StringToDoubleTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/StringToDateTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/StringToBooleanTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/NumberToShortTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;Z)V
+#getSourceType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z
@10.0.0.Beta1
-#getSourceType()Ljava/lang/Class;

+###org/teiid/core/types/basic/BigIntegerToBigDecimalTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;

+###org/teiid/core/types/NullType
@10.0.0.Alpha2

+###org/teiid/core/types/BlobImpl
@10.0.0.Alpha2
+#<init>()V
+#<init>(Lorg/teiid/core/types/InputStreamFactory;)V
+#getBytes(JI)[B
+#position(Ljava/sql/Blob;J)J
+#position([BJ)J
+#getBinaryStream(JJ)Ljava/io/InputStream;
+#setBytes(J[B)I
+#setBytes(J[BII)I
+#setBinaryStream(J)Ljava/io/OutputStream;
+#truncate(J)V
@15.0.0
+#quickLength(Ljava/sql/Blob;)J

+###org/teiid/core/types/JDBCSQLTypeInfo$TypeInfo
@10.0.0.Alpha2
+#<init>(IILjava/lang/String;Ljava/lang/String;[I)V

+###org/teiid/core/CorePlugin$Event
@10.0.0.Alpha2
+#values()[Lorg/teiid/core/CorePlugin$Event;
+#valueOf(Ljava/lang/String;)Lorg/teiid/core/CorePlugin$Event;

+###org/teiid/core/crypto/NullCryptor
@10.0.0.Alpha2
+#<init>()V
+#encrypt([B)[B
+#encrypt(Ljava/lang/String;)Ljava/lang/String;
+#sealObject(Ljava/lang/Object;)Ljava/lang/Object;
+#decrypt([B)[B
+#decrypt(Ljava/lang/String;)Ljava/lang/String;
+#unsealObject(Ljava/lang/Object;)Ljava/lang/Object;

+###org/teiid/core/ComponentNotFoundException
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V

+###org/teiid/core/util/Base64
@10.0.0.Alpha2
+#encodeBytes([B)Ljava/lang/String;
+#decode(Ljava/lang/CharSequence;)[B
+#encodeUrlSafe([B)Ljava/lang/String;
+#decodeUrlSafe(Ljava/lang/CharSequence;)[B
@13.0.1
+#<init>()V

+###org/teiid/core/CoreConstants
@10.0.0.Alpha2

+###org/teiid/core/types/InputStreamFactory$BlobInputStreamFactory
@10.0.0.Alpha2
+#<init>(Ljava/sql/Blob;)V
+#getInputStream()Ljava/io/InputStream;
+#getLength()J
+#getContentType()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getOutputStream()Ljava/io/OutputStream;
+#getStorageMode()Lorg/teiid/core/types/InputStreamFactory$StorageMode;
@12.0.0
+#setTemporary(Z)V

+###org/teiid/core/types/basic/BigDecimalToBigIntegerTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/ObjectToAnyTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#transform(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#isExplicit()Z
+#convertPrimitiveToObject(Ljava/lang/Class;)Ljava/lang/Class;

+###org/teiid/core/types/basic/DateToTimestampTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;

+###org/teiid/core/types/basic/StringToFloatTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/AnyToObjectTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#getSourceType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getTargetType()Ljava/lang/Class;

+###org/teiid/core/types/basic/StringToShortTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/TransformationException
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Exception;)V
+#<init>(Ljava/lang/Exception;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V
@12.3.0
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;Ljava/lang/String;)V
-#<init>(Ljava/lang/Exception;)V
-#<init>(Ljava/lang/Exception;Ljava/lang/String;)V

+###org/teiid/core/types/XMLTranslator
@10.0.0.Alpha2
+#<init>()V
+#translate(Ljava/io/Writer;)V
+#getString()Ljava/lang/String;

+###org/teiid/core/types/XMLType$Type
@10.0.0.Alpha2
+#values()[Lorg/teiid/core/types/XMLType$Type;
+#valueOf(Ljava/lang/String;)Lorg/teiid/core/types/XMLType$Type;

+###org/teiid/core/types/Streamable
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#getLength()J
+#length()J
+#getReference()Ljava/lang/Object;
+#setReference(Ljava/lang/Object;)V
+#getReferenceStreamId()Ljava/lang/String;
+#setReferenceStreamId(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#readExternal(Ljava/io/ObjectInput;)V
+#writeExternal(Ljava/io/ObjectOutput;)V

+###org/teiid/core/types/InputStreamFactory$SQLXMLInputStreamFactory
@10.0.0.Alpha2
+#<init>(Ljava/sql/SQLXML;)V
+#getInputStream()Ljava/io/InputStream;
+#getCharacterStream()Ljava/io/Reader;
+#getContentType()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getOutputStream()Ljava/io/OutputStream;
+#getStorageMode()Lorg/teiid/core/types/InputStreamFactory$StorageMode;

+###org/teiid/core/types/ArrayImpl$NullException
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/core/types/GeometryType
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/sql/Blob;)V
+#<init>([B)V
+#<init>(Ljava/sql/Blob;I)V
+#<init>([BI)V
+#getSrid()I
+#setSrid(I)V
+#writeExternal(Ljava/io/ObjectOutput;)V
+#readExternal(Ljava/io/ObjectInput;)V
@11.2.0
-#getSrid()I
-#setSrid(I)V
-#writeExternal(Ljava/io/ObjectOutput;)V
-#readExternal(Ljava/io/ObjectInput;)V

+###org/teiid/core/CoreConstants$Plugin
@10.0.0.Alpha2
@12.1.0
-###org/teiid/core/CoreConstants$Plugin

+###org/teiid/core/CoreConstants$Trace
@10.0.0.Alpha2
@12.1.0
-###org/teiid/core/CoreConstants$Trace

+###org/teiid/core/crypto/BasicCryptor
@10.0.0.Alpha2
+#<init>(Ljava/security/Key;Ljava/security/Key;Ljava/lang/String;Ljavax/crypto/spec/IvParameterSpec;)V
+#setUseSealedObject(Z)V
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#decrypt([B)[B
+#unsealObject(Ljava/lang/Object;)Ljava/lang/Object;
+#encrypt([B)[B
+#encrypt([BII)[B
+#sealObject(Ljava/lang/Object;)Ljava/lang/Object;

+###org/teiid/core/util/Assertion
@10.0.0.Alpha2
+#assertTrue(Z)V
+#assertTrue(ZLjava/lang/String;)V
+#failed(Ljava/lang/String;)V
+#isNull(Ljava/lang/Object;)V
+#isNull(Ljava/lang/Object;Ljava/lang/String;)V
+#isNotNull(Ljava/lang/Object;)V
+#isNotNull(Ljava/lang/Object;Ljava/lang/String;)V
+#isInstanceOf(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;

+###org/teiid/core/util/PropertiesUtils$InvalidPropertyException
@10.0.0.Alpha2
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Throwable;)V

+###org/teiid/core/util/NamedThreadFactory
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;

+###org/teiid/core/util/CopyOnWriteLinkedHashMap
@10.0.0.Alpha2
+#<init>()V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#clear()V
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#values()Ljava/util/Collection;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/teiid/core/util/LRUCache
@10.0.0.Alpha2
+#<init>()V
+#<init>(I)V
+#getSpaceLimit()I

+###org/teiid/core/util/EquivalenceUtil
@10.0.0.Alpha2
+#areEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
+#areEquivalent([Ljava/lang/Object;[Ljava/lang/Object;)Z
+#areStrictlyEquivalent(Ljava/lang/Object;Ljava/lang/Object;)Z
+#areStrictlyEquivalent([Ljava/lang/Object;[Ljava/lang/Object;)Z

+###org/teiid/core/util/ArgCheck
@10.0.0.Alpha2
+#isTrue(ZLjava/lang/String;)V
+#isNonNegative(I)V
+#isNonNegative(ILjava/lang/String;)V
+#isNonPositive(I)V
+#isNonPositive(ILjava/lang/String;)V
+#isNegative(I)V
+#isNegative(ILjava/lang/String;)V
+#isPositive(I)V
+#isPositive(ILjava/lang/String;)V
+#isNonNegative(J)V
+#isNonNegative(JLjava/lang/String;)V
+#isNonPositive(J)V
+#isNonPositive(JLjava/lang/String;)V
+#isNegative(J)V
+#isNegative(JLjava/lang/String;)V
+#isPositive(J)V
+#isPositive(JLjava/lang/String;)V
+#isNotZeroLength(Ljava/lang/String;)V
+#isNotZeroLength(Ljava/lang/String;Ljava/lang/String;)V
+#isNotNull(Ljava/lang/Object;)V
+#isNotNull(Ljava/lang/Object;Ljava/lang/String;)V
+#isNull(Ljava/lang/Object;)V
+#isNull(Ljava/lang/Object;Ljava/lang/String;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
+#isNotEmpty(Ljava/util/Collection;)V
+#isNotEmpty(Ljava/util/Collection;Ljava/lang/String;)V
+#isNotEmpty(Ljava/util/Map;)V
+#isNotEmpty(Ljava/util/Map;Ljava/lang/String;)V
+#isNotEmpty([Ljava/lang/Object;)V
+#isNotEmpty([Ljava/lang/Object;Ljava/lang/String;)V
+#isNotEmpty(Ljava/lang/String;)V
+#isNotEmpty(Ljava/lang/String;Ljava/lang/String;)V
+#isNotSame(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V
+#contains(Ljava/util/Collection;Ljava/lang/Object;)V
+#contains(Ljava/util/Collection;Ljava/lang/Object;Ljava/lang/String;)V
+#containsKey(Ljava/util/Map;Ljava/lang/Object;)V
+#containsKey(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/String;)V

+###org/teiid/core/CoreConstants$Debug
@10.0.0.Alpha2
@12.1.0
-###org/teiid/core/CoreConstants$Debug

+###org/teiid/core/types/LobSearchUtil$StreamProvider
@10.0.0.Alpha2
+#getBinaryStream()Ljava/io/InputStream;

+###org/teiid/core/types/basic/StringToSQLXMLTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#isXml(Ljava/io/Reader;)Lorg/teiid/core/types/XMLType$Type;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/NullToAnyTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;

+###org/teiid/core/types/basic/StringToLongTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/NumberToByteTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#getSourceType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z
@10.0.0.Beta1
-#getSourceType()Ljava/lang/Class;

+###org/teiid/core/types/basic/TimestampToTimeTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/NumberToIntegerTransform
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;Z)V
+#getSourceType()Ljava/lang/Class;
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z
@10.0.0.Beta1
-#getSourceType()Ljava/lang/Class;

+###org/teiid/core/types/basic/ClobToStringTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#isExplicit()Z
@11.2.0
+#<init>(Ljava/lang/Class;)V

+###org/teiid/core/types/XMLType
@10.0.0.Alpha2
+#isThreadSafeXmlFactories()Z
+#getXmlInputFactory()Ljavax/xml/stream/XMLInputFactory;
+#<init>()V
+#<init>(Ljava/sql/SQLXML;)V
+#getBinaryStream()Ljava/io/InputStream;
+#getCharacterStream()Ljava/io/Reader;
+#getSource(Ljava/lang/Class;)Ljavax/xml/transform/Source;
+#getString()Ljava/lang/String;
+#setBinaryStream()Ljava/io/OutputStream;
+#setCharacterStream()Ljava/io/Writer;
+#setString(Ljava/lang/String;)V
+#free()V
+#setResult(Ljava/lang/Class;)Ljavax/xml/transform/Result;
+#getType()Lorg/teiid/core/types/XMLType$Type;
+#setType(Lorg/teiid/core/types/XMLType$Type;)V
+#getEncoding()Ljava/lang/String;
+#setEncoding(Ljava/lang/String;)V
+#readExternal(Ljava/io/ObjectInput;)V
+#readExternal(Ljava/io/ObjectInput;B)V
+#writeExternal(Ljava/io/ObjectOutput;)V
+#writeExternal(Ljava/io/ObjectOutput;B)V
+#getEncoding(Ljava/sql/SQLXML;)Ljava/lang/String;
+#getEncoding(Ljava/io/InputStream;)Ljava/lang/String;
+#length()J

+###org/teiid/core/types/InputStreamFactory
@10.0.0.Alpha2
+#<init>()V
+#getInputStream()Ljava/io/InputStream;
+#getSystemId()Ljava/lang/String;
+#setSystemId(Ljava/lang/String;)V
+#free()V
+#getLength()J
+#setLength(J)V
+#getCharacterStream()Ljava/io/Reader;
+#getStorageMode()Lorg/teiid/core/types/InputStreamFactory$StorageMode;
+#getStorageMode(Ljava/lang/Object;)Lorg/teiid/core/types/InputStreamFactory$StorageMode;
@12.0.0
+#setTemporary(Ljava/lang/Object;Z)V
+#setTemporary(Z)V

+###org/teiid/core/util/ObjectInputStreamWithClassloader
@10.0.0.Alpha2
+#<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V
+#checkClass(Ljava/lang/String;)V

+###org/teiid/core/util/StringUtil
@10.0.0.Alpha2
+#join(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
+#toString([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#toString([Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/String;
+#toString([Ljava/lang/Object;)Ljava/lang/String;
+#split(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replaceAll(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getTokens(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
+#getLastToken(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getFirstToken(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getStackTrace(Ljava/lang/Throwable;)Ljava/lang/String;
+#isEmpty(Ljava/lang/String;)Z
+#indexOfIgnoreCase(Ljava/lang/String;Ljava/lang/String;)I
+#startsWithIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z
+#endsWithIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z
+#isLetter(C)Z
+#isDigit(C)Z
+#isLetterOrDigit(C)Z
+#valueOf(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#equalsIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z
+#caseInsensitiveValueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
+#tokenize(Ljava/lang/String;C)Ljava/util/List;
+#unescape(Ljava/lang/CharSequence;IZLjava/lang/StringBuilder;)Ljava/lang/String;

+###org/teiid/core/util/ReflectionHelper
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#findBestMethodOnTarget(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/reflect/Method;
+#findBestMethodWithSignature(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/reflect/Method;
+#findBestMethodWithSignature(Ljava/lang/String;Ljava/util/List;)Ljava/lang/reflect/Method;
+#create(Ljava/lang/String;Ljava/util/Collection;Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#create(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;

+###org/teiid/core/util/AccessibleByteArrayOutputStream
@10.0.0.Alpha2
+#<init>()V
+#<init>(I)V
+#getBuffer()[B
+#setBuffer([B)V
+#getCount()I
+#setCount(I)V

+###org/teiid/core/types/ClobImpl
@10.0.0.Alpha2
+#<init>()V
+#<init>(Lorg/teiid/core/types/InputStreamFactory;J)V
+#<init>([C)V
+#<init>(Ljava/lang/String;)V
+#getAsciiStream()Ljava/io/InputStream;
+#getSubString(JI)Ljava/lang/String;
+#length()J
+#position(Ljava/sql/Clob;J)J
+#position(Ljava/lang/String;J)J
+#getCharacterStream(JJ)Ljava/io/Reader;
+#setAsciiStream(J)Ljava/io/OutputStream;
+#setCharacterStream(J)Ljava/io/Writer;
+#setString(JLjava/lang/String;)I
+#setString(JLjava/lang/String;II)I
+#truncate(J)V
+#createClob([C)Ljava/sql/Clob;

+###org/teiid/core/types/basic/StringToTimestampTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/SQLXMLToStringTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#isExplicit()Z

+###org/teiid/core/types/basic/StringToByteTransform
@10.0.0.Alpha2
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/BlobType
@10.0.0.Alpha2
+#<init>()V
+#<init>([B)V
+#<init>(Ljava/sql/Blob;)V
+#getBinaryStream()Ljava/io/InputStream;
+#getBytes(JI)[B
+#position(Ljava/sql/Blob;J)J
+#position([BJ)J
+#setBinaryStream(J)Ljava/io/OutputStream;
+#setBytes(J[BII)I
+#setBytes(J[B)I
+#truncate(J)V
+#free()V
+#getBinaryStream(JJ)Ljava/io/InputStream;
+#createBlob([B)Ljavax/sql/rowset/serial/SerialBlob;
+#compareTo(Lorg/teiid/core/types/BlobType;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I

+###org/teiid/core/types/DataTypeManager$DefaultTypeCodes
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/core/crypto/Cryptor
@10.0.0.Alpha2
+#encrypt([B)[B
+#sealObject(Ljava/lang/Object;)Ljava/lang/Object;
+#decrypt([B)[B
+#unsealObject(Ljava/lang/Object;)Ljava/lang/Object;

+###org/teiid/core/crypto/CryptoException
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;)V

+###org/teiid/core/crypto/SymmetricCryptor
@10.0.0.Alpha2
+#getSymmectricCryptor(Z)Lorg/teiid/core/crypto/SymmetricCryptor;
+#generateKey()Ljavax/crypto/SecretKey;
+#getSymmectricCryptor(Ljava/net/URL;)Lorg/teiid/core/crypto/SymmetricCryptor;
+#getSymmectricCryptor([BZ)Lorg/teiid/core/crypto/SymmetricCryptor;
+#getSymmectricCryptor([BLjava/lang/String;Ljava/lang/String;Ljavax/crypto/spec/IvParameterSpec;)Lorg/teiid/core/crypto/SymmetricCryptor;
+#generateAndSaveKey(Ljava/lang/String;)V
+#getEncodedKey()[B
+#main([Ljava/lang/String;)V

+###org/teiid/core/util/MultiArrayOutputStream
@10.0.0.Alpha2
+#<init>(I)V
+#reset(I)V
+#write(I)V
+#write([BII)V
+#writeTo(Ljava/io/DataOutput;)V
+#getCount()I
+#getBuffers()[[B
+#getIndex()I

+###org/teiid/core/util/TimestampWithTimezone
@10.0.0.Alpha2
+#<init>()V
+#getCalendar()Ljava/util/Calendar;
+#resetCalendar(Ljava/util/TimeZone;)V
+#create(Ljava/util/Date;Ljava/util/TimeZone;Ljava/util/Calendar;Ljava/lang/Class;)Ljava/lang/Object;
+#createTimestamp(Ljava/util/Date;Ljava/util/TimeZone;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#createTime(Ljava/util/Date;Ljava/util/TimeZone;Ljava/util/Calendar;)Ljava/sql/Time;
+#createDate(Ljava/util/Date;Ljava/util/TimeZone;Ljava/util/Calendar;)Ljava/sql/Date;
+#createTime(Ljava/util/Date;)Ljava/sql/Time;
+#createDate(Ljava/util/Date;)Ljava/sql/Date;
+#createTimestamp(Ljava/util/Date;)Ljava/sql/Timestamp;

+###org/teiid/core/util/ObjectConverterUtil
@10.0.0.Alpha2
+#<init>()V
+#convertToByteArray(Ljava/lang/Object;)[B
+#convertToByteArray(Ljava/io/InputStream;)[B
+#convertToByteArray(Ljava/io/InputStream;I)[B
+#convertToByteArray(Ljava/io/InputStream;IZ)[B
+#write(Ljava/io/OutputStream;Ljava/io/InputStream;[BI)I
+#write(Ljava/io/OutputStream;Ljava/io/InputStream;[BIZ)I
+#write(Ljava/io/OutputStream;Ljava/io/InputStream;I)I
+#write(Ljava/io/OutputStream;Ljava/io/InputStream;IZ)I
+#write(Ljava/io/Writer;Ljava/io/Reader;IZ)I
+#convertToInputStream([B)Ljava/io/InputStream;
+#convertToInputStream(Ljava/lang/String;)Ljava/io/InputStream;
+#convertToInputStream([C)Ljava/io/InputStream;
+#write(Ljava/io/InputStream;Ljava/lang/String;)V
+#write(Ljava/io/Reader;Ljava/lang/String;)V
+#write(Ljava/io/Reader;Ljava/io/File;)V
+#write(Ljava/io/InputStream;Ljava/io/File;)V
+#write([BLjava/lang/String;)V
+#write([CLjava/lang/String;)V
+#bytesToChar([BLjava/lang/String;)[C
+#convertFileToByteArray(Ljava/io/File;)[B
+#convertFileToCharArray(Ljava/io/File;Ljava/lang/String;)[C
+#convertFileToString(Ljava/io/File;)Ljava/lang/String;
+#convertToString(Ljava/io/InputStream;)Ljava/lang/String;
+#convertToCharArray(Ljava/io/InputStream;ILjava/lang/String;)[C
+#convertToByteArray(Ljava/util/zip/ZipEntry;Ljava/util/zip/ZipFile;)[B
+#convertToString(Ljava/io/Reader;)Ljava/lang/String;
+#convertToCharArray(Ljava/io/Reader;I)[C
@10.0.4
+#write(Ljava/io/OutputStream;Ljava/io/InputStream;[BIZZ)I
+#write(Ljava/io/OutputStream;Ljava/io/InputStream;IZZ)I
@10.1.0
-#write(Ljava/io/OutputStream;Ljava/io/InputStream;[BIZZ)I
-#write(Ljava/io/OutputStream;Ljava/io/InputStream;IZZ)I
@10.1.1
+#write(Ljava/io/OutputStream;Ljava/io/InputStream;[BIZZ)I
+#write(Ljava/io/OutputStream;Ljava/io/InputStream;IZZ)I
@12.3.0
+#convertToString(Ljava/io/Reader;I)Ljava/lang/String;
-#convertToInputStream(Ljava/lang/String;)Ljava/io/InputStream;
-#convertToInputStream([C)Ljava/io/InputStream;
-#write(Ljava/io/Reader;Ljava/lang/String;)V
-#write(Ljava/io/Reader;Ljava/io/File;)V
-#write([CLjava/lang/String;)V
-#convertFileToCharArray(Ljava/io/File;Ljava/lang/String;)[C
-#convertToCharArray(Ljava/io/Reader;I)[C

+###org/teiid/core/types/basic/StringToJsonTransform
@12.3.0
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/JsonToClobTransform
@11.2.0
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/basic/GeographyToGeometryTransform
@11.2.0
+#<init>()V
+#transformDirect(Ljava/lang/Object;)Ljava/lang/Object;
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
+#isExplicit()Z

+###org/teiid/core/types/AbstractGeospatialType
@11.2.0
+#<init>()V
+#<init>(Ljava/sql/Blob;)V
+#<init>([B)V
+#getSrid()I
+#setSrid(I)V
+#writeExternal(Ljava/io/ObjectOutput;)V
+#readExternal(Ljava/io/ObjectInput;)V
+#getGeoCache()Ljava/lang/Object;
+#setGeoCache(Ljava/lang/Object;)V
+#copyTo(Lorg/teiid/core/types/AbstractGeospatialType;)V

+###org/teiid/core/types/BaseClobType
@11.2.0
+#<init>()V
+#<init>(Ljava/sql/Clob;)V
+#getAsciiStream()Ljava/io/InputStream;
+#getCharacterStream()Ljava/io/Reader;
+#getSubString(JI)Ljava/lang/String;
+#position(Ljava/sql/Clob;J)J
+#position(Ljava/lang/String;J)J
+#setAsciiStream(J)Ljava/io/OutputStream;
+#setCharacterStream(J)Ljava/io/Writer;
+#setString(JLjava/lang/String;II)I
+#setString(JLjava/lang/String;)I
+#truncate(J)V
+#getString(Ljava/sql/Clob;)Ljava/lang/String;
+#getCharSequence()Ljava/lang/CharSequence;
+#free()V
+#getCharacterStream(JJ)Ljava/io/Reader;
+#compareTo(Lorg/teiid/core/types/BaseClobType;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I

+###org/teiid/core/types/GeographyType
@11.2.0
+#<init>()V
+#<init>(Ljava/sql/Blob;)V
+#<init>([B)V
+#<init>(Ljava/sql/Blob;I)V
+#<init>([BI)V
+#setSrid(I)V

+###org/teiid/core/types/JsonType
@11.2.0
+#<init>()V
+#<init>(Ljava/sql/Clob;)V
