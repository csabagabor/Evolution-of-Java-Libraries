
+###io/prometheus/client/CKMSQuantiles$Quantile
@0.0.16
+#<init>(DD)V
+#toString()Ljava/lang/String;
@0.15.0
-###io/prometheus/client/CKMSQuantiles$Quantile

+###io/prometheus/client/Collector$Describable
@0.0.19
+#describe()Ljava/util/List;

+###io/prometheus/client/Collector$MetricFamilySamples$Sample
@0.0.5
+#<init>(Ljava/lang/String;[Ljava/lang/String;Ljava/util/List;D)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.0.6
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;D)V
-#<init>(Ljava/lang/String;[Ljava/lang/String;Ljava/util/List;D)V
@0.3.0
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;DLjava/lang/Long;)V
@0.11.0
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;DLio/prometheus/client/exemplars/Exemplar;Ljava/lang/Long;)V
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;DLio/prometheus/client/exemplars/Exemplar;)V

+###io/prometheus/client/Collector$MetricFamilySamples
@0.0.5
+#<init>(Ljava/lang/String;Lio/prometheus/client/Collector$Type;Ljava/lang/String;Ljava/util/Vector;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.0.6
+#<init>(Ljava/lang/String;Lio/prometheus/client/Collector$Type;Ljava/lang/String;Ljava/util/List;)V
-#<init>(Ljava/lang/String;Lio/prometheus/client/Collector$Type;Ljava/lang/String;Ljava/util/Vector;)V
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lio/prometheus/client/Collector$Type;Ljava/lang/String;Ljava/util/List;)V
@0.12.0
+#filter(Lio/prometheus/client/Predicate;)Lio/prometheus/client/Collector$MetricFamilySamples;
+#getNames()[Ljava/lang/String;

+###io/prometheus/client/Collector$Type
@0.0.5
+#values()[Lio/prometheus/client/Collector$Type;
+#valueOf(Ljava/lang/String;)Lio/prometheus/client/Collector$Type;

+###io/prometheus/client/Collector
@0.0.5
+#<init>()V
+#collect()[Lio/prometheus/client/Collector$MetricFamilySamples;
+#register()Lio/prometheus/client/Collector;
+#register(Lio/prometheus/client/CollectorRegistry;)Lio/prometheus/client/Collector;
@0.0.6
+#collect()Ljava/util/List;
-#collect()[Lio/prometheus/client/Collector$MetricFamilySamples;
@0.0.7
+#doubleToGoString(D)Ljava/lang/String;
@0.0.15
+#sanitizeMetricName(Ljava/lang/String;)Ljava/lang/String;
@0.12.0
+#collect(Lio/prometheus/client/Predicate;)Ljava/util/List;

+###io/prometheus/client/CollectorRegistry
@0.0.5
+#<init>()V
+#register(Lio/prometheus/client/Collector;)V
+#unregister(Lio/prometheus/client/Collector;)V
+#clear()V
+#metricFamilySamples()Ljava/util/Enumeration;
+#getSampleValue(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Double;
@0.0.7
+#getSampleValue(Ljava/lang/String;)Ljava/lang/Double;
@0.0.19
+#<init>(Z)V
@0.0.23
+#filteredMetricFamilySamples(Ljava/util/Set;)Ljava/util/Enumeration;
@0.12.0
+#filteredMetricFamilySamples(Lio/prometheus/client/Predicate;)Ljava/util/Enumeration;

+###io/prometheus/client/Counter$Builder
@0.0.5
+#<init>()V
+#create()Lio/prometheus/client/SimpleCollector;
@0.0.6
+#create()Lio/prometheus/client/Counter;
@0.11.0
+#withExemplarSampler(Lio/prometheus/client/exemplars/CounterExemplarSampler;)Lio/prometheus/client/Counter$Builder;
+#withExemplars()Lio/prometheus/client/Counter$Builder;
+#withoutExemplars()Lio/prometheus/client/Counter$Builder;

+###io/prometheus/client/Counter$Child
@0.0.5
+#<init>()V
+#inc()V
+#inc(D)V
+#get()D
@0.10.0
+#created()J
@0.11.0
+#<init>(Ljava/lang/Boolean;Lio/prometheus/client/exemplars/CounterExemplarSampler;)V
+#incWithExemplar([Ljava/lang/String;)V
+#incWithExemplar(Ljava/util/Map;)V
+#incWithExemplar(D[Ljava/lang/String;)V
+#incWithExemplar(DLjava/util/Map;)V
-#<init>()V
@0.12.0
+#<init>()V

+###io/prometheus/client/Counter
@0.0.5
+#<init>(Lio/prometheus/client/Counter$Builder;)V
+#build()Lio/prometheus/client/Counter$Builder;
+#inc()V
+#inc(D)V
+#collect()[Lio/prometheus/client/Collector$MetricFamilySamples;
@0.0.6
+#collect()Ljava/util/List;
-#<init>(Lio/prometheus/client/Counter$Builder;)V
-#collect()[Lio/prometheus/client/Collector$MetricFamilySamples;
@0.0.19
+#describe()Ljava/util/List;
@0.0.21
+#build(Ljava/lang/String;Ljava/lang/String;)Lio/prometheus/client/Counter$Builder;
+#get()D
@0.11.0
+#incWithExemplar([Ljava/lang/String;)V
+#incWithExemplar(Ljava/util/Map;)V
+#incWithExemplar(D[Ljava/lang/String;)V
+#incWithExemplar(DLjava/util/Map;)V

+###io/prometheus/client/CounterMetricFamily
@0.0.19
+#<init>(Ljava/lang/String;Ljava/lang/String;D)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#addMetric(Ljava/util/List;D)V
@0.0.20
+#addMetric(Ljava/util/List;D)Lio/prometheus/client/CounterMetricFamily;
-#addMetric(Ljava/util/List;D)V

+###io/prometheus/client/DoubleAdder
@0.0.6
+#<init>()V
+#add(D)V
+#sum()D
+#reset()V
+#sumThenReset()D
+#toString()Ljava/lang/String;
+#doubleValue()D
+#longValue()J
+#intValue()I
+#floatValue()F
@0.7.0
+#set(D)V

+###io/prometheus/client/Enumeration$Builder
@0.10.0
+#<init>()V
+#states([Ljava/lang/String;)Lio/prometheus/client/Enumeration$Builder;
+#states(Ljava/lang/Class;)Lio/prometheus/client/Enumeration$Builder;
+#create()Lio/prometheus/client/Enumeration;
+#create()Lio/prometheus/client/SimpleCollector;

+###io/prometheus/client/Enumeration$Child
@0.10.0
+#state(Ljava/lang/String;)V
+#state(Ljava/lang/Enum;)V
+#get()Ljava/lang/String;

+###io/prometheus/client/Enumeration
@0.10.0
+#build(Ljava/lang/String;Ljava/lang/String;)Lio/prometheus/client/Enumeration$Builder;
+#build()Lio/prometheus/client/Enumeration$Builder;
+#state(Ljava/lang/String;)V
+#state(Ljava/lang/Enum;)V
+#get()Ljava/lang/String;
+#collect()Ljava/util/List;
+#describe()Ljava/util/List;

+###io/prometheus/client/Gauge$Builder
@0.0.5
+#<init>()V
+#create()Lio/prometheus/client/SimpleCollector;
@0.0.6
+#create()Lio/prometheus/client/Gauge;

+###io/prometheus/client/Gauge$Child
@0.0.5
+#<init>()V
+#inc()V
+#inc(D)V
+#dec()V
+#dec(D)V
+#set(D)V
+#get()D
@0.0.6
+#setToCurrentTime()V
+#startTimer()Lio/prometheus/client/Gauge$Timer;
@0.0.20
+#setToTime(Ljava/lang/Runnable;)D
@0.4.0
+#setToTime(Ljava/util/concurrent/Callable;)Ljava/lang/Object;

+###io/prometheus/client/Gauge$Timer
@0.0.6
+#setDuration()V
@0.0.11
+#setDuration()D
-#setDuration()V
@0.0.19
+#close()V

+###io/prometheus/client/Gauge
@0.0.5
+#<init>(Lio/prometheus/client/Gauge$Builder;)V
+#build()Lio/prometheus/client/Gauge$Builder;
+#inc()V
+#inc(D)V
+#dec()V
+#dec(D)V
+#set(D)V
+#collect()[Lio/prometheus/client/Collector$MetricFamilySamples;
@0.0.6
+#setToCurrentTime()V
+#startTimer()Lio/prometheus/client/Gauge$Timer;
+#collect()Ljava/util/List;
-#<init>(Lio/prometheus/client/Gauge$Builder;)V
-#collect()[Lio/prometheus/client/Collector$MetricFamilySamples;
@0.0.19
+#describe()Ljava/util/List;
@0.0.20
+#setToTime(Ljava/lang/Runnable;)D
@0.0.21
+#build(Ljava/lang/String;Ljava/lang/String;)Lio/prometheus/client/Gauge$Builder;
+#get()D
@0.4.0
+#setToTime(Ljava/util/concurrent/Callable;)Ljava/lang/Object;

+###io/prometheus/client/GaugeMetricFamily
@0.0.19
+#<init>(Ljava/lang/String;Ljava/lang/String;D)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#addMetric(Ljava/util/List;D)V
@0.0.20
+#addMetric(Ljava/util/List;D)Lio/prometheus/client/GaugeMetricFamily;
-#addMetric(Ljava/util/List;D)V

+###io/prometheus/client/Histogram$Builder
@0.0.7
+#<init>()V
+#create()Lio/prometheus/client/Histogram;
+#buckets([D)Lio/prometheus/client/Histogram$Builder;
+#linearBuckets(DDI)Lio/prometheus/client/Histogram$Builder;
+#exponentialBuckets(DDI)Lio/prometheus/client/Histogram$Builder;
+#create()Lio/prometheus/client/SimpleCollector;
@0.11.0
+#withExemplarSampler(Lio/prometheus/client/exemplars/HistogramExemplarSampler;)Lio/prometheus/client/Histogram$Builder;
+#withExemplars()Lio/prometheus/client/Histogram$Builder;
+#withoutExemplars()Lio/prometheus/client/Histogram$Builder;

+###io/prometheus/client/Histogram$Child$Value
@0.0.7
+#<init>()V
@0.0.15
+#<init>(D[D)V
-#<init>()V
@0.10.0
+#<init>(D[DJ)V
-#<init>(D[D)V
@0.11.0
+#<init>(D[D[Lio/prometheus/client/exemplars/Exemplar;J)V
-#<init>(D[DJ)V

+###io/prometheus/client/Histogram$Child
@0.0.7
+#observe(D)V
+#startTimer()Lio/prometheus/client/Histogram$Timer;
+#get()Lio/prometheus/client/Histogram$Child$Value;
@0.0.20
+#time(Ljava/lang/Runnable;)D
@0.4.0
+#time(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
@0.11.0
+#timeWithExemplar(Ljava/lang/Runnable;[Ljava/lang/String;)D
+#timeWithExemplar(Ljava/lang/Runnable;Ljava/util/Map;)D
+#timeWithExemplar(Ljava/util/concurrent/Callable;[Ljava/lang/String;)Ljava/lang/Object;
+#timeWithExemplar(Ljava/util/concurrent/Callable;Ljava/util/Map;)Ljava/lang/Object;
+#observeWithExemplar(D[Ljava/lang/String;)V
+#observeWithExemplar(DLjava/util/Map;)V

+###io/prometheus/client/Histogram$Timer
@0.0.7
+#observeDuration()V
@0.0.11
+#observeDuration()D
-#observeDuration()V
@0.0.19
+#close()V
@0.11.0
+#observeDurationWithExemplar([Ljava/lang/String;)D
+#observeDurationWithExemplar(Ljava/util/Map;)D

+###io/prometheus/client/Histogram
@0.0.7
+#build()Lio/prometheus/client/Histogram$Builder;
+#observe(D)V
+#startTimer()Lio/prometheus/client/Histogram$Timer;
+#collect()Ljava/util/List;
@0.0.19
+#describe()Ljava/util/List;
@0.0.20
+#time(Ljava/lang/Runnable;)D
@0.0.21
+#build(Ljava/lang/String;Ljava/lang/String;)Lio/prometheus/client/Histogram$Builder;
@0.4.0
+#time(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
@0.11.0
+#observeWithExemplar(D[Ljava/lang/String;)V
+#observeWithExemplar(DLjava/util/Map;)V
+#timeWithExemplar(Ljava/lang/Runnable;[Ljava/lang/String;)D
+#timeWithExemplar(Ljava/lang/Runnable;Ljava/util/Map;)D
+#timeWithExemplar(Ljava/util/concurrent/Callable;[Ljava/lang/String;)Ljava/lang/Object;
+#timeWithExemplar(Ljava/util/concurrent/Callable;Ljava/util/Map;)Ljava/lang/Object;

+###io/prometheus/client/Info$Builder
@0.10.0
+#<init>()V
+#create()Lio/prometheus/client/Info;
+#create()Lio/prometheus/client/SimpleCollector;

+###io/prometheus/client/Info$Child
@0.10.0
+#info(Ljava/util/Map;)V
+#info([Ljava/lang/String;)V
+#get()Ljava/util/Map;

+###io/prometheus/client/Info
@0.10.0
+#build(Ljava/lang/String;Ljava/lang/String;)Lio/prometheus/client/Info$Builder;
+#build()Lio/prometheus/client/Info$Builder;
+#info([Ljava/lang/String;)V
+#info(Ljava/util/Map;)V
+#get()Ljava/util/Map;
+#collect()Ljava/util/List;
+#describe()Ljava/util/List;

+###io/prometheus/client/Predicate
@0.12.0
+#test(Ljava/lang/Object;)Z

+###io/prometheus/client/SampleNameFilter$Builder
@0.12.0
+#<init>()V
+#nameMustBeEqualTo([Ljava/lang/String;)Lio/prometheus/client/SampleNameFilter$Builder;
+#nameMustBeEqualTo(Ljava/util/Collection;)Lio/prometheus/client/SampleNameFilter$Builder;
+#nameMustNotBeEqualTo([Ljava/lang/String;)Lio/prometheus/client/SampleNameFilter$Builder;
+#nameMustNotBeEqualTo(Ljava/util/Collection;)Lio/prometheus/client/SampleNameFilter$Builder;
+#nameMustStartWith([Ljava/lang/String;)Lio/prometheus/client/SampleNameFilter$Builder;
+#nameMustStartWith(Ljava/util/Collection;)Lio/prometheus/client/SampleNameFilter$Builder;
+#nameMustNotStartWith([Ljava/lang/String;)Lio/prometheus/client/SampleNameFilter$Builder;
+#nameMustNotStartWith(Ljava/util/Collection;)Lio/prometheus/client/SampleNameFilter$Builder;
+#build()Lio/prometheus/client/SampleNameFilter;

+###io/prometheus/client/SampleNameFilter
@0.12.0
+#test(Ljava/lang/String;)Z
+#and(Lio/prometheus/client/Predicate;)Lio/prometheus/client/Predicate;
+#stringToList(Ljava/lang/String;)Ljava/util/List;
+#restrictToNamesEqualTo(Lio/prometheus/client/Predicate;Ljava/util/Collection;)Lio/prometheus/client/Predicate;
+#test(Ljava/lang/Object;)Z

+###io/prometheus/client/SimpleCollector$Builder
@0.0.5
+#<init>()V
+#name(Ljava/lang/String;)Lio/prometheus/client/SimpleCollector$Builder;
+#subsystem(Ljava/lang/String;)Lio/prometheus/client/SimpleCollector$Builder;
+#namespace(Ljava/lang/String;)Lio/prometheus/client/SimpleCollector$Builder;
+#help(Ljava/lang/String;)Lio/prometheus/client/SimpleCollector$Builder;
+#labelNames([Ljava/lang/String;)Lio/prometheus/client/SimpleCollector$Builder;
+#create()Lio/prometheus/client/SimpleCollector;
+#register()Lio/prometheus/client/SimpleCollector;
+#register(Lio/prometheus/client/CollectorRegistry;)Lio/prometheus/client/SimpleCollector;
@0.10.0
+#unit(Ljava/lang/String;)Lio/prometheus/client/SimpleCollector$Builder;

+###io/prometheus/client/SimpleCollector
@0.0.5
+#labels([Ljava/lang/String;)Ljava/lang/Object;
+#remove([Ljava/lang/String;)V
+#clear()V
@0.0.6
+#setChild(Ljava/lang/Object;[Ljava/lang/String;)Lio/prometheus/client/Collector;

+###io/prometheus/client/SimpleTimer
@0.0.20
+#<init>()V
+#elapsedSeconds()D
+#elapsedSecondsFromNanos(JJ)D

+###io/prometheus/client/Summary$Builder
@0.0.5
+#<init>()V
+#create()Lio/prometheus/client/SimpleCollector;
@0.0.6
+#create()Lio/prometheus/client/Summary;
@0.0.16
+#quantile(DD)Lio/prometheus/client/Summary$Builder;
+#maxAgeSeconds(J)Lio/prometheus/client/Summary$Builder;
+#ageBuckets(I)Lio/prometheus/client/Summary$Builder;

+###io/prometheus/client/Summary$Child$Value
@0.0.5
+#<init>()V
@0.0.15
-#<init>()V
@0.0.16
-###io/prometheus/client/Summary$Child$Value

+###io/prometheus/client/Summary$Child
@0.0.5
+#<init>()V
+#observe(D)V
+#get()Lio/prometheus/client/Summary$Child$Value;
@0.0.6
+#startTimer()Lio/prometheus/client/Summary$Timer;
@0.0.16
-#<init>()V
@0.0.20
+#time(Ljava/lang/Runnable;)D
@0.4.0
+#time(Ljava/util/concurrent/Callable;)Ljava/lang/Object;

+###io/prometheus/client/Summary$Timer
@0.0.6
+#observeDuration()V
@0.0.11
+#observeDuration()D
-#observeDuration()V
@0.0.19
+#close()V

+###io/prometheus/client/Summary
@0.0.5
+#<init>(Lio/prometheus/client/Summary$Builder;)V
+#build()Lio/prometheus/client/Summary$Builder;
+#observe(D)V
+#collect()[Lio/prometheus/client/Collector$MetricFamilySamples;
@0.0.6
+#startTimer()Lio/prometheus/client/Summary$Timer;
+#collect()Ljava/util/List;
-#<init>(Lio/prometheus/client/Summary$Builder;)V
-#collect()[Lio/prometheus/client/Collector$MetricFamilySamples;
@0.0.19
+#describe()Ljava/util/List;
@0.0.20
+#time(Ljava/lang/Runnable;)D
@0.0.21
+#build(Ljava/lang/String;Ljava/lang/String;)Lio/prometheus/client/Summary$Builder;
+#get()Lio/prometheus/client/Summary$Child$Value;
@0.4.0
+#time(Ljava/util/concurrent/Callable;)Ljava/lang/Object;

+###io/prometheus/client/SummaryMetricFamily
@0.0.19
+#<init>(Ljava/lang/String;Ljava/lang/String;DD)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
+#addMetric(Ljava/util/List;DD)V
+#addMetric(Ljava/util/List;DDLjava/util/List;)V
@0.0.20
+#addMetric(Ljava/util/List;DD)Lio/prometheus/client/SummaryMetricFamily;
+#addMetric(Ljava/util/List;DDLjava/util/List;)Lio/prometheus/client/SummaryMetricFamily;
-#addMetric(Ljava/util/List;DD)V
-#addMetric(Ljava/util/List;DDLjava/util/List;)V

+###io/prometheus/client/Supplier
@0.12.0
+#get()Ljava/lang/Object;

+###io/prometheus/client/exemplars/CounterExemplarSampler
@0.11.0
+#sample(DLio/prometheus/client/exemplars/Exemplar;)Lio/prometheus/client/exemplars/Exemplar;

+###io/prometheus/client/exemplars/DefaultExemplarSampler
@0.11.0
+#<init>(Lio/prometheus/client/exemplars/tracer/common/SpanContextSupplier;)V
+#sample(DLio/prometheus/client/exemplars/Exemplar;)Lio/prometheus/client/exemplars/Exemplar;
+#sample(DDDLio/prometheus/client/exemplars/Exemplar;)Lio/prometheus/client/exemplars/Exemplar;

+###io/prometheus/client/exemplars/Exemplar
@0.11.0
+#<init>(D[Ljava/lang/String;)V
+#<init>(DLjava/lang/Long;[Ljava/lang/String;)V
+#<init>(DLjava/util/Map;)V
+#<init>(DLjava/lang/Long;Ljava/util/Map;)V
+#getNumberOfLabels()I
+#getLabelName(I)Ljava/lang/String;
+#getLabelValue(I)Ljava/lang/String;
+#getValue()D
+#getTimestampMs()Ljava/lang/Long;
+#mapToArray(Ljava/util/Map;)[Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/prometheus/client/exemplars/ExemplarConfig
@0.11.0
+#<init>()V
+#setCounterExemplarSampler(Lio/prometheus/client/exemplars/CounterExemplarSampler;)V
+#setHistogramExemplarSampler(Lio/prometheus/client/exemplars/HistogramExemplarSampler;)V
+#disableExemplars()V
+#enableExemplars()V
+#getCounterExemplarSampler()Lio/prometheus/client/exemplars/CounterExemplarSampler;
+#getHistogramExemplarSampler()Lio/prometheus/client/exemplars/HistogramExemplarSampler;
+#isExemplarsEnabled()Z

+###io/prometheus/client/exemplars/ExemplarSampler
@0.11.0

+###io/prometheus/client/exemplars/HistogramExemplarSampler
@0.11.0
+#sample(DDDLio/prometheus/client/exemplars/Exemplar;)Lio/prometheus/client/exemplars/Exemplar;
