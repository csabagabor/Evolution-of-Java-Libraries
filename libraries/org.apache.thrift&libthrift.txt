
+###org/apache/thrift/TBaseProcessor
@0.7.0
+#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Z
@0.9.0
+#getProcessMapView()Ljava/util/Map;
@0.13.0
+#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)V
-#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Z

+###org/apache/thrift/TNonblockingMultiFetchStats
@0.9.1
+#<init>()V
+#clear()V
+#toString()Ljava/lang/String;
+#setNumTotalServers(I)V
+#setMaxResponseBytes(I)V
+#setReadTime(J)V
+#incNumReadCompletedServers()V
+#incNumConnectErrorServers()V
+#incNumOverflowedRecvBuf()V
+#incTotalRecvBufBytes(I)V
+#incNumInvalidFrameSize()V
+#getMaxResponseBytes()I
+#getNumReadCompletedServers()I
+#getNumConnectErrorServers()I
+#getNumTotalServers()I
+#getNumOverflowedRecvBuf()I
+#getTotalRecvBufBytes()I
+#getNumInvalidFrameSize()I
+#getReadTime()J

+###org/apache/thrift/TApplicationException
@0.6.1
+#<init>()V
+#<init>(I)V
+#<init>(ILjava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#getType()I
+#read(Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/thrift/TApplicationException;
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
@0.10.0
+#getMessage()Ljava/lang/String;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#readFrom(Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/thrift/TApplicationException;
-#read(Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/thrift/TApplicationException;

+###org/apache/thrift/TBaseHelper
@0.6.1
+#compareTo(Ljava/lang/Object;Ljava/lang/Object;)I
+#compareTo(ZZ)I
+#compareTo(BB)I
+#compareTo(SS)I
+#compareTo(II)I
+#compareTo(JJ)I
+#compareTo(DD)I
+#compareTo(Ljava/lang/String;Ljava/lang/String;)I
+#compareTo([B[B)I
+#compareTo(Ljava/lang/Comparable;Ljava/lang/Comparable;)I
+#compareTo(Ljava/util/List;Ljava/util/List;)I
+#compareTo(Ljava/util/Set;Ljava/util/Set;)I
+#compareTo(Ljava/util/Map;Ljava/util/Map;)I
+#toString(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;)V
+#paddedByteString(B)Ljava/lang/String;
+#byteBufferToByteArray(Ljava/nio/ByteBuffer;)[B
+#wrapsFullArray(Ljava/nio/ByteBuffer;)Z
+#byteBufferToByteArray(Ljava/nio/ByteBuffer;[BI)I
+#rightSize(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
+#copyBinary(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
+#copyBinary([B)[B
@0.9.3
+#toString(Ljava/util/Collection;Ljava/lang/StringBuilder;)V
@0.10.0
+#hashCode(J)I
+#hashCode(D)I

+###org/apache/thrift/TFieldRequirementType
@0.6.1
+#<init>()V
@0.18.0
-#<init>()V

+###org/apache/thrift/TUnion
@0.6.1
+#getSetField()Lorg/apache/thrift/TFieldIdEnum;
+#getFieldValue()Ljava/lang/Object;
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#getFieldValue(I)Ljava/lang/Object;
+#isSet()Z
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#isSet(I)Z
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setFieldValue(ILjava/lang/Object;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#clear()V

+###org/apache/thrift/TEnum
@0.6.1
+#getValue()I

+###org/apache/thrift/TConfiguration
@0.14.0
+#<init>()V
+#<init>(III)V
+#getMaxMessageSize()I
+#getMaxFrameSize()I
+#getRecursionLimit()I
+#setMaxMessageSize(I)V
+#setMaxFrameSize(I)V
+#setRecursionLimit(I)V
+#custom()Lorg/apache/thrift/TConfiguration$Builder;

+###org/apache/thrift/ProcessFunction
@0.7.0
+#<init>(Ljava/lang/String;)V
+#process(ILorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;Ljava/lang/Object;)V
+#getMethodName()Ljava/lang/String;
@0.9.0
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;

+###org/apache/thrift/TEnumHelper
@0.6.1
+#<init>()V
+#getByValue(Ljava/lang/Class;I)Lorg/apache/thrift/TEnum;
@0.18.0
-#<init>()V

+###org/apache/thrift/EncodingUtils
@0.6.1
+#<init>()V
+#encodeBigEndian(I[B)V
+#encodeBigEndian(I[BI)V
+#decodeBigEndian([B)I
+#decodeBigEndian([BI)I
@0.9.0
+#testBit(BI)Z
+#testBit(SI)Z
+#testBit(II)Z
+#testBit(JI)Z
+#clearBit(BI)B
+#clearBit(SI)S
+#clearBit(II)I
+#clearBit(JI)J
+#setBit(BIZ)B
+#setBit(SIZ)S
+#setBit(IIZ)I
+#setBit(JIZ)J

+###org/apache/thrift/TServiceClient
@0.6.1
+#getInputProtocol()Lorg/apache/thrift/protocol/TProtocol;
+#getOutputProtocol()Lorg/apache/thrift/protocol/TProtocol;
@0.7.0
+#<init>(Lorg/apache/thrift/protocol/TProtocol;)V
+#<init>(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)V

+###org/apache/thrift/async/AsyncMethodFutureAdapter
@0.17.0
+#create()Lorg/apache/thrift/async/AsyncMethodFutureAdapter;
+#getFuture()Ljava/util/concurrent/CompletableFuture;
+#onComplete(Ljava/lang/Object;)V
+#onError(Ljava/lang/Exception;)V

+###org/apache/thrift/async/TAsyncMethodCall
@0.6.1
+#getClient()Lorg/apache/thrift/async/TAsyncClient;
+#hasTimeout()Z
+#getTimeoutTimestamp()J

+###org/apache/thrift/async/AsyncMethodCallback
@0.6.1
+#onComplete(Ljava/lang/Object;)V
+#onError(Ljava/lang/Exception;)V

+###org/apache/thrift/async/TAsyncClient
@0.6.1
+#<init>(Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/async/TAsyncClientManager;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#<init>(Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/async/TAsyncClientManager;Lorg/apache/thrift/transport/TNonblockingTransport;J)V
+#getProtocolFactory()Lorg/apache/thrift/protocol/TProtocolFactory;
+#getTimeout()J
+#hasTimeout()Z
+#setTimeout(J)V
+#hasError()Z
+#getError()Ljava/lang/Exception;

+###org/apache/thrift/async/TAsyncClientManager
@0.6.1
+#<init>()V
+#call(Lorg/apache/thrift/async/TAsyncMethodCall;)V
+#stop()V
+#isRunning()Z

+###org/apache/thrift/async/TAsyncClientFactory
@0.6.1
+#getAsyncClient(Lorg/apache/thrift/transport/TNonblockingTransport;)Lorg/apache/thrift/async/TAsyncClient;

+###org/apache/thrift/async/TAsyncMethodCall$State
@0.6.1
+#values()[Lorg/apache/thrift/async/TAsyncMethodCall$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/thrift/async/TAsyncMethodCall$State;

+###org/apache/thrift/AsyncProcessFunction
@0.9.1
+#<init>(Ljava/lang/String;)V
+#start(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getEmptyArgsInstance()Ljava/lang/Object;
+#getResultHandler(Lorg/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer;I)Lorg/apache/thrift/async/AsyncMethodCallback;
+#getMethodName()Ljava/lang/String;
+#sendResponse(Lorg/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer;Lorg/apache/thrift/TBase;BI)V
@0.10.0
+#start(Ljava/lang/Object;Lorg/apache/thrift/TBase;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#sendResponse(Lorg/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer;Lorg/apache/thrift/TSerializable;BI)V
-#start(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/thrift/async/AsyncMethodCallback;)V
-#getEmptyArgsInstance()Ljava/lang/Object;
-#sendResponse(Lorg/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer;Lorg/apache/thrift/TBase;BI)V

+###org/apache/thrift/protocol/TSimpleJSONProtocol$Factory
@0.6.1
+#<init>()V
+#getProtocol(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/protocol/TProtocol;

+###org/apache/thrift/protocol/TJSONProtocol$JSONPairContext
@0.6.1

+###org/apache/thrift/protocol/TWriteProtocol
@0.17.0
+#writeMessageBegin(Lorg/apache/thrift/protocol/TMessage;)V
+#writeMessageEnd()V
+#writeStructBegin(Lorg/apache/thrift/protocol/TStruct;)V
+#writeStructEnd()V
+#writeFieldBegin(Lorg/apache/thrift/protocol/TField;)V
+#writeFieldEnd()V
+#writeFieldStop()V
+#writeMapBegin(Lorg/apache/thrift/protocol/TMap;)V
+#writeMapEnd()V
+#writeListBegin(Lorg/apache/thrift/protocol/TList;)V
+#writeListEnd()V
+#writeSetBegin(Lorg/apache/thrift/protocol/TSet;)V
+#writeSetEnd()V
+#writeBool(Z)V
+#writeByte(B)V
+#writeI16(S)V
+#writeI32(I)V
+#writeI64(J)V
+#writeDouble(D)V
+#writeString(Ljava/lang/String;)V
+#writeBinary(Ljava/nio/ByteBuffer;)V
@0.18.0
+#writeUuid(Ljava/util/UUID;)V

+###org/apache/thrift/protocol/TSimpleJSONProtocol$CollectionMapKeyException
@0.9.2
+#<init>(Ljava/lang/String;)V

+###org/apache/thrift/protocol/TSimpleJSONProtocol$Context
@0.6.1

+###org/apache/thrift/protocol/TMessageType
@0.6.1
+#<init>()V

+###org/apache/thrift/protocol/TJSONProtocol$Factory
@0.6.1
+#<init>()V
+#getProtocol(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/protocol/TProtocol;
@0.9.2
+#<init>(Z)V

+###org/apache/thrift/protocol/TJSONProtocol$JSONBaseContext
@0.6.1

+###org/apache/thrift/protocol/TProtocolUtil
@0.6.1
+#<init>()V
+#setMaxSkipDepth(I)V
+#skip(Lorg/apache/thrift/protocol/TProtocol;B)V
+#skip(Lorg/apache/thrift/protocol/TProtocol;BI)V
+#guessProtocolFactory([BLorg/apache/thrift/protocol/TProtocolFactory;)Lorg/apache/thrift/protocol/TProtocolFactory;
@0.17.0
-#<init>()V

+###org/apache/thrift/protocol/TCompactProtocol$Factory
@0.6.1
+#<init>()V
+#getProtocol(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/protocol/TProtocol;
@0.9.0
+#<init>(I)V
@0.9.2
+#<init>(J)V
+#<init>(JJ)V
-#<init>(I)V

+###org/apache/thrift/protocol/TList
@0.6.1
+#<init>()V
+#<init>(BI)V
@0.17.0
+#getElemType()B
+#getSize()I

+###org/apache/thrift/protocol/TProtocol$ReadMapEntryCallback
@0.17.0
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;

+###org/apache/thrift/protocol/TJSONProtocol$LookaheadReader
@0.6.1

+###org/apache/thrift/protocol/TBinaryProtocol$Factory
@0.6.1
+#<init>()V
+#<init>(ZZ)V
+#<init>(ZZI)V
+#getProtocol(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/protocol/TProtocol;
@0.9.1
-#<init>(ZZI)V
@0.9.2
+#<init>(ZZJJ)V
@0.10.0
+#<init>(JJ)V

+###org/apache/thrift/protocol/TSimpleJSONProtocol$MapContext
@0.9.2

+###org/apache/thrift/protocol/TSet
@0.6.1
+#<init>()V
+#<init>(BI)V
+#<init>(Lorg/apache/thrift/protocol/TList;)V
@0.17.0
+#getElemType()B
+#getSize()I

+###org/apache/thrift/protocol/TSimpleJSONProtocol$ListContext
@0.6.1

+###org/apache/thrift/protocol/TTupleProtocol$Factory
@0.8.0
+#<init>()V
+#getProtocol(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/protocol/TProtocol;

+###org/apache/thrift/protocol/TProtocol$ReadCallback
@0.17.0
+#accept(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/thrift/protocol/TType
@0.6.1
+#<init>()V

+###org/apache/thrift/protocol/TProtocolException
@0.6.1
+#<init>()V
+#<init>(I)V
+#<init>(ILjava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#<init>(ILjava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(ILjava/lang/String;Ljava/lang/Throwable;)V
+#getType()I

+###org/apache/thrift/protocol/TProtocolFactory
@0.6.1
+#getProtocol(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/protocol/TProtocol;

+###org/apache/thrift/protocol/TJSONProtocol
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#reset()V
+#writeMessageBegin(Lorg/apache/thrift/protocol/TMessage;)V
+#writeMessageEnd()V
+#writeStructBegin(Lorg/apache/thrift/protocol/TStruct;)V
+#writeStructEnd()V
+#writeFieldBegin(Lorg/apache/thrift/protocol/TField;)V
+#writeFieldEnd()V
+#writeFieldStop()V
+#writeMapBegin(Lorg/apache/thrift/protocol/TMap;)V
+#writeMapEnd()V
+#writeListBegin(Lorg/apache/thrift/protocol/TList;)V
+#writeListEnd()V
+#writeSetBegin(Lorg/apache/thrift/protocol/TSet;)V
+#writeSetEnd()V
+#writeBool(Z)V
+#writeByte(B)V
+#writeI16(S)V
+#writeI32(I)V
+#writeI64(J)V
+#writeDouble(D)V
+#writeString(Ljava/lang/String;)V
+#writeBinary(Ljava/nio/ByteBuffer;)V
+#readMessageBegin()Lorg/apache/thrift/protocol/TMessage;
+#readMessageEnd()V
+#readStructBegin()Lorg/apache/thrift/protocol/TStruct;
+#readStructEnd()V
+#readFieldBegin()Lorg/apache/thrift/protocol/TField;
+#readFieldEnd()V
+#readMapBegin()Lorg/apache/thrift/protocol/TMap;
+#readMapEnd()V
+#readListBegin()Lorg/apache/thrift/protocol/TList;
+#readListEnd()V
+#readSetBegin()Lorg/apache/thrift/protocol/TSet;
+#readSetEnd()V
+#readBool()Z
+#readByte()B
+#readI16()S
+#readI32()I
+#readI64()J
+#readDouble()D
+#readString()Ljava/lang/String;
+#readBinary()Ljava/nio/ByteBuffer;
@0.9.2
+#<init>(Lorg/apache/thrift/transport/TTransport;Z)V
@0.14.0
+#getMinSerializedSize(B)I
@0.18.0
+#writeUuid(Ljava/util/UUID;)V
+#readUuid()Ljava/util/UUID;

+###org/apache/thrift/protocol/TMessage
@0.6.1
+#<init>()V
+#<init>(Ljava/lang/String;BI)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/thrift/protocol/TMessage;)Z
@0.9.2
+#hashCode()I
-#equals(Lorg/apache/thrift/protocol/TMessage;)Z
@0.17.0
+#getName()Ljava/lang/String;
+#getType()B
+#getSeqid()I

+###org/apache/thrift/protocol/TReadProtocol
@0.17.0
+#readMessageBegin()Lorg/apache/thrift/protocol/TMessage;
+#readMessageEnd()V
+#readStructBegin()Lorg/apache/thrift/protocol/TStruct;
+#readStructEnd()V
+#readFieldBegin()Lorg/apache/thrift/protocol/TField;
+#readFieldEnd()V
+#readMapBegin()Lorg/apache/thrift/protocol/TMap;
+#readMapEnd()V
+#readListBegin()Lorg/apache/thrift/protocol/TList;
+#readListEnd()V
+#readSetBegin()Lorg/apache/thrift/protocol/TSet;
+#readSetEnd()V
+#readBool()Z
+#readByte()B
+#readI16()S
+#readI32()I
+#readI64()J
+#readDouble()D
+#readString()Ljava/lang/String;
+#readBinary()Ljava/nio/ByteBuffer;
@0.18.0
+#readUuid()Ljava/util/UUID;

+###org/apache/thrift/protocol/TStruct
@0.6.1
+#<init>()V
+#<init>(Ljava/lang/String;)V
@0.17.0
+#getName()Ljava/lang/String;

+###org/apache/thrift/protocol/TProtocolDecorator
@0.9.1
+#<init>(Lorg/apache/thrift/protocol/TProtocol;)V
+#writeMessageBegin(Lorg/apache/thrift/protocol/TMessage;)V
+#writeMessageEnd()V
+#writeStructBegin(Lorg/apache/thrift/protocol/TStruct;)V
+#writeStructEnd()V
+#writeFieldBegin(Lorg/apache/thrift/protocol/TField;)V
+#writeFieldEnd()V
+#writeFieldStop()V
+#writeMapBegin(Lorg/apache/thrift/protocol/TMap;)V
+#writeMapEnd()V
+#writeListBegin(Lorg/apache/thrift/protocol/TList;)V
+#writeListEnd()V
+#writeSetBegin(Lorg/apache/thrift/protocol/TSet;)V
+#writeSetEnd()V
+#writeBool(Z)V
+#writeByte(B)V
+#writeI16(S)V
+#writeI32(I)V
+#writeI64(J)V
+#writeDouble(D)V
+#writeString(Ljava/lang/String;)V
+#writeBinary(Ljava/nio/ByteBuffer;)V
+#readMessageBegin()Lorg/apache/thrift/protocol/TMessage;
+#readMessageEnd()V
+#readStructBegin()Lorg/apache/thrift/protocol/TStruct;
+#readStructEnd()V
+#readFieldBegin()Lorg/apache/thrift/protocol/TField;
+#readFieldEnd()V
+#readMapBegin()Lorg/apache/thrift/protocol/TMap;
+#readMapEnd()V
+#readListBegin()Lorg/apache/thrift/protocol/TList;
+#readListEnd()V
+#readSetBegin()Lorg/apache/thrift/protocol/TSet;
+#readSetEnd()V
+#readBool()Z
+#readByte()B
+#readI16()S
+#readI32()I
+#readI64()J
+#readDouble()D
+#readString()Ljava/lang/String;
+#readBinary()Ljava/nio/ByteBuffer;
@0.14.0
+#getMinSerializedSize(B)I
@0.18.0
+#readUuid()Ljava/util/UUID;
+#writeUuid(Ljava/util/UUID;)V

+###org/apache/thrift/protocol/TCompactProtocol
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#reset()V
+#writeMessageBegin(Lorg/apache/thrift/protocol/TMessage;)V
+#writeStructBegin(Lorg/apache/thrift/protocol/TStruct;)V
+#writeStructEnd()V
+#writeFieldBegin(Lorg/apache/thrift/protocol/TField;)V
+#writeFieldStop()V
+#writeMapBegin(Lorg/apache/thrift/protocol/TMap;)V
+#writeListBegin(Lorg/apache/thrift/protocol/TList;)V
+#writeSetBegin(Lorg/apache/thrift/protocol/TSet;)V
+#writeBool(Z)V
+#writeByte(B)V
+#writeI16(S)V
+#writeI32(I)V
+#writeI64(J)V
+#writeDouble(D)V
+#writeString(Ljava/lang/String;)V
+#writeBinary(Ljava/nio/ByteBuffer;)V
+#writeMessageEnd()V
+#writeMapEnd()V
+#writeListEnd()V
+#writeSetEnd()V
+#writeFieldEnd()V
+#readMessageBegin()Lorg/apache/thrift/protocol/TMessage;
+#readStructBegin()Lorg/apache/thrift/protocol/TStruct;
+#readStructEnd()V
+#readFieldBegin()Lorg/apache/thrift/protocol/TField;
+#readMapBegin()Lorg/apache/thrift/protocol/TMap;
+#readListBegin()Lorg/apache/thrift/protocol/TList;
+#readSetBegin()Lorg/apache/thrift/protocol/TSet;
+#readBool()Z
+#readByte()B
+#readI16()S
+#readI32()I
+#readI64()J
+#readDouble()D
+#readString()Ljava/lang/String;
+#readBinary()Ljava/nio/ByteBuffer;
+#readMessageEnd()V
+#readFieldEnd()V
+#readMapEnd()V
+#readListEnd()V
+#readSetEnd()V
@0.9.0
+#<init>(Lorg/apache/thrift/transport/TTransport;J)V
@0.9.2
+#<init>(Lorg/apache/thrift/transport/TTransport;JJ)V
*#<init>(Lorg/apache/thrift/transport/TTransport;J)V[deprecated]
@0.14.0
+#getMinSerializedSize(B)I
@0.18.0
+#writeUuid(Ljava/util/UUID;)V
+#readUuid()Ljava/util/UUID;

+###org/apache/thrift/protocol/TSimpleJSONProtocol$StructContext
@0.6.1

+###org/apache/thrift/protocol/TJSONProtocol$JSONListContext
@0.6.1

+###org/apache/thrift/protocol/TMultiplexedProtocol
@0.9.1
+#<init>(Lorg/apache/thrift/protocol/TProtocol;Ljava/lang/String;)V
+#writeMessageBegin(Lorg/apache/thrift/protocol/TMessage;)V

+###org/apache/thrift/protocol/TMap
@0.6.1
+#<init>()V
+#<init>(BBI)V
@0.17.0
+#getKeyType()B
+#getValueType()B
+#getSize()I

+###org/apache/thrift/protocol/TField
@0.6.1
+#<init>()V
+#<init>(Ljava/lang/String;BS)V
+#toString()Ljava/lang/String;
+#equals(Lorg/apache/thrift/protocol/TField;)Z
@0.9.2
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
-#equals(Lorg/apache/thrift/protocol/TField;)Z

+###org/apache/thrift/protocol/TProtocol
@0.6.1
+#getTransport()Lorg/apache/thrift/transport/TTransport;
+#writeMessageBegin(Lorg/apache/thrift/protocol/TMessage;)V
+#writeMessageEnd()V
+#writeStructBegin(Lorg/apache/thrift/protocol/TStruct;)V
+#writeStructEnd()V
+#writeFieldBegin(Lorg/apache/thrift/protocol/TField;)V
+#writeFieldEnd()V
+#writeFieldStop()V
+#writeMapBegin(Lorg/apache/thrift/protocol/TMap;)V
+#writeMapEnd()V
+#writeListBegin(Lorg/apache/thrift/protocol/TList;)V
+#writeListEnd()V
+#writeSetBegin(Lorg/apache/thrift/protocol/TSet;)V
+#writeSetEnd()V
+#writeBool(Z)V
+#writeByte(B)V
+#writeI16(S)V
+#writeI32(I)V
+#writeI64(J)V
+#writeDouble(D)V
+#writeString(Ljava/lang/String;)V
+#writeBinary(Ljava/nio/ByteBuffer;)V
+#readMessageBegin()Lorg/apache/thrift/protocol/TMessage;
+#readMessageEnd()V
+#readStructBegin()Lorg/apache/thrift/protocol/TStruct;
+#readStructEnd()V
+#readFieldBegin()Lorg/apache/thrift/protocol/TField;
+#readFieldEnd()V
+#readMapBegin()Lorg/apache/thrift/protocol/TMap;
+#readMapEnd()V
+#readListBegin()Lorg/apache/thrift/protocol/TList;
+#readListEnd()V
+#readSetBegin()Lorg/apache/thrift/protocol/TSet;
+#readSetEnd()V
+#readBool()Z
+#readByte()B
+#readI16()S
+#readI32()I
+#readI64()J
+#readDouble()D
+#readString()Ljava/lang/String;
+#readBinary()Ljava/nio/ByteBuffer;
+#reset()V
@0.8.0
+#getScheme()Ljava/lang/Class;
@0.14.0
+#getMinSerializedSize(B)I
@0.16.0
+#readFieldBeginData()I
+#skip(B)V
+#skip(BI)V
@0.17.0
+#writeSet(BLjava/util/Set;Lorg/apache/thrift/protocol/TProtocol$WriteCallback;)V
+#writeList(BLjava/util/List;Lorg/apache/thrift/protocol/TProtocol$WriteCallback;)V
+#writeMap(BBLjava/util/Map;Lorg/apache/thrift/protocol/TProtocol$WriteCallback;)V
+#writeField(Lorg/apache/thrift/protocol/TField;Lorg/apache/thrift/protocol/TProtocol$WriteCallback;)V
+#writeStruct(Lorg/apache/thrift/protocol/TStruct;Lorg/apache/thrift/protocol/TProtocol$WriteCallback;)V
+#writeMessage(Lorg/apache/thrift/protocol/TMessage;Lorg/apache/thrift/protocol/TProtocol$WriteCallback;)V
+#readMessage(Lorg/apache/thrift/protocol/TProtocol$ReadCallback;)Ljava/lang/Object;
+#readStruct(Lorg/apache/thrift/protocol/TProtocol$ReadCallback;)Ljava/lang/Object;
+#readField(Lorg/apache/thrift/protocol/TProtocol$ReadCallback;)Z
+#readMap(Lorg/apache/thrift/protocol/TProtocol$ReadCallback;)Ljava/util/Map;
+#readMap(Lorg/apache/thrift/protocol/TProtocol$ReadMapEntryCallback;)Ljava/util/Map;
+#readMap(Lorg/apache/thrift/protocol/TProtocol$ReadMapEntryCallback;Ljava/util/function/IntFunction;)Ljava/util/Map;
+#readList(Lorg/apache/thrift/protocol/TProtocol$ReadCallback;)Ljava/util/List;
+#readList(Lorg/apache/thrift/protocol/TProtocol$ReadCollectionCallback;)Ljava/util/List;
+#readList(Lorg/apache/thrift/protocol/TProtocol$ReadCollectionCallback;Ljava/util/function/IntFunction;)Ljava/util/List;
+#readSet(Lorg/apache/thrift/protocol/TProtocol$ReadCallback;)Ljava/util/Set;
+#readSet(Lorg/apache/thrift/protocol/TProtocol$ReadCollectionCallback;)Ljava/util/Set;
+#readSet(Lorg/apache/thrift/protocol/TProtocol$ReadCollectionCallback;Ljava/util/function/IntFunction;)Ljava/util/Set;
-#writeMessageBegin(Lorg/apache/thrift/protocol/TMessage;)V
-#writeMessageEnd()V
-#writeStructBegin(Lorg/apache/thrift/protocol/TStruct;)V
-#writeStructEnd()V
-#writeFieldBegin(Lorg/apache/thrift/protocol/TField;)V
-#writeFieldEnd()V
-#writeFieldStop()V
-#writeMapBegin(Lorg/apache/thrift/protocol/TMap;)V
-#writeMapEnd()V
-#writeListBegin(Lorg/apache/thrift/protocol/TList;)V
-#writeListEnd()V
-#writeSetBegin(Lorg/apache/thrift/protocol/TSet;)V
-#writeSetEnd()V
-#writeBool(Z)V
-#writeByte(B)V
-#writeI16(S)V
-#writeI32(I)V
-#writeI64(J)V
-#writeDouble(D)V
-#writeString(Ljava/lang/String;)V
-#writeBinary(Ljava/nio/ByteBuffer;)V
-#readMessageBegin()Lorg/apache/thrift/protocol/TMessage;
-#readMessageEnd()V
-#readStructBegin()Lorg/apache/thrift/protocol/TStruct;
-#readStructEnd()V
-#readFieldBegin()Lorg/apache/thrift/protocol/TField;
-#readFieldEnd()V
-#readMapBegin()Lorg/apache/thrift/protocol/TMap;
-#readMapEnd()V
-#readListBegin()Lorg/apache/thrift/protocol/TList;
-#readListEnd()V
-#readSetBegin()Lorg/apache/thrift/protocol/TSet;
-#readSetEnd()V
-#readBool()Z
-#readByte()B
-#readI16()S
-#readI32()I
-#readI64()J
-#readDouble()D
-#readString()Ljava/lang/String;
-#readBinary()Ljava/nio/ByteBuffer;

+###org/apache/thrift/protocol/TBinaryProtocol
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#<init>(Lorg/apache/thrift/transport/TTransport;ZZ)V
+#writeMessageBegin(Lorg/apache/thrift/protocol/TMessage;)V
+#writeMessageEnd()V
+#writeStructBegin(Lorg/apache/thrift/protocol/TStruct;)V
+#writeStructEnd()V
+#writeFieldBegin(Lorg/apache/thrift/protocol/TField;)V
+#writeFieldEnd()V
+#writeFieldStop()V
+#writeMapBegin(Lorg/apache/thrift/protocol/TMap;)V
+#writeMapEnd()V
+#writeListBegin(Lorg/apache/thrift/protocol/TList;)V
+#writeListEnd()V
+#writeSetBegin(Lorg/apache/thrift/protocol/TSet;)V
+#writeSetEnd()V
+#writeBool(Z)V
+#writeByte(B)V
+#writeI16(S)V
+#writeI32(I)V
+#writeI64(J)V
+#writeDouble(D)V
+#writeString(Ljava/lang/String;)V
+#writeBinary(Ljava/nio/ByteBuffer;)V
+#readMessageBegin()Lorg/apache/thrift/protocol/TMessage;
+#readMessageEnd()V
+#readStructBegin()Lorg/apache/thrift/protocol/TStruct;
+#readStructEnd()V
+#readFieldBegin()Lorg/apache/thrift/protocol/TField;
+#readFieldEnd()V
+#readMapBegin()Lorg/apache/thrift/protocol/TMap;
+#readMapEnd()V
+#readListBegin()Lorg/apache/thrift/protocol/TList;
+#readListEnd()V
+#readSetBegin()Lorg/apache/thrift/protocol/TSet;
+#readSetEnd()V
+#readBool()Z
+#readByte()B
+#readI16()S
+#readI32()I
+#readI64()J
+#readDouble()D
+#readString()Ljava/lang/String;
+#readStringBody(I)Ljava/lang/String;
+#readBinary()Ljava/nio/ByteBuffer;
+#setReadLength(I)V
@0.9.1
-#setReadLength(I)V
@0.9.2
+#<init>(Lorg/apache/thrift/transport/TTransport;JJZZ)V
@0.10.0
+#<init>(Lorg/apache/thrift/transport/TTransport;JJ)V
@0.14.0
+#getMinSerializedSize(B)I
@0.16.0
+#readFieldBeginData()I
@0.18.0
+#writeUuid(Ljava/util/UUID;)V
+#readUuid()Ljava/util/UUID;

+###org/apache/thrift/protocol/TTupleProtocol
@0.8.0
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#getScheme()Ljava/lang/Class;
+#writeBitSet(Ljava/util/BitSet;I)V
+#readBitSet(I)Ljava/util/BitSet;
+#fromByteArray([B)Ljava/util/BitSet;
+#toByteArray(Ljava/util/BitSet;I)[B
@0.14.0
+#readMapBegin(BB)Lorg/apache/thrift/protocol/TMap;
+#readListBegin(B)Lorg/apache/thrift/protocol/TList;
+#readSetBegin(B)Lorg/apache/thrift/protocol/TSet;
+#readMapEnd()V
+#readListEnd()V
+#readSetEnd()V

+###org/apache/thrift/protocol/TSimpleJSONProtocol
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#writeMessageBegin(Lorg/apache/thrift/protocol/TMessage;)V
+#writeMessageEnd()V
+#writeStructBegin(Lorg/apache/thrift/protocol/TStruct;)V
+#writeStructEnd()V
+#writeFieldBegin(Lorg/apache/thrift/protocol/TField;)V
+#writeFieldEnd()V
+#writeFieldStop()V
+#writeMapBegin(Lorg/apache/thrift/protocol/TMap;)V
+#writeMapEnd()V
+#writeListBegin(Lorg/apache/thrift/protocol/TList;)V
+#writeListEnd()V
+#writeSetBegin(Lorg/apache/thrift/protocol/TSet;)V
+#writeSetEnd()V
+#writeBool(Z)V
+#writeByte(B)V
+#writeI16(S)V
+#writeI32(I)V
+#_writeStringData(Ljava/lang/String;)V
+#writeI64(J)V
+#writeDouble(D)V
+#writeString(Ljava/lang/String;)V
+#writeBinary(Ljava/nio/ByteBuffer;)V
+#readMessageBegin()Lorg/apache/thrift/protocol/TMessage;
+#readMessageEnd()V
+#readStructBegin()Lorg/apache/thrift/protocol/TStruct;
+#readStructEnd()V
+#readFieldBegin()Lorg/apache/thrift/protocol/TField;
+#readFieldEnd()V
+#readMapBegin()Lorg/apache/thrift/protocol/TMap;
+#readMapEnd()V
+#readListBegin()Lorg/apache/thrift/protocol/TList;
+#readListEnd()V
+#readSetBegin()Lorg/apache/thrift/protocol/TSet;
+#readSetEnd()V
+#readBool()Z
+#readByte()B
+#readI16()S
+#readI32()I
+#readI64()J
+#readDouble()D
+#readString()Ljava/lang/String;
+#readStringBody(I)Ljava/lang/String;
+#readBinary()Ljava/nio/ByteBuffer;
@0.14.0
+#getMinSerializedSize(B)I
@0.18.0
+#writeUuid(Ljava/util/UUID;)V
+#readUuid()Ljava/util/UUID;

+###org/apache/thrift/protocol/TProtocol$ReadCollectionCallback
@0.17.0
+#call()Ljava/lang/Object;

+###org/apache/thrift/protocol/TProtocol$WriteCallback
@0.17.0
+#call(Ljava/lang/Object;)V

+###org/apache/thrift/Option$Some
@0.9.3
+#<init>(Ljava/lang/Object;)V
+#isDefined()Z
+#get()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###org/apache/thrift/TProcessor
@0.6.1
+#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Z
@0.13.0
+#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)V
-#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Z

+###org/apache/thrift/TServiceClientFactory
@0.6.1
+#getClient(Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/thrift/TServiceClient;
+#getClient(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/thrift/TServiceClient;

+###org/apache/thrift/TMultiplexedProcessor
@0.9.1
+#<init>()V
+#registerProcessor(Ljava/lang/String;Lorg/apache/thrift/TProcessor;)V
+#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Z
@0.11.0
+#registerDefault(Lorg/apache/thrift/TProcessor;)V
@0.13.0
+#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)V
-#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Z

+###org/apache/thrift/TProcessorFactory
@0.6.1
+#<init>(Lorg/apache/thrift/TProcessor;)V
+#getProcessor(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/TProcessor;
@0.9.1
+#isAsyncProcessor()Z

+###org/apache/thrift/annotation/Nullable
@0.12.0

+###org/apache/thrift/partial/ThriftMetadata$ThriftEnum
@0.16.0

+###org/apache/thrift/partial/ThriftMetadata$ThriftStruct
@0.16.0
+#createNewStruct()Lorg/apache/thrift/TBase;
+#of(Ljava/lang/Class;)Lorg/apache/thrift/partial/ThriftMetadata$ThriftStruct;
+#fromFieldNames(Ljava/lang/Class;Ljava/util/Collection;)Lorg/apache/thrift/partial/ThriftMetadata$ThriftStruct;
+#fromFields(Ljava/lang/Class;Ljava/lang/Iterable;)Lorg/apache/thrift/partial/ThriftMetadata$ThriftStruct;
+#toString()Ljava/lang/String;

+###org/apache/thrift/partial/ThriftMetadata$ThriftContainer
@0.16.0
+#<init>(Lorg/apache/thrift/partial/ThriftMetadata$ThriftObject;Lorg/apache/thrift/TFieldIdEnum;Lorg/apache/thrift/meta_data/FieldMetaData;)V
+#hasUnion()Z

+###org/apache/thrift/partial/ThriftMetadata$ThriftStructBase
@0.16.0
+#<init>(Lorg/apache/thrift/partial/ThriftMetadata$ThriftObject;Lorg/apache/thrift/TFieldIdEnum;Lorg/apache/thrift/meta_data/FieldMetaData;)V
+#getStructClass()Ljava/lang/Class;
+#getStructClass(Lorg/apache/thrift/meta_data/FieldMetaData;)Ljava/lang/Class;
+#isUnion()Z
+#isUnion(Lorg/apache/thrift/meta_data/FieldMetaData;)Z
+#create(Lorg/apache/thrift/partial/ThriftMetadata$ThriftObject;Lorg/apache/thrift/TFieldIdEnum;Lorg/apache/thrift/meta_data/FieldMetaData;Ljava/lang/Iterable;)Lorg/apache/thrift/partial/ThriftMetadata$ThriftStructBase;

+###org/apache/thrift/partial/ThriftMetadata
@0.16.0
+#<init>()V

+###org/apache/thrift/partial/ThriftField
@0.16.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getFieldNames()Ljava/util/List;
+#fromNames(Ljava/util/Collection;)Ljava/util/List;

+###org/apache/thrift/partial/ThriftMetadata$ThriftPrimitive
@0.16.0
+#isBinary()Z

+###org/apache/thrift/partial/ThriftFieldValueProcessor
@0.16.0
+#createNewStruct(Lorg/apache/thrift/partial/ThriftMetadata$ThriftStruct;)Ljava/lang/Object;
+#prepareStruct(Ljava/lang/Object;)Ljava/lang/Object;
+#setBool(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Z)V
+#setByte(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;B)V
+#setInt16(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;S)V
+#setInt32(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;I)V
+#setInt64(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;J)V
+#setDouble(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;D)V
+#setBinary(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/nio/ByteBuffer;)V
+#setString(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/nio/ByteBuffer;)V
+#setEnumField(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setListField(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setMapField(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setSetField(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setStructField(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#prepareEnum(Ljava/lang/Class;I)Ljava/lang/Object;
+#prepareString(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#prepareBinary(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#createNewList(I)Ljava/lang/Object;
+#setListElement(Ljava/lang/Object;ILjava/lang/Object;)V
+#prepareList(Ljava/lang/Object;)Ljava/lang/Object;
+#createNewMap(I)Ljava/lang/Object;
+#setMapElement(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)V
+#prepareMap(Ljava/lang/Object;)Ljava/lang/Object;
+#createNewSet(I)Ljava/lang/Object;
+#setSetElement(Ljava/lang/Object;ILjava/lang/Object;)V
+#prepareSet(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/thrift/partial/PartialThriftComparer
@0.16.0
+#<init>(Lorg/apache/thrift/partial/ThriftMetadata$ThriftStruct;)V
+#areEqual(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TBase;Ljava/lang/StringBuilder;)Z

+###org/apache/thrift/partial/TFieldData
@0.16.0
+#<init>()V
+#encode(B)I
+#encode(BS)I
+#getType(I)B
+#getId(I)S

+###org/apache/thrift/partial/ThriftMetadata$ThriftMap
@0.16.0
+#hasUnion()Z

+###org/apache/thrift/partial/ThriftMetadata$ThriftSet
@0.16.0
+#hasUnion()Z

+###org/apache/thrift/partial/EnumCache
@0.16.0
+#<init>()V
+#get(Ljava/lang/Class;I)Lorg/apache/thrift/TEnum;

+###org/apache/thrift/partial/Validate
@0.16.0
+#checkNotNull(Ljava/lang/Object;Ljava/lang/String;)V
+#checkPositiveInteger(JLjava/lang/String;)V
+#checkNotNegative(JLjava/lang/String;)V
+#checkRequired(ZLjava/lang/String;)V
+#checkValid(ZLjava/lang/String;)V
+#checkValid(ZLjava/lang/String;Ljava/lang/String;)V
+#checkNotNullAndNotEmpty(Ljava/lang/String;Ljava/lang/String;)V
+#checkNotNullAndNotEmpty([Ljava/lang/Object;Ljava/lang/String;)V
+#checkNotNullAndNotEmpty([BLjava/lang/String;)V
+#checkNotNullAndNotEmpty([SLjava/lang/String;)V
+#checkNotNullAndNotEmpty([ILjava/lang/String;)V
+#checkNotNullAndNotEmpty([JLjava/lang/String;)V
+#checkNotNullAndNotEmpty(Ljava/lang/Iterable;Ljava/lang/String;)V
+#checkNotNullAndNumberOfElements(Ljava/util/Collection;ILjava/lang/String;)V
+#checkValuesEqual(JLjava/lang/String;JLjava/lang/String;)V
+#checkIntegerMultiple(JLjava/lang/String;JLjava/lang/String;)V
+#checkGreater(JLjava/lang/String;JLjava/lang/String;)V
+#checkGreaterOrEqual(JLjava/lang/String;JLjava/lang/String;)V
+#checkLessOrEqual(JLjava/lang/String;JLjava/lang/String;)V
+#checkWithinRange(JLjava/lang/String;JJ)V
+#checkWithinRange(DLjava/lang/String;DD)V
+#checkPathExists(Ljava/nio/file/Path;Ljava/lang/String;)V
+#checkPathExistsAsDir(Ljava/nio/file/Path;Ljava/lang/String;)V
+#checkPathExistsAsFile(Ljava/nio/file/Path;Ljava/lang/String;)V
+#checkArgument(ZLjava/lang/String;[Ljava/lang/Object;)V
+#checkState(ZLjava/lang/String;[Ljava/lang/Object;)V

+###org/apache/thrift/partial/ThriftStructProcessor
@0.16.0
+#<init>()V
+#createNewStruct(Lorg/apache/thrift/partial/ThriftMetadata$ThriftStruct;)Ljava/lang/Object;
+#prepareStruct(Ljava/lang/Object;)Lorg/apache/thrift/TBase;
+#createNewList(I)Ljava/lang/Object;
+#setListElement(Ljava/lang/Object;ILjava/lang/Object;)V
+#prepareList(Ljava/lang/Object;)Ljava/lang/Object;
+#createNewMap(I)Ljava/lang/Object;
+#setMapElement(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)V
+#prepareMap(Ljava/lang/Object;)Ljava/lang/Object;
+#createNewSet(I)Ljava/lang/Object;
+#setSetElement(Ljava/lang/Object;ILjava/lang/Object;)V
+#prepareSet(Ljava/lang/Object;)Ljava/lang/Object;
+#prepareEnum(Ljava/lang/Class;I)Ljava/lang/Object;
+#prepareString(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#prepareBinary(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#setBool(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;Z)V
+#setByte(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;B)V
+#setInt16(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;S)V
+#setInt32(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;I)V
+#setInt64(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;J)V
+#setDouble(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;D)V
+#setBinary(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;Ljava/nio/ByteBuffer;)V
+#setString(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;Ljava/nio/ByteBuffer;)V
+#setEnumField(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setListField(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setMapField(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setSetField(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setStructField(Lorg/apache/thrift/TBase;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setStructField(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setSetField(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setMapField(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setListField(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setEnumField(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#setString(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/nio/ByteBuffer;)V
+#setBinary(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Ljava/nio/ByteBuffer;)V
+#setDouble(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;D)V
+#setInt64(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;J)V
+#setInt32(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;I)V
+#setInt16(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;S)V
+#setByte(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;B)V
+#setBool(Ljava/lang/Object;Lorg/apache/thrift/TFieldIdEnum;Z)V
+#prepareStruct(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/thrift/partial/ThriftMetadata$ThriftObject
@0.16.0

+###org/apache/thrift/partial/ThriftMetadata$ThriftUnion
@0.16.0
+#<init>(Lorg/apache/thrift/partial/ThriftMetadata$ThriftObject;Lorg/apache/thrift/TFieldIdEnum;Lorg/apache/thrift/meta_data/FieldMetaData;Ljava/lang/Iterable;)V

+###org/apache/thrift/partial/ThriftMetadata$ThriftList
@0.16.0
+#hasUnion()Z

+###org/apache/thrift/TAsyncProcessor
@0.9.3
+#process(Lorg/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer;)Z
@0.13.0
+#process(Lorg/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer;)V
-#process(Lorg/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer;)Z

+###org/apache/thrift/scheme/TupleScheme
@0.8.0
+#<init>()V

+###org/apache/thrift/scheme/IScheme
@0.8.0
+#read(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/TBase;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/TBase;)V

+###org/apache/thrift/scheme/SchemeFactory
@0.8.0
+#getScheme()Lorg/apache/thrift/scheme/IScheme;

+###org/apache/thrift/scheme/StandardScheme
@0.8.0
+#<init>()V

+###org/apache/thrift/meta_data/FieldMetaData
@0.6.1
+#<init>(Ljava/lang/String;BLorg/apache/thrift/meta_data/FieldValueMetaData;)V
+#addStructMetaDataMap(Ljava/lang/Class;Ljava/util/Map;)V
+#getStructMetaDataMap(Ljava/lang/Class;)Ljava/util/Map;
@0.17.0
+#<init>(Ljava/lang/String;BLorg/apache/thrift/meta_data/FieldValueMetaData;Ljava/util/Map;)V
+#getFieldAnnotations()Ljava/util/Map;

+###org/apache/thrift/meta_data/EnumMetaData
@0.6.1
+#<init>(BLjava/lang/Class;)V

+###org/apache/thrift/meta_data/StructMetaData
@0.6.1
+#<init>(BLjava/lang/Class;)V

+###org/apache/thrift/meta_data/MapMetaData
@0.6.1
+#<init>(BLorg/apache/thrift/meta_data/FieldValueMetaData;Lorg/apache/thrift/meta_data/FieldValueMetaData;)V

+###org/apache/thrift/meta_data/FieldValueMetaData
@0.6.1
+#<init>(BZ)V
+#<init>(B)V
+#<init>(BLjava/lang/String;)V
+#isTypedef()Z
+#getTypedefName()Ljava/lang/String;
+#isStruct()Z
+#isContainer()Z
+#isBinary()Z

+###org/apache/thrift/meta_data/ListMetaData
@0.6.1
+#<init>(BLorg/apache/thrift/meta_data/FieldValueMetaData;)V

+###org/apache/thrift/meta_data/SetMetaData
@0.6.1
+#<init>(BLorg/apache/thrift/meta_data/FieldValueMetaData;)V

+###org/apache/thrift/TBase
@0.6.1
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#deepCopy()Lorg/apache/thrift/TBase;
+#clear()V
@0.10.0
-#read(Lorg/apache/thrift/protocol/TProtocol;)V
-#write(Lorg/apache/thrift/protocol/TProtocol;)V

+###org/apache/thrift/utils/StringUtils
@0.14.0
+#bytesToHexString([B)Ljava/lang/String;
+#bytesToHexString([BII)Ljava/lang/String;

+###org/apache/thrift/Option$None
@0.9.3
+#<init>()V
+#isDefined()Z
+#get()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###org/apache/thrift/TConfiguration$Builder
@0.14.0
+#setMaxMessageSize(I)Lorg/apache/thrift/TConfiguration$Builder;
+#setMaxFrameSize(I)Lorg/apache/thrift/TConfiguration$Builder;
+#setRecursionLimit(I)Lorg/apache/thrift/TConfiguration$Builder;
+#build()Lorg/apache/thrift/TConfiguration;

+###org/apache/thrift/Option
@0.9.3
+#<init>()V
+#isDefined()Z
+#get()Ljava/lang/Object;
+#or(Ljava/lang/Object;)Ljava/lang/Object;
+#fromNullable(Ljava/lang/Object;)Lorg/apache/thrift/Option;
+#some(Ljava/lang/Object;)Lorg/apache/thrift/Option$Some;
+#none()Lorg/apache/thrift/Option$None;
@0.17.0
+#toOptional()Ljava/util/Optional;

+###org/apache/thrift/server/ServerContext
@0.9.0
@0.14.0
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z

+###org/apache/thrift/server/TNonblockingServer
@0.6.1
+#<init>(Lorg/apache/thrift/server/TNonblockingServer$AbstractNonblockingServerArgs;)V
+#serve()V
+#stop()V
+#isStopped()Z
@0.8.0
+#<init>(Lorg/apache/thrift/server/AbstractNonblockingServer$AbstractNonblockingServerArgs;)V
-#<init>(Lorg/apache/thrift/server/TNonblockingServer$AbstractNonblockingServerArgs;)V
-#serve()V

+###org/apache/thrift/server/TThreadPoolServer
@0.6.1
+#<init>(Lorg/apache/thrift/server/TThreadPoolServer$Args;)V
+#serve()V
+#stop()V

+###org/apache/thrift/server/TServlet
@0.6.1
+#<init>(Lorg/apache/thrift/TProcessor;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/protocol/TProtocolFactory;)V
+#<init>(Lorg/apache/thrift/TProcessor;Lorg/apache/thrift/protocol/TProtocolFactory;)V
+#addCustomHeader(Ljava/lang/String;Ljava/lang/String;)V
+#setCustomHeaders(Ljava/util/Collection;)V

+###org/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy
@0.8.0
+#values()[Lorg/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy;
+#valueOf(Ljava/lang/String;)Lorg/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy;

+###org/apache/thrift/server/TThreadPoolServer$Args
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TServerTransport;)V
+#minWorkerThreads(I)Lorg/apache/thrift/server/TThreadPoolServer$Args;
+#maxWorkerThreads(I)Lorg/apache/thrift/server/TThreadPoolServer$Args;
@0.9.0
+#executorService(Ljava/util/concurrent/ExecutorService;)Lorg/apache/thrift/server/TThreadPoolServer$Args;
@0.9.2
+#requestTimeout(I)Lorg/apache/thrift/server/TThreadPoolServer$Args;
+#requestTimeoutUnit(Ljava/util/concurrent/TimeUnit;)Lorg/apache/thrift/server/TThreadPoolServer$Args;
+#beBackoffSlotLength(I)Lorg/apache/thrift/server/TThreadPoolServer$Args;
+#beBackoffSlotLengthUnit(Ljava/util/concurrent/TimeUnit;)Lorg/apache/thrift/server/TThreadPoolServer$Args;
@0.9.3
+#stopTimeoutVal(I)Lorg/apache/thrift/server/TThreadPoolServer$Args;
@0.11.0
+#stopTimeoutUnit(Ljava/util/concurrent/TimeUnit;)Lorg/apache/thrift/server/TThreadPoolServer$Args;
@0.14.0
-#requestTimeout(I)Lorg/apache/thrift/server/TThreadPoolServer$Args;
-#requestTimeoutUnit(Ljava/util/concurrent/TimeUnit;)Lorg/apache/thrift/server/TThreadPoolServer$Args;
-#beBackoffSlotLength(I)Lorg/apache/thrift/server/TThreadPoolServer$Args;
-#beBackoffSlotLengthUnit(Ljava/util/concurrent/TimeUnit;)Lorg/apache/thrift/server/TThreadPoolServer$Args;

+###org/apache/thrift/server/TSimpleServer
@0.6.1
+#<init>(Lorg/apache/thrift/server/TServer$AbstractServerArgs;)V
+#serve()V
+#stop()V

+###org/apache/thrift/server/TSaslNonblockingServer$Args
@0.14.0
+#<init>(Lorg/apache/thrift/transport/TNonblockingServerTransport;)V
+#networkThreads(I)Lorg/apache/thrift/server/TSaslNonblockingServer$Args;
+#saslThreads(I)Lorg/apache/thrift/server/TSaslNonblockingServer$Args;
+#processingThreads(I)Lorg/apache/thrift/server/TSaslNonblockingServer$Args;
+#processor(Lorg/apache/thrift/TProcessor;)Lorg/apache/thrift/server/TSaslNonblockingServer$Args;
+#saslProcessorFactory(Lorg/apache/thrift/transport/sasl/TSaslProcessorFactory;)Lorg/apache/thrift/server/TSaslNonblockingServer$Args;
+#addSaslMechanism(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Lorg/apache/thrift/server/TSaslNonblockingServer$Args;
+#saslServerFactory(Lorg/apache/thrift/transport/sasl/TSaslServerFactory;)Lorg/apache/thrift/server/TSaslNonblockingServer$Args;
+#processor(Lorg/apache/thrift/TProcessor;)Lorg/apache/thrift/server/TServer$AbstractServerArgs;

+###org/apache/thrift/server/TServer$Args
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TServerTransport;)V

+###org/apache/thrift/server/TNonblockingServer$Args
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TNonblockingServerTransport;)V

+###org/apache/thrift/server/THsHaServer
@0.6.1
+#<init>(Lorg/apache/thrift/server/THsHaServer$Args;)V
+#serve()V
@0.8.0
-#serve()V

+###org/apache/thrift/server/TNonblockingServer$SelectAcceptThread
@0.8.0
+#<init>(Lorg/apache/thrift/server/TNonblockingServer;Lorg/apache/thrift/transport/TNonblockingServerTransport;)V
+#isStopped()Z
+#run()V

+###org/apache/thrift/server/AbstractNonblockingServer
@0.8.0
+#<init>(Lorg/apache/thrift/server/AbstractNonblockingServer$AbstractNonblockingServerArgs;)V
+#serve()V
@0.9.0
+#setServerEventHandler(Lorg/apache/thrift/server/TServerEventHandler;)V
+#getEventHandler()Lorg/apache/thrift/server/TServerEventHandler;
@0.9.1
-#setServerEventHandler(Lorg/apache/thrift/server/TServerEventHandler;)V
-#getEventHandler()Lorg/apache/thrift/server/TServerEventHandler;

+###org/apache/thrift/server/AbstractNonblockingServer$FrameBuffer
@0.8.0
+#<init>(Lorg/apache/thrift/server/AbstractNonblockingServer;Lorg/apache/thrift/transport/TNonblockingTransport;Ljava/nio/channels/SelectionKey;Lorg/apache/thrift/server/AbstractNonblockingServer$AbstractSelectThread;)V
+#read()Z
+#write()Z
+#changeSelectInterests()V
+#close()V
+#isFrameFullyRead()Z
+#responseReady()V
+#invoke()V

+###org/apache/thrift/server/TServer$AbstractServerArgs
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TServerTransport;)V
+#processorFactory(Lorg/apache/thrift/TProcessorFactory;)Lorg/apache/thrift/server/TServer$AbstractServerArgs;
+#processor(Lorg/apache/thrift/TProcessor;)Lorg/apache/thrift/server/TServer$AbstractServerArgs;
+#transportFactory(Lorg/apache/thrift/transport/TTransportFactory;)Lorg/apache/thrift/server/TServer$AbstractServerArgs;
+#inputTransportFactory(Lorg/apache/thrift/transport/TTransportFactory;)Lorg/apache/thrift/server/TServer$AbstractServerArgs;
+#outputTransportFactory(Lorg/apache/thrift/transport/TTransportFactory;)Lorg/apache/thrift/server/TServer$AbstractServerArgs;
+#protocolFactory(Lorg/apache/thrift/protocol/TProtocolFactory;)Lorg/apache/thrift/server/TServer$AbstractServerArgs;
+#inputProtocolFactory(Lorg/apache/thrift/protocol/TProtocolFactory;)Lorg/apache/thrift/server/TServer$AbstractServerArgs;
+#outputProtocolFactory(Lorg/apache/thrift/protocol/TProtocolFactory;)Lorg/apache/thrift/server/TServer$AbstractServerArgs;

+###org/apache/thrift/server/TThreadedSelectorServer$Args
@0.8.0
+#<init>(Lorg/apache/thrift/transport/TNonblockingServerTransport;)V
+#selectorThreads(I)Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
+#getSelectorThreads()I
+#workerThreads(I)Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
+#getWorkerThreads()I
+#getStopTimeoutVal()I
+#stopTimeoutVal(I)Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
+#getStopTimeoutUnit()Ljava/util/concurrent/TimeUnit;
+#stopTimeoutUnit(Ljava/util/concurrent/TimeUnit;)Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
+#getExecutorService()Ljava/util/concurrent/ExecutorService;
+#executorService(Ljava/util/concurrent/ExecutorService;)Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
+#getAcceptQueueSizePerThread()I
+#acceptQueueSizePerThread(I)Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
+#getAcceptPolicy()Lorg/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy;
+#acceptPolicy(Lorg/apache/thrift/server/TThreadedSelectorServer$Args$AcceptPolicy;)Lorg/apache/thrift/server/TThreadedSelectorServer$Args;
+#validate()V

+###org/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer
@0.9.1
+#<init>(Lorg/apache/thrift/server/AbstractNonblockingServer;Lorg/apache/thrift/transport/TNonblockingTransport;Ljava/nio/channels/SelectionKey;Lorg/apache/thrift/server/AbstractNonblockingServer$AbstractSelectThread;)V
+#getInputProtocol()Lorg/apache/thrift/protocol/TProtocol;
+#getOutputProtocol()Lorg/apache/thrift/protocol/TProtocol;
+#invoke()V

+###org/apache/thrift/server/TExtensibleServlet
@0.9.0
+#<init>()V
+#init(Ljavax/servlet/ServletConfig;)V
+#addCustomHeader(Ljava/lang/String;Ljava/lang/String;)V
+#setCustomHeaders(Ljava/util/Collection;)V

+###org/apache/thrift/server/THsHaServer$Args
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TNonblockingServerTransport;)V
+#workerThreads(I)Lorg/apache/thrift/server/THsHaServer$Args;
+#getWorkerThreads()I
+#getStopTimeoutVal()I
+#stopTimeoutVal(I)Lorg/apache/thrift/server/THsHaServer$Args;
+#getStopTimeoutUnit()Ljava/util/concurrent/TimeUnit;
+#stopTimeoutUnit(Ljava/util/concurrent/TimeUnit;)Lorg/apache/thrift/server/THsHaServer$Args;
+#getExecutorService()Ljava/util/concurrent/ExecutorService;
+#executorService(Ljava/util/concurrent/ExecutorService;)Lorg/apache/thrift/server/THsHaServer$Args;
@0.9.3
+#minWorkerThreads(I)Lorg/apache/thrift/server/THsHaServer$Args;
+#maxWorkerThreads(I)Lorg/apache/thrift/server/THsHaServer$Args;
+#getMinWorkerThreads()I
+#getMaxWorkerThreads()I
-#workerThreads(I)Lorg/apache/thrift/server/THsHaServer$Args;
-#getWorkerThreads()I
@0.10.0
+#workerThreads(I)Lorg/apache/thrift/server/THsHaServer$Args;[deprecated]
+#getWorkerThreads()I[deprecated]

+###org/apache/thrift/server/TSaslNonblockingServer
@0.14.0
+#<init>(Lorg/apache/thrift/server/TSaslNonblockingServer$Args;)V
+#serve()V
+#stop()V
+#shutdown()V

+###org/apache/thrift/server/TThreadedSelectorServer
@0.8.0
+#<init>(Lorg/apache/thrift/server/TThreadedSelectorServer$Args;)V
+#stop()V

+###org/apache/thrift/server/TServer
@0.6.1
+#serve()V
+#stop()V
+#isServing()Z
@0.9.0
+#setServerEventHandler(Lorg/apache/thrift/server/TServerEventHandler;)V
+#getEventHandler()Lorg/apache/thrift/server/TServerEventHandler;
@0.9.3
+#getShouldStop()Z
+#setShouldStop(Z)V

+###org/apache/thrift/server/TThreadedSelectorServer$AcceptThread
@0.8.0
+#<init>(Lorg/apache/thrift/server/TThreadedSelectorServer;Lorg/apache/thrift/transport/TNonblockingServerTransport;Lorg/apache/thrift/server/TThreadedSelectorServer$SelectorThreadLoadBalancer;)V
+#run()V
+#wakeupSelector()V

+###org/apache/thrift/server/TThreadedSelectorServer$SelectorThreadLoadBalancer
@0.8.0
+#<init>(Lorg/apache/thrift/server/TThreadedSelectorServer;Ljava/util/Collection;)V
+#nextThread()Lorg/apache/thrift/server/TThreadedSelectorServer$SelectorThread;
@0.9.2
+#<init>(Ljava/util/Collection;)V
-#<init>(Lorg/apache/thrift/server/TThreadedSelectorServer;Ljava/util/Collection;)V

+###org/apache/thrift/server/AbstractNonblockingServer$AbstractSelectThread
@0.8.0
+#<init>(Lorg/apache/thrift/server/AbstractNonblockingServer;)V
+#wakeupSelector()V
+#requestSelectInterestChange(Lorg/apache/thrift/server/AbstractNonblockingServer$FrameBuffer;)V

+###org/apache/thrift/server/TThreadedSelectorServer$SelectorThread
@0.8.0
+#<init>(Lorg/apache/thrift/server/TThreadedSelectorServer;)V
+#<init>(Lorg/apache/thrift/server/TThreadedSelectorServer;I)V
+#<init>(Lorg/apache/thrift/server/TThreadedSelectorServer;Ljava/util/concurrent/BlockingQueue;)V
+#addAcceptedConnection(Lorg/apache/thrift/transport/TNonblockingTransport;)Z
+#run()V

+###org/apache/thrift/server/AbstractNonblockingServer$AbstractNonblockingServerArgs
@0.8.0
+#<init>(Lorg/apache/thrift/transport/TNonblockingServerTransport;)V

+###org/apache/thrift/server/TServerEventHandler
@0.9.0
+#preServe()V
+#createContext(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/thrift/server/ServerContext;
+#deleteContext(Lorg/apache/thrift/server/ServerContext;Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)V
+#processContext(Lorg/apache/thrift/server/ServerContext;Lorg/apache/thrift/transport/TTransport;Lorg/apache/thrift/transport/TTransport;)V

+###org/apache/thrift/transport/TNonblockingServerSocket$NonblockingAbstractServerSocketArgs
@0.9.2
+#<init>()V

+###org/apache/thrift/transport/TSaslTransport$SaslRole
@0.6.1
+#values()[Lorg/apache/thrift/transport/TSaslTransport$SaslRole;
+#valueOf(Ljava/lang/String;)Lorg/apache/thrift/transport/TSaslTransport$SaslRole;

+###org/apache/thrift/transport/TSaslServerTransport$Factory
@0.6.1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)V
+#addServerDefinition(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)V
+#getTransport(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/THttpClient
@0.6.1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/http/client/HttpClient;)V
+#setConnectTimeout(I)V
+#setReadTimeout(I)V
+#setCustomHeaders(Ljava/util/Map;)V
+#setCustomHeader(Ljava/lang/String;Ljava/lang/String;)V
+#open()V
+#close()V
+#isOpen()Z
+#read([BII)I
+#write([BII)V
+#flush()V
@0.14.0
+#<init>(Lorg/apache/thrift/TConfiguration;Ljava/lang/String;)V
+#<init>(Lorg/apache/thrift/TConfiguration;Ljava/lang/String;Lorg/apache/http/client/HttpClient;)V

+###org/apache/thrift/transport/TFileTransport$TailPolicy
@0.9.2
+#values()[Lorg/apache/thrift/transport/TFileTransport$TailPolicy;
+#valueOf(Ljava/lang/String;)Lorg/apache/thrift/transport/TFileTransport$TailPolicy;

+###org/apache/thrift/transport/TEndpointTransport
@0.14.0
+#getConfiguration()Lorg/apache/thrift/TConfiguration;
+#<init>(Lorg/apache/thrift/TConfiguration;)V
+#updateKnownMessageSize(J)V
+#checkReadBytesAvailable(J)V
@0.17.0
+#getMaxFrameSize()I
+#setMaxFrameSize(I)V

+###org/apache/thrift/transport/TZlibTransport$Factory
@0.9.3
+#<init>()V
+#getTransport(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/TFileTransport$Event
@0.6.1
+#<init>([B)V
+#getBuf()[B
+#getSize()I
+#setAvailable(I)V
+#getRemaining()I
+#emit([BII)I

+###org/apache/thrift/transport/TStandardFile
@0.6.1
+#<init>(Ljava/lang/String;)V
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#close()V
+#length()J
+#seek(J)V

+###org/apache/thrift/transport/TServerSocket$ServerSocketTransportArgs
@0.9.2
+#<init>()V
+#serverSocket(Ljava/net/ServerSocket;)Lorg/apache/thrift/transport/TServerSocket$ServerSocketTransportArgs;

+###org/apache/thrift/transport/TFileTransport
@0.6.1
+#getTailPolicy()Lorg/apache/thrift/transport/TFileTransport$tailPolicy;
+#setTailPolicy(Lorg/apache/thrift/transport/TFileTransport$tailPolicy;)Lorg/apache/thrift/transport/TFileTransport$tailPolicy;
+#isOpen()Z
+#open()V
+#close()V
+#<init>(Ljava/lang/String;Z)V
+#<init>(Lorg/apache/thrift/transport/TSeekableFile;Z)V
+#readAll([BII)I
+#read([BII)I
+#getNumChunks()I
+#getCurChunk()I
+#seekToChunk(I)V
+#seekToEnd()V
+#write([BII)V
+#flush()V
+#main([Ljava/lang/String;)V
@0.9.2
+#getTailPolicy()Lorg/apache/thrift/transport/TFileTransport$TailPolicy;
+#setTailPolicy(Lorg/apache/thrift/transport/TFileTransport$TailPolicy;)Lorg/apache/thrift/transport/TFileTransport$TailPolicy;
-#getTailPolicy()Lorg/apache/thrift/transport/TFileTransport$tailPolicy;
-#setTailPolicy(Lorg/apache/thrift/transport/TFileTransport$tailPolicy;)Lorg/apache/thrift/transport/TFileTransport$tailPolicy;
@0.14.0
+#getConfiguration()Lorg/apache/thrift/TConfiguration;
+#updateKnownMessageSize(J)V
+#checkReadBytesAvailable(J)V

+###org/apache/thrift/transport/TMemoryTransport
@0.14.0
+#<init>([B)V
+#<init>(Lorg/apache/thrift/TConfiguration;[B)V
+#isOpen()Z
+#open()V
+#close()V
+#read([BII)I
+#write([BII)V
+#getOutput()Lorg/apache/thrift/TByteArrayOutputStream;

+###org/apache/thrift/transport/sasl/DataFrameHeaderReader
@0.14.0
+#<init>()V
+#payloadSize()I

+###org/apache/thrift/transport/sasl/DataFrameReader
@0.14.0
+#<init>()V

+###org/apache/thrift/transport/sasl/SaslNegotiationFrameWriter
@0.14.0
+#<init>()V
+#withOnlyPayload([BII)V

+###org/apache/thrift/transport/sasl/SaslPeer
@0.14.0
+#evaluate([B)[B
+#isAuthenticated()Z
+#isDataProtected()Z
+#wrap([BII)[B
+#wrap([B)[B
+#unwrap([BII)[B
+#unwrap([B)[B
+#dispose()V

+###org/apache/thrift/transport/sasl/TSaslNegotiationException$ErrorType
@0.14.0
+#values()[Lorg/apache/thrift/transport/sasl/TSaslNegotiationException$ErrorType;
+#valueOf(Ljava/lang/String;)Lorg/apache/thrift/transport/sasl/TSaslNegotiationException$ErrorType;

+###org/apache/thrift/transport/sasl/TSaslProcessorFactory
@0.14.0
+#getProcessor(Lorg/apache/thrift/transport/sasl/NonblockingSaslHandler;)Lorg/apache/thrift/TProcessor;

+###org/apache/thrift/transport/sasl/SaslNegotiationFrameReader
@0.14.0
+#<init>()V

+###org/apache/thrift/transport/sasl/TSaslServerDefinition
@0.14.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)V

+###org/apache/thrift/transport/sasl/FrameReader
@0.14.0
+#read(Lorg/apache/thrift/transport/TTransport;)Z
+#getHeader()Lorg/apache/thrift/transport/sasl/FrameHeaderReader;
+#getHeaderSize()I
+#getPayload()[B
+#getPayloadSize()I
+#isComplete()Z
+#clear()V

+###org/apache/thrift/transport/sasl/TBaseSaslProcessorFactory
@0.14.0
+#<init>(Lorg/apache/thrift/TProcessor;)V
+#getProcessor(Lorg/apache/thrift/transport/sasl/NonblockingSaslHandler;)Lorg/apache/thrift/TProcessor;

+###org/apache/thrift/transport/sasl/TInvalidSaslFrameException
@0.14.0
+#<init>(Ljava/lang/String;)V

+###org/apache/thrift/transport/sasl/FrameHeaderReader
@0.14.0
+#payloadSize()I
+#toBytes()[B
+#isComplete()Z
+#clear()V
+#read(Lorg/apache/thrift/transport/TTransport;)Z

+###org/apache/thrift/transport/sasl/SaslNegotiationHeaderReader
@0.14.0
+#<init>()V
+#payloadSize()I
+#getStatus()Lorg/apache/thrift/transport/sasl/NegotiationStatus;

+###org/apache/thrift/transport/sasl/DataFrameWriter
@0.14.0
+#<init>()V
+#withOnlyPayload([BII)V

+###org/apache/thrift/transport/sasl/ServerSaslPeer
@0.14.0
+#<init>(Ljavax/security/sasl/SaslServer;)V
+#evaluate([B)[B
+#isAuthenticated()Z
+#isDataProtected()Z
+#wrap([BII)[B
+#unwrap([BII)[B
+#dispose()V

+###org/apache/thrift/transport/sasl/NonblockingSaslHandler$Phase
@0.14.0
+#values()[Lorg/apache/thrift/transport/sasl/NonblockingSaslHandler$Phase;
+#valueOf(Ljava/lang/String;)Lorg/apache/thrift/transport/sasl/NonblockingSaslHandler$Phase;

+###org/apache/thrift/transport/sasl/NonblockingSaslHandler
@0.14.0
+#<init>(Ljava/nio/channels/SelectionKey;Lorg/apache/thrift/transport/TNonblockingTransport;Lorg/apache/thrift/transport/sasl/TSaslServerFactory;Lorg/apache/thrift/transport/sasl/TSaslProcessorFactory;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/server/TServerEventHandler;)V
+#getCurrentPhase()Lorg/apache/thrift/transport/sasl/NonblockingSaslHandler$Phase;
+#getNextPhase()Lorg/apache/thrift/transport/sasl/NonblockingSaslHandler$Phase;
+#getUnderlyingTransport()Lorg/apache/thrift/transport/TNonblockingTransport;
+#getSaslServer()Ljavax/security/sasl/SaslServer;
+#isCurrentPhaseDone()Z
+#runCurrentPhase()V
+#handleRead()V
+#handleWrite()V
+#stepToNextPhase()V
+#close()V

+###org/apache/thrift/transport/sasl/FrameWriter
@0.14.0
+#<init>()V
+#withHeaderAndPayload([B[B)V
+#withHeaderAndPayload([BII[BII)V
+#withOnlyPayload([B)V
+#withOnlyPayload([BII)V
+#write(Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#isComplete()Z
+#clear()V

+###org/apache/thrift/transport/sasl/NegotiationStatus
@0.14.0
+#values()[Lorg/apache/thrift/transport/sasl/NegotiationStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/thrift/transport/sasl/NegotiationStatus;
+#getValue()B
+#byValue(B)Lorg/apache/thrift/transport/sasl/NegotiationStatus;

+###org/apache/thrift/transport/sasl/FixedSizeHeaderReader
@0.14.0
+#<init>()V
+#isComplete()Z
+#clear()V
+#toBytes()[B
+#read(Lorg/apache/thrift/transport/TTransport;)Z

+###org/apache/thrift/transport/sasl/TSaslServerFactory
@0.14.0
+#<init>()V
+#addSaslMechanism(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)V
+#getSaslPeer(Ljava/lang/String;)Lorg/apache/thrift/transport/sasl/ServerSaslPeer;

+###org/apache/thrift/transport/sasl/TSaslNegotiationException
@0.14.0
+#<init>(Lorg/apache/thrift/transport/sasl/TSaslNegotiationException$ErrorType;Ljava/lang/String;)V
+#<init>(Lorg/apache/thrift/transport/sasl/TSaslNegotiationException$ErrorType;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getErrorType()Lorg/apache/thrift/transport/sasl/TSaslNegotiationException$ErrorType;
+#getSummary()Ljava/lang/String;
+#getDetails()Ljava/lang/String;

+###org/apache/thrift/transport/TSaslTransport$SaslResponse
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TSaslTransport$NegotiationStatus;[B)V
@0.14.0
+#<init>(Lorg/apache/thrift/transport/sasl/NegotiationStatus;[B)V
-#<init>(Lorg/apache/thrift/transport/TSaslTransport$NegotiationStatus;[B)V

+###org/apache/thrift/transport/TNonblockingServerTransport
@0.6.1
+#<init>()V
+#registerSelector(Ljava/nio/channels/Selector;)V
@0.14.0
+#accept()Lorg/apache/thrift/transport/TNonblockingTransport;
+#accept()Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/THttpClient$Factory
@0.6.1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/http/client/HttpClient;)V
+#getTransport(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/TSeekableFile
@0.6.1
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#close()V
+#length()J
+#seek(J)V

+###org/apache/thrift/transport/TEOFException
@0.14.0
+#<init>(Ljava/lang/String;)V

+###org/apache/thrift/transport/TByteBuffer
@0.10.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#isOpen()Z
+#open()V
+#close()V
+#read([BII)I
+#write([BII)V
+#getByteBuffer()Ljava/nio/ByteBuffer;
+#clear()Lorg/apache/thrift/transport/TByteBuffer;
+#flip()Lorg/apache/thrift/transport/TByteBuffer;
+#toByteArray()[B

+###org/apache/thrift/transport/TSocket
@0.6.1
+#<init>(Ljava/net/Socket;)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;II)V
+#setTimeout(I)V
+#getSocket()Ljava/net/Socket;
+#isOpen()Z
+#open()V
+#close()V
@0.9.3
+#<init>(Ljava/lang/String;III)V
+#setConnectTimeout(I)V
+#setSocketTimeout(I)V
@0.14.0
+#<init>(Lorg/apache/thrift/TConfiguration;Ljava/lang/String;I)V
+#<init>(Lorg/apache/thrift/TConfiguration;Ljava/lang/String;II)V
+#<init>(Lorg/apache/thrift/TConfiguration;Ljava/lang/String;III)V
-#<init>(Ljava/lang/String;II)V
-#<init>(Ljava/lang/String;III)V
@0.16.0
+#<init>(Ljava/lang/String;II)V

+###org/apache/thrift/transport/layered/TFastFramedTransport$Factory
@0.14.0
+#<init>()V
+#<init>(I)V
+#<init>(II)V
+#getTransport(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/layered/TLayeredTransport
@0.14.0
+#getConfiguration()Lorg/apache/thrift/TConfiguration;
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#updateKnownMessageSize(J)V
+#checkReadBytesAvailable(J)V
+#getInnerTransport()Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/layered/TFramedTransport
@0.14.0
+#<init>(Lorg/apache/thrift/transport/TTransport;I)V
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#open()V
+#isOpen()Z
+#close()V
+#read([BII)I
+#getBuffer()[B
+#getBufferPosition()I
+#getBytesRemainingInBuffer()I
+#consumeBuffer(I)V
+#clear()V
+#write([BII)V
+#flush()V
+#encodeFrameSize(I[B)V
+#decodeFrameSize([B)I

+###org/apache/thrift/transport/layered/TFramedTransport$Factory
@0.14.0
+#<init>()V
+#<init>(I)V
+#getTransport(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/layered/TFastFramedTransport
@0.14.0
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#<init>(Lorg/apache/thrift/transport/TTransport;I)V
+#<init>(Lorg/apache/thrift/transport/TTransport;II)V
+#close()V
+#isOpen()Z
+#open()V
+#read([BII)I
+#write([BII)V
+#consumeBuffer(I)V
+#clear()V
+#flush()V
+#getBuffer()[B
+#getBufferPosition()I
+#getBytesRemainingInBuffer()I

+###org/apache/thrift/transport/TSSLTransportFactory
@0.6.1
+#<init>()V
+#getServerSocket(I)Lorg/apache/thrift/transport/TServerSocket;
+#getServerSocket(II)Lorg/apache/thrift/transport/TServerSocket;
+#getServerSocket(IIZLjava/net/InetAddress;)Lorg/apache/thrift/transport/TServerSocket;
+#getServerSocket(IILjava/net/InetAddress;Lorg/apache/thrift/transport/TSSLTransportFactory$TSSLTransportParameters;)Lorg/apache/thrift/transport/TServerSocket;
+#getClientSocket(Ljava/lang/String;II)Lorg/apache/thrift/transport/TSocket;
+#getClientSocket(Ljava/lang/String;I)Lorg/apache/thrift/transport/TSocket;
+#getClientSocket(Ljava/lang/String;IILorg/apache/thrift/transport/TSSLTransportFactory$TSSLTransportParameters;)Lorg/apache/thrift/transport/TSocket;

+###org/apache/thrift/transport/TServerTransport$AbstractServerTransportArgs
@0.9.2
+#<init>()V
+#backlog(I)Lorg/apache/thrift/transport/TServerTransport$AbstractServerTransportArgs;
+#clientTimeout(I)Lorg/apache/thrift/transport/TServerTransport$AbstractServerTransportArgs;
+#port(I)Lorg/apache/thrift/transport/TServerTransport$AbstractServerTransportArgs;
+#bindAddr(Ljava/net/InetSocketAddress;)Lorg/apache/thrift/transport/TServerTransport$AbstractServerTransportArgs;
@0.17.0
+#maxFrameSize(I)Lorg/apache/thrift/transport/TServerTransport$AbstractServerTransportArgs;

+###org/apache/thrift/transport/TNonblockingServerSocket
@0.6.1
+#<init>(I)V
+#<init>(II)V
+#<init>(Ljava/net/InetSocketAddress;)V
+#<init>(Ljava/net/InetSocketAddress;I)V
+#listen()V
+#registerSelector(Ljava/nio/channels/Selector;)V
+#close()V
+#interrupt()V
@0.9.2
+#<init>(Lorg/apache/thrift/transport/TNonblockingServerSocket$NonblockingAbstractServerSocketArgs;)V
+#getPort()I
@0.14.0
+#accept()Lorg/apache/thrift/transport/TNonblockingSocket;
+#accept()Lorg/apache/thrift/transport/TNonblockingTransport;
+#accept()Lorg/apache/thrift/transport/TTransport;
@0.17.0
+#<init>(III)V
+#<init>(Ljava/net/InetSocketAddress;II)V

+###org/apache/thrift/transport/TNonblockingTransport
@0.6.1
+#<init>()V
+#startConnect()Z
+#finishConnect()Z
+#registerSelector(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
+#read(Ljava/nio/ByteBuffer;)I
+#write(Ljava/nio/ByteBuffer;)I
@0.14.0
+#<init>(Lorg/apache/thrift/TConfiguration;)V
-#<init>()V
-#read(Ljava/nio/ByteBuffer;)I
-#write(Ljava/nio/ByteBuffer;)I

+###org/apache/thrift/transport/TFileProcessor
@0.6.1
+#<init>(Lorg/apache/thrift/TProcessor;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TFileTransport;Lorg/apache/thrift/transport/TTransport;)V
+#<init>(Lorg/apache/thrift/TProcessor;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TFileTransport;Lorg/apache/thrift/transport/TTransport;)V
+#processChunk(II)V
+#processChunk(I)V
+#processChunk()V

+###org/apache/thrift/transport/TNonblockingSocket
@0.6.1
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;II)V
+#<init>(Ljava/nio/channels/SocketChannel;)V
+#registerSelector(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
+#setTimeout(I)V
+#getSocketChannel()Ljava/nio/channels/SocketChannel;
+#isOpen()Z
+#open()V
+#read(Ljava/nio/ByteBuffer;)I
+#read([BII)I
+#write(Ljava/nio/ByteBuffer;)I
+#write([BII)V
+#flush()V
+#close()V
+#startConnect()Z
+#finishConnect()Z
@0.14.0
+#toString()Ljava/lang/String;

+###org/apache/thrift/transport/TZlibTransport
@0.9.3
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#<init>(Lorg/apache/thrift/transport/TTransport;I)V
+#isOpen()Z
+#open()V
+#close()V

+###org/apache/thrift/transport/TFileTransport$TruncableBufferedInputStream
@0.9.2
+#trunc()V
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;I)V

+###org/apache/thrift/transport/TServerSocket
@0.6.1
+#<init>(Ljava/net/ServerSocket;)V
+#<init>(Ljava/net/ServerSocket;I)V
+#<init>(I)V
+#<init>(II)V
+#<init>(Ljava/net/InetSocketAddress;)V
+#<init>(Ljava/net/InetSocketAddress;I)V
+#listen()V
+#close()V
+#interrupt()V
+#getServerSocket()Ljava/net/ServerSocket;
@0.9.2
+#<init>(Lorg/apache/thrift/transport/TServerSocket$ServerSocketTransportArgs;)V
@0.14.0
+#accept()Lorg/apache/thrift/transport/TSocket;
+#accept()Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/TFileTransport$ChunkState
@0.9.2
+#<init>()V
+#<init>(I)V
+#skip(I)V
+#seek(J)V
+#getChunkSize()I
+#getChunkNum()I
+#getRemaining()I
+#getOffset()J

+###org/apache/thrift/transport/TTransportException
@0.6.1
+#<init>()V
+#<init>(I)V
+#<init>(ILjava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#<init>(ILjava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(ILjava/lang/String;Ljava/lang/Throwable;)V
+#getType()I

+###org/apache/thrift/transport/TSSLTransportFactory$TSSLTransportParameters
@0.6.1
+#<init>()V
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[Ljava/lang/String;Z)V
+#setKeyStore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setKeyStore(Ljava/lang/String;Ljava/lang/String;)V
+#setTrustStore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setTrustStore(Ljava/lang/String;Ljava/lang/String;)V
+#requireClientAuth(Z)V
@0.12.0
+#setKeyStore(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setKeyStore(Ljava/io/InputStream;Ljava/lang/String;)V
+#setTrustStore(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setTrustStore(Ljava/io/InputStream;Ljava/lang/String;)V

+###org/apache/thrift/transport/AutoExpandingBufferWriteTransport
@0.6.1
+#<init>(ID)V
+#close()V
+#isOpen()Z
+#open()V
+#read([BII)I
+#write([BII)V
+#getBuf()Lorg/apache/thrift/transport/AutoExpandingBuffer;
+#getPos()I
+#reset()V
@0.13.0
+#<init>(II)V
+#getLength()I
-#<init>(ID)V
-#getPos()I
@0.14.0
+#<init>(Lorg/apache/thrift/TConfiguration;II)V
-#<init>(II)V

+###org/apache/thrift/transport/AutoExpandingBuffer
@0.6.1
+#<init>(ID)V
+#resizeIfNecessary(I)V
+#array()[B
@0.13.0
-###org/apache/thrift/transport/AutoExpandingBuffer

+###org/apache/thrift/transport/TSaslClientTransport
@0.6.1
+#<init>(Ljavax/security/sasl/SaslClient;Lorg/apache/thrift/transport/TTransport;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;Lorg/apache/thrift/transport/TTransport;)V
+#flush()V
+#write([BII)V
+#read([BII)I
+#isOpen()Z
+#close()V
+#getSaslServer()Ljavax/security/sasl/SaslServer;
+#getSaslClient()Ljavax/security/sasl/SaslClient;
+#open()V
@0.7.0
+#getUnderlyingTransport()Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/TServerTransport
@0.6.1
+#<init>()V
+#listen()V
+#accept()Lorg/apache/thrift/transport/TTransport;
+#close()V
+#interrupt()V

+###org/apache/thrift/transport/AutoExpandingBufferReadTransport
@0.6.1
+#<init>(ID)V
+#fill(Lorg/apache/thrift/transport/TTransport;I)V
+#close()V
+#isOpen()Z
+#open()V
+#read([BII)I
+#write([BII)V
+#consumeBuffer(I)V
+#getBuffer()[B
+#getBufferPosition()I
+#getBytesRemainingInBuffer()I
@0.13.0
+#<init>(I)V
-#<init>(ID)V
@0.14.0
+#<init>(Lorg/apache/thrift/TConfiguration;I)V
-#<init>(I)V

+###org/apache/thrift/transport/TMemoryBuffer
@0.6.1
+#<init>(I)V
+#isOpen()Z
+#open()V
+#close()V
+#read([BII)I
+#write([BII)V
+#toString(Ljava/lang/String;)Ljava/lang/String;
+#inspect()Ljava/lang/String;
+#length()I
+#getArray()[B
@0.13.0
+#toString(Ljava/nio/charset/Charset;)Ljava/lang/String;
-#toString(Ljava/lang/String;)Ljava/lang/String;
@0.14.0
+#<init>(Lorg/apache/thrift/TConfiguration;I)V

+###org/apache/thrift/transport/TSaslServerTransport
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;Lorg/apache/thrift/transport/TTransport;)V
+#addServerDefinition(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)V
+#flush()V
+#write([BII)V
+#read([BII)I
+#isOpen()Z
+#close()V
+#getSaslServer()Ljavax/security/sasl/SaslServer;
+#getSaslClient()Ljavax/security/sasl/SaslClient;
+#open()V
@0.7.0
+#getUnderlyingTransport()Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/TTransport
@0.6.1
+#<init>()V
+#isOpen()Z
+#peek()Z
+#open()V
+#close()V
+#read([BII)I
+#readAll([BII)I
+#write([B)V
+#write([BII)V
+#flush()V
+#getBuffer()[B
+#getBufferPosition()I
+#getBytesRemainingInBuffer()I
+#consumeBuffer(I)V
@0.14.0
+#read(Ljava/nio/ByteBuffer;)I
+#write(Ljava/nio/ByteBuffer;)I
+#getConfiguration()Lorg/apache/thrift/TConfiguration;
+#updateKnownMessageSize(J)V
+#checkReadBytesAvailable(J)V

+###org/apache/thrift/transport/TSimpleFileTransport
@0.9.2
+#<init>(Ljava/lang/String;ZZZ)V
+#<init>(Ljava/lang/String;ZZ)V
+#<init>(Ljava/lang/String;)V
+#isOpen()Z
+#open()V
+#close()V
+#read([BII)I
+#write([BII)V
+#seek(J)V
+#length()J
+#getFilePointer()J
@0.14.0
+#<init>(Lorg/apache/thrift/TConfiguration;Ljava/lang/String;ZZZ)V

+###org/apache/thrift/transport/TIOStreamTransport
@0.6.1
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/InputStream;Ljava/io/OutputStream;)V
+#isOpen()Z
+#open()V
+#close()V
+#read([BII)I
+#write([BII)V
+#flush()V
@0.14.0
+#<init>(Lorg/apache/thrift/TConfiguration;Ljava/io/InputStream;)V
+#<init>(Lorg/apache/thrift/TConfiguration;Ljava/io/OutputStream;)V
+#<init>(Lorg/apache/thrift/TConfiguration;Ljava/io/InputStream;Ljava/io/OutputStream;)V

+###org/apache/thrift/transport/TTransportFactory
@0.6.1
+#<init>()V
+#getTransport(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/transport/TTransport;

+###org/apache/thrift/transport/TMemoryInputTransport
@0.6.1
+#<init>()V
+#<init>([B)V
+#<init>([BII)V
+#reset([B)V
+#reset([BII)V
+#close()V
+#isOpen()Z
+#open()V
+#read([BII)I
+#write([BII)V
+#getBuffer()[B
+#getBufferPosition()I
+#getBytesRemainingInBuffer()I
+#consumeBuffer(I)V
@0.7.0
+#clear()V
@0.14.0
+#<init>(Lorg/apache/thrift/TConfiguration;)V
+#<init>(Lorg/apache/thrift/TConfiguration;[B)V
+#<init>(Lorg/apache/thrift/TConfiguration;[BII)V

+###org/apache/thrift/TNonblockingMultiFetchClient
@0.9.1
+#<init>(IILjava/nio/ByteBuffer;Ljava/util/List;)V
+#getMaxRecvBufBytesPerServer()I
+#getFetchTimeoutSeconds()I
+#getRequestBuf()Ljava/nio/ByteBuffer;
+#getServerList()Ljava/util/List;
+#getFetchStats()Lorg/apache/thrift/TNonblockingMultiFetchStats;
+#fetch()[Ljava/nio/ByteBuffer;

+###org/apache/thrift/TSerializable
@0.10.0
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V

+###org/apache/thrift/TException
@0.6.1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/thrift/TSerializer
@0.6.1
+#<init>()V
+#<init>(Lorg/apache/thrift/protocol/TProtocolFactory;)V
+#serialize(Lorg/apache/thrift/TBase;)[B
+#toString(Lorg/apache/thrift/TBase;Ljava/lang/String;)Ljava/lang/String;
+#toString(Lorg/apache/thrift/TBase;)Ljava/lang/String;
@0.14.0
-#toString(Lorg/apache/thrift/TBase;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/thrift/TFieldIdEnum
@0.6.1
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;

+###org/apache/thrift/TByteArrayOutputStream
@0.6.1
+#<init>(I)V
+#<init>()V
+#get()[B
+#len()I
@0.9.2
+#reset()V
@0.13.0
+#toString(Ljava/nio/charset/Charset;)Ljava/lang/String;

+###org/apache/thrift/TDeserializer
@0.6.1
+#<init>()V
+#<init>(Lorg/apache/thrift/protocol/TProtocolFactory;)V
+#deserialize(Lorg/apache/thrift/TBase;[B)V
+#deserialize(Lorg/apache/thrift/TBase;Ljava/lang/String;Ljava/lang/String;)V
+#partialDeserialize(Lorg/apache/thrift/TBase;[BLorg/apache/thrift/TFieldIdEnum;[Lorg/apache/thrift/TFieldIdEnum;)V
+#partialDeserializeBool([BLorg/apache/thrift/TFieldIdEnum;[Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Boolean;
+#partialDeserializeByte([BLorg/apache/thrift/TFieldIdEnum;[Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Byte;
+#partialDeserializeDouble([BLorg/apache/thrift/TFieldIdEnum;[Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Double;
+#partialDeserializeI16([BLorg/apache/thrift/TFieldIdEnum;[Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Short;
+#partialDeserializeI32([BLorg/apache/thrift/TFieldIdEnum;[Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Integer;
+#partialDeserializeI64([BLorg/apache/thrift/TFieldIdEnum;[Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Long;
+#partialDeserializeString([BLorg/apache/thrift/TFieldIdEnum;[Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/String;
+#partialDeserializeByteArray([BLorg/apache/thrift/TFieldIdEnum;[Lorg/apache/thrift/TFieldIdEnum;)Ljava/nio/ByteBuffer;
+#partialDeserializeSetFieldIdInUnion([BLorg/apache/thrift/TFieldIdEnum;[Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Short;
+#fromString(Lorg/apache/thrift/TBase;Ljava/lang/String;)V
@0.9.2
+#deserialize(Lorg/apache/thrift/TBase;[BII)V
@0.16.0
+#<init>(Ljava/lang/Class;Ljava/util/Collection;Lorg/apache/thrift/partial/ThriftFieldValueProcessor;Lorg/apache/thrift/protocol/TProtocolFactory;)V
+#<init>(Ljava/lang/Class;Ljava/util/Collection;Lorg/apache/thrift/protocol/TProtocolFactory;)V
+#getMetadata()Lorg/apache/thrift/partial/ThriftMetadata$ThriftStruct;
+#partialDeserializeObject([B)Ljava/lang/Object;
+#partialDeserializeThriftObject(Lorg/apache/thrift/TBase;[BII)Ljava/lang/Object;
+#partialDeserializeObject([BII)Ljava/lang/Object;

+###org/apache/thrift/TBaseAsyncProcessor
@0.9.1
+#<init>(Ljava/lang/Object;Ljava/util/Map;)V
+#getProcessMapView()Ljava/util/Map;
+#process(Lorg/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer;)Z
+#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Z
@0.13.0
+#process(Lorg/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer;)V
+#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)V
-#process(Lorg/apache/thrift/server/AbstractNonblockingServer$AsyncFrameBuffer;)Z
-#process(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Z

+###org/apache/thrift/ShortStack
@0.6.1
+#<init>(I)V
+#pop()S
+#push(S)V
+#peek()S
+#clear()V
+#toString()Ljava/lang/String;
@0.13.0
-###org/apache/thrift/ShortStack

+###org/apache/thrift/transport/TFastFramedTransport$Factory
@0.6.1
+#<init>()V
+#<init>(I)V
+#<init>(II)V
+#getTransport(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/transport/TTransport;
@0.14.0
-###org/apache/thrift/transport/TFastFramedTransport$Factory

+###org/apache/thrift/transport/TFastFramedTransport
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#<init>(Lorg/apache/thrift/transport/TTransport;I)V
+#<init>(Lorg/apache/thrift/transport/TTransport;II)V
+#close()V
+#isOpen()Z
+#open()V
+#read([BII)I
+#write([BII)V
+#consumeBuffer(I)V
+#flush()V
+#getBuffer()[B
+#getBufferPosition()I
+#getBytesRemainingInBuffer()I
@0.11.0
+#clear()V
@0.14.0
-###org/apache/thrift/transport/TFastFramedTransport

+###org/apache/thrift/transport/TFileTransport$chunkState
@0.6.1
+#<init>()V
+#<init>(I)V
+#skip(I)V
+#seek(J)V
+#getChunkSize()I
+#getChunkNum()I
+#getRemaining()I
+#getOffset()J
@0.9.2
-###org/apache/thrift/transport/TFileTransport$chunkState

+###org/apache/thrift/transport/TFileTransport$tailPolicy
@0.6.1
+#values()[Lorg/apache/thrift/transport/TFileTransport$tailPolicy;
+#valueOf(Ljava/lang/String;)Lorg/apache/thrift/transport/TFileTransport$tailPolicy;
@0.9.2
-###org/apache/thrift/transport/TFileTransport$tailPolicy

+###org/apache/thrift/transport/TFileTransport$truncableBufferedInputStream
@0.6.1
+#trunc()V
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;I)V
@0.9.2
-###org/apache/thrift/transport/TFileTransport$truncableBufferedInputStream

+###org/apache/thrift/transport/TFramedTransport$Factory
@0.6.1
+#<init>()V
+#<init>(I)V
+#getTransport(Lorg/apache/thrift/transport/TTransport;)Lorg/apache/thrift/transport/TTransport;
@0.14.0
-###org/apache/thrift/transport/TFramedTransport$Factory

+###org/apache/thrift/transport/TFramedTransport
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TTransport;I)V
+#<init>(Lorg/apache/thrift/transport/TTransport;)V
+#open()V
+#isOpen()Z
+#close()V
+#read([BII)I
+#getBuffer()[B
+#getBufferPosition()I
+#getBytesRemainingInBuffer()I
+#consumeBuffer(I)V
+#write([BII)V
+#flush()V
+#encodeFrameSize(I[B)V
+#decodeFrameSize([B)I
@0.11.0
+#clear()V
@0.14.0
-###org/apache/thrift/transport/TFramedTransport

+###org/apache/thrift/transport/TSaslTransport$NegotiationStatus
@0.6.1
+#values()[Lorg/apache/thrift/transport/TSaslTransport$NegotiationStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/thrift/transport/TSaslTransport$NegotiationStatus;
+#getValue()B
+#byValue(B)Lorg/apache/thrift/transport/TSaslTransport$NegotiationStatus;
@0.14.0
-###org/apache/thrift/transport/TSaslTransport$NegotiationStatus

+###org/apache/thrift/transport/TSaslTransportException
@0.9.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@0.13.0
-###org/apache/thrift/transport/TSaslTransportException

+###org/apache/thrift/server/TNonblockingServer$AbstractNonblockingServerArgs
@0.6.1
+#<init>(Lorg/apache/thrift/transport/TNonblockingServerTransport;)V
@0.8.0
-###org/apache/thrift/server/TNonblockingServer$AbstractNonblockingServerArgs

+###org/apache/thrift/server/TNonblockingServer$FrameBuffer
@0.6.1
+#<init>(Lorg/apache/thrift/server/TNonblockingServer;Lorg/apache/thrift/transport/TNonblockingTransport;Ljava/nio/channels/SelectionKey;)V
+#read()Z
+#write()Z
+#changeSelectInterests()V
+#close()V
+#isFrameFullyRead()Z
+#responseReady()V
+#invoke()V
@0.8.0
-###org/apache/thrift/server/TNonblockingServer$FrameBuffer

+###org/apache/thrift/server/TNonblockingServer$SelectThread
@0.6.1
+#<init>(Lorg/apache/thrift/server/TNonblockingServer;Lorg/apache/thrift/transport/TNonblockingServerTransport;)V
+#isStopped()Z
+#run()V
+#wakeupSelector()V
+#requestSelectInterestChange(Lorg/apache/thrift/server/TNonblockingServer$FrameBuffer;)V
@0.8.0
-###org/apache/thrift/server/TNonblockingServer$SelectThread

+###org/apache/thrift/TUnion$TUnionStandardScheme
@0.8.0
+#<init>()V
+#read(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/TUnion;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/TUnion;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/TBase;)V
+#read(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/TBase;)V
@0.9.0
-###org/apache/thrift/TUnion$TUnionStandardScheme

+###org/apache/thrift/TUnion$TUnionTupleScheme
@0.8.0
+#<init>()V
+#read(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/TUnion;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/TUnion;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/TBase;)V
+#read(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/TBase;)V
@0.9.0
-###org/apache/thrift/TUnion$TUnionTupleScheme
