
+###io/micrometer/prometheus/PrometheusRenameFilter
@1.0.0
+#<init>()V
+#map(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter$Id;

+###io/micrometer/prometheus/PrometheusDurationNamingConvention
@1.0.0-rc.8
+#<init>()V

+###io/micrometer/prometheus/PrometheusCounter
@0.12.0.RELEASE
+#increment(D)V
+#count()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.7.10
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.4
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###io/micrometer/prometheus/PrometheusDistributionSummary
@0.12.0.RELEASE
+#record(D)V
+#count()J
+#totalAmount()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.0.0-rc.3
+#max()D
-#record(D)V
@1.0.0-rc.6
+#percentileBuckets()[Lio/micrometer/core/instrument/CountAtValue;
@1.0.0
+#histogramCounts()[Lio/micrometer/core/instrument/distribution/CountAtBucket;
-#percentileBuckets()[Lio/micrometer/core/instrument/CountAtValue;
@1.0.4
+#takeSnapshot()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
@1.4.0
+#histogramFlavor()Lio/micrometer/prometheus/HistogramFlavor;
@1.7.10
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.4
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###io/micrometer/prometheus/PrometheusNamingConvention
@0.12.0.RELEASE
+#<init>()V
+#name(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/String;
+#tagKey(Ljava/lang/String;)Ljava/lang/String;
@1.0.0-rc.8
+#<init>(Ljava/lang/String;)V

+###io/micrometer/prometheus/PrometheusConfig
@0.12.0.RELEASE
+#prefix()Ljava/lang/String;
+#descriptions()Z
+#get(Ljava/lang/String;)Ljava/lang/String;
+#timerPercentilesMax()Ljava/time/Duration;
+#timerPercentilesMin()Ljava/time/Duration;
@1.0.0-rc.2
-#get(Ljava/lang/String;)Ljava/lang/String;
-#timerPercentilesMax()Ljava/time/Duration;
-#timerPercentilesMin()Ljava/time/Duration;
@1.0.0-rc.3
+#step()Ljava/time/Duration;
@1.4.0
+#histogramFlavor()Lio/micrometer/prometheus/HistogramFlavor;
@1.5.0
+#validate()Lio/micrometer/core/instrument/config/validate/Validated;

+###io/micrometer/prometheus/PrometheusTimer
@0.12.0.RELEASE
+#record(JLjava/util/concurrent/TimeUnit;)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
@1.0.0-rc.3
+#max(Ljava/util/concurrent/TimeUnit;)D
-#record(JLjava/util/concurrent/TimeUnit;)V
@1.0.0-rc.6
+#percentileBuckets()[Lio/micrometer/core/instrument/CountAtValue;
@1.0.0
+#histogramCounts()[Lio/micrometer/core/instrument/distribution/CountAtBucket;
-#percentileBuckets()[Lio/micrometer/core/instrument/CountAtValue;
@1.0.4
+#takeSnapshot()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
@1.4.0
+#histogramFlavor()Lio/micrometer/prometheus/HistogramFlavor;

+###io/micrometer/prometheus/PrometheusMeterRegistry
@0.12.0.RELEASE
+#<init>(Lio/micrometer/prometheus/PrometheusConfig;)V
+#<init>(Lio/micrometer/prometheus/PrometheusConfig;Lio/prometheus/client/CollectorRegistry;Lio/micrometer/core/instrument/Clock;)V
+#scrape()Ljava/lang/String;
+#newCounter(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Counter;
+#newDistributionSummary(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/DistributionSummary;
+#getPrometheusRegistry()Lio/prometheus/client/CollectorRegistry;
@1.0.0-rc.3
+#newDistributionSummary(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/histogram/HistogramConfig;)Lio/micrometer/core/instrument/DistributionSummary;
-#newDistributionSummary(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/DistributionSummary;
@1.0.0
+#newDistributionSummary(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;D)Lio/micrometer/core/instrument/DistributionSummary;
-#newDistributionSummary(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/histogram/HistogramConfig;)Lio/micrometer/core/instrument/DistributionSummary;
@1.2.0
+#scrape(Ljava/io/Writer;)V
@1.6.0
+#throwExceptionOnRegistrationFailure()Lio/micrometer/prometheus/PrometheusMeterRegistry;
@1.7.0
+#scrape(Ljava/lang/String;)Ljava/lang/String;
+#scrape(Ljava/io/Writer;Ljava/lang/String;)V
+#scrape(Ljava/lang/String;Ljava/util/Set;)Ljava/lang/String;
+#scrape(Ljava/io/Writer;Ljava/lang/String;Ljava/util/Set;)V
@1.9.0
+#<init>(Lio/micrometer/prometheus/PrometheusConfig;Lio/prometheus/client/CollectorRegistry;Lio/micrometer/core/instrument/Clock;Lio/prometheus/client/exemplars/ExemplarSampler;)V

+###io/micrometer/prometheus/HistogramFlavor
@1.4.0
+#values()[Lio/micrometer/prometheus/HistogramFlavor;
+#valueOf(Ljava/lang/String;)Lio/micrometer/prometheus/HistogramFlavor;

+###io/micrometer/prometheus/internal/CustomCollectorChild
@0.12.0.RELEASE
+#collect()Ljava/util/stream/Stream;
@1.0.0-rc.3
-###io/micrometer/prometheus/internal/CustomCollectorChild

+###io/micrometer/prometheus/internal/CustomPrometheusCollector
@0.12.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/NamingConvention;Lio/prometheus/client/Collector$Type;)V
+#child(Ljava/lang/Iterable;Ljava/lang/Iterable;)Lio/micrometer/prometheus/internal/CustomPrometheusCollector$Child;
+#collect()Ljava/util/List;
@1.0.0-rc.3
-###io/micrometer/prometheus/internal/CustomPrometheusCollector

+###io/micrometer/prometheus/internal/CustomPrometheusLongTaskTimer$Child
@0.12.0.RELEASE
+#collect()Ljava/util/stream/Stream;
+#start()J
+#stop(J)J
+#duration(JLjava/util/concurrent/TimeUnit;)D
+#duration(Ljava/util/concurrent/TimeUnit;)D
+#activeTasks()I
@1.0.0-rc.3
-###io/micrometer/prometheus/internal/CustomPrometheusLongTaskTimer$Child

+###io/micrometer/prometheus/internal/CustomPrometheusLongTaskTimer
@0.12.0.RELEASE
+#<init>(Lio/micrometer/prometheus/internal/PrometheusCollectorId;Lio/micrometer/core/instrument/Clock;)V
+#child(Ljava/lang/Iterable;)Lio/micrometer/prometheus/internal/CustomPrometheusLongTaskTimer$Child;
+#collect()Ljava/util/List;
@1.0.0-rc.3
-###io/micrometer/prometheus/internal/CustomPrometheusLongTaskTimer

+###io/micrometer/prometheus/internal/CustomPrometheusSummary$Child
@0.12.0.RELEASE
+#collect()Ljava/util/stream/Stream;
+#observe(D)V
+#count()J
+#sum()D
@1.0.0-rc.3
-###io/micrometer/prometheus/internal/CustomPrometheusSummary$Child

+###io/micrometer/prometheus/internal/CustomPrometheusSummary
@0.12.0.RELEASE
+#<init>(Lio/micrometer/prometheus/internal/PrometheusCollectorId;)V
+#child(Ljava/lang/Iterable;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/prometheus/internal/CustomPrometheusSummary$Child;
+#collect()Ljava/util/List;
@1.0.0-rc.3
-###io/micrometer/prometheus/internal/CustomPrometheusSummary

+###io/micrometer/prometheus/internal/PrometheusCollectorId
@0.12.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getTagKeys()Ljava/util/List;
+#getDescription()Ljava/lang/String;
@1.0.0-rc.3
-###io/micrometer/prometheus/internal/PrometheusCollectorId

+###io/micrometer/prometheus/PrometheusGauge
@0.12.0.RELEASE
+#value()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.0.0-rc.3
-###io/micrometer/prometheus/PrometheusGauge

+###io/micrometer/prometheus/PrometheusLongTaskTimer
@0.12.0.RELEASE
+#start()J
+#stop(J)J
+#duration(JLjava/util/concurrent/TimeUnit;)D
+#duration(Ljava/util/concurrent/TimeUnit;)D
+#activeTasks()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.0.0-rc.3
-###io/micrometer/prometheus/PrometheusLongTaskTimer

+###io/micrometer/prometheus/internal/CustomPrometheusFunctionTimer$Child
@1.0.0-rc.2
+#collect()Ljava/util/stream/Stream;
@1.0.0-rc.3
-###io/micrometer/prometheus/internal/CustomPrometheusFunctionTimer$Child

+###io/micrometer/prometheus/internal/CustomPrometheusFunctionTimer
@1.0.0-rc.2
+#<init>(Lio/micrometer/prometheus/internal/PrometheusCollectorId;)V
+#child(Ljava/lang/Iterable;Lio/micrometer/core/instrument/FunctionTimer;)Lio/micrometer/prometheus/internal/CustomPrometheusFunctionTimer$Child;
+#collect()Ljava/util/List;
@1.0.0-rc.3
-###io/micrometer/prometheus/internal/CustomPrometheusFunctionTimer
