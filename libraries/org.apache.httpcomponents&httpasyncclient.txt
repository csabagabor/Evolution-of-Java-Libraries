
+###org/apache/http/impl/nio/client/AbstractHttpAsyncClient
@4.0-alpha1
+#getParams()Lorg/apache/http/params/HttpParams;
+#getConnectionManager()Lorg/apache/http/nio/conn/ClientConnectionManager;
+#getConnectionReuseStrategy()Lorg/apache/http/ConnectionReuseStrategy;
+#setReuseStrategy(Lorg/apache/http/ConnectionReuseStrategy;)V
+#getConnectionKeepAliveStrategy()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;
+#setKeepAliveStrategy(Lorg/apache/http/conn/ConnectionKeepAliveStrategy;)V
+#getRedirectStrategy()Lorg/apache/http/client/RedirectStrategy;
+#setRedirectStrategy(Lorg/apache/http/client/RedirectStrategy;)V
+#getRoutePlanner()Lorg/apache/http/conn/routing/HttpRoutePlanner;
+#setRoutePlanner(Lorg/apache/http/conn/routing/HttpRoutePlanner;)V
+#getResponseInterceptorCount()I
+#getResponseInterceptor(I)Lorg/apache/http/HttpResponseInterceptor;
+#getRequestInterceptor(I)Lorg/apache/http/HttpRequestInterceptor;
+#getRequestInterceptorCount()I
+#addResponseInterceptor(Lorg/apache/http/HttpResponseInterceptor;)V
+#addResponseInterceptor(Lorg/apache/http/HttpResponseInterceptor;I)V
+#clearResponseInterceptors()V
+#removeResponseInterceptorByClass(Ljava/lang/Class;)V
+#addRequestInterceptor(Lorg/apache/http/HttpRequestInterceptor;)V
+#addRequestInterceptor(Lorg/apache/http/HttpRequestInterceptor;I)V
+#clearRequestInterceptors()V
+#removeRequestInterceptorByClass(Ljava/lang/Class;)V
+#getStatus()Lorg/apache/http/nio/reactor/IOReactorStatus;
+#start()V
+#shutdown()V
+#execute(Lorg/apache/http/nio/client/HttpAsyncRequestProducer;Lorg/apache/http/nio/client/HttpAsyncResponseConsumer;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/nio/client/HttpAsyncRequestProducer;Lorg/apache/http/nio/client/HttpAsyncResponseConsumer;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
@4.0-alpha2
+#getAuthSchemes()Lorg/apache/http/auth/AuthSchemeRegistry;
+#setAuthSchemes(Lorg/apache/http/auth/AuthSchemeRegistry;)V
+#getCookieSpecs()Lorg/apache/http/cookie/CookieSpecRegistry;
+#setCookieSpecs(Lorg/apache/http/cookie/CookieSpecRegistry;)V
+#getTargetAuthenticationHandler()Lorg/apache/http/client/AuthenticationHandler;
+#setTargetAuthenticationHandler(Lorg/apache/http/client/AuthenticationHandler;)V
+#getProxyAuthenticationHandler()Lorg/apache/http/client/AuthenticationHandler;
+#setProxyAuthenticationHandler(Lorg/apache/http/client/AuthenticationHandler;)V
+#getCookieStore()Lorg/apache/http/client/CookieStore;
+#setCookieStore(Lorg/apache/http/client/CookieStore;)V
+#getCredentialsProvider()Lorg/apache/http/client/CredentialsProvider;
+#setCredentialsProvider(Lorg/apache/http/client/CredentialsProvider;)V
@4.0-alpha3
+#setParams(Lorg/apache/http/params/HttpParams;)V
+#getConnectionManager()Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;
+#getUserTokenHandler()Lorg/apache/http/client/UserTokenHandler;
+#setUserTokenHandler(Lorg/apache/http/client/UserTokenHandler;)V
+#execute(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#getConnectionManager()Lorg/apache/http/nio/conn/ClientConnectionManager;
-#execute(Lorg/apache/http/nio/client/HttpAsyncRequestProducer;Lorg/apache/http/nio/client/HttpAsyncResponseConsumer;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#execute(Lorg/apache/http/nio/client/HttpAsyncRequestProducer;Lorg/apache/http/nio/client/HttpAsyncResponseConsumer;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
@4.0-beta1
+#getTargetAuthenticationStrategy()Lorg/apache/http/client/AuthenticationStrategy;
+#setTargetAuthenticationStrategy(Lorg/apache/http/client/AuthenticationStrategy;)V
+#getProxyAuthenticationStrategy()Lorg/apache/http/client/AuthenticationStrategy;
+#setProxyAuthenticationStrategy(Lorg/apache/http/client/AuthenticationStrategy;)V
-#getTargetAuthenticationHandler()Lorg/apache/http/client/AuthenticationHandler;
-#setTargetAuthenticationHandler(Lorg/apache/http/client/AuthenticationHandler;)V
-#getProxyAuthenticationHandler()Lorg/apache/http/client/AuthenticationHandler;
-#setProxyAuthenticationHandler(Lorg/apache/http/client/AuthenticationHandler;)V

+###org/apache/http/impl/nio/client/DefaultHttpAsyncClient
@4.0-alpha1
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V
+#<init>(Lorg/apache/http/params/HttpParams;)V
+#<init>()V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/ClientConnectionManager;)V
+#setDefaultHttpParams(Lorg/apache/http/params/HttpParams;)V
@4.0-alpha2
+#<init>(Lorg/apache/http/nio/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V
+#<init>(Lorg/apache/http/nio/conn/ClientConnectionManager;)V
-#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V
-#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/ClientConnectionManager;)V
@4.0-alpha3
+#<init>(Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;)V
+#<init>(Lorg/apache/http/impl/nio/reactor/IOReactorConfig;)V
-#<init>(Lorg/apache/http/nio/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V
-#<init>(Lorg/apache/http/params/HttpParams;)V
-#<init>(Lorg/apache/http/nio/conn/ClientConnectionManager;)V

+###org/apache/http/impl/nio/conn/DefaultHttpAsyncRoutePlanner
@4.0-alpha1
+#<init>(Lorg/apache/http/nio/conn/scheme/SchemeRegistry;)V
+#determineRoute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;
@4.0-alpha3
+#<init>(Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;)V
-#<init>(Lorg/apache/http/nio/conn/scheme/SchemeRegistry;)V

+###org/apache/http/impl/nio/conn/DefaultAsyncClientConnection
@4.0-alpha3
+#<init>(Ljava/lang/String;Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/nio/util/ByteBufferAllocator;Lorg/apache/http/params/HttpParams;)V
+#upgrade(Lorg/apache/http/nio/reactor/IOSession;)V
+#getIOSession()Lorg/apache/http/nio/reactor/IOSession;
+#toString()Ljava/lang/String;
@4.0-beta1
-###org/apache/http/impl/nio/conn/DefaultAsyncClientConnection

+###org/apache/http/impl/nio/conn/AsyncSchemeRegistryFactory
@4.0-alpha3
+#<init>()V
+#createDefault()Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;

+###org/apache/http/impl/nio/conn/PoolingAsyncClientConnectionManager
@4.0-alpha3
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;JLjava/util/concurrent/TimeUnit;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;)V
+#getSchemeRegistry()Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
+#execute(Lorg/apache/http/nio/reactor/IOEventDispatch;)V
+#getStatus()Lorg/apache/http/nio/reactor/IOReactorStatus;
+#shutdown(J)V
+#shutdown()V
+#leaseConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#releaseConnection(Lorg/apache/http/nio/conn/ManagedAsyncClientConnection;JLjava/util/concurrent/TimeUnit;)V
+#getTotalStats()Lorg/apache/http/pool/PoolStats;
+#getStats(Lorg/apache/http/conn/routing/HttpRoute;)Lorg/apache/http/pool/PoolStats;
+#setTotalMax(I)V[deprecated]
+#setMaxTotal(I)V
+#setDefaultMaxPerHost(I)V[deprecated]
+#setDefaultMaxPerRoute(I)V
+#setMaxPerHost(Lorg/apache/http/conn/routing/HttpRoute;I)V[deprecated]
+#setMaxPerRoute(Lorg/apache/http/conn/routing/HttpRoute;I)V
+#getMaxTotal()I
+#getDefaultMaxPerRoute()I
+#getMaxPerRoute(Lorg/apache/http/conn/routing/HttpRoute;)I
+#closeIdleConnections(JLjava/util/concurrent/TimeUnit;)V
+#closeExpiredConnections()V
+#getStats(Ljava/lang/Object;)Lorg/apache/http/pool/PoolStats;
+#getMaxPerRoute(Ljava/lang/Object;)I
+#setMaxPerRoute(Ljava/lang/Object;I)V
@4.0-beta1
-###org/apache/http/impl/nio/conn/PoolingAsyncClientConnectionManager

+###org/apache/http/nio/client/methods/HttpAsyncTrace
@4.0-alpha2
+#<init>(Ljava/net/URI;)V
+#<init>(Ljava/lang/String;)V
@4.0-alpha3
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;
@4.0-beta1
-###org/apache/http/nio/client/methods/HttpAsyncTrace

+###org/apache/http/nio/client/methods/HttpAsyncHead
@4.0-alpha2
+#<init>(Ljava/net/URI;)V
+#<init>(Ljava/lang/String;)V
@4.0-alpha3
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;
@4.0-beta1
-###org/apache/http/nio/client/methods/HttpAsyncHead

+###org/apache/http/nio/client/methods/HttpAsyncPost
@4.0-alpha2
+#<init>(Ljava/net/URI;[BLjava/lang/String;)V
+#<init>(Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/net/URI;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[BLjava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
@4.0-alpha3
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;
@4.0-beta1
-###org/apache/http/nio/client/methods/HttpAsyncPost

+###org/apache/http/nio/client/methods/AsyncByteConsumer
@4.0-alpha2
+#<init>(I)V
+#<init>()V

+###org/apache/http/nio/client/methods/ZeroCopyPost
@4.0-alpha2
+#<init>(Ljava/net/URI;Ljava/io/File;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;)V
@4.0-alpha3
+#<init>(Ljava/net/URI;Ljava/io/File;Lorg/apache/http/entity/ContentType;)V
+#<init>(Ljava/lang/String;Ljava/io/File;Lorg/apache/http/entity/ContentType;)V
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;
-#<init>(Ljava/net/URI;Ljava/io/File;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;)V
@4.0-beta1
-#close()V
-#resetRequest()V
-#isRepeatable()Z
-#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
-#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
-#getTarget()Lorg/apache/http/HttpHost;
-#generateRequest()Lorg/apache/http/HttpRequest;
@4.0
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#failed(Ljava/lang/Exception;)V
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;

+###org/apache/http/nio/client/methods/ZeroCopyConsumer
@4.0-alpha2
+#<init>(Ljava/io/File;)V

+###org/apache/http/nio/client/methods/HttpAsyncGet
@4.0-alpha2
+#<init>(Ljava/net/URI;)V
+#<init>(Ljava/lang/String;)V
@4.0-alpha3
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;
@4.0-beta1
-###org/apache/http/nio/client/methods/HttpAsyncGet

+###org/apache/http/nio/client/methods/HttpAsyncPut
@4.0-alpha2
+#<init>(Ljava/net/URI;[BLjava/lang/String;)V
+#<init>(Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/net/URI;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[BLjava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
@4.0-alpha3
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;
@4.0-beta1
-###org/apache/http/nio/client/methods/HttpAsyncPut

+###org/apache/http/nio/client/methods/AsyncCharConsumer
@4.0-alpha2
+#<init>(I)V
+#<init>()V
+#responseReceived(Lorg/apache/http/HttpResponse;)V
@4.0-beta1
-#responseReceived(Lorg/apache/http/HttpResponse;)V

+###org/apache/http/nio/client/methods/ZeroCopyPut
@4.0-alpha2
+#<init>(Ljava/net/URI;Ljava/io/File;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;)V
@4.0-alpha3
+#<init>(Ljava/net/URI;Ljava/io/File;Lorg/apache/http/entity/ContentType;)V
+#<init>(Ljava/lang/String;Ljava/io/File;Lorg/apache/http/entity/ContentType;)V
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;
-#<init>(Ljava/net/URI;Ljava/io/File;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;)V
@4.0-beta1
-#close()V
-#resetRequest()V
-#isRepeatable()Z
-#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
-#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
-#getTarget()Lorg/apache/http/HttpHost;
-#generateRequest()Lorg/apache/http/HttpRequest;
@4.0
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#failed(Ljava/lang/Exception;)V
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;

+###org/apache/http/nio/client/methods/HttpAsyncDelete
@4.0-alpha2
+#<init>(Ljava/net/URI;)V
+#<init>(Ljava/lang/String;)V
@4.0-alpha3
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;
@4.0-beta1
-###org/apache/http/nio/client/methods/HttpAsyncDelete

+###org/apache/http/nio/client/methods/HttpAsyncOptions
@4.0-alpha2
+#<init>(Ljava/net/URI;)V
+#<init>(Ljava/lang/String;)V
@4.0-alpha3
+#close()V
+#resetRequest()V
+#isRepeatable()Z
+#requestCompleted(Lorg/apache/http/protocol/HttpContext;)V
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;
@4.0-beta1
-###org/apache/http/nio/client/methods/HttpAsyncOptions

+###org/apache/http/nio/client/methods/HttpAsyncMethods
@4.0-alpha3
+#<init>()V
+#create(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#create(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createGet(Ljava/net/URI;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createGet(Ljava/lang/String;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createHead(Ljava/net/URI;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createHead(Ljava/lang/String;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createDelete(Ljava/net/URI;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createDelete(Ljava/lang/String;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createOptions(Ljava/net/URI;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createOptions(Ljava/lang/String;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createTrace(Ljava/net/URI;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createTrace(Ljava/lang/String;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createPost(Ljava/net/URI;Ljava/lang/String;Lorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createPost(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createPost(Ljava/net/URI;[BLorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createPost(Ljava/lang/String;[BLorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createPut(Ljava/net/URI;Ljava/lang/String;Lorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createPut(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createPut(Ljava/net/URI;[BLorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createPut(Ljava/lang/String;[BLorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createZeroCopyPost(Ljava/net/URI;Ljava/io/File;Lorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createZeroCopyPost(Ljava/lang/String;Ljava/io/File;Lorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createZeroCopyPut(Ljava/net/URI;Ljava/io/File;Lorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createZeroCopyPut(Ljava/lang/String;Ljava/io/File;Lorg/apache/http/entity/ContentType;)Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
+#createConsumer()Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
+#createZeroCopyConsumer(Ljava/io/File;)Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;

+###org/apache/http/nio/client/HttpAsyncClient
@4.0-alpha1
+#start()V
+#shutdown()V
+#getStatus()Lorg/apache/http/nio/reactor/IOReactorStatus;
+#getParams()Lorg/apache/http/params/HttpParams;
+#execute(Lorg/apache/http/nio/client/HttpAsyncRequestProducer;Lorg/apache/http/nio/client/HttpAsyncResponseConsumer;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/nio/client/HttpAsyncRequestProducer;Lorg/apache/http/nio/client/HttpAsyncResponseConsumer;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
@4.0-alpha2
+#getConnectionManager()Lorg/apache/http/nio/conn/ClientConnectionManager;
@4.0-alpha3
+#getConnectionManager()Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;
+#execute(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#getConnectionManager()Lorg/apache/http/nio/conn/ClientConnectionManager;
-#execute(Lorg/apache/http/nio/client/HttpAsyncRequestProducer;Lorg/apache/http/nio/client/HttpAsyncResponseConsumer;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#execute(Lorg/apache/http/nio/client/HttpAsyncRequestProducer;Lorg/apache/http/nio/client/HttpAsyncResponseConsumer;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
@4.0-beta4
*#start()V[deprecated]
*#shutdown()V[deprecated]
*#getStatus()Lorg/apache/http/nio/reactor/IOReactorStatus;[deprecated]
*#getConnectionManager()Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;[deprecated]
*#getParams()Lorg/apache/http/params/HttpParams;[deprecated]
@4.0
-#start()V[deprecated]
-#shutdown()V[deprecated]
-#getStatus()Lorg/apache/http/nio/reactor/IOReactorStatus;[deprecated]
-#getConnectionManager()Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;[deprecated]
-#getParams()Lorg/apache/http/params/HttpParams;[deprecated]

+###org/apache/http/nio/conn/ClientAsyncConnectionManager
@4.0-alpha3
+#getSchemeRegistry()Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
+#leaseConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#releaseConnection(Lorg/apache/http/nio/conn/ManagedAsyncClientConnection;JLjava/util/concurrent/TimeUnit;)V
@4.0-beta1
+#releaseConnection(Lorg/apache/http/nio/conn/ManagedClientAsyncConnection;JLjava/util/concurrent/TimeUnit;)V
-#releaseConnection(Lorg/apache/http/nio/conn/ManagedAsyncClientConnection;JLjava/util/concurrent/TimeUnit;)V

+###org/apache/http/nio/conn/ssl/SSLLayeringStrategy
@4.0-alpha1
+#getDefaultStrategy()Lorg/apache/http/nio/conn/ssl/SSLLayeringStrategy;
+#<init>(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
+#<init>(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/ssl/TrustStrategy;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
+#<init>(Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;)V
+#<init>(Ljava/security/KeyStore;Ljava/lang/String;)V
+#<init>(Ljava/security/KeyStore;)V
+#<init>(Lorg/apache/http/conn/ssl/TrustStrategy;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
+#<init>(Lorg/apache/http/conn/ssl/TrustStrategy;)V
+#<init>(Ljavax/net/ssl/SSLContext;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
+#<init>(Ljavax/net/ssl/SSLContext;)V
+#isSecure()Z
+#layer(Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/impl/nio/reactor/SSLIOSession;
+#layer(Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/IOSession;
@4.0-alpha3
+#layer(Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/ssl/SSLIOSession;
-#layer(Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/impl/nio/reactor/SSLIOSession;
@4.0-beta4
+#getSystemDefaultStrategy()Lorg/apache/http/nio/conn/ssl/SSLLayeringStrategy;

+###org/apache/http/nio/conn/ManagedAsyncClientConnection
@4.0-alpha3
+#getState()Ljava/lang/Object;
+#setState(Ljava/lang/Object;)V
+#markReusable()V
+#unmarkReusable()V
+#isMarkedReusable()Z
+#open(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V
+#tunnelTarget(Lorg/apache/http/params/HttpParams;)V
+#tunnelProxy(Lorg/apache/http/HttpHost;Lorg/apache/http/params/HttpParams;)V
+#layerProtocol(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V
+#setIdleDuration(JLjava/util/concurrent/TimeUnit;)V
@4.0-beta1
-###org/apache/http/nio/conn/ManagedAsyncClientConnection

+###org/apache/http/nio/conn/OperatedAsyncClientConnection
@4.0-alpha3
+#upgrade(Lorg/apache/http/nio/reactor/IOSession;)V
+#getIOSession()Lorg/apache/http/nio/reactor/IOSession;
@4.0-beta1
-###org/apache/http/nio/conn/OperatedAsyncClientConnection

+###org/apache/http/nio/conn/scheme/LayeringStrategy
@4.0-alpha1
+#isSecure()Z
+#layer(Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/IOSession;

+###org/apache/http/nio/conn/scheme/AsyncSchemeRegistry
@4.0-alpha3
+#<init>()V
+#getScheme(Ljava/lang/String;)Lorg/apache/http/nio/conn/scheme/AsyncScheme;
+#getScheme(Lorg/apache/http/HttpHost;)Lorg/apache/http/nio/conn/scheme/AsyncScheme;
+#get(Ljava/lang/String;)Lorg/apache/http/nio/conn/scheme/AsyncScheme;
+#register(Lorg/apache/http/nio/conn/scheme/AsyncScheme;)Lorg/apache/http/nio/conn/scheme/AsyncScheme;
+#unregister(Ljava/lang/String;)Lorg/apache/http/nio/conn/scheme/AsyncScheme;
+#getSchemeNames()Ljava/util/List;
+#setItems(Ljava/util/Map;)V

+###org/apache/http/nio/conn/scheme/AsyncScheme
@4.0-alpha3
+#<init>(Ljava/lang/String;ILorg/apache/http/nio/conn/scheme/LayeringStrategy;)V
+#getDefaultPort()I
+#getLayeringStrategy()Lorg/apache/http/nio/conn/scheme/LayeringStrategy;
+#getName()Ljava/lang/String;
+#resolvePort(I)I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/http/impl/nio/pool/RouteResolver
@4.0-alpha1
+#resolveRemoteAddress(Ljava/lang/Object;)Ljava/net/SocketAddress;
+#resolveLocalAddress(Ljava/lang/Object;)Ljava/net/SocketAddress;
@4.0-alpha3
-###org/apache/http/impl/nio/pool/RouteResolver

+###org/apache/http/impl/nio/pool/PoolEntryFactory
@4.0-alpha1
+#createEntry(Ljava/lang/Object;Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/impl/nio/pool/PoolEntry;
@4.0-alpha3
-###org/apache/http/impl/nio/pool/PoolEntryFactory

+###org/apache/http/impl/nio/pool/PoolEntryCallback
@4.0-alpha1
+#completed(Lorg/apache/http/impl/nio/pool/PoolEntry;)V
+#failed(Ljava/lang/Exception;)V
+#cancelled()V
@4.0-alpha3
-###org/apache/http/impl/nio/pool/PoolEntryCallback

+###org/apache/http/impl/nio/pool/PoolEntry
@4.0-alpha1
+#<init>(Ljava/lang/Object;Lorg/apache/http/nio/reactor/IOSession;JLjava/util/concurrent/TimeUnit;)V
+#getCreated()J
+#getValidUnit()J
+#getUpdated()J
+#getExpiry()J
+#updateExpiry(JLjava/util/concurrent/TimeUnit;)V
+#isExpired(J)Z
+#toString()Ljava/lang/String;
@4.0-alpha3
-###org/apache/http/impl/nio/pool/PoolEntry

+###org/apache/http/impl/nio/pool/SessionPool
@4.0-alpha1
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/impl/nio/pool/PoolEntryFactory;Lorg/apache/http/impl/nio/pool/RouteResolver;II)V
+#shutdown()V
+#lease(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/impl/nio/pool/PoolEntryCallback;)V
+#release(Lorg/apache/http/impl/nio/pool/PoolEntry;Z)V
+#setTotalMax(I)V
+#setDefaultMaxPerHost(I)V
+#setMaxPerHost(Ljava/lang/Object;I)V
+#getTotalStats()Lorg/apache/http/nio/conn/PoolStats;
+#getStats(Ljava/lang/Object;)Lorg/apache/http/nio/conn/PoolStats;
+#closeIdle(JLjava/util/concurrent/TimeUnit;)V
+#closeExpired()V
+#toString()Ljava/lang/String;
@4.0-alpha2
+#isShutdown()Z
+#shutdown(J)V
-#shutdown()V
@4.0-alpha3
-###org/apache/http/impl/nio/pool/SessionPool

+###org/apache/http/impl/nio/conn/DefaultClientConnection
@4.0-alpha1
+#<init>(Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/nio/util/ByteBufferAllocator;Lorg/apache/http/params/HttpParams;)V
+#upgrade(Lorg/apache/http/nio/reactor/IOSession;)V
+#getSSLIOSession()Lorg/apache/http/impl/nio/reactor/SSLIOSession;
@4.0-alpha3
-###org/apache/http/impl/nio/conn/DefaultClientConnection

+###org/apache/http/impl/nio/conn/SchemeRegistryFactory
@4.0-alpha1
+#<init>()V
+#createDefault()Lorg/apache/http/nio/conn/scheme/SchemeRegistry;
@4.0-alpha3
-###org/apache/http/impl/nio/conn/SchemeRegistryFactory

+###org/apache/http/impl/nio/conn/Wire
@4.0-alpha2
+#<init>(Lorg/apache/commons/logging/Log;)V
+#isEnabled()Z
+#output([BII)V
+#input([BII)V
+#output([B)V
+#input([B)V
+#output(I)V
+#input(I)V
+#output(Ljava/nio/ByteBuffer;)V
+#input(Ljava/nio/ByteBuffer;)V
@4.0-alpha3
-###org/apache/http/impl/nio/conn/Wire

+###org/apache/http/impl/nio/conn/LoggingIOSession
@4.0-alpha2
+#<init>(Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/commons/logging/Log;Lorg/apache/commons/logging/Log;Ljava/lang/String;)V
+#channel()Ljava/nio/channels/ByteChannel;
+#getLocalAddress()Ljava/net/SocketAddress;
+#getRemoteAddress()Ljava/net/SocketAddress;
+#getEventMask()I
+#setEventMask(I)V
+#setEvent(I)V
+#clearEvent(I)V
+#close()V
+#getStatus()I
+#isClosed()Z
+#shutdown()V
+#getSocketTimeout()I
+#setSocketTimeout(I)V
+#setBufferStatus(Lorg/apache/http/nio/reactor/SessionBufferStatus;)V
+#hasBufferedInput()Z
+#hasBufferedOutput()Z
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/String;)Ljava/lang/Object;
@4.0-alpha3
-###org/apache/http/impl/nio/conn/LoggingIOSession

+###org/apache/http/impl/nio/conn/PoolingClientConnectionManager
@4.0-alpha1
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/scheme/SchemeRegistry;JLjava/util/concurrent/TimeUnit;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/scheme/SchemeRegistry;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;)V
+#getSchemeRegistry()Lorg/apache/http/nio/conn/scheme/SchemeRegistry;
+#leaseConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#releaseConnection(Lorg/apache/http/nio/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V
+#getTotalStats()Lorg/apache/http/nio/conn/PoolStats;
+#getStats(Lorg/apache/http/conn/routing/HttpRoute;)Lorg/apache/http/nio/conn/PoolStats;
+#setTotalMax(I)V
+#setDefaultMaxPerHost(I)V
+#setMaxPerHost(Lorg/apache/http/conn/routing/HttpRoute;I)V
+#closeIdleConnections(JLjava/util/concurrent/TimeUnit;)V
+#closeExpiredConnections()V
+#shutdown()V
@4.0-alpha2
+#execute(Lorg/apache/http/nio/reactor/IOEventDispatch;)V
+#getStatus()Lorg/apache/http/nio/reactor/IOReactorStatus;
+#shutdown(J)V
@4.0-alpha3
-###org/apache/http/impl/nio/conn/PoolingClientConnectionManager

+###org/apache/http/nio/concurrent/BasicFuture
@4.0-alpha1
+#<init>(Lorg/apache/http/nio/concurrent/FutureCallback;)V
+#isCancelled()Z
+#isDone()Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#completed(Ljava/lang/Object;)Z
+#failed(Ljava/lang/Exception;)Z
+#cancel(Z)Z
@4.0-alpha3
-###org/apache/http/nio/concurrent/BasicFuture

+###org/apache/http/nio/concurrent/FutureCallback
@4.0-alpha1
+#completed(Ljava/lang/Object;)V
+#failed(Ljava/lang/Exception;)V
+#cancelled()V
@4.0-alpha3
-###org/apache/http/nio/concurrent/FutureCallback

+###org/apache/http/nio/client/HttpAsyncResponseConsumer
@4.0-alpha1
+#responseReceived(Lorg/apache/http/HttpResponse;)V
+#consumeContent(Lorg/apache/http/nio/ContentDecoder;Lorg/apache/http/nio/IOControl;)V
+#responseCompleted()V
+#failed(Ljava/lang/Exception;)V
+#cancel()V
+#getResult()Ljava/lang/Object;
@4.0-alpha2
+#getException()Ljava/lang/Exception;
@4.0-alpha3
-###org/apache/http/nio/client/HttpAsyncResponseConsumer

+###org/apache/http/nio/client/methods/AbstractHttpAsyncResponseConsumer
@4.0-alpha2
+#<init>()V
+#responseReceived(Lorg/apache/http/HttpResponse;)V
+#consumeContent(Lorg/apache/http/nio/ContentDecoder;Lorg/apache/http/nio/IOControl;)V
+#responseCompleted()V
+#cancel()V
+#failed(Ljava/lang/Exception;)V
+#getException()Ljava/lang/Exception;
+#getResult()Ljava/lang/Object;
@4.0-alpha3
-###org/apache/http/nio/client/methods/AbstractHttpAsyncResponseConsumer

+###org/apache/http/nio/client/HttpAsyncExchangeHandler
@4.0-alpha1
+#isDone()Z
+#keepAlive(Lorg/apache/http/HttpResponse;)Z
@4.0-alpha3
-###org/apache/http/nio/client/HttpAsyncExchangeHandler

+###org/apache/http/nio/client/HttpAsyncRequestProducer
@4.0-alpha1
+#getTarget()Lorg/apache/http/HttpHost;
+#generateRequest()Lorg/apache/http/HttpRequest;
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#isRepeatable()Z
+#resetRequest()V
@4.0-alpha3
-###org/apache/http/nio/client/HttpAsyncRequestProducer

+###org/apache/http/nio/conn/ManagedClientConnection
@4.0-alpha1
+#getRoute()Lorg/apache/http/conn/routing/HttpRoute;
+#getState()Ljava/lang/Object;
+#setState(Ljava/lang/Object;)V
+#markReusable()V
+#markNonReusable()V
+#isReusable()Z
+#open(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V
+#tunnelTarget(Lorg/apache/http/params/HttpParams;)V
+#tunnelProxy(Lorg/apache/http/HttpHost;Lorg/apache/http/params/HttpParams;)V
+#layerProtocol(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V
+#setIdleDuration(JLjava/util/concurrent/TimeUnit;)V
@4.0-alpha2
-#getRoute()Lorg/apache/http/conn/routing/HttpRoute;
@4.0-alpha3
-###org/apache/http/nio/conn/ManagedClientConnection

+###org/apache/http/nio/conn/PoolStats
@4.0-alpha1
+#<init>(IIII)V
+#getLeased()I
+#getPending()I
+#getAvailable()I
+#getMax()I
+#toString()Ljava/lang/String;
@4.0-alpha3
-###org/apache/http/nio/conn/PoolStats

+###org/apache/http/nio/conn/OperatedClientConnection
@4.0-alpha1
+#upgrade(Lorg/apache/http/nio/reactor/IOSession;)V
+#getSSLIOSession()Lorg/apache/http/impl/nio/reactor/SSLIOSession;
@4.0-alpha3
-###org/apache/http/nio/conn/OperatedClientConnection

+###org/apache/http/nio/conn/ClientConnectionManager
@4.0-alpha1
+#getSchemeRegistry()Lorg/apache/http/nio/conn/scheme/SchemeRegistry;
+#leaseConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/nio/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#releaseConnection(Lorg/apache/http/nio/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V
+#shutdown()V
@4.0-alpha2
-#shutdown()V
@4.0-alpha3
-###org/apache/http/nio/conn/ClientConnectionManager

+###org/apache/http/nio/conn/scheme/SchemeRegistry
@4.0-alpha1
+#<init>()V
+#getScheme(Ljava/lang/String;)Lorg/apache/http/nio/conn/scheme/Scheme;
+#getScheme(Lorg/apache/http/HttpHost;)Lorg/apache/http/nio/conn/scheme/Scheme;
+#get(Ljava/lang/String;)Lorg/apache/http/nio/conn/scheme/Scheme;
+#register(Lorg/apache/http/nio/conn/scheme/Scheme;)Lorg/apache/http/nio/conn/scheme/Scheme;
+#unregister(Ljava/lang/String;)Lorg/apache/http/nio/conn/scheme/Scheme;
+#getSchemeNames()Ljava/util/List;
+#setItems(Ljava/util/Map;)V
@4.0-alpha3
-###org/apache/http/nio/conn/scheme/SchemeRegistry

+###org/apache/http/nio/conn/scheme/Scheme
@4.0-alpha1
+#<init>(Ljava/lang/String;ILorg/apache/http/nio/conn/scheme/LayeringStrategy;)V
+#getDefaultPort()I
+#getLayeringStrategy()Lorg/apache/http/nio/conn/scheme/LayeringStrategy;
+#getName()Ljava/lang/String;
+#resolvePort(I)I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.0-alpha3
-###org/apache/http/nio/conn/scheme/Scheme

+###org/apache/http/impl/nio/conn/DefaultClientAsyncConnection
@4.0-beta1
+#<init>(Ljava/lang/String;Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/nio/util/ByteBufferAllocator;Lorg/apache/http/params/HttpParams;)V
+#upgrade(Lorg/apache/http/nio/reactor/IOSession;)V
+#getIOSession()Lorg/apache/http/nio/reactor/IOSession;
+#getId()Ljava/lang/String;
+#submitRequest(Lorg/apache/http/HttpRequest;)V
+#toString()Ljava/lang/String;
@4.0-beta2
-#submitRequest(Lorg/apache/http/HttpRequest;)V

+###org/apache/http/impl/nio/conn/PoolingClientAsyncConnectionManager
@4.0-beta1
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;JLjava/util/concurrent/TimeUnit;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;)V
+#getSchemeRegistry()Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
+#execute(Lorg/apache/http/nio/reactor/IOEventDispatch;)V
+#getStatus()Lorg/apache/http/nio/reactor/IOReactorStatus;
+#shutdown(J)V
+#shutdown()V
+#leaseConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#releaseConnection(Lorg/apache/http/nio/conn/ManagedClientAsyncConnection;JLjava/util/concurrent/TimeUnit;)V
+#getTotalStats()Lorg/apache/http/pool/PoolStats;
+#getStats(Lorg/apache/http/conn/routing/HttpRoute;)Lorg/apache/http/pool/PoolStats;
+#setMaxTotal(I)V
+#setDefaultMaxPerRoute(I)V
+#setMaxPerRoute(Lorg/apache/http/conn/routing/HttpRoute;I)V
+#getMaxTotal()I
+#getDefaultMaxPerRoute()I
+#getMaxPerRoute(Lorg/apache/http/conn/routing/HttpRoute;)I
+#closeIdleConnections(JLjava/util/concurrent/TimeUnit;)V
+#closeExpiredConnections()V
+#getStats(Ljava/lang/Object;)Lorg/apache/http/pool/PoolStats;
+#getMaxPerRoute(Ljava/lang/Object;)I
+#setMaxPerRoute(Ljava/lang/Object;I)V

+###org/apache/http/impl/nio/conn/DefaultClientAsyncConnectionFactory
@4.0-beta1
+#<init>()V
+#create(Ljava/lang/String;Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/nio/conn/ClientAsyncConnection;
@4.0-beta4
+#<init>(Lorg/apache/http/nio/NHttpMessageParserFactory;Lorg/apache/http/nio/util/ByteBufferAllocator;)V
*#create(Ljava/lang/String;Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/nio/conn/ClientAsyncConnection;[deprecated]
+#create(Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/config/ConnectionConfig;)Lorg/apache/http/nio/conn/ManagedNHttpClientConnection;
+#create(Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/config/ConnectionConfig;)Lorg/apache/http/nio/NHttpConnection;

+###org/apache/http/nio/conn/ManagedClientAsyncConnection
@4.0-beta1
+#getState()Ljava/lang/Object;
+#setState(Ljava/lang/Object;)V
+#markReusable()V
+#unmarkReusable()V
+#isMarkedReusable()Z
+#open(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V
+#tunnelTarget(Lorg/apache/http/params/HttpParams;)V
+#tunnelProxy(Lorg/apache/http/HttpHost;Lorg/apache/http/params/HttpParams;)V
+#layerProtocol(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V
+#setIdleDuration(JLjava/util/concurrent/TimeUnit;)V

+###org/apache/http/nio/conn/ClientAsyncConnection
@4.0-beta1
+#upgrade(Lorg/apache/http/nio/reactor/IOSession;)V
+#getIOSession()Lorg/apache/http/nio/reactor/IOSession;

+###org/apache/http/nio/conn/ClientAsyncConnectionFactory
@4.0-beta1
+#create(Ljava/lang/String;Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/nio/conn/ClientAsyncConnection;

+###org/apache/http/nio/client/util/HttpAsyncClientUtils
@4.0-beta1
+#closeQuietly(Lorg/apache/http/nio/client/HttpAsyncClient;)V
@4.0-beta4
+#closeQuietly(Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;)V
*#closeQuietly(Lorg/apache/http/nio/client/HttpAsyncClient;)V[deprecated]
@4.0
-#closeQuietly(Lorg/apache/http/nio/client/HttpAsyncClient;)V[deprecated]

+###org/apache/http/nio/conn/NoopIOSessionStrategy
@4.0
+#<init>()V
+#upgrade(Lorg/apache/http/HttpHost;Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/IOSession;
+#isLayeringRequired()Z

+###org/apache/http/nio/conn/ManagedNHttpClientConnection
@4.0-beta4
+#getId()Ljava/lang/String;
+#bind(Lorg/apache/http/nio/reactor/IOSession;)V
+#getIOSession()Lorg/apache/http/nio/reactor/IOSession;
+#getSSLSession()Ljavax/net/ssl/SSLSession;

+###org/apache/http/nio/conn/ssl/SSLIOSessionStrategy
@4.0
+#getDefaultStrategy()Lorg/apache/http/nio/conn/ssl/SSLIOSessionStrategy;
+#getSystemDefaultStrategy()Lorg/apache/http/nio/conn/ssl/SSLIOSessionStrategy;
+#<init>(Ljavax/net/ssl/SSLContext;[Ljava/lang/String;[Ljava/lang/String;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
+#<init>(Ljavax/net/ssl/SSLContext;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
+#<init>(Ljavax/net/ssl/SSLContext;)V
+#upgrade(Lorg/apache/http/HttpHost;Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/ssl/SSLIOSession;
+#isLayeringRequired()Z
+#upgrade(Lorg/apache/http/HttpHost;Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/IOSession;
@4.1-beta1
+#getDefaultHostnameVerifier()Ljavax/net/ssl/HostnameVerifier;
*#<init>(Ljavax/net/ssl/SSLContext;[Ljava/lang/String;[Ljava/lang/String;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V[deprecated]
*#<init>(Ljavax/net/ssl/SSLContext;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V[deprecated]
+#<init>(Ljavax/net/ssl/SSLContext;[Ljava/lang/String;[Ljava/lang/String;Ljavax/net/ssl/HostnameVerifier;)V
+#<init>(Ljavax/net/ssl/SSLContext;Ljavax/net/ssl/HostnameVerifier;)V

+###org/apache/http/nio/conn/SchemeIOSessionStrategy
@4.0
+#isLayeringRequired()Z
+#upgrade(Lorg/apache/http/HttpHost;Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/IOSession;

+###org/apache/http/nio/conn/NHttpClientConnectionManager
@4.0-beta4
+#requestConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#releaseConnection(Lorg/apache/http/nio/NHttpClientConnection;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
+#initialize(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V
+#upgrade(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V
+#routeComplete(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V
+#isRouteComplete(Lorg/apache/http/nio/NHttpClientConnection;)Z
+#closeIdleConnections(JLjava/util/concurrent/TimeUnit;)V
+#closeExpiredConnections()V
+#execute(Lorg/apache/http/nio/reactor/IOEventDispatch;)V
+#shutdown()V
@4.0
+#requestConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JJLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#startRoute(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V
-#requestConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#initialize(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V

+###org/apache/http/nio/conn/NHttpConnectionFactory
@4.0-beta4
+#create(Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/config/ConnectionConfig;)Lorg/apache/http/nio/NHttpConnection;

+###org/apache/http/impl/nio/conn/ManagedNHttpClientConnectionFactory
@4.0-beta4
+#<init>(Lorg/apache/http/nio/NHttpMessageWriterFactory;Lorg/apache/http/nio/NHttpMessageParserFactory;Lorg/apache/http/nio/util/ByteBufferAllocator;)V
+#<init>()V
+#create(Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/config/ConnectionConfig;)Lorg/apache/http/nio/conn/ManagedNHttpClientConnection;
+#create(Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/config/ConnectionConfig;)Lorg/apache/http/nio/NHttpConnection;

+###org/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager
@4.0-beta4
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/config/Registry;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/NHttpConnectionFactory;Lorg/apache/http/conn/DnsResolver;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/NHttpConnectionFactory;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/NHttpConnectionFactory;Lorg/apache/http/config/Registry;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/NHttpConnectionFactory;Lorg/apache/http/config/Registry;Lorg/apache/http/conn/DnsResolver;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/NHttpConnectionFactory;Lorg/apache/http/config/Registry;Lorg/apache/http/conn/SchemePortResolver;Lorg/apache/http/conn/DnsResolver;JLjava/util/concurrent/TimeUnit;)V
+#execute(Lorg/apache/http/nio/reactor/IOEventDispatch;)V
+#shutdown(J)V
+#shutdown()V
+#requestConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#releaseConnection(Lorg/apache/http/nio/NHttpClientConnection;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
+#initialize(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V
+#upgrade(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V
+#routeComplete(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V
+#isRouteComplete(Lorg/apache/http/nio/NHttpClientConnection;)Z
+#closeIdleConnections(JLjava/util/concurrent/TimeUnit;)V
+#closeExpiredConnections()V
+#getMaxTotal()I
+#setMaxTotal(I)V
+#getDefaultMaxPerRoute()I
+#setDefaultMaxPerRoute(I)V
+#getMaxPerRoute(Lorg/apache/http/conn/routing/HttpRoute;)I
+#setMaxPerRoute(Lorg/apache/http/conn/routing/HttpRoute;I)V
+#getTotalStats()Lorg/apache/http/pool/PoolStats;
+#getStats(Lorg/apache/http/conn/routing/HttpRoute;)Lorg/apache/http/pool/PoolStats;
+#getDefaultSocketConfig()Lorg/apache/http/config/SocketConfig;
+#setDefaultSocketConfig(Lorg/apache/http/config/SocketConfig;)V
+#getDefaultConnectionConfig()Lorg/apache/http/config/ConnectionConfig;
+#setDefaultConnectionConfig(Lorg/apache/http/config/ConnectionConfig;)V
+#getSocketConfig(Lorg/apache/http/HttpHost;)Lorg/apache/http/config/SocketConfig;
+#setSocketConfig(Lorg/apache/http/HttpHost;Lorg/apache/http/config/SocketConfig;)V
+#getConnectionConfig(Lorg/apache/http/HttpHost;)Lorg/apache/http/config/ConnectionConfig;
+#setConnectionConfig(Lorg/apache/http/HttpHost;Lorg/apache/http/config/ConnectionConfig;)V
+#getStats(Ljava/lang/Object;)Lorg/apache/http/pool/PoolStats;
+#getMaxPerRoute(Ljava/lang/Object;)I
+#setMaxPerRoute(Ljava/lang/Object;I)V
@4.0
+#requestConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JJLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#startRoute(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V
-#requestConnection(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
-#initialize(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V
-#getDefaultSocketConfig()Lorg/apache/http/config/SocketConfig;
-#setDefaultSocketConfig(Lorg/apache/http/config/SocketConfig;)V
-#getSocketConfig(Lorg/apache/http/HttpHost;)Lorg/apache/http/config/SocketConfig;
-#setSocketConfig(Lorg/apache/http/HttpHost;Lorg/apache/http/config/SocketConfig;)V
@4.1-beta1
+#getRoutes()Ljava/util/Set;
@4.1.3
+#validatePendingRequests()V
@4.1.4
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/NHttpConnectionFactory;Lorg/apache/http/nio/pool/SocketAddressResolver;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/NHttpConnectionFactory;Lorg/apache/http/config/Registry;Lorg/apache/http/nio/pool/SocketAddressResolver;)V
+#<init>(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/NHttpConnectionFactory;Lorg/apache/http/config/Registry;Lorg/apache/http/nio/pool/SocketAddressResolver;JLjava/util/concurrent/TimeUnit;)V

+###org/apache/http/impl/nio/client/HttpAsyncClients
@4.0-beta4
+#custom()Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#createDefault()Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
+#createSystem()Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
+#createMinimal()Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
+#createMinimal(Lorg/apache/http/nio/reactor/ConnectingIOReactor;)Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
+#createMinimal(Lorg/apache/http/nio/conn/NHttpClientConnectionManager;)Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
@4.1-beta1
+#createMinimal(Lorg/apache/http/nio/conn/NHttpClientConnectionManager;Z)Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
+#createPipelining()Lorg/apache/http/impl/nio/client/CloseableHttpPipeliningClient;
+#createPipelining(Lorg/apache/http/nio/reactor/ConnectingIOReactor;)Lorg/apache/http/impl/nio/client/CloseableHttpPipeliningClient;
+#createPipelining(Lorg/apache/http/nio/conn/NHttpClientConnectionManager;)Lorg/apache/http/impl/nio/client/CloseableHttpPipeliningClient;
+#createPipelining(Lorg/apache/http/nio/conn/NHttpClientConnectionManager;Z)Lorg/apache/http/impl/nio/client/CloseableHttpPipeliningClient;

+###org/apache/http/impl/nio/client/CloseableHttpAsyncClient
@4.0-beta4
+#<init>()V
+#start()V
+#execute(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
@4.0
+#isRunning()Z

+###org/apache/http/impl/nio/client/HttpAsyncClientBuilder
@4.0-beta4
+#create()Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setConnectionManager(Lorg/apache/http/nio/conn/NHttpClientConnectionManager;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setSchemePortResolver(Lorg/apache/http/conn/SchemePortResolver;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setMaxConnTotal(I)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setMaxConnPerRoute(I)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setConnectionReuseStrategy(Lorg/apache/http/ConnectionReuseStrategy;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setKeepAliveStrategy(Lorg/apache/http/conn/ConnectionKeepAliveStrategy;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setUserTokenHandler(Lorg/apache/http/client/UserTokenHandler;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setTargetAuthenticationStrategy(Lorg/apache/http/client/AuthenticationStrategy;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setProxyAuthenticationStrategy(Lorg/apache/http/client/AuthenticationStrategy;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setHttpProcessor(Lorg/apache/http/protocol/HttpProcessor;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#addInterceptorFirst(Lorg/apache/http/HttpResponseInterceptor;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#addInterceptorLast(Lorg/apache/http/HttpResponseInterceptor;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#addInterceptorFirst(Lorg/apache/http/HttpRequestInterceptor;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#addInterceptorLast(Lorg/apache/http/HttpRequestInterceptor;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setRoutePlanner(Lorg/apache/http/conn/routing/HttpRoutePlanner;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setRedirectStrategy(Lorg/apache/http/client/RedirectStrategy;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setDefaultCookieStore(Lorg/apache/http/client/CookieStore;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setDefaultCredentialsProvider(Lorg/apache/http/client/CredentialsProvider;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setDefaultAuthSchemeRegistry(Lorg/apache/http/config/Lookup;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setDefaultCookieSpecRegistry(Lorg/apache/http/config/Lookup;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setUserAgent(Ljava/lang/String;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setProxy(Lorg/apache/http/HttpHost;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setSSLIOSessionFactory(Lorg/apache/http/nio/conn/SchemeIOSessionFactory;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setSSLContext(Ljavax/net/ssl/SSLContext;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setDefaultHeaders(Ljava/util/Collection;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setDefaultSocketConfig(Lorg/apache/http/config/SocketConfig;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setDefaultConnectionConfig(Lorg/apache/http/config/ConnectionConfig;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setDefaultRequestConfig(Lorg/apache/http/client/config/RequestConfig;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#disableConnectionState()Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#useSystemProperties()Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#build()Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
@4.0
+#setSSLStrategy(Lorg/apache/http/nio/conn/SchemeIOSessionStrategy;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setHostnameVerifier(Lorg/apache/http/conn/ssl/X509HostnameVerifier;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setDefaultIOReactorConfig(Lorg/apache/http/impl/nio/reactor/IOReactorConfig;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#disableCookieManagement()Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#disableAuthCaching()Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
-#setSSLIOSessionFactory(Lorg/apache/http/nio/conn/SchemeIOSessionFactory;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
-#setDefaultSocketConfig(Lorg/apache/http/config/SocketConfig;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
@4.1-beta1
+#setPublicSuffixMatcher(Lorg/apache/http/conn/util/PublicSuffixMatcher;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setConnectionManagerShared(Z)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
*#setHostnameVerifier(Lorg/apache/http/conn/ssl/X509HostnameVerifier;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;[deprecated]
+#setSSLHostnameVerifier(Ljavax/net/ssl/HostnameVerifier;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
+#setEventHandler(Lorg/apache/http/nio/NHttpClientEventHandler;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
@4.1.5
+#setConnectionTimeToLive(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;

+###org/apache/http/impl/nio/client/DefaultAsyncUserTokenHandler
@4.0
+#<init>()V
+#getUserToken(Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;

+###org/apache/http/impl/nio/client/BasicHttpAsyncResponseConsumer
@4.0-alpha1
+#<init>()V
+#responseReceived(Lorg/apache/http/HttpResponse;)V
+#consumeContent(Lorg/apache/http/nio/ContentDecoder;Lorg/apache/http/nio/IOControl;)V
+#responseCompleted()V
+#cancel()V
+#failed(Ljava/lang/Exception;)V
+#getException()Ljava/lang/Exception;
+#setEx(Ljava/lang/Exception;)V
+#getResult()Lorg/apache/http/HttpResponse;
+#getResult()Ljava/lang/Object;
@4.0-alpha2
-###org/apache/http/impl/nio/client/BasicHttpAsyncResponseConsumer

+###org/apache/http/impl/nio/client/BasicHttpAsyncRequestProducer
@4.0-alpha1
+#<init>(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;)V
+#generateRequest()Lorg/apache/http/HttpRequest;
+#getTarget()Lorg/apache/http/HttpHost;
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#isRepeatable()Z
+#resetRequest()V
@4.0-alpha2
-###org/apache/http/impl/nio/client/BasicHttpAsyncRequestProducer

+###org/apache/http/nio/conn/ssl/SSLIOSessionFactory
@4.0-beta4
+#getDefaultStrategy()Lorg/apache/http/nio/conn/ssl/SSLIOSessionFactory;
+#getSystemDefaultStrategy()Lorg/apache/http/nio/conn/ssl/SSLIOSessionFactory;
+#<init>(Ljavax/net/ssl/SSLContext;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
+#<init>(Ljavax/net/ssl/SSLContext;)V
+#create(Lorg/apache/http/HttpHost;Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/ssl/SSLIOSession;
+#isLayering()Z
+#create(Lorg/apache/http/HttpHost;Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/IOSession;
@4.0
-###org/apache/http/nio/conn/ssl/SSLIOSessionFactory

+###org/apache/http/nio/conn/SchemeIOSessionFactory
@4.0-beta4
+#create(Lorg/apache/http/HttpHost;Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/IOSession;
+#isLayering()Z
@4.0
-###org/apache/http/nio/conn/SchemeIOSessionFactory

+###org/apache/http/nio/conn/PlainIOSessionFactory
@4.0-beta4
+#<init>()V
+#create(Lorg/apache/http/HttpHost;Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/IOSession;
+#isLayering()Z
@4.0
-###org/apache/http/nio/conn/PlainIOSessionFactory

+###org/apache/http/impl/nio/client/MinimalClientExchangeHandlerImpl
@4.0-beta4
+#<init>(Lorg/apache/commons/logging/Log;Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/client/protocol/HttpClientContext;Lorg/apache/http/concurrent/BasicFuture;Lorg/apache/http/nio/conn/NHttpClientConnectionManager;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;)V
+#close()V
+#start()V
+#isDone()Z
+#generateRequest()Lorg/apache/http/HttpRequest;
+#produceContent(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
+#requestCompleted()V
+#responseReceived(Lorg/apache/http/HttpResponse;)V
+#consumeContent(Lorg/apache/http/nio/ContentDecoder;Lorg/apache/http/nio/IOControl;)V
+#responseCompleted()V
+#inputTerminated()V
+#failed(Ljava/lang/Exception;)V
+#cancel()Z
@4.0
-###org/apache/http/impl/nio/client/MinimalClientExchangeHandlerImpl

+###org/apache/http/impl/nio/client/CloseableHttpPipeliningClient
@4.1-beta1
+#<init>()V
+#execute(Lorg/apache/http/HttpHost;Ljava/util/List;Ljava/util/List;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Ljava/util/List;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Ljava/util/List;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;

+###org/apache/http/nio/client/HttpPipeliningClient
@4.1-beta1
+#execute(Lorg/apache/http/HttpHost;Ljava/util/List;Ljava/util/List;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Ljava/util/List;Ljava/util/List;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Ljava/util/List;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
+#execute(Lorg/apache/http/HttpHost;Ljava/util/List;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
