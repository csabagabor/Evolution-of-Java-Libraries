
+###io/jsonwebtoken/Clock
@0.10.0
+#now()Ljava/util/Date;

+###io/jsonwebtoken/IncorrectClaimException
@0.10.0
+#<init>(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;)V
+#<init>(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/MalformedJwtException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/UnsupportedJwtException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/Claims
@0.10.0
+#getIssuer()Ljava/lang/String;
+#setIssuer(Ljava/lang/String;)Lio/jsonwebtoken/Claims;
+#getSubject()Ljava/lang/String;
+#setSubject(Ljava/lang/String;)Lio/jsonwebtoken/Claims;
+#getAudience()Ljava/lang/String;
+#setAudience(Ljava/lang/String;)Lio/jsonwebtoken/Claims;
+#getExpiration()Ljava/util/Date;
+#setExpiration(Ljava/util/Date;)Lio/jsonwebtoken/Claims;
+#getNotBefore()Ljava/util/Date;
+#setNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/Claims;
+#getIssuedAt()Ljava/util/Date;
+#setIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/Claims;
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)Lio/jsonwebtoken/Claims;
+#get(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###io/jsonwebtoken/Jwts
@0.10.0
+#header()Lio/jsonwebtoken/Header;
+#header(Ljava/util/Map;)Lio/jsonwebtoken/Header;
+#jwsHeader()Lio/jsonwebtoken/JwsHeader;
+#jwsHeader(Ljava/util/Map;)Lio/jsonwebtoken/JwsHeader;
+#claims()Lio/jsonwebtoken/Claims;
+#claims(Ljava/util/Map;)Lio/jsonwebtoken/Claims;
+#parser()Lio/jsonwebtoken/JwtParser;
+#builder()Lio/jsonwebtoken/JwtBuilder;
@0.11.0
*#parser()Lio/jsonwebtoken/JwtParser;[deprecated]
+#parserBuilder()Lio/jsonwebtoken/JwtParserBuilder;

+###io/jsonwebtoken/SignatureException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/SignatureAlgorithm
@0.10.0
+#values()[Lio/jsonwebtoken/SignatureAlgorithm;
+#valueOf(Ljava/lang/String;)Lio/jsonwebtoken/SignatureAlgorithm;
+#getValue()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#getFamilyName()Ljava/lang/String;
+#getJcaName()Ljava/lang/String;
+#isJdkStandard()Z
+#isHmac()Z
+#isRsa()Z
+#isEllipticCurve()Z
+#getMinKeyLength()I
+#assertValidSigningKey(Ljava/security/Key;)V
+#assertValidVerificationKey(Ljava/security/Key;)V
+#forSigningKey(Ljava/security/Key;)Lio/jsonwebtoken/SignatureAlgorithm;
+#forName(Ljava/lang/String;)Lio/jsonwebtoken/SignatureAlgorithm;

+###io/jsonwebtoken/Jws
@0.10.0
+#getSignature()Ljava/lang/String;

+###io/jsonwebtoken/PrematureJwtException
@0.10.0
+#<init>(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;)V
+#<init>(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/security/Keys
@0.10.0
+#hmacShaKeyFor([B)Ljavax/crypto/SecretKey;
+#secretKeyFor(Lio/jsonwebtoken/SignatureAlgorithm;)Ljavax/crypto/SecretKey;
+#keyPairFor(Lio/jsonwebtoken/SignatureAlgorithm;)Ljava/security/KeyPair;

+###io/jsonwebtoken/security/SignatureException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/security/SecurityException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/security/InvalidKeyException
@0.10.0
+#<init>(Ljava/lang/String;)V

+###io/jsonwebtoken/security/WeakKeyException
@0.10.0
+#<init>(Ljava/lang/String;)V

+###io/jsonwebtoken/security/KeyException
@0.10.0
+#<init>(Ljava/lang/String;)V

+###io/jsonwebtoken/Jwt
@0.10.0
+#getHeader()Lio/jsonwebtoken/Header;
+#getBody()Ljava/lang/Object;

+###io/jsonwebtoken/SigningKeyResolver
@0.10.0
+#resolveSigningKey(Lio/jsonwebtoken/JwsHeader;Lio/jsonwebtoken/Claims;)Ljava/security/Key;
+#resolveSigningKey(Lio/jsonwebtoken/JwsHeader;Ljava/lang/String;)Ljava/security/Key;

+###io/jsonwebtoken/ExpiredJwtException
@0.10.0
+#<init>(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;)V
+#<init>(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/JwtHandlerAdapter
@0.10.0
+#<init>()V
+#onPlaintextJwt(Lio/jsonwebtoken/Jwt;)Ljava/lang/Object;
+#onClaimsJwt(Lio/jsonwebtoken/Jwt;)Ljava/lang/Object;
+#onPlaintextJws(Lio/jsonwebtoken/Jws;)Ljava/lang/Object;
+#onClaimsJws(Lio/jsonwebtoken/Jws;)Ljava/lang/Object;

+###io/jsonwebtoken/JwtParser
@0.10.0
+#requireId(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;
+#requireSubject(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;
+#requireAudience(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;
+#requireIssuer(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;
+#requireIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;
+#requireExpiration(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;
+#requireNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;
+#require(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtParser;
+#setClock(Lio/jsonwebtoken/Clock;)Lio/jsonwebtoken/JwtParser;
+#setAllowedClockSkewSeconds(J)Lio/jsonwebtoken/JwtParser;
+#setSigningKey([B)Lio/jsonwebtoken/JwtParser;
+#setSigningKey(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;
+#setSigningKey(Ljava/security/Key;)Lio/jsonwebtoken/JwtParser;
+#setSigningKeyResolver(Lio/jsonwebtoken/SigningKeyResolver;)Lio/jsonwebtoken/JwtParser;
+#setCompressionCodecResolver(Lio/jsonwebtoken/CompressionCodecResolver;)Lio/jsonwebtoken/JwtParser;
+#base64UrlDecodeWith(Lio/jsonwebtoken/io/Decoder;)Lio/jsonwebtoken/JwtParser;
+#deserializeJsonWith(Lio/jsonwebtoken/io/Deserializer;)Lio/jsonwebtoken/JwtParser;
+#isSigned(Ljava/lang/String;)Z
+#parse(Ljava/lang/String;)Lio/jsonwebtoken/Jwt;
+#parse(Ljava/lang/String;Lio/jsonwebtoken/JwtHandler;)Ljava/lang/Object;
+#parsePlaintextJwt(Ljava/lang/String;)Lio/jsonwebtoken/Jwt;
+#parseClaimsJwt(Ljava/lang/String;)Lio/jsonwebtoken/Jwt;
+#parsePlaintextJws(Ljava/lang/String;)Lio/jsonwebtoken/Jws;
+#parseClaimsJws(Ljava/lang/String;)Lio/jsonwebtoken/Jws;
@0.11.0
*#requireId(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#requireSubject(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#requireAudience(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#requireIssuer(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#requireIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#requireExpiration(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#requireNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#require(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#setClock(Lio/jsonwebtoken/Clock;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#setAllowedClockSkewSeconds(J)Lio/jsonwebtoken/JwtParser;[deprecated]
*#setSigningKey([B)Lio/jsonwebtoken/JwtParser;[deprecated]
*#setSigningKey(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#setSigningKey(Ljava/security/Key;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#setSigningKeyResolver(Lio/jsonwebtoken/SigningKeyResolver;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#setCompressionCodecResolver(Lio/jsonwebtoken/CompressionCodecResolver;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#base64UrlDecodeWith(Lio/jsonwebtoken/io/Decoder;)Lio/jsonwebtoken/JwtParser;[deprecated]
*#deserializeJsonWith(Lio/jsonwebtoken/io/Deserializer;)Lio/jsonwebtoken/JwtParser;[deprecated]

+###io/jsonwebtoken/io/SerializationException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/io/Decoder
@0.10.0
+#decode(Ljava/lang/Object;)Ljava/lang/Object;

+###io/jsonwebtoken/io/IOException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/io/Encoders
@0.10.0

+###io/jsonwebtoken/io/SerialException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/io/DecodingException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/io/Encoder
@0.10.0
+#encode(Ljava/lang/Object;)Ljava/lang/Object;

+###io/jsonwebtoken/io/EncodingException
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/io/Deserializer
@0.10.0
+#deserialize([B)Ljava/lang/Object;

+###io/jsonwebtoken/io/DeserializationException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/io/CodecException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/io/Serializer
@0.10.0
+#serialize(Ljava/lang/Object;)[B

+###io/jsonwebtoken/io/Decoders
@0.10.0

+###io/jsonwebtoken/JwtHandler
@0.10.0
+#onPlaintextJwt(Lio/jsonwebtoken/Jwt;)Ljava/lang/Object;
+#onClaimsJwt(Lio/jsonwebtoken/Jwt;)Ljava/lang/Object;
+#onPlaintextJws(Lio/jsonwebtoken/Jws;)Ljava/lang/Object;
+#onClaimsJws(Lio/jsonwebtoken/Jws;)Ljava/lang/Object;

+###io/jsonwebtoken/CompressionCodec
@0.10.0
+#getAlgorithmName()Ljava/lang/String;
+#compress([B)[B
+#decompress([B)[B

+###io/jsonwebtoken/ClaimJwtException
@0.10.0
+#getClaims()Lio/jsonwebtoken/Claims;
+#getHeader()Lio/jsonwebtoken/Header;

+###io/jsonwebtoken/MissingClaimException
@0.10.0
+#<init>(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;)V
+#<init>(Lio/jsonwebtoken/Header;Lio/jsonwebtoken/Claims;Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/InvalidClaimException
@0.10.0
+#getClaimName()Ljava/lang/String;
+#setClaimName(Ljava/lang/String;)V
+#getClaimValue()Ljava/lang/Object;
+#setClaimValue(Ljava/lang/Object;)V

+###io/jsonwebtoken/RequiredTypeException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/CompressionCodecResolver
@0.10.0
+#resolveCompressionCodec(Lio/jsonwebtoken/Header;)Lio/jsonwebtoken/CompressionCodec;

+###io/jsonwebtoken/CompressionCodecs
@0.10.0

+###io/jsonwebtoken/ClaimsMutator
@0.10.0
+#setIssuer(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;
+#setSubject(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;
+#setAudience(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;
+#setExpiration(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;
+#setNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;
+#setIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;
+#setId(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;

+###io/jsonwebtoken/JwtBuilder
@0.10.0
+#setHeader(Lio/jsonwebtoken/Header;)Lio/jsonwebtoken/JwtBuilder;
+#setHeader(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;
+#setHeaderParams(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;
+#setHeaderParam(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtBuilder;
+#setPayload(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#setClaims(Lio/jsonwebtoken/Claims;)Lio/jsonwebtoken/JwtBuilder;
+#setClaims(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;
+#addClaims(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;
+#setIssuer(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#setSubject(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#setAudience(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#setExpiration(Ljava/util/Date;)Lio/jsonwebtoken/JwtBuilder;
+#setNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/JwtBuilder;
+#setIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/JwtBuilder;
+#setId(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#claim(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtBuilder;
+#signWith(Ljava/security/Key;)Lio/jsonwebtoken/JwtBuilder;
+#signWith(Lio/jsonwebtoken/SignatureAlgorithm;[B)Lio/jsonwebtoken/JwtBuilder;[deprecated]
+#signWith(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;[deprecated]
+#signWith(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)Lio/jsonwebtoken/JwtBuilder;[deprecated]
+#signWith(Ljava/security/Key;Lio/jsonwebtoken/SignatureAlgorithm;)Lio/jsonwebtoken/JwtBuilder;
+#compressWith(Lio/jsonwebtoken/CompressionCodec;)Lio/jsonwebtoken/JwtBuilder;
+#base64UrlEncodeWith(Lio/jsonwebtoken/io/Encoder;)Lio/jsonwebtoken/JwtBuilder;
+#serializeToJsonWith(Lio/jsonwebtoken/io/Serializer;)Lio/jsonwebtoken/JwtBuilder;
+#compact()Ljava/lang/String;

+###io/jsonwebtoken/Header
@0.10.0
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)Lio/jsonwebtoken/Header;
+#getContentType()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)Lio/jsonwebtoken/Header;
+#getCompressionAlgorithm()Ljava/lang/String;
+#setCompressionAlgorithm(Ljava/lang/String;)Lio/jsonwebtoken/Header;

+###io/jsonwebtoken/JwtParserBuilder
@0.11.0
+#requireId(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireSubject(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireAudience(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireIssuer(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireExpiration(Ljava/util/Date;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/JwtParserBuilder;
+#require(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtParserBuilder;
+#setClock(Lio/jsonwebtoken/Clock;)Lio/jsonwebtoken/JwtParserBuilder;
+#setAllowedClockSkewSeconds(J)Lio/jsonwebtoken/JwtParserBuilder;
+#setSigningKey([B)Lio/jsonwebtoken/JwtParserBuilder;
+#setSigningKey(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;
+#setSigningKey(Ljava/security/Key;)Lio/jsonwebtoken/JwtParserBuilder;
+#setSigningKeyResolver(Lio/jsonwebtoken/SigningKeyResolver;)Lio/jsonwebtoken/JwtParserBuilder;
+#setCompressionCodecResolver(Lio/jsonwebtoken/CompressionCodecResolver;)Lio/jsonwebtoken/JwtParserBuilder;
+#base64UrlDecodeWith(Lio/jsonwebtoken/io/Decoder;)Lio/jsonwebtoken/JwtParserBuilder;
+#deserializeJsonWith(Lio/jsonwebtoken/io/Deserializer;)Lio/jsonwebtoken/JwtParserBuilder;
+#build()Lio/jsonwebtoken/JwtParser;
@0.11.4
*#setSigningKey(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;[deprecated]

+###io/jsonwebtoken/lang/Arrays
@0.10.0
+#length([B)I
+#clean([B)[B

+###io/jsonwebtoken/lang/Strings
@0.10.0
+#hasLength(Ljava/lang/CharSequence;)Z
+#hasLength(Ljava/lang/String;)Z
+#hasText(Ljava/lang/CharSequence;)Z
+#hasText(Ljava/lang/String;)Z
+#containsWhitespace(Ljava/lang/CharSequence;)Z
+#containsWhitespace(Ljava/lang/String;)Z
+#trimWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#clean(Ljava/lang/String;)Ljava/lang/String;
+#clean(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
+#trimAllWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#trimLeadingWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#trimTrailingWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#trimLeadingCharacter(Ljava/lang/String;C)Ljava/lang/String;
+#trimTrailingCharacter(Ljava/lang/String;C)Ljava/lang/String;
+#startsWithIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z
+#endsWithIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z
+#substringMatch(Ljava/lang/CharSequence;ILjava/lang/CharSequence;)Z
+#countOccurrencesOf(Ljava/lang/String;Ljava/lang/String;)I
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#delete(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#deleteAny(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#quote(Ljava/lang/String;)Ljava/lang/String;
+#quoteIfString(Ljava/lang/Object;)Ljava/lang/Object;
+#unqualify(Ljava/lang/String;)Ljava/lang/String;
+#unqualify(Ljava/lang/String;C)Ljava/lang/String;
+#capitalize(Ljava/lang/String;)Ljava/lang/String;
+#uncapitalize(Ljava/lang/String;)Ljava/lang/String;
+#getFilename(Ljava/lang/String;)Ljava/lang/String;
+#getFilenameExtension(Ljava/lang/String;)Ljava/lang/String;
+#stripFilenameExtension(Ljava/lang/String;)Ljava/lang/String;
+#applyRelativePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#cleanPath(Ljava/lang/String;)Ljava/lang/String;
+#pathEquals(Ljava/lang/String;Ljava/lang/String;)Z
+#parseLocaleString(Ljava/lang/String;)Ljava/util/Locale;
+#toLanguageTag(Ljava/util/Locale;)Ljava/lang/String;
+#addStringToArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#concatenateStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#mergeStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#sortStringArray([Ljava/lang/String;)[Ljava/lang/String;
+#toStringArray(Ljava/util/Collection;)[Ljava/lang/String;
+#toStringArray(Ljava/util/Enumeration;)[Ljava/lang/String;
+#trimArrayElements([Ljava/lang/String;)[Ljava/lang/String;
+#removeDuplicateStrings([Ljava/lang/String;)[Ljava/lang/String;
+#split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#splitArrayElementsIntoProperties([Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;
+#splitArrayElementsIntoProperties([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;
+#tokenizeToStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#tokenizeToStringArray(Ljava/lang/String;Ljava/lang/String;ZZ)[Ljava/lang/String;
+#delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#commaDelimitedListToStringArray(Ljava/lang/String;)[Ljava/lang/String;
+#commaDelimitedListToSet(Ljava/lang/String;)Ljava/util/Set;
+#collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
+#collectionToCommaDelimitedString(Ljava/util/Collection;)Ljava/lang/String;
+#arrayToDelimitedString([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#arrayToCommaDelimitedString([Ljava/lang/Object;)Ljava/lang/String;

+###io/jsonwebtoken/lang/RuntimeEnvironment
@0.10.0
+#enableBouncyCastleIfPossible()V

+###io/jsonwebtoken/lang/Objects
@0.10.0
+#isCheckedException(Ljava/lang/Throwable;)Z
+#isCompatibleWithThrowsClause(Ljava/lang/Throwable;[Ljava/lang/Class;)Z
+#isArray(Ljava/lang/Object;)Z
+#isEmpty([Ljava/lang/Object;)Z
+#isEmpty([B)Z
+#containsElement([Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsConstant([Ljava/lang/Enum;Ljava/lang/String;)Z
+#containsConstant([Ljava/lang/Enum;Ljava/lang/String;Z)Z
+#caseInsensitiveValueOf([Ljava/lang/Enum;Ljava/lang/String;)Ljava/lang/Enum;
+#addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
+#toObjectArray(Ljava/lang/Object;)[Ljava/lang/Object;
+#nullSafeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z
+#nullSafeHashCode(Ljava/lang/Object;)I
+#nullSafeHashCode([Ljava/lang/Object;)I
+#nullSafeHashCode([Z)I
+#nullSafeHashCode([B)I
+#nullSafeHashCode([C)I
+#nullSafeHashCode([D)I
+#nullSafeHashCode([F)I
+#nullSafeHashCode([I)I
+#nullSafeHashCode([J)I
+#nullSafeHashCode([S)I
+#hashCode(Z)I
+#hashCode(D)I
+#hashCode(F)I
+#hashCode(J)I
+#identityToString(Ljava/lang/Object;)Ljava/lang/String;
+#getIdentityHexString(Ljava/lang/Object;)Ljava/lang/String;
+#getDisplayString(Ljava/lang/Object;)Ljava/lang/String;
+#nullSafeClassName(Ljava/lang/Object;)Ljava/lang/String;
+#nullSafeToString(Ljava/lang/Object;)Ljava/lang/String;
+#nullSafeToString([Ljava/lang/Object;)Ljava/lang/String;
+#nullSafeToString([Z)Ljava/lang/String;
+#nullSafeToString([B)Ljava/lang/String;
+#nullSafeToString([C)Ljava/lang/String;
+#nullSafeToString([D)Ljava/lang/String;
+#nullSafeToString([F)Ljava/lang/String;
+#nullSafeToString([I)Ljava/lang/String;
+#nullSafeToString([J)Ljava/lang/String;
+#nullSafeToString([S)Ljava/lang/String;
+#nullSafeClose([Ljava/io/Closeable;)V

+###io/jsonwebtoken/lang/DateFormats
@0.10.0
+#<init>()V
+#formatIso8601(Ljava/util/Date;)Ljava/lang/String;
+#formatIso8601(Ljava/util/Date;Z)Ljava/lang/String;
+#parseIso8601Date(Ljava/lang/String;)Ljava/util/Date;

+###io/jsonwebtoken/lang/Assert
@0.10.0
+#isTrue(ZLjava/lang/String;)V
+#isTrue(Z)V
+#isNull(Ljava/lang/Object;Ljava/lang/String;)V
+#isNull(Ljava/lang/Object;)V
+#notNull(Ljava/lang/Object;Ljava/lang/String;)V
+#notNull(Ljava/lang/Object;)V
+#hasLength(Ljava/lang/String;Ljava/lang/String;)V
+#hasLength(Ljava/lang/String;)V
+#hasText(Ljava/lang/String;Ljava/lang/String;)V
+#hasText(Ljava/lang/String;)V
+#doesNotContain(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#doesNotContain(Ljava/lang/String;Ljava/lang/String;)V
+#notEmpty([Ljava/lang/Object;Ljava/lang/String;)V
+#notEmpty([Ljava/lang/Object;)V
+#notEmpty([BLjava/lang/String;)V
+#noNullElements([Ljava/lang/Object;Ljava/lang/String;)V
+#noNullElements([Ljava/lang/Object;)V
+#notEmpty(Ljava/util/Collection;Ljava/lang/String;)V
+#notEmpty(Ljava/util/Collection;)V
+#notEmpty(Ljava/util/Map;Ljava/lang/String;)V
+#notEmpty(Ljava/util/Map;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;)V
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V
+#state(ZLjava/lang/String;)V
+#state(Z)V

+###io/jsonwebtoken/lang/Maps$MapBuilder
@0.11.0
+#and(Ljava/lang/Object;Ljava/lang/Object;)Lio/jsonwebtoken/lang/Maps$MapBuilder;
+#build()Ljava/util/Map;

+###io/jsonwebtoken/lang/InstantiationException
@0.10.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/lang/UnknownClassException
@0.10.0
+#<init>(Ljava/lang/String;)V
@0.11.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/lang/Collections
@0.10.0
+#isEmpty(Ljava/util/Collection;)Z
+#size(Ljava/util/Collection;)I
+#size(Ljava/util/Map;)I
+#isEmpty(Ljava/util/Map;)Z
+#arrayToList(Ljava/lang/Object;)Ljava/util/List;
+#mergeArrayIntoCollection(Ljava/lang/Object;Ljava/util/Collection;)V
+#mergePropertiesIntoMap(Ljava/util/Properties;Ljava/util/Map;)V
+#contains(Ljava/util/Iterator;Ljava/lang/Object;)Z
+#contains(Ljava/util/Enumeration;Ljava/lang/Object;)Z
+#containsInstance(Ljava/util/Collection;Ljava/lang/Object;)Z
+#containsAny(Ljava/util/Collection;Ljava/util/Collection;)Z
+#findFirstMatch(Ljava/util/Collection;Ljava/util/Collection;)Ljava/lang/Object;
+#findValueOfType(Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object;
+#findValueOfType(Ljava/util/Collection;[Ljava/lang/Class;)Ljava/lang/Object;
+#hasUniqueObject(Ljava/util/Collection;)Z
+#findCommonElementType(Ljava/util/Collection;)Ljava/lang/Class;
+#toArray(Ljava/util/Enumeration;[Ljava/lang/Object;)[Ljava/lang/Object;
+#toIterator(Ljava/util/Enumeration;)Ljava/util/Iterator;

+###io/jsonwebtoken/lang/Classes
@0.10.0
+#forName(Ljava/lang/String;)Ljava/lang/Class;
+#getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
+#isAvailable(Ljava/lang/String;)Z
+#newInstance(Ljava/lang/String;)Ljava/lang/Object;
+#newInstance(Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#newInstance(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#getConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
+#instantiate(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeStatic(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;

+###io/jsonwebtoken/lang/Maps
@0.11.0
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lio/jsonwebtoken/lang/Maps$MapBuilder;

+###io/jsonwebtoken/CompressionException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/JwtException
@0.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/jsonwebtoken/SigningKeyResolverAdapter
@0.10.0
+#<init>()V
+#resolveSigningKey(Lio/jsonwebtoken/JwsHeader;Lio/jsonwebtoken/Claims;)Ljava/security/Key;
+#resolveSigningKey(Lio/jsonwebtoken/JwsHeader;Ljava/lang/String;)Ljava/security/Key;
+#resolveSigningKeyBytes(Lio/jsonwebtoken/JwsHeader;Lio/jsonwebtoken/Claims;)[B
+#resolveSigningKeyBytes(Lio/jsonwebtoken/JwsHeader;Ljava/lang/String;)[B

+###io/jsonwebtoken/JwsHeader
@0.10.0
+#getAlgorithm()Ljava/lang/String;
+#setAlgorithm(Ljava/lang/String;)Lio/jsonwebtoken/JwsHeader;
+#getKeyId()Ljava/lang/String;
+#setKeyId(Ljava/lang/String;)Lio/jsonwebtoken/JwsHeader;
