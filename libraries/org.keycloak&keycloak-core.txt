
+###org/keycloak/crypto/SignatureVerifierContext
@4.5.0.Final
+#getKid()Ljava/lang/String;
+#getAlgorithm()Ljava/lang/String;
+#verify([B[B)Z

+###org/keycloak/crypto/SignatureException
@4.5.0.Final
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/keycloak/constants/AdapterConstants
@1.1.0.Beta2

+###org/keycloak/jose/jwe/alg/RsaKeyEncryptionJWEAlgorithmProvider
@7.0.0
+#<init>(Ljava/lang/String;)V
@20.0.0
-###org/keycloak/jose/jwe/alg/RsaKeyEncryptionJWEAlgorithmProvider

+###org/keycloak/representations/info/ServerInfoRepresentation
@1.7.0.CR1
+#<init>()V
+#getSystemInfo()Lorg/keycloak/representations/info/SystemInfoRepresentation;
+#setSystemInfo(Lorg/keycloak/representations/info/SystemInfoRepresentation;)V
+#getMemoryInfo()Lorg/keycloak/representations/info/MemoryInfoRepresentation;
+#setMemoryInfo(Lorg/keycloak/representations/info/MemoryInfoRepresentation;)V
+#getThemes()Ljava/util/Map;
+#setThemes(Ljava/util/Map;)V
+#getSocialProviders()Ljava/util/List;
+#setSocialProviders(Ljava/util/List;)V
+#getIdentityProviders()Ljava/util/List;
+#setIdentityProviders(Ljava/util/List;)V
+#getClientImporters()Ljava/util/List;
+#setClientImporters(Ljava/util/List;)V
+#getProviders()Ljava/util/Map;
+#setProviders(Ljava/util/Map;)V
+#getProtocolMapperTypes()Ljava/util/Map;
+#setProtocolMapperTypes(Ljava/util/Map;)V
+#getBuiltinProtocolMappers()Ljava/util/Map;
+#setBuiltinProtocolMappers(Ljava/util/Map;)V
+#getEnums()Ljava/util/Map;
+#setEnums(Ljava/util/Map;)V
@1.8.0.CR1
+#getClientInstallations()Ljava/util/Map;
+#setClientInstallations(Ljava/util/Map;)V
@2.1.0.CR1
+#getPasswordPolicies()Ljava/util/List;
+#setPasswordPolicies(Ljava/util/List;)V
+#getComponentTypes()Ljava/util/Map;
+#setComponentTypes(Ljava/util/Map;)V
@2.3.0.CR1
+#getProfileInfo()Lorg/keycloak/representations/info/ProfileInfoRepresentation;
+#setProfileInfo(Lorg/keycloak/representations/info/ProfileInfoRepresentation;)V
@20.0.0
+#getCryptoInfo()Lorg/keycloak/representations/info/CryptoInfoRepresentation;
+#setCryptoInfo(Lorg/keycloak/representations/info/CryptoInfoRepresentation;)V

+###org/keycloak/representations/adapters/action/GlobalRequestResult
@1.1.0.Beta1
+#<init>()V
+#addSuccessRequest(Ljava/lang/String;)V
+#addFailedRequest(Ljava/lang/String;)V
+#addAllSuccessRequests(Ljava/util/List;)V
+#addAllFailedRequests(Ljava/util/List;)V
+#addAll(Lorg/keycloak/representations/adapters/action/GlobalRequestResult;)V
+#getSuccessRequests()Ljava/util/List;
+#getFailedRequests()Ljava/util/List;

+###org/keycloak/representations/adapters/config/AdapterHttpClientConfig
@2.4.0.CR1
+#getTruststore()Ljava/lang/String;
+#getTruststorePassword()Ljava/lang/String;
+#getClientKeystore()Ljava/lang/String;
+#getClientKeystorePassword()Ljava/lang/String;
+#isAllowAnyHostname()Z
+#isDisableTrustManager()Z
+#getConnectionPoolSize()I
+#getProxyUrl()Ljava/lang/String;
@15.0.0
+#getSocketTimeout()J
+#getConnectionTimeout()J
+#getConnectionTTL()J

+###org/keycloak/representations/adapters/config/PolicyEnforcerConfig$MethodConfig
@2.0.0.CR1
+#<init>()V
+#getMethod()Ljava/lang/String;
+#setMethod(Ljava/lang/String;)V
+#getScopes()Ljava/util/List;
+#setScopes(Ljava/util/List;)V
@3.4.1.CR1
+#setScopesEnforcementMode(Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$ScopeEnforcementMode;)V
+#getScopesEnforcementMode()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$ScopeEnforcementMode;

+###org/keycloak/representations/idm/AuthenticatorConfigInfoRepresentation
@1.9.0.Final
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getHelpText()Ljava/lang/String;
+#getProviderId()Ljava/lang/String;
+#setProviderId(Ljava/lang/String;)V
+#setHelpText(Ljava/lang/String;)V
+#getProperties()Ljava/util/List;
+#setProperties(Ljava/util/List;)V

+###org/keycloak/representations/idm/UserFederationProviderFactoryRepresentation
@1.0-beta-4
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getOptions()Ljava/util/Set;
+#setOptions(Ljava/util/Set;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.9.3.Final
+#getHelpText()Ljava/lang/String;
+#setHelpText(Ljava/lang/String;)V
+#getProperties()Ljava/util/List;
+#setProperties(Ljava/util/List;)V

+###org/keycloak/representations/idm/IdentityProviderRepresentation
@1.2.0.Beta1
+#<init>()V
+#getInternalId()Ljava/lang/String;
+#setInternalId(Ljava/lang/String;)V
+#getAlias()Ljava/lang/String;
+#setAlias(Ljava/lang/String;)V
+#getProviderId()Ljava/lang/String;
+#setProviderId(Ljava/lang/String;)V
+#getConfig()Ljava/util/Map;
+#setConfig(Ljava/util/Map;)V
+#isEnabled()Z
+#setEnabled(Z)V
+#isUpdateProfileFirstLogin()Z
+#setUpdateProfileFirstLogin(Z)V
+#isAuthenticateByDefault()Z
+#setAuthenticateByDefault(Z)V
+#isStoreToken()Z
+#setStoreToken(Z)V
@1.2.0.CR1
+#isAddReadTokenRoleOnCreate()Z
+#setAddReadTokenRoleOnCreate(Z)V
@1.3.0.Final
*#setUpdateProfileFirstLogin(Z)V[deprecated]
+#getUpdateProfileFirstLoginMode()Ljava/lang/String;
+#setUpdateProfileFirstLoginMode(Ljava/lang/String;)V
+#isTrustEmail()Z
+#setTrustEmail(Z)V
-#isUpdateProfileFirstLogin()Z
@1.7.0.CR1
*#getUpdateProfileFirstLoginMode()Ljava/lang/String;[deprecated]
*#setUpdateProfileFirstLoginMode(Ljava/lang/String;)V[deprecated]
+#getFirstBrokerLoginFlowAlias()Ljava/lang/String;
+#setFirstBrokerLoginFlowAlias(Ljava/lang/String;)V
@1.8.0.Alpha1
+#getPostBrokerLoginFlowAlias()Ljava/lang/String;
+#setPostBrokerLoginFlowAlias(Ljava/lang/String;)V
@2.2.0.CR1
*#isAuthenticateByDefault()Z[deprecated]
*#setAuthenticateByDefault(Z)V[deprecated]
@2.3.0.CR1
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
@3.0.0.CR1
+#isLinkOnly()Z
+#setLinkOnly(Z)V

+###org/keycloak/TokenCategory
@4.5.0.Final
+#values()[Lorg/keycloak/TokenCategory;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/TokenCategory;

+###org/keycloak/enums/TokenStore
@1.1.0.Beta1
+#values()[Lorg/keycloak/enums/TokenStore;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/enums/TokenStore;

+###org/keycloak/json/StringListMapDeserializer
@2.3.0.CR1
+#<init>()V
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/keycloak/TokenVerifier$IssuedForCheck
@4.6.0.Final
+#<init>(Ljava/lang/String;)V
+#test(Lorg/keycloak/representations/JsonWebToken;)Z

+###org/keycloak/exceptions/TokenNotActiveException
@3.2.0.CR1
+#<init>(Lorg/keycloak/representations/JsonWebToken;)V
+#<init>(Lorg/keycloak/representations/JsonWebToken;Ljava/lang/String;)V
+#<init>(Lorg/keycloak/representations/JsonWebToken;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/keycloak/representations/JsonWebToken;Ljava/lang/Throwable;)V

+###org/keycloak/KeycloakPrincipal
@1.0-alpha-3
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getSurrogate()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.0-beta-1
+#<init>(Ljava/lang/String;Lorg/keycloak/KeycloakSecurityContext;)V
+#getKeycloakSecurityContext()Lorg/keycloak/KeycloakSecurityContext;
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
-#getSurrogate()Ljava/lang/String;
@1.0-beta-1-20150521
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getSurrogate()Ljava/lang/String;
-#<init>(Ljava/lang/String;Lorg/keycloak/KeycloakSecurityContext;)V
-#getKeycloakSecurityContext()Lorg/keycloak/KeycloakSecurityContext;
@1.0-beta-2
+#<init>(Ljava/lang/String;Lorg/keycloak/KeycloakSecurityContext;)V
+#getKeycloakSecurityContext()Lorg/keycloak/KeycloakSecurityContext;
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
-#getSurrogate()Ljava/lang/String;

+###org/keycloak/TokenVerifier$Predicate
@3.2.0.CR1
+#test(Lorg/keycloak/representations/JsonWebToken;)Z

+###org/keycloak/util/SystemPropertiesJsonParserFactory$SystemPropertiesAwareJsonParser
@1.1.0.Beta1
+#<init>(Lorg/codehaus/jackson/JsonParser;)V
+#getText()Ljava/lang/String;
@1.9.0.CR1
+#<init>(Lcom/fasterxml/jackson/core/JsonParser;)V
-#<init>(Lorg/codehaus/jackson/JsonParser;)V

+###org/keycloak/util/BasicAuthHelper
@1.0-alpha-3
+#<init>()V
+#createHeader(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#parseHeader(Ljava/lang/String;)[Ljava/lang/String;
@19.0.0
-#parseHeader(Ljava/lang/String;)[Ljava/lang/String;
@19.0.2
+#parseHeader(Ljava/lang/String;)[Ljava/lang/String;

+###org/keycloak/util/SystemPropertiesJsonParserFactory
@1.1.0.Beta1
+#<init>()V

+###org/keycloak/crypto/KeyStatus
@4.1.0.Final
+#values()[Lorg/keycloak/crypto/KeyStatus;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/crypto/KeyStatus;
+#from(ZZ)Lorg/keycloak/crypto/KeyStatus;
+#isActive()Z
+#isEnabled()Z

+###org/keycloak/crypto/MacSignatureVerifierContext
@4.5.0.Final
+#<init>(Lorg/keycloak/crypto/KeyWrapper;)V
+#getKid()Ljava/lang/String;
+#getAlgorithm()Ljava/lang/String;
+#verify([B[B)Z

+###org/keycloak/TokenVerifier$AudienceCheck
@4.5.0.Final
+#<init>(Ljava/lang/String;)V
+#test(Lorg/keycloak/representations/JsonWebToken;)Z

+###org/keycloak/TokenVerifier
@2.5.0.CR1
+#create(Ljava/lang/String;)Lorg/keycloak/TokenVerifier;
+#publicKey(Ljava/security/PublicKey;)Lorg/keycloak/TokenVerifier;
+#secretKey(Ljavax/crypto/SecretKey;)Lorg/keycloak/TokenVerifier;
+#realmUrl(Ljava/lang/String;)Lorg/keycloak/TokenVerifier;
+#checkTokenType(Z)Lorg/keycloak/TokenVerifier;
+#checkActive(Z)Lorg/keycloak/TokenVerifier;
+#checkRealmUrl(Z)Lorg/keycloak/TokenVerifier;
+#parse()Lorg/keycloak/TokenVerifier;
+#getToken()Lorg/keycloak/representations/AccessToken;
+#getHeader()Lorg/keycloak/jose/jws/JWSHeader;
+#verify()Lorg/keycloak/TokenVerifier;
@3.2.0.CR1
+#create(Ljava/lang/String;Ljava/lang/Class;)Lorg/keycloak/TokenVerifier;
+#create(Lorg/keycloak/representations/JsonWebToken;)Lorg/keycloak/TokenVerifier;
+#withDefaultChecks()Lorg/keycloak/TokenVerifier;
+#withChecks([Lorg/keycloak/TokenVerifier$Predicate;)Lorg/keycloak/TokenVerifier;
+#tokenType(Ljava/lang/String;)Lorg/keycloak/TokenVerifier;
+#getToken()Lorg/keycloak/representations/JsonWebToken;
+#verifySignature()V
+#optional(Lorg/keycloak/TokenVerifier$Predicate;)Lorg/keycloak/TokenVerifier$Predicate;
+#alternative([Lorg/keycloak/TokenVerifier$Predicate;)Lorg/keycloak/TokenVerifier$Predicate;
-#create(Ljava/lang/String;)Lorg/keycloak/TokenVerifier;
-#getToken()Lorg/keycloak/representations/AccessToken;
@4.3.0.Final
+#createWithoutSignature(Lorg/keycloak/representations/JsonWebToken;)Lorg/keycloak/TokenVerifier;
-#create(Lorg/keycloak/representations/JsonWebToken;)Lorg/keycloak/TokenVerifier;
@4.5.0.Final
+#verifierContext(Lorg/keycloak/crypto/SignatureVerifierContext;)Lorg/keycloak/TokenVerifier;
+#audience(Ljava/lang/String;)Lorg/keycloak/TokenVerifier;
@4.6.0.Final
+#issuedFor(Ljava/lang/String;)Lorg/keycloak/TokenVerifier;
@12.0.0
+#audience([Ljava/lang/String;)Lorg/keycloak/TokenVerifier;
-#audience(Ljava/lang/String;)Lorg/keycloak/TokenVerifier;

+###org/keycloak/jose/jwk/JWK$Use
@2.2.0.CR1
+#values()[Lorg/keycloak/jose/jwk/JWK$Use;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/jose/jwk/JWK$Use;
+#asString()Ljava/lang/String;

+###org/keycloak/jose/jws/crypto/HashUtils
@4.8.0.Final
+#<init>()V
+#oidcHash(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#hash(Ljava/lang/String;[B)[B
+#encodeHashToOIDC([B)Ljava/lang/String;

+###org/keycloak/jose/jws/JWSInputException
@1.7.0.CR1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/Throwable;)V

+###org/keycloak/jose/jws/JWSInput
@1.0-alpha-1
+#<init>(Ljava/lang/String;)V
+#getWireString()Ljava/lang/String;
+#getEncodedHeader()Ljava/lang/String;
+#getEncodedContent()Ljava/lang/String;
+#getEncodedSignature()Ljava/lang/String;
+#getHeader()Lorg/keycloak/jose/jws/JWSHeader;
+#getContent()[B
+#getSignature()[B
+#readJsonContent(Ljava/lang/Class;)Ljava/lang/Object;
+#readContentAsString()Ljava/lang/String;
@1.0-alpha-1-12062013
-###org/keycloak/jose/jws/JWSInput

+###org/keycloak/jose/jws/Algorithm
@1.0-alpha-1
+#values()[Lorg/keycloak/jose/jws/Algorithm;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/jose/jws/Algorithm;
@1.0-alpha-1-12062013
-###org/keycloak/jose/jws/Algorithm

+###org/keycloak/jose/jwe/enc/JWEEncryptionProvider
@3.4.0.CR1
+#encodeJwe(Lorg/keycloak/jose/jwe/JWE;)V
+#verifyAndDecodeJwe(Lorg/keycloak/jose/jwe/JWE;)V
+#serializeCEK(Lorg/keycloak/jose/jwe/JWEKeyStorage;)[B
+#deserializeCEK(Lorg/keycloak/jose/jwe/JWEKeyStorage;)V
+#getExpectedCEKLength()I

+###org/keycloak/jose/jwe/enc/AesGcmEncryptionProvider
@7.0.0
+#<init>()V
+#encodeJwe(Lorg/keycloak/jose/jwe/JWE;)V
+#verifyAndDecodeJwe(Lorg/keycloak/jose/jwe/JWE;)V
+#serializeCEK(Lorg/keycloak/jose/jwe/JWEKeyStorage;)[B
+#deserializeCEK(Lorg/keycloak/jose/jwe/JWEKeyStorage;)V

+###org/keycloak/jose/jwe/enc/AesCbcHmacShaEncryptionProvider$Aes192CbcHmacSha384Provider
@3.4.0.CR1
+#<init>()V
+#getExpectedCEKLength()I

+###org/keycloak/jose/jwe/enc/AesCbcHmacShaJWEEncryptionProvider
@7.0.0
+#<init>(Ljava/lang/String;)V
+#getExpectedCEKLength()I

+###org/keycloak/jose/jwe/alg/DirectAlgorithmProvider
@3.4.0.CR1
+#<init>()V
+#decodeCek([BLjava/security/Key;)[B
+#encodeCek(Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;Lorg/keycloak/jose/jwe/JWEKeyStorage;Ljava/security/Key;)[B

+###org/keycloak/jose/jwe/alg/KeyEncryptionJWEAlgorithmProvider
@7.0.0
+#<init>()V
+#decodeCek([BLjava/security/Key;)[B
+#encodeCek(Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;Lorg/keycloak/jose/jwe/JWEKeyStorage;Ljava/security/Key;)[B
@20.0.0
-###org/keycloak/jose/jwe/alg/KeyEncryptionJWEAlgorithmProvider

+###org/keycloak/jose/jwe/alg/JWEAlgorithmProvider
@3.4.0.CR1
+#decodeCek([BLjava/security/Key;)[B
+#encodeCek(Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;Lorg/keycloak/jose/jwe/JWEKeyStorage;Ljava/security/Key;)[B

+###org/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathCacheConfig
@4.0.0.Beta2
+#<init>()V
+#getMaxEntries()I
+#setMaxEntries(I)V
+#getLifespan()J
+#setLifespan(J)V

+###org/keycloak/representations/idm/RealmEventsConfigRepresentation
@1.0-rc-2
+#<init>()V
+#isEventsEnabled()Z
+#setEventsEnabled(Z)V
+#getEventsExpiration()Ljava/lang/Long;
+#setEventsExpiration(Ljava/lang/Long;)V
+#getEventsListeners()Ljava/util/List;
+#setEventsListeners(Ljava/util/List;)V
@1.2.0.Beta1
+#getEnabledEventTypes()Ljava/util/List;
+#setEnabledEventTypes(Ljava/util/List;)V
@1.3.0.Final
+#isAdminEventsEnabled()Ljava/lang/Boolean;
+#setAdminEventsEnabled(Ljava/lang/Boolean;)V
+#isAdminEventsDetailsEnabled()Ljava/lang/Boolean;
+#setAdminEventsDetailsEnabled(Ljava/lang/Boolean;)V

+###org/keycloak/representations/idm/UserRepresentation
@1.0-alpha-1
+#<init>()V
+#getSelf()Ljava/lang/String;
+#setSelf(Ljava/lang/String;)V
+#getFirstName()Ljava/lang/String;
+#setFirstName(Ljava/lang/String;)V
+#getLastName()Ljava/lang/String;
+#setLastName(Ljava/lang/String;)V
+#getEmail()Ljava/lang/String;
+#setEmail(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#isEnabled()Z
+#setEnabled(Z)V
+#isTotp()Z
+#setTotp(Z)V
+#isEmailVerified()Z
+#setEmailVerified(Z)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V
+#attribute(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/UserRepresentation;
+#getCredentials()Ljava/util/List;
+#setCredentials(Ljava/util/List;)V
+#credential(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/UserRepresentation;
+#getRequiredActions()Ljava/util/List;
+#setRequiredActions(Ljava/util/List;)V
@1.0-alpha-3
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
@1.0-beta-1
+#getAuthenticationLink()Lorg/keycloak/representations/idm/AuthenticationLinkRepresentation;
+#setAuthenticationLink(Lorg/keycloak/representations/idm/AuthenticationLinkRepresentation;)V
@1.0-beta-4
+#getSocialLinks()Ljava/util/List;
+#setSocialLinks(Ljava/util/List;)V
+#getRealmRoles()Ljava/util/List;
+#setRealmRoles(Ljava/util/List;)V
+#getApplicationRoles()Ljava/util/Map;
+#setApplicationRoles(Ljava/util/Map;)V
+#getFederationLink()Ljava/lang/String;
+#setFederationLink(Ljava/lang/String;)V
-#getAuthenticationLink()Lorg/keycloak/representations/idm/AuthenticationLinkRepresentation;
-#setAuthenticationLink(Lorg/keycloak/representations/idm/AuthenticationLinkRepresentation;)V
@1.2.0.Beta1
+#getFederatedIdentities()Ljava/util/List;
+#setFederatedIdentities(Ljava/util/List;)V
@1.2.0.CR1
+#getClientRoles()Ljava/util/Map;
+#setClientRoles(Ljava/util/Map;)V
+#getClientConsents()Ljava/util/List;
+#setClientConsents(Ljava/util/List;)V
*#getApplicationRoles()Ljava/util/Map;[deprecated]
-#setApplicationRoles(Ljava/util/Map;)V
@1.4.0.Final
+#getCreatedTimestamp()Ljava/lang/Long;
+#setCreatedTimestamp(Ljava/lang/Long;)V
+#getAttributesAsListValues()Ljava/util/Map;
+#singleAttribute(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/UserRepresentation;
+#getServiceAccountClientId()Ljava/lang/String;
+#setServiceAccountClientId(Ljava/lang/String;)V
-#attribute(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/UserRepresentation;
@1.5.0-Final
-#credential(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/UserRepresentation;
@1.7.0.CR1
+#isEnabled()Ljava/lang/Boolean;
+#setEnabled(Ljava/lang/Boolean;)V
+#isTotp()Ljava/lang/Boolean;
+#setTotp(Ljava/lang/Boolean;)V
+#isEmailVerified()Ljava/lang/Boolean;
+#setEmailVerified(Ljava/lang/Boolean;)V
+#getGroups()Ljava/util/List;
+#setGroups(Ljava/util/List;)V
-#isEnabled()Z
-#setEnabled(Z)V
-#isTotp()Z
-#setTotp(Z)V
-#isEmailVerified()Z
-#setEmailVerified(Z)V
@2.3.0.CR1
*#isTotp()Ljava/lang/Boolean;[deprecated]
*#setTotp(Ljava/lang/Boolean;)V[deprecated]
-#getAttributesAsListValues()Ljava/util/Map;
@2.4.0.CR1
+#getOrigin()Ljava/lang/String;
+#setOrigin(Ljava/lang/String;)V
+#getDisableableCredentialTypes()Ljava/util/Set;
+#setDisableableCredentialTypes(Ljava/util/Set;)V
@3.2.0.CR1
+#getAccess()Ljava/util/Map;
+#setAccess(Ljava/util/Map;)V
@3.3.0.CR1
+#getNotBefore()Ljava/lang/Integer;
+#setNotBefore(Ljava/lang/Integer;)V
@12.0.0
+#firstAttribute(Ljava/lang/String;)Ljava/lang/String;
@14.0.0
+#toAttributes()Ljava/util/Map;

+###org/keycloak/representations/idm/authorization/JSPolicyRepresentation
@3.1.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;
+#getCode()Ljava/lang/String;
+#setCode(Ljava/lang/String;)V

+###org/keycloak/representations/idm/authorization/PolicyEvaluationRequest
@3.1.0.CR1
+#<init>()V
+#getContext()Ljava/util/Map;
+#setContext(Ljava/util/Map;)V
+#getResources()Ljava/util/List;
+#setResources(Ljava/util/List;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getUserId()Ljava/lang/String;
+#setUserId(Ljava/lang/String;)V
+#getRoleIds()Ljava/util/List;
+#setRoleIds(Ljava/util/List;)V
+#isEntitlements()Z
+#setEntitlements(Z)V
+#addResource(Ljava/lang/String;[Ljava/lang/String;)Lorg/keycloak/representations/idm/authorization/PolicyEvaluationRequest;

+###org/keycloak/representations/idm/authorization/PolicyEvaluationResponse
@3.1.0.CR1
+#<init>()V
+#getResults()Ljava/util/List;
+#getStatus()Lorg/keycloak/representations/idm/authorization/DecisionEffect;
+#isEntitlements()Z
+#getRpt()Lorg/keycloak/representations/AccessToken;
+#setResults(Ljava/util/List;)V
+#setEntitlements(Z)V
+#setStatus(Lorg/keycloak/representations/idm/authorization/DecisionEffect;)V
+#setRpt(Lorg/keycloak/representations/AccessToken;)V

+###org/keycloak/representations/idm/authorization/PolicyEvaluationResponse$EvaluationResultRepresentation
@3.1.0.CR1
+#<init>()V
+#setResource(Lorg/keycloak/representations/idm/authorization/ResourceRepresentation;)V
+#getResource()Lorg/keycloak/representations/idm/authorization/ResourceRepresentation;
+#setScopes(Ljava/util/List;)V
+#getScopes()Ljava/util/List;
+#setPolicies(Ljava/util/List;)V
+#getPolicies()Ljava/util/List;
+#setStatus(Lorg/keycloak/representations/idm/authorization/DecisionEffect;)V
+#getStatus()Lorg/keycloak/representations/idm/authorization/DecisionEffect;
+#setAllowedScopes(Ljava/util/List;)V
+#getAllowedScopes()Ljava/util/List;

+###org/keycloak/representations/idm/authorization/PermissionTicketRepresentation
@4.0.0.Beta1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getOwner()Ljava/lang/String;
+#setOwner(Ljava/lang/String;)V
+#getResource()Ljava/lang/String;
+#setResource(Ljava/lang/String;)V
+#getScope()Ljava/lang/String;
+#setScope(Ljava/lang/String;)V
+#isGranted()Z
+#setGranted(Z)V
+#setScopeName(Ljava/lang/String;)V
+#getScopeName()Ljava/lang/String;
+#setResourceName(Ljava/lang/String;)V
+#getResourceName()Ljava/lang/String;
@4.0.0.Beta3
+#setRequesterName(Ljava/lang/String;)V
+#getRequesterName()Ljava/lang/String;
+#setRequester(Ljava/lang/String;)V
+#getRequester()Ljava/lang/String;
+#setOwnerName(Ljava/lang/String;)V
+#getOwnerName()Ljava/lang/String;

+###org/keycloak/representations/idm/authorization/ResourceServerRepresentation
@2.1.0.CR1
+#<init>()V
+#setId(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#isAllowRemoteResourceManagement()Z
+#setAllowRemoteResourceManagement(Z)V
+#getPolicyEnforcementMode()Lorg/keycloak/representations/idm/authorization/PolicyEnforcementMode;
+#setPolicyEnforcementMode(Lorg/keycloak/representations/idm/authorization/PolicyEnforcementMode;)V
+#setResources(Ljava/util/List;)V
+#getResources()Ljava/util/List;
+#setPolicies(Ljava/util/List;)V
+#getPolicies()Ljava/util/List;
+#setScopes(Ljava/util/List;)V
+#getScopes()Ljava/util/List;
@7.0.0
+#setDecisionStrategy(Lorg/keycloak/representations/idm/authorization/DecisionStrategy;)V
+#getDecisionStrategy()Lorg/keycloak/representations/idm/authorization/DecisionStrategy;

+###org/keycloak/representations/idm/authorization/ScopePermissionRepresentation
@3.1.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;
@11.0.0
+#setResourceType(Ljava/lang/String;)V
+#getResourceType()Ljava/lang/String;

+###org/keycloak/representations/idm/AuthenticationExecutionInfoRepresentation
@1.9.0.Final
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#getRequirement()Ljava/lang/String;
+#setRequirement(Ljava/lang/String;)V
+#getRequirementChoices()Ljava/util/List;
+#setRequirementChoices(Ljava/util/List;)V
+#getConfigurable()Ljava/lang/Boolean;
+#setConfigurable(Ljava/lang/Boolean;)V
+#getProviderId()Ljava/lang/String;
+#setProviderId(Ljava/lang/String;)V
+#getAuthenticationConfig()Ljava/lang/String;
+#setAuthenticationConfig(Ljava/lang/String;)V
+#getAuthenticationFlow()Ljava/lang/Boolean;
+#setAuthenticationFlow(Ljava/lang/Boolean;)V
+#getLevel()I
+#setLevel(I)V
+#getIndex()I
+#setIndex(I)V
+#getFlowId()Ljava/lang/String;
+#setFlowId(Ljava/lang/String;)V
@2.0.0.CR1
+#getAlias()Ljava/lang/String;
+#setAlias(Ljava/lang/String;)V
@11.0.0
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V

+###org/keycloak/representations/idm/UserFederationMapperTypeRepresentation
@1.3.0.Final
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getCategory()Ljava/lang/String;
+#setCategory(Ljava/lang/String;)V
+#getHelpText()Ljava/lang/String;
+#setHelpText(Ljava/lang/String;)V
+#getProperties()Ljava/util/List;
+#setProperties(Ljava/util/List;)V
@1.8.0.CR1
+#getSyncConfig()Lorg/keycloak/representations/idm/UserFederationMapperSyncConfigRepresentation;
+#setSyncConfig(Lorg/keycloak/representations/idm/UserFederationMapperSyncConfigRepresentation;)V
+#getDefaultConfig()Ljava/util/Map;
+#setDefaultConfig(Ljava/util/Map;)V

+###org/keycloak/representations/idm/UserFederationProviderRepresentation
@1.0-beta-4
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#getProviderName()Ljava/lang/String;
+#setProviderName(Ljava/lang/String;)V
+#getConfig()Ljava/util/Map;
+#setConfig(Ljava/util/Map;)V
+#getPriority()I
+#setPriority(I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.0-rc-1
+#getFullSyncPeriod()I
+#setFullSyncPeriod(I)V
+#getChangedSyncPeriod()I
+#setChangedSyncPeriod(I)V
+#getLastSync()I
+#setLastSync(I)V

+###org/keycloak/representations/idm/UserFederationMapperRepresentation
@1.3.0.Final
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getFederationProviderDisplayName()Ljava/lang/String;
+#setFederationProviderDisplayName(Ljava/lang/String;)V
+#getFederationMapperType()Ljava/lang/String;
+#setFederationMapperType(Ljava/lang/String;)V
+#getConfig()Ljava/util/Map;
+#setConfig(Ljava/util/Map;)V

+###org/keycloak/representations/idm/AdminEventRepresentation
@1.9.0.Final
+#<init>()V
+#getTime()J
+#setTime(J)V
+#getRealmId()Ljava/lang/String;
+#setRealmId(Ljava/lang/String;)V
+#getAuthDetails()Lorg/keycloak/representations/idm/AuthDetailsRepresentation;
+#setAuthDetails(Lorg/keycloak/representations/idm/AuthDetailsRepresentation;)V
+#getOperationType()Ljava/lang/String;
+#setOperationType(Ljava/lang/String;)V
+#getResourcePath()Ljava/lang/String;
+#setResourcePath(Ljava/lang/String;)V
+#getRepresentation()Ljava/lang/String;
+#setRepresentation(Ljava/lang/String;)V
+#getError()Ljava/lang/String;
+#setError(Ljava/lang/String;)V
@2.2.0.CR1
+#getResourceType()Ljava/lang/String;
+#setResourceType(Ljava/lang/String;)V

+###org/keycloak/representations/idm/SocialLinkRepresentation
@1.0-alpha-1
+#<init>()V
+#getSocialProvider()Ljava/lang/String;
+#setSocialProvider(Ljava/lang/String;)V
+#getSocialUsername()Ljava/lang/String;
+#setSocialUsername(Ljava/lang/String;)V
@1.0-alpha-3
+#getSocialUserId()Ljava/lang/String;
+#setSocialUserId(Ljava/lang/String;)V

+###org/keycloak/representations/idm/RequiredActionProviderRepresentation
@1.4.0.Final
+#<init>()V
+#getAlias()Ljava/lang/String;
+#setAlias(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#isEnabled()Z
+#setEnabled(Z)V
+#isDefaultAction()Z
+#setDefaultAction(Z)V
+#getProviderId()Ljava/lang/String;
+#setProviderId(Ljava/lang/String;)V
+#getConfig()Ljava/util/Map;
+#setConfig(Ljava/util/Map;)V
@4.2.0.Final
+#getPriority()I
+#setPriority(I)V

+###org/keycloak/representations/idm/KeysMetadataRepresentation
@2.3.0.CR1
+#<init>()V
+#getActive()Ljava/util/Map;
+#setActive(Ljava/util/Map;)V
+#getKeys()Ljava/util/List;
+#setKeys(Ljava/util/List;)V

+###org/keycloak/representations/idm/AuthenticationExecutionRepresentation
@1.4.0.Final
+#<init>()V
+#getAuthenticatorConfig()Ljava/lang/String;
+#setAuthenticatorConfig(Ljava/lang/String;)V
+#getAuthenticator()Ljava/lang/String;
+#setAuthenticator(Ljava/lang/String;)V
+#getRequirement()Ljava/lang/String;
+#setRequirement(Ljava/lang/String;)V
+#getPriority()I
+#setPriority(I)V
+#isUserSetupAllowed()Z
+#setUserSetupAllowed(Z)V
+#getFlowAlias()Ljava/lang/String;
+#setFlowAlias(Ljava/lang/String;)V
+#isAutheticatorFlow()Z
+#setAutheticatorFlow(Z)V
@1.9.0.Final
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getFlowId()Ljava/lang/String;
+#setFlowId(Ljava/lang/String;)V
+#getParentFlow()Ljava/lang/String;
+#setParentFlow(Ljava/lang/String;)V
-#getAuthenticatorConfig()Ljava/lang/String;
-#setAuthenticatorConfig(Ljava/lang/String;)V
-#getAuthenticator()Ljava/lang/String;
-#setAuthenticator(Ljava/lang/String;)V
-#getRequirement()Ljava/lang/String;
-#setRequirement(Ljava/lang/String;)V
-#getPriority()I
-#setPriority(I)V
-#isUserSetupAllowed()Z
-#setUserSetupAllowed(Z)V
-#getFlowAlias()Ljava/lang/String;
-#setFlowAlias(Ljava/lang/String;)V
-#isAutheticatorFlow()Z
-#setAutheticatorFlow(Z)V

+###org/keycloak/representations/idm/ScopeMappingRepresentation
@1.0-alpha-1
+#<init>()V
+#getSelf()Ljava/lang/String;
+#setSelf(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getRoles()Ljava/util/Set;
+#setRoles(Ljava/util/Set;)V
+#role(Ljava/lang/String;)Lorg/keycloak/representations/idm/ScopeMappingRepresentation;
@1.0-alpha-3
+#getClient()Ljava/lang/String;
+#setClient(Ljava/lang/String;)V
-#getUsername()Ljava/lang/String;
-#setUsername(Ljava/lang/String;)V
@1.9.3.Final
+#getClientTemplate()Ljava/lang/String;
+#setClientTemplate(Ljava/lang/String;)V
@4.0.0.Final
*#getClientTemplate()Ljava/lang/String;[deprecated]
+#getClientScope()Ljava/lang/String;
+#setClientScope(Ljava/lang/String;)V
-#setClientTemplate(Ljava/lang/String;)V

+###org/keycloak/representations/UserInfo
@1.2.0.Beta1
+#<init>()V
+#getSubject()Ljava/lang/String;
+#setSubject(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getGivenName()Ljava/lang/String;
+#setGivenName(Ljava/lang/String;)V
+#getFamilyName()Ljava/lang/String;
+#setFamilyName(Ljava/lang/String;)V
+#getMiddleName()Ljava/lang/String;
+#setMiddleName(Ljava/lang/String;)V
+#getNickName()Ljava/lang/String;
+#setNickName(Ljava/lang/String;)V
+#getPreferredUsername()Ljava/lang/String;
+#setPreferredUsername(Ljava/lang/String;)V
+#getProfile()Ljava/lang/String;
+#setProfile(Ljava/lang/String;)V
+#getPicture()Ljava/lang/String;
+#setPicture(Ljava/lang/String;)V
+#getWebsite()Ljava/lang/String;
+#setWebsite(Ljava/lang/String;)V
+#getEmail()Ljava/lang/String;
+#setEmail(Ljava/lang/String;)V
+#getEmailVerified()Ljava/lang/Boolean;
+#setEmailVerified(Ljava/lang/Boolean;)V
+#getGender()Ljava/lang/String;
+#setGender(Ljava/lang/String;)V
+#getBirthdate()Ljava/lang/String;
+#setBirthdate(Ljava/lang/String;)V
+#getZoneinfo()Ljava/lang/String;
+#setZoneinfo(Ljava/lang/String;)V
+#getLocale()Ljava/lang/String;
+#setLocale(Ljava/lang/String;)V
+#getPhoneNumber()Ljava/lang/String;
+#setPhoneNumber(Ljava/lang/String;)V
+#getPhoneNumberVerified()Ljava/lang/Boolean;
+#setPhoneNumberVerified(Ljava/lang/Boolean;)V
+#getAddress()Lorg/keycloak/representations/AddressClaimSet;
+#setAddress(Lorg/keycloak/representations/AddressClaimSet;)V
+#getUpdatedAt()Ljava/lang/Long;
+#setUpdatedAt(Ljava/lang/Long;)V
+#getSub()Ljava/lang/String;
+#setSub(Ljava/lang/String;)V
+#getClaimsLocales()Ljava/lang/String;
+#setClaimsLocales(Ljava/lang/String;)V
@2.2.0.CR1
+#getIssuer()Ljava/lang/String;
+#setIssuer(Ljava/lang/String;)V
+#getAudience()[Ljava/lang/String;
+#hasAudience(Ljava/lang/String;)Z
+#setAudience([Ljava/lang/String;)V
+#getOtherClaims()Ljava/util/Map;
+#setOtherClaims(Ljava/lang/String;Ljava/lang/Object;)V

+###org/keycloak/representations/VersionRepresentation
@1.6.0.Final
+#<init>()V
+#getVersion()Ljava/lang/String;
+#getBuildTime()Ljava/lang/String;

+###org/keycloak/representations/AccessToken
@1.0-alpha-3
+#<init>()V
+#getResourceAccess()Ljava/util/Map;
+#setResourceAccess(Ljava/util/Map;)V
+#isVerifyCaller()Z
+#isVerifyCaller(Ljava/lang/String;)Z
+#getResourceAccess(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken$Access;
+#addAccess(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken$Access;
+#id(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken;
+#expiration(J)Lorg/keycloak/representations/AccessToken;
+#notBefore(J)Lorg/keycloak/representations/AccessToken;
+#issuedAt(I)Lorg/keycloak/representations/AccessToken;
+#issuer(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken;
+#audience(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken;
+#subject(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken;
+#type(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken;
+#getAllowedOrigins()Ljava/util/Set;
+#setAllowedOrigins(Ljava/util/Set;)V
+#getRealmAccess()Lorg/keycloak/representations/AccessToken$Access;
+#setRealmAccess(Lorg/keycloak/representations/AccessToken$Access;)V
+#getTrustedCertificates()Ljava/util/Set;
+#setTrustedCertificates(Ljava/util/Set;)V
+#issuedFor(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken;
+#issuedFor(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#type(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#subject(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#audience(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#issuer(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#issuedAt(I)Lorg/keycloak/representations/JsonWebToken;
+#notBefore(J)Lorg/keycloak/representations/JsonWebToken;
+#expiration(J)Lorg/keycloak/representations/JsonWebToken;
+#id(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
@1.0-beta-1
+#expiration(I)Lorg/keycloak/representations/AccessToken;
+#notBefore(I)Lorg/keycloak/representations/AccessToken;
+#notBefore(I)Lorg/keycloak/representations/JsonWebToken;
+#expiration(I)Lorg/keycloak/representations/JsonWebToken;
-#expiration(J)Lorg/keycloak/representations/AccessToken;
-#notBefore(J)Lorg/keycloak/representations/AccessToken;
-#notBefore(J)Lorg/keycloak/representations/JsonWebToken;
-#expiration(J)Lorg/keycloak/representations/JsonWebToken;
@1.2.0.Beta1
+#getClientSession()Ljava/lang/String;
+#clientSession(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken;
@1.5.0-Final
-#audience(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken;
-#audience(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
@2.0.0.CR1
+#getAuthorization()Lorg/keycloak/representations/AccessToken$Authorization;
+#setAuthorization(Lorg/keycloak/representations/AccessToken$Authorization;)V
@3.2.0.CR1
-#getClientSession()Ljava/lang/String;
-#clientSession(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken;
@4.0.0.Final
+#getCertConf()Lorg/keycloak/representations/AccessToken$CertConf;
+#setCertConf(Lorg/keycloak/representations/AccessToken$CertConf;)V
+#getScope()Ljava/lang/String;
+#setScope(Ljava/lang/String;)V
@4.5.0.Final
+#getCategory()Lorg/keycloak/TokenCategory;

+###org/keycloak/representations/docker/DockerError
@3.2.0.CR1
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#getErrorCode()Ljava/lang/String;
+#getMessage()Ljava/lang/String;
+#getDockerErrorDetails()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/keycloak/representations/docker/DockerErrorResponseToken
@3.2.0.CR1
+#<init>(Ljava/util/List;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/keycloak/representations/docker/DockerResponseToken
@3.2.0.CR1
+#<init>()V
+#getAccessItems()Ljava/util/List;
+#id(Ljava/lang/String;)Lorg/keycloak/representations/docker/DockerResponseToken;
+#expiration(I)Lorg/keycloak/representations/docker/DockerResponseToken;
+#notBefore(I)Lorg/keycloak/representations/docker/DockerResponseToken;
+#issuedNow()Lorg/keycloak/representations/docker/DockerResponseToken;
+#issuedAt(I)Lorg/keycloak/representations/docker/DockerResponseToken;
+#issuer(Ljava/lang/String;)Lorg/keycloak/representations/docker/DockerResponseToken;
+#audience([Ljava/lang/String;)Lorg/keycloak/representations/docker/DockerResponseToken;
+#subject(Ljava/lang/String;)Lorg/keycloak/representations/docker/DockerResponseToken;
+#type(Ljava/lang/String;)Lorg/keycloak/representations/docker/DockerResponseToken;
+#issuedFor(Ljava/lang/String;)Lorg/keycloak/representations/docker/DockerResponseToken;
+#issuedFor(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#type(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#subject(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#audience([Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#issuer(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#issuedAt(I)Lorg/keycloak/representations/JsonWebToken;
+#issuedNow()Lorg/keycloak/representations/JsonWebToken;
+#notBefore(I)Lorg/keycloak/representations/JsonWebToken;
+#expiration(I)Lorg/keycloak/representations/JsonWebToken;
+#id(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;

+###org/keycloak/Config$Scope
@1.0-beta-1
+#get(Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getArray(Ljava/lang/String;)[Ljava/lang/String;
+#getInt(Ljava/lang/String;)Ljava/lang/Integer;
+#getInt(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
+#getLong(Ljava/lang/String;)Ljava/lang/Long;
+#getLong(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;
+#getBoolean(Ljava/lang/String;)Ljava/lang/Boolean;
+#getBoolean(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;
@1.1.0.Beta1
+#scope([Ljava/lang/String;)Lorg/keycloak/Config$Scope;
@15.1.0
+#getPropertyNames()Ljava/util/Set;

+###org/keycloak/json/StringOrArraySerializer
@1.5.0-Final
+#<init>()V
+#serialize(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
@1.9.0.CR1
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
-#serialize(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V

+###org/keycloak/json/StringOrArrayDeserializer
@1.5.0-Final
+#<init>()V
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
@1.9.0.CR1
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
-#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;

+###org/keycloak/exceptions/TokenVerificationException
@3.2.0.CR1
+#<init>(Lorg/keycloak/representations/JsonWebToken;)V
+#<init>(Lorg/keycloak/representations/JsonWebToken;Ljava/lang/String;)V
+#<init>(Lorg/keycloak/representations/JsonWebToken;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/keycloak/representations/JsonWebToken;Ljava/lang/Throwable;)V
+#getToken()Lorg/keycloak/representations/JsonWebToken;

+###org/keycloak/Config$SystemPropertiesConfigProvider
@1.0-beta-1
+#<init>()V
+#getProvider(Ljava/lang/String;)Ljava/lang/String;
+#scope([Ljava/lang/String;)Lorg/keycloak/Config$Scope;

+###org/keycloak/KeyPairVerifier
@1.9.1.Final
+#<init>()V
+#verify(Ljava/lang/String;Ljava/lang/String;)V

+###org/keycloak/util/JsonSerialization
@1.0-alpha-1
+#<init>()V
+#writeValueAsString(Ljava/lang/Object;)Ljava/lang/String;
+#writeValueAsBytes(Ljava/lang/Object;)[B
+#readValue([BLjava/lang/Class;)Ljava/lang/Object;
+#readValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#readValue(Ljava/io/InputStream;Ljava/lang/Class;)Ljava/lang/Object;
@1.0-alpha-1-12062013
-###org/keycloak/util/JsonSerialization

+###org/keycloak/crypto/MacSignatureSignerContext
@4.5.0.Final
+#<init>(Lorg/keycloak/crypto/KeyWrapper;)V
+#getKid()Ljava/lang/String;
+#getAlgorithm()Ljava/lang/String;
+#sign([B)[B
@4.8.0.Final
+#getHashAlgorithm()Ljava/lang/String;

+###org/keycloak/crypto/AsymmetricSignatureSignerContext
@4.5.0.Final
+#<init>(Lorg/keycloak/crypto/KeyWrapper;)V
+#getKid()Ljava/lang/String;
+#getAlgorithm()Ljava/lang/String;
+#sign([B)[B
@4.8.0.Final
+#getHashAlgorithm()Ljava/lang/String;

+###org/keycloak/AuthorizationContext
@2.0.0.CR1
+#<init>(Lorg/keycloak/representations/AccessToken;Ljava/util/List;)V
+#<init>()V
+#hasPermission(Ljava/lang/String;Ljava/lang/String;)Z
+#hasResourcePermission(Ljava/lang/String;)Z
+#hasScopePermission(Ljava/lang/String;)Z
+#getPermissions()Ljava/util/List;
+#isGranted()Z
@2.5.0.CR1
+#<init>(Lorg/keycloak/representations/AccessToken;Ljava/util/Map;)V
-#<init>(Lorg/keycloak/representations/AccessToken;Ljava/util/List;)V
@3.2.0.CR1
+#<init>(Lorg/keycloak/representations/AccessToken;Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathConfig;Ljava/util/Map;)V
-#<init>(Lorg/keycloak/representations/AccessToken;Ljava/util/Map;)V
@4.0.0.Beta2
+#<init>(Lorg/keycloak/representations/AccessToken;Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathConfig;)V
-#<init>(Lorg/keycloak/representations/AccessToken;Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathConfig;Ljava/util/Map;)V

+###org/keycloak/jose/jwk/JWK
@1.2.0.Beta1
+#<init>()V
+#getKeyId()Ljava/lang/String;
+#setKeyId(Ljava/lang/String;)V
+#getKeyType()Ljava/lang/String;
+#setKeyType(Ljava/lang/String;)V
+#getAlgorithm()Ljava/lang/String;
+#setAlgorithm(Ljava/lang/String;)V
+#getPublicKeyUse()Ljava/lang/String;
+#setPublicKeyUse(Ljava/lang/String;)V
+#getOtherClaims()Ljava/util/Map;
+#setOtherClaims(Ljava/lang/String;Ljava/lang/Object;)V

+###org/keycloak/jose/jwk/JWKBuilder
@1.2.0.Beta1
+#create()Lorg/keycloak/jose/jwk/JWKBuilder;
+#rs256(Ljava/security/PublicKey;)Lorg/keycloak/jose/jwk/JWK;
@2.3.0.CR1
+#kid(Ljava/lang/String;)Lorg/keycloak/jose/jwk/JWKBuilder;
@4.5.0.Final
+#algorithm(Ljava/lang/String;)Lorg/keycloak/jose/jwk/JWKBuilder;
+#rsa(Ljava/security/Key;)Lorg/keycloak/jose/jwk/JWK;
+#ec(Ljava/security/Key;)Lorg/keycloak/jose/jwk/JWK;
@6.0.0
+#rsa(Ljava/security/Key;Ljava/security/cert/X509Certificate;)Lorg/keycloak/jose/jwk/JWK;
@7.0.0
+#rsa(Ljava/security/Key;Lorg/keycloak/crypto/KeyUse;)Lorg/keycloak/jose/jwk/JWK;
@13.0.0
+#rsa(Ljava/security/Key;Ljava/util/List;)Lorg/keycloak/jose/jwk/JWK;
@15.0.0
+#rsa(Ljava/security/Key;Ljava/util/List;Lorg/keycloak/crypto/KeyUse;)Lorg/keycloak/jose/jwk/JWK;

+###org/keycloak/jose/jwe/JWEHeader
@3.4.0.CR1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getAlgorithm()Ljava/lang/String;
+#getEncryptionAlgorithm()Ljava/lang/String;
+#getCompressionAlgorithm()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getContentType()Ljava/lang/String;
+#getKeyId()Ljava/lang/String;
+#toString()Ljava/lang/String;
@7.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@15.0.0
+#getRawAlgorithm()Ljava/lang/String;
@15.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/keycloak/jose/jwe/JWEKeyStorage$KeyUse
@3.4.0.CR1
+#values()[Lorg/keycloak/jose/jwe/JWEKeyStorage$KeyUse;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/jose/jwe/JWEKeyStorage$KeyUse;

+###org/keycloak/jose/jwe/JWEException
@3.4.0.CR1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/Throwable;)V

+###org/keycloak/representations/idm/KeysMetadataRepresentation$KeyMetadataRepresentation
@2.3.0.CR1
+#<init>()V
+#getProviderId()Ljava/lang/String;
+#setProviderId(Ljava/lang/String;)V
+#getProviderPriority()J
+#setProviderPriority(J)V
+#getKid()Ljava/lang/String;
+#setKid(Ljava/lang/String;)V
+#getStatus()Ljava/lang/String;
+#setStatus(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getPublicKey()Ljava/lang/String;
+#setPublicKey(Ljava/lang/String;)V
+#getCertificate()Ljava/lang/String;
+#setCertificate(Ljava/lang/String;)V
@4.1.0.Final
+#getAlgorithms()Ljava/util/Set;
+#setAlgorithms(Ljava/util/Set;)V
@4.5.0.Final
+#getAlgorithm()Ljava/lang/String;
+#setAlgorithm(Ljava/lang/String;)V
-#getAlgorithms()Ljava/util/Set;
-#setAlgorithms(Ljava/util/Set;)V
@15.0.0
+#getUse()Lorg/keycloak/crypto/KeyUse;
+#setUse(Lorg/keycloak/crypto/KeyUse;)V

+###org/keycloak/representations/idm/EventRepresentation
@1.9.0.Final
+#<init>()V
+#getTime()J
+#setTime(J)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getRealmId()Ljava/lang/String;
+#setRealmId(Ljava/lang/String;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getUserId()Ljava/lang/String;
+#setUserId(Ljava/lang/String;)V
+#getSessionId()Ljava/lang/String;
+#setSessionId(Ljava/lang/String;)V
+#getIpAddress()Ljava/lang/String;
+#setIpAddress(Ljava/lang/String;)V
+#getError()Ljava/lang/String;
+#setError(Ljava/lang/String;)V
+#getDetails()Ljava/util/Map;
+#setDetails(Ljava/util/Map;)V
@1.9.2.Final
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/keycloak/representations/idm/AuthenticationExecutionExportRepresentation
@1.9.0.Final
+#<init>()V
+#isUserSetupAllowed()Z
+#setUserSetupAllowed(Z)V
+#getFlowAlias()Ljava/lang/String;
+#setFlowAlias(Ljava/lang/String;)V

+###org/keycloak/representations/idm/PasswordPolicyTypeRepresentation
@2.1.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#getConfigType()Ljava/lang/String;
+#setConfigType(Ljava/lang/String;)V
+#getDefaultValue()Ljava/lang/String;
+#setDefaultValue(Ljava/lang/String;)V
+#isMultipleSupported()Z
+#setMultipleSupported(Z)V

+###org/keycloak/representations/idm/ClientInitialAccessCreatePresentation
@1.7.0.CR1
+#<init>()V
+#<init>(Ljava/lang/Integer;Ljava/lang/Integer;)V
+#getExpiration()Ljava/lang/Integer;
+#setExpiration(Ljava/lang/Integer;)V
+#getCount()Ljava/lang/Integer;
+#setCount(Ljava/lang/Integer;)V

+###org/keycloak/representations/idm/UserConsentRepresentation
@1.2.0.CR1
+#<init>()V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getGrantedProtocolMappers()Ljava/util/Map;
+#setGrantedProtocolMappers(Ljava/util/Map;)V
+#getGrantedRealmRoles()Ljava/util/List;
+#setGrantedRealmRoles(Ljava/util/List;)V
+#getGrantedClientRoles()Ljava/util/Map;
+#setGrantedClientRoles(Ljava/util/Map;)V
@2.3.0.CR1
+#setCreatedDate(Ljava/lang/Long;)V
+#getCreatedDate()Ljava/lang/Long;
+#setLastUpdatedDate(Ljava/lang/Long;)V
+#getLastUpdatedDate()Ljava/lang/Long;
@4.0.0.Final
+#getGrantedClientScopes()Ljava/util/List;
+#setGrantedClientScopes(Ljava/util/List;)V
*#getGrantedRealmRoles()Ljava/util/List;[deprecated]
-#getGrantedProtocolMappers()Ljava/util/Map;
-#setGrantedProtocolMappers(Ljava/util/Map;)V
-#setGrantedRealmRoles(Ljava/util/List;)V
-#getGrantedClientRoles()Ljava/util/Map;
-#setGrantedClientRoles(Ljava/util/Map;)V

+###org/keycloak/representations/idm/ComponentRepresentation
@2.1.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getProviderId()Ljava/lang/String;
+#setProviderId(Ljava/lang/String;)V
+#getProviderType()Ljava/lang/String;
+#setProviderType(Ljava/lang/String;)V
+#getParentId()Ljava/lang/String;
+#setParentId(Ljava/lang/String;)V
+#getConfig()Lorg/keycloak/common/util/MultivaluedHashMap;
+#setConfig(Lorg/keycloak/common/util/MultivaluedHashMap;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.3.0.CR1
+#getSubType()Ljava/lang/String;
+#setSubType(Ljava/lang/String;)V

+###org/keycloak/representations/idm/AuthDetailsRepresentation
@1.9.0.Final
+#<init>()V
+#getRealmId()Ljava/lang/String;
+#setRealmId(Ljava/lang/String;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getUserId()Ljava/lang/String;
+#setUserId(Ljava/lang/String;)V
+#getIpAddress()Ljava/lang/String;
+#setIpAddress(Ljava/lang/String;)V

+###org/keycloak/representations/idm/RolesRepresentation
@1.0-alpha-2
+#<init>()V
+#getRealm()Ljava/util/List;
+#setRealm(Ljava/util/List;)V
+#getApplication()Ljava/util/Map;
+#setApplication(Ljava/util/Map;)V
@1.2.0.CR1
+#getClient()Ljava/util/Map;
+#setClient(Ljava/util/Map;)V
*#getApplication()Ljava/util/Map;[deprecated]
-#setApplication(Ljava/util/Map;)V

+###org/keycloak/crypto/KeyWrapper
@4.1.0.Final
+#<init>()V
+#getProviderId()Ljava/lang/String;
+#setProviderId(Ljava/lang/String;)V
+#getProviderPriority()J
+#setProviderPriority(J)V
+#getKid()Ljava/lang/String;
+#setKid(Ljava/lang/String;)V
+#getAlgorithms()Ljava/util/Set;
+#setAlgorithms([Ljava/lang/String;)V
+#setAlgorithms(Ljava/util/Set;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getUse()Lorg/keycloak/crypto/KeyUse;
+#setUse(Lorg/keycloak/crypto/KeyUse;)V
+#getStatus()Lorg/keycloak/crypto/KeyStatus;
+#setStatus(Lorg/keycloak/crypto/KeyStatus;)V
+#getSecretKey()Ljavax/crypto/SecretKey;
+#setSecretKey(Ljavax/crypto/SecretKey;)V
+#getSignKey()Ljava/security/Key;
+#setSignKey(Ljava/security/Key;)V
+#getVerifyKey()Ljava/security/Key;
+#setVerifyKey(Ljava/security/Key;)V
+#getCertificate()Ljava/security/cert/X509Certificate;
+#setCertificate(Ljava/security/cert/X509Certificate;)V
@4.5.0.Final
+#getAlgorithm()Ljava/lang/String;
+#setAlgorithm(Ljava/lang/String;)V
-#getAlgorithms()Ljava/util/Set;
-#setAlgorithms([Ljava/lang/String;)V
-#setAlgorithms(Ljava/util/Set;)V
@7.0.0
+#getPrivateKey()Ljava/security/Key;
+#setPrivateKey(Ljava/security/Key;)V
+#getPublicKey()Ljava/security/Key;
+#setPublicKey(Ljava/security/Key;)V
-#getSignKey()Ljava/security/Key;
-#setSignKey(Ljava/security/Key;)V
-#getVerifyKey()Ljava/security/Key;
-#setVerifyKey(Ljava/security/Key;)V
@13.0.0
+#getCertificateChain()Ljava/util/List;
+#setCertificateChain(Ljava/util/List;)V
@15.0.0
+#getAlgorithmOrDefault()Ljava/lang/String;
@19.0.0
+#cloneKey()Lorg/keycloak/crypto/KeyWrapper;

+###org/keycloak/Config$SystemPropertiesScope
@1.0-beta-1
+#<init>(Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getArray(Ljava/lang/String;)[Ljava/lang/String;
+#getInt(Ljava/lang/String;)Ljava/lang/Integer;
+#getInt(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
+#getLong(Ljava/lang/String;)Ljava/lang/Long;
+#getLong(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;
+#getBoolean(Ljava/lang/String;)Ljava/lang/Boolean;
+#getBoolean(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;
@1.1.0.Beta1
+#scope([Ljava/lang/String;)Lorg/keycloak/Config$Scope;
@15.1.0
+#getPropertyNames()Ljava/util/Set;

+###org/keycloak/TokenVerifier$TokenTypeCheck
@3.2.0.CR1
+#<init>(Ljava/lang/String;)V
+#test(Lorg/keycloak/representations/JsonWebToken;)Z

+###org/keycloak/jose/jws/AlgorithmType
@2.5.0.CR1
+#values()[Lorg/keycloak/jose/jws/AlgorithmType;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/jose/jws/AlgorithmType;

+###org/keycloak/jose/jwe/JWEUtils
@3.4.0.CR1
+#generateSecret(I)[B

+###org/keycloak/representations/adapters/config/PolicyEnforcerConfig
@2.0.0.CR1
+#<init>()V
+#isCreateResources()Ljava/lang/Boolean;
+#getPaths()Ljava/util/List;
+#getEnforcementMode()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EnforcementMode;
+#setEnforcementMode(Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EnforcementMode;)V
+#getUmaProtocolConfig()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$UmaProtocolConfig;
+#getEntitlementProtocolConfig()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EntitlementProtocolConfig;
+#isOnlineIntrospection()Ljava/lang/Boolean;
+#setPaths(Ljava/util/List;)V
+#getAccessDeniedPath()Ljava/lang/String;
@2.1.0.CR1
+#setCreateResources(Ljava/lang/Boolean;)V
+#setOnlineIntrospection(Ljava/lang/Boolean;)V
@2.4.0.CR1
+#getUserManagedAccess()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$UmaProtocolConfig;
+#getEntitlement()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EntitlementProtocolConfig;
+#getOnDenyRedirectTo()Ljava/lang/String;
+#setUserManagedAccess(Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$UmaProtocolConfig;)V
+#setEntitlement(Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EntitlementProtocolConfig;)V
+#setOnDenyRedirectTo(Ljava/lang/String;)V
-#getUmaProtocolConfig()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$UmaProtocolConfig;
-#getEntitlementProtocolConfig()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EntitlementProtocolConfig;
-#getAccessDeniedPath()Ljava/lang/String;
@4.0.0.Beta1
+#getUserManagedAccess()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$UserManagedAccessConfig;
+#setUserManagedAccess(Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$UserManagedAccessConfig;)V
-#getUserManagedAccess()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$UmaProtocolConfig;
-#getEntitlement()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EntitlementProtocolConfig;
-#isOnlineIntrospection()Ljava/lang/Boolean;
-#setOnlineIntrospection(Ljava/lang/Boolean;)V
-#setUserManagedAccess(Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$UmaProtocolConfig;)V
-#setEntitlement(Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EntitlementProtocolConfig;)V
@4.0.0.Beta2
+#getPathCacheConfig()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathCacheConfig;
+#getLazyLoadPaths()Ljava/lang/Boolean;
+#setLazyLoadPaths(Ljava/lang/Boolean;)V
+#setPathCacheConfig(Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathCacheConfig;)V
-#isCreateResources()Ljava/lang/Boolean;
-#setCreateResources(Ljava/lang/Boolean;)V
@4.0.0.Final
+#getClaimInformationPointConfig()Ljava/util/Map;
+#setClaimInformationPointConfig(Ljava/util/Map;)V
@4.6.0.Final
+#getHttpMethodAsScope()Ljava/lang/Boolean;
+#setHttpMethodAsScope(Ljava/lang/Boolean;)V

+###org/keycloak/representations/idm/PartialImportRepresentation$Policy
@1.8.0.CR1
+#values()[Lorg/keycloak/representations/idm/PartialImportRepresentation$Policy;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/representations/idm/PartialImportRepresentation$Policy;

+###org/keycloak/representations/idm/RoleRepresentation
@1.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
@1.0-alpha-2
+#getComposites()Lorg/keycloak/representations/idm/RoleRepresentation$Composites;
+#setComposites(Lorg/keycloak/representations/idm/RoleRepresentation$Composites;)V
+#toString()Ljava/lang/String;
+#isComposite()Z
+#setComposite(Z)V
@1.6.0.Final
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#isScopeParamRequired()Ljava/lang/Boolean;
+#setScopeParamRequired(Ljava/lang/Boolean;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
@2.1.0.CR1
+#getClientRole()Ljava/lang/Boolean;
+#setClientRole(Ljava/lang/Boolean;)V
+#getContainerId()Ljava/lang/String;
+#setContainerId(Ljava/lang/String;)V
@4.0.0.Final
*#isScopeParamRequired()Ljava/lang/Boolean;[deprecated]
-#setScopeParamRequired(Ljava/lang/Boolean;)V
@4.6.0.Final
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V
+#singleAttribute(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/RoleRepresentation;
@13.0.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/keycloak/representations/idm/authorization/GroupPolicyRepresentation
@3.2.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;
+#getGroupsClaim()Ljava/lang/String;
+#setGroupsClaim(Ljava/lang/String;)V
+#getGroups()Ljava/util/Set;
+#setGroups(Ljava/util/Set;)V
+#addGroup([Ljava/lang/String;)V
+#addGroup(Ljava/lang/String;Z)V
+#addGroupPath([Ljava/lang/String;)V
+#addGroupPath(Ljava/lang/String;Z)V
+#removeGroup([Ljava/lang/String;)V

+###org/keycloak/representations/idm/authorization/UserPolicyRepresentation
@3.1.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;
+#getUsers()Ljava/util/Set;
+#setUsers(Ljava/util/Set;)V
+#addUser(Ljava/lang/String;)V

+###org/keycloak/representations/idm/authorization/Permission
@2.1.0.CR1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V
+#getResourceSetId()Ljava/lang/String;
+#getResourceSetName()Ljava/lang/String;
+#getScopes()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#setScopes(Ljava/util/Set;)V
@3.4.1.CR1
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;)V
+#getClaims()Ljava/util/Map;
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V
@4.0.0.Beta1
+#getResourceId()Ljava/lang/String;
+#getResourceName()Ljava/lang/String;
-#getResourceSetId()Ljava/lang/String;
-#getResourceSetName()Ljava/lang/String;
@4.0.0.Beta2
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.2.0.Final
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#setResourceId(Ljava/lang/String;)V
+#setResourceName(Ljava/lang/String;)V

+###org/keycloak/representations/idm/authorization/PolicyEvaluationResponse$PolicyResultRepresentation
@3.1.0.CR1
+#<init>()V
+#getPolicy()Lorg/keycloak/representations/idm/authorization/PolicyRepresentation;
+#setPolicy(Lorg/keycloak/representations/idm/authorization/PolicyRepresentation;)V
+#getStatus()Lorg/keycloak/representations/idm/authorization/DecisionEffect;
+#setStatus(Lorg/keycloak/representations/idm/authorization/DecisionEffect;)V
+#getAssociatedPolicies()Ljava/util/List;
+#setAssociatedPolicies(Ljava/util/List;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#setScopes(Ljava/util/List;)V
+#getScopes()Ljava/util/List;
@3.2.0.CR1
+#setScopes(Ljava/util/Set;)V
+#getScopes()Ljava/util/Set;
-#setScopes(Ljava/util/List;)V
-#getScopes()Ljava/util/List;

+###org/keycloak/representations/idm/authorization/ResourceOwnerRepresentation
@2.1.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
@4.0.0.Beta1
+#<init>(Ljava/lang/String;)V

+###org/keycloak/representations/idm/authorization/PermissionResponse
@4.0.0.Beta1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#getTicket()Ljava/lang/String;

+###org/keycloak/representations/idm/RoleRepresentation$Composites
@1.0-alpha-2
+#<init>()V
+#getRealm()Ljava/util/Set;
+#setRealm(Ljava/util/Set;)V
+#getApplication()Ljava/util/Map;
+#setApplication(Ljava/util/Map;)V
@1.2.0.CR1
+#getClient()Ljava/util/Map;
+#setClient(Ljava/util/Map;)V
*#getApplication()Ljava/util/Map;[deprecated]
-#setApplication(Ljava/util/Map;)V

+###org/keycloak/representations/idm/ClientRepresentation
@1.2.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#isEnabled()Ljava/lang/Boolean;
+#setEnabled(Ljava/lang/Boolean;)V
+#isSurrogateAuthRequired()Ljava/lang/Boolean;
+#setSurrogateAuthRequired(Ljava/lang/Boolean;)V
+#getAdminUrl()Ljava/lang/String;
+#setAdminUrl(Ljava/lang/String;)V
+#getBaseUrl()Ljava/lang/String;
+#setBaseUrl(Ljava/lang/String;)V
+#getSecret()Ljava/lang/String;
+#setSecret(Ljava/lang/String;)V
+#getRedirectUris()Ljava/util/List;
+#setRedirectUris(Ljava/util/List;)V
+#getWebOrigins()Ljava/util/List;
+#setWebOrigins(Ljava/util/List;)V
+#getDefaultRoles()[Ljava/lang/String;
+#setDefaultRoles([Ljava/lang/String;)V
+#getNotBefore()Ljava/lang/Integer;
+#setNotBefore(Ljava/lang/Integer;)V
+#isBearerOnly()Ljava/lang/Boolean;
+#setBearerOnly(Ljava/lang/Boolean;)V
+#isConsentRequired()Ljava/lang/Boolean;
+#setConsentRequired(Ljava/lang/Boolean;)V
+#isDirectGrantsOnly()Ljava/lang/Boolean;
+#setDirectGrantsOnly(Ljava/lang/Boolean;)V
+#isPublicClient()Ljava/lang/Boolean;
+#setPublicClient(Ljava/lang/Boolean;)V
+#isFullScopeAllowed()Ljava/lang/Boolean;
+#setFullScopeAllowed(Ljava/lang/Boolean;)V
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V
+#getNodeReRegistrationTimeout()Ljava/lang/Integer;
+#setNodeReRegistrationTimeout(Ljava/lang/Integer;)V
+#getRegisteredNodes()Ljava/util/Map;
+#setRegisteredNodes(Ljava/util/Map;)V
+#isFrontchannelLogout()Ljava/lang/Boolean;
+#setFrontchannelLogout(Ljava/lang/Boolean;)V
+#getProtocolMappers()Ljava/util/List;
+#setProtocolMappers(Ljava/util/List;)V
@1.4.0.Final
+#isServiceAccountsEnabled()Ljava/lang/Boolean;
+#setServiceAccountsEnabled(Ljava/lang/Boolean;)V
@1.5.0-Final
+#getClientAuthenticatorType()Ljava/lang/String;
+#setClientAuthenticatorType(Ljava/lang/String;)V
@1.6.0.Final
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getRootUrl()Ljava/lang/String;
+#setRootUrl(Ljava/lang/String;)V
@1.7.0.CR1
+#getRegistrationAccessToken()Ljava/lang/String;
+#setRegistrationAccessToken(Ljava/lang/String;)V
+#isStandardFlowEnabled()Ljava/lang/Boolean;
+#setStandardFlowEnabled(Ljava/lang/Boolean;)V
+#isImplicitFlowEnabled()Ljava/lang/Boolean;
+#setImplicitFlowEnabled(Ljava/lang/Boolean;)V
+#isDirectAccessGrantsEnabled()Ljava/lang/Boolean;
+#setDirectAccessGrantsEnabled(Ljava/lang/Boolean;)V
*#isDirectGrantsOnly()Ljava/lang/Boolean;[deprecated]
@1.8.0.Alpha1
+#getClientTemplate()Ljava/lang/String;
+#setClientTemplate(Ljava/lang/String;)V
@1.8.0.CR1
+#isUseTemplateConfig()Ljava/lang/Boolean;
+#setUseTemplateConfig(Ljava/lang/Boolean;)V
+#isUseTemplateScope()Ljava/lang/Boolean;
+#setUseTemplateScope(Ljava/lang/Boolean;)V
+#isUseTemplateMappers()Ljava/lang/Boolean;
+#setUseTemplateMappers(Ljava/lang/Boolean;)V
@2.0.0.CR1
+#getAuthorizationServicesEnabled()Ljava/lang/Boolean;
+#setAuthorizationServicesEnabled(Ljava/lang/Boolean;)V
@2.2.0.CR1
+#getAuthorizationSettings()Lorg/keycloak/representations/idm/authorization/ResourceServerRepresentation;
+#setAuthorizationSettings(Lorg/keycloak/representations/idm/authorization/ResourceServerRepresentation;)V
@3.2.0.CR1
+#getAccess()Ljava/util/Map;
+#setAccess(Ljava/util/Map;)V
@4.0.0.Beta1
+#getAuthenticationFlowBindingOverrides()Ljava/util/Map;
+#setAuthenticationFlowBindingOverrides(Ljava/util/Map;)V
+#getOrigin()Ljava/lang/String;
+#setOrigin(Ljava/lang/String;)V
@4.0.0.Final
*#getClientTemplate()Ljava/lang/String;[deprecated]
*#isUseTemplateConfig()Ljava/lang/Boolean;[deprecated]
*#isUseTemplateScope()Ljava/lang/Boolean;[deprecated]
*#isUseTemplateMappers()Ljava/lang/Boolean;[deprecated]
+#getDefaultClientScopes()Ljava/util/List;
+#setDefaultClientScopes(Ljava/util/List;)V
+#getOptionalClientScopes()Ljava/util/List;
+#setOptionalClientScopes(Ljava/util/List;)V
-#setClientTemplate(Ljava/lang/String;)V
-#setUseTemplateConfig(Ljava/lang/Boolean;)V
-#setUseTemplateScope(Ljava/lang/Boolean;)V
-#setUseTemplateMappers(Ljava/lang/Boolean;)V
@9.0.0
+#isAlwaysDisplayInConsole()Ljava/lang/Boolean;
+#setAlwaysDisplayInConsole(Ljava/lang/Boolean;)V
@13.0.0
*#getDefaultRoles()[Ljava/lang/String;[deprecated]
*#setDefaultRoles([Ljava/lang/String;)V[deprecated]

+###org/keycloak/representations/idm/AbstractAuthenticationExecutionRepresentation
@1.9.0.Final
+#<init>()V
+#getAuthenticatorConfig()Ljava/lang/String;
+#setAuthenticatorConfig(Ljava/lang/String;)V
+#getAuthenticator()Ljava/lang/String;
+#setAuthenticator(Ljava/lang/String;)V
+#getRequirement()Ljava/lang/String;
+#setRequirement(Ljava/lang/String;)V
+#getPriority()I
+#setPriority(I)V
+#isAutheticatorFlow()Z
+#setAutheticatorFlow(Z)V
@13.0.0
*#isAutheticatorFlow()Z[deprecated]
*#setAutheticatorFlow(Z)V[deprecated]
+#isAuthenticatorFlow()Z
+#setAuthenticatorFlow(Z)V

+###org/keycloak/representations/idm/AuthenticatorConfigRepresentation
@1.4.0.Final
+#<init>()V
+#getAlias()Ljava/lang/String;
+#setAlias(Ljava/lang/String;)V
+#getConfig()Ljava/util/Map;
+#setConfig(Ljava/util/Map;)V
@1.9.2.Final
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V

+###org/keycloak/representations/idm/FederatedIdentityRepresentation
@1.2.0.Beta1
+#<init>()V
+#getIdentityProvider()Ljava/lang/String;
+#setIdentityProvider(Ljava/lang/String;)V
+#getUserId()Ljava/lang/String;
+#setUserId(Ljava/lang/String;)V
+#getUserName()Ljava/lang/String;
+#setUserName(Ljava/lang/String;)V

+###org/keycloak/representations/idm/ConfigPropertyRepresentation
@1.2.0.CR1
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getLabel()Ljava/lang/String;
+#setLabel(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getDefaultValue()Ljava/lang/Object;
+#setDefaultValue(Ljava/lang/Object;)V
+#getHelpText()Ljava/lang/String;
+#setHelpText(Ljava/lang/String;)V
@2.3.0.CR1
+#getOptions()Ljava/util/List;
+#setOptions(Ljava/util/List;)V
+#isSecret()Z
+#setSecret(Z)V
@18.0.0
+#setReadOnly(Z)V
+#isReadOnly()Z

+###org/keycloak/representations/idm/ClientScopeRepresentation
@4.0.0.Final
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getProtocolMappers()Ljava/util/List;
+#setProtocolMappers(Ljava/util/List;)V
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V

+###org/keycloak/representations/idm/RequiredActionProviderSimpleRepresentation
@1.9.4.Final
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getProviderId()Ljava/lang/String;
+#setProviderId(Ljava/lang/String;)V
@1.9.5.Final
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V

+###org/keycloak/representations/idm/UserFederationMapperSyncConfigRepresentation
@1.8.0.CR1
+#<init>()V
+#<init>(ZLjava/lang/String;ZLjava/lang/String;)V
+#isFedToKeycloakSyncSupported()Ljava/lang/Boolean;
+#setFedToKeycloakSyncSupported(Ljava/lang/Boolean;)V
+#getFedToKeycloakSyncMessage()Ljava/lang/String;
+#setFedToKeycloakSyncMessage(Ljava/lang/String;)V
+#isKeycloakToFedSyncSupported()Ljava/lang/Boolean;
+#setKeycloakToFedSyncSupported(Ljava/lang/Boolean;)V
+#getKeycloakToFedSyncMessage()Ljava/lang/String;
+#setKeycloakToFedSyncMessage(Ljava/lang/String;)V

+###org/keycloak/representations/provider/ScriptProviderMetadata
@7.0.1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getFileName()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#getCode()Ljava/lang/String;
+#setCode(Ljava/lang/String;)V
@13.0.0
+#setFileName(Ljava/lang/String;)V
+#setDescription(Ljava/lang/String;)V

+###org/keycloak/representations/AccessToken$Access
@1.0-alpha-3
+#<init>()V
+#clone()Lorg/keycloak/representations/AccessToken$Access;
+#getRoles()Ljava/util/Set;
+#roles(Ljava/util/Set;)Lorg/keycloak/representations/AccessToken$Access;
+#isUserInRole(Ljava/lang/String;)Z
+#addRole(Ljava/lang/String;)Lorg/keycloak/representations/AccessToken$Access;
+#getVerifyCaller()Ljava/lang/Boolean;
+#verifyCaller(Ljava/lang/Boolean;)Lorg/keycloak/representations/AccessToken$Access;
+#clone()Ljava/lang/Object;

+###org/keycloak/representations/JsonWebToken
@1.0-alpha-1
+#<init>()V
+#getId()Ljava/lang/String;
+#id(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#getExpiration()J
+#expiration(J)Lorg/keycloak/representations/JsonWebToken;
+#isExpired()Z
+#getNotBefore()J
+#notBefore(J)Lorg/keycloak/representations/JsonWebToken;
+#isNotBefore()Z
+#isActive()Z
+#getIssuedAt()J
+#issuedNow()Lorg/keycloak/representations/JsonWebToken;
+#issuedAt(J)Lorg/keycloak/representations/JsonWebToken;
+#getIssuer()Ljava/lang/String;
+#issuer(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#getAudience()Ljava/lang/String;
+#audience(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#getSubject()Ljava/lang/String;
+#principal(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#getType()Ljava/lang/String;
+#type(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
@1.0-alpha-1-12062013
-###org/keycloak/representations/JsonWebToken

+###org/keycloak/representations/AccessTokenResponse
@1.0-alpha-1
+#<init>()V
+#getToken()Ljava/lang/String;
+#setToken(Ljava/lang/String;)V
+#getExpiresIn()J
+#setExpiresIn(J)V
+#getRefreshToken()Ljava/lang/String;
+#setRefreshToken(Ljava/lang/String;)V
+#getTokenType()Ljava/lang/String;
+#setTokenType(Ljava/lang/String;)V
@1.0-alpha-3
+#getIdToken()Ljava/lang/String;
+#setIdToken(Ljava/lang/String;)V
+#getNotBeforePolicy()I
+#setNotBeforePolicy(I)V
@1.0-beta-1
+#getSessionState()Ljava/lang/String;
+#setSessionState(Ljava/lang/String;)V
@1.0-beta-1-20150521
-#getSessionState()Ljava/lang/String;
-#setSessionState(Ljava/lang/String;)V
@1.0-beta-2
+#getSessionState()Ljava/lang/String;
+#setSessionState(Ljava/lang/String;)V
@1.1.0.Final
+#getRefreshExpiresIn()J
+#setRefreshExpiresIn(J)V
@1.2.0.Beta1
+#getOtherClaims()Ljava/util/Map;
+#setOtherClaims(Ljava/lang/String;Ljava/lang/Object;)V
@3.4.0.CR1
+#getScope()Ljava/lang/String;
+#setScope(Ljava/lang/String;)V
@14.0.0
+#getError()Ljava/lang/String;
+#setError(Ljava/lang/String;)V
+#getErrorDescription()Ljava/lang/String;
+#setErrorDescription(Ljava/lang/String;)V
+#getErrorUri()Ljava/lang/String;
+#setErrorUri(Ljava/lang/String;)V

+###org/keycloak/representations/docker/DockerAccess
@3.2.0.CR1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)Lorg/keycloak/representations/docker/DockerAccess;
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)Lorg/keycloak/representations/docker/DockerAccess;
+#getActions()Ljava/util/List;
+#setActions(Ljava/util/List;)Lorg/keycloak/representations/docker/DockerAccess;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/keycloak/representations/docker/DockerResponse
@3.2.0.CR1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)V
+#getToken()Ljava/lang/String;
+#setToken(Ljava/lang/String;)Lorg/keycloak/representations/docker/DockerResponse;
+#getExpires_in()Ljava/lang/Integer;
+#setExpires_in(Ljava/lang/Integer;)Lorg/keycloak/representations/docker/DockerResponse;
+#getIssued_at()Ljava/lang/String;
+#setIssued_at(Ljava/lang/String;)Lorg/keycloak/representations/docker/DockerResponse;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/keycloak/OAuthErrorException
@1.0-alpha-3
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getError()Ljava/lang/String;
+#setError(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V

+###org/keycloak/AbstractOAuthClient
@1.0-alpha-1
+#<init>()V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getTruststore()Ljava/security/KeyStore;
+#setTruststore(Ljava/security/KeyStore;)V
+#getAuthUrl()Ljava/lang/String;
+#setAuthUrl(Ljava/lang/String;)V
+#getCodeUrl()Ljava/lang/String;
+#setCodeUrl(Ljava/lang/String;)V
+#getScope()Ljava/lang/String;
+#setScope(Ljava/lang/String;)V
+#getStateCookieName()Ljava/lang/String;
+#setStateCookieName(Ljava/lang/String;)V
+#getStateCookiePath()Ljava/lang/String;
+#setStateCookiePath(Ljava/lang/String;)V
@1.0-alpha-1-12062013
+#start()V
+#stop()V
+#getClient()Ljavax/ws/rs/client/Client;
+#setClient(Ljavax/ws/rs/client/Client;)V
+#resolveBearerToken(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#getScope()Ljava/lang/String;
-#setScope(Ljava/lang/String;)V
@1.0-alpha-2
+#getCredentials()Ljava/util/Map;
+#setCredentials(Ljava/util/Map;)V
+#getScope()Ljava/lang/String;
+#setScope(Ljava/lang/String;)V
-#start()V
-#stop()V
-#getPassword()Ljava/lang/String;
-#setPassword(Ljava/lang/String;)V
-#getClient()Ljavax/ws/rs/client/Client;
-#setClient(Ljavax/ws/rs/client/Client;)V
-#resolveBearerToken(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.0-alpha-3
+#getRefreshUrl()Ljava/lang/String;
+#setRefreshUrl(Ljava/lang/String;)V
+#isPublicClient()Z
+#setPublicClient(Z)V
-#getTruststore()Ljava/security/KeyStore;
-#setTruststore(Ljava/security/KeyStore;)V
@1.0-beta-4
+#isRelativeUrls()Z
+#setRelativeUrls(Z)V
@1.1.0.Beta1
+#getRelativeUrlsUsed()Lorg/keycloak/enums/RelativeUrlsUsed;
+#setRelativeUrlsUsed(Lorg/keycloak/enums/RelativeUrlsUsed;)V
-#isRelativeUrls()Z
-#setRelativeUrls(Z)V
@1.2.0.Beta1
+#getTokenUrl()Ljava/lang/String;
+#setTokenUrl(Ljava/lang/String;)V
-#getCodeUrl()Ljava/lang/String;
-#setCodeUrl(Ljava/lang/String;)V
-#getRefreshUrl()Ljava/lang/String;
-#setRefreshUrl(Ljava/lang/String;)V
@1.6.0.Final
+#getRelativeUrlsUsed()Lorg/keycloak/common/enums/RelativeUrlsUsed;
+#setRelativeUrlsUsed(Lorg/keycloak/common/enums/RelativeUrlsUsed;)V
-#getRelativeUrlsUsed()Lorg/keycloak/enums/RelativeUrlsUsed;
-#setRelativeUrlsUsed(Lorg/keycloak/enums/RelativeUrlsUsed;)V
@1.9.1.Final
+#isSecure()Z
+#setSecure(Z)V

+###org/keycloak/crypto/KeyType
@4.1.0.Final

+###org/keycloak/Token
@4.5.0.Final
+#getCategory()Lorg/keycloak/TokenCategory;

+###org/keycloak/RSATokenVerifier
@1.0-alpha-1
+#<init>()V
+#verifyToken(Ljava/lang/String;Ljava/security/PublicKey;Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken;
@1.0-alpha-1-12062013
+#verifyToken(Ljava/lang/String;Lorg/keycloak/ResourceMetadata;)Lorg/keycloak/representations/SkeletonKeyToken;
@1.0-alpha-2
-#verifyToken(Ljava/lang/String;Lorg/keycloak/ResourceMetadata;)Lorg/keycloak/representations/SkeletonKeyToken;
@1.0-alpha-3
+#verifyToken(Ljava/lang/String;Ljava/security/PublicKey;Ljava/lang/String;)Lorg/keycloak/representations/AccessToken;
+#verifyToken(Ljava/lang/String;Ljava/security/PublicKey;Ljava/lang/String;Z)Lorg/keycloak/representations/AccessToken;
-#verifyToken(Ljava/lang/String;Ljava/security/PublicKey;Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken;
@1.6.0.Final
+#verifyToken(Ljava/lang/String;Ljava/security/PublicKey;Ljava/lang/String;ZZ)Lorg/keycloak/representations/AccessToken;
-#verifyToken(Ljava/lang/String;Ljava/security/PublicKey;Ljava/lang/String;Z)Lorg/keycloak/representations/AccessToken;
@1.8.0.CR1
+#toAccessToken(Ljava/lang/String;Ljava/security/PublicKey;)Lorg/keycloak/representations/AccessToken;
@2.3.0.CR1
+#create(Ljava/lang/String;)Lorg/keycloak/RSATokenVerifier;
+#publicKey(Ljava/security/PublicKey;)Lorg/keycloak/RSATokenVerifier;
+#realmUrl(Ljava/lang/String;)Lorg/keycloak/RSATokenVerifier;
+#checkTokenType(Z)Lorg/keycloak/RSATokenVerifier;
+#checkActive(Z)Lorg/keycloak/RSATokenVerifier;
+#checkRealmUrl(Z)Lorg/keycloak/RSATokenVerifier;
+#parse()Lorg/keycloak/RSATokenVerifier;
+#getToken()Lorg/keycloak/representations/AccessToken;
+#getHeader()Lorg/keycloak/jose/jws/JWSHeader;
+#verify()Lorg/keycloak/RSATokenVerifier;
-#<init>()V
-#toAccessToken(Ljava/lang/String;Ljava/security/PublicKey;)Lorg/keycloak/representations/AccessToken;

+###org/keycloak/jose/jws/JWSBuilder$EncodingBuilder
@1.0-alpha-1
+#<init>(Lorg/keycloak/jose/jws/JWSBuilder;)V
+#none()Ljava/lang/String;
+#rsa256(Ljava/security/PrivateKey;)Ljava/lang/String;
+#rsa384(Ljava/security/PrivateKey;)Ljava/lang/String;
+#rsa512(Ljava/security/PrivateKey;)Ljava/lang/String;
+#hmac256([B)Ljava/lang/String;
+#hmac384([B)Ljava/lang/String;
+#hmac512([B)Ljava/lang/String;
+#hmac256(Ljavax/crypto/SecretKey;)Ljava/lang/String;
+#hmac384(Ljavax/crypto/SecretKey;)Ljava/lang/String;
+#hmac512(Ljavax/crypto/SecretKey;)Ljava/lang/String;
@1.0-alpha-1-12062013
-###org/keycloak/jose/jws/JWSBuilder$EncodingBuilder

+###org/keycloak/jose/jwe/enc/AesCbcHmacShaEncryptionProvider$Aes256CbcHmacSha512Provider
@3.4.0.CR1
+#<init>()V
+#getExpectedCEKLength()I

+###org/keycloak/representations/account/ConsentRepresentation
@7.0.0
+#<init>()V
+#<init>(Ljava/util/List;Ljava/lang/Long;Ljava/lang/Long;)V
+#getScopes()Ljava/util/List;
+#setScopes(Ljava/util/List;)V
+#getCreatedDate()Ljava/lang/Long;
+#setCreatedDate(Ljava/lang/Long;)V
+#getLastUpdatedDate()Ljava/lang/Long;
+#setLastUpdatedDate(Ljava/lang/Long;)V
@9.0.0
+#getGrantedScopes()Ljava/util/List;
+#setGrantedScopes(Ljava/util/List;)V
-#getScopes()Ljava/util/List;
-#setScopes(Ljava/util/List;)V

+###org/keycloak/representations/account/ClientRepresentation
@3.4.0.CR1
+#<init>()V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getClientName()Ljava/lang/String;
+#setClientName(Ljava/lang/String;)V
@9.0.0
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#isUserConsentRequired()Z
+#setUserConsentRequired(Z)V
+#isInUse()Z
+#setInUse(Z)V
+#isOfflineAccess()Z
+#setOfflineAccess(Z)V
+#getBaseUrl()Ljava/lang/String;
+#setBaseUrl(Ljava/lang/String;)V
+#getConsent()Lorg/keycloak/representations/account/ConsentRepresentation;
+#setConsent(Lorg/keycloak/representations/account/ConsentRepresentation;)V
@11.0.0
+#getRootUrl()Ljava/lang/String;
+#setRootUrl(Ljava/lang/String;)V
+#getEffectiveUrl()Ljava/lang/String;
+#setEffectiveUrl(Ljava/lang/String;)V
@15.1.0
+#getLogoUri()Ljava/lang/String;
+#setLogoUri(Ljava/lang/String;)V
+#getPolicyUri()Ljava/lang/String;
+#setPolicyUri(Ljava/lang/String;)V
+#getTosUri()Ljava/lang/String;
+#setTosUri(Ljava/lang/String;)V

+###org/keycloak/representations/account/ConsentScopeRepresentation
@7.0.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDisplayTest()Ljava/lang/String;
+#setDisplayTest(Ljava/lang/String;)V

+###org/keycloak/representations/info/MemoryInfoRepresentation
@1.7.0.CR1
+#<init>()V
+#create()Lorg/keycloak/representations/info/MemoryInfoRepresentation;
+#getTotal()J
+#getTotalFormated()Ljava/lang/String;
+#getFree()J
+#getFreeFormated()Ljava/lang/String;
+#getUsed()J
+#getUsedFormated()Ljava/lang/String;
+#getFreePercentage()J

+###org/keycloak/representations/info/SystemInfoRepresentation
@1.7.0.CR1
+#<init>()V
+#create(J)Lorg/keycloak/representations/info/SystemInfoRepresentation;
+#getVersion()Ljava/lang/String;
+#setVersion(Ljava/lang/String;)V
+#getServerTime()Ljava/lang/String;
+#setServerTime(Ljava/lang/String;)V
+#getUptime()Ljava/lang/String;
+#setUptime(Ljava/lang/String;)V
+#getUptimeMillis()J
+#setUptimeMillis(J)V
+#getJavaVersion()Ljava/lang/String;
+#setJavaVersion(Ljava/lang/String;)V
+#getJavaVendor()Ljava/lang/String;
+#setJavaVendor(Ljava/lang/String;)V
+#getJavaVm()Ljava/lang/String;
+#setJavaVm(Ljava/lang/String;)V
+#getJavaVmVersion()Ljava/lang/String;
+#setJavaVmVersion(Ljava/lang/String;)V
+#getJavaRuntime()Ljava/lang/String;
+#setJavaRuntime(Ljava/lang/String;)V
+#getJavaHome()Ljava/lang/String;
+#setJavaHome(Ljava/lang/String;)V
+#getOsName()Ljava/lang/String;
+#setOsName(Ljava/lang/String;)V
+#getOsArchitecture()Ljava/lang/String;
+#setOsArchitecture(Ljava/lang/String;)V
+#getOsVersion()Ljava/lang/String;
+#setOsVersion(Ljava/lang/String;)V
+#getFileEncoding()Ljava/lang/String;
+#setFileEncoding(Ljava/lang/String;)V
+#getUserName()Ljava/lang/String;
+#setUserName(Ljava/lang/String;)V
+#getUserDir()Ljava/lang/String;
+#setUserDir(Ljava/lang/String;)V
+#getUserTimezone()Ljava/lang/String;
+#setUserTimezone(Ljava/lang/String;)V
+#getUserLocale()Ljava/lang/String;
+#setUserLocale(Ljava/lang/String;)V

+###org/keycloak/representations/oidc/TokenMetadataRepresentation
@1.8.0.CR1
+#<init>()V
+#isActive()Z
+#setActive(Z)V
+#getUserName()Ljava/lang/String;
+#setUserName(Ljava/lang/String;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V

+###org/keycloak/representations/adapters/action/TestAvailabilityAction
@1.1.0.Beta1
+#<init>()V
+#<init>(Ljava/lang/String;ILjava/lang/String;)V
+#validate()Z

+###org/keycloak/representations/adapters/action/PushNotBeforeAction
@1.0-alpha-3
+#<init>()V
+#<init>(Ljava/lang/String;ILjava/lang/String;I)V
+#getNotBefore()I
+#setNotBefore(I)V
+#validate()Z

+###org/keycloak/representations/adapters/config/PolicyEnforcerConfig$UserManagedAccessConfig
@4.0.0.Beta1
+#<init>()V

+###org/keycloak/representations/adapters/config/PolicyEnforcerConfig$EnforcementMode
@2.0.0.CR1
+#values()[Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EnforcementMode;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EnforcementMode;

+###org/keycloak/representations/adapters/config/PolicyEnforcerConfig$ScopeEnforcementMode
@3.4.1.CR1
+#values()[Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$ScopeEnforcementMode;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$ScopeEnforcementMode;

+###org/keycloak/representations/idm/ErrorRepresentation
@1.0-alpha-1
+#<init>()V
+#getErrorMessage()Ljava/lang/String;
+#setErrorMessage(Ljava/lang/String;)V
@4.2.0.Final
+#getParams()[Ljava/lang/Object;
+#setParams([Ljava/lang/Object;)V
@14.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
+#getField()Ljava/lang/String;
+#setErrors(Ljava/util/List;)V
+#getErrors()Ljava/util/List;
@15.0.0
+#setField(Ljava/lang/String;)V

+###org/keycloak/representations/idm/ApplicationRepresentation
@1.0-alpha-1
+#<init>()V
+#getSelf()Ljava/lang/String;
+#setSelf(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#isEnabled()Z
+#setEnabled(Z)V
+#isSurrogateAuthRequired()Z
+#setSurrogateAuthRequired(Z)V
+#getRoles()Ljava/util/List;
+#setRoles(Ljava/util/List;)V
+#role(Lorg/keycloak/representations/idm/RoleRepresentation;)Lorg/keycloak/representations/idm/ApplicationRepresentation;
+#role(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/ApplicationRepresentation;
+#getAdminUrl()Ljava/lang/String;
+#setAdminUrl(Ljava/lang/String;)V
+#getBaseUrl()Ljava/lang/String;
+#setBaseUrl(Ljava/lang/String;)V
+#getCredentials()Ljava/util/List;
+#setCredentials(Ljava/util/List;)V
+#credential(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/ApplicationRepresentation;
+#getRedirectUris()Ljava/util/List;
+#setRedirectUris(Ljava/util/List;)V
+#getWebOrigins()Ljava/util/List;
+#setWebOrigins(Ljava/util/List;)V
+#getDefaultRoles()[Ljava/lang/String;
+#setDefaultRoles([Ljava/lang/String;)V
@1.0-alpha-2
-#getSelf()Ljava/lang/String;
-#setSelf(Ljava/lang/String;)V
-#getRoles()Ljava/util/List;
-#setRoles(Ljava/util/List;)V
-#role(Lorg/keycloak/representations/idm/RoleRepresentation;)Lorg/keycloak/representations/idm/ApplicationRepresentation;
-#role(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/ApplicationRepresentation;
@1.0-alpha-3
+#isEnabled()Ljava/lang/Boolean;
+#setEnabled(Ljava/lang/Boolean;)V
+#isSurrogateAuthRequired()Ljava/lang/Boolean;
+#setSurrogateAuthRequired(Ljava/lang/Boolean;)V
+#getSecret()Ljava/lang/String;
+#setSecret(Ljava/lang/String;)V
+#getClaims()Lorg/keycloak/representations/idm/ClaimRepresentation;
+#setClaims(Lorg/keycloak/representations/idm/ClaimRepresentation;)V
+#getNotBefore()Ljava/lang/Integer;
+#setNotBefore(Ljava/lang/Integer;)V
+#isBearerOnly()Ljava/lang/Boolean;
+#setBearerOnly(Ljava/lang/Boolean;)V
+#isPublicClient()Ljava/lang/Boolean;
+#setPublicClient(Ljava/lang/Boolean;)V
-#isEnabled()Z
-#setEnabled(Z)V
-#isSurrogateAuthRequired()Z
-#setSurrogateAuthRequired(Z)V
-#getCredentials()Ljava/util/List;
-#setCredentials(Ljava/util/List;)V
-#credential(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/ApplicationRepresentation;
@1.0-beta-4
+#isFullScopeAllowed()Ljava/lang/Boolean;
+#setFullScopeAllowed(Ljava/lang/Boolean;)V
@1.1.0.Beta1
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V
+#getNodeReRegistrationTimeout()Ljava/lang/Integer;
+#setNodeReRegistrationTimeout(Ljava/lang/Integer;)V
+#getRegisteredNodes()Ljava/util/Map;
+#setRegisteredNodes(Ljava/util/Map;)V
@1.2.0.Beta1
+#isFrontchannelLogout()Ljava/lang/Boolean;
+#setFrontchannelLogout(Ljava/lang/Boolean;)V
+#getIdentityProviders()Ljava/util/List;
+#setIdentityProviders(Ljava/util/List;)V
+#getProtocolMappers()Ljava/util/List;
+#setProtocolMappers(Ljava/util/List;)V
@1.2.0.CR1
-#getId()Ljava/lang/String;
-#setId(Ljava/lang/String;)V
-#isEnabled()Ljava/lang/Boolean;
-#setEnabled(Ljava/lang/Boolean;)V
-#isSurrogateAuthRequired()Ljava/lang/Boolean;
-#setSurrogateAuthRequired(Ljava/lang/Boolean;)V
-#getAdminUrl()Ljava/lang/String;
-#setAdminUrl(Ljava/lang/String;)V
-#getBaseUrl()Ljava/lang/String;
-#setBaseUrl(Ljava/lang/String;)V
-#getSecret()Ljava/lang/String;
-#setSecret(Ljava/lang/String;)V
-#getRedirectUris()Ljava/util/List;
-#setRedirectUris(Ljava/util/List;)V
-#getWebOrigins()Ljava/util/List;
-#setWebOrigins(Ljava/util/List;)V
-#getDefaultRoles()[Ljava/lang/String;
-#setDefaultRoles([Ljava/lang/String;)V
-#getNotBefore()Ljava/lang/Integer;
-#setNotBefore(Ljava/lang/Integer;)V
-#isBearerOnly()Ljava/lang/Boolean;
-#setBearerOnly(Ljava/lang/Boolean;)V
-#isPublicClient()Ljava/lang/Boolean;
-#setPublicClient(Ljava/lang/Boolean;)V
-#isFullScopeAllowed()Ljava/lang/Boolean;
-#setFullScopeAllowed(Ljava/lang/Boolean;)V
-#getProtocol()Ljava/lang/String;
-#setProtocol(Ljava/lang/String;)V
-#getAttributes()Ljava/util/Map;
-#setAttributes(Ljava/util/Map;)V
-#getNodeReRegistrationTimeout()Ljava/lang/Integer;
-#setNodeReRegistrationTimeout(Ljava/lang/Integer;)V
-#getRegisteredNodes()Ljava/util/Map;
-#setRegisteredNodes(Ljava/util/Map;)V
-#isFrontchannelLogout()Ljava/lang/Boolean;
-#setFrontchannelLogout(Ljava/lang/Boolean;)V
-#getIdentityProviders()Ljava/util/List;
-#setIdentityProviders(Ljava/util/List;)V
-#getProtocolMappers()Ljava/util/List;
-#setProtocolMappers(Ljava/util/List;)V

+###org/keycloak/representations/idm/CertificateRepresentation
@1.5.0-Final
+#<init>()V
+#getPrivateKey()Ljava/lang/String;
+#setPrivateKey(Ljava/lang/String;)V
+#getCertificate()Ljava/lang/String;
+#setCertificate(Ljava/lang/String;)V
@2.2.0.CR1
+#getPublicKey()Ljava/lang/String;
+#setPublicKey(Ljava/lang/String;)V
@2.3.0.CR1
+#getKid()Ljava/lang/String;
+#setKid(Ljava/lang/String;)V

+###org/keycloak/representations/idm/ManagementPermissionRepresentation
@4.6.0.Final
+#<init>(Z)V
+#isEnabled()Z

+###org/keycloak/crypto/Algorithm
@4.1.0.Final

+###org/keycloak/jose/jwk/RSAPublicJWK
@1.2.0.Beta1
+#<init>()V
+#getModulus()Ljava/lang/String;
+#setModulus(Ljava/lang/String;)V
+#getPublicExponent()Ljava/lang/String;
+#setPublicExponent(Ljava/lang/String;)V
@6.0.0
+#getX509CertificateChain()[Ljava/lang/String;
+#setX509CertificateChain([Ljava/lang/String;)V
+#getSha1x509Thumbprint()Ljava/lang/String;
+#getSha256x509Thumbprint()Ljava/lang/String;

+###org/keycloak/jose/jws/crypto/RSAProvider
@1.0-alpha-1
+#<init>()V
+#getJavaAlgorithm(Lorg/keycloak/jose/jws/Algorithm;)Ljava/lang/String;
+#getSignature(Lorg/keycloak/jose/jws/Algorithm;)Ljava/security/Signature;
+#sign([BLorg/keycloak/jose/jws/Algorithm;Ljava/security/PrivateKey;)[B
+#verify(Lorg/keycloak/jose/jws/JWSInput;Ljava/security/PublicKey;)Z
@1.0-alpha-1-12062013
-###org/keycloak/jose/jws/crypto/RSAProvider

+###org/keycloak/representations/adapters/config/BaseRealmConfig
@1.0-alpha-1
+#<init>()V
+#isSslNotRequired()Z
+#setSslNotRequired(Z)V
+#getRealm()Ljava/lang/String;
+#setRealm(Ljava/lang/String;)V
+#getRealmKey()Ljava/lang/String;
+#setRealmKey(Ljava/lang/String;)V
+#getAuthServerUrl()Ljava/lang/String;
+#setAuthServerUrl(Ljava/lang/String;)V
@1.0-alpha-1-12062013
-###org/keycloak/representations/adapters/config/BaseRealmConfig

+###org/keycloak/representations/AccessToken$Authorization
@2.0.0.CR1
+#<init>()V
+#getPermissions()Ljava/util/List;
+#setPermissions(Ljava/util/List;)V
@4.0.0.Beta2
+#setClaims(Ljava/util/Map;)V
+#getClaims()Ljava/util/Map;
@4.0.0.Final
-#setClaims(Ljava/util/Map;)V
-#getClaims()Ljava/util/Map;
@4.3.0.Final
+#getPermissions()Ljava/util/Collection;
+#setPermissions(Ljava/util/Collection;)V
-#getPermissions()Ljava/util/List;
-#setPermissions(Ljava/util/List;)V

+###org/keycloak/representations/idm/MappingsRepresentation
@1.0-alpha-1
+#<init>()V
+#getRealmMappings()Ljava/util/List;
+#setRealmMappings(Ljava/util/List;)V
+#getApplicationMappings()Ljava/util/Map;
+#setApplicationMappings(Ljava/util/Map;)V
@1.2.0.CR1
+#getClientMappings()Ljava/util/Map;
+#setClientMappings(Ljava/util/Map;)V
-#getApplicationMappings()Ljava/util/Map;
-#setApplicationMappings(Ljava/util/Map;)V

+###org/keycloak/representations/idm/ComponentTypeRepresentation
@2.1.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getHelpText()Ljava/lang/String;
+#setHelpText(Ljava/lang/String;)V
+#getProperties()Ljava/util/List;
+#setProperties(Ljava/util/List;)V
@2.3.0.CR1
+#getMetadata()Ljava/util/Map;
+#setMetadata(Ljava/util/Map;)V

+###org/keycloak/representations/idm/authorization/AuthorizationResponse
@4.0.0.Beta1
+#<init>()V
+#<init>(Lorg/keycloak/representations/AccessTokenResponse;Z)V
+#isUpgraded()Z
+#setUpgraded(Z)V

+###org/keycloak/representations/idm/authorization/RulePolicyRepresentation
@3.1.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;
+#getArtifactGroupId()Ljava/lang/String;
+#setArtifactGroupId(Ljava/lang/String;)V
+#getArtifactId()Ljava/lang/String;
+#setArtifactId(Ljava/lang/String;)V
+#getArtifactVersion()Ljava/lang/String;
+#setArtifactVersion(Ljava/lang/String;)V
+#getModuleName()Ljava/lang/String;
+#setModuleName(Ljava/lang/String;)V
+#getSessionName()Ljava/lang/String;
+#setSessionName(Ljava/lang/String;)V
+#getScannerPeriod()Ljava/lang/String;
+#setScannerPeriod(Ljava/lang/String;)V
+#getScannerPeriodUnit()Ljava/lang/String;
+#setScannerPeriodUnit(Ljava/lang/String;)V
@9.0.0
-###org/keycloak/representations/idm/authorization/RulePolicyRepresentation

+###org/keycloak/representations/idm/authorization/AbstractPolicyRepresentation
@3.1.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getDecisionStrategy()Lorg/keycloak/representations/idm/authorization/DecisionStrategy;
+#setDecisionStrategy(Lorg/keycloak/representations/idm/authorization/DecisionStrategy;)V
+#getLogic()Lorg/keycloak/representations/idm/authorization/Logic;
+#setLogic(Lorg/keycloak/representations/idm/authorization/Logic;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getPolicies()Ljava/util/Set;
+#setPolicies(Ljava/util/Set;)V
+#addPolicy([Ljava/lang/String;)V
+#getResources()Ljava/util/Set;
+#setResources(Ljava/util/Set;)V
+#addResource(Ljava/lang/String;)V
+#getScopes()Ljava/util/Set;
+#setScopes(Ljava/util/Set;)V
+#addScope([Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.0.0.Beta2
+#removePolicy(Ljava/lang/String;)V
@4.0.0.Final
+#removeScope(Ljava/lang/String;)V
+#getOwner()Ljava/lang/String;
+#setOwner(Ljava/lang/String;)V
@9.0.0
+#setResourcesData(Ljava/util/Set;)V
+#getResourcesData()Ljava/util/Set;
+#setScopesData(Ljava/util/Set;)V
+#getScopesData()Ljava/util/Set;

+###org/keycloak/representations/idm/authorization/RolePolicyRepresentation
@3.1.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;
+#getRoles()Ljava/util/Set;
+#setRoles(Ljava/util/Set;)V
+#addRole(Ljava/lang/String;Z)V
+#addRole(Ljava/lang/String;)V
+#addClientRole(Ljava/lang/String;Ljava/lang/String;)V
+#addClientRole(Ljava/lang/String;Ljava/lang/String;Z)V

+###org/keycloak/crypto/JavaAlgorithm
@4.1.0.Final
+#<init>()V
+#getJavaAlgorithm(Ljava/lang/String;)Ljava/lang/String;
@4.8.0.Final
+#getJavaAlgorithmForHash(Ljava/lang/String;)Ljava/lang/String;
@19.0.0
+#isRSAJavaAlgorithm(Ljava/lang/String;)Z
+#isECJavaAlgorithm(Ljava/lang/String;)Z
+#isHMACJavaAlgorithm(Ljava/lang/String;)Z

+###org/keycloak/constants/ServiceUrlConstants
@1.1.0.Beta2

+###org/keycloak/jose/jwk/JSONWebKeySet
@2.2.0.CR1
+#<init>()V
+#getKeys()[Lorg/keycloak/jose/jwk/JWK;
+#setKeys([Lorg/keycloak/jose/jwk/JWK;)V

+###org/keycloak/jose/jws/crypto/SignatureProvider
@1.2.0.Beta1
+#verify(Lorg/keycloak/jose/jws/JWSInput;Ljava/lang/String;)Z

+###org/keycloak/jose/jws/crypto/HMACProvider
@1.0-alpha-1
+#<init>()V
+#getJavaAlgorithm(Lorg/keycloak/jose/jws/Algorithm;)Ljava/lang/String;
+#getMAC(Lorg/keycloak/jose/jws/Algorithm;)Ljavax/crypto/Mac;
+#sign([BLorg/keycloak/jose/jws/Algorithm;[B)[B
+#sign([BLorg/keycloak/jose/jws/Algorithm;Ljavax/crypto/SecretKey;)[B
+#verify(Lorg/keycloak/jose/jws/JWSInput;Ljavax/crypto/SecretKey;)Z
+#verify(Lorg/keycloak/jose/jws/JWSInput;[B)Z
@1.0-alpha-1-12062013
-###org/keycloak/jose/jws/crypto/HMACProvider

+###org/keycloak/jose/jws/JWSHeader
@1.0-alpha-1
+#<init>()V
+#<init>(Lorg/keycloak/jose/jws/Algorithm;Ljava/lang/String;Ljava/lang/String;)V
+#getAlgorithm()Lorg/keycloak/jose/jws/Algorithm;
+#getType()Ljava/lang/String;
+#getContentType()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.0-alpha-1-12062013
-###org/keycloak/jose/jws/JWSHeader

+###org/keycloak/jose/jwe/JWEConstants
@3.4.0.CR1
+#<init>()V

+###org/keycloak/representations/info/SpiInfoRepresentation
@1.7.0.CR1
+#<init>()V
+#isInternal()Z
+#setInternal(Z)V
+#getProviders()Ljava/util/Map;
+#setProviders(Ljava/util/Map;)V

+###org/keycloak/representations/adapters/action/LogoutAction
@1.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;)V
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
@1.0-alpha-1-12062013
-###org/keycloak/representations/adapters/action/LogoutAction

+###org/keycloak/representations/adapters/action/AdminAction
@1.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;JLjava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#isExpired()Z
+#getExpiration()J
+#setExpiration(J)V
+#getResource()Ljava/lang/String;
+#setResource(Ljava/lang/String;)V
@1.0-alpha-1-12062013
-###org/keycloak/representations/adapters/action/AdminAction

+###org/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathConfig
@2.0.0.CR1
+#<init>()V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getScopes()Ljava/util/List;
+#setScopes(Ljava/util/List;)V
+#getMethods()Ljava/util/List;
+#setMethods(Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#setId(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hasPattern()Z
+#isInstance()Z
+#setInstance(Z)V
+#setParentConfig(Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathConfig;)V
+#getParentConfig()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathConfig;
@2.1.0.CR1
-#setInstance(Z)V
@2.4.0.CR1
+#getEnforcementMode()Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EnforcementMode;
+#setEnforcementMode(Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$EnforcementMode;)V
@4.0.0.Beta2
+#createPathConfig(Lorg/keycloak/representations/idm/authorization/ResourceRepresentation;)Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathConfig;
+#getClaimInformationPointConfig()Ljava/util/Map;
+#setClaimInformationPointConfig(Ljava/util/Map;)V
@4.2.0.Final
+#createPathConfigs(Lorg/keycloak/representations/idm/authorization/ResourceRepresentation;)Ljava/util/Set;
-#createPathConfig(Lorg/keycloak/representations/idm/authorization/ResourceRepresentation;)Lorg/keycloak/representations/adapters/config/PolicyEnforcerConfig$PathConfig;
@13.0.0
+#invalidate()V
+#isInvalidated()Z
+#isStatic()Z
+#setStatic(Z)V

+###org/keycloak/representations/adapters/config/BaseAdapterConfig
@1.0-alpha-1
+#<init>()V
+#isUseResourceRoleMappings()Z
+#setUseResourceRoleMappings(Z)V
+#getResource()Ljava/lang/String;
+#setResource(Ljava/lang/String;)V
+#isCors()Z
+#setCors(Z)V
+#getCorsMaxAge()I
+#setCorsMaxAge(I)V
+#getCorsAllowedHeaders()Ljava/lang/String;
+#setCorsAllowedHeaders(Ljava/lang/String;)V
+#getCorsAllowedMethods()Ljava/lang/String;
+#setCorsAllowedMethods(Ljava/lang/String;)V
+#isExposeToken()Z
+#setExposeToken(Z)V
+#isBearerOnly()Z
+#setBearerOnly(Z)V
+#getCredentials()Ljava/util/Map;
+#setCredentials(Ljava/util/Map;)V
+#getScope()Lorg/keycloak/representations/SkeletonKeyScope;
+#setScope(Lorg/keycloak/representations/SkeletonKeyScope;)V
@1.0-alpha-1-12062013
-###org/keycloak/representations/adapters/config/BaseAdapterConfig

+###org/keycloak/representations/idm/RealmRepresentation
@1.0-alpha-1
+#<init>()V
+#getSelf()Ljava/lang/String;
+#setSelf(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getRealm()Ljava/lang/String;
+#setRealm(Ljava/lang/String;)V
+#getUsers()Ljava/util/List;
+#getApplications()Ljava/util/List;
+#resource(Ljava/lang/String;)Lorg/keycloak/representations/idm/ApplicationRepresentation;
+#setUsers(Ljava/util/List;)V
+#user(Ljava/lang/String;)Lorg/keycloak/representations/idm/UserRepresentation;
+#setApplications(Ljava/util/List;)V
+#isEnabled()Ljava/lang/Boolean;
+#setEnabled(Ljava/lang/Boolean;)V
+#isSslNotRequired()Ljava/lang/Boolean;
+#setSslNotRequired(Ljava/lang/Boolean;)V
+#getTokenLifespan()Ljava/lang/Integer;
+#setTokenLifespan(Ljava/lang/Integer;)V
+#getRoleMappings()Ljava/util/List;
+#roleMapping(Ljava/lang/String;)Lorg/keycloak/representations/idm/UserRoleMappingRepresentation;
+#getScopeMappings()Ljava/util/List;
+#scopeMapping(Ljava/lang/String;)Lorg/keycloak/representations/idm/ScopeMappingRepresentation;
+#getSocialMappings()Ljava/util/List;
+#socialMapping(Ljava/lang/String;)Lorg/keycloak/representations/idm/SocialMappingRepresentation;
+#getRequiredCredentials()Ljava/util/Set;
+#setRequiredCredentials(Ljava/util/Set;)V
+#getRequiredApplicationCredentials()Ljava/util/Set;
+#setRequiredApplicationCredentials(Ljava/util/Set;)V
+#getRequiredOAuthClientCredentials()Ljava/util/Set;
+#setRequiredOAuthClientCredentials(Ljava/util/Set;)V
+#getPasswordPolicy()Ljava/lang/String;
+#setPasswordPolicy(Ljava/lang/String;)V
+#getAccessCodeLifespan()Ljava/lang/Integer;
+#setAccessCodeLifespan(Ljava/lang/Integer;)V
+#getAccessCodeLifespanUserAction()Ljava/lang/Integer;
+#setAccessCodeLifespanUserAction(Ljava/lang/Integer;)V
+#getRoles()Ljava/util/List;
+#setRoles(Ljava/util/List;)V
+#getDefaultRoles()Ljava/util/List;
+#setDefaultRoles(Ljava/util/List;)V
+#getPrivateKey()Ljava/lang/String;
+#setPrivateKey(Ljava/lang/String;)V
+#getPublicKey()Ljava/lang/String;
+#setPublicKey(Ljava/lang/String;)V
+#isRegistrationAllowed()Ljava/lang/Boolean;
+#setRegistrationAllowed(Ljava/lang/Boolean;)V
+#isVerifyEmail()Ljava/lang/Boolean;
+#setVerifyEmail(Ljava/lang/Boolean;)V
+#isResetPasswordAllowed()Ljava/lang/Boolean;
+#setResetPasswordAllowed(Ljava/lang/Boolean;)V
+#isSocial()Ljava/lang/Boolean;
+#setSocial(Ljava/lang/Boolean;)V
+#isUpdateProfileOnInitialSocialLogin()Ljava/lang/Boolean;
+#setUpdateProfileOnInitialSocialLogin(Ljava/lang/Boolean;)V
+#getSocialProviders()Ljava/util/Map;
+#setSocialProviders(Ljava/util/Map;)V
+#getSmtpServer()Ljava/util/Map;
+#setSmtpServer(Ljava/util/Map;)V
+#getOauthClients()Ljava/util/List;
+#setOauthClients(Ljava/util/List;)V
+#getApplicationRoleMappings()Ljava/util/Map;
+#setApplicationRoleMappings(Ljava/util/Map;)V
+#getApplicationScopeMappings()Ljava/util/Map;
+#setApplicationScopeMappings(Ljava/util/Map;)V
@1.0-alpha-1-12062013
+#getAccountManagement()Ljava/lang/Boolean;
+#setAccountManagement(Ljava/lang/Boolean;)V
+#isCookieLoginAllowed()Ljava/lang/Boolean;
+#setCookieLoginAllowed(Ljava/lang/Boolean;)V
+#isAutomaticRegistrationAfterSocialLogin()Ljava/lang/Boolean;
+#setAutomaticRegistrationAfterSocialLogin(Ljava/lang/Boolean;)V
-#isUpdateProfileOnInitialSocialLogin()Ljava/lang/Boolean;
-#setUpdateProfileOnInitialSocialLogin(Ljava/lang/Boolean;)V
@1.0-alpha-2
+#isUpdateProfileOnInitialSocialLogin()Ljava/lang/Boolean;
+#setUpdateProfileOnInitialSocialLogin(Ljava/lang/Boolean;)V
+#getRoles()Lorg/keycloak/representations/idm/RolesRepresentation;
+#setRoles(Lorg/keycloak/representations/idm/RolesRepresentation;)V
+#getLoginTheme()Ljava/lang/String;
+#setLoginTheme(Ljava/lang/String;)V
+#getAccountTheme()Ljava/lang/String;
+#setAccountTheme(Ljava/lang/String;)V
-#getAccountManagement()Ljava/lang/Boolean;
-#setAccountManagement(Ljava/lang/Boolean;)V
-#isCookieLoginAllowed()Ljava/lang/Boolean;
-#setCookieLoginAllowed(Ljava/lang/Boolean;)V
-#getRequiredApplicationCredentials()Ljava/util/Set;
-#setRequiredApplicationCredentials(Ljava/util/Set;)V
-#getRequiredOAuthClientCredentials()Ljava/util/Set;
-#setRequiredOAuthClientCredentials(Ljava/util/Set;)V
-#getRoles()Ljava/util/List;
-#setRoles(Ljava/util/List;)V
-#isAutomaticRegistrationAfterSocialLogin()Ljava/lang/Boolean;
-#setAutomaticRegistrationAfterSocialLogin(Ljava/lang/Boolean;)V
@1.0-alpha-3
+#getAccessTokenLifespan()Ljava/lang/Integer;
+#setAccessTokenLifespan(Ljava/lang/Integer;)V
+#getRefreshTokenLifespan()Ljava/lang/Integer;
+#getCentralLoginLifespan()Ljava/lang/Integer;
+#setCentralLoginLifespan(Ljava/lang/Integer;)V
+#setRefreshTokenLifespan(Ljava/lang/Integer;)V
+#isRememberMe()Ljava/lang/Boolean;
+#setRememberMe(Ljava/lang/Boolean;)V
+#getNotBefore()Ljava/lang/Integer;
+#setNotBefore(Ljava/lang/Integer;)V
-#getTokenLifespan()Ljava/lang/Integer;
-#setTokenLifespan(Ljava/lang/Integer;)V
@1.0-beta-1
+#getSsoSessionIdleTimeout()Ljava/lang/Integer;
+#setSsoSessionIdleTimeout(Ljava/lang/Integer;)V
+#getSsoSessionMaxLifespan()Ljava/lang/Integer;
+#setSsoSessionMaxLifespan(Ljava/lang/Integer;)V
+#isPasswordCredentialGrantAllowed()Ljava/lang/Boolean;
+#setPasswordCredentialGrantAllowed(Ljava/lang/Boolean;)V
+#getLdapServer()Ljava/util/Map;
+#setLdapServer(Ljava/util/Map;)V
+#getAuthenticationProviders()Ljava/util/List;
+#setAuthenticationProviders(Ljava/util/List;)V
+#getAdminTheme()Ljava/lang/String;
+#setAdminTheme(Ljava/lang/String;)V
+#getEmailTheme()Ljava/lang/String;
+#setEmailTheme(Ljava/lang/String;)V
+#isBruteForceProtected()Ljava/lang/Boolean;
+#setBruteForceProtected(Ljava/lang/Boolean;)V
+#getMaxFailureWaitSeconds()Ljava/lang/Integer;
+#setMaxFailureWaitSeconds(Ljava/lang/Integer;)V
+#getMinimumQuickLoginWaitSeconds()Ljava/lang/Integer;
+#setMinimumQuickLoginWaitSeconds(Ljava/lang/Integer;)V
+#getWaitIncrementSeconds()Ljava/lang/Integer;
+#setWaitIncrementSeconds(Ljava/lang/Integer;)V
+#getQuickLoginCheckMilliSeconds()Ljava/lang/Long;
+#setQuickLoginCheckMilliSeconds(Ljava/lang/Long;)V
+#getMaxDeltaTimeSeconds()Ljava/lang/Integer;
+#setMaxDeltaTimeSeconds(Ljava/lang/Integer;)V
+#getFailureFactor()Ljava/lang/Integer;
+#setFailureFactor(Ljava/lang/Integer;)V
-#getSelf()Ljava/lang/String;
-#setSelf(Ljava/lang/String;)V
-#getRefreshTokenLifespan()Ljava/lang/Integer;
-#getCentralLoginLifespan()Ljava/lang/Integer;
-#setCentralLoginLifespan(Ljava/lang/Integer;)V
-#setRefreshTokenLifespan(Ljava/lang/Integer;)V
@1.0-beta-4
+#getSslRequired()Ljava/lang/String;
+#setSslRequired(Ljava/lang/String;)V
+#isRealmCacheEnabled()Ljava/lang/Boolean;
+#setRealmCacheEnabled(Ljava/lang/Boolean;)V
+#isUserCacheEnabled()Ljava/lang/Boolean;
+#setUserCacheEnabled(Ljava/lang/Boolean;)V
+#isAuditEnabled()Z
+#setAuditEnabled(Z)V
+#getAuditExpiration()J
+#setAuditExpiration(J)V
+#getAuditListeners()Ljava/util/List;
+#setAuditListeners(Ljava/util/List;)V
+#getUserFederationProviders()Ljava/util/List;
+#setUserFederationProviders(Ljava/util/List;)V
-#isSslNotRequired()Ljava/lang/Boolean;
-#setSslNotRequired(Ljava/lang/Boolean;)V
-#getRoleMappings()Ljava/util/List;
-#roleMapping(Ljava/lang/String;)Lorg/keycloak/representations/idm/UserRoleMappingRepresentation;
-#getSocialMappings()Ljava/util/List;
-#socialMapping(Ljava/lang/String;)Lorg/keycloak/representations/idm/SocialMappingRepresentation;
-#getLdapServer()Ljava/util/Map;
-#setLdapServer(Ljava/util/Map;)V
-#getAuthenticationProviders()Ljava/util/List;
-#setAuthenticationProviders(Ljava/util/List;)V
-#getApplicationRoleMappings()Ljava/util/Map;
-#setApplicationRoleMappings(Ljava/util/Map;)V
@1.0-rc-1
+#getBrowserSecurityHeaders()Ljava/util/Map;
+#setBrowserSecurityHeaders(Ljava/util/Map;)V
@1.0-rc-2
+#isEventsEnabled()Z
+#setEventsEnabled(Z)V
+#getEventsExpiration()J
+#setEventsExpiration(J)V
+#getEventsListeners()Ljava/util/List;
+#setEventsListeners(Ljava/util/List;)V
-#isAuditEnabled()Z
-#setAuditEnabled(Z)V
-#getAuditExpiration()J
-#setAuditExpiration(J)V
-#getAuditListeners()Ljava/util/List;
-#setAuditListeners(Ljava/util/List;)V
@1.1.0.Beta1
+#getCertificate()Ljava/lang/String;
+#setCertificate(Ljava/lang/String;)V
+#getCodeSecret()Ljava/lang/String;
+#setCodeSecret(Ljava/lang/String;)V
+#isEventsEnabled()Ljava/lang/Boolean;
+#getEventsExpiration()Ljava/lang/Long;
-#isEventsEnabled()Z
-#getEventsExpiration()J
@1.2.0.Beta1
+#getAccessCodeLifespanLogin()Ljava/lang/Integer;
+#setAccessCodeLifespanLogin(Ljava/lang/Integer;)V
+#isRegistrationEmailAsUsername()Ljava/lang/Boolean;
+#setRegistrationEmailAsUsername(Ljava/lang/Boolean;)V
+#getEnabledEventTypes()Ljava/util/List;
+#setEnabledEventTypes(Ljava/util/List;)V
+#getIdentityProviders()Ljava/util/List;
+#setIdentityProviders(Ljava/util/List;)V
+#addIdentityProvider(Lorg/keycloak/representations/idm/IdentityProviderRepresentation;)V
+#isIdentityFederationEnabled()Z
+#getProtocolMappers()Ljava/util/List;
+#addProtocolMapper(Lorg/keycloak/representations/idm/ProtocolMapperRepresentation;)V
+#setProtocolMappers(Ljava/util/List;)V
+#isInternationalizationEnabled()Ljava/lang/Boolean;
+#setInternationalizationEnabled(Ljava/lang/Boolean;)V
+#getSupportedLocales()Ljava/util/Set;
+#setSupportedLocales(Ljava/util/Set;)V
+#getDefaultLocale()Ljava/lang/String;
+#setDefaultLocale(Ljava/lang/String;)V
@1.2.0.CR1
+#getClients()Ljava/util/List;
+#setClients(Ljava/util/List;)V
*#isSocial()Ljava/lang/Boolean;[deprecated]
*#isUpdateProfileOnInitialSocialLogin()Ljava/lang/Boolean;[deprecated]
*#getSocialProviders()Ljava/util/Map;[deprecated]
*#getOauthClients()Ljava/util/List;[deprecated]
+#getClientScopeMappings()Ljava/util/Map;
+#setClientScopeMappings(Ljava/util/Map;)V
*#getApplicationScopeMappings()Ljava/util/Map;[deprecated]
+#getIdentityProviderMappers()Ljava/util/List;
+#setIdentityProviderMappers(Ljava/util/List;)V
+#addIdentityProviderMapper(Lorg/keycloak/representations/idm/IdentityProviderMapperRepresentation;)V
-#resource(Ljava/lang/String;)Lorg/keycloak/representations/idm/ApplicationRepresentation;
-#setApplications(Ljava/util/List;)V
-#setSocial(Ljava/lang/Boolean;)V
-#setUpdateProfileOnInitialSocialLogin(Ljava/lang/Boolean;)V
-#setSocialProviders(Ljava/util/Map;)V
-#setOauthClients(Ljava/util/List;)V
-#setApplicationScopeMappings(Ljava/util/Map;)V
@1.3.0.Final
+#isEditUsernameAllowed()Ljava/lang/Boolean;
+#setEditUsernameAllowed(Ljava/lang/Boolean;)V
+#isAdminEventsEnabled()Ljava/lang/Boolean;
+#setAdminEventsEnabled(Ljava/lang/Boolean;)V
+#isAdminEventsDetailsEnabled()Ljava/lang/Boolean;
+#setAdminEventsDetailsEnabled(Ljava/lang/Boolean;)V
+#getUserFederationMappers()Ljava/util/List;
+#setUserFederationMappers(Ljava/util/List;)V
+#addUserFederationMapper(Lorg/keycloak/representations/idm/UserFederationMapperRepresentation;)V
-#setPasswordCredentialGrantAllowed(Ljava/lang/Boolean;)V
@1.4.0.Final
*#getRequiredCredentials()Ljava/util/Set;[deprecated]
*#setRequiredCredentials(Ljava/util/Set;)V[deprecated]
+#getAuthenticationFlows()Ljava/util/List;
+#setAuthenticationFlows(Ljava/util/List;)V
+#getAuthenticatorConfig()Ljava/util/List;
+#setAuthenticatorConfig(Ljava/util/List;)V
+#getRequiredActions()Ljava/util/List;
+#setRequiredActions(Ljava/util/List;)V
@1.5.0-Final
+#getOtpPolicyType()Ljava/lang/String;
+#setOtpPolicyType(Ljava/lang/String;)V
+#getOtpPolicyAlgorithm()Ljava/lang/String;
+#setOtpPolicyAlgorithm(Ljava/lang/String;)V
+#getOtpPolicyInitialCounter()Ljava/lang/Integer;
+#setOtpPolicyInitialCounter(Ljava/lang/Integer;)V
+#getOtpPolicyDigits()Ljava/lang/Integer;
+#setOtpPolicyDigits(Ljava/lang/Integer;)V
+#getOtpPolicyLookAheadWindow()Ljava/lang/Integer;
+#setOtpPolicyLookAheadWindow(Ljava/lang/Integer;)V
+#getOtpPolicyPeriod()Ljava/lang/Integer;
+#setOtpPolicyPeriod(Ljava/lang/Integer;)V
+#getBrowserFlow()Ljava/lang/String;
+#setBrowserFlow(Ljava/lang/String;)V
+#getRegistrationFlow()Ljava/lang/String;
+#setRegistrationFlow(Ljava/lang/String;)V
+#getDirectGrantFlow()Ljava/lang/String;
+#setDirectGrantFlow(Ljava/lang/String;)V
+#getResetCredentialsFlow()Ljava/lang/String;
+#setResetCredentialsFlow(Ljava/lang/String;)V
+#getClientAuthenticationFlow()Ljava/lang/String;
+#setClientAuthenticationFlow(Ljava/lang/String;)V
@1.6.0.Final
+#getRevokeRefreshToken()Ljava/lang/Boolean;
+#setRevokeRefreshToken(Ljava/lang/Boolean;)V
+#getOfflineSessionIdleTimeout()Ljava/lang/Integer;
+#setOfflineSessionIdleTimeout(Ljava/lang/Integer;)V
+#addSupportedLocales(Ljava/lang/String;)V
@1.7.0.CR1
+#getAccessTokenLifespanForImplicitFlow()Ljava/lang/Integer;
+#setAccessTokenLifespanForImplicitFlow(Ljava/lang/Integer;)V
+#getDefaultGroups()Ljava/util/List;
+#setDefaultGroups(Ljava/util/List;)V
*#isIdentityFederationEnabled()Z[deprecated]
+#getGroups()Ljava/util/List;
+#setGroups(Ljava/util/List;)V
@1.8.0.Alpha1
+#getClientTemplates()Ljava/util/List;
+#setClientTemplates(Ljava/util/List;)V
@1.8.0.CR1
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#getDisplayNameHtml()Ljava/lang/String;
+#setDisplayNameHtml(Ljava/lang/String;)V
@1.9.0.CR1
-#isRealmCacheEnabled()Ljava/lang/Boolean;
-#setRealmCacheEnabled(Ljava/lang/Boolean;)V
-#isUserCacheEnabled()Ljava/lang/Boolean;
-#setUserCacheEnabled(Ljava/lang/Boolean;)V
@1.9.2.Final
+#getKeycloakVersion()Ljava/lang/String;
+#setKeycloakVersion(Ljava/lang/String;)V
@1.9.3.Final
+#clientScopeMapping(Ljava/lang/String;)Lorg/keycloak/representations/idm/ScopeMappingRepresentation;
+#clientTemplateScopeMapping(Ljava/lang/String;)Lorg/keycloak/representations/idm/ScopeMappingRepresentation;
-#scopeMapping(Ljava/lang/String;)Lorg/keycloak/representations/idm/ScopeMappingRepresentation;
@2.2.0.CR1
+#getComponents()Lorg/keycloak/common/util/MultivaluedHashMap;
+#setComponents(Lorg/keycloak/common/util/MultivaluedHashMap;)V
+#setAttributes(Ljava/util/Map;)V
+#getAttributes()Ljava/util/Map;
@2.3.0.CR1
+#getFederatedUsers()Ljava/util/List;
+#setFederatedUsers(Ljava/util/List;)V
@2.5.0.CR1
+#isLoginWithEmailAllowed()Ljava/lang/Boolean;
+#setLoginWithEmailAllowed(Ljava/lang/Boolean;)V
+#isDuplicateEmailsAllowed()Ljava/lang/Boolean;
+#setDuplicateEmailsAllowed(Ljava/lang/Boolean;)V
@3.2.0.CR1
+#getActionTokenGeneratedByAdminLifespan()Ljava/lang/Integer;
+#setActionTokenGeneratedByAdminLifespan(Ljava/lang/Integer;)V
+#getActionTokenGeneratedByUserLifespan()Ljava/lang/Integer;
+#setActionTokenGeneratedByUserLifespan(Ljava/lang/Integer;)V
+#isPermanentLockout()Ljava/lang/Boolean;
+#setPermanentLockout(Ljava/lang/Boolean;)V
+#getDockerAuthenticationFlow()Ljava/lang/String;
+#setDockerAuthenticationFlow(Ljava/lang/String;)Lorg/keycloak/representations/idm/RealmRepresentation;
@3.4.0.CR1
+#getRefreshTokenMaxReuse()Ljava/lang/Integer;
+#setRefreshTokenMaxReuse(Ljava/lang/Integer;)V
@3.4.2.Final
+#getOtpSupportedApplications()Ljava/util/List;
+#setOtpSupportedApplications(Ljava/util/List;)V
@4.0.0.Beta1
+#setUserManagedAccessAllowed(Ljava/lang/Boolean;)V
+#isUserManagedAccessAllowed()Ljava/lang/Boolean;
@4.0.0.Final
+#clientScopeScopeMapping(Ljava/lang/String;)Lorg/keycloak/representations/idm/ScopeMappingRepresentation;
*#getClientTemplates()Ljava/util/List;[deprecated]
+#getClientScopes()Ljava/util/List;
+#setClientScopes(Ljava/util/List;)V
+#getDefaultDefaultClientScopes()Ljava/util/List;
+#setDefaultDefaultClientScopes(Ljava/util/List;)V
+#getDefaultOptionalClientScopes()Ljava/util/List;
+#setDefaultOptionalClientScopes(Ljava/util/List;)V
-#clientTemplateScopeMapping(Ljava/lang/String;)Lorg/keycloak/representations/idm/ScopeMappingRepresentation;
-#setClientTemplates(Ljava/util/List;)V
@4.1.0.Final
+#getOfflineSessionMaxLifespanEnabled()Ljava/lang/Boolean;
+#setOfflineSessionMaxLifespanEnabled(Ljava/lang/Boolean;)V
+#getOfflineSessionMaxLifespan()Ljava/lang/Integer;
+#setOfflineSessionMaxLifespan(Ljava/lang/Integer;)V
@4.5.0.Final
+#getDefaultSignatureAlgorithm()Ljava/lang/String;
+#setDefaultSignatureAlgorithm(Ljava/lang/String;)V
@4.7.0.Final
+#getSsoSessionMaxLifespanRememberMe()Ljava/lang/Integer;
+#setSsoSessionMaxLifespanRememberMe(Ljava/lang/Integer;)V
+#getSsoSessionIdleTimeoutRememberMe()Ljava/lang/Integer;
+#setSsoSessionIdleTimeoutRememberMe(Ljava/lang/Integer;)V
@8.0.0
+#getWebAuthnPolicyRpEntityName()Ljava/lang/String;
+#setWebAuthnPolicyRpEntityName(Ljava/lang/String;)V
+#getWebAuthnPolicySignatureAlgorithms()Ljava/util/List;
+#setWebAuthnPolicySignatureAlgorithms(Ljava/util/List;)V
+#getWebAuthnPolicyRpId()Ljava/lang/String;
+#setWebAuthnPolicyRpId(Ljava/lang/String;)V
+#getWebAuthnPolicyAttestationConveyancePreference()Ljava/lang/String;
+#setWebAuthnPolicyAttestationConveyancePreference(Ljava/lang/String;)V
+#getWebAuthnPolicyAuthenticatorAttachment()Ljava/lang/String;
+#setWebAuthnPolicyAuthenticatorAttachment(Ljava/lang/String;)V
+#getWebAuthnPolicyRequireResidentKey()Ljava/lang/String;
+#setWebAuthnPolicyRequireResidentKey(Ljava/lang/String;)V
+#getWebAuthnPolicyUserVerificationRequirement()Ljava/lang/String;
+#setWebAuthnPolicyUserVerificationRequirement(Ljava/lang/String;)V
+#getWebAuthnPolicyCreateTimeout()Ljava/lang/Integer;
+#setWebAuthnPolicyCreateTimeout(Ljava/lang/Integer;)V
+#isWebAuthnPolicyAvoidSameAuthenticatorRegister()Ljava/lang/Boolean;
+#setWebAuthnPolicyAvoidSameAuthenticatorRegister(Ljava/lang/Boolean;)V
+#getWebAuthnPolicyAcceptableAaguids()Ljava/util/List;
+#setWebAuthnPolicyAcceptableAaguids(Ljava/util/List;)V
@9.0.0
+#getWebAuthnPolicyPasswordlessRpEntityName()Ljava/lang/String;
+#setWebAuthnPolicyPasswordlessRpEntityName(Ljava/lang/String;)V
+#getWebAuthnPolicyPasswordlessSignatureAlgorithms()Ljava/util/List;
+#setWebAuthnPolicyPasswordlessSignatureAlgorithms(Ljava/util/List;)V
+#getWebAuthnPolicyPasswordlessRpId()Ljava/lang/String;
+#setWebAuthnPolicyPasswordlessRpId(Ljava/lang/String;)V
+#getWebAuthnPolicyPasswordlessAttestationConveyancePreference()Ljava/lang/String;
+#setWebAuthnPolicyPasswordlessAttestationConveyancePreference(Ljava/lang/String;)V
+#getWebAuthnPolicyPasswordlessAuthenticatorAttachment()Ljava/lang/String;
+#setWebAuthnPolicyPasswordlessAuthenticatorAttachment(Ljava/lang/String;)V
+#getWebAuthnPolicyPasswordlessRequireResidentKey()Ljava/lang/String;
+#setWebAuthnPolicyPasswordlessRequireResidentKey(Ljava/lang/String;)V
+#getWebAuthnPolicyPasswordlessUserVerificationRequirement()Ljava/lang/String;
+#setWebAuthnPolicyPasswordlessUserVerificationRequirement(Ljava/lang/String;)V
+#getWebAuthnPolicyPasswordlessCreateTimeout()Ljava/lang/Integer;
+#setWebAuthnPolicyPasswordlessCreateTimeout(Ljava/lang/Integer;)V
+#isWebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister()Ljava/lang/Boolean;
+#setWebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister(Ljava/lang/Boolean;)V
+#getWebAuthnPolicyPasswordlessAcceptableAaguids()Ljava/util/List;
+#setWebAuthnPolicyPasswordlessAcceptableAaguids(Ljava/util/List;)V
@10.0.0
+#getClientSessionIdleTimeout()Ljava/lang/Integer;
+#setClientSessionIdleTimeout(Ljava/lang/Integer;)V
+#getClientSessionMaxLifespan()Ljava/lang/Integer;
+#setClientSessionMaxLifespan(Ljava/lang/Integer;)V
@11.0.0
+#getClientOfflineSessionIdleTimeout()Ljava/lang/Integer;
+#setClientOfflineSessionIdleTimeout(Ljava/lang/Integer;)V
+#getClientOfflineSessionMaxLifespan()Ljava/lang/Integer;
+#setClientOfflineSessionMaxLifespan(Ljava/lang/Integer;)V
@13.0.0
+#setOAuth2DeviceCodeLifespan(Ljava/lang/Integer;)V
+#getOAuth2DeviceCodeLifespan()Ljava/lang/Integer;
+#setOAuth2DevicePollingInterval(Ljava/lang/Integer;)V
+#getOAuth2DevicePollingInterval()Ljava/lang/Integer;
*#getDefaultRoles()Ljava/util/List;[deprecated]
*#setDefaultRoles(Ljava/util/List;)V[deprecated]
+#getDefaultRole()Lorg/keycloak/representations/idm/RoleRepresentation;
+#setDefaultRole(Lorg/keycloak/representations/idm/RoleRepresentation;)V
+#getClientProfiles()Lorg/keycloak/representations/idm/ClientProfilesRepresentation;
+#setClientProfiles(Lorg/keycloak/representations/idm/ClientProfilesRepresentation;)V
+#getClientPolicies()Lorg/keycloak/representations/idm/ClientPoliciesRepresentation;
+#setClientPolicies(Lorg/keycloak/representations/idm/ClientPoliciesRepresentation;)V
+#getAttributesOrEmpty()Ljava/util/Map;
@14.0.0
+#getParsedClientProfiles()Lorg/keycloak/representations/idm/ClientProfilesRepresentation;
+#setParsedClientProfiles(Lorg/keycloak/representations/idm/ClientProfilesRepresentation;)V
+#getParsedClientPolicies()Lorg/keycloak/representations/idm/ClientPoliciesRepresentation;
+#setParsedClientPolicies(Lorg/keycloak/representations/idm/ClientPoliciesRepresentation;)V
-#getClientProfiles()Lorg/keycloak/representations/idm/ClientProfilesRepresentation;
-#setClientProfiles(Lorg/keycloak/representations/idm/ClientProfilesRepresentation;)V
-#getClientPolicies()Lorg/keycloak/representations/idm/ClientPoliciesRepresentation;
-#setClientPolicies(Lorg/keycloak/representations/idm/ClientPoliciesRepresentation;)V
@20.0.0
+#isOtpPolicyCodeReusable()Ljava/lang/Boolean;
+#setOtpPolicyCodeReusable(Ljava/lang/Boolean;)V

+###org/keycloak/representations/idm/authorization/PolicyRepresentation
@2.1.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getDecisionStrategy()Lorg/keycloak/representations/idm/authorization/DecisionStrategy;
+#setDecisionStrategy(Lorg/keycloak/representations/idm/authorization/DecisionStrategy;)V
+#getLogic()Lorg/keycloak/representations/idm/authorization/Logic;
+#setLogic(Lorg/keycloak/representations/idm/authorization/Logic;)V
+#getConfig()Ljava/util/Map;
+#setConfig(Ljava/util/Map;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getAssociatedPolicies()Ljava/util/List;
+#setAssociatedPolicies(Ljava/util/List;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#setDependentPolicies(Ljava/util/List;)V
+#getDependentPolicies()Ljava/util/List;
@2.5.0.CR1
-#getAssociatedPolicies()Ljava/util/List;
-#setAssociatedPolicies(Ljava/util/List;)V
-#setDependentPolicies(Ljava/util/List;)V
-#getDependentPolicies()Ljava/util/List;
@3.1.0.CR1
-#getId()Ljava/lang/String;
-#setId(Ljava/lang/String;)V
-#getType()Ljava/lang/String;
-#setType(Ljava/lang/String;)V
-#getDecisionStrategy()Lorg/keycloak/representations/idm/authorization/DecisionStrategy;
-#setDecisionStrategy(Lorg/keycloak/representations/idm/authorization/DecisionStrategy;)V
-#getLogic()Lorg/keycloak/representations/idm/authorization/Logic;
-#setLogic(Lorg/keycloak/representations/idm/authorization/Logic;)V
-#getName()Ljava/lang/String;
-#setName(Ljava/lang/String;)V
-#getDescription()Ljava/lang/String;
-#setDescription(Ljava/lang/String;)V
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###org/keycloak/representations/idm/authorization/DecisionStrategy
@2.1.0.CR1
+#values()[Lorg/keycloak/representations/idm/authorization/DecisionStrategy;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/representations/idm/authorization/DecisionStrategy;
@19.0.0
+#getStableIndex()I
+#valueOfInteger(Ljava/lang/Integer;)Lorg/keycloak/representations/idm/authorization/DecisionStrategy;

+###org/keycloak/representations/idm/authorization/AggregatePolicyRepresentation
@3.1.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;

+###org/keycloak/representations/idm/authorization/AuthorizationRequest
@4.0.0.Beta1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#getTicket()Ljava/lang/String;
+#setTicket(Ljava/lang/String;)V
+#getRpt()Ljava/lang/String;
+#setRpt(Ljava/lang/String;)V
+#setClaimToken(Ljava/lang/String;)V
+#getClaimToken()Ljava/lang/String;
+#setClaimTokenFormat(Ljava/lang/String;)V
+#getClaimTokenFormat()Ljava/lang/String;
+#setPct(Ljava/lang/String;)V
+#getPct()Ljava/lang/String;
+#setScope(Ljava/lang/String;)V
+#getScope()Ljava/lang/String;
+#setPermissions(Lorg/keycloak/representations/idm/authorization/PermissionTicketToken;)V
+#getPermissions()Lorg/keycloak/representations/idm/authorization/PermissionTicketToken;
+#getMetadata()Lorg/keycloak/representations/idm/authorization/AuthorizationRequest$Metadata;
+#setMetadata(Lorg/keycloak/representations/idm/authorization/AuthorizationRequest$Metadata;)V
+#setAudience(Ljava/lang/String;)V
+#getAudience()Ljava/lang/String;
+#setAccessToken(Ljava/lang/String;)V
+#getAccessToken()Ljava/lang/String;
+#addPermission(Ljava/lang/String;Ljava/util/List;)V
+#addPermission(Ljava/lang/String;[Ljava/lang/String;)V
+#setSubmitRequest(Z)V
+#isSubmitRequest()Z
@4.0.0.Beta2
+#getClaims()Ljava/util/Map;
+#setClaims(Ljava/util/Map;)V
@4.0.0.Final
+#setSubjectToken(Ljava/lang/String;)V
+#getSubjectToken()Ljava/lang/String;
-#setAccessToken(Ljava/lang/String;)V
-#getAccessToken()Ljava/lang/String;
@4.2.0.Final
+#getRpt()Lorg/keycloak/representations/AccessToken;
+#setRpt(Lorg/keycloak/representations/AccessToken;)V
+#getRptToken()Ljava/lang/String;
-#getRpt()Ljava/lang/String;

+###org/keycloak/representations/idm/authorization/ScopeRepresentation
@2.1.0.CR1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#getName()Ljava/lang/String;
+#getIconUri()Ljava/lang/String;
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#setIconUri(Ljava/lang/String;)V
+#getPolicies()Ljava/util/List;
+#setPolicies(Ljava/util/List;)V
+#getResources()Ljava/util/List;
+#setResources(Ljava/util/List;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.0.0.Beta1
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V

+###org/keycloak/representations/idm/authorization/UmaPermissionRepresentation
@4.0.0.Final
+#<init>()V
+#getType()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#setRoles(Ljava/util/Set;)V
+#addRole([Ljava/lang/String;)V
+#addClientRole(Ljava/lang/String;Ljava/lang/String;)V
+#removeRole(Ljava/lang/String;)V
+#getRoles()Ljava/util/Set;
+#setGroups(Ljava/util/Set;)V
+#addGroup([Ljava/lang/String;)V
+#removeGroup(Ljava/lang/String;)V
+#getGroups()Ljava/util/Set;
+#setClients(Ljava/util/Set;)V
+#addClient([Ljava/lang/String;)V
+#removeClient(Ljava/lang/String;)V
+#getClients()Ljava/util/Set;
+#setCondition(Ljava/lang/String;)V
+#getCondition()Ljava/lang/String;
@4.3.0.Final
+#setUsers(Ljava/util/Set;)V
+#addUser([Ljava/lang/String;)V
+#removeUser(Ljava/lang/String;)V
+#getUsers()Ljava/util/Set;
-#setId(Ljava/lang/String;)V
-#getId()Ljava/lang/String;
-#getDescription()Ljava/lang/String;
-#setDescription(Ljava/lang/String;)V

+###org/keycloak/representations/idm/authorization/DecisionEffect
@3.1.0.CR1
+#values()[Lorg/keycloak/representations/idm/authorization/DecisionEffect;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/representations/idm/authorization/DecisionEffect;

+###org/keycloak/representations/idm/authorization/AuthorizationRequest$Metadata
@4.0.0.Beta1
+#<init>()V
+#getIncludeResourceName()Ljava/lang/Boolean;
+#setIncludeResourceName(Ljava/lang/Boolean;)V
+#getLimit()Ljava/lang/Integer;
+#setLimit(Ljava/lang/Integer;)V
@4.3.0.Final
+#setResponseMode(Ljava/lang/String;)V
+#getResponseMode()Ljava/lang/String;

+###org/keycloak/representations/idm/authorization/PermissionRequest
@4.0.0.Beta1
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#<init>()V
+#getResourceId()Ljava/lang/String;
+#setResourceId(Ljava/lang/String;)V
+#getScopes()Ljava/util/Set;
+#setScopes(Ljava/util/Set;)V
+#setResourceServerId(Ljava/lang/String;)V
+#getResourceServerId()Ljava/lang/String;
@4.0.0.Beta2
+#getClaims()Ljava/util/Map;
+#setClaims(Ljava/util/Map;)V
+#setClaim(Ljava/lang/String;[Ljava/lang/String;)V
+#addScope([Ljava/lang/String;)V

+###org/keycloak/representations/idm/authorization/ResourceRepresentation
@2.1.0.CR1
+#<init>(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#<init>()V
+#setId(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getUri()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getScopes()Ljava/util/Set;
+#getIconUri()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#setUri(Ljava/lang/String;)V
+#setType(Ljava/lang/String;)V
+#setScopes(Ljava/util/Set;)V
+#setIconUri(Ljava/lang/String;)V
+#getOwner()Lorg/keycloak/representations/idm/authorization/ResourceOwnerRepresentation;
+#setOwner(Lorg/keycloak/representations/idm/authorization/ResourceOwnerRepresentation;)V
+#getPolicies()Ljava/util/List;
+#setPolicies(Ljava/util/List;)V
+#setTypedScopes(Ljava/util/List;)V
+#getTypedScopes()Ljava/util/List;
@2.5.0.CR1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#getPolicies()Ljava/util/List;
-#setPolicies(Ljava/util/List;)V
@3.1.0.CR1
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
@4.0.0.Beta1
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#getOwnerManagedAccess()Ljava/lang/Boolean;
+#setOwnerManagedAccess(Ljava/lang/Boolean;)V
+#addScope([Ljava/lang/String;)V
-#setTypedScopes(Ljava/util/List;)V
-#getTypedScopes()Ljava/util/List;
@4.0.0.Beta2
+#setOwner(Ljava/lang/String;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V
@4.2.0.Final
+#<init>(Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
*#getUri()Ljava/lang/String;[deprecated]
+#getUris()Ljava/util/Set;
*#setUri(Ljava/lang/String;)V[deprecated]
+#setUris(Ljava/util/Set;)V
@7.0.0
+#addScope(Lorg/keycloak/representations/idm/authorization/ScopeRepresentation;)V

+###org/keycloak/representations/idm/GroupRepresentation
@1.7.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getRealmRoles()Ljava/util/List;
+#setRealmRoles(Ljava/util/List;)V
+#getClientRoles()Ljava/util/Map;
+#setClientRoles(Ljava/util/Map;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V
+#singleAttribute(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/GroupRepresentation;
+#getSubGroups()Ljava/util/List;
+#setSubGroups(Ljava/util/List;)V
@3.2.0.CR1
+#getAccess()Ljava/util/Map;
+#setAccess(Ljava/util/Map;)V

+###org/keycloak/representations/idm/IdentityProviderMapperRepresentation
@1.2.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getIdentityProviderAlias()Ljava/lang/String;
+#setIdentityProviderAlias(Ljava/lang/String;)V
+#getIdentityProviderMapper()Ljava/lang/String;
+#setIdentityProviderMapper(Ljava/lang/String;)V
+#getConfig()Ljava/util/Map;
+#setConfig(Ljava/util/Map;)V

+###org/keycloak/representations/idm/ClientInitialAccessPresentation
@1.7.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getToken()Ljava/lang/String;
+#setToken(Ljava/lang/String;)V
+#getTimestamp()Ljava/lang/Integer;
+#setTimestamp(Ljava/lang/Integer;)V
+#getExpiration()Ljava/lang/Integer;
+#setExpiration(Ljava/lang/Integer;)V
+#getCount()Ljava/lang/Integer;
+#setCount(Ljava/lang/Integer;)V
+#getRemainingCount()Ljava/lang/Integer;
+#setRemainingCount(Ljava/lang/Integer;)V

+###org/keycloak/representations/idm/OAuthClientRepresentation
@1.0-alpha-1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#isEnabled()Z
+#setEnabled(Z)V
+#getBaseUrl()Ljava/lang/String;
+#setBaseUrl(Ljava/lang/String;)V
+#getRedirectUris()Ljava/util/List;
+#setRedirectUris(Ljava/util/List;)V
+#getWebOrigins()Ljava/util/List;
+#setWebOrigins(Ljava/util/List;)V
+#getCredentials()Ljava/util/List;
+#setCredentials(Ljava/util/List;)V
@1.0-alpha-3
+#isEnabled()Ljava/lang/Boolean;
+#setEnabled(Ljava/lang/Boolean;)V
+#getSecret()Ljava/lang/String;
+#setSecret(Ljava/lang/String;)V
+#getClaims()Lorg/keycloak/representations/idm/ClaimRepresentation;
+#setClaims(Lorg/keycloak/representations/idm/ClaimRepresentation;)V
+#getNotBefore()Ljava/lang/Integer;
+#setNotBefore(Ljava/lang/Integer;)V
+#isPublicClient()Ljava/lang/Boolean;
+#setPublicClient(Ljava/lang/Boolean;)V
-#isEnabled()Z
-#setEnabled(Z)V
-#getCredentials()Ljava/util/List;
-#setCredentials(Ljava/util/List;)V
@1.0-beta-1
+#isDirectGrantsOnly()Ljava/lang/Boolean;
+#setDirectGrantsOnly(Ljava/lang/Boolean;)V
@1.0-beta-1-20150521
-#isDirectGrantsOnly()Ljava/lang/Boolean;
-#setDirectGrantsOnly(Ljava/lang/Boolean;)V
@1.0-beta-2
+#isDirectGrantsOnly()Ljava/lang/Boolean;
+#setDirectGrantsOnly(Ljava/lang/Boolean;)V
@1.0-beta-4
+#isFullScopeAllowed()Ljava/lang/Boolean;
+#setFullScopeAllowed(Ljava/lang/Boolean;)V
-#getBaseUrl()Ljava/lang/String;
-#setBaseUrl(Ljava/lang/String;)V
@1.1.0.Beta1
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V
@1.2.0.Beta1
+#isFrontchannelLogout()Ljava/lang/Boolean;
+#setFrontchannelLogout(Ljava/lang/Boolean;)V
+#getIdentityProviders()Ljava/util/List;
+#setIdentityProviders(Ljava/util/List;)V
+#getProtocolMappers()Ljava/util/List;
+#setProtocolMappers(Ljava/util/List;)V
@1.2.0.CR1
-#getId()Ljava/lang/String;
-#setId(Ljava/lang/String;)V
-#getName()Ljava/lang/String;
-#setName(Ljava/lang/String;)V
-#isEnabled()Ljava/lang/Boolean;
-#setEnabled(Ljava/lang/Boolean;)V
-#getRedirectUris()Ljava/util/List;
-#setRedirectUris(Ljava/util/List;)V
-#getWebOrigins()Ljava/util/List;
-#setWebOrigins(Ljava/util/List;)V
-#getSecret()Ljava/lang/String;
-#setSecret(Ljava/lang/String;)V
-#getClaims()Lorg/keycloak/representations/idm/ClaimRepresentation;
-#setClaims(Lorg/keycloak/representations/idm/ClaimRepresentation;)V
-#getNotBefore()Ljava/lang/Integer;
-#setNotBefore(Ljava/lang/Integer;)V
-#isPublicClient()Ljava/lang/Boolean;
-#setPublicClient(Ljava/lang/Boolean;)V
-#isDirectGrantsOnly()Ljava/lang/Boolean;
-#setDirectGrantsOnly(Ljava/lang/Boolean;)V
-#isFullScopeAllowed()Ljava/lang/Boolean;
-#setFullScopeAllowed(Ljava/lang/Boolean;)V
-#getProtocol()Ljava/lang/String;
-#setProtocol(Ljava/lang/String;)V
-#getAttributes()Ljava/util/Map;
-#setAttributes(Ljava/util/Map;)V
-#isFrontchannelLogout()Ljava/lang/Boolean;
-#setFrontchannelLogout(Ljava/lang/Boolean;)V
-#getIdentityProviders()Ljava/util/List;
-#setIdentityProviders(Ljava/util/List;)V
-#getProtocolMappers()Ljava/util/List;
-#setProtocolMappers(Ljava/util/List;)V

+###org/keycloak/representations/idm/ManagementPermissionReference
@3.2.0.CR1
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getResource()Ljava/lang/String;
+#setResource(Ljava/lang/String;)V
+#getScopePermissions()Ljava/util/Map;
+#setScopePermissions(Ljava/util/Map;)V

+###org/keycloak/representations/idm/ClientMappingsRepresentation
@1.2.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getClient()Ljava/lang/String;
+#setClient(Ljava/lang/String;)V
+#getMappings()Ljava/util/List;
+#setMappings(Ljava/util/List;)V

+###org/keycloak/representations/idm/ClientTemplateRepresentation
@1.8.0.Alpha1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getProtocolMappers()Ljava/util/List;
+#setProtocolMappers(Ljava/util/List;)V
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
@1.8.0.CR1
+#isFullScopeAllowed()Ljava/lang/Boolean;
+#setFullScopeAllowed(Ljava/lang/Boolean;)V
+#isBearerOnly()Ljava/lang/Boolean;
+#setBearerOnly(Ljava/lang/Boolean;)V
+#isConsentRequired()Ljava/lang/Boolean;
+#setConsentRequired(Ljava/lang/Boolean;)V
+#isStandardFlowEnabled()Ljava/lang/Boolean;
+#setStandardFlowEnabled(Ljava/lang/Boolean;)V
+#isImplicitFlowEnabled()Ljava/lang/Boolean;
+#setImplicitFlowEnabled(Ljava/lang/Boolean;)V
+#isDirectAccessGrantsEnabled()Ljava/lang/Boolean;
+#setDirectAccessGrantsEnabled(Ljava/lang/Boolean;)V
+#isServiceAccountsEnabled()Ljava/lang/Boolean;
+#setServiceAccountsEnabled(Ljava/lang/Boolean;)V
+#isPublicClient()Ljava/lang/Boolean;
+#setPublicClient(Ljava/lang/Boolean;)V
+#isFrontchannelLogout()Ljava/lang/Boolean;
+#setFrontchannelLogout(Ljava/lang/Boolean;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V

+###org/keycloak/representations/idm/ComponentExportRepresentation
@2.2.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getProviderId()Ljava/lang/String;
+#setProviderId(Ljava/lang/String;)V
+#getConfig()Lorg/keycloak/common/util/MultivaluedHashMap;
+#setConfig(Lorg/keycloak/common/util/MultivaluedHashMap;)V
+#getSubComponents()Lorg/keycloak/common/util/MultivaluedHashMap;
+#setSubComponents(Lorg/keycloak/common/util/MultivaluedHashMap;)V
@2.3.0.CR1
+#getSubType()Ljava/lang/String;
+#setSubType(Ljava/lang/String;)V

+###org/keycloak/representations/idm/UserSessionRepresentation
@1.0-beta-1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#getIpAddress()Ljava/lang/String;
+#setIpAddress(Ljava/lang/String;)V
+#getStart()J
+#setStart(J)V
+#getLastAccess()J
+#setLastAccess(J)V
+#getApplications()Ljava/util/Set;
+#setApplications(Ljava/util/Set;)V
+#getClients()Ljava/util/Map;
+#setClients(Ljava/util/Map;)V
@1.1.0.Beta1
+#getApplications()Ljava/util/Map;
+#setApplications(Ljava/util/Map;)V
-#getApplications()Ljava/util/Set;
-#setApplications(Ljava/util/Set;)V
@1.2.0.CR1
-#getApplications()Ljava/util/Map;
-#setApplications(Ljava/util/Map;)V
@1.4.0.Final
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getUserId()Ljava/lang/String;
+#setUserId(Ljava/lang/String;)V
-#getUser()Ljava/lang/String;
-#setUser(Ljava/lang/String;)V
@20.0.0
+#isRememberMe()Z
+#setRememberMe(Z)V

+###org/keycloak/representations/provider/ScriptProviderDescriptor
@7.0.1
+#<init>()V
+#getProviders()Ljava/util/Map;
+#setAuthenticators(Ljava/util/List;)V
+#setPolicies(Ljava/util/List;)V
+#setMappers(Ljava/util/List;)V
+#addAuthenticator(Ljava/lang/String;Ljava/lang/String;)V
+#addPolicy(Ljava/lang/String;Ljava/lang/String;)V
+#addMapper(Ljava/lang/String;Ljava/lang/String;)V
@19.0.2
+#setSAMLMappers(Ljava/util/List;)V
+#addSAMLMapper(Ljava/lang/String;Ljava/lang/String;)V

+###org/keycloak/representations/RefreshToken
@1.0-alpha-3
+#<init>()V
+#<init>(Lorg/keycloak/representations/AccessToken;)V
@1.2.0.Beta1
-#<init>()V
@4.5.0.Final
+#getCategory()Lorg/keycloak/TokenCategory;

+###org/keycloak/representations/KeyStoreConfig
@1.9.1.Final
+#<init>()V
+#isRealmCertificate()Ljava/lang/Boolean;
+#setRealmCertificate(Ljava/lang/Boolean;)V
+#getStorePassword()Ljava/lang/String;
+#setStorePassword(Ljava/lang/String;)V
+#getKeyPassword()Ljava/lang/String;
+#setKeyPassword(Ljava/lang/String;)V
+#getKeyAlias()Ljava/lang/String;
+#setKeyAlias(Ljava/lang/String;)V
+#getRealmAlias()Ljava/lang/String;
+#setRealmAlias(Ljava/lang/String;)V
+#getFormat()Ljava/lang/String;
+#setFormat(Ljava/lang/String;)V

+###org/keycloak/representations/AddressClaimSet
@1.2.0.Beta1
+#<init>()V
+#getFormattedAddress()Ljava/lang/String;
+#setFormattedAddress(Ljava/lang/String;)V
+#getStreetAddress()Ljava/lang/String;
+#setStreetAddress(Ljava/lang/String;)V
+#getLocality()Ljava/lang/String;
+#setLocality(Ljava/lang/String;)V
+#getRegion()Ljava/lang/String;
+#setRegion(Ljava/lang/String;)V
+#getPostalCode()Ljava/lang/String;
+#setPostalCode(Ljava/lang/String;)V
+#getCountry()Ljava/lang/String;
+#setCountry(Ljava/lang/String;)V

+###org/keycloak/representations/IDToken
@1.0-alpha-3
+#<init>()V
+#getNonce()Ljava/lang/String;
+#setNonce(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getGivenName()Ljava/lang/String;
+#setGivenName(Ljava/lang/String;)V
+#getFamilyName()Ljava/lang/String;
+#setFamilyName(Ljava/lang/String;)V
+#getMiddleName()Ljava/lang/String;
+#setMiddleName(Ljava/lang/String;)V
+#getNickName()Ljava/lang/String;
+#setNickName(Ljava/lang/String;)V
+#getPreferredUsername()Ljava/lang/String;
+#setPreferredUsername(Ljava/lang/String;)V
+#getProfile()Ljava/lang/String;
+#setProfile(Ljava/lang/String;)V
+#getPicture()Ljava/lang/String;
+#setPicture(Ljava/lang/String;)V
+#getWebsite()Ljava/lang/String;
+#setWebsite(Ljava/lang/String;)V
+#getEmail()Ljava/lang/String;
+#setEmail(Ljava/lang/String;)V
+#getEmailVerified()Ljava/lang/Boolean;
+#setEmailVerified(Ljava/lang/Boolean;)V
+#getGender()Ljava/lang/String;
+#setGender(Ljava/lang/String;)V
+#getBirthdate()Ljava/lang/String;
+#setBirthdate(Ljava/lang/String;)V
+#getZoneinfo()Ljava/lang/String;
+#setZoneinfo(Ljava/lang/String;)V
+#getLocale()Ljava/lang/String;
+#setLocale(Ljava/lang/String;)V
+#getPhoneNumber()Ljava/lang/String;
+#setPhoneNumber(Ljava/lang/String;)V
+#getPhoneNumberVerified()Ljava/lang/Boolean;
+#setPhoneNumberVerified(Ljava/lang/Boolean;)V
+#getAddress()Ljava/lang/String;
+#setAddress(Ljava/lang/String;)V
+#getUpdatedAt()Ljava/lang/Long;
+#setUpdatedAt(Ljava/lang/Long;)V
+#getFormattedAddress()Ljava/lang/String;
+#setFormattedAddress(Ljava/lang/String;)V
+#getStreetAddress()Ljava/lang/String;
+#setStreetAddress(Ljava/lang/String;)V
+#getLocality()Ljava/lang/String;
+#setLocality(Ljava/lang/String;)V
+#getRegion()Ljava/lang/String;
+#setRegion(Ljava/lang/String;)V
+#getPostalCode()Ljava/lang/String;
+#setPostalCode(Ljava/lang/String;)V
+#getCountry()Ljava/lang/String;
+#setCountry(Ljava/lang/String;)V
+#getClaimsLocales()Ljava/lang/String;
+#setClaimsLocales(Ljava/lang/String;)V
@1.0-beta-1
+#getSessionState()Ljava/lang/String;
+#setSessionState(Ljava/lang/String;)V
@1.2.0.Beta1
+#getAddress()Lorg/keycloak/representations/AddressClaimSet;
+#setAddress(Lorg/keycloak/representations/AddressClaimSet;)V
+#getOtherClaims()Ljava/util/Map;
+#setOtherClaims(Ljava/lang/String;Ljava/lang/Object;)V
-#getAddress()Ljava/lang/String;
-#setAddress(Ljava/lang/String;)V
-#getFormattedAddress()Ljava/lang/String;
-#setFormattedAddress(Ljava/lang/String;)V
-#getStreetAddress()Ljava/lang/String;
-#setStreetAddress(Ljava/lang/String;)V
-#getLocality()Ljava/lang/String;
-#setLocality(Ljava/lang/String;)V
-#getRegion()Ljava/lang/String;
-#setRegion(Ljava/lang/String;)V
-#getPostalCode()Ljava/lang/String;
-#setPostalCode(Ljava/lang/String;)V
-#getCountry()Ljava/lang/String;
-#setCountry(Ljava/lang/String;)V
@1.2.0.CR1
-#getOtherClaims()Ljava/util/Map;
-#setOtherClaims(Ljava/lang/String;Ljava/lang/Object;)V
@2.1.0.CR1
+#getAuthTime()I
+#setAuthTime(I)V
+#getAcr()Ljava/lang/String;
+#setAcr(Ljava/lang/String;)V
@2.2.0.CR1
+#getAccessTokenHash()Ljava/lang/String;
+#setAccessTokenHash(Ljava/lang/String;)V
+#getCodeHash()Ljava/lang/String;
+#setCodeHash(Ljava/lang/String;)V
@4.0.0.Beta1
+#getStateHash()Ljava/lang/String;
+#setStateHash(Ljava/lang/String;)V
@4.5.0.Final
+#getCategory()Lorg/keycloak/TokenCategory;
@9.0.2
+#getAuth_time()Ljava/lang/Long;
*#getAuthTime()I[deprecated]
+#setAuth_time(Ljava/lang/Long;)V
@15.0.0
+#getSessionId()Ljava/lang/String;

+###org/keycloak/TokenIdGenerator
@1.0-alpha-1
+#<init>()V
+#generateId()Ljava/lang/String;

+###org/keycloak/KeycloakSecurityContext
@1.0-alpha-3
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/keycloak/representations/AccessToken;Ljava/lang/String;Lorg/keycloak/representations/IDToken;)V
+#getToken()Lorg/keycloak/representations/AccessToken;
+#getTokenString()Ljava/lang/String;
+#getIdToken()Lorg/keycloak/representations/IDToken;
+#getIdTokenString()Ljava/lang/String;
@1.1.0.Beta1
+#getRealm()Ljava/lang/String;
@2.0.0.CR1
+#getAuthorizationContext()Lorg/keycloak/AuthorizationContext;

+###org/keycloak/OAuth2Constants
@1.0-beta-1

+###org/keycloak/TokenVerifier$RealmUrlCheck
@3.2.0.CR1
+#<init>(Ljava/lang/String;)V
+#test(Lorg/keycloak/representations/JsonWebToken;)Z

+###org/keycloak/exceptions/TokenSignatureInvalidException
@3.2.0.CR1
+#<init>(Lorg/keycloak/representations/JsonWebToken;)V
+#<init>(Lorg/keycloak/representations/JsonWebToken;Ljava/lang/String;)V
+#<init>(Lorg/keycloak/representations/JsonWebToken;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/keycloak/representations/JsonWebToken;Ljava/lang/Throwable;)V

+###org/keycloak/Config
@1.0-beta-1
+#<init>()V
+#init(Lorg/keycloak/Config$ConfigProvider;)V
+#getAdminRealm()Ljava/lang/String;
+#getProvider(Ljava/lang/String;)Ljava/lang/String;
+#scope([Ljava/lang/String;)Lorg/keycloak/Config$Scope;

+###org/keycloak/util/JWKSUtils
@2.3.0.CR1
+#<init>()V
+#getKeysForUse(Lorg/keycloak/jose/jwk/JSONWebKeySet;Lorg/keycloak/jose/jwk/JWK$Use;)Ljava/util/Map;
+#getKeyForUse(Lorg/keycloak/jose/jwk/JSONWebKeySet;Lorg/keycloak/jose/jwk/JWK$Use;)Lorg/keycloak/jose/jwk/JWK;
@4.7.0.Final
+#getKeyWrappersForUse(Lorg/keycloak/jose/jwk/JSONWebKeySet;Lorg/keycloak/jose/jwk/JWK$Use;)Ljava/util/Map;
@21.0.0
*#getKeysForUse(Lorg/keycloak/jose/jwk/JSONWebKeySet;Lorg/keycloak/jose/jwk/JWK$Use;)Ljava/util/Map;[deprecated]
+#getKeyWrappersForUse(Lorg/keycloak/jose/jwk/JSONWebKeySet;Lorg/keycloak/jose/jwk/JWK$Use;)Lorg/keycloak/crypto/PublicKeysWrapper;
-#getKeyWrappersForUse(Lorg/keycloak/jose/jwk/JSONWebKeySet;Lorg/keycloak/jose/jwk/JWK$Use;)Ljava/util/Map;

+###org/keycloak/util/TokenUtil
@1.6.0.Final
+#<init>()V
+#isOfflineTokenRequested(Ljava/lang/String;)Z
+#getRefreshToken([B)Lorg/keycloak/representations/RefreshToken;
+#getRefreshToken(Ljava/lang/String;)Lorg/keycloak/representations/RefreshToken;
+#isOfflineToken(Ljava/lang/String;)Z
@2.1.0.CR1
+#attachOIDCScope(Ljava/lang/String;)Ljava/lang/String;
+#isOIDCRequest(Ljava/lang/String;)Z
+#hasScope(Ljava/lang/String;Ljava/lang/String;)Z
+#hasPrompt(Ljava/lang/String;Ljava/lang/String;)Z
@3.4.0.CR1
+#jweDirectEncode(Ljava/security/Key;Ljava/security/Key;Lorg/keycloak/representations/JsonWebToken;)Ljava/lang/String;
+#jweDirectVerifyAndDecode(Ljava/security/Key;Ljava/security/Key;Ljava/lang/String;Ljava/lang/Class;)Lorg/keycloak/representations/JsonWebToken;
@7.0.0
+#jweKeyEncryptionEncode(Ljava/security/Key;[BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/keycloak/jose/jwe/alg/JWEAlgorithmProvider;Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;)Ljava/lang/String;
+#jweKeyEncryptionVerifyAndDecode(Ljava/security/Key;Ljava/lang/String;)[B
+#jweKeyEncryptionVerifyAndDecode(Ljava/security/Key;Ljava/lang/String;Lorg/keycloak/jose/jwe/alg/JWEAlgorithmProvider;Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;)[B
@13.0.0
+#jweDirectEncode(Ljava/security/Key;Ljava/security/Key;[B)Ljava/lang/String;
+#jweDirectVerifyAndDecode(Ljava/security/Key;Ljava/security/Key;Ljava/lang/String;)[B
@18.0.0
+#jweKeyEncryptionEncode(Ljava/security/Key;[BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/keycloak/jose/jwe/alg/JWEAlgorithmProvider;Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;Ljava/lang/String;)Ljava/lang/String;

+###org/keycloak/crypto/KeyUse
@4.1.0.Final
+#values()[Lorg/keycloak/crypto/KeyUse;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/crypto/KeyUse;
@7.0.0
+#getSpecName()Ljava/lang/String;

+###org/keycloak/crypto/HashException
@4.8.0.Final
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/keycloak/crypto/SignatureSignerContext
@4.5.0.Final
+#getKid()Ljava/lang/String;
+#getAlgorithm()Ljava/lang/String;
+#sign([B)[B
@4.8.0.Final
+#getHashAlgorithm()Ljava/lang/String;

+###org/keycloak/crypto/AsymmetricSignatureVerifierContext
@4.5.0.Final
+#<init>(Lorg/keycloak/crypto/KeyWrapper;)V
+#getKid()Ljava/lang/String;
+#getAlgorithm()Ljava/lang/String;
+#verify([B[B)Z

+###org/keycloak/jose/jwk/JWKParser
@1.2.0.Beta1
+#<init>(Lorg/keycloak/jose/jwk/JWK;)V
+#create()Lorg/keycloak/jose/jwk/JWKParser;
+#create(Lorg/keycloak/jose/jwk/JWK;)Lorg/keycloak/jose/jwk/JWKParser;
+#parse(Ljava/lang/String;)Lorg/keycloak/jose/jwk/JWKParser;
+#getJwk()Lorg/keycloak/jose/jwk/JWK;
+#toPublicKey()Ljava/security/PublicKey;
@2.2.0.CR1
+#isAlgorithmSupported(Ljava/lang/String;)Z
@2.3.0.CR1
+#isKeyTypeSupported(Ljava/lang/String;)Z
-#isAlgorithmSupported(Ljava/lang/String;)Z

+###org/keycloak/jose/jwk/ECPublicJWK
@4.5.0.Final
+#<init>()V
+#getCrv()Ljava/lang/String;
+#setCrv(Ljava/lang/String;)V
+#getX()Ljava/lang/String;
+#setX(Ljava/lang/String;)V
+#getY()Ljava/lang/String;
+#setY(Ljava/lang/String;)V

+###org/keycloak/jose/jws/JWSBuilder
@1.0-alpha-1
+#<init>()V
+#type(Ljava/lang/String;)Lorg/keycloak/jose/jws/JWSBuilder;
+#contentType(Ljava/lang/String;)Lorg/keycloak/jose/jws/JWSBuilder;
+#content([B)Lorg/keycloak/jose/jws/JWSBuilder$EncodingBuilder;
+#jsonContent(Ljava/lang/Object;)Lorg/keycloak/jose/jws/JWSBuilder$EncodingBuilder;
@1.0-alpha-1-12062013
-###org/keycloak/jose/jws/JWSBuilder

+###org/keycloak/jose/jwe/enc/AesCbcHmacShaEncryptionProvider$Aes128CbcHmacSha256Provider
@3.4.0.CR1
+#<init>()V
+#getExpectedCEKLength()I

+###org/keycloak/jose/jwe/enc/AesCbcHmacShaEncryptionProvider
@3.4.0.CR1
+#<init>()V
+#encodeJwe(Lorg/keycloak/jose/jwe/JWE;)V
+#verifyAndDecodeJwe(Lorg/keycloak/jose/jwe/JWE;)V
+#deserializeCEK(Lorg/keycloak/jose/jwe/JWEKeyStorage;)V
+#serializeCEK(Lorg/keycloak/jose/jwe/JWEKeyStorage;)[B

+###org/keycloak/jose/jwe/enc/AesGcmJWEEncryptionProvider
@7.0.0
+#<init>(Ljava/lang/String;)V
+#getExpectedCEKLength()I

+###org/keycloak/jose/jwe/JWEKeyStorage
@3.4.0.CR1
+#<init>()V
+#getEncryptionKey()Ljava/security/Key;
+#setEncryptionKey(Ljava/security/Key;)Lorg/keycloak/jose/jwe/JWEKeyStorage;
+#setCEKBytes([B)V
+#getCekBytes()[B
+#setCEKKey(Ljava/security/Key;Lorg/keycloak/jose/jwe/JWEKeyStorage$KeyUse;)Lorg/keycloak/jose/jwe/JWEKeyStorage;
+#getCEKKey(Lorg/keycloak/jose/jwe/JWEKeyStorage$KeyUse;Z)Ljava/security/Key;
+#setEncryptionProvider(Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;)V
@7.0.0
+#getDecryptionKey()Ljava/security/Key;
+#setDecryptionKey(Ljava/security/Key;)Lorg/keycloak/jose/jwe/JWEKeyStorage;

+###org/keycloak/jose/jwe/alg/AesKeyWrapAlgorithmProvider
@3.4.0.CR1
+#<init>()V
+#decodeCek([BLjava/security/Key;)[B
+#encodeCek(Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;Lorg/keycloak/jose/jwe/JWEKeyStorage;Ljava/security/Key;)[B
@19.0.0
-###org/keycloak/jose/jwe/alg/AesKeyWrapAlgorithmProvider

+###org/keycloak/jose/jwe/JWE
@3.4.0.CR1
+#<init>()V
+#header(Lorg/keycloak/jose/jwe/JWEHeader;)Lorg/keycloak/jose/jwe/JWE;
+#getBase64Header()Ljava/lang/String;
+#getKeyStorage()Lorg/keycloak/jose/jwe/JWEKeyStorage;
+#getInitializationVector()[B
+#content([B)Lorg/keycloak/jose/jwe/JWE;
+#getContent()[B
+#getEncryptedContent()[B
+#getAuthenticationTag()[B
+#setEncryptedContentInfo([B[B[B)V
+#encodeJwe()Ljava/lang/String;
+#verifyAndDecodeJwe(Ljava/lang/String;)Lorg/keycloak/jose/jwe/JWE;
@4.0.0.Beta2
+#encryptUTF8(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encrypt(Ljava/lang/String;Ljava/lang/String;[B)Ljava/lang/String;
+#decrypt(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[B
+#decryptUTF8(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@7.0.0
+#encodeJwe(Lorg/keycloak/jose/jwe/alg/JWEAlgorithmProvider;Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;)Ljava/lang/String;
+#verifyAndDecodeJwe(Ljava/lang/String;Lorg/keycloak/jose/jwe/alg/JWEAlgorithmProvider;Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;)Lorg/keycloak/jose/jwe/JWE;
@15.0.0
+#<init>(Ljava/lang/String;)V
+#getHeader()Lorg/keycloak/jose/JOSEHeader;
+#verifyAndDecodeJwe()Lorg/keycloak/jose/jwe/JWE;
@19.0.0
-#encryptUTF8(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#encrypt(Ljava/lang/String;Ljava/lang/String;[B)Ljava/lang/String;
-#decrypt(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[B
-#decryptUTF8(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/keycloak/Config$ConfigProvider
@1.0-beta-1
+#getProvider(Ljava/lang/String;)Ljava/lang/String;
+#scope([Ljava/lang/String;)Lorg/keycloak/Config$Scope;

+###org/keycloak/representations/AccessToken$CertConf
@4.0.0.Final
+#<init>()V
+#getCertThumbprint()Ljava/lang/String;
+#setCertThumbprint(Ljava/lang/String;)V

+###org/keycloak/representations/account/UserRepresentation
@3.4.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getFirstName()Ljava/lang/String;
+#setFirstName(Ljava/lang/String;)V
+#getLastName()Ljava/lang/String;
+#setLastName(Ljava/lang/String;)V
+#getEmail()Ljava/lang/String;
+#setEmail(Ljava/lang/String;)V
+#isEmailVerified()Z
+#setEmailVerified(Z)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V
@12.0.0
+#singleAttribute(Ljava/lang/String;Ljava/lang/String;)V
+#firstAttribute(Ljava/lang/String;)Ljava/lang/String;
@14.0.0
+#toAttributes()Ljava/util/Map;
@15.0.0
+#getUserProfileMetadata()Lorg/keycloak/representations/account/UserProfileMetadata;
+#setUserProfileMetadata(Lorg/keycloak/representations/account/UserProfileMetadata;)V

+###org/keycloak/representations/account/SessionRepresentation
@3.4.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getIpAddress()Ljava/lang/String;
+#setIpAddress(Ljava/lang/String;)V
+#getStarted()I
+#setStarted(I)V
+#getLastAccess()I
+#setLastAccess(I)V
+#getExpires()I
+#setExpires(I)V
+#getClients()Ljava/util/List;
+#setClients(Ljava/util/List;)V
@8.0.0
+#setBrowser(Ljava/lang/String;)V
+#getBrowser()Ljava/lang/String;
+#getCurrent()Ljava/lang/Boolean;
+#setCurrent(Ljava/lang/Boolean;)V

+###org/keycloak/representations/info/ClientInstallationRepresentation
@1.8.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
+#isDownloadOnly()Z
+#setDownloadOnly(Z)V
+#getDisplayType()Ljava/lang/String;
+#setDisplayType(Ljava/lang/String;)V
+#getHelpText()Ljava/lang/String;
+#setHelpText(Ljava/lang/String;)V
+#getFilename()Ljava/lang/String;
+#setFilename(Ljava/lang/String;)V
+#getMediaType()Ljava/lang/String;
+#setMediaType(Ljava/lang/String;)V

+###org/keycloak/representations/info/ThemeInfoRepresentation
@1.9.0.CR1
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getLocales()[Ljava/lang/String;
+#setLocales([Ljava/lang/String;)V

+###org/keycloak/representations/info/ProviderRepresentation
@1.7.0.CR1
+#<init>()V
+#getOperationalInfo()Ljava/util/Map;
+#setOperationalInfo(Ljava/util/Map;)V
@3.2.0.CR1
+#getOrder()I
+#setOrder(I)V

+###org/keycloak/representations/info/ProfileInfoRepresentation
@2.3.0.CR1
+#<init>()V
+#create()Lorg/keycloak/representations/info/ProfileInfoRepresentation;
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#isPreviewEnabled()Z
+#setPreviewEnabled(Z)V
@2.5.0.CR1
+#getDisabledFeatures()Ljava/util/List;
-#setName(Ljava/lang/String;)V
-#isPreviewEnabled()Z
-#setPreviewEnabled(Z)V
@4.6.0.Final
+#getPreviewFeatures()Ljava/util/List;
+#getExperimentalFeatures()Ljava/util/List;

+###org/keycloak/representations/oidc/OIDCClientRepresentation
@1.7.0.CR1
+#<init>()V
+#getRedirectUris()Ljava/util/List;
+#setRedirectUris(Ljava/util/List;)V
+#getTokenEndpointAuthMethod()Ljava/lang/String;
+#setTokenEndpointAuthMethod(Ljava/lang/String;)V
+#getGrantTypes()Ljava/util/List;
+#setGrantTypes(Ljava/util/List;)V
+#getResponseTypes()Ljava/util/List;
+#setResponseTypes(Ljava/util/List;)V
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)V
+#getClientSecret()Ljava/lang/String;
+#setClientSecret(Ljava/lang/String;)V
+#getClientName()Ljava/lang/String;
+#setClientName(Ljava/lang/String;)V
+#getClientUri()Ljava/lang/String;
+#setClientUri(Ljava/lang/String;)V
+#getLogoUri()Ljava/lang/String;
+#setLogoUri(Ljava/lang/String;)V
+#getScope()Ljava/lang/String;
+#setScope(Ljava/lang/String;)V
+#getContacts()Ljava/lang/String;
+#setContacts(Ljava/lang/String;)V
+#getTosUri()Ljava/lang/String;
+#setTosUri(Ljava/lang/String;)V
+#getPolicyUri()Ljava/lang/String;
+#setPolicyUri(Ljava/lang/String;)V
+#getJwksUri()Ljava/lang/String;
+#setJwksUri(Ljava/lang/String;)V
+#getJwks()Ljava/lang/String;
+#setJwks(Ljava/lang/String;)V
+#getSoftwareId()Ljava/lang/String;
+#setSoftwareId(Ljava/lang/String;)V
+#getSoftwareVersion()Ljava/lang/String;
+#setSoftwareVersion(Ljava/lang/String;)V
+#getClientIdIssuedAt()Ljava/lang/Integer;
+#setClientIdIssuedAt(Ljava/lang/Integer;)V
+#getClientSecretExpiresAt()Ljava/lang/Integer;
+#setClientSecretExpiresAt(Ljava/lang/Integer;)V
+#getRegistrationClientUri()Ljava/lang/String;
+#setRegistrationClientUri(Ljava/lang/String;)V
+#getRegistrationAccessToken()Ljava/lang/String;
+#setRegistrationAccessToken(Ljava/lang/String;)V
@2.2.0.CR1
+#getTokenEndpointAuthSigningAlg()Ljava/lang/String;
+#setTokenEndpointAuthSigningAlg(Ljava/lang/String;)V
+#getApplicationType()Ljava/lang/String;
+#setApplicationType(Ljava/lang/String;)V
+#getContacts()Ljava/util/List;
+#setContacts(Ljava/util/List;)V
+#getJwks()Lorg/keycloak/jose/jwk/JSONWebKeySet;
+#setJwks(Lorg/keycloak/jose/jwk/JSONWebKeySet;)V
+#getSectorIdentifierUri()Ljava/lang/String;
+#setSectorIdentifierUri(Ljava/lang/String;)V
+#getSubjectType()Ljava/lang/String;
+#setSubjectType(Ljava/lang/String;)V
+#getIdTokenSignedResponseAlg()Ljava/lang/String;
+#setIdTokenSignedResponseAlg(Ljava/lang/String;)V
+#getIdTokenEncryptedResponseAlg()Ljava/lang/String;
+#setIdTokenEncryptedResponseAlg(Ljava/lang/String;)V
+#getIdTokenEncryptedResponseEnc()Ljava/lang/String;
+#setIdTokenEncryptedResponseEnc(Ljava/lang/String;)V
+#getUserinfoSignedResponseAlg()Ljava/lang/String;
+#setUserinfoSignedResponseAlg(Ljava/lang/String;)V
+#getUserinfoEncryptedResponseAlg()Ljava/lang/String;
+#setUserinfoEncryptedResponseAlg(Ljava/lang/String;)V
+#getUserinfoEncryptedResponseEnc()Ljava/lang/String;
+#setUserinfoEncryptedResponseEnc(Ljava/lang/String;)V
+#getRequestObjectSigningAlg()Ljava/lang/String;
+#setRequestObjectSigningAlg(Ljava/lang/String;)V
+#getRequestObjectEncryptionAlg()Ljava/lang/String;
+#setRequestObjectEncryptionAlg(Ljava/lang/String;)V
+#getRequestObjectEncryptionEnc()Ljava/lang/String;
+#setRequestObjectEncryptionEnc(Ljava/lang/String;)V
+#getDefaultMaxAge()Ljava/lang/Integer;
+#setDefaultMaxAge(Ljava/lang/Integer;)V
+#getRequireAuthTime()Ljava/lang/Boolean;
+#setRequireAuthTime(Ljava/lang/Boolean;)V
+#getDefaultAcrValues()Ljava/util/List;
+#setDefaultAcrValues(Ljava/util/List;)V
+#getInitiateLoginUri()Ljava/lang/String;
+#setInitiateLoginUri(Ljava/lang/String;)V
+#getRequestUris()Ljava/util/List;
+#setRequestUris(Ljava/util/List;)V
+#getPostLogoutRedirectUris()Ljava/util/List;
+#setPostLogoutRedirectUris(Ljava/util/List;)V
-#getContacts()Ljava/lang/String;
-#setContacts(Ljava/lang/String;)V
-#getJwks()Ljava/lang/String;
-#setJwks(Ljava/lang/String;)V
@4.0.0.Final
+#getTlsClientCertificateBoundAccessTokens()Ljava/lang/Boolean;
+#setTlsClientCertificateBoundAccessTokens(Ljava/lang/Boolean;)V
@11.0.0
+#getTlsClientAuthSubjectDn()Ljava/lang/String;
+#setTlsClientAuthSubjectDn(Ljava/lang/String;)V
@12.0.0
+#getBackchannelLogoutUri()Ljava/lang/String;
+#setBackchannelLogoutUri(Ljava/lang/String;)V
+#getBackchannelLogoutSessionRequired()Ljava/lang/Boolean;
+#setBackchannelLogoutSessionRequired(Ljava/lang/Boolean;)V
+#getBackchannelLogoutRevokeOfflineTokens()Ljava/lang/Boolean;
+#setBackchannelLogoutRevokeOfflineTokens(Ljava/lang/Boolean;)V
@13.0.0
+#getBackchannelTokenDeliveryMode()Ljava/lang/String;
+#setBackchannelTokenDeliveryMode(Ljava/lang/String;)V
@15.0.0
+#getBackchannelClientNotificationEndpoint()Ljava/lang/String;
+#setBackchannelClientNotificationEndpoint(Ljava/lang/String;)V
+#getBackchannelAuthenticationRequestSigningAlg()Ljava/lang/String;
+#setBackchannelAuthenticationRequestSigningAlg(Ljava/lang/String;)V
+#getAuthorizationSignedResponseAlg()Ljava/lang/String;
+#setAuthorizationSignedResponseAlg(Ljava/lang/String;)V
+#getAuthorizationEncryptedResponseAlg()Ljava/lang/String;
+#setAuthorizationEncryptedResponseAlg(Ljava/lang/String;)V
+#getAuthorizationEncryptedResponseEnc()Ljava/lang/String;
+#setAuthorizationEncryptedResponseEnc(Ljava/lang/String;)V
+#getRequirePushedAuthorizationRequests()Ljava/lang/Boolean;
+#setRequirePushedAuthorizationRequests(Ljava/lang/Boolean;)V
@15.1.0
+#getFrontChannelLogoutUri()Ljava/lang/String;
+#setFrontChannelLogoutUri(Ljava/lang/String;)V
@18.0.0
+#getFrontchannelLogoutSessionRequired()Ljava/lang/Boolean;
+#setFrontchannelLogoutSessionRequired(Ljava/lang/Boolean;)V

+###org/keycloak/representations/adapters/config/AdapterConfig
@1.0-alpha-1
+#<init>()V
+#isAllowAnyHostname()Z
+#setAllowAnyHostname(Z)V
+#isDisableTrustManager()Z
+#setDisableTrustManager(Z)V
+#getTruststore()Ljava/lang/String;
+#setTruststore(Ljava/lang/String;)V
+#getTruststorePassword()Ljava/lang/String;
+#setTruststorePassword(Ljava/lang/String;)V
+#getClientKeystore()Ljava/lang/String;
+#setClientKeystore(Ljava/lang/String;)V
+#getClientKeystorePassword()Ljava/lang/String;
+#setClientKeystorePassword(Ljava/lang/String;)V
+#getClientKeyPassword()Ljava/lang/String;
+#setClientKeyPassword(Ljava/lang/String;)V
+#getConnectionPoolSize()I
+#setConnectionPoolSize(I)V
@1.0-alpha-1-12062013
-###org/keycloak/representations/adapters/config/AdapterConfig

+###org/keycloak/representations/idm/OAuth2ErrorRepresentation
@2.2.0.CR1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getError()Ljava/lang/String;
+#setError(Ljava/lang/String;)V
+#getErrorDescription()Ljava/lang/String;
+#setErrorDescription(Ljava/lang/String;)V

+###org/keycloak/representations/idm/ProtocolMapperRepresentation
@1.2.0.Beta1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
+#getProtocolMapper()Ljava/lang/String;
+#setProtocolMapper(Ljava/lang/String;)V
+#getConfig()Ljava/util/Map;
+#setConfig(Ljava/util/Map;)V
+#isConsentRequired()Z
+#setConsentRequired(Z)V
+#getConsentText()Ljava/lang/String;
+#setConsentText(Ljava/lang/String;)V
@4.0.0.Final
*#isConsentRequired()Z[deprecated]
*#getConsentText()Ljava/lang/String;[deprecated]
-#setConsentRequired(Z)V
-#setConsentText(Ljava/lang/String;)V

+###org/keycloak/representations/idm/SynchronizationResultRepresentation
@2.5.0.CR1
+#<init>()V
+#isIgnored()Z
+#setIgnored(Z)V
+#getAdded()I
+#setAdded(I)V
+#getUpdated()I
+#setUpdated(I)V
+#getRemoved()I
+#setRemoved(I)V
+#getFailed()I
+#setFailed(I)V
+#getStatus()Ljava/lang/String;
+#setStatus(Ljava/lang/String;)V

+###org/keycloak/representations/idm/CredentialRepresentation
@1.0-alpha-1
+#<init>()V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getDevice()Ljava/lang/String;
+#setDevice(Ljava/lang/String;)V
@1.0-beta-4
+#getHashedSaltedValue()Ljava/lang/String;
+#setHashedSaltedValue(Ljava/lang/String;)V
+#getSalt()Ljava/lang/String;
+#setSalt(Ljava/lang/String;)V
+#getHashIterations()Ljava/lang/Integer;
+#setHashIterations(Ljava/lang/Integer;)V
@1.0-rc-1
+#isTemporary()Z
+#setTemporary(Z)V
@1.5.0-Final
+#getCounter()Ljava/lang/Integer;
+#setCounter(Ljava/lang/Integer;)V
+#getAlgorithm()Ljava/lang/String;
+#setAlgorithm(Ljava/lang/String;)V
+#getDigits()Ljava/lang/Integer;
+#setDigits(Ljava/lang/Integer;)V
+#getPeriod()Ljava/lang/Integer;
+#setPeriod(Ljava/lang/Integer;)V
@1.7.0.CR1
+#isTemporary()Ljava/lang/Boolean;
+#setTemporary(Ljava/lang/Boolean;)V
-#isTemporary()Z
-#setTemporary(Z)V
@1.9.0.CR1
+#getCreatedDate()Ljava/lang/Long;
+#setCreatedDate(Ljava/lang/Long;)V
@2.3.0.CR1
+#getConfig()Lorg/keycloak/common/util/MultivaluedHashMap;
+#setConfig(Lorg/keycloak/common/util/MultivaluedHashMap;)V
@3.2.0.CR1
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@8.0.0
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getUserLabel()Ljava/lang/String;
+#setUserLabel(Ljava/lang/String;)V
+#getSecretData()Ljava/lang/String;
+#setSecretData(Ljava/lang/String;)V
+#getCredentialData()Ljava/lang/String;
+#setCredentialData(Ljava/lang/String;)V
+#getPriority()Ljava/lang/Integer;
+#setPriority(Ljava/lang/Integer;)V
*#getDevice()Ljava/lang/String;[deprecated]
*#getHashedSaltedValue()Ljava/lang/String;[deprecated]
*#getSalt()Ljava/lang/String;[deprecated]
*#getHashIterations()Ljava/lang/Integer;[deprecated]
*#getCounter()Ljava/lang/Integer;[deprecated]
*#getAlgorithm()Ljava/lang/String;[deprecated]
*#getDigits()Ljava/lang/Integer;[deprecated]
*#getPeriod()Ljava/lang/Integer;[deprecated]
*#getConfig()Lorg/keycloak/common/util/MultivaluedHashMap;[deprecated]
-#setDevice(Ljava/lang/String;)V
-#setHashedSaltedValue(Ljava/lang/String;)V
-#setSalt(Ljava/lang/String;)V
-#setHashIterations(Ljava/lang/Integer;)V
-#setCounter(Ljava/lang/Integer;)V
-#setAlgorithm(Ljava/lang/String;)V
-#setDigits(Ljava/lang/Integer;)V
-#setPeriod(Ljava/lang/Integer;)V
-#setConfig(Lorg/keycloak/common/util/MultivaluedHashMap;)V

+###org/keycloak/representations/idm/IdentityProviderMapperTypeRepresentation
@1.2.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getCategory()Ljava/lang/String;
+#setCategory(Ljava/lang/String;)V
+#getHelpText()Ljava/lang/String;
+#setHelpText(Ljava/lang/String;)V
+#getProperties()Ljava/util/List;
+#setProperties(Ljava/util/List;)V

+###org/keycloak/representations/idm/PublishedRealmRepresentation
@1.0-alpha-1
+#<init>()V
+#getAdminRole()Ljava/lang/String;
+#setAdminRole(Ljava/lang/String;)V
+#getRealm()Ljava/lang/String;
+#setRealm(Ljava/lang/String;)V
+#getSelf()Ljava/lang/String;
+#setSelf(Ljava/lang/String;)V
+#getPublicKeyPem()Ljava/lang/String;
+#setPublicKeyPem(Ljava/lang/String;)V
+#getPublicKey()Ljava/security/PublicKey;
+#setPublicKey(Ljava/security/PublicKey;)V
+#getAuthorizationUrl()Ljava/lang/String;
+#setAuthorizationUrl(Ljava/lang/String;)V
+#getCodeUrl()Ljava/lang/String;
+#setCodeUrl(Ljava/lang/String;)V
+#getGrantUrl()Ljava/lang/String;
+#setGrantUrl(Ljava/lang/String;)V
+#getIdentityGrantUrl()Ljava/lang/String;
+#setIdentityGrantUrl(Ljava/lang/String;)V
@1.0-alpha-3
+#getTokenServiceUrl()Ljava/lang/String;
+#setTokenServiceUrl(Ljava/lang/String;)V
+#getAccountServiceUrl()Ljava/lang/String;
+#setAccountServiceUrl(Ljava/lang/String;)V
+#getAdminApiUrl()Ljava/lang/String;
+#setAdminApiUrl(Ljava/lang/String;)V
+#getNotBefore()I
+#setNotBefore(I)V
-#getAdminRole()Ljava/lang/String;
-#setAdminRole(Ljava/lang/String;)V
-#getSelf()Ljava/lang/String;
-#setSelf(Ljava/lang/String;)V
-#getAuthorizationUrl()Ljava/lang/String;
-#setAuthorizationUrl(Ljava/lang/String;)V
-#getCodeUrl()Ljava/lang/String;
-#setCodeUrl(Ljava/lang/String;)V
-#getGrantUrl()Ljava/lang/String;
-#setGrantUrl(Ljava/lang/String;)V
-#getIdentityGrantUrl()Ljava/lang/String;
-#setIdentityGrantUrl(Ljava/lang/String;)V
@3.4.0.CR1
-#getAdminApiUrl()Ljava/lang/String;
-#setAdminApiUrl(Ljava/lang/String;)V

+###org/keycloak/representations/idm/AuthenticationFlowRepresentation
@1.4.0.Final
+#<init>()V
+#getAlias()Ljava/lang/String;
+#setAlias(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getProviderId()Ljava/lang/String;
+#setProviderId(Ljava/lang/String;)V
+#isTopLevel()Z
+#setTopLevel(Z)V
+#isBuiltIn()Z
+#setBuiltIn(Z)V
+#getAuthenticationExecutions()Ljava/util/List;
+#setAuthenticationExecutions(Ljava/util/List;)V
@1.9.0.Final
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V

+###org/keycloak/representations/idm/ProtocolMapperTypeRepresentation
@1.2.0.Beta1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getCategory()Ljava/lang/String;
+#setCategory(Ljava/lang/String;)V
+#getHelpText()Ljava/lang/String;
+#setHelpText(Ljava/lang/String;)V
+#getProperties()Ljava/util/List;
+#setProperties(Ljava/util/List;)V
@4.6.0.Final
+#getPriority()I
+#setPriority(I)V

+###org/keycloak/representations/idm/PartialImportRepresentation
@1.8.0.CR1
+#<init>()V
+#hasUsers()Z
+#hasClients()Z
+#hasIdps()Z
+#hasRealmRoles()Z
+#hasClientRoles()Z
+#getIfResourceExists()Ljava/lang/String;
+#setIfResourceExists(Ljava/lang/String;)V
+#getPolicy()Lorg/keycloak/representations/idm/PartialImportRepresentation$Policy;
+#getUsers()Ljava/util/List;
+#setUsers(Ljava/util/List;)V
+#getClients()Ljava/util/List;
+#setClients(Ljava/util/List;)V
+#getIdentityProviders()Ljava/util/List;
+#setIdentityProviders(Ljava/util/List;)V
+#getRoles()Lorg/keycloak/representations/idm/RolesRepresentation;
+#setRoles(Lorg/keycloak/representations/idm/RolesRepresentation;)V
@1.9.2.Final
+#hasGroups()Z
+#getGroups()Ljava/util/List;
+#setGroups(Ljava/util/List;)V
@19.0.0
+#getIdentityProviderMappers()Ljava/util/List;
+#setIdentityProviderMappers(Ljava/util/List;)V

+###org/keycloak/representations/idm/ClaimRepresentation
@1.0-alpha-3
+#<init>()V
+#getName()Z
+#setName(Z)V
+#getUsername()Z
+#setUsername(Z)V
+#getProfile()Z
+#setProfile(Z)V
+#getPicture()Z
+#setPicture(Z)V
+#getWebsite()Z
+#setWebsite(Z)V
+#getEmail()Z
+#setEmail(Z)V
+#getGender()Z
+#setGender(Z)V
+#getLocale()Z
+#setLocale(Z)V
+#getAddress()Z
+#setAddress(Z)V
+#getPhone()Z
+#setPhone(Z)V
@1.0-beta-4
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/keycloak/representations/idm/authorization/ResourcePermissionRepresentation
@3.1.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;
+#setResourceType(Ljava/lang/String;)V
+#getResourceType()Ljava/lang/String;

+###org/keycloak/representations/idm/authorization/Logic
@2.1.0.CR1
+#values()[Lorg/keycloak/representations/idm/authorization/Logic;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/representations/idm/authorization/Logic;
@19.0.0
+#getStableIndex()I
+#valueOfInteger(Ljava/lang/Integer;)Lorg/keycloak/representations/idm/authorization/Logic;

+###org/keycloak/representations/idm/authorization/GroupPolicyRepresentation$GroupDefinition
@3.2.0.CR1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#isExtendChildren()Z
+#setExtendChildren(Z)V

+###org/keycloak/representations/idm/authorization/RolePolicyRepresentation$RoleDefinition
@3.1.0.CR1
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#isRequired()Z
+#setRequired(Z)V

+###org/keycloak/representations/idm/authorization/PermissionTicketToken
@4.0.0.Beta1
+#<init>()V
+#<init>(Ljava/util/List;Ljava/lang/String;Lorg/keycloak/representations/AccessToken;)V
+#<init>(Ljava/util/List;)V
+#getResources()Ljava/util/List;
@4.0.0.Beta2
+#getClaims()Ljava/util/Map;
+#setClaims(Ljava/util/Map;)V
@4.2.0.Final
+#getPermissions()Ljava/util/List;
-#getResources()Ljava/util/List;

+###org/keycloak/representations/idm/authorization/TimePolicyRepresentation
@3.1.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;
+#getNotBefore()Ljava/lang/String;
+#setNotBefore(Ljava/lang/String;)V
+#getNotOnOrAfter()Ljava/lang/String;
+#setNotOnOrAfter(Ljava/lang/String;)V
+#getDayMonth()Ljava/lang/String;
+#setDayMonth(Ljava/lang/String;)V
+#getDayMonthEnd()Ljava/lang/String;
+#setDayMonthEnd(Ljava/lang/String;)V
+#getMonth()Ljava/lang/String;
+#setMonth(Ljava/lang/String;)V
+#getMonthEnd()Ljava/lang/String;
+#setMonthEnd(Ljava/lang/String;)V
+#getYear()Ljava/lang/String;
+#setYear(Ljava/lang/String;)V
+#getYearEnd()Ljava/lang/String;
+#setYearEnd(Ljava/lang/String;)V
+#getHour()Ljava/lang/String;
+#setHour(Ljava/lang/String;)V
+#getHourEnd()Ljava/lang/String;
+#setHourEnd(Ljava/lang/String;)V
+#getMinute()Ljava/lang/String;
+#setMinute(Ljava/lang/String;)V
+#getMinuteEnd()Ljava/lang/String;
+#setMinuteEnd(Ljava/lang/String;)V

+###org/keycloak/representations/idm/authorization/ClientPolicyRepresentation
@3.1.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;
+#getClients()Ljava/util/Set;
+#setClients(Ljava/util/Set;)V
+#addClient([Ljava/lang/String;)V

+###org/keycloak/representations/idm/authorization/PolicyEnforcementMode
@2.1.0.CR1
+#values()[Lorg/keycloak/representations/idm/authorization/PolicyEnforcementMode;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/representations/idm/authorization/PolicyEnforcementMode;
@19.0.0
+#getStableIndex()I
+#valueOfInteger(Ljava/lang/Integer;)Lorg/keycloak/representations/idm/authorization/PolicyEnforcementMode;

+###org/keycloak/representations/idm/authorization/PolicyProviderRepresentation
@2.1.0.CR1
+#<init>()V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getGroup()Ljava/lang/String;
+#setGroup(Ljava/lang/String;)V

+###org/keycloak/util/Time
@1.0-beta-1
+#<init>()V
+#currentTime()I
+#toDate(I)Ljava/util/Date;
@1.1.0.Beta1
+#setOffset(I)V
@1.2.0.CR1
+#toMillis(I)J
@1.6.0.Final
-###org/keycloak/util/Time

+###org/keycloak/util/HostUtils
@1.1.0.Beta1
+#<init>()V
+#getHostName()Ljava/lang/String;
+#getIpAddress()Ljava/lang/String;
@1.6.0.Final
-###org/keycloak/util/HostUtils

+###org/keycloak/util/PemUtils
@1.0-alpha-1
+#<init>()V
+#decodeCertificate(Ljava/io/InputStream;)Ljava/security/cert/X509Certificate;
+#decodeCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate;
+#decodePublicKey(Ljava/lang/String;)Ljava/security/PublicKey;
+#decodePrivateKey(Ljava/lang/String;)Ljava/security/PrivateKey;
+#decodePrivateKey(Ljava/io/InputStream;)Ljava/security/PrivateKey;
+#pemToDer(Ljava/io/InputStream;)[B
+#pemToDer(Ljava/lang/String;)[B
+#removeBeginEnd(Ljava/lang/String;)Ljava/lang/String;
+#pemFromStream(Ljava/io/InputStream;)Ljava/lang/String;
@1.0-alpha-1-12062013
-###org/keycloak/util/PemUtils

+###org/keycloak/util/DerUtils
@1.0-alpha-1
+#<init>()V
+#decodePrivateKey(Ljava/io/InputStream;)Ljava/security/PrivateKey;
+#decodePublicKey([B)Ljava/security/PublicKey;
+#decodeCertificate(Ljava/io/InputStream;)Ljava/security/cert/X509Certificate;
+#decodePrivateKey([B)Ljava/security/PrivateKey;
@1.0-alpha-1-12062013
-###org/keycloak/util/DerUtils

+###org/keycloak/util/NetworkUtils
@1.1.0.Final
+#formatPossibleIpv6Address(Ljava/lang/String;)Ljava/lang/String;
+#canonize(Ljava/lang/String;)Ljava/lang/String;
+#formatAddress(Ljava/net/InetAddress;)Ljava/lang/String;
+#formatAddress(Ljava/net/InetSocketAddress;)Ljava/lang/String;
+#isBindingToMulticastDressSupported()Z
+#checkForMac()Z
@1.6.0.Final
-###org/keycloak/util/NetworkUtils

+###org/keycloak/util/KeystoreUtil
@1.0-alpha-3
+#<init>()V
+#loadKeyStore(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
@1.5.0-Final
+#loadPrivateKeyFromKeystore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/keycloak/util/KeystoreUtil$KeystoreFormat;)Ljava/security/PrivateKey;
@1.6.0.Final
-###org/keycloak/util/KeystoreUtil

+###org/keycloak/util/StringPropertyReplacer
@1.0-beta-1
+#<init>()V
+#replaceProperties(Ljava/lang/String;)Ljava/lang/String;
+#replaceProperties(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;
@1.6.0.Final
-###org/keycloak/util/StringPropertyReplacer

+###org/keycloak/util/reflections/Reflections
@1.1.0.Final
+#cast(Ljava/lang/Object;)Ljava/lang/Object;
+#getAllDeclaredFields(Ljava/lang/Class;)Ljava/util/Set;
+#findDeclaredField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
+#getAnnotationsWithMetaAnnotation(Ljava/util/Set;Ljava/lang/Class;)Ljava/util/Set;
+#methodExists(Ljava/lang/Class;Ljava/lang/String;)Z
+#getAllDeclaredMethods(Ljava/lang/Class;)Ljava/util/Set;
+#findDeclaredMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#findDeclaredConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
+#getAllDeclaredConstructors(Ljava/lang/Class;)Ljava/util/Set;
+#getMemberType(Ljava/lang/reflect/Member;)Ljava/lang/Class;
+#classForName(Ljava/lang/String;[Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#invokeMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeMethod(ZLjava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeMethod(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeMethod(ZLjava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#setAccessible(Ljava/lang/reflect/AccessibleObject;)Ljava/lang/reflect/AccessibleObject;
+#getFieldValue(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
+#getFieldValue(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getRawType(Ljava/lang/reflect/Type;)Ljava/lang/Class;
+#isSerializable(Ljava/lang/Class;)Z
+#buildTypeMap(Ljava/util/Set;)Ljava/util/Map;
+#isCacheable(Ljava/util/Set;)Z
+#isCacheable([Ljava/lang/annotation/Annotation;)Z
+#getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#isFinal(Ljava/lang/Class;)Z
+#getNesting(Ljava/lang/Class;)I
+#isFinal(Ljava/lang/reflect/Member;)Z
+#isPrivate(Ljava/lang/reflect/Member;)Z
+#isTypeOrAnyMethodFinal(Ljava/lang/Class;)Z
+#getNonPrivateFinalMethodOrType(Ljava/lang/Class;)Ljava/lang/Object;
+#isPackagePrivate(I)Z
+#isStatic(Ljava/lang/Class;)Z
+#isStatic(Ljava/lang/reflect/Member;)Z
+#isTransient(Ljava/lang/reflect/Member;)Z
+#isAbstract(Ljava/lang/reflect/Method;)Z
+#isArrayType(Ljava/lang/Class;)Z
+#isParameterizedType(Ljava/lang/Class;)Z
+#isParamerterizedTypeWithWildcard(Ljava/lang/Class;)Z
+#containsWildcards([Ljava/lang/reflect/Type;)Z
+#isAssignableFrom(Ljava/lang/Class;[Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Z
+#matches(Ljava/lang/Class;[Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Z
+#isAssignableFrom([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Z
+#isAssignableFrom(Ljava/lang/reflect/Type;Ljava/util/Set;)Z
+#matches(Ljava/lang/reflect/Type;Ljava/util/Set;)Z
+#isAssignableFrom(Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Z
+#isAssignableFrom(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
+#matches(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
+#isTypeBounded(Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Z
+#isAssignableFrom(Ljava/lang/Class;[Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
+#matches(Ljava/lang/Class;[Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
+#isAssignableFrom(Ljava/util/Set;Ljava/util/Set;)Z
+#matches(Ljava/util/Set;Ljava/util/Set;)Z
+#isAssignableFrom(Ljava/util/Set;Ljava/lang/reflect/Type;)Z
+#isAssignableFrom([Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
+#isPrimitive(Ljava/lang/reflect/Type;)Z
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#newInstance(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
@1.6.0.Final
-###org/keycloak/util/reflections/Reflections

+###org/keycloak/util/reflections/SetAccessiblePrivilegedAction
@1.1.0.Final
+#<init>(Ljava/lang/reflect/AccessibleObject;)V
+#run()Ljava/lang/Void;
+#run()Ljava/lang/Object;
@1.6.0.Final
-###org/keycloak/util/reflections/SetAccessiblePrivilegedAction

+###org/keycloak/util/reflections/Types
@1.1.0.Final
+#boxedType(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
+#boxedClass(Ljava/lang/Class;)Ljava/lang/Class;
@1.6.0.Final
-###org/keycloak/util/reflections/Types

+###org/keycloak/util/BouncyIntegration
@1.0-alpha-1
+#<init>()V
+#init()V
@1.0-alpha-1-12062013
-###org/keycloak/util/BouncyIntegration

+###org/keycloak/util/UriUtils
@1.0-final
+#<init>()V
+#getOrigin(Ljava/net/URI;)Ljava/lang/String;
+#getOrigin(Ljava/lang/String;)Ljava/lang/String;
@1.0.3.Final
+#isOrigin(Ljava/lang/String;)Z
@1.1.0.Final
+#decodeQueryString(Ljava/lang/String;)Lorg/keycloak/util/MultivaluedHashMap;
+#stripQueryParam(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.6.0.Final
-###org/keycloak/util/UriUtils

+###org/keycloak/util/EnvUtil
@1.0-alpha-1
+#<init>()V
+#replace(Ljava/lang/String;)Ljava/lang/String;
@1.0-alpha-1-12062013
-###org/keycloak/util/EnvUtil

+###org/keycloak/util/ProviderLoader
@1.0-alpha-2
+#load(Ljava/lang/Class;)Ljava/lang/Iterable;
+#iterator()Ljava/util/Iterator;
@1.2.0.Beta1
-###org/keycloak/util/ProviderLoader

+###org/keycloak/util/StreamUtil
@1.0-alpha-1
+#<init>()V
+#readString(Ljava/io/InputStream;)Ljava/lang/String;
@1.0-alpha-1-12062013
-###org/keycloak/util/StreamUtil

+###org/keycloak/util/Base64Url
@1.0-alpha-1
+#<init>()V
+#encode([B)Ljava/lang/String;
+#decode(Ljava/lang/String;)[B
@1.0-alpha-1-12062013
-###org/keycloak/util/Base64Url

+###org/keycloak/util/CertificateUtils
@1.1.0.Beta1
+#<init>()V
+#generateV3Certificate(Ljava/security/KeyPair;Ljava/security/PrivateKey;Ljava/security/cert/X509Certificate;Ljava/lang/String;)Ljava/security/cert/X509Certificate;
+#generateV1SelfSignedCertificate(Ljava/security/KeyPair;Ljava/lang/String;)Ljava/security/cert/X509Certificate;
@1.2.0.Beta1
+#createSigner(Ljava/security/PrivateKey;)Lorg/bouncycastle/operator/ContentSigner;
@1.6.0.Final
-###org/keycloak/util/CertificateUtils

+###org/keycloak/util/MultivaluedHashMap
@1.0-alpha-1
+#<init>()V
+#putSingle(Ljava/lang/Object;Ljava/lang/Object;)V
+#addAll(Ljava/lang/Object;[Ljava/lang/Object;)V
+#addAll(Ljava/lang/Object;Ljava/util/List;)V
+#addFirst(Ljava/lang/Object;Ljava/lang/Object;)V
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#addMultiple(Ljava/lang/Object;Ljava/util/Collection;)V
+#getFirst(Ljava/lang/Object;)Ljava/lang/Object;
+#getList(Ljava/lang/Object;)Ljava/util/List;
+#addAll(Lorg/keycloak/util/MultivaluedHashMap;)V
+#equalsIgnoreValueOrder(Lorg/keycloak/util/MultivaluedHashMap;)Z
@1.0-alpha-1-12062013
-###org/keycloak/util/MultivaluedHashMap

+###org/keycloak/util/Encode
@1.0-alpha-1
+#<init>()V
+#encodeQueryString(Ljava/lang/String;)Ljava/lang/String;
+#encodePath(Ljava/lang/String;)Ljava/lang/String;
+#encodePathSegment(Ljava/lang/String;)Ljava/lang/String;
+#encodeFragment(Ljava/lang/String;)Ljava/lang/String;
+#encodeMatrixParam(Ljava/lang/String;)Ljava/lang/String;
+#encodeQueryParam(Ljava/lang/String;)Ljava/lang/String;
+#decodePath(Ljava/lang/String;)Ljava/lang/String;
+#encodeNonCodes(Ljava/lang/String;)Ljava/lang/String;
+#savePathParams(Ljava/lang/String;Ljava/lang/StringBuffer;Ljava/util/List;)Z
+#encodeValue(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
+#encodePathAsIs(Ljava/lang/String;)Ljava/lang/String;
+#encodePathSaveEncodings(Ljava/lang/String;)Ljava/lang/String;
+#encodePathSegmentAsIs(Ljava/lang/String;)Ljava/lang/String;
+#encodePathSegmentSaveEncodings(Ljava/lang/String;)Ljava/lang/String;
+#encodeQueryParamAsIs(Ljava/lang/String;)Ljava/lang/String;
+#encodeQueryParamSaveEncodings(Ljava/lang/String;)Ljava/lang/String;
+#encodeFragmentAsIs(Ljava/lang/String;)Ljava/lang/String;
+#pathParamReplacement(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;
+#decode(Lorg/keycloak/util/MultivaluedHashMap;)Lorg/keycloak/util/MultivaluedHashMap;
+#encode(Lorg/keycloak/util/MultivaluedHashMap;)Lorg/keycloak/util/MultivaluedHashMap;
+#decode(Ljava/lang/String;)Ljava/lang/String;
@1.0-alpha-1-12062013
-###org/keycloak/util/Encode

+###org/keycloak/util/ServerCookie
@1.1.0.Beta2
+#<init>()V
+#isToken(Ljava/lang/String;)Z
+#containsCTL(Ljava/lang/String;I)Z
+#isToken2(Ljava/lang/String;)Z
+#checkName(Ljava/lang/String;)Z
+#getCookieHeaderName(I)Ljava/lang/String;
+#formatOldCookie(Ljava/util/Date;)Ljava/lang/String;
+#formatOldCookie(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)V
+#appendCookieValue(Ljava/lang/StringBuffer;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZ)V
+#maybeQuote(ILjava/lang/StringBuffer;Ljava/lang/String;)V[deprecated]
+#alreadyQuoted(Ljava/lang/String;)Z
+#maybeQuote2(ILjava/lang/StringBuffer;Ljava/lang/String;)V
@1.6.0.Final
-###org/keycloak/util/ServerCookie

+###org/keycloak/util/PathHelper
@1.0-alpha-1
+#<init>()V
+#replaceEnclosedCurlyBraces(Ljava/lang/String;)Ljava/lang/String;
+#recoverEnclosedCurlyBraces(Ljava/lang/String;)Ljava/lang/String;
@1.0-alpha-1-12062013
-###org/keycloak/util/PathHelper

+###org/keycloak/util/CollectionUtil
@1.0-beta-1
+#<init>()V
+#join(Ljava/util/Collection;)Ljava/lang/String;
+#join(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
@1.6.0.Final
-###org/keycloak/util/CollectionUtil

+###org/keycloak/util/KeycloakUriBuilder
@1.0-alpha-1
+#<init>()V
+#fromUri(Ljava/net/URI;)Lorg/keycloak/util/KeycloakUriBuilder;
+#fromUri(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#fromPath(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#clone()Lorg/keycloak/util/KeycloakUriBuilder;
+#compare(Ljava/lang/String;Ljava/lang/String;)Z
+#relativize(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;
+#fromTemplate(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#uriTemplate(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#uri(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#uri(Ljava/net/URI;)Lorg/keycloak/util/KeycloakUriBuilder;
+#scheme(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#schemeSpecificPart(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#userInfo(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#host(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#port(I)Lorg/keycloak/util/KeycloakUriBuilder;
+#path(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#replaceMatrix(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#replaceQuery(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#fragment(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#substitutePathParam(Ljava/lang/String;Ljava/lang/Object;Z)Lorg/keycloak/util/KeycloakUriBuilder;
+#buildFromMap(Ljava/util/Map;)Ljava/net/URI;
+#buildFromEncodedMap(Ljava/util/Map;)Ljava/net/URI;
+#buildFromMap(Ljava/util/Map;Z)Ljava/net/URI;
+#createUriParamMatcher(Ljava/lang/String;)Ljava/util/regex/Matcher;
+#getPathParamNamesInDeclarationOrder()Ljava/util/List;
+#build([Ljava/lang/Object;)Ljava/net/URI;
+#matrixParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/keycloak/util/KeycloakUriBuilder;
+#queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/keycloak/util/KeycloakUriBuilder;
+#replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/keycloak/util/KeycloakUriBuilder;
+#getHost()Ljava/lang/String;
+#getScheme()Ljava/lang/String;
+#getPort()I
+#getUserInfo()Ljava/lang/String;
+#getPath()Ljava/lang/String;
+#getQuery()Ljava/lang/String;
+#getFragment()Ljava/lang/String;
+#segment([Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#replacePath(Ljava/lang/String;)Lorg/keycloak/util/KeycloakUriBuilder;
+#build([Ljava/lang/Object;Z)Ljava/net/URI;
+#toTemplate()Ljava/lang/String;
+#resolveTemplate(Ljava/lang/String;Ljava/lang/Object;)Lorg/keycloak/util/KeycloakUriBuilder;
+#resolveTemplates(Ljava/util/Map;)Lorg/keycloak/util/KeycloakUriBuilder;
+#resolveTemplate(Ljava/lang/String;Ljava/lang/Object;Z)Lorg/keycloak/util/KeycloakUriBuilder;
+#resolveTemplates(Ljava/util/Map;Z)Lorg/keycloak/util/KeycloakUriBuilder;
+#resolveTemplatesFromEncoded(Ljava/util/Map;)Lorg/keycloak/util/KeycloakUriBuilder;
+#clone()Ljava/lang/Object;
@1.0-alpha-1-12062013
-###org/keycloak/util/KeycloakUriBuilder

+###org/keycloak/representations/idm/ApplicationMappingsRepresentation
@1.0-alpha-1
+#<init>()V
+#getApplicationId()Ljava/lang/String;
+#setApplicationId(Ljava/lang/String;)V
+#getApplication()Ljava/lang/String;
+#setApplication(Ljava/lang/String;)V
+#getMappings()Ljava/util/List;
+#setMappings(Ljava/util/List;)V
@1.2.0.CR1
-###org/keycloak/representations/idm/ApplicationMappingsRepresentation

+###org/keycloak/representations/idm/UserRoleMappingRepresentation
@1.0-alpha-1
+#<init>()V
+#getSelf()Ljava/lang/String;
+#setSelf(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getRoles()Ljava/util/Set;
+#setRoles(Ljava/util/Set;)V
+#role(Ljava/lang/String;)Lorg/keycloak/representations/idm/UserRoleMappingRepresentation;
@1.7.0.CR1
-###org/keycloak/representations/idm/UserRoleMappingRepresentation

+###org/keycloak/representations/PasswordToken
@1.0-rc-2
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getRealm()Ljava/lang/String;
+#setRealm(Ljava/lang/String;)V
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#getTimestamp()I
+#setTimestamp(I)V
@2.3.0.CR1
-###org/keycloak/representations/PasswordToken

+###org/keycloak/enums/SslRequired
@1.0-beta-4
+#values()[Lorg/keycloak/enums/SslRequired;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/enums/SslRequired;
+#isRequired(Lorg/keycloak/ClientConnection;)Z
+#isRequired(Ljava/lang/String;)Z
@1.6.0.Final
-###org/keycloak/enums/SslRequired

+###org/keycloak/enums/RelativeUrlsUsed
@1.1.0.Beta1
+#values()[Lorg/keycloak/enums/RelativeUrlsUsed;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/enums/RelativeUrlsUsed;
+#useRelative(Z)Z
@1.6.0.Final
-###org/keycloak/enums/RelativeUrlsUsed

+###org/keycloak/Version
@1.0-rc-1
+#<init>()V
+#getVersion()Ljava/lang/String;
+#getBuildTime()Ljava/lang/String;
@1.6.0.Final
-###org/keycloak/Version

+###org/keycloak/ClientConnection
@1.0-beta-4
+#getRemoteAddr()Ljava/lang/String;
+#getRemoteHost()Ljava/lang/String;
+#getReportPort()I
@1.6.0.Final
-###org/keycloak/ClientConnection

+###org/keycloak/constants/GenericConstants
@1.1.0.Beta2
+#<init>()V
@1.6.0.Final
-###org/keycloak/constants/GenericConstants

+###org/keycloak/VerificationException
@1.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@1.6.0.Final
-###org/keycloak/VerificationException

+###org/keycloak/util/ObjectUtil
@1.2.0.Beta1
+#isEqualOrNull(Ljava/lang/Object;Ljava/lang/Object;)Z
@1.6.0.Final
-###org/keycloak/util/ObjectUtil

+###org/keycloak/util/KerberosSerializationUtils
@1.2.0.Beta1
+#serializeCredential(Lorg/ietf/jgss/GSSCredential;)Ljava/lang/String;
+#deserializeCredential(Ljava/lang/String;)Lorg/ietf/jgss/GSSCredential;
@1.6.0.Final
-###org/keycloak/util/KerberosSerializationUtils

+###org/keycloak/util/KerberosSerializationUtils$KerberosSerializationException
@1.2.0.Beta1
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
@1.6.0.Final
-###org/keycloak/util/KerberosSerializationUtils$KerberosSerializationException

+###org/keycloak/util/KeystoreUtil$KeystoreFormat
@1.5.0-Final
+#values()[Lorg/keycloak/util/KeystoreUtil$KeystoreFormat;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/util/KeystoreUtil$KeystoreFormat;
@1.6.0.Final
-###org/keycloak/util/KeystoreUtil$KeystoreFormat

+###org/keycloak/util/MimeTypeUtil
@1.2.0.Beta1
+#<init>()V
+#getContentType(Ljava/io/File;)Ljava/lang/String;
+#getContentType(Ljava/lang/String;)Ljava/lang/String;
@1.6.0.Final
-###org/keycloak/util/MimeTypeUtil

+###org/keycloak/util/HtmlUtils
@1.2.0.Beta1
+#<init>()V
+#escapeAttribute(Ljava/lang/String;)Ljava/lang/String;
@1.6.0.Final
-###org/keycloak/util/HtmlUtils

+###org/keycloak/util/SystemEnvProperties
@1.2.0.Final
+#<init>()V
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.6.0.Final
-###org/keycloak/util/SystemEnvProperties

+###org/keycloak/util/FindFile
@1.2.0.CR1
+#<init>()V
+#findFile(Ljava/lang/String;)Ljava/io/InputStream;
@1.6.0.Final
-###org/keycloak/util/FindFile

+###org/keycloak/constants/ServiceAccountConstants
@1.4.0.Final
@1.6.0.Final
-###org/keycloak/constants/ServiceAccountConstants

+###org/keycloak/constants/KerberosConstants
@1.2.0.Beta1
+#<init>()V
@1.6.0.Final
-###org/keycloak/constants/KerberosConstants

+###org/keycloak/jose/jws/crypto/HashProvider
@2.2.0.CR1
+#<init>()V
+#oidcHash(Lorg/keycloak/jose/jws/Algorithm;Ljava/lang/String;)Ljava/lang/String;
@4.5.0.Final
+#oidcHash(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@4.8.0.Final
-###org/keycloak/jose/jws/crypto/HashProvider

+###org/keycloak/representations/adapters/config/PolicyEnforcerConfig$UmaProtocolConfig
@2.0.0.CR1
+#<init>()V
@4.0.0.Beta1
-###org/keycloak/representations/adapters/config/PolicyEnforcerConfig$UmaProtocolConfig

+###org/keycloak/representations/adapters/config/PolicyEnforcerConfig$EntitlementProtocolConfig
@2.0.0.CR1
+#<init>()V
@4.0.0.Beta1
-###org/keycloak/representations/adapters/config/PolicyEnforcerConfig$EntitlementProtocolConfig

+###org/keycloak/representations/idm/StorageProviderRepresentation
@2.1.0.CR1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#getProviderName()Ljava/lang/String;
+#setProviderName(Ljava/lang/String;)V
+#getConfig()Ljava/util/Map;
+#setConfig(Ljava/util/Map;)V
+#getPriority()I
+#setPriority(I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.4.0.CR1
-###org/keycloak/representations/idm/StorageProviderRepresentation

+###org/keycloak/representations/idm/UserFederationSyncResultRepresentation
@1.9.3.Final
+#<init>()V
+#isIgnored()Z
+#setIgnored(Z)V
+#getAdded()I
+#setAdded(I)V
+#getUpdated()I
+#setUpdated(I)V
+#getRemoved()I
+#setRemoved(I)V
+#getFailed()I
+#setFailed(I)V
+#getStatus()Ljava/lang/String;
+#setStatus(Ljava/lang/String;)V
@2.5.0.CR1
-###org/keycloak/representations/idm/UserFederationSyncResultRepresentation

+###org/keycloak/representations/idm/ClientRegistrationTrustedHostRepresentation
@2.2.0.CR1
+#<init>()V
+#create(Ljava/lang/String;II)Lorg/keycloak/representations/idm/ClientRegistrationTrustedHostRepresentation;
+#getHostName()Ljava/lang/String;
+#setHostName(Ljava/lang/String;)V
+#getCount()Ljava/lang/Integer;
+#setCount(Ljava/lang/Integer;)V
+#getRemainingCount()Ljava/lang/Integer;
+#setRemainingCount(Ljava/lang/Integer;)V
@2.3.0.CR1
-###org/keycloak/representations/idm/ClientRegistrationTrustedHostRepresentation

+###org/keycloak/representations/CodeJWT
@3.4.0.CR1
+#<init>()V
+#getUserSessionId()Ljava/lang/String;
+#userSessionId(Ljava/lang/String;)Lorg/keycloak/representations/CodeJWT;
@4.8.0.Final
-###org/keycloak/representations/CodeJWT

+###org/keycloak/representations/idm/authorization/PermissionTicketToken$ResourcePermission
@4.0.0.Beta1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#getResourceId()Ljava/lang/String;
+#getScopes()Ljava/util/Set;
@4.2.0.Final
-###org/keycloak/representations/idm/authorization/PermissionTicketToken$ResourcePermission

+###org/keycloak/jose/jwe/alg/RsaKeyEncryption256JWEAlgorithmProvider
@12.0.0
+#<init>(Ljava/lang/String;)V
+#decodeCek([BLjava/security/Key;)[B
+#encodeCek(Lorg/keycloak/jose/jwe/enc/JWEEncryptionProvider;Lorg/keycloak/jose/jwe/JWEKeyStorage;Ljava/security/Key;)[B
@20.0.0
-###org/keycloak/jose/jwe/alg/RsaKeyEncryption256JWEAlgorithmProvider

+###org/keycloak/representations/account/DeviceRepresentation
@8.0.0
+#<init>()V
+#unknown()Lorg/keycloak/representations/account/DeviceRepresentation;
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getIpAddress()Ljava/lang/String;
+#setIpAddress(Ljava/lang/String;)V
+#getOs()Ljava/lang/String;
+#setOs(Ljava/lang/String;)V
+#getOsVersion()Ljava/lang/String;
+#setOsVersion(Ljava/lang/String;)V
+#getBrowser()Ljava/lang/String;
+#setBrowser(Ljava/lang/String;)V
+#setBrowser(Ljava/lang/String;Ljava/lang/String;)V
+#getDevice()Ljava/lang/String;
+#setDevice(Ljava/lang/String;)V
+#getLastAccess()I
+#setLastAccess(I)V
+#getCurrent()Ljava/lang/Boolean;
+#setCurrent(Ljava/lang/Boolean;)V
+#addSession(Lorg/keycloak/representations/account/SessionRepresentation;)V
+#getSessions()Ljava/util/List;
+#setMobile(Z)V
+#isMobile()Z

+###org/keycloak/representations/account/LinkedAccountRepresentation
@8.0.0
+#<init>()V
+#getLinkedUsername()Ljava/lang/String;
+#setLinkedUsername(Ljava/lang/String;)V
+#isConnected()Z
+#setConnected(Z)V
+#isSocial()Z
+#setSocial(Z)V
+#getProviderAlias()Ljava/lang/String;
+#setProviderAlias(Ljava/lang/String;)V
+#getProviderName()Ljava/lang/String;
+#setProviderName(Ljava/lang/String;)V
+#getGuiOrder()Ljava/lang/String;
+#setGuiOrder(Ljava/lang/String;)V
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#compareTo(Lorg/keycloak/representations/account/LinkedAccountRepresentation;)I
+#compareTo(Ljava/lang/Object;)I

+###org/keycloak/representations/account/AccountLinkUriRepresentation
@8.0.0
+#<init>()V
+#getAccountLinkUri()Ljava/net/URI;
+#setAccountLinkUri(Ljava/net/URI;)V
+#getNonce()Ljava/lang/String;
+#setNonce(Ljava/lang/String;)V
+#getHash()Ljava/lang/String;
+#setHash(Ljava/lang/String;)V

+###org/keycloak/representations/idm/LDAPCapabilityRepresentation
@11.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Lorg/keycloak/representations/idm/LDAPCapabilityRepresentation$CapabilityType;)V
+#getOid()Ljava/lang/String;
+#getType()Lorg/keycloak/representations/idm/LDAPCapabilityRepresentation$CapabilityType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/keycloak/representations/idm/LDAPCapabilityRepresentation$CapabilityType
@11.0.0
+#values()[Lorg/keycloak/representations/idm/LDAPCapabilityRepresentation$CapabilityType;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/representations/idm/LDAPCapabilityRepresentation$CapabilityType;
+#fromRootDseAttributeName(Ljava/lang/String;)Lorg/keycloak/representations/idm/LDAPCapabilityRepresentation$CapabilityType;

+###org/keycloak/protocol/oidc/representations/OIDCConfigurationRepresentation
@8.0.0
+#<init>()V
+#getIssuer()Ljava/lang/String;
+#setIssuer(Ljava/lang/String;)V
+#getAuthorizationEndpoint()Ljava/lang/String;
+#setAuthorizationEndpoint(Ljava/lang/String;)V
+#getTokenEndpoint()Ljava/lang/String;
+#setTokenEndpoint(Ljava/lang/String;)V
+#getTokenIntrospectionEndpoint()Ljava/lang/String;
+#setTokenIntrospectionEndpoint(Ljava/lang/String;)V
+#getUserinfoEndpoint()Ljava/lang/String;
+#setUserinfoEndpoint(Ljava/lang/String;)V
+#getJwksUri()Ljava/lang/String;
+#setJwksUri(Ljava/lang/String;)V
+#getCheckSessionIframe()Ljava/lang/String;
+#setCheckSessionIframe(Ljava/lang/String;)V
+#getLogoutEndpoint()Ljava/lang/String;
+#setLogoutEndpoint(Ljava/lang/String;)V
+#getGrantTypesSupported()Ljava/util/List;
+#setGrantTypesSupported(Ljava/util/List;)V
+#getResponseTypesSupported()Ljava/util/List;
+#setResponseTypesSupported(Ljava/util/List;)V
+#getSubjectTypesSupported()Ljava/util/List;
+#setSubjectTypesSupported(Ljava/util/List;)V
+#getIdTokenSigningAlgValuesSupported()Ljava/util/List;
+#setIdTokenSigningAlgValuesSupported(Ljava/util/List;)V
+#getIdTokenEncryptionAlgValuesSupported()Ljava/util/List;
+#setIdTokenEncryptionAlgValuesSupported(Ljava/util/List;)V
+#getIdTokenEncryptionEncValuesSupported()Ljava/util/List;
+#setIdTokenEncryptionEncValuesSupported(Ljava/util/List;)V
+#getUserInfoSigningAlgValuesSupported()Ljava/util/List;
+#setUserInfoSigningAlgValuesSupported(Ljava/util/List;)V
+#getRequestObjectSigningAlgValuesSupported()Ljava/util/List;
+#setRequestObjectSigningAlgValuesSupported(Ljava/util/List;)V
+#getResponseModesSupported()Ljava/util/List;
+#setResponseModesSupported(Ljava/util/List;)V
+#getRegistrationEndpoint()Ljava/lang/String;
+#setRegistrationEndpoint(Ljava/lang/String;)V
+#getTokenEndpointAuthMethodsSupported()Ljava/util/List;
+#setTokenEndpointAuthMethodsSupported(Ljava/util/List;)V
+#getTokenEndpointAuthSigningAlgValuesSupported()Ljava/util/List;
+#setTokenEndpointAuthSigningAlgValuesSupported(Ljava/util/List;)V
+#getClaimsSupported()Ljava/util/List;
+#setClaimsSupported(Ljava/util/List;)V
+#getClaimTypesSupported()Ljava/util/List;
+#setClaimTypesSupported(Ljava/util/List;)V
+#getClaimsParameterSupported()Ljava/lang/Boolean;
+#setClaimsParameterSupported(Ljava/lang/Boolean;)V
+#getScopesSupported()Ljava/util/List;
+#setScopesSupported(Ljava/util/List;)V
+#getRequestParameterSupported()Ljava/lang/Boolean;
+#setRequestParameterSupported(Ljava/lang/Boolean;)V
+#getRequestUriParameterSupported()Ljava/lang/Boolean;
+#setRequestUriParameterSupported(Ljava/lang/Boolean;)V
+#getCodeChallengeMethodsSupported()Ljava/util/List;
+#setCodeChallengeMethodsSupported(Ljava/util/List;)V
+#getTlsClientCertificateBoundAccessTokens()Ljava/lang/Boolean;
+#setTlsClientCertificateBoundAccessTokens(Ljava/lang/Boolean;)V
+#getOtherClaims()Ljava/util/Map;
+#setOtherClaims(Ljava/lang/String;Ljava/lang/Object;)V
@11.0.0
+#getIntrospectionEndpoint()Ljava/lang/String;
+#setIntrospectionEndpoint(Ljava/lang/String;)V
-#getTokenIntrospectionEndpoint()Ljava/lang/String;
-#setTokenIntrospectionEndpoint(Ljava/lang/String;)V
@12.0.0
+#getRevocationEndpoint()Ljava/lang/String;
+#setRevocationEndpoint(Ljava/lang/String;)V
+#getRevocationEndpointAuthMethodsSupported()Ljava/util/List;
+#setRevocationEndpointAuthMethodsSupported(Ljava/util/List;)V
+#getRevocationEndpointAuthSigningAlgValuesSupported()Ljava/util/List;
+#setRevocationEndpointAuthSigningAlgValuesSupported(Ljava/util/List;)V
+#getBackchannelLogoutSupported()Ljava/lang/Boolean;
+#getBackchannelLogoutSessionSupported()Ljava/lang/Boolean;
+#setBackchannelLogoutSessionSupported(Ljava/lang/Boolean;)V
+#setBackchannelLogoutSupported(Ljava/lang/Boolean;)V
@12.0.2
+#getRequireRequestUriRegistration()Ljava/lang/Boolean;
+#setRequireRequestUriRegistration(Ljava/lang/Boolean;)V
@13.0.0
+#getIntrospectionEndpointAuthMethodsSupported()Ljava/util/List;
+#setIntrospectionEndpointAuthMethodsSupported(Ljava/util/List;)V
+#getIntrospectionEndpointAuthSigningAlgValuesSupported()Ljava/util/List;
+#setIntrospectionEndpointAuthSigningAlgValuesSupported(Ljava/util/List;)V
+#getBackchannelTokenDeliveryModesSupported()Ljava/util/List;
+#setBackchannelTokenDeliveryModesSupported(Ljava/util/List;)V
+#getBackchannelAuthenticationEndpoint()Ljava/lang/String;
+#setBackchannelAuthenticationEndpoint(Ljava/lang/String;)V
+#setDeviceAuthorizationEndpoint(Ljava/lang/String;)V
+#getDeviceAuthorizationEndpoint()Ljava/lang/String;
@15.0.0
+#getRequestObjectEncryptionAlgValuesSupported()Ljava/util/List;
+#setRequestObjectEncryptionAlgValuesSupported(Ljava/util/List;)V
+#getRequestObjectEncryptionEncValuesSupported()Ljava/util/List;
+#setRequestObjectEncryptionEncValuesSupported(Ljava/util/List;)V
+#getBackchannelAuthenticationRequestSigningAlgValuesSupported()Ljava/util/List;
+#setBackchannelAuthenticationRequestSigningAlgValuesSupported(Ljava/util/List;)V
+#getPushedAuthorizationRequestEndpoint()Ljava/lang/String;
+#setPushedAuthorizationRequestEndpoint(Ljava/lang/String;)V
+#getRequirePushedAuthorizationRequests()Ljava/lang/Boolean;
+#setRequirePushedAuthorizationRequests(Ljava/lang/Boolean;)V
+#getMtlsEndpointAliases()Lorg/keycloak/protocol/oidc/representations/MTLSEndpointAliases;
+#setMtlsEndpointAliases(Lorg/keycloak/protocol/oidc/representations/MTLSEndpointAliases;)V
+#getAuthorizationSigningAlgValuesSupported()Ljava/util/List;
+#setAuthorizationSigningAlgValuesSupported(Ljava/util/List;)V
+#getAuthorizationEncryptionAlgValuesSupported()Ljava/util/List;
+#setAuthorizationEncryptionAlgValuesSupported(Ljava/util/List;)V
+#getAuthorizationEncryptionEncValuesSupported()Ljava/util/List;
+#setAuthorizationEncryptionEncValuesSupported(Ljava/util/List;)V
@15.1.0
+#getFrontChannelLogoutSessionSupported()Ljava/lang/Boolean;
+#getFrontChannelLogoutSupported()Ljava/lang/Boolean;
@18.0.0
+#getAcrValuesSupported()Ljava/util/List;
+#setAcrValuesSupported(Ljava/util/List;)V
+#getUserInfoEncryptionAlgValuesSupported()Ljava/util/List;
+#setUserInfoEncryptionAlgValuesSupported(Ljava/util/List;)V
+#getUserInfoEncryptionEncValuesSupported()Ljava/util/List;
+#setUserInfoEncryptionEncValuesSupported(Ljava/util/List;)V

+###org/keycloak/representations/LogoutToken
@12.0.0
+#getEvents()Ljava/util/Map;
+#putEvents(Ljava/lang/String;Ljava/lang/Object;)V
+#getSid()Ljava/lang/String;
+#setSid(Ljava/lang/String;)Lorg/keycloak/representations/LogoutToken;
+#<init>()V
+#getCategory()Lorg/keycloak/TokenCategory;

+###org/keycloak/representations/idm/TestLdapConnectionRepresentation
@9.0.2
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getAction()Ljava/lang/String;
+#setAction(Ljava/lang/String;)V
+#getConnectionUrl()Ljava/lang/String;
+#setConnectionUrl(Ljava/lang/String;)V
+#getBindDn()Ljava/lang/String;
+#setBindDn(Ljava/lang/String;)V
+#getBindCredential()Ljava/lang/String;
+#setBindCredential(Ljava/lang/String;)V
+#getUseTruststoreSpi()Ljava/lang/String;
+#setUseTruststoreSpi(Ljava/lang/String;)V
+#getConnectionTimeout()Ljava/lang/String;
+#setConnectionTimeout(Ljava/lang/String;)V
+#getComponentId()Ljava/lang/String;
+#setComponentId(Ljava/lang/String;)V
+#getStartTls()Ljava/lang/String;
+#setStartTls(Ljava/lang/String;)V
@11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getAuthType()Ljava/lang/String;
+#setAuthType(Ljava/lang/String;)V

+###org/keycloak/jose/JOSEParser
@15.0.0
+#<init>()V
+#parse(Ljava/lang/String;)Lorg/keycloak/jose/JOSE;

+###org/keycloak/jose/jwk/JWKUtil
@13.0.0
+#<init>()V
+#toIntegerBytes(Ljava/math/BigInteger;)[B

+###org/keycloak/representations/OAuth2DeviceAuthorizationResponse
@13.0.0
+#<init>()V
+#getDeviceCode()Ljava/lang/String;
+#setDeviceCode(Ljava/lang/String;)V
+#getUserCode()Ljava/lang/String;
+#setUserCode(Ljava/lang/String;)V
+#getVerificationUri()Ljava/lang/String;
+#setVerificationUri(Ljava/lang/String;)V
+#getVerificationUriComplete()Ljava/lang/String;
+#setVerificationUriComplete(Ljava/lang/String;)V
+#getExpiresIn()J
+#setExpiresIn(J)V
+#getInterval()J
+#setInterval(J)V

+###org/keycloak/jose/JOSE
@15.0.0
+#getHeader()Lorg/keycloak/jose/JOSEHeader;

+###org/keycloak/protocol/oidc/representations/MTLSEndpointAliases
@15.0.0
+#<init>()V
+#getTokenEndpoint()Ljava/lang/String;
+#setTokenEndpoint(Ljava/lang/String;)V
+#getRevocationEndpoint()Ljava/lang/String;
+#setRevocationEndpoint(Ljava/lang/String;)V
+#getIntrospectionEndpoint()Ljava/lang/String;
+#setIntrospectionEndpoint(Ljava/lang/String;)V
+#getDeviceAuthorizationEndpoint()Ljava/lang/String;
+#setDeviceAuthorizationEndpoint(Ljava/lang/String;)V
+#getRegistrationEndpoint()Ljava/lang/String;
+#setRegistrationEndpoint(Ljava/lang/String;)V
+#getUserInfoEndpoint()Ljava/lang/String;
+#setUserInfoEndpoint(Ljava/lang/String;)V
+#getPushedAuthorizationRequestEndpoint()Ljava/lang/String;
+#setPushedAuthorizationRequestEndpoint(Ljava/lang/String;)V
+#getBackchannelAuthenticationEndpoint()Ljava/lang/String;
+#setBackchannelAuthenticationEndpoint(Ljava/lang/String;)V
+#getOtherClaims()Ljava/util/Map;
+#setOtherClaims(Ljava/lang/String;Ljava/lang/Object;)V

+###org/keycloak/representations/AuthorizationResponseToken
@15.0.0
+#<init>()V
+#getCategory()Lorg/keycloak/TokenCategory;

+###org/keycloak/representations/idm/ClientProfilesRepresentation
@13.0.0
+#<init>()V
+#getProfiles()Ljava/util/List;
+#setProfiles(Ljava/util/List;)V
@14.0.0
+#getGlobalProfiles()Ljava/util/List;
+#setGlobalProfiles(Ljava/util/List;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/keycloak/representations/idm/ClientPolicyExecutorConfigurationRepresentation
@14.0.0
+#<init>()V
+#getConfigAsMap()Ljava/util/Map;
+#setConfigAsMap(Ljava/lang/String;Ljava/lang/Object;)V
@18.0.0
+#validateConfig()Z

+###org/keycloak/representations/idm/ClientPolicyExecutorRepresentation
@14.0.0
+#<init>()V
+#getExecutorProviderId()Ljava/lang/String;
+#setExecutorProviderId(Ljava/lang/String;)V
+#getConfiguration()Lcom/fasterxml/jackson/databind/JsonNode;
+#setConfiguration(Lcom/fasterxml/jackson/databind/JsonNode;)V

+###org/keycloak/representations/idm/authorization/RegexPolicyRepresentation
@15.0.0
+#<init>()V
+#getType()Ljava/lang/String;
+#getTargetClaim()Ljava/lang/String;
+#setTargetClaim(Ljava/lang/String;)V
+#getPattern()Ljava/lang/String;
+#setPattern(Ljava/lang/String;)V

+###org/keycloak/representations/account/UserProfileAttributeMetadata
@15.0.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;Ljava/util/Map;)V
+#getName()Ljava/lang/String;
+#getDisplayName()Ljava/lang/String;
+#isRequired()Z
+#isReadOnly()Z
+#getAnnotations()Ljava/util/Map;
+#getValidators()Ljava/util/Map;

+###org/keycloak/representations/account/UserProfileMetadata
@15.0.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#getAttributes()Ljava/util/List;
+#setAttributes(Ljava/util/List;)V

+###org/keycloak/representations/idm/ClientProfileRepresentation
@13.0.0
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#isBuiltin()Ljava/lang/Boolean;
+#setBuiltin(Ljava/lang/Boolean;)V
+#getExecutors()Ljava/util/List;
+#setExecutors(Ljava/util/List;)V
@14.0.0
-#isBuiltin()Ljava/lang/Boolean;
-#setBuiltin(Ljava/lang/Boolean;)V

+###org/keycloak/representations/idm/ClientPolicyRepresentation
@13.0.0
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#isBuiltin()Ljava/lang/Boolean;
+#setBuiltin(Ljava/lang/Boolean;)V
+#isEnable()Ljava/lang/Boolean;
+#setEnable(Ljava/lang/Boolean;)V
+#getConditions()Ljava/util/List;
+#setConditions(Ljava/util/List;)V
+#getProfiles()Ljava/util/List;
+#setProfiles(Ljava/util/List;)V
@14.0.0
+#isEnabled()Ljava/lang/Boolean;
+#setEnabled(Ljava/lang/Boolean;)V
-#isBuiltin()Ljava/lang/Boolean;
-#setBuiltin(Ljava/lang/Boolean;)V
-#isEnable()Ljava/lang/Boolean;
-#setEnable(Ljava/lang/Boolean;)V

+###org/keycloak/representations/idm/authorization/ClientScopePolicyRepresentation$ClientScopeDefinition
@13.0.0
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#isRequired()Z
+#setRequired(Z)V

+###org/keycloak/representations/idm/ClientPoliciesRepresentation
@13.0.0
+#<init>()V
+#getPolicies()Ljava/util/List;
+#setPolicies(Ljava/util/List;)V
@14.0.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/keycloak/representations/idm/ClientPolicyConditionRepresentation
@14.0.0
+#<init>()V
+#getConditionProviderId()Ljava/lang/String;
+#setConditionProviderId(Ljava/lang/String;)V
+#getConfiguration()Lcom/fasterxml/jackson/databind/JsonNode;
+#setConfiguration(Lcom/fasterxml/jackson/databind/JsonNode;)V

+###org/keycloak/jose/JOSEHeader
@15.0.0
+#getRawAlgorithm()Ljava/lang/String;
+#getKeyId()Ljava/lang/String;

+###org/keycloak/representations/idm/authorization/ClientScopePolicyRepresentation
@13.0.0
+#<init>()V
+#getType()Ljava/lang/String;
+#getClientScopes()Ljava/util/Set;
+#setClientScopes(Ljava/util/Set;)V
+#addClientScope(Ljava/lang/String;Z)V
+#addClientScope(Ljava/lang/String;)V

+###org/keycloak/representations/idm/ClientPolicyConditionConfigurationRepresentation
@14.0.0
+#<init>()V
+#isNegativeLogic()Ljava/lang/Boolean;
+#setNegativeLogic(Ljava/lang/Boolean;)V
+#getConfigAsMap()Ljava/util/Map;
+#setConfigAsMap(Ljava/lang/String;Ljava/lang/Object;)V

+###org/keycloak/util/BasicAuthHelper$RFC6749
@19.0.2
+#<init>()V
+#createHeader(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#parseHeader(Ljava/lang/String;)[Ljava/lang/String;

+###org/keycloak/util/EnumWithStableIndex
@19.0.0
+#getStableIndex()I
+#getReverseIndex([Lorg/keycloak/util/EnumWithStableIndex;)Ljava/util/Map;

+###org/keycloak/representations/account/CredentialMetadataRepresentation
@18.0.0
+#<init>()V
+#getCredential()Lorg/keycloak/representations/idm/CredentialRepresentation;
+#setCredential(Lorg/keycloak/representations/idm/CredentialRepresentation;)V
+#getInfoMessage()Ljava/lang/String;
+#setInfoMessage(Ljava/lang/String;)V
+#getWarningMessageTitle()Ljava/lang/String;
+#setWarningMessageTitle(Ljava/lang/String;)V
+#getWarningMessageDescription()Ljava/lang/String;
+#setWarningMessageDescription(Ljava/lang/String;)V

+###org/keycloak/representations/ClaimsRepresentation$ClaimValue
@17.0.0
+#<init>()V
+#getEssential()Ljava/lang/Boolean;
+#isEssential()Z
+#setEssential(Ljava/lang/Boolean;)V
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)V
+#getValues()Ljava/util/List;
+#setValues(Ljava/util/List;)V

+###org/keycloak/representations/AuthorizationDetailsJSONRepresentation
@17.0.0
+#<init>()V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getLocations()Ljava/util/List;
+#setLocations(Ljava/util/List;)V
+#getActions()Ljava/util/List;
+#setActions(Ljava/util/List;)V
+#getDatatypes()Ljava/util/List;
+#setDatatypes(Ljava/util/List;)V
+#getIdentifier()Ljava/lang/String;
+#setIdentifier(Ljava/lang/String;)V
+#getPrivileges()Ljava/util/List;
+#setPrivileges(Ljava/util/List;)V
+#getCustomData()Ljava/util/Map;
+#setCustomData(Ljava/lang/String;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#getScopeNameFromCustomData()Ljava/lang/String;
+#getDynamicScopeParamFromCustomData()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/keycloak/representations/ClaimsRepresentation
@17.0.0
+#<init>()V
+#getIdTokenClaims()Ljava/util/Map;
+#setIdTokenClaims(Ljava/util/Map;)V
+#getUserinfoClaims()Ljava/util/Map;
+#setUserinfoClaims(Ljava/util/Map;)V
+#isPresent(Ljava/lang/String;Lorg/keycloak/representations/ClaimsRepresentation$ClaimContext;)Z
+#isPresentAsNullClaim(Ljava/lang/String;Lorg/keycloak/representations/ClaimsRepresentation$ClaimContext;)Z
+#getClaimValue(Ljava/lang/String;Lorg/keycloak/representations/ClaimsRepresentation$ClaimContext;Ljava/lang/Class;)Lorg/keycloak/representations/ClaimsRepresentation$ClaimValue;

+###org/keycloak/representations/ClaimsRepresentation$ClaimContext
@17.0.0
+#values()[Lorg/keycloak/representations/ClaimsRepresentation$ClaimContext;
+#valueOf(Ljava/lang/String;)Lorg/keycloak/representations/ClaimsRepresentation$ClaimContext;

+###org/keycloak/adapters/AdapterConstants
@1.0-alpha-1
@1.0-alpha-1-12062013
-###org/keycloak/adapters/AdapterConstants

+###org/keycloak/adapters/ResourceMetadata
@1.0-alpha-1
+#<init>()V
+#getResourceName()Ljava/lang/String;
+#getRealm()Ljava/lang/String;
+#getClientKeystore()Ljava/security/KeyStore;
+#getClientKeyPassword()Ljava/lang/String;
+#setClientKeyPassword(Ljava/lang/String;)V
+#getTruststore()Ljava/security/KeyStore;
+#getRealmKey()Ljava/security/PublicKey;
+#setResourceName(Ljava/lang/String;)V
+#setRealm(Ljava/lang/String;)V
+#setClientKeystore(Ljava/security/KeyStore;)V
+#setTruststore(Ljava/security/KeyStore;)V
+#setRealmKey(Ljava/security/PublicKey;)V
+#getScope()Ljava/lang/String;
+#setScope(Ljava/lang/String;)V
@1.0-alpha-1-12062013
-###org/keycloak/adapters/ResourceMetadata

+###org/keycloak/representations/idm/SocialMappingRepresentation
@1.0-alpha-1
+#<init>()V
+#getSelf()Ljava/lang/String;
+#setSelf(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getSocialLinks()Ljava/util/List;
+#socialLink(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/SocialLinkRepresentation;
@1.0-alpha-3
+#socialLink(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/SocialLinkRepresentation;
-#socialLink(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/representations/idm/SocialLinkRepresentation;
@1.0-beta-4
-###org/keycloak/representations/idm/SocialMappingRepresentation

+###org/keycloak/representations/SkeletonKeyScope
@1.0-alpha-1
+#<init>()V
@1.0-alpha-3
-###org/keycloak/representations/SkeletonKeyScope

+###org/keycloak/representations/SkeletonKeyToken$Access
@1.0-alpha-1
+#<init>()V
+#getRoles()Ljava/util/Set;
+#roles(Ljava/util/Set;)Lorg/keycloak/representations/SkeletonKeyToken$Access;
+#isUserInRole(Ljava/lang/String;)Z
+#addRole(Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken$Access;
+#getVerifyCaller()Ljava/lang/Boolean;
+#verifyCaller(Ljava/lang/Boolean;)Lorg/keycloak/representations/SkeletonKeyToken$Access;
@1.0-alpha-3
-###org/keycloak/representations/SkeletonKeyToken$Access

+###org/keycloak/representations/SkeletonKeyToken
@1.0-alpha-1
+#<init>()V
+#getResourceAccess()Ljava/util/Map;
+#isVerifyCaller()Z
+#isVerifyCaller(Ljava/lang/String;)Z
+#getResourceAccess(Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken$Access;
+#addAccess(Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken$Access;
+#id(Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken;
+#expiration(J)Lorg/keycloak/representations/SkeletonKeyToken;
+#notBefore(J)Lorg/keycloak/representations/SkeletonKeyToken;
+#issuedAt(J)Lorg/keycloak/representations/SkeletonKeyToken;
+#issuer(Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken;
+#audience(Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken;
+#principal(Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken;
+#type(Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken;
+#getAllowedOrigins()Ljava/util/Set;
+#setAllowedOrigins(Ljava/util/Set;)V
+#getRealmAccess()Lorg/keycloak/representations/SkeletonKeyToken$Access;
+#setRealmAccess(Lorg/keycloak/representations/SkeletonKeyToken$Access;)V
+#getTrustedCertificates()Ljava/util/Set;
+#setTrustedCertificates(Ljava/util/Set;)V
+#getIssuedFor()Ljava/lang/String;
+#issuedFor(Ljava/lang/String;)Lorg/keycloak/representations/SkeletonKeyToken;
+#type(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#principal(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#audience(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#issuer(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#issuedAt(J)Lorg/keycloak/representations/JsonWebToken;
+#notBefore(J)Lorg/keycloak/representations/JsonWebToken;
+#expiration(J)Lorg/keycloak/representations/JsonWebToken;
+#id(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
@1.0-alpha-1-12062013
+#type(Ljava/lang/String;)Lorg/jboss/resteasy/jwt/JsonWebToken;
+#principal(Ljava/lang/String;)Lorg/jboss/resteasy/jwt/JsonWebToken;
+#audience(Ljava/lang/String;)Lorg/jboss/resteasy/jwt/JsonWebToken;
+#issuer(Ljava/lang/String;)Lorg/jboss/resteasy/jwt/JsonWebToken;
+#issuedAt(J)Lorg/jboss/resteasy/jwt/JsonWebToken;
+#notBefore(J)Lorg/jboss/resteasy/jwt/JsonWebToken;
+#expiration(J)Lorg/jboss/resteasy/jwt/JsonWebToken;
+#id(Ljava/lang/String;)Lorg/jboss/resteasy/jwt/JsonWebToken;
-#type(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
-#principal(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
-#audience(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
-#issuer(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
-#issuedAt(J)Lorg/keycloak/representations/JsonWebToken;
-#notBefore(J)Lorg/keycloak/representations/JsonWebToken;
-#expiration(J)Lorg/keycloak/representations/JsonWebToken;
-#id(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
@1.0-alpha-2
+#type(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#principal(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#audience(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#issuer(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
+#issuedAt(J)Lorg/keycloak/representations/JsonWebToken;
+#notBefore(J)Lorg/keycloak/representations/JsonWebToken;
+#expiration(J)Lorg/keycloak/representations/JsonWebToken;
+#id(Ljava/lang/String;)Lorg/keycloak/representations/JsonWebToken;
-#type(Ljava/lang/String;)Lorg/jboss/resteasy/jwt/JsonWebToken;
-#principal(Ljava/lang/String;)Lorg/jboss/resteasy/jwt/JsonWebToken;
-#audience(Ljava/lang/String;)Lorg/jboss/resteasy/jwt/JsonWebToken;
-#issuer(Ljava/lang/String;)Lorg/jboss/resteasy/jwt/JsonWebToken;
-#issuedAt(J)Lorg/jboss/resteasy/jwt/JsonWebToken;
-#notBefore(J)Lorg/jboss/resteasy/jwt/JsonWebToken;
-#expiration(J)Lorg/jboss/resteasy/jwt/JsonWebToken;
-#id(Ljava/lang/String;)Lorg/jboss/resteasy/jwt/JsonWebToken;
@1.0-alpha-3
-###org/keycloak/representations/SkeletonKeyToken

+###org/keycloak/ServiceUrlConstants
@1.0-alpha-1
@1.0-alpha-1-12062013
-###org/keycloak/ServiceUrlConstants

+###org/keycloak/SkeletonKeyPrincipal
@1.0-alpha-1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getSurrogate()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.0-alpha-3
-###org/keycloak/SkeletonKeyPrincipal

+###org/keycloak/SkeletonKeySession
@1.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/keycloak/representations/SkeletonKeyToken;Lorg/keycloak/adapters/ResourceMetadata;)V
+#getToken()Lorg/keycloak/representations/SkeletonKeyToken;
+#getTokenString()Ljava/lang/String;
+#getMetadata()Lorg/keycloak/adapters/ResourceMetadata;
@1.0-alpha-1-12062013
+#<init>(Ljava/lang/String;Lorg/keycloak/representations/SkeletonKeyToken;Lorg/keycloak/ResourceMetadata;)V
+#getMetadata()Lorg/keycloak/ResourceMetadata;
-#<init>(Ljava/lang/String;Lorg/keycloak/representations/SkeletonKeyToken;Lorg/keycloak/adapters/ResourceMetadata;)V
-#getMetadata()Lorg/keycloak/adapters/ResourceMetadata;
@1.0-alpha-2
+#<init>(Ljava/lang/String;Lorg/keycloak/representations/SkeletonKeyToken;Lorg/keycloak/adapters/ResourceMetadata;)V
+#getMetadata()Lorg/keycloak/adapters/ResourceMetadata;
-#<init>(Ljava/lang/String;Lorg/keycloak/representations/SkeletonKeyToken;Lorg/keycloak/ResourceMetadata;)V
-#getMetadata()Lorg/keycloak/ResourceMetadata;
@1.0-alpha-3
-###org/keycloak/SkeletonKeySession

+###org/keycloak/util/Base64$InputStream
@1.0-alpha-1
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;I)V
+#read()I
+#read([BII)I
@1.0-alpha-1-12062013
-###org/keycloak/util/Base64$InputStream

+###org/keycloak/util/Base64$OutputStream
@1.0-alpha-1
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#write(I)V
+#write([BII)V
+#flushBase64()V
+#close()V
+#suspendEncoding()V
+#resumeEncoding()V
@1.0-alpha-1-12062013
-###org/keycloak/util/Base64$OutputStream

+###org/keycloak/util/Base64
@1.0-alpha-1
+#encode(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#encode(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)V
+#encodeObject(Ljava/io/Serializable;)Ljava/lang/String;
+#encodeObject(Ljava/io/Serializable;I)Ljava/lang/String;
+#encodeBytes([B)Ljava/lang/String;
+#encodeBytes([BI)Ljava/lang/String;
+#encodeBytes([BII)Ljava/lang/String;
+#encodeBytes([BIII)Ljava/lang/String;
+#encodeBytesToBytes([B)[B
+#encodeBytesToBytes([BIII)[B
+#decode([B)[B
+#decode([BIII)[B
+#decode(Ljava/lang/String;)[B
+#decode(Ljava/lang/String;I)[B
+#decodeToObject(Ljava/lang/String;)Ljava/lang/Object;
+#decodeToObject(Ljava/lang/String;ILjava/lang/ClassLoader;)Ljava/lang/Object;
+#encodeToFile([BLjava/lang/String;)V
+#decodeToFile(Ljava/lang/String;Ljava/lang/String;)V
+#decodeFromFile(Ljava/lang/String;)[B
+#encodeFromFile(Ljava/lang/String;)Ljava/lang/String;
+#encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
+#decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
@1.0-alpha-1-12062013
-###org/keycloak/util/Base64

+###org/keycloak/representations/info/CryptoInfoRepresentation
@20.0.0
+#<init>()V
+#create()Lorg/keycloak/representations/info/CryptoInfoRepresentation;
+#getCryptoProvider()Ljava/lang/String;
+#setCryptoProvider(Ljava/lang/String;)V
+#getSupportedKeystoreTypes()Ljava/util/List;
+#setSupportedKeystoreTypes(Ljava/util/List;)V

+###org/keycloak/representations/adapters/action/SessionStats
@1.0-alpha-3
+#<init>()V
+#getActiveSessions()I
+#setActiveSessions(I)V
+#getActiveUsers()I
+#setActiveUsers(I)V
+#getUsers()Ljava/util/Map;
+#setUsers(Ljava/util/Map;)V
@1.1.0.Beta1
-###org/keycloak/representations/adapters/action/SessionStats

+###org/keycloak/representations/adapters/action/SessionStatsAction
@1.0-alpha-3
+#<init>()V
+#<init>(Ljava/lang/String;ILjava/lang/String;)V
+#isListUsers()Z
+#setListUsers(Z)V
+#validate()Z
@1.1.0.Beta1
-###org/keycloak/representations/adapters/action/SessionStatsAction

+###org/keycloak/representations/adapters/action/UserStats
@1.0-alpha-3
+#<init>()V
+#isLoggedIn()Z
+#setLoggedIn(Z)V
+#getWhenLoggedIn()J
+#setWhenLoggedIn(J)V
@1.1.0.Beta1
-###org/keycloak/representations/adapters/action/UserStats

+###org/keycloak/representations/adapters/action/UserStatsAction
@1.0-alpha-3
+#<init>()V
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
+#getUser()Ljava/lang/String;
+#validate()Z
@1.1.0.Beta1
-###org/keycloak/representations/adapters/action/UserStatsAction

+###org/keycloak/provider/Spi
@1.0-beta-1
+#getName()Ljava/lang/String;
+#getProviderClass()Ljava/lang/Class;
+#getProviderFactoryClass()Ljava/lang/Class;
@1.0-beta-4
-###org/keycloak/provider/Spi

+###org/keycloak/provider/Provider
@1.0-beta-1
+#close()V
@1.0-beta-4
-###org/keycloak/provider/Provider

+###org/keycloak/provider/ProviderFactory
@1.0-beta-1
+#create(Lorg/keycloak/provider/ProviderSession;)Lorg/keycloak/provider/Provider;
+#init(Lorg/keycloak/Config$Scope;)V
+#close()V
+#getId()Ljava/lang/String;
@1.0-beta-4
-###org/keycloak/provider/ProviderFactory

+###org/keycloak/provider/ProviderSession
@1.0-beta-1
+#getProvider(Ljava/lang/Class;)Lorg/keycloak/provider/Provider;
+#getProvider(Ljava/lang/Class;Ljava/lang/String;)Lorg/keycloak/provider/Provider;
+#listProviderIds(Ljava/lang/Class;)Ljava/util/Set;
+#getAllProviders(Ljava/lang/Class;)Ljava/util/Set;
+#close()V
@1.0-beta-4
-###org/keycloak/provider/ProviderSession

+###org/keycloak/provider/ProviderSessionFactory
@1.0-beta-1
+#createSession()Lorg/keycloak/provider/ProviderSession;
+#close()V
+#init()V
@1.0-beta-4
-###org/keycloak/provider/ProviderSessionFactory

+###org/keycloak/representations/idm/RealmAuditRepresentation
@1.0-beta-1
+#<init>()V
+#isAuditEnabled()Z
+#setAuditEnabled(Z)V
+#getAuditExpiration()Ljava/lang/Long;
+#setAuditExpiration(Ljava/lang/Long;)V
+#getAuditListeners()Ljava/util/List;
+#setAuditListeners(Ljava/util/List;)V
@1.0-rc-2
-###org/keycloak/representations/idm/RealmAuditRepresentation

+###org/keycloak/representations/idm/AuthenticationLinkRepresentation
@1.0-beta-1
+#<init>()V
+#getAuthProvider()Ljava/lang/String;
+#setAuthProvider(Ljava/lang/String;)V
+#getAuthUserId()Ljava/lang/String;
+#setAuthUserId(Ljava/lang/String;)V
@1.0-beta-4
-###org/keycloak/representations/idm/AuthenticationLinkRepresentation

+###org/keycloak/representations/idm/AuthenticationProviderRepresentation
@1.0-beta-1
+#<init>()V
+#getProviderName()Ljava/lang/String;
+#setProviderName(Ljava/lang/String;)V
+#isPasswordUpdateSupported()Z
+#setPasswordUpdateSupported(Z)V
+#getConfig()Ljava/util/Map;
+#setConfig(Ljava/util/Map;)V
@1.0-beta-4
-###org/keycloak/representations/idm/AuthenticationProviderRepresentation

+###org/keycloak/adapters/config/ManagedResourceConfig
@1.0-alpha-1-12062013
+#<init>()V
+#isUseResourceRoleMappings()Z
+#setUseResourceRoleMappings(Z)V
+#isSslNotRequired()Z
+#setSslNotRequired(Z)V
+#getRealmUrl()Ljava/lang/String;
+#setRealmUrl(Ljava/lang/String;)V
+#getRealm()Ljava/lang/String;
+#setRealm(Ljava/lang/String;)V
+#getResource()Ljava/lang/String;
+#setResource(Ljava/lang/String;)V
+#getRealmKey()Ljava/lang/String;
+#setRealmKey(Ljava/lang/String;)V
+#getAuthUrl()Ljava/lang/String;
+#setAuthUrl(Ljava/lang/String;)V
+#getCodeUrl()Ljava/lang/String;
+#setCodeUrl(Ljava/lang/String;)V
+#isAllowAnyHostname()Z
+#setAllowAnyHostname(Z)V
+#isDisableTrustManager()Z
+#setDisableTrustManager(Z)V
+#getTruststore()Ljava/lang/String;
+#setTruststore(Ljava/lang/String;)V
+#getTruststorePassword()Ljava/lang/String;
+#setTruststorePassword(Ljava/lang/String;)V
+#getCredentials()Ljava/util/Map;
+#getClientKeystore()Ljava/lang/String;
+#setClientKeystore(Ljava/lang/String;)V
+#getClientKeystorePassword()Ljava/lang/String;
+#setClientKeystorePassword(Ljava/lang/String;)V
+#getClientKeyPassword()Ljava/lang/String;
+#setClientKeyPassword(Ljava/lang/String;)V
+#getConnectionPoolSize()I
+#setConnectionPoolSize(I)V
+#getAdminRole()Ljava/lang/String;
+#setAdminRole(Ljava/lang/String;)V
+#isCors()Z
+#setCors(Z)V
+#getCorsMaxAge()I
+#setCorsMaxAge(I)V
+#getCorsAllowedHeaders()Ljava/lang/String;
+#setCorsAllowedHeaders(Ljava/lang/String;)V
+#getCorsAllowedMethods()Ljava/lang/String;
+#setCorsAllowedMethods(Ljava/lang/String;)V
+#isExposeToken()Z
+#setExposeToken(Z)V
+#isBearerOnly()Z
+#setBearerOnly(Z)V
@1.0-alpha-2
-###org/keycloak/adapters/config/ManagedResourceConfig

+###org/keycloak/adapters/config/ManagedResourceConfigLoader
@1.0-alpha-1-12062013
+#<init>()V
+#<init>(Ljava/io/InputStream;)V
+#loadKeyStore(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
+#init(Z)V
+#getRemoteSkeletonKeyConfig()Lorg/keycloak/adapters/config/ManagedResourceConfig;
+#getResourceMetadata()Lorg/keycloak/ResourceMetadata;
+#getClient()Lorg/jboss/resteasy/client/jaxrs/ResteasyClient;
+#getClientCertKeystore()Ljava/security/KeyStore;
+#getTruststore()Ljava/security/KeyStore;
+#getRealmConfiguration()Lorg/keycloak/RealmConfiguration;
@1.0-alpha-2
-###org/keycloak/adapters/config/ManagedResourceConfigLoader

+###org/keycloak/BouncyIntegration
@1.0-alpha-1-12062013
+#<init>()V
+#init()V
@1.0-alpha-2
-###org/keycloak/BouncyIntegration

+###org/keycloak/DerUtils
@1.0-alpha-1-12062013
+#<init>()V
+#decodePrivateKey(Ljava/io/InputStream;)Ljava/security/PrivateKey;
+#decodePublicKey([B)Ljava/security/PublicKey;
+#decodeCertificate(Ljava/io/InputStream;)Ljava/security/cert/X509Certificate;
+#decodePrivateKey([B)Ljava/security/PrivateKey;
@1.0-alpha-2
-###org/keycloak/DerUtils

+###org/keycloak/EnvUtil
@1.0-alpha-1-12062013
+#<init>()V
+#replace(Ljava/lang/String;)Ljava/lang/String;
@1.0-alpha-2
-###org/keycloak/EnvUtil

+###org/keycloak/jaxrs/JaxrsBearerTokenFilter
@1.0-alpha-1-12062013
+#<init>(Lorg/keycloak/ResourceMetadata;)V
+#filter(Ljavax/ws/rs/container/ContainerRequestContext;)V
@1.0-alpha-2
-###org/keycloak/jaxrs/JaxrsBearerTokenFilter

+###org/keycloak/jaxrs/JaxrsOAuthClient
@1.0-alpha-1-12062013
+#<init>()V
+#redirect(Ljavax/ws/rs/core/UriInfo;Ljava/lang/String;)Ljavax/ws/rs/core/Response;
+#redirect(Ljavax/ws/rs/core/UriInfo;Ljava/lang/String;Ljava/lang/String;)Ljavax/ws/rs/core/Response;
+#getStateCookiePath(Ljavax/ws/rs/core/UriInfo;)Ljava/lang/String;
+#getBearerToken(Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/core/HttpHeaders;)Ljava/lang/String;
+#getError(Ljavax/ws/rs/core/UriInfo;)Ljava/lang/String;
+#getAccessCode(Ljavax/ws/rs/core/UriInfo;)Ljava/lang/String;
+#checkStateCookie(Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/core/HttpHeaders;)Ljava/lang/String;
@1.0-alpha-2
-###org/keycloak/jaxrs/JaxrsOAuthClient

+###org/keycloak/PemUtils
@1.0-alpha-1-12062013
+#<init>()V
+#decodeCertificate(Ljava/io/InputStream;)Ljava/security/cert/X509Certificate;
+#decodeCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate;
+#decodePublicKey(Ljava/lang/String;)Ljava/security/PublicKey;
+#decodePrivateKey(Ljava/lang/String;)Ljava/security/PrivateKey;
+#decodePrivateKey(Ljava/io/InputStream;)Ljava/security/PrivateKey;
+#pemToDer(Ljava/io/InputStream;)[B
+#pemToDer(Ljava/lang/String;)[B
+#removeBeginEnd(Ljava/lang/String;)Ljava/lang/String;
+#pemFromStream(Ljava/io/InputStream;)Ljava/lang/String;
@1.0-alpha-2
-###org/keycloak/PemUtils

+###org/keycloak/RealmConfiguration
@1.0-alpha-1-12062013
+#<init>()V
+#<init>(Lorg/keycloak/adapters/config/ManagedResourceConfig;)V
+#getMetadata()Lorg/keycloak/ResourceMetadata;
+#setMetadata(Lorg/keycloak/ResourceMetadata;)V
+#getClient()Lorg/jboss/resteasy/client/jaxrs/ResteasyClient;
+#setClient(Lorg/jboss/resteasy/client/jaxrs/ResteasyClient;)V
+#getAuthUrl()Ljavax/ws/rs/core/UriBuilder;
+#setAuthUrl(Ljavax/ws/rs/core/UriBuilder;)V
+#getResourceCredentials()Ljavax/ws/rs/core/Form;
+#getCodeUrl()Lorg/jboss/resteasy/client/jaxrs/ResteasyWebTarget;
+#setCodeUrl(Lorg/jboss/resteasy/client/jaxrs/ResteasyWebTarget;)V
+#isSslRequired()Z
+#setSslRequired(Z)V
+#getStateCookieName()Ljava/lang/String;
+#setStateCookieName(Ljava/lang/String;)V
@1.0-alpha-2
-###org/keycloak/RealmConfiguration

+###org/keycloak/representations/idm/admin/AdminAction
@1.0-alpha-1-12062013
+#<init>()V
+#<init>(Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getAction()Ljava/lang/String;
+#setAction(Ljava/lang/String;)V
+#isExpired()Z
+#getExpiration()J
+#setExpiration(J)V
+#getResource()Ljava/lang/String;
+#setResource(Ljava/lang/String;)V
@1.0-alpha-2
-###org/keycloak/representations/idm/admin/AdminAction

+###org/keycloak/representations/idm/admin/LogoutAction
@1.0-alpha-1-12062013
+#<init>()V
+#<init>(Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;)V
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
@1.0-alpha-2
-###org/keycloak/representations/idm/admin/LogoutAction

+###org/keycloak/representations/idm/ApplicationInstallationRepresentation
@1.0-alpha-1-12062013
+#<init>()V
+#getRealm()Ljava/lang/String;
+#setRealm(Ljava/lang/String;)V
+#getResource()Ljava/lang/String;
+#setResource(Ljava/lang/String;)V
+#getRealmPublicKey()Ljava/lang/String;
+#setRealmPublicKey(Ljava/lang/String;)V
+#getAuthUrl()Ljava/lang/String;
+#setAuthUrl(Ljava/lang/String;)V
+#getCodeUrl()Ljava/lang/String;
+#setCodeUrl(Ljava/lang/String;)V
+#isSslNotRequired()Z
+#setSslNotRequired(Z)V
+#getCredentials()Ljava/util/Map;
+#setCredentials(Ljava/util/Map;)V
@1.0-alpha-2
-###org/keycloak/representations/idm/ApplicationInstallationRepresentation

+###org/keycloak/ResourceMetadata
@1.0-alpha-1-12062013
+#<init>()V
+#getResourceName()Ljava/lang/String;
+#getRealm()Ljava/lang/String;
+#getClientKeystore()Ljava/security/KeyStore;
+#getClientKeyPassword()Ljava/lang/String;
+#setClientKeyPassword(Ljava/lang/String;)V
+#getTruststore()Ljava/security/KeyStore;
+#getRealmKey()Ljava/security/PublicKey;
+#setResourceName(Ljava/lang/String;)V
+#setRealm(Ljava/lang/String;)V
+#setClientKeystore(Ljava/security/KeyStore;)V
+#setTruststore(Ljava/security/KeyStore;)V
+#setRealmKey(Ljava/security/PublicKey;)V
@1.0-alpha-2
-###org/keycloak/ResourceMetadata

+###org/keycloak/servlet/ServletOAuthClient
@1.0-alpha-1-12062013
+#<init>()V
+#redirectRelative(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#redirect(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getBearerToken(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
@1.0-alpha-2
-###org/keycloak/servlet/ServletOAuthClient

+###org/keycloak/SkeletonKeyContextResolver
@1.0-alpha-1-12062013
+#<init>()V
+#<init>(Z)V
+#getContext(Ljava/lang/Class;)Lorg/codehaus/jackson/map/ObjectMapper;
+#getContext(Ljava/lang/Class;)Ljava/lang/Object;
@1.0-alpha-2
-###org/keycloak/SkeletonKeyContextResolver

+###org/keycloak/util/BasicAuthHelper$UrlEncoded
@19.0.0
+#<init>()V
+#createHeader(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#parseHeader(Ljava/lang/String;)[Ljava/lang/String;
@19.0.2
-###org/keycloak/util/BasicAuthHelper$UrlEncoded

+###org/keycloak/representations/authorization/Permission
@2.0.0.CR1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V
+#getResourceSetId()Ljava/lang/String;
+#getResourceSetName()Ljava/lang/String;
+#getScopes()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#setScopes(Ljava/util/Set;)V
@2.1.0.CR1
-###org/keycloak/representations/authorization/Permission

+###org/keycloak/crypto/PublicKeysWrapper
@21.0.0
+#<init>(Ljava/util/List;)V
+#getKeys()Ljava/util/List;
+#getKids()Ljava/util/List;
+#getKeyByKidAndAlg(Ljava/lang/String;Ljava/lang/String;)Lorg/keycloak/crypto/KeyWrapper;

+###org/keycloak/util/JpaUtils
@1.0-beta-3
+#<init>()V
+#getHibernateProperties()Ljava/util/Properties;
@1.0-beta-4
-###org/keycloak/util/JpaUtils

+###org/keycloak/representations/idm/ProtocolMapperTypeRepresentation$ConfigProperty
@1.2.0.Beta1
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getLabel()Ljava/lang/String;
+#setLabel(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getDefaultValue()Ljava/lang/Object;
+#setDefaultValue(Ljava/lang/Object;)V
+#getHelpText()Ljava/lang/String;
+#setHelpText(Ljava/lang/String;)V
@1.2.0.CR1
-###org/keycloak/representations/idm/ProtocolMapperTypeRepresentation$ConfigProperty

+###org/keycloak/representations/idm/ClientIdentityProviderMappingRepresentation
@1.2.0.Beta1
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#isRetrieveToken()Z
+#setRetrieveToken(Z)V
@1.2.0.CR1
-###org/keycloak/representations/idm/ClientIdentityProviderMappingRepresentation
