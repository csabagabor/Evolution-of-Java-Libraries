
+###org/springsource/loaded/AbstractMember
@1.1.5.RELEASE
+#getName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getGenericSignature()Ljava/lang/String;
+#getModifiers()I
+#getId()I
+#setId(I)V
+#isStatic()Z
+#isFinal()Z
+#isPrivate()Z
+#isProtected()Z
+#isPublic()Z
+#isPrivateOrStaticOrFinal()Z

+###org/springsource/loaded/AnyTypePattern
@1.1.5.RELEASE
+#<init>()V
+#toString()Ljava/lang/String;

+###org/springsource/loaded/Asserts
@1.1.5.RELEASE
+#<init>()V
+#assertNotDotted(Ljava/lang/String;)Z

+###org/springsource/loaded/C
@1.1.5.RELEASE
+#<init>()V

+###org/springsource/loaded/ChildClassLoader
@1.1.5.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#defineClass(Ljava/lang/String;[B)Ljava/lang/Class;
+#getDefinedCount()I

+###org/springsource/loaded/ClassRenamer
@1.1.5.RELEASE
+#<init>()V
+#rename(Ljava/lang/String;[B[Ljava/lang/String;)[B

+###org/springsource/loaded/ConstantPoolChecker
@1.1.5.RELEASE
+#main([Ljava/lang/String;)V
+#computeReferences()V
+#readConstantPool([B)V

+###org/springsource/loaded/ConstantPoolChecker2
@1.1.5.RELEASE
+#main([Ljava/lang/String;)V
+#computeReferences()V
+#readConstantPool([B)V

+###org/springsource/loaded/Constants
@1.1.5.RELEASE

+###org/springsource/loaded/CurrentLiveVersion
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/ReloadableType;Ljava/lang/String;[B)V
+#define()V
+#getReloadableMethod(Ljava/lang/String;Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#getExecutorMethod(Lorg/springsource/loaded/MethodMember;)Ljava/lang/reflect/Method;
+#toString()Ljava/lang/String;
+#getExecutorClass()Ljava/lang/Class;
+#getVersionStamp()Ljava/lang/String;
+#getExecutorField(Ljava/lang/String;)Ljava/lang/reflect/Field;
+#getTypeDelta()Lorg/springsource/loaded/TypeDelta;
+#setTypeDelta(Lorg/springsource/loaded/TypeDelta;)V
+#hasClinit()Z
+#hasConstructorChanged(Ljava/lang/String;)Z
+#hasConstructorChanged(Lorg/springsource/loaded/MethodMember;)Z
+#hasConstructorChanged(I)Z
+#clearClassloaderLinks()V
+#reloadMostRecentDispatcherAndExecutor()V
+#getDispatcherInstance()Ljava/lang/Object;
+#runStaticInitializer()V

+###org/springsource/loaded/DispatcherBuilder
@1.1.5.RELEASE
+#<init>()V
+#createFor(Lorg/springsource/loaded/ReloadableType;Lorg/springsource/loaded/IncrementalTypeDescriptor;Ljava/lang/String;)[B

+###org/springsource/loaded/EmptyClassVisitor
@1.1.5.RELEASE
+#<init>()V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lsl/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;
+#visitEnd()V

+###org/springsource/loaded/ExactTypePattern
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###org/springsource/loaded/ExecutorBuilder
@1.1.5.RELEASE
+#createFor(Lorg/springsource/loaded/ReloadableType;Ljava/lang/String;Lorg/springsource/loaded/TypeDescriptor;[B)[B

+###org/springsource/loaded/FieldDelta
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;)V
+#setTypeChanged(Ljava/lang/String;Ljava/lang/String;)V
+#setAnnotationsChanged(Ljava/lang/String;)V
+#hasAnyChanges()Z
+#setAccessChanged(II)V
+#toString()Ljava/lang/String;

+###org/springsource/loaded/FieldMember
@1.1.5.RELEASE
+#getDeclaringTypeName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springsource/loaded/FieldReaderWriter
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/FieldMember;Lorg/springsource/loaded/TypeDescriptor;)V
+#setValue(Ljava/lang/Object;Ljava/lang/Object;Lorg/springsource/loaded/ISMgr;)V
+#setStaticFieldValue(Ljava/lang/Class;Ljava/lang/Object;Lorg/springsource/loaded/SSMgr;)V
+#getValue(Ljava/lang/Object;Lorg/springsource/loaded/ISMgr;)Ljava/lang/Object;
+#getStaticFieldValue(Ljava/lang/Class;Lorg/springsource/loaded/SSMgr;)Ljava/lang/Object;
+#isStatic()Z

+###org/springsource/loaded/FileChangeListener
@1.1.5.RELEASE
+#fileChanged(Ljava/io/File;)V
+#register(Lorg/springsource/loaded/ReloadableType;Ljava/io/File;)V

+###org/springsource/loaded/GlobalConfiguration
@1.1.5.RELEASE
+#<init>()V

+###org/springsource/loaded/ISMgr
@1.1.5.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springsource/loaded/ReloadableType;)V
+#getValue(Lorg/springsource/loaded/ReloadableType;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#setValue(Lorg/springsource/loaded/ReloadableType;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###org/springsource/loaded/IncrementalTypeDescriptor
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/TypeDescriptor;)V
+#getLatestTypeDescriptor()Lorg/springsource/loaded/TypeDescriptor;
+#setLatestTypeDescriptor(Lorg/springsource/loaded/TypeDescriptor;)V
+#getNewOrChangedMethods()Ljava/util/List;
+#getNewOrChangedConstructors()Ljava/util/List;
+#getDeletedMethods()Ljava/util/List;
+#mustUseExecutorForThisMethod(I)Z
+#hasBeenDeleted(I)Z
+#getFromLatestByDescriptor(Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#isBrandNewMethod(Lorg/springsource/loaded/MethodMember;)Z
+#hasChanged(Lorg/springsource/loaded/MethodMember;)Z
+#isCatcher(Lorg/springsource/loaded/MethodMember;)Z
+#isNowNonStatic(Lorg/springsource/loaded/MethodMember;)Z
+#isNowStatic(Lorg/springsource/loaded/MethodMember;)Z
+#hasVisibilityChanged(Lorg/springsource/loaded/MethodMember;)Z
+#wasDeleted(Lorg/springsource/loaded/MethodMember;)Z
+#getOriginal()Lorg/springsource/loaded/TypeDescriptor;
+#toString()Ljava/lang/String;
+#toString(Z)Ljava/lang/String;

+###org/springsource/loaded/InterfaceExtractor
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/TypeRegistry;)V
+#extract([BLorg/springsource/loaded/TypeRegistry;Lorg/springsource/loaded/TypeDescriptor;)[B
+#extract([BLorg/springsource/loaded/TypeDescriptor;)[B

+###org/springsource/loaded/IsReloadableTypePlugin
@1.1.5.RELEASE
+#shouldBeMadeReloadable(Lorg/springsource/loaded/TypeRegistry;Ljava/lang/String;Ljava/security/ProtectionDomain;[B)Lorg/springsource/loaded/agent/ReloadDecision;

+###org/springsource/loaded/LoadtimeInstrumentationPlugin
@1.1.5.RELEASE
+#accept(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;[B)Z
+#modify(Ljava/lang/String;Ljava/lang/ClassLoader;[B)[B

+###org/springsource/loaded/Log
@1.1.5.RELEASE
+#<init>()V
+#log(Ljava/lang/String;)V

+###org/springsource/loaded/MethodDelta
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setAnnotationsChanged(Ljava/lang/String;)V
+#hasAnyChanges()Z
+#hasInvokeSpecialChanged()Z
+#hasCodeChanged()Z
+#setAccessChanged(II)V
+#toString()Ljava/lang/String;
+#setInstructionsChanged([Lsl/org/objectweb/asm/tree/AbstractInsnNode;[Lsl/org/objectweb/asm/tree/AbstractInsnNode;)V
+#setInvokespecialChanged(Ljava/lang/String;Ljava/lang/String;)V
+#setCodeChanged([Lsl/org/objectweb/asm/tree/AbstractInsnNode;[Lsl/org/objectweb/asm/tree/AbstractInsnNode;)V

+###org/springsource/loaded/MethodInvokerRewriter
@1.1.5.RELEASE
+#<init>()V
+#rewrite(Lorg/springsource/loaded/TypeRegistry;[BZ)[B
+#rewrite(Lorg/springsource/loaded/TypeRegistry;[B)[B
+#rewriteUsingCache(Ljava/lang/String;Lorg/springsource/loaded/TypeRegistry;[B)[B

+###org/springsource/loaded/MethodMember
@1.1.5.RELEASE
+#getExceptions()[Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getParamDescriptor()Ljava/lang/String;
+#hasReturnValue()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#catcherCopyOf()Lorg/springsource/loaded/MethodMember;
+#superDispatcherFor()Lorg/springsource/loaded/MethodMember;
+#catcherCopyOfWithAbstractRemoved()Lorg/springsource/loaded/MethodMember;
+#equalsApartFromModifiers(Lorg/springsource/loaded/MethodMember;)Z
+#getNameAndDescriptor()Ljava/lang/String;
+#isClash(Lorg/springsource/loaded/MethodMember;)Z
+#isSuperDispatcher(Lorg/springsource/loaded/MethodMember;)Z
+#isCatcher(Lorg/springsource/loaded/MethodMember;)Z
+#isCatcherForInterfaceMethod(Lorg/springsource/loaded/MethodMember;)Z
+#isDeleted(Lorg/springsource/loaded/MethodMember;)Z
+#bitsToString()Ljava/lang/Object;
+#shouldReplace(Lorg/springsource/loaded/MethodMember;)Z
+#isConstructor()Z

+###org/springsource/loaded/NameRegistry
@1.1.5.RELEASE
+#reset()V
+#getIdFor(Ljava/lang/String;)I
+#getIdOrAllocateFor(Ljava/lang/String;)I
+#getTypenameById(I)Ljava/lang/String;

+###org/springsource/loaded/Plugin
@1.1.5.RELEASE

+###org/springsource/loaded/Plugins
@1.1.5.RELEASE
+#<init>()V
+#registerGlobalPlugin(Lorg/springsource/loaded/Plugin;)V
+#unregisterGlobalPlugin(Lorg/springsource/loaded/Plugin;)V

+###org/springsource/loaded/PrefixTypePattern
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###org/springsource/loaded/QuickVisitor
@1.1.5.RELEASE
+#<init>()V
+#getImplementedInterfaces([B)[Ljava/lang/String;

+###org/springsource/loaded/RTH
@1.1.5.RELEASE
+#<init>()V
+#collapse(Ljava/lang/String;I)[Ljava/lang/Object;

+###org/springsource/loaded/ReflectionFieldReaderWriter
@1.1.5.RELEASE
+#<init>(Ljava/lang/reflect/Field;)V
+#getStaticFieldValue(Ljava/lang/Class;Lorg/springsource/loaded/SSMgr;)Ljava/lang/Object;
+#setStaticFieldValue(Ljava/lang/Class;Ljava/lang/Object;Lorg/springsource/loaded/SSMgr;)V
+#setValue(Ljava/lang/Object;Ljava/lang/Object;Lorg/springsource/loaded/ISMgr;)V
+#getValue(Ljava/lang/Object;Lorg/springsource/loaded/ISMgr;)Ljava/lang/Object;
+#isStatic()Z

+###org/springsource/loaded/ReloadEventProcessorPlugin
@1.1.5.RELEASE
+#shouldRerunStaticInitializer(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)Z
+#reloadEvent(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V

+###org/springsource/loaded/ReloadException
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Exception;)V
+#<init>(Ljava/lang/String;)V

+###org/springsource/loaded/ReloadableType
@1.1.5.RELEASE
+#getClazz()Ljava/lang/Class;
+#toString()Ljava/lang/String;
+#<init>(Ljava/lang/String;[BILorg/springsource/loaded/TypeRegistry;Lorg/springsource/loaded/TypeDescriptor;)V
+#getTypeDescriptor()Lorg/springsource/loaded/TypeDescriptor;
+#getMethod(Ljava/lang/String;Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#getConstructor(Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#loadNewVersion([B)Z
+#simulateReload()Z
+#loadNewVersion(Ljava/lang/String;[BZ)Z
+#loadNewVersion(Ljava/lang/String;[B)Z
+#fixupGroovyType()V
+#getLatestDispatcherBytes()[B
+#getLatestDispatcherClass()Ljava/lang/Class;
+#getInterfaceBytes()[B
+#getLatestDispatcherInstance()Ljava/lang/Object;
+#getLatestDispatcherInstance(Z)Ljava/lang/Object;
+#getLatestDispatcherName()Ljava/lang/String;
+#getBytesInitial()[B
+#getBytesLoaded()[B
+#getLatestExecutorBytes()[B
+#getLatestExecutorClass()Ljava/lang/Class;
+#getLatestExecutorName()Ljava/lang/String;
+#getCurrentMethod(Ljava/lang/String;Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#getOriginalMethod(Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#getName()Ljava/lang/String;
+#getSlashedName()Ljava/lang/String;
+#getTypeRegistry()Lorg/springsource/loaded/TypeRegistry;
+#getTypeRegistryId()I
+#getId()I
+#rewriteCallSitesAndDefine()V
+#fetchLatest()Ljava/lang/Object;
+#hasBeenReloaded()Z
+#getLiveVersion()Lorg/springsource/loaded/CurrentLiveVersion;
+#cchanged(Ljava/lang/String;)Z
+#cchanged(I)Ljava/lang/Object;
+#changed(I)I
+#clinitchanged()I
+#fetchLatestIfExists(I)Ljava/lang/Object;
+#getSlashedSupertypeName()Ljava/lang/String;
+#getDispatcher()Lorg/springsource/loaded/__DynamicallyDispatchable;
+#determineDispatcher(Ljava/lang/Object;Ljava/lang/String;)Lorg/springsource/loaded/__DynamicallyDispatchable;
+#getBaseName()Ljava/lang/String;
+#getLatestTypeDescriptor()Lorg/springsource/loaded/TypeDescriptor;
+#getFromLatestByDescriptor(Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#getMethod(Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#getCurrentConstructor(Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#getOriginalConstructor(Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#getJavaMethodCache()Lorg/springsource/loaded/ri/JavaMethodCache;
+#findInstanceField(Ljava/lang/String;)Lorg/springsource/loaded/FieldMember;
+#findStaticField(Ljava/lang/String;)Lorg/springsource/loaded/FieldMember;
+#setField(Ljava/lang/Object;Ljava/lang/String;ZLjava/lang/Object;)V
+#getField(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;
+#locateField(Ljava/lang/String;)Lorg/springsource/loaded/FieldReaderWriter;
+#walk(Ljava/lang/String;Lorg/springsource/loaded/TypeDescriptor;)Lorg/springsource/loaded/FieldReaderWriter;
+#hasFieldChangedInHierarchy(Ljava/lang/String;)Z
+#getFieldInHierarchy(Ljava/lang/String;)Lorg/springsource/loaded/FieldReaderWriter;
+#clearClassloaderLinks()V
+#reloadMostRecentDispatcherAndExecutor()V
+#trackLiveInstance(Ljava/lang/Object;)V
+#runStaticInitializer()V
+#isResolved()Z
+#setResolved()V
+#setSuperclass(Ljava/lang/Class;)V
+#getSuperRtype()Lorg/springsource/loaded/ReloadableType;
@1.2.0.RELEASE
+#hasStaticInitializer()Z
@1.2.1.RELEASE
+#isAffectedByReload()Z
+#getSlashedSuperinterfacesName()[Ljava/lang/String;
+#getInterfacesRtypes()[Lorg/springsource/loaded/ReloadableType;
+#recordSubtype(Lorg/springsource/loaded/ReloadableType;)V
+#getAssociatedSubtypes()Ljava/util/List;
+#createTypeAssociations()V

+###org/springsource/loaded/SSMgr
@1.1.5.RELEASE
+#<init>()V
+#getValue(Lorg/springsource/loaded/ReloadableType;Ljava/lang/String;)Ljava/lang/Object;
+#setValue(Lorg/springsource/loaded/ReloadableType;Ljava/lang/Object;Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###org/springsource/loaded/SpringLoaded
@1.1.5.RELEASE
+#<init>()V
+#loadNewVersionOfType(Ljava/lang/Class;[B)I
+#loadNewVersionOfType(Ljava/lang/ClassLoader;Ljava/lang/String;[B)I

+###org/springsource/loaded/SystemClassReflectionInvestigator
@1.1.5.RELEASE
+#<init>()V
+#investigate(Ljava/lang/String;[B)I
@1.2.1.RELEASE
+#investigate(Ljava/lang/String;[BZ)I
-#investigate(Ljava/lang/String;[B)I

+###org/springsource/loaded/SystemClassReflectionRewriter$RewriteResult
@1.1.5.RELEASE
+#<init>([BI)V
+#summarize()Ljava/lang/String;

+###org/springsource/loaded/SystemClassReflectionRewriter
@1.1.5.RELEASE
+#<init>()V
+#rewrite(Ljava/lang/String;[B)Lorg/springsource/loaded/SystemClassReflectionRewriter$RewriteResult;

+###org/springsource/loaded/SystemPropertyConfiguredIsReloadableTypePlugin
@1.1.5.RELEASE
+#<init>()V
+#shouldBeMadeReloadable(Lorg/springsource/loaded/TypeRegistry;Ljava/lang/String;Ljava/security/ProtectionDomain;[B)Lorg/springsource/loaded/agent/ReloadDecision;

+###org/springsource/loaded/TypeDelta
@1.1.5.RELEASE
+#<init>()V
+#toString()Ljava/lang/String;
+#hasTypeDeclarationChanged()Z
+#hasTypeNameChanged()Z
+#hasTypeVersionChanged()Z
+#hasTypeAccessChanged()Z
+#hasTypeSupertypeChanged()Z
+#hasTypeInterfacesChanged()Z
+#hasTypeSignatureChanged()Z
+#hasAnythingChanged()Z
+#hasNewFields()Z
+#hasLostFields()Z
+#haveFieldsChangedOrBeenAddedOrRemoved()Z
+#haveFieldsChanged()Z
+#haveMethodsChanged()Z
+#haveMethodsChangedOrBeenAddedOrRemoved()Z
+#haveMethodsBeenAdded()Z
+#haveMethodsBeenDeleted()Z
+#getNewFields()Ljava/util/Map;
+#getLostFields()Ljava/util/Map;
+#getChangedFields()Ljava/util/Map;
+#getChangedMethods()Ljava/util/Map;

+###org/springsource/loaded/TypeDescriptor
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;ILjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ZLorg/springsource/loaded/TypeRegistry;ZLjava/util/List;)V
+#getMethods()[Lorg/springsource/loaded/MethodMember;
+#getConstructors()[Lorg/springsource/loaded/MethodMember;
+#getFields()[Lorg/springsource/loaded/FieldMember;
+#getFieldsRequiringAccessors()[Lorg/springsource/loaded/FieldMember;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getSupertypeName()Ljava/lang/String;
+#getSuperinterfacesName()[Ljava/lang/String;
+#defines(Lorg/springsource/loaded/MethodMember;)Z
+#getByDescriptor(Ljava/lang/String;Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#getByNameAndDescriptor(Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#isReloadable()Z
+#getMethod(I)Lorg/springsource/loaded/MethodMember;
+#getConstructor(I)Lorg/springsource/loaded/MethodMember;
+#isInterface()Z
+#isAnnotation()Z
+#isEnum()Z
+#definesNonPrivate(Ljava/lang/String;)Z
+#isFinalInHierarchy(Ljava/lang/String;)Z
+#getField(Ljava/lang/String;)Lorg/springsource/loaded/FieldMember;
+#getReloadableType()Lorg/springsource/loaded/ReloadableType;
+#getTypeRegistry()Lorg/springsource/loaded/TypeRegistry;
+#getDottedName()Ljava/lang/String;
+#getConstructor(Ljava/lang/String;)Lorg/springsource/loaded/MethodMember;
+#isGroovyType()Z
+#setIsGroovyType(Z)V
+#hasClinit()Z
+#toString()Ljava/lang/String;
+#methodsToString([Lorg/springsource/loaded/MethodMember;)Ljava/lang/String;

+###org/springsource/loaded/TypeDescriptorExtractor
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/TypeRegistry;)V
+#extract([BZ)Lorg/springsource/loaded/TypeDescriptor;

+###org/springsource/loaded/TypeDiffComputer
@1.1.5.RELEASE
+#<init>()V
+#computeDifferences([B[B)Lorg/springsource/loaded/TypeDelta;

+###org/springsource/loaded/TypePattern
@1.1.5.RELEASE
+#<init>()V
+#matches(Ljava/lang/String;)Z

+###org/springsource/loaded/TypeRegistry
@1.1.5.RELEASE
+#reinitialize()V
+#typeRegistryExistsForId(I)Z
+#getTypeRegistryFor(Ljava/lang/ClassLoader;)Lorg/springsource/loaded/TypeRegistry;
+#getDescriptorForReloadableType(Ljava/lang/String;)Lorg/springsource/loaded/TypeDescriptor;
+#getDescriptorFor(Ljava/lang/String;)Lorg/springsource/loaded/TypeDescriptor;
+#getLatestDescriptorFor(Ljava/lang/String;)Lorg/springsource/loaded/TypeDescriptor;
+#ensureConfigured()V
+#configure(Ljava/util/Properties;)V
+#resetConfiguration()V
+#resetAllConfiguration()V
+#getInclusionPatterns()Ljava/util/List;
+#getExclusionPatterns()Ljava/util/List;
+#isReloadableTypeName(Ljava/lang/String;)Z
+#isReloadableTypeName(Ljava/lang/String;Ljava/security/ProtectionDomain;[B)Z
+#getTypeIdFor(Ljava/lang/String;Z)I
+#methodCallRewrite([B)[B
+#methodCallRewriteUseCacheIfAvailable(Ljava/lang/String;[B)[B
+#loadNewVersion(Lorg/springsource/loaded/ReloadableType;Ljava/io/File;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#getId()I
+#addType(Ljava/lang/String;[B)Lorg/springsource/loaded/ReloadableType;
+#getReloadableType(I)Lorg/springsource/loaded/ReloadableType;
+#rememberReloadableType(ILorg/springsource/loaded/ReloadableType;)V
+#getReloadableType(Ljava/lang/String;)Lorg/springsource/loaded/ReloadableType;
+#getReloadableSuperType(Ljava/lang/String;)Lorg/springsource/loaded/ReloadableType;
+#getReloadableType(Ljava/lang/String;Z)Lorg/springsource/loaded/ReloadableType;
+#getExtractor()Lorg/springsource/loaded/TypeDescriptorExtractor;
+#getRebasePaths()Ljava/util/Map;
+#shouldDefineClasses()Z
+#setShouldDefineClasses(Z)V
+#istcheck(ILjava/lang/String;)Ljava/lang/Object;
+#invokespecialSearch(Lorg/springsource/loaded/ReloadableType;Ljava/lang/String;)Ljava/lang/Object;
+#ispcheck(ILjava/lang/String;)Lorg/springsource/loaded/__DynamicallyDispatchable;
+#ccheck(ILjava/lang/String;)Ljava/lang/Object;
+#iincheck(ILjava/lang/String;)Z
+#instanceFieldInterceptionRequired(ILjava/lang/String;)Z
+#staticFieldInterceptionRequired(ILjava/lang/String;)Z
+#ivicheck(ILjava/lang/String;)Z
+#getReloadableType(II)Lorg/springsource/loaded/ReloadableType;
+#toString()Ljava/lang/String;
+#monitorForUpdates(Lorg/springsource/loaded/ReloadableType;Ljava/lang/String;)V
+#shouldRerunStaticInitializer(Lorg/springsource/loaded/ReloadableType;Ljava/lang/String;)Z
+#fireReloadEvent(Lorg/springsource/loaded/ReloadableType;Ljava/lang/String;)V
+#fireUnableToReloadEvent(Lorg/springsource/loaded/ReloadableType;Lorg/springsource/loaded/TypeDelta;Ljava/lang/String;)Z
+#getClass_GroovySystem()Ljava/lang/Class;
+#getClass_ClassInfo()Ljava/lang/Class;
+#getMethod_ClassInfo_getClassInfo()Ljava/lang/reflect/Method;
+#getField_ClassInfo_cachedClassRef()Ljava/lang/reflect/Field;
+#checkChildClassLoader(Lorg/springsource/loaded/ReloadableType;)V
+#getChildClassLoader()Lorg/springsource/loaded/ChildClassLoader;
+#isResolved(Ljava/lang/Class;)Z
+#getReloadableType(Ljava/lang/Class;)Lorg/springsource/loaded/ReloadableType;
+#getParentRegistry()Lorg/springsource/loaded/TypeRegistry;
+#getReloadableTypes()[Lorg/springsource/loaded/ReloadableType;
+#getJDKProxiesFor(Ljava/lang/String;)Ljava/util/Set;
@1.2.0.RELEASE
+#idycheck()Ljava/lang/Object;
+#iiIntercept(Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#idyrun([Ljava/lang/Object;IILjava/lang/Object;Ljava/lang/String;I)Ljava/lang/Object;
+#recordBootstrapMethod(Ljava/lang/String;Lsl/org/objectweb/asm/Handle;[Ljava/lang/Object;)I
@1.2.1.RELEASE
+#associateReloadableType(Lorg/springsource/loaded/ReloadableType;Ljava/lang/Class;)V
@1.2.4.RELEASE
+#couldBeReloadable(Ljava/lang/String;Z)Lorg/springsource/loaded/TypeRegistry$CouldBeReloadableDecision;
+#isReloadableTypeName(Ljava/lang/String;Ljava/security/ProtectionDomain;[B)Lorg/springsource/loaded/TypeRegistry$ReloadableTypeNameDecision;
+#loadNewVersion(Lorg/springsource/loaded/ReloadableType;JLjava/io/InputStream;)V
-#isReloadableTypeName(Ljava/lang/String;Ljava/security/ProtectionDomain;[B)Z

+###org/springsource/loaded/TypeRewriter
@1.1.5.RELEASE
+#<init>()V
+#rewrite(Lorg/springsource/loaded/ReloadableType;[B)[B

+###org/springsource/loaded/UnableToLoadClassException
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springsource/loaded/UnableToReloadEventProcessorPlugin
@1.1.5.RELEASE
+#unableToReloadEvent(Ljava/lang/String;Ljava/lang/Class;Lorg/springsource/loaded/TypeDelta;Ljava/lang/String;)V

+###org/springsource/loaded/Utils$ReturnType$Kind
@1.1.5.RELEASE
+#values()[Lorg/springsource/loaded/Utils$ReturnType$Kind;
+#valueOf(Ljava/lang/String;)Lorg/springsource/loaded/Utils$ReturnType$Kind;

+###org/springsource/loaded/Utils$ReturnType
@1.1.5.RELEASE
+#getReturnType(Ljava/lang/String;Lorg/springsource/loaded/Utils$ReturnType$Kind;)Lorg/springsource/loaded/Utils$ReturnType;
+#isVoid()Z
+#isPrimitive()Z
+#isDoubleSlot()Z
+#getReturnType(Ljava/lang/String;)Lorg/springsource/loaded/Utils$ReturnType;

+###org/springsource/loaded/Utils
@1.1.5.RELEASE
+#<init>()V
+#encode(J)Ljava/lang/String;
+#decode(Ljava/lang/String;)J
+#addCorrectReturnInstruction(Lsl/org/objectweb/asm/MethodVisitor;Lorg/springsource/loaded/Utils$ReturnType;Z)V
+#getParameterCount(Ljava/lang/String;)I
+#createLoadsBasedOnDescriptor(Lsl/org/objectweb/asm/MethodVisitor;Ljava/lang/String;I)V
+#insertUnboxInsnsIfNecessary(Lsl/org/objectweb/asm/MethodVisitor;Ljava/lang/String;Z)V
+#insertUnboxInsns(Lsl/org/objectweb/asm/MethodVisitor;CZ)V
+#getParamSequence(Ljava/lang/String;)Ljava/lang/String;
+#insertBoxInsns(Lsl/org/objectweb/asm/MethodVisitor;Ljava/lang/String;)V
+#insertBoxInsns(Lsl/org/objectweb/asm/MethodVisitor;C)V
+#getInterfaceName(Ljava/lang/String;)Ljava/lang/String;
+#assertSlashed(Ljava/lang/String;)V
+#assertDotted(Ljava/lang/String;)V
+#toOpcodeString(I)Ljava/lang/String;
+#toParamDescriptor([Ljava/lang/Class;)Ljava/lang/String;
+#toParamClasses(Ljava/lang/String;Ljava/lang/ClassLoader;)[Ljava/lang/Class;
+#toClass(Lsl/org/objectweb/asm/Type;Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#toMethodDescriptor(Ljava/lang/reflect/Method;Z)Ljava/lang/String;
+#appendDescriptor(Ljava/lang/Class;Ljava/lang/StringBuilder;)V
+#toPaddedNumber(II)Ljava/lang/String;
+#toMethodDescriptor(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#loadDottedClassAsBytes(Ljava/lang/ClassLoader;Ljava/lang/String;)[B
+#loadSlashedClassAsBytes(Ljava/lang/ClassLoader;Ljava/lang/String;)[B
+#load(Ljava/io/File;)[B
+#write(Ljava/io/File;[B)V
+#loadBytesFromStream(Ljava/io/InputStream;)[B
+#assertTrue(ZLjava/lang/String;)V
+#getDispatcherName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getExecutorName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#stripFirstParameter(Ljava/lang/String;)Ljava/lang/String;
+#getReturnTypeDescriptor(Ljava/lang/String;)Lorg/springsource/loaded/Utils$ReturnType;
+#insertExtraParameter(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#generateInstructionsToUnpackArrayAccordingToDescriptor(Lsl/org/objectweb/asm/MethodVisitor;Ljava/lang/String;I)V
+#isInitializer(Ljava/lang/String;)Z
+#toCombined(II)I
+#logAndThrow(Ljava/util/logging/Logger;Ljava/lang/String;)V
+#dump(Ljava/lang/String;[B)Ljava/lang/String;
+#sizeOf(Ljava/lang/String;)I
+#dumpClass(Ljava/lang/String;[B)V
+#toSuperAccessor(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getSize(Ljava/lang/String;)I
+#slashedNamesToClasses([Ljava/lang/String;Ljava/lang/ClassLoader;)[Ljava/lang/Class;
+#slashedNameToClass(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#fieldNodeFormat(Lsl/org/objectweb/asm/tree/FieldNode;)Ljava/lang/String;
+#annotationNodeFormat(Lsl/org/objectweb/asm/tree/AnnotationNode;)Ljava/lang/String;
+#formatAnnotationNodeNameValuePairValue(Ljava/lang/Object;Ljava/lang/StringBuilder;)V
+#fieldNodeFormat(Ljava/util/Collection;)Ljava/lang/String;
+#loadFromStream(Ljava/io/InputStream;)[B
+#promoteDefaultOrProtectedToPublic(I)I
+#promoteDefaultOrProtectedToPublic(IZ)I
+#promoteDefaultOrPrivateOrProtectedToPublic(I)I
+#arrayCopyOf([Ljava/lang/Object;I)[Ljava/lang/Object;
+#makePublicNonFinal(I)I
+#toClass(Lorg/springsource/loaded/ReloadableType;)Ljava/lang/Class;
+#isObjectIsUnboxableTo(Ljava/lang/Class;C)Z
+#toResultCheckIfNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#checkCompatibility(Lorg/springsource/loaded/TypeRegistry;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#isAssignableFrom(Lorg/springsource/loaded/TypeRegistry;Ljava/lang/Class;Ljava/lang/String;)Z
+#isAssignableFrom(Ljava/lang/String;Lorg/springsource/loaded/TypeDescriptor;)Z
+#collapseStackToArray(Lsl/org/objectweb/asm/MethodVisitor;Ljava/lang/String;)I
+#insertPopsForAllParameters(Lsl/org/objectweb/asm/MethodVisitor;Ljava/lang/String;)I
+#toConstructorDescriptor([Ljava/lang/Class;)Ljava/lang/String;
+#isConvertableFrom(Ljava/lang/Class;Ljava/lang/Class;)Z
+#discoverInterfaces([B)[Ljava/lang/String;
+#getProtectedFieldGetterName(Ljava/lang/String;)Ljava/lang/String;
+#getProtectedFieldSetterName(Ljava/lang/String;)Ljava/lang/String;
@1.2.0.RELEASE
+#promoteDefaultOrProtectedToPublic(IZLjava/lang/String;)I
-#promoteDefaultOrProtectedToPublic(IZ)I
@1.2.6.RELEASE
+#discoverClassname([B)Ljava/lang/String;
@1.2.7.RELEASE
+#generateProxyClass(Ljava/lang/String;[Ljava/lang/Class;)[B

+###org/springsource/loaded/__DynamicallyDispatchable
@1.1.5.RELEASE
+#__execute([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

+###org/springsource/loaded/agent/CglibPlugin
@1.1.5.RELEASE
+#<init>()V
+#accept(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;[B)Z
+#modify(Ljava/lang/String;Ljava/lang/ClassLoader;[B)[B

+###org/springsource/loaded/agent/CglibPluginCapturing
@1.1.5.RELEASE
+#catchGenerate([B)[B
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#getBytes()[B
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;
+#record(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/springsource/loaded/agent/ClassPreProcessorAgentAdapter
@1.1.5.RELEASE
+#<init>()V
+#transform(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B
+#reload(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)V

+###org/springsource/loaded/agent/ClassVisitingConstructorAppender
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getBytes()[B
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;

+###org/springsource/loaded/agent/FalseReturner
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;)V
+#getBytes()[B
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;
+#m()Z

+###org/springsource/loaded/agent/FileSystemWatcher
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/FileChangeListener;ILjava/lang/String;)V
+#shutdown()V
+#register(Ljava/io/File;)V
+#setPaused(Z)V

+###org/springsource/loaded/agent/GrailsPlugin
@1.1.5.RELEASE
+#<init>()V
+#accept(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;[B)Z
+#modify(Ljava/lang/String;Ljava/lang/ClassLoader;[B)[B
+#recordInstance(Ljava/lang/Object;)V
+#reloadEvent(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V
+#shouldRerunStaticInitializer(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)Z

+###org/springsource/loaded/agent/GroovyPlugin
@1.1.5.RELEASE
+#<init>()V
+#accept(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;[B)Z
+#modify(Ljava/lang/String;Ljava/lang/ClassLoader;[B)[B
+#recordInstance(Ljava/lang/Object;)V
+#reloadEvent(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V
+#shouldRerunStaticInitializer(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)Z

+###org/springsource/loaded/agent/Impossible
@1.1.5.RELEASE
+#<init>(Ljava/lang/Exception;)V

+###org/springsource/loaded/agent/JVMPlugin
@1.1.5.RELEASE
+#<init>()V
+#reloadEvent(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V
+#accept(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;[B)Z
+#modify(Ljava/lang/String;Ljava/lang/ClassLoader;[B)[B
+#shouldRerunStaticInitializer(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)Z

+###org/springsource/loaded/agent/ModifyDefineInClassLoaderForClassArtifactsType
@1.1.5.RELEASE
+#<init>()V
+#getBytes()[B
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;
+#modify(Ljava/lang/ClassLoader;Ljava/lang/String;[B)[B

+###org/springsource/loaded/agent/NonFinalizer
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;)V
+#getBytes()[B
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lsl/org/objectweb/asm/FieldVisitor;

+###org/springsource/loaded/agent/PluginUtils
@1.1.5.RELEASE
+#<init>()V
+#addInstanceTracking([BLjava/lang/String;)[B

+###org/springsource/loaded/agent/ReloadDecision
@1.1.5.RELEASE
+#values()[Lorg/springsource/loaded/agent/ReloadDecision;
+#valueOf(Ljava/lang/String;)Lorg/springsource/loaded/agent/ReloadDecision;

+###org/springsource/loaded/agent/ReloadableFileChangeListener
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/TypeRegistry;)V
+#fileChanged(Ljava/io/File;)V
+#register(Lorg/springsource/loaded/ReloadableType;Ljava/io/File;)V

+###org/springsource/loaded/agent/SpringLoadedAgent
@1.1.5.RELEASE
+#<init>()V
+#premain(Ljava/lang/String;Ljava/lang/instrument/Instrumentation;)V
+#agentmain(Ljava/lang/String;Ljava/lang/instrument/Instrumentation;)V
+#getInstrumentation()Ljava/lang/instrument/Instrumentation;

+###org/springsource/loaded/agent/SpringLoadedPreProcessor
@1.1.5.RELEASE
+#<init>()V
+#initialize()V
+#preProcess(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/security/ProtectionDomain;[B)[B
+#getGlobalPlugins()Ljava/util/List;
+#getIsReloadableTypePlugins()Ljava/util/List;
+#registerGlobalPlugin(Lorg/springsource/loaded/Plugin;)V
+#unregisterGlobalPlugin(Lorg/springsource/loaded/Plugin;)V

+###org/springsource/loaded/agent/SpringPlugin
@1.1.5.RELEASE
+#<init>()V
+#accept(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;[B)Z
+#modify(Ljava/lang/String;Ljava/lang/ClassLoader;[B)[B
+#recordAnnotationMethodHandlerAdapterInstance(Ljava/lang/Object;)V
+#recordRequestMappingHandlerMappingInstance(Ljava/lang/Object;)V
+#recordDefaultAnnotationHandlerMappingInstance(Ljava/lang/Object;)V
+#reloadEvent(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V
+#shouldRerunStaticInitializer(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)Z
@1.2.1.RELEASE
+#recordLocalVariableTableParameterNameDiscoverer(Ljava/lang/Object;)V

+###org/springsource/loaded/infra/SLFormatter
@1.1.5.RELEASE
+#<init>()V
+#format(Ljava/util/logging/LogRecord;)Ljava/lang/String;

+###org/springsource/loaded/infra/UsedByGeneratedCode
@1.1.5.RELEASE

+###org/springsource/loaded/jvm/JVM
@1.1.5.RELEASE
+#<init>()V
+#ensureMemberAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;I)V
+#newMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;ILjava/lang/String;)Ljava/lang/reflect/Method;
+#copyMethod(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
+#copyField(Ljava/lang/reflect/Field;)Ljava/lang/reflect/Field;
+#copyConstructor(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;
+#setMethodModifiers(Ljava/lang/reflect/Method;I)V
+#setConstructorModifiers(Ljava/lang/reflect/Constructor;I)V
+#setFieldModifiers(Ljava/lang/reflect/Field;I)V
+#newField(Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/String;Ljava/lang/String;)Ljava/lang/reflect/Field;
+#newConstructor(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Class;ILjava/lang/String;)Ljava/lang/reflect/Constructor;

+###org/springsource/loaded/pluginhelpers/EmptyCtor
@1.1.5.RELEASE
+#invoke([B[Ljava/lang/String;)[B
+#getBytes()[B
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;

+###org/springsource/loaded/ri/DynamicLookup
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#lookup(Lorg/springsource/loaded/ri/MethodProvider;)Lorg/springsource/loaded/ri/Invoker;

+###org/springsource/loaded/ri/Exceptions
@1.1.5.RELEASE
+#<init>()V
+#noSuchFieldError(Ljava/lang/reflect/Field;)Ljava/lang/NoSuchFieldError;
+#noSuchMethodError(Ljava/lang/reflect/Method;)Ljava/lang/NoSuchMethodError;
+#noSuchMethodError(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/NoSuchMethodError;
+#illegalGetFieldType(Ljava/lang/reflect/Field;Ljava/lang/Class;)Ljava/lang/IllegalArgumentException;
+#noSuchConstructorException(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/NoSuchMethodException;
+#noSuchConstructorError(Ljava/lang/reflect/Constructor;)Ljava/lang/NoSuchMethodError;
+#instantiation(Ljava/lang/Class;)Ljava/lang/InstantiationException;

+###org/springsource/loaded/ri/FieldLookup$FieldProvider
@1.1.5.RELEASE
+#isInterface()Z
+#getInterfaces()[Lorg/springsource/loaded/ri/FieldLookup$FieldProvider;
+#getSuper()Lorg/springsource/loaded/ri/FieldLookup$FieldProvider;
+#create(Lorg/springsource/loaded/ReloadableType;)Lorg/springsource/loaded/ri/FieldLookup$FieldProvider;
+#create(Lorg/springsource/loaded/TypeRegistry;Ljava/lang/String;)Lorg/springsource/loaded/ri/FieldLookup$FieldProvider;
+#create(Ljava/lang/Class;)Lorg/springsource/loaded/ri/FieldLookup$FieldProvider;

+###org/springsource/loaded/ri/FieldLookup$ReloadableTypeFieldProvider
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/ReloadableType;)V
+#isInterface()Z
+#getInterfaces()[Lorg/springsource/loaded/ri/FieldLookup$FieldProvider;
+#getSuper()Lorg/springsource/loaded/ri/FieldLookup$FieldProvider;

+###org/springsource/loaded/ri/FieldLookup$ReloadedTypeFieldRef
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/ReloadableType;Lorg/springsource/loaded/FieldMember;)V
+#getField()Ljava/lang/reflect/Field;
+#getName()Ljava/lang/String;
+#isPublic()Z

+###org/springsource/loaded/ri/FieldLookup
@1.1.5.RELEASE
+#<init>()V

+###org/springsource/loaded/ri/GetDeclaredFieldLookup
@1.1.5.RELEASE
+#<init>()V
+#lookup(Lorg/springsource/loaded/ReloadableType;Ljava/lang/String;)Ljava/lang/reflect/Field;

+###org/springsource/loaded/ri/GetDeclaredMethodLookup
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#lookup(Lorg/springsource/loaded/ri/MethodProvider;)Lorg/springsource/loaded/ri/Invoker;
+#toString()Ljava/lang/String;

+###org/springsource/loaded/ri/GetFieldLookup
@1.1.5.RELEASE
+#<init>()V
+#lookup(Lorg/springsource/loaded/ReloadableType;Ljava/lang/String;)Ljava/lang/reflect/Field;

+###org/springsource/loaded/ri/GetMethodLookup
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[Ljava/lang/Class;)V
+#lookup(Lorg/springsource/loaded/ri/MethodProvider;)Lorg/springsource/loaded/ri/Invoker;

+###org/springsource/loaded/ri/GetMethodsLookup
@1.1.5.RELEASE
+#<init>()V
+#lookup(Lorg/springsource/loaded/ri/MethodProvider;)Ljava/util/Collection;

+###org/springsource/loaded/ri/Invoker
@1.1.5.RELEASE
+#<init>()V
+#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getMethodDescriptor()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getClassName()Ljava/lang/String;
+#getParamsDescriptor()Ljava/lang/String;
+#getReturnType()Ljava/lang/Class;
+#getJavaMethod()Ljava/lang/reflect/Method;

+###org/springsource/loaded/ri/JavaClassMethodProvider
@1.1.5.RELEASE
+#<init>(Ljava/lang/Class;)V
+#getDeclaredMethods()Ljava/util/List;
+#getSuper()Lorg/springsource/loaded/ri/MethodProvider;
+#getInterfaces()[Lorg/springsource/loaded/ri/MethodProvider;
+#getSlashedName()Ljava/lang/String;
+#getDottedName()Ljava/lang/String;
+#isInterface()Z

+###org/springsource/loaded/ri/JavaMethodCache$Initializer
@1.1.5.RELEASE
+#<init>()V

+###org/springsource/loaded/ri/JavaMethodCache
@1.1.5.RELEASE
+#<init>()V
+#isInitialized()Z
+#initialize(Lorg/springsource/loaded/ri/JavaMethodCache$Initializer;)V
+#get(Lorg/springsource/loaded/MethodMember;)Ljava/lang/reflect/Method;

+###org/springsource/loaded/ri/JavaMethodInvoker
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/ri/JavaClassMethodProvider;Ljava/lang/reflect/Method;)V
+#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#createJavaMethod()Ljava/lang/reflect/Method;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getMethodDescriptor()Ljava/lang/String;
+#getClassName()Ljava/lang/String;

+###org/springsource/loaded/ri/MethodProvider
@1.1.5.RELEASE
+#<init>()V
+#create(Lorg/springsource/loaded/ReloadableType;)Lorg/springsource/loaded/ri/MethodProvider;
+#create(Lorg/springsource/loaded/TypeRegistry;Lorg/springsource/loaded/TypeDescriptor;)Lorg/springsource/loaded/ri/MethodProvider;
+#create(Ljava/lang/Class;)Lorg/springsource/loaded/ri/MethodProvider;
+#getDeclaredMethods()Ljava/util/List;
+#getSuper()Lorg/springsource/loaded/ri/MethodProvider;
+#getInterfaces()[Lorg/springsource/loaded/ri/MethodProvider;
+#isInterface()Z
+#getSlashedName()Ljava/lang/String;
+#getDottedName()Ljava/lang/String;
+#dynamicLookup(ILjava/lang/String;Ljava/lang/String;)Lorg/springsource/loaded/ri/Invoker;
+#staticLookup(ILjava/lang/String;Ljava/lang/String;)Lorg/springsource/loaded/ri/Invoker;
+#getMethod(Ljava/lang/String;[Ljava/lang/Class;)Lorg/springsource/loaded/ri/Invoker;
+#getDeclaredMethod(Ljava/lang/String;Ljava/lang/String;)Lorg/springsource/loaded/ri/Invoker;
+#getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Lorg/springsource/loaded/ri/Invoker;
+#getMethods()Ljava/util/Collection;
+#toString()Ljava/lang/String;

+###org/springsource/loaded/ri/OriginalClassInvoker
@1.1.5.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springsource/loaded/MethodMember;Lorg/springsource/loaded/ri/JavaMethodCache;)V
+#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#createJavaMethod()Ljava/lang/reflect/Method;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getMethodDescriptor()Ljava/lang/String;
+#getClassName()Ljava/lang/String;

+###org/springsource/loaded/ri/ReflectiveInterceptor
@1.1.5.RELEASE
+#<init>()V
+#jlClassGetDeclaredMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#jlClassGetMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#jlClassGetDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;
+#jlClassGetMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;
+#getCallerClass()Ljava/lang/Class;
+#jlClassGetDeclaredAnnotations(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;
+#jlClassGetAnnotations(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;
+#jlClassGetAnnotation(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#jlClassIsAnnotationPresent(Ljava/lang/Class;Ljava/lang/Class;)Z
+#jlClassGetDeclaredConstructors(Ljava/lang/Class;)[Ljava/lang/reflect/Constructor;
+#jlClassGetConstructors(Ljava/lang/Class;)[Ljava/lang/reflect/Constructor;
+#jlClassGetDeclaredConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
+#jlClassGetConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
+#jlClassGetModifiers(Ljava/lang/Class;)I
+#getRType(Ljava/lang/Class;)Lorg/springsource/loaded/ReloadableType;
+#jlrMethodGetDeclaredAnnotations(Ljava/lang/reflect/Method;)[Ljava/lang/annotation/Annotation;
+#jlrMethodGetParameterAnnotations(Ljava/lang/reflect/Method;)[[Ljava/lang/annotation/Annotation;
+#jlClassNewInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#jlrConstructorNewInstance(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#jlrMethodInvoke(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#jlrMethodIsAnnotationPresent(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z
+#jlrMethodGetAnnotation(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#jlrAnnotatedElementGetAnnotations(Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/annotation/Annotation;
+#jlrAnnotatedElementGetDeclaredAnnotations(Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/annotation/Annotation;
+#jlrAccessibleObjectGetDeclaredAnnotations(Ljava/lang/reflect/AccessibleObject;)[Ljava/lang/annotation/Annotation;
+#jlrFieldGetDeclaredAnnotations(Ljava/lang/reflect/Field;)[Ljava/lang/annotation/Annotation;
+#jlrFieldIsAnnotationPresent(Ljava/lang/reflect/Field;Ljava/lang/Class;)Z
+#jlrFieldGetAnnotations(Ljava/lang/reflect/Field;)[Ljava/lang/annotation/Annotation;
+#jlrAccessibleObjectGetAnnotations(Ljava/lang/reflect/AccessibleObject;)[Ljava/lang/annotation/Annotation;
+#jlrConstructorGetAnnotations(Ljava/lang/reflect/Constructor;)[Ljava/lang/annotation/Annotation;
+#jlrConstructorGetDeclaredAnnotations(Ljava/lang/reflect/Constructor;)[Ljava/lang/annotation/Annotation;
+#jlrConstructorGetAnnotation(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#jlrConstructorGetParameterAnnotations(Ljava/lang/reflect/Constructor;)[[Ljava/lang/annotation/Annotation;
+#jlrConstructorIsAnnotationPresent(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)Z
+#jlrFieldGetAnnotation(Ljava/lang/reflect/Field;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#jlrMethodGetAnnotations(Ljava/lang/reflect/Method;)[Ljava/lang/annotation/Annotation;
+#jlrAnnotatedElementIsAnnotationPresent(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z
+#jlrAccessibleObjectIsAnnotationPresent(Ljava/lang/reflect/AccessibleObject;Ljava/lang/Class;)Z
+#jlrAnnotatedElementGetAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#jlrAccessibleObjectGetAnnotation(Ljava/lang/reflect/AccessibleObject;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#jlClassGetField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
+#jlClassGetDeclaredField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
+#jlClassGetDeclaredFields(Ljava/lang/Class;)[Ljava/lang/reflect/Field;
+#jlClassGetFields(Ljava/lang/Class;)[Ljava/lang/reflect/Field;
+#jlrFieldGet(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
+#jlrFieldGetInt(Ljava/lang/reflect/Field;Ljava/lang/Object;)I
+#jlrFieldGetByte(Ljava/lang/reflect/Field;Ljava/lang/Object;)B
+#jlrFieldGetChar(Ljava/lang/reflect/Field;Ljava/lang/Object;)C
+#jlrFieldGetShort(Ljava/lang/reflect/Field;Ljava/lang/Object;)S
+#jlrFieldGetDouble(Ljava/lang/reflect/Field;Ljava/lang/Object;)D
+#jlrFieldGetFloat(Ljava/lang/reflect/Field;Ljava/lang/Object;)F
+#jlrFieldGetBoolean(Ljava/lang/reflect/Field;Ljava/lang/Object;)Z
+#jlrFieldGetLong(Ljava/lang/reflect/Field;Ljava/lang/Object;)J
+#jlrFieldSet(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
+#jlrFieldSetInt(Ljava/lang/reflect/Field;Ljava/lang/Object;I)V
+#jlrFieldSetByte(Ljava/lang/reflect/Field;Ljava/lang/Object;B)V
+#jlrFieldSetChar(Ljava/lang/reflect/Field;Ljava/lang/Object;C)V
+#jlrFieldSetShort(Ljava/lang/reflect/Field;Ljava/lang/Object;S)V
+#jlrFieldSetDouble(Ljava/lang/reflect/Field;Ljava/lang/Object;D)V
+#jlrFieldSetFloat(Ljava/lang/reflect/Field;Ljava/lang/Object;F)V
+#jlrFieldSetLong(Ljava/lang/reflect/Field;Ljava/lang/Object;J)V
+#jlrFieldSetBoolean(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)V
@1.2.0.RELEASE
+#jlosHasStaticInitializer(Ljava/lang/Class;)Z

+###org/springsource/loaded/ri/ReloadableTypeMethodProvider
@1.1.5.RELEASE
+#<init>(Lorg/springsource/loaded/ReloadableType;)V
+#getTypeDescriptor()Lorg/springsource/loaded/TypeDescriptor;
+#getRType()Lorg/springsource/loaded/ReloadableType;
+#getDeclaredMethods()Ljava/util/List;
+#getMethods()Ljava/util/Collection;
+#getMethod(Ljava/lang/String;[Ljava/lang/Class;)Lorg/springsource/loaded/ri/Invoker;
+#getDeclaredMethod(Ljava/lang/String;Ljava/lang/String;)Lorg/springsource/loaded/ri/Invoker;

+###org/springsource/loaded/ri/ReloadedTypeInvoker
@1.1.5.RELEASE
+#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#createJavaMethod()Ljava/lang/reflect/Method;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getMethodDescriptor()Ljava/lang/String;
+#getClassName()Ljava/lang/String;
+#create(Lorg/springsource/loaded/ri/ReloadableTypeMethodProvider;Lorg/springsource/loaded/MethodMember;)Lorg/springsource/loaded/ri/Invoker;

+###org/springsource/loaded/ri/StaticLookup
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#lookup(Lorg/springsource/loaded/ri/MethodProvider;)Lorg/springsource/loaded/ri/Invoker;

+###org/springsource/loaded/ri/TypeDescriptorMethodProvider
@1.1.5.RELEASE
+#<init>()V
+#getDeclaredMethods()Ljava/util/List;
+#getSuper()Lorg/springsource/loaded/ri/MethodProvider;
+#getSlashedName()Ljava/lang/String;
+#getInterfaces()[Lorg/springsource/loaded/ri/MethodProvider;
+#isInterface()Z

+###org/springsource/loaded/support/Java8
@1.2.0.RELEASE
+#<init>()V
+#emulateInvokeDynamic(Ljava/lang/Class;Lsl/org/objectweb/asm/Handle;[Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#callLambdaMetaFactory([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/CallSite;
+#enhanceInnerClassLambdaMetaFactory([B)[B
@1.2.3.RELEASE
+#emulateInvokeDynamic(Lorg/springsource/loaded/ReloadableType;Ljava/lang/Class;Lsl/org/objectweb/asm/Handle;[Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#callLambdaMetaFactory(Lorg/springsource/loaded/ReloadableType;[Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/CallSite;
-#emulateInvokeDynamic(Ljava/lang/Class;Lsl/org/objectweb/asm/Handle;[Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
-#callLambdaMetaFactory([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/invoke/CallSite;

+###org/springsource/loaded/test/infra/ClassPrinter
@1.1.5.RELEASE
+#main([Ljava/lang/String;)V
+#<init>(Ljava/io/PrintStream;)V
+#<init>(Ljava/io/PrintStream;Z)V
+#print(Ljava/lang/String;[B)V
+#print([B)V
+#print([BZ)V
+#print(Ljava/io/PrintStream;[BZ)V
+#print(Ljava/lang/String;[BZ)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#toAccessForMember(I)Ljava/lang/String;
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitEnd()V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lsl/org/objectweb/asm/FieldVisitor;
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
@1.2.1.RELEASE
+#<init>(Ljava/io/PrintStream;I)V
+#print([BI)V
-#<init>(Ljava/io/PrintStream;Z)V

+###org/springsource/loaded/test/infra/MethodPrinter
@1.1.5.RELEASE
+#<init>(Ljava/io/PrintStream;)V
+#visitCode()V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotationDefault()Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitEnd()V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitJumpInsn(ILsl/org/objectweb/asm/Label;)V
+#visitLabel(Lsl/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitLineNumber(ILsl/org/objectweb/asm/Label;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;I)V
+#visitLookupSwitchInsn(Lsl/org/objectweb/asm/Label;[I[Lsl/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitParameterAnnotation(ILjava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitTableSwitchInsn(IILsl/org/objectweb/asm/Label;[Lsl/org/objectweb/asm/Label;)V
+#visitTryCatchBlock(Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitVarInsn(II)V
@1.2.0.RELEASE
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lsl/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
@1.2.1.RELEASE
+#<init>(Ljava/io/PrintStream;I)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
-#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###sl/org/objectweb/asm/AnnotationVisitor
@1.1.5.RELEASE
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.2.0.RELEASE
+#<init>(I)V
+#<init>(ILsl/org/objectweb/asm/AnnotationVisitor;)V

+###sl/org/objectweb/asm/Attribute
@1.1.5.RELEASE
+#isUnknown()Z
+#isCodeAttribute()Z

+###sl/org/objectweb/asm/ByteVector
@1.1.5.RELEASE
+#<init>()V
+#<init>(I)V
+#putByte(I)Lsl/org/objectweb/asm/ByteVector;
+#putShort(I)Lsl/org/objectweb/asm/ByteVector;
+#putInt(I)Lsl/org/objectweb/asm/ByteVector;
+#putLong(J)Lsl/org/objectweb/asm/ByteVector;
+#putUTF8(Ljava/lang/String;)Lsl/org/objectweb/asm/ByteVector;
+#putByteArray([BII)Lsl/org/objectweb/asm/ByteVector;

+###sl/org/objectweb/asm/ClassReader
@1.1.5.RELEASE
+#<init>([B)V
+#<init>([BII)V
+#getAccess()I
+#getClassName()Ljava/lang/String;
+#getSuperName()Ljava/lang/String;
+#getInterfaces()[Ljava/lang/String;
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/lang/String;)V
+#accept(Lsl/org/objectweb/asm/ClassVisitor;I)V
+#accept(Lsl/org/objectweb/asm/ClassVisitor;[Lsl/org/objectweb/asm/Attribute;I)V
+#getItem(I)I
+#readByte(I)I
+#readUnsignedShort(I)I
+#readShort(I)S
+#readInt(I)I
+#readLong(I)J
+#readUTF8(I[C)Ljava/lang/String;
+#readClass(I[C)Ljava/lang/String;
+#readConst(I[C)Ljava/lang/Object;
@1.2.0.RELEASE
+#getItemCount()I
+#getMaxStringLength()I

+###sl/org/objectweb/asm/ClassVisitor
@1.1.5.RELEASE
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lsl/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
@1.2.0.RELEASE
+#<init>(I)V
+#<init>(ILsl/org/objectweb/asm/ClassVisitor;)V
+#visitTypeAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;

+###sl/org/objectweb/asm/ClassWriter
@1.1.5.RELEASE
+#<init>(I)V
+#<init>(Lsl/org/objectweb/asm/ClassReader;I)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lsl/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
+#toByteArray()[B
+#newConst(Ljava/lang/Object;)I
+#newUTF8(Ljava/lang/String;)I
+#newClass(Ljava/lang/String;)I
+#newField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#newMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I
+#newNameType(Ljava/lang/String;Ljava/lang/String;)I
@1.2.0.RELEASE
+#visitTypeAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#newMethodType(Ljava/lang/String;)I
+#newHandle(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#newInvokeDynamic(Ljava/lang/String;Ljava/lang/String;Lsl/org/objectweb/asm/Handle;[Ljava/lang/Object;)I

+###sl/org/objectweb/asm/FieldVisitor
@1.1.5.RELEASE
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitEnd()V
@1.2.0.RELEASE
+#<init>(I)V
+#<init>(ILsl/org/objectweb/asm/FieldVisitor;)V
+#visitTypeAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;

+###sl/org/objectweb/asm/Handle
@1.2.0.RELEASE
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getTag()I
+#getOwner()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getDesc()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###sl/org/objectweb/asm/Label
@1.1.5.RELEASE
+#<init>()V
+#getOffset()I
+#toString()Ljava/lang/String;

+###sl/org/objectweb/asm/MethodVisitor
@1.1.5.RELEASE
+#visitAnnotationDefault()Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILsl/org/objectweb/asm/Label;)V
+#visitLabel(Lsl/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILsl/org/objectweb/asm/Label;[Lsl/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lsl/org/objectweb/asm/Label;[I[Lsl/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;I)V
+#visitLineNumber(ILsl/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@1.2.0.RELEASE
+#<init>(I)V
+#<init>(ILsl/org/objectweb/asm/MethodVisitor;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitTypeAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lsl/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitInsnAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariableAnnotation(ILsl/org/objectweb/asm/TypePath;[Lsl/org/objectweb/asm/Label;[Lsl/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
@1.2.1.RELEASE
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V

+###sl/org/objectweb/asm/Opcodes
@1.1.5.RELEASE

+###sl/org/objectweb/asm/Type
@1.1.5.RELEASE
+#getType(Ljava/lang/String;)Lsl/org/objectweb/asm/Type;
+#getObjectType(Ljava/lang/String;)Lsl/org/objectweb/asm/Type;
+#getType(Ljava/lang/Class;)Lsl/org/objectweb/asm/Type;
+#getArgumentTypes(Ljava/lang/String;)[Lsl/org/objectweb/asm/Type;
+#getArgumentTypes(Ljava/lang/reflect/Method;)[Lsl/org/objectweb/asm/Type;
+#getReturnType(Ljava/lang/String;)Lsl/org/objectweb/asm/Type;
+#getReturnType(Ljava/lang/reflect/Method;)Lsl/org/objectweb/asm/Type;
+#getArgumentsAndReturnSizes(Ljava/lang/String;)I
+#getSort()I
+#getDimensions()I
+#getElementType()Lsl/org/objectweb/asm/Type;
+#getClassName()Ljava/lang/String;
+#getInternalName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getMethodDescriptor(Lsl/org/objectweb/asm/Type;[Lsl/org/objectweb/asm/Type;)Ljava/lang/String;
+#getInternalName(Ljava/lang/Class;)Ljava/lang/String;
+#getDescriptor(Ljava/lang/Class;)Ljava/lang/String;
+#getConstructorDescriptor(Ljava/lang/reflect/Constructor;)Ljava/lang/String;
+#getMethodDescriptor(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getSize()I
+#getOpcode(I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.2.0.RELEASE
+#getMethodType(Ljava/lang/String;)Lsl/org/objectweb/asm/Type;
+#getMethodType(Lsl/org/objectweb/asm/Type;[Lsl/org/objectweb/asm/Type;)Lsl/org/objectweb/asm/Type;
+#getType(Ljava/lang/reflect/Constructor;)Lsl/org/objectweb/asm/Type;
+#getType(Ljava/lang/reflect/Method;)Lsl/org/objectweb/asm/Type;
+#getArgumentTypes()[Lsl/org/objectweb/asm/Type;
+#getReturnType()Lsl/org/objectweb/asm/Type;
+#getArgumentsAndReturnSizes()I

+###sl/org/objectweb/asm/TypePath
@1.2.0.RELEASE
+#getLength()I
+#getStep(I)I
+#getStepArgument(I)I
+#fromString(Ljava/lang/String;)Lsl/org/objectweb/asm/TypePath;
+#toString()Ljava/lang/String;

+###sl/org/objectweb/asm/TypeReference
@1.2.0.RELEASE
+#<init>(I)V
+#newTypeReference(I)Lsl/org/objectweb/asm/TypeReference;
+#newTypeParameterReference(II)Lsl/org/objectweb/asm/TypeReference;
+#newTypeParameterBoundReference(III)Lsl/org/objectweb/asm/TypeReference;
+#newSuperTypeReference(I)Lsl/org/objectweb/asm/TypeReference;
+#newFormalParameterReference(I)Lsl/org/objectweb/asm/TypeReference;
+#newExceptionReference(I)Lsl/org/objectweb/asm/TypeReference;
+#newTryCatchReference(I)Lsl/org/objectweb/asm/TypeReference;
+#newTypeArgumentReference(II)Lsl/org/objectweb/asm/TypeReference;
+#getSort()I
+#getTypeParameterIndex()I
+#getTypeParameterBoundIndex()I
+#getSuperTypeIndex()I
+#getFormalParameterIndex()I
+#getExceptionIndex()I
+#getTryCatchBlockIndex()I
+#getTypeArgumentIndex()I
+#getValue()I

+###sl/org/objectweb/asm/signature/SignatureReader
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;)V
+#accept(Lsl/org/objectweb/asm/signature/SignatureVisitor;)V
+#acceptType(Lsl/org/objectweb/asm/signature/SignatureVisitor;)V

+###sl/org/objectweb/asm/signature/SignatureVisitor
@1.1.5.RELEASE
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
@1.2.0.RELEASE
+#<init>(I)V

+###sl/org/objectweb/asm/signature/SignatureWriter
@1.1.5.RELEASE
+#<init>()V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lsl/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
+#toString()Ljava/lang/String;

+###sl/org/objectweb/asm/tree/AbstractInsnNode
@1.1.5.RELEASE
+#getOpcode()I
+#getType()I
+#getPrevious()Lsl/org/objectweb/asm/tree/AbstractInsnNode;
+#getNext()Lsl/org/objectweb/asm/tree/AbstractInsnNode;
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/AnnotationNode
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
+#accept(Lsl/org/objectweb/asm/AnnotationVisitor;)V
@1.2.0.RELEASE
+#<init>(ILjava/lang/String;)V
+#check(I)V

+###sl/org/objectweb/asm/tree/ClassNode
@1.1.5.RELEASE
+#<init>()V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lsl/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;
+#accept(Lsl/org/objectweb/asm/ClassVisitor;)V
@1.2.0.RELEASE
+#<init>(I)V
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitEnd()V
+#check(I)V

+###sl/org/objectweb/asm/tree/FieldInsnNode
@1.1.5.RELEASE
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setOpcode(I)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/FieldNode
@1.1.5.RELEASE
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#accept(Lsl/org/objectweb/asm/ClassVisitor;)V
@1.2.0.RELEASE
+#<init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitEnd()V
+#check(I)V

+###sl/org/objectweb/asm/tree/FrameNode
@1.1.5.RELEASE
+#<init>(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/IincInsnNode
@1.1.5.RELEASE
+#<init>(II)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/InnerClassNode
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#accept(Lsl/org/objectweb/asm/ClassVisitor;)V

+###sl/org/objectweb/asm/tree/InsnList
@1.1.5.RELEASE
+#<init>()V
+#size()I
+#getFirst()Lsl/org/objectweb/asm/tree/AbstractInsnNode;
+#getLast()Lsl/org/objectweb/asm/tree/AbstractInsnNode;
+#get(I)Lsl/org/objectweb/asm/tree/AbstractInsnNode;
+#contains(Lsl/org/objectweb/asm/tree/AbstractInsnNode;)Z
+#indexOf(Lsl/org/objectweb/asm/tree/AbstractInsnNode;)I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#iterator()Ljava/util/ListIterator;
+#iterator(I)Ljava/util/ListIterator;
+#toArray()[Lsl/org/objectweb/asm/tree/AbstractInsnNode;
+#set(Lsl/org/objectweb/asm/tree/AbstractInsnNode;Lsl/org/objectweb/asm/tree/AbstractInsnNode;)V
+#add(Lsl/org/objectweb/asm/tree/AbstractInsnNode;)V
+#add(Lsl/org/objectweb/asm/tree/InsnList;)V
+#insert(Lsl/org/objectweb/asm/tree/AbstractInsnNode;)V
+#insert(Lsl/org/objectweb/asm/tree/InsnList;)V
+#insert(Lsl/org/objectweb/asm/tree/AbstractInsnNode;Lsl/org/objectweb/asm/tree/AbstractInsnNode;)V
+#insert(Lsl/org/objectweb/asm/tree/AbstractInsnNode;Lsl/org/objectweb/asm/tree/InsnList;)V
+#insertBefore(Lsl/org/objectweb/asm/tree/AbstractInsnNode;Lsl/org/objectweb/asm/tree/AbstractInsnNode;)V
+#insertBefore(Lsl/org/objectweb/asm/tree/AbstractInsnNode;Lsl/org/objectweb/asm/tree/InsnList;)V
+#remove(Lsl/org/objectweb/asm/tree/AbstractInsnNode;)V
+#clear()V
+#resetLabels()V

+###sl/org/objectweb/asm/tree/InsnNode
@1.1.5.RELEASE
+#<init>(I)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/IntInsnNode
@1.1.5.RELEASE
+#<init>(II)V
+#setOpcode(I)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/InvokeDynamicInsnNode
@1.2.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Lsl/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/JumpInsnNode
@1.1.5.RELEASE
+#<init>(ILsl/org/objectweb/asm/tree/LabelNode;)V
+#setOpcode(I)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/LabelNode
@1.1.5.RELEASE
+#<init>()V
+#<init>(Lsl/org/objectweb/asm/Label;)V
+#getType()I
+#getLabel()Lsl/org/objectweb/asm/Label;
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;
+#resetLabel()V

+###sl/org/objectweb/asm/tree/LdcInsnNode
@1.1.5.RELEASE
+#<init>(Ljava/lang/Object;)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/LineNumberNode
@1.1.5.RELEASE
+#<init>(ILsl/org/objectweb/asm/tree/LabelNode;)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/LocalVariableAnnotationNode
@1.2.0.RELEASE
+#<init>(ILsl/org/objectweb/asm/TypePath;[Lsl/org/objectweb/asm/tree/LabelNode;[Lsl/org/objectweb/asm/tree/LabelNode;[ILjava/lang/String;)V
+#<init>(IILsl/org/objectweb/asm/TypePath;[Lsl/org/objectweb/asm/tree/LabelNode;[Lsl/org/objectweb/asm/tree/LabelNode;[ILjava/lang/String;)V
+#accept(Lsl/org/objectweb/asm/MethodVisitor;Z)V

+###sl/org/objectweb/asm/tree/LocalVariableNode
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lsl/org/objectweb/asm/tree/LabelNode;Lsl/org/objectweb/asm/tree/LabelNode;I)V
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V

+###sl/org/objectweb/asm/tree/LookupSwitchInsnNode
@1.1.5.RELEASE
+#<init>(Lsl/org/objectweb/asm/tree/LabelNode;[I[Lsl/org/objectweb/asm/tree/LabelNode;)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/MethodInsnNode
@1.1.5.RELEASE
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setOpcode(I)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;
@1.2.1.RELEASE
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V

+###sl/org/objectweb/asm/tree/MethodNode
@1.1.5.RELEASE
+#<init>()V
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitAnnotationDefault()Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILsl/org/objectweb/asm/Label;)V
+#visitLabel(Lsl/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILsl/org/objectweb/asm/Label;[Lsl/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lsl/org/objectweb/asm/Label;[I[Lsl/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;I)V
+#visitLineNumber(ILsl/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#accept(Lsl/org/objectweb/asm/ClassVisitor;)V
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
@1.2.0.RELEASE
+#<init>(I)V
+#<init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lsl/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitInsnAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchAnnotation(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariableAnnotation(ILsl/org/objectweb/asm/TypePath;[Lsl/org/objectweb/asm/Label;[Lsl/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
+#check(I)V
@1.2.1.RELEASE
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V

+###sl/org/objectweb/asm/tree/MultiANewArrayInsnNode
@1.1.5.RELEASE
+#<init>(Ljava/lang/String;I)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/ParameterNode
@1.2.0.RELEASE
+#<init>(Ljava/lang/String;I)V
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V

+###sl/org/objectweb/asm/tree/TableSwitchInsnNode
@1.1.5.RELEASE
+#<init>(IILsl/org/objectweb/asm/tree/LabelNode;[Lsl/org/objectweb/asm/tree/LabelNode;)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/TryCatchBlockNode
@1.1.5.RELEASE
+#<init>(Lsl/org/objectweb/asm/tree/LabelNode;Lsl/org/objectweb/asm/tree/LabelNode;Lsl/org/objectweb/asm/tree/LabelNode;Ljava/lang/String;)V
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
@1.2.0.RELEASE
+#updateIndex(I)V

+###sl/org/objectweb/asm/tree/TypeAnnotationNode
@1.2.0.RELEASE
+#<init>(ILsl/org/objectweb/asm/TypePath;Ljava/lang/String;)V
+#<init>(IILsl/org/objectweb/asm/TypePath;Ljava/lang/String;)V

+###sl/org/objectweb/asm/tree/TypeInsnNode
@1.1.5.RELEASE
+#<init>(ILjava/lang/String;)V
+#setOpcode(I)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###sl/org/objectweb/asm/tree/VarInsnNode
@1.1.5.RELEASE
+#<init>(II)V
+#setOpcode(I)V
+#getType()I
+#accept(Lsl/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lsl/org/objectweb/asm/tree/AbstractInsnNode;

+###org/springsource/loaded/ConstantPoolScanner$References
@1.2.6.RELEASE
+#toString()Ljava/lang/String;

+###org/springsource/loaded/ConstantPoolScanner
@1.2.6.RELEASE
+#getReferences([B)Lorg/springsource/loaded/ConstantPoolScanner$References;

+###org/springsource/loaded/TypeRegistry$CouldBeReloadableDecision
@1.2.4.RELEASE
+#values()[Lorg/springsource/loaded/TypeRegistry$CouldBeReloadableDecision;
+#valueOf(Ljava/lang/String;)Lorg/springsource/loaded/TypeRegistry$CouldBeReloadableDecision;

+###org/springsource/loaded/TypeRegistry$ReloadableTypeNameDecision
@1.2.4.RELEASE

+###org/springsource/loaded/support/ConcurrentWeakIdentityHashMap
@1.2.8.RELEASE
+#<init>(I)V
+#<init>()V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#entrySet()Ljava/util/Set;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#clear()V
+#containsValue(Ljava/lang/Object;)Z

+###sl/org/objectweb/asm/ClassAdapter
@1.1.5.RELEASE
+#<init>(Lsl/org/objectweb/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lsl/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lsl/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
@1.2.0.RELEASE
-###sl/org/objectweb/asm/ClassAdapter

+###sl/org/objectweb/asm/MethodAdapter
@1.1.5.RELEASE
+#<init>(Lsl/org/objectweb/asm/MethodVisitor;)V
+#visitAnnotationDefault()Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILsl/org/objectweb/asm/Label;)V
+#visitLabel(Lsl/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILsl/org/objectweb/asm/Label;[Lsl/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lsl/org/objectweb/asm/Label;[I[Lsl/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lsl/org/objectweb/asm/Label;Lsl/org/objectweb/asm/Label;I)V
+#visitLineNumber(ILsl/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@1.2.0.RELEASE
-###sl/org/objectweb/asm/MethodAdapter

+###sl/org/objectweb/asm/tree/MemberNode
@1.1.5.RELEASE
+#visitAnnotation(Ljava/lang/String;Z)Lsl/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lsl/org/objectweb/asm/Attribute;)V
+#visitEnd()V
@1.2.0.RELEASE
-###sl/org/objectweb/asm/tree/MemberNode
