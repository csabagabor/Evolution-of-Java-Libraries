
+###org/springframework/cloud/stream/binder/kafka/KafkaBinderJaasInitializerListener
@1.1.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#destroy()V
+#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.0.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaBinderJaasInitializerListener

+###org/springframework/cloud/stream/binder/kafka/KafkaBinderHealthIndicator
@1.0.0.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;)V
+#health()Lorg/springframework/boot/actuate/health/Health;
@1.0.1.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfigurationProperties;)V
-#<init>(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;)V
@1.1.2.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/kafka/core/ConsumerFactory;)V
-#<init>(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfigurationProperties;)V
@1.3.0.RELEASE
+#setTimeout(I)V
@2.2.1.RELEASE
+#destroy()V
@3.0.9.RELEASE
+#setConsiderDownWhenAnyPartitionHasNoLeader(Z)V

+###org/springframework/cloud/stream/binder/kafka/KafkaBinderJaasInitializerListener$InternalConfiguration
@1.1.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#getAppConfigurationEntry(Ljava/lang/String;)[Ljavax/security/auth/login/AppConfigurationEntry;
@2.0.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaBinderJaasInitializerListener$InternalConfiguration

+###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfiguration$JaasConfigurationProperties
@1.1.0.RELEASE
+#<init>()V

+###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfiguration
@1.0.0.RELEASE
+#<init>()V
@1.1.0.RELEASE
+#kafka09AdminUtilsOperation()Lorg/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation;
+#kafka10AdminUtilsOperation()Lorg/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation;
+#jaasInitializer()Lorg/springframework/context/ApplicationListener;
@1.3.0.RELEASE
+#kafkaBinderMetrics(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;)Lorg/springframework/boot/actuate/endpoint/PublicMetrics;
@1.3.3.RELEASE
+#kafkaBinderMetrics(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;)Lorg/springframework/boot/actuate/endpoint/PublicMetrics;
-#kafkaBinderMetrics(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;)Lorg/springframework/boot/actuate/endpoint/PublicMetrics;
@2.0.0.RELEASE
+#jaasInitializer()Lorg/springframework/kafka/security/jaas/KafkaJaasLoginModuleInitializer;
-#kafkaBinderMetrics(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;)Lorg/springframework/boot/actuate/endpoint/PublicMetrics;
-#kafka09AdminUtilsOperation()Lorg/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation;
-#kafka10AdminUtilsOperation()Lorg/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation;
-#jaasInitializer()Lorg/springframework/context/ApplicationListener;
@2.0.2.RELEASE
+#jaasInitializer(Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;)Lorg/springframework/kafka/security/jaas/KafkaJaasLoginModuleInitializer;
-#jaasInitializer()Lorg/springframework/kafka/security/jaas/KafkaJaasLoginModuleInitializer;

+###org/springframework/cloud/stream/binder/kafka/KafkaBinderEnvironmentPostProcessor
@1.2.0.RELEASE
+#<init>()V
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V
@4.0.0
-###org/springframework/cloud/stream/binder/kafka/KafkaBinderEnvironmentPostProcessor

+###org/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder$TopicInformation
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
+#getConsumerGroup()Ljava/lang/String;
+#isConsumerTopic()Z
+#getPartitionInfos()Ljava/util/Collection;
@2.0.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder$TopicInformation

+###org/springframework/cloud/stream/binder/kafka/KafkaBinderMetrics
@1.3.0.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/kafka/core/ConsumerFactory;)V
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;)V
+#metrics()Ljava/util/Collection;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/kafka/core/ConsumerFactory;Lio/micrometer/core/instrument/MeterRegistry;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
+#onApplicationEvent(Lorg/springframework/cloud/stream/binder/BindingCreatedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
-#<init>(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/kafka/core/ConsumerFactory;)V
-#metrics()Ljava/util/Collection;
@2.0.1.RELEASE
+#setTimeout(I)V
@3.2.5
+#close()V

+###org/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder
@1.0.0.RELEASE
+#<init>(Lorg/springframework/integration/kafka/support/ZookeeperConnect;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#setSocketBufferSize(I)V
+#setOffsetUpdateTimeWindow(I)V
+#setOffsetUpdateCount(I)V
+#setOffsetUpdateShutdownTimeout(I)V
+#getConnectionFactory()Lorg/springframework/integration/kafka/core/ConnectionFactory;
+#setProducerListener(Lorg/springframework/integration/kafka/support/ProducerListener;)V
+#setMetadataRetryOperations(Lorg/springframework/retry/RetryOperations;)V
+#setExtendedBindingProperties(Lorg/springframework/cloud/stream/binder/kafka/KafkaExtendedBindingProperties;)V
+#onInit()V
+#destroy()V
+#validateTopicName(Ljava/lang/String;)V
+#setReplicationFactor(I)V
+#setRequiredAcks(I)V
+#setQueueSize(I)V
+#setFetchSize(I)V
+#setMinPartitionCount(I)V
+#setMaxWait(I)V
+#getZkSessionTimeout()I
+#setZkSessionTimeout(I)V
+#getZkConnectionTimeout()I
+#setZkConnectionTimeout(I)V
+#isAutoCreateTopics()Z
+#setAutoCreateTopics(Z)V
+#isAutoAddPartitions()Z
+#setAutoAddPartitions(Z)V
+#getExtendedConsumerProperties(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties;
+#getExtendedProducerProperties(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/KafkaProducerProperties;
+#doBindProducer(Ljava/lang/String;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/cloud/stream/binder/ExtendedProducerProperties;)Lorg/springframework/cloud/stream/binder/Binding;
+#doManualAck(Ljava/util/LinkedList;)V
+#doBindProducer(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/cloud/stream/binder/ProducerProperties;)Lorg/springframework/cloud/stream/binder/Binding;
+#getExtendedProducerProperties(Ljava/lang/String;)Ljava/lang/Object;
+#getExtendedConsumerProperties(Ljava/lang/String;)Ljava/lang/Object;
@1.0.1.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfigurationProperties;)V
-#<init>(Lorg/springframework/integration/kafka/support/ZookeeperConnect;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
-#setSocketBufferSize(I)V
-#setOffsetUpdateTimeWindow(I)V
-#setOffsetUpdateCount(I)V
-#setOffsetUpdateShutdownTimeout(I)V
-#setReplicationFactor(I)V
-#setRequiredAcks(I)V
-#setQueueSize(I)V
-#setFetchSize(I)V
-#setMinPartitionCount(I)V
-#setMaxWait(I)V
-#getZkSessionTimeout()I
-#setZkSessionTimeout(I)V
-#getZkConnectionTimeout()I
-#setZkConnectionTimeout(I)V
-#isAutoCreateTopics()Z
-#setAutoCreateTopics(Z)V
-#isAutoAddPartitions()Z
-#setAutoAddPartitions(Z)V
@1.1.0.RELEASE
+#setAdminUtilsOperation(Lorg/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation;)V
+#setProducerListener(Lorg/springframework/kafka/support/ProducerListener;)V
-#getConnectionFactory()Lorg/springframework/integration/kafka/core/ConnectionFactory;
-#setProducerListener(Lorg/springframework/integration/kafka/support/ProducerListener;)V
-#validateTopicName(Ljava/lang/String;)V
-#doBindProducer(Ljava/lang/String;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/cloud/stream/binder/ExtendedProducerProperties;)Lorg/springframework/cloud/stream/binder/Binding;
-#doManualAck(Ljava/util/LinkedList;)V
-#doBindProducer(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/cloud/stream/binder/ProducerProperties;)Lorg/springframework/cloud/stream/binder/Binding;
@1.2.0.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner;)V
+#setExtendedBindingProperties(Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaExtendedBindingProperties;)V
+#getExtendedConsumerProperties(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties;
+#getExtendedProducerProperties(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaProducerProperties;
-#<init>(Lorg/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfigurationProperties;)V
-#setAdminUtilsOperation(Lorg/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation;)V
-#setMetadataRetryOperations(Lorg/springframework/retry/RetryOperations;)V
-#setExtendedBindingProperties(Lorg/springframework/cloud/stream/binder/kafka/KafkaExtendedBindingProperties;)V
-#onInit()V
-#destroy()V
-#getExtendedConsumerProperties(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties;
-#getExtendedProducerProperties(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/KafkaProducerProperties;
@2.1.0.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner;Lorg/springframework/cloud/stream/config/ListenerContainerCustomizer;Lorg/springframework/cloud/stream/binder/kafka/KafkaBindingRebalanceListener;)V
+#getDefaultsPrefix()Ljava/lang/String;
+#getExtendedPropertiesEntryClass()Ljava/lang/Class;
+#setupRebalanceListener(Lorg/springframework/cloud/stream/binder/ExtendedConsumerProperties;Lorg/springframework/kafka/listener/ContainerProperties;)V
+#processTopic(Ljava/lang/String;Lorg/springframework/cloud/stream/binder/ExtendedConsumerProperties;Lorg/springframework/kafka/core/ConsumerFactory;IZZLjava/lang/String;)Ljava/util/Collection;
@2.1.4.RELEASE
+#getTransactionalProducerFactory()Lorg/springframework/kafka/core/ProducerFactory;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner;Lorg/springframework/cloud/stream/config/ListenerContainerCustomizer;Lorg/springframework/cloud/stream/config/MessageSourceCustomizer;Lorg/springframework/cloud/stream/binder/kafka/KafkaBindingRebalanceListener;)V
-#getTransactionalProducerFactory()Lorg/springframework/kafka/core/ProducerFactory;
@2.2.1.RELEASE
+#getTransactionalProducerFactory()Lorg/springframework/kafka/core/ProducerFactory;
@3.0.0.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner;Lorg/springframework/cloud/stream/config/ListenerContainerCustomizer;Lorg/springframework/cloud/stream/config/MessageSourceCustomizer;Lorg/springframework/cloud/stream/binder/kafka/KafkaBindingRebalanceListener;Lorg/springframework/cloud/stream/binder/kafka/utils/DlqPartitionFunction;)V
-#<init>(Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner;Lorg/springframework/cloud/stream/config/ListenerContainerCustomizer;Lorg/springframework/cloud/stream/config/MessageSourceCustomizer;Lorg/springframework/cloud/stream/binder/kafka/KafkaBindingRebalanceListener;)V
@3.0.6.RELEASE
+#setClientFactoryCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ClientFactoryCustomizer;)V
@3.0.9.RELEASE
+#<init>(Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner;Lorg/springframework/cloud/stream/config/ListenerContainerCustomizer;Lorg/springframework/cloud/stream/config/MessageSourceCustomizer;Lorg/springframework/cloud/stream/binder/kafka/KafkaBindingRebalanceListener;Lorg/springframework/cloud/stream/binder/kafka/utils/DlqPartitionFunction;Lorg/springframework/cloud/stream/binder/kafka/utils/DlqDestinationResolver;)V
+#setConsumerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ConsumerConfigCustomizer;)V
+#setProducerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ProducerConfigCustomizer;)V
-#<init>(Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner;Lorg/springframework/cloud/stream/config/ListenerContainerCustomizer;Lorg/springframework/cloud/stream/config/MessageSourceCustomizer;Lorg/springframework/cloud/stream/binder/kafka/KafkaBindingRebalanceListener;Lorg/springframework/cloud/stream/binder/kafka/utils/DlqPartitionFunction;)V
@3.1.0
+#setRebalanceListener(Lorg/springframework/cloud/stream/binder/kafka/KafkaBindingRebalanceListener;)V
+#setDlqPartitionFunction(Lorg/springframework/cloud/stream/binder/kafka/utils/DlqPartitionFunction;)V
+#setDlqDestinationResolver(Lorg/springframework/cloud/stream/binder/kafka/utils/DlqDestinationResolver;)V
@3.2.5
*#setClientFactoryCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ClientFactoryCustomizer;)V[deprecated]
+#addClientFactoryCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ClientFactoryCustomizer;)V
*#setConsumerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ConsumerConfigCustomizer;)V[deprecated]
+#addConsumerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ConsumerConfigCustomizer;)V
*#setProducerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ProducerConfigCustomizer;)V[deprecated]
+#addProducerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ProducerConfigCustomizer;)V
@4.0.0
+#getBinderIdentity()Ljava/lang/String;
+#setConsumerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/support/ConsumerConfigCustomizer;)V[deprecated]
+#addConsumerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/support/ConsumerConfigCustomizer;)V
+#setProducerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/support/ProducerConfigCustomizer;)V[deprecated]
+#addProducerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/support/ProducerConfigCustomizer;)V
-#setConsumerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ConsumerConfigCustomizer;)V[deprecated]
-#addConsumerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ConsumerConfigCustomizer;)V
-#setProducerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ProducerConfigCustomizer;)V[deprecated]
-#addProducerConfigCustomizer(Lorg/springframework/cloud/stream/binder/kafka/config/ProducerConfigCustomizer;)V

+###org/springframework/cloud/stream/binder/kafka/ListenerContainerWithDlqAndRetryCustomizer
@3.2.0
+#configure(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Ljava/lang/String;Ljava/lang/String;)V
+#configure(Lorg/springframework/kafka/listener/AbstractMessageListenerContainer;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Lorg/springframework/util/backoff/BackOff;)V
+#retryAndDlqInBinding(Ljava/lang/String;Ljava/lang/String;)Z
+#configure(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/cloud/stream/binder/kafka/KafkaBinderHealth
@3.2.2

+###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfiguration$KafkaBinderMetricsConfigurationWithMultiBinder$KafkaMicrometer
@3.0.6.RELEASE
+#binderClientFactoryCustomizer(Lorg/springframework/context/ConfigurableApplicationContext;)Lorg/springframework/cloud/stream/binder/kafka/config/ClientFactoryCustomizer;

+###org/springframework/cloud/stream/binder/kafka/config/ClientFactoryCustomizer
@3.0.6.RELEASE
+#configure(Lorg/springframework/kafka/core/ProducerFactory;)V
+#configure(Lorg/springframework/kafka/core/ConsumerFactory;)V

+###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfiguration$KafkaBinderMetricsConfigurationWithMultiBinder
@2.1.1.RELEASE
+#kafkaBinderMetrics(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lorg/springframework/context/ConfigurableApplicationContext;)Lio/micrometer/core/instrument/binder/MeterBinder;

+###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfiguration$KafkaBinderMetricsConfiguration
@2.0.0.RELEASE
+#kafkaBinderMetrics(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/binder/MeterBinder;

+###org/springframework/cloud/stream/binder/kafka/config/ProducerConfigCustomizer
@3.0.9.RELEASE
+#configure(Ljava/util/Map;)V
@3.1.0
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
-#configure(Ljava/util/Map;)V
@4.0.0
-###org/springframework/cloud/stream/binder/kafka/config/ProducerConfigCustomizer

+###org/springframework/cloud/stream/binder/kafka/config/ExtendedBindingHandlerMappingsProviderConfiguration
@2.1.0.RELEASE
+#<init>()V
+#kafkaExtendedPropertiesDefaultMappingsProvider()Lorg/springframework/cloud/stream/config/BindingHandlerAdvise$MappingsProvider;

+###org/springframework/cloud/stream/binder/kafka/config/ConsumerConfigCustomizer
@3.0.9.RELEASE
+#configure(Ljava/util/Map;)V
@3.1.0
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
-#configure(Ljava/util/Map;)V
@4.0.0
-###org/springframework/cloud/stream/binder/kafka/config/ConsumerConfigCustomizer

+###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderHealthIndicatorConfiguration
@3.0.11.RELEASE
+#<init>()V
+#kafkaBinderHealthIndicator(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder;Lorg/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties;)Lorg/springframework/cloud/stream/binder/kafka/KafkaBinderHealthIndicator;
@3.1.0
-###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderHealthIndicatorConfiguration

+###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfiguration$KafkaBinderMetricsConfiguration$KafkaMicrometer
@3.0.6.RELEASE
+#binderClientFactoryCustomizer(Lio/micrometer/core/instrument/MeterRegistry;)Lorg/springframework/cloud/stream/binder/kafka/config/ClientFactoryCustomizer;

+###org/springframework/cloud/stream/binder/kafka/BinderHeaderMapper
@2.0.2.RELEASE
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#<init>([Ljava/lang/String;)V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;[Ljava/lang/String;)V
+#addTrustedPackages([Ljava/lang/String;)V
+#addToStringClasses([Ljava/lang/String;)V
+#fromHeaders(Lorg/springframework/messaging/MessageHeaders;Lorg/apache/kafka/common/header/Headers;)V
+#toHeaders(Lorg/apache/kafka/common/header/Headers;Ljava/util/Map;)V
@3.0.0.RELEASE
+#setEncodeStrings(Z)V
@3.1.0
+#addNeverHeaderPatterns(Ljava/util/List;)[Ljava/lang/String;
+#removeNeverHeaders(Lorg/apache/kafka/common/header/Headers;)V

+###org/springframework/cloud/stream/binder/kafka/KafkaExpressionEvaluatingInterceptor
@3.0.0.RELEASE
+#<init>(Lorg/springframework/expression/Expression;Lorg/springframework/expression/EvaluationContext;)V
+#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;

+###org/springframework/cloud/stream/binder/kafka/KafkaBindingRebalanceListener
@2.1.0.RELEASE
+#onPartitionsRevokedBeforeCommit(Ljava/lang/String;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/util/Collection;)V
+#onPartitionsRevokedAfterCommit(Ljava/lang/String;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/util/Collection;)V
+#onPartitionsAssigned(Ljava/lang/String;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/util/Collection;Z)V

+###org/springframework/cloud/stream/binder/kafka/BinderHeaderMapper$NonTrustedHeaderType
@2.0.2.RELEASE
+#getHeaderValue()[B
+#getUntrustedType()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.0.0.RELEASE
+#<init>()V
+#setHeaderValue([B)V
+#setUntrustedType(Ljava/lang/String;)V

+###org/springframework/cloud/stream/binder/kafka/KafkaNullConverter
@2.2.0.RELEASE
+#<init>()V

+###org/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties
@1.0.0.RELEASE
+#<init>()V
+#isAutoCommitOffset()Z
+#setAutoCommitOffset(Z)V
+#isResetOffsets()Z
+#setResetOffsets(Z)V
+#getStartOffset()Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder$StartOffset;
+#setStartOffset(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder$StartOffset;)V
+#isEnableDlq()Z
+#setEnableDlq(Z)V
@1.0.1.RELEASE
+#getAutoCommitOnError()Ljava/lang/Boolean;
+#setAutoCommitOnError(Ljava/lang/Boolean;)V
+#getRecoveryInterval()I
+#setRecoveryInterval(I)V
@1.1.0.RELEASE
+#getStartOffset()Lorg/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties$StartOffset;
+#setStartOffset(Lorg/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties$StartOffset;)V
+#isAutoRebalanceEnabled()Z
+#setAutoRebalanceEnabled(Z)V
+#getConfiguration()Ljava/util/Map;
+#setConfiguration(Ljava/util/Map;)V
-#getStartOffset()Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder$StartOffset;
-#setStartOffset(Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder$StartOffset;)V
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties

+###org/springframework/cloud/stream/binder/kafka/KafkaProducerProperties$CompressionType
@1.1.0.RELEASE
+#values()[Lorg/springframework/cloud/stream/binder/kafka/KafkaProducerProperties$CompressionType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/KafkaProducerProperties$CompressionType;
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaProducerProperties$CompressionType

+###org/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation
@1.1.0.RELEASE
+#invokeAddPartitions(Lkafka/utils/ZkUtils;Ljava/lang/String;ILjava/lang/String;Z)V
+#errorCodeFromTopicMetadata(Ljava/lang/String;Lkafka/utils/ZkUtils;)S
+#partitionSize(Ljava/lang/String;Lkafka/utils/ZkUtils;)I
+#invokeCreateTopic(Lkafka/utils/ZkUtils;Ljava/lang/String;IILjava/util/Properties;)V
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation

+###org/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties$StartOffset
@1.1.0.RELEASE
+#values()[Lorg/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties$StartOffset;
+#valueOf(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties$StartOffset;
+#getReferencePoint()J
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties$StartOffset

+###org/springframework/cloud/stream/binder/kafka/admin/Kafka09AdminUtilsOperation
@1.1.0.RELEASE
+#<init>()V
+#invokeAddPartitions(Lkafka/utils/ZkUtils;Ljava/lang/String;ILjava/lang/String;Z)V
+#errorCodeFromTopicMetadata(Ljava/lang/String;Lkafka/utils/ZkUtils;)S
+#partitionSize(Ljava/lang/String;Lkafka/utils/ZkUtils;)I
+#invokeCreateTopic(Lkafka/utils/ZkUtils;Ljava/lang/String;IILjava/util/Properties;)V
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/admin/Kafka09AdminUtilsOperation

+###org/springframework/cloud/stream/binder/kafka/KafkaBindingProperties
@1.0.0.RELEASE
+#<init>()V
+#getConsumer()Lorg/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties;
+#setConsumer(Lorg/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties;)V
+#getProducer()Lorg/springframework/cloud/stream/binder/kafka/KafkaProducerProperties;
+#setProducer(Lorg/springframework/cloud/stream/binder/kafka/KafkaProducerProperties;)V
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaBindingProperties

+###org/springframework/cloud/stream/binder/kafka/KafkaProducerProperties
@1.0.0.RELEASE
+#<init>()V
+#getBufferSize()I
+#setBufferSize(I)V
+#getCompressionType()Lorg/springframework/integration/kafka/support/ProducerMetadata$CompressionType;
+#setCompressionType(Lorg/springframework/integration/kafka/support/ProducerMetadata$CompressionType;)V
+#isSync()Z
+#setSync(Z)V
+#getBatchTimeout()I
+#setBatchTimeout(I)V
@1.0.3.RELEASE
+#getMaxRequestSize()I
+#setMaxRequestSize(I)V
+#getConfiguration()Ljava/util/Map;
+#setConfiguration(Ljava/util/Map;)V
@1.1.0.RELEASE
+#getCompressionType()Lorg/springframework/cloud/stream/binder/kafka/KafkaProducerProperties$CompressionType;
+#setCompressionType(Lorg/springframework/cloud/stream/binder/kafka/KafkaProducerProperties$CompressionType;)V
-#getMaxRequestSize()I
-#setMaxRequestSize(I)V
-#getCompressionType()Lorg/springframework/integration/kafka/support/ProducerMetadata$CompressionType;
-#setCompressionType(Lorg/springframework/integration/kafka/support/ProducerMetadata$CompressionType;)V
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaProducerProperties

+###org/springframework/cloud/stream/binder/kafka/admin/Kafka10AdminUtilsOperation
@1.1.0.RELEASE
+#<init>()V
+#invokeAddPartitions(Lkafka/utils/ZkUtils;Ljava/lang/String;ILjava/lang/String;Z)V
+#errorCodeFromTopicMetadata(Ljava/lang/String;Lkafka/utils/ZkUtils;)S
+#partitionSize(Ljava/lang/String;Lkafka/utils/ZkUtils;)I
+#invokeCreateTopic(Lkafka/utils/ZkUtils;Ljava/lang/String;IILjava/util/Properties;)V
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/admin/Kafka10AdminUtilsOperation

+###org/springframework/cloud/stream/binder/kafka/config/JaasLoginModuleConfiguration
@1.1.0.RELEASE
+#<init>()V
+#getLoginModule()Ljava/lang/String;
+#setLoginModule(Ljava/lang/String;)V
+#getControlFlag()Ljava/lang/String;
+#getControlFlagValue()Ljavax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag;
+#setControlFlag(Ljava/lang/String;)V
+#getOptions()Ljava/util/Map;
+#setOptions(Ljava/util/Map;)V
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/config/JaasLoginModuleConfiguration

+###org/springframework/cloud/stream/binder/kafka/KafkaExtendedBindingProperties
@1.0.0.RELEASE
+#<init>()V
+#getBindings()Ljava/util/Map;
+#setBindings(Ljava/util/Map;)V
+#getExtendedConsumerProperties(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/KafkaConsumerProperties;
+#getExtendedProducerProperties(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/KafkaProducerProperties;
+#getExtendedProducerProperties(Ljava/lang/String;)Ljava/lang/Object;
+#getExtendedConsumerProperties(Ljava/lang/String;)Ljava/lang/Object;
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaExtendedBindingProperties

+###org/springframework/cloud/stream/binder/kafka/KafkaTopicUtils
@1.1.0.RELEASE
+#validateTopicName(Ljava/lang/String;)V
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaTopicUtils

+###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfigurationProperties
@1.0.0.RELEASE
+#<init>()V
+#getZkConnectionString()Ljava/lang/String;
+#getKafkaConnectionString()Ljava/lang/String;
+#getHeaders()[Ljava/lang/String;
+#getOffsetUpdateTimeWindow()I
+#getOffsetUpdateCount()I
+#getOffsetUpdateShutdownTimeout()I
+#getZkNodes()[Ljava/lang/String;
+#setZkNodes([Ljava/lang/String;)V
+#setDefaultZkPort(Ljava/lang/String;)V
+#getBrokers()[Ljava/lang/String;
+#setBrokers([Ljava/lang/String;)V
+#setDefaultBrokerPort(Ljava/lang/String;)V
+#setHeaders([Ljava/lang/String;)V
+#setOffsetUpdateTimeWindow(I)V
+#setOffsetUpdateCount(I)V
+#setOffsetUpdateShutdownTimeout(I)V
+#getZkSessionTimeout()I
+#setZkSessionTimeout(I)V
+#getZkConnectionTimeout()I
+#setZkConnectionTimeout(I)V
+#getMaxWait()I
+#setMaxWait(I)V
+#getRequiredAcks()I
+#setRequiredAcks(I)V
+#getReplicationFactor()I
+#setReplicationFactor(I)V
+#getFetchSize()I
+#setFetchSize(I)V
+#getMinPartitionCount()I
+#setMinPartitionCount(I)V
+#getQueueSize()I
+#setQueueSize(I)V
+#isAutoCreateTopics()Z
+#setAutoCreateTopics(Z)V
+#isAutoAddPartitions()Z
+#setAutoAddPartitions(Z)V
@1.0.1.RELEASE
+#getSocketBufferSize()I
+#setSocketBufferSize(I)V
@1.0.3.RELEASE
+#getConfiguration()Ljava/util/Map;
+#setConfiguration(Ljava/util/Map;)V
@1.1.0.RELEASE
+#getJaas()Lorg/springframework/cloud/stream/binder/kafka/config/JaasLoginModuleConfiguration;
+#setJaas(Lorg/springframework/cloud/stream/binder/kafka/config/JaasLoginModuleConfiguration;)V
@1.2.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfigurationProperties

+###org/springframework/cloud/stream/binder/kafka/WindowingOffsetManager
@1.0.0.RELEASE
+#<init>(Lorg/springframework/integration/kafka/listener/OffsetManager;)V
+#setTimespan(J)V
+#setCount(I)V
+#setShutdownTimeout(I)V
+#afterPropertiesSet()V
+#destroy()V
+#updateOffset(Lorg/springframework/integration/kafka/core/Partition;J)V
+#getOffset(Lorg/springframework/integration/kafka/core/Partition;)J
+#deleteOffset(Lorg/springframework/integration/kafka/core/Partition;)V
+#resetOffsets(Ljava/util/Collection;)V
+#close()V
+#flush()V
@1.1.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/WindowingOffsetManager

+###org/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder$StartOffset
@1.0.0.RELEASE
+#values()[Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder$StartOffset;
+#valueOf(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder$StartOffset;
+#getReferencePoint()J
@1.1.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/KafkaMessageChannelBinder$StartOffset

+###org/springframework/cloud/stream/binder/kafka/IntegerEncoderDecoder
@1.0.0.RELEASE
+#<init>()V
+#<init>(Lkafka/utils/VerifiableProperties;)V
+#fromBytes([B)Ljava/lang/Integer;
+#toBytes(Ljava/lang/Integer;)[B
+#toBytes(Ljava/lang/Object;)[B
+#fromBytes([B)Ljava/lang/Object;
@1.0.1.RELEASE
-###org/springframework/cloud/stream/binder/kafka/IntegerEncoderDecoder

+###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfiguration$KafkaPropertiesConfiguration
@1.2.0.RELEASE
+#<init>()V
+#init()V
@1.3.0.RELEASE
-###org/springframework/cloud/stream/binder/kafka/config/KafkaBinderConfiguration$KafkaPropertiesConfiguration
