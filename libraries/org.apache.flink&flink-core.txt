
+###org/apache/flink/configuration/GlobalConfiguration
@0.6-hadoop2-incubating
+#getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getLong(Ljava/lang/String;J)J
+#getInteger(Ljava/lang/String;I)I
+#getFloat(Ljava/lang/String;F)F
+#getBoolean(Ljava/lang/String;Z)Z
+#loadConfiguration(Ljava/lang/String;)V
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getConfiguration([Ljava/lang/String;)Lorg/apache/flink/configuration/Configuration;
+#includeConfiguration(Lorg/apache/flink/configuration/Configuration;)V
@0.7.0-hadoop2-incubating
-#getConfiguration([Ljava/lang/String;)Lorg/apache/flink/configuration/Configuration;
@1.2.0
+#setDynamicProperties(Lorg/apache/flink/configuration/Configuration;)V
+#getDynamicProperties()Lorg/apache/flink/configuration/Configuration;
+#loadConfiguration()Lorg/apache/flink/configuration/Configuration;
+#loadConfiguration(Ljava/lang/String;)Lorg/apache/flink/configuration/Configuration;
-#getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#getLong(Ljava/lang/String;J)J
-#getInteger(Ljava/lang/String;I)I
-#getFloat(Ljava/lang/String;F)F
-#getBoolean(Ljava/lang/String;Z)Z
-#loadConfiguration(Ljava/lang/String;)V
-#getConfiguration()Lorg/apache/flink/configuration/Configuration;
-#includeConfiguration(Lorg/apache/flink/configuration/Configuration;)V
@1.4.0
+#loadConfiguration(Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/Configuration;
+#loadConfigurationWithDynamicProperties(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/Configuration;
-#setDynamicProperties(Lorg/apache/flink/configuration/Configuration;)V
-#getDynamicProperties()Lorg/apache/flink/configuration/Configuration;
@1.5.0
+#isSensitive(Ljava/lang/String;)Z
@1.9.0
+#loadConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/Configuration;
-#loadConfigurationWithDynamicProperties(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/Configuration;

+###org/apache/flink/configuration/ConfigConstants
@0.6-hadoop2-incubating

+###org/apache/flink/configuration/IllegalConfigurationException
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.4.0
+#<init>(Ljava/lang/String;[Ljava/lang/Object;)V

+###org/apache/flink/configuration/Configuration
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
+#getClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
+#setClass(Ljava/lang/String;Ljava/lang/Class;)V
+#getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#setString(Ljava/lang/String;Ljava/lang/String;)V
+#getInteger(Ljava/lang/String;I)I
+#setInteger(Ljava/lang/String;I)V
+#getLong(Ljava/lang/String;J)J
+#setLong(Ljava/lang/String;J)V
+#getBoolean(Ljava/lang/String;Z)Z
+#setBoolean(Ljava/lang/String;Z)V
+#getFloat(Ljava/lang/String;F)F
+#setFloat(Ljava/lang/String;F)V
+#getDouble(Ljava/lang/String;D)D
+#setDouble(Ljava/lang/String;D)V
+#getBytes(Ljava/lang/String;[B)[B
+#setBytes(Ljava/lang/String;[B)V
+#keySet()Ljava/util/Set;
+#addAll(Lorg/apache/flink/configuration/Configuration;)V
+#addAll(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)V
+#containsKey(Ljava/lang/String;)Z
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@0.7.0-hadoop2-incubating
+#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
-#<init>(Ljava/lang/ClassLoader;)V
-#getClassLoader()Ljava/lang/ClassLoader;
-#setClassLoader(Ljava/lang/ClassLoader;)V
-#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
-#getClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
@0.9.0-milestone-1
+#clone()Lorg/apache/flink/configuration/Configuration;
+#clone()Ljava/lang/Object;
@0.9.0
+#toMap()Ljava/util/Map;
@0.10.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
@1.1.0
+#addAllToProperties(Ljava/util/Properties;)V
@1.2.0
+#getString(Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/String;
+#getString(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/String;)Ljava/lang/String;
+#setString(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/String;)V
+#getInteger(Lorg/apache/flink/configuration/ConfigOption;)I
+#setInteger(Lorg/apache/flink/configuration/ConfigOption;I)V
+#getLong(Lorg/apache/flink/configuration/ConfigOption;)J
+#setLong(Lorg/apache/flink/configuration/ConfigOption;J)V
+#getBoolean(Lorg/apache/flink/configuration/ConfigOption;)Z
+#setBoolean(Lorg/apache/flink/configuration/ConfigOption;Z)V
+#getFloat(Lorg/apache/flink/configuration/ConfigOption;)F
+#setFloat(Lorg/apache/flink/configuration/ConfigOption;F)V
+#getDouble(Lorg/apache/flink/configuration/ConfigOption;)D
+#setDouble(Lorg/apache/flink/configuration/ConfigOption;D)V
+#getValue(Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/String;
@1.3.0
+#contains(Lorg/apache/flink/configuration/ConfigOption;)Z
@1.4.0
+#getInteger(Lorg/apache/flink/configuration/ConfigOption;I)I
+#getLong(Lorg/apache/flink/configuration/ConfigOption;J)J
+#getBoolean(Lorg/apache/flink/configuration/ConfigOption;Z)Z
+#getFloat(Lorg/apache/flink/configuration/ConfigOption;F)F
+#getDouble(Lorg/apache/flink/configuration/ConfigOption;D)D
@1.5.2
+#removeConfig(Lorg/apache/flink/configuration/ConfigOption;)Z
@1.8.0
+#getEnum(Ljava/lang/Class;Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/Enum;
@1.10.0
*#getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#getInteger(Ljava/lang/String;I)I[deprecated]
*#getLong(Ljava/lang/String;J)J[deprecated]
*#getBoolean(Ljava/lang/String;Z)Z[deprecated]
*#getFloat(Ljava/lang/String;F)F[deprecated]
*#getDouble(Ljava/lang/String;D)D[deprecated]
+#get(Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/Object;
+#getOptional(Lorg/apache/flink/configuration/ConfigOption;)Ljava/util/Optional;
+#set(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/Object;)Lorg/apache/flink/configuration/Configuration;
+#set(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/Object;)Lorg/apache/flink/configuration/WritableConfig;
@1.12.0
+#fromMap(Ljava/util/Map;)Lorg/apache/flink/configuration/Configuration;

+###org/apache/flink/util/SplittableIterator
@0.6-hadoop2-incubating
+#split(I)[Ljava/util/Iterator;
+#getSplit(II)Ljava/util/Iterator;
+#getMaximumNumberOfSplits()I
@0.9.0-milestone-1
+#<init>()V

+###org/apache/flink/util/ReflectionUtil
@0.6-hadoop2-incubating
+#<init>()V
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#getTemplateType(Ljava/lang/Class;I)Ljava/lang/Class;
+#getTemplateType(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/lang/Class;
+#getTemplateType1(Ljava/lang/Class;)Ljava/lang/Class;
+#getTemplateType2(Ljava/lang/Class;)Ljava/lang/Class;
+#getTemplateType3(Ljava/lang/Class;)Ljava/lang/Class;
+#getTemplateType4(Ljava/lang/Class;)Ljava/lang/Class;
+#getTemplateType5(Ljava/lang/Class;)Ljava/lang/Class;
+#getTemplateType6(Ljava/lang/Class;)Ljava/lang/Class;
+#getTemplateType7(Ljava/lang/Class;)Ljava/lang/Class;
+#getTemplateType8(Ljava/lang/Class;)Ljava/lang/Class;
+#getSuperTemplateTypes(Ljava/lang/Class;)[Ljava/lang/Class;
+#getSuperTemplateTypes(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/Class;
+#getTemplateTypes(Ljava/lang/reflect/ParameterizedType;)[Ljava/lang/Class;
+#getTemplateTypes(Ljava/lang/Class;)[Ljava/lang/Class;
@0.10.0
-#<init>()V
@1.3.0
+#getTemplateType1(Ljava/lang/reflect/Type;)Ljava/lang/Class;
+#getFullTemplateType(Ljava/lang/reflect/Type;I)Lorg/apache/flink/util/ReflectionUtil$FullTypeInfo;
+#getFullTemplateType(Ljava/lang/reflect/Type;)Lorg/apache/flink/util/ReflectionUtil$FullTypeInfo;

+###org/apache/flink/util/Visitable
@0.6-hadoop2-incubating
+#accept(Lorg/apache/flink/util/Visitor;)V

+###org/apache/flink/util/MutableObjectIterator
@0.6-hadoop2-incubating
+#next(Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0-milestone-1
+#next()Ljava/lang/Object;

+###org/apache/flink/util/SimpleStringUtils$WhitespaceTokenizer
@0.6-hadoop2-incubating
+#<init>()V
+#setStringToTokenize(Lorg/apache/flink/types/StringValue;)V
+#next(Lorg/apache/flink/types/StringValue;)Z
@1.3.0
-###org/apache/flink/util/SimpleStringUtils$WhitespaceTokenizer

+###org/apache/flink/util/InstantiationUtil
@0.6-hadoop2-incubating
+#instantiate(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
+#instantiate(Ljava/lang/Class;)Ljava/lang/Object;
+#hasPublicNullaryConstructor(Ljava/lang/Class;)Z
+#isPublic(Ljava/lang/Class;)Z
+#isProperClass(Ljava/lang/Class;)Z
+#isNonStaticInnerClass(Ljava/lang/Class;)Z
+#checkForInstantiation(Ljava/lang/Class;)V
+#checkForInstantiationError(Ljava/lang/Class;)Ljava/lang/String;
+#readObjectFromConfig(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#writeObjectToConfig(Ljava/lang/Object;Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)V
+#deserializeObject([BLjava/lang/ClassLoader;)Ljava/lang/Object;
+#serializeObject(Ljava/lang/Object;)[B
@0.8.0
+#serializeToByteArray(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)[B
+#deserializeFromByteArray(Lorg/apache/flink/api/common/typeutils/TypeSerializer;[B)Ljava/lang/Object;
@1.0.0
+#deserializeFromByteArray(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;[B)Ljava/lang/Object;
+#clone(Ljava/io/Serializable;)Ljava/io/Serializable;
+#clone(Ljava/io/Serializable;Ljava/lang/ClassLoader;)Ljava/io/Serializable;
@1.1.0
+#createCopyWritable(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/core/io/IOReadableWritable;
@1.2.0
+#deserializeObject(Ljava/io/InputStream;Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#serializeObject(Ljava/io/OutputStream;Ljava/lang/Object;)V
@1.3.0
+#isSerializable(Ljava/lang/Object;)Z
@1.4.1
+#deserializeObject([BLjava/lang/ClassLoader;Z)Ljava/lang/Object;
+#deserializeObject(Ljava/io/InputStream;Ljava/lang/ClassLoader;Z)Ljava/lang/Object;
@1.7.0
+#instantiate(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#resolveClassByName(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#resolveClassByName(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;
@1.14.0
+#decompressAndDeserializeObject([BLjava/lang/ClassLoader;)Ljava/lang/Object;
+#serializeObjectAndCompress(Ljava/lang/Object;)[B

+###org/apache/flink/util/StringUtils
@0.6-hadoop2-incubating
+#stringifyException(Ljava/lang/Throwable;)Ljava/lang/String;
+#byteToHexString([BII)Ljava/lang/String;
+#byteToHexString([B)Ljava/lang/String;
+#hexStringToByte(Ljava/lang/String;)[B
+#escapeHtml(Ljava/lang/String;)Ljava/lang/String;
+#arrayAwareToString(Ljava/lang/Object;)Ljava/lang/String;
+#arrayToString(Ljava/lang/Object;)Ljava/lang/String;
+#showControlCharacters(Ljava/lang/String;)Ljava/lang/String;
+#getRandomString(Ljava/util/Random;II)Ljava/lang/String;
+#getRandomString(Ljava/util/Random;IICC)Ljava/lang/String;
@0.7.0-hadoop2-incubating
+#writeNullableString(Ljava/lang/String;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readNullableString(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/String;
@1.3.0
+#writeString(Ljava/lang/String;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readString(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/String;
+#isNullOrWhitespaceOnly(Ljava/lang/String;)Z
+#concatenateWithAnd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#stringifyException(Ljava/lang/Throwable;)Ljava/lang/String;
-#escapeHtml(Ljava/lang/String;)Ljava/lang/String;
@1.6.2
+#generateRandomAlphanumericString(Ljava/util/Random;I)Ljava/lang/String;
@1.7.0
+#toQuotedListString([Ljava/lang/Object;)Ljava/lang/String;
@1.11.0
-#arrayToString(Ljava/lang/Object;)Ljava/lang/String;

+###org/apache/flink/util/NumberSequenceIterator
@0.6-hadoop2-incubating
+#<init>(JJ)V
+#getCurrent()J
+#getTo()J
+#hasNext()Z
+#next()Ljava/lang/Long;
+#remove()V
+#split(I)[Lorg/apache/flink/util/NumberSequenceIterator;
+#getSplit(II)Ljava/util/Iterator;
+#getMaximumNumberOfSplits()I
+#split(I)[Ljava/util/Iterator;
+#next()Ljava/lang/Object;
@0.9.0-milestone-1
-#getSplit(II)Ljava/util/Iterator;

+###org/apache/flink/util/IterableIterator
@0.6-hadoop2-incubating

+###org/apache/flink/util/Collector
@0.6-hadoop2-incubating
+#collect(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/util/OperatingSystem
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/util/OperatingSystem;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/util/OperatingSystem;
+#getCurrentOperatingSystem()Lorg/apache/flink/util/OperatingSystem;
+#isWindows()Z
+#isLinux()Z
+#isMac()Z
+#isFreeBSD()Z
@1.2.0
+#isSolaris()Z

+###org/apache/flink/util/TraversableOnceException
@0.6-hadoop2-incubating
+#<init>()V

+###org/apache/flink/util/ClassUtils
@0.6-hadoop2-incubating
+#getProtocolByName(Ljava/lang/String;)Ljava/lang/Class;
+#getRecordByName(Ljava/lang/String;)Ljava/lang/Class;
+#getFileSystemByName(Ljava/lang/String;)Ljava/lang/Class;
@0.7.0-hadoop2-incubating
+#resolveClassPrimitiveAware(Ljava/lang/String;)Ljava/lang/Class;
@0.8.0
+#isPrimitiveOrBoxedOrString(Ljava/lang/Class;)Z
+#isBoxedTypeOrString(Ljava/lang/Class;)Z
@0.9.0-milestone-1
-#getProtocolByName(Ljava/lang/String;)Ljava/lang/Class;
-#getRecordByName(Ljava/lang/String;)Ljava/lang/Class;
@1.0.0
-###org/apache/flink/util/ClassUtils

+###org/apache/flink/util/Visitor
@0.6-hadoop2-incubating
+#preVisit(Lorg/apache/flink/util/Visitable;)Z
+#postVisit(Lorg/apache/flink/util/Visitable;)V

+###org/apache/flink/util/ExceptionUtils
@0.7.0-hadoop2-incubating
+#<init>()V
+#stringifyException(Ljava/lang/Throwable;)Ljava/lang/String;
+#rethrow(Ljava/lang/Throwable;)V
+#rethrow(Ljava/lang/Throwable;Ljava/lang/String;)V
@0.9.0-milestone-1
+#tryRethrowIOException(Ljava/lang/Throwable;)V
@0.10.0
-#<init>()V
@1.1.0
+#rethrowIOException(Ljava/lang/Throwable;)V
@1.1.4
+#firstOrSuppressed(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;
@1.2.0
+#rethrowException(Ljava/lang/Throwable;Ljava/lang/String;)V
@1.3.0
+#isJvmFatalError(Ljava/lang/Throwable;)Z
+#isJvmFatalOrOutOfMemoryError(Ljava/lang/Throwable;)Z
+#rethrowIfFatalError(Ljava/lang/Throwable;)V
+#rethrowIfFatalErrorOrOOM(Ljava/lang/Throwable;)V
+#containsThrowable(Ljava/lang/Throwable;Ljava/lang/Class;)Z
@1.4.0
+#findThrowable(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/util/Optional;
+#findThrowableWithMessage(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/Optional;
+#stripExecutionException(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#stripCompletionException(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#tryDeserializeAndThrow(Ljava/lang/Throwable;Ljava/lang/ClassLoader;)V
-#containsThrowable(Ljava/lang/Throwable;Ljava/lang/Class;)Z
@1.5.0
+#rethrowException(Ljava/lang/Throwable;)V
+#findThrowable(Ljava/lang/Throwable;Ljava/util/function/Predicate;)Ljava/util/Optional;
+#checkInterrupted(Ljava/lang/Throwable;)V
+#suppressExceptions(Lorg/apache/flink/util/function/RunnableWithException;)V
@1.7.0
+#stripException(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;
@1.8.0
+#tryRethrowException(Ljava/lang/Exception;)V
@1.9.1
+#findSerializedThrowable(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/Optional;
@1.10.1
+#tryEnrichTaskManagerError(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#isMetaspaceOutOfMemoryError(Ljava/lang/Throwable;)Z
+#isDirectOutOfMemoryError(Ljava/lang/Throwable;)Z
@1.11.0
+#tryEnrichOutOfMemoryError(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Throwable;
+#findThrowableSerializedAware(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/Optional;
-#tryEnrichTaskManagerError(Ljava/lang/Throwable;)Ljava/lang/Throwable;
@1.12.0
+#tryEnrichOutOfMemoryError(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#updateDetailMessage(Ljava/lang/Throwable;Ljava/util/function/Function;)V
+#isHeapSpaceOutOfMemoryError(Ljava/lang/Throwable;)Z
-#tryEnrichOutOfMemoryError(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Throwable;
@1.14.0
+#assertThrowable(Ljava/lang/Throwable;Ljava/lang/Class;)V
+#assertThrowable(Ljava/lang/Throwable;Ljava/util/function/Predicate;)V
+#assertThrowableWithMessage(Ljava/lang/Throwable;Ljava/lang/String;)V
@1.16.0
+#returnExceptionIfUnexpected(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#logExceptionIfExcepted(Ljava/lang/Throwable;Lorg/slf4j/Logger;)V

+###org/apache/flink/util/SimpleStringUtils
@0.6-hadoop2-incubating
+#toLowerCase(Lorg/apache/flink/types/StringValue;)V
+#replaceNonWordChars(Lorg/apache/flink/types/StringValue;C)V
@1.3.0
-###org/apache/flink/util/SimpleStringUtils

+###org/apache/flink/util/NetUtils
@0.7.0-hadoop2-incubating
+#<init>()V
+#getHostnameFromFQDN(Ljava/lang/String;)Ljava/lang/String;
@0.9.0-milestone-1
+#ensureCorrectHostnamePort(Ljava/lang/String;)V
@0.9.1
+#getHostnamePort(Ljava/lang/String;)Ljava/net/URL;
-#ensureCorrectHostnamePort(Ljava/lang/String;)V
@0.10.0
+#getCorrectHostnamePort(Ljava/lang/String;)Ljava/net/URL;
+#getAvailablePort()I
+#ipAddressToUrlString(Ljava/net/InetAddress;)Ljava/lang/String;
+#ipAddressAndPortToUrlString(Ljava/net/InetAddress;I)Ljava/lang/String;
+#socketAddressToUrlString(Ljava/net/InetSocketAddress;)Ljava/lang/String;
+#hostAndPortToUrlString(Ljava/lang/String;I)Ljava/lang/String;
-#getHostnamePort(Ljava/lang/String;)Ljava/net/URL;
@1.0.0
+#getPortRangeFromString(Ljava/lang/String;)Ljava/util/Iterator;
+#createSocketFromPorts(Ljava/util/Iterator;Lorg/apache/flink/util/NetUtils$SocketFactory;)Ljava/net/ServerSocket;
@1.2.0
+#unresolvedHostToNormalizedString(Ljava/lang/String;)Ljava/lang/String;
+#unresolvedHostAndPortToNormalizedString(Ljava/lang/String;I)Ljava/lang/String;
+#getWildcardIPAddress()Ljava/lang/String;
@1.10.0
+#parseHostPortAddress(Ljava/lang/String;)Ljava/net/InetSocketAddress;
+#isValidClientPort(I)Z
+#isValidHostPort(I)Z
@1.14.3
+#acceptWithoutTimeout(Ljava/net/ServerSocket;)Ljava/net/Socket;
@1.15.0
+#getAvailablePort()Lorg/apache/flink/util/NetUtils$Port;
-#getAvailablePort()I

+###org/apache/flink/api/common/NonSerializableUserCodeException
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/api/common/operators/SingleInputSemanticProperties
@0.6-hadoop2-incubating
+#<init>()V
+#addForwardedField(II)V
+#addForwardedField(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
+#setForwardedField(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
+#getForwardedField(I)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#addReadFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#setReadFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#getReadFields()Lorg/apache/flink/api/common/operators/util/FieldSet;
+#clearProperties()V
@0.9.0-milestone-1
+#getForwardingTargetFields(II)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#getForwardingSourceField(II)I
+#getReadFields(I)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#toString()Ljava/lang/String;
-#addForwardedField(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
-#setForwardedField(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
-#getForwardedField(I)Lorg/apache/flink/api/common/operators/util/FieldSet;
-#setReadFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
-#getReadFields()Lorg/apache/flink/api/common/operators/util/FieldSet;
-#clearProperties()V

+###org/apache/flink/api/common/operators/CompilerHints
@0.6-hadoop2-incubating
+#<init>()V
+#getOutputSize()J
+#setOutputSize(J)V
+#getOutputCardinality()J
+#setOutputCardinality(J)V
+#getAvgOutputRecordSize()F
+#setAvgOutputRecordSize(F)V
+#getFilterFactor()F
+#setFilterFactor(F)V
+#getUniqueFields()Ljava/util/Set;
+#addUniqueField(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#addUniqueField(I)V
+#addUniqueFields(Ljava/util/Set;)V
+#clearUniqueFields()V

+###org/apache/flink/api/common/operators/UnaryOperatorInformation
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/types/TypeInformation;Lorg/apache/flink/types/TypeInformation;)V
+#getInputType()Lorg/apache/flink/types/TypeInformation;
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getInputType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#<init>(Lorg/apache/flink/types/TypeInformation;Lorg/apache/flink/types/TypeInformation;)V
-#getInputType()Lorg/apache/flink/types/TypeInformation;

+###org/apache/flink/api/common/operators/Order
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/api/common/operators/Order;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/operators/Order;
+#isOrdered()Z
+#getShortName()Ljava/lang/String;

+###org/apache/flink/api/common/operators/DualInputOperator
@0.6-hadoop2-incubating
+#getOperatorInfo()Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;
+#getFirstInput()Lorg/apache/flink/api/common/operators/Operator;
+#getSecondInput()Lorg/apache/flink/api/common/operators/Operator;
+#clearFirstInput()V
+#clearSecondInput()V
+#setFirstInput(Lorg/apache/flink/api/common/operators/Operator;)V
+#setSecondInput(Lorg/apache/flink/api/common/operators/Operator;)V
+#setFirstInput([Lorg/apache/flink/api/common/operators/Operator;)V[deprecated]
+#setSecondInput([Lorg/apache/flink/api/common/operators/Operator;)V[deprecated]
+#setFirstInputs(Ljava/util/List;)V[deprecated]
+#setSecondInputs(Ljava/util/List;)V[deprecated]
+#addFirstInput([Lorg/apache/flink/api/common/operators/Operator;)V[deprecated]
+#addSecondInput([Lorg/apache/flink/api/common/operators/Operator;)V[deprecated]
+#addFirstInputs(Ljava/util/List;)V[deprecated]
+#addSecondInputs(Ljava/util/List;)V[deprecated]
+#getSemanticProperties()Lorg/apache/flink/api/common/operators/DualInputSemanticProperties;
+#setSemanticProperties(Lorg/apache/flink/api/common/operators/DualInputSemanticProperties;)V
+#getNumberOfInputs()I
+#getKeyColumns(I)[I
+#accept(Lorg/apache/flink/util/Visitor;)V
+#getOperatorInfo()Lorg/apache/flink/api/common/operators/OperatorInformation;

+###org/apache/flink/api/common/operators/IterationOperator
@0.6-hadoop2-incubating
+#getAggregators()Lorg/apache/flink/api/common/aggregators/AggregatorRegistry;

+###org/apache/flink/api/common/operators/CollectionExecutor
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>(Z)V
+#execute(Lorg/apache/flink/api/common/Plan;)Lorg/apache/flink/api/common/JobExecutionResult;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/ExecutionConfig;)V
-#<init>()V
-#<init>(Z)V

+###org/apache/flink/api/common/operators/RecordOperator
@0.6-hadoop2-incubating
+#getKeyClasses()[Ljava/lang/Class;
@1.0.0
-###org/apache/flink/api/common/operators/RecordOperator

+###org/apache/flink/api/common/operators/DualInputSemanticProperties
@0.6-hadoop2-incubating
+#<init>()V
+#addForwardedField1(II)V
+#addForwardedField1(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
+#setForwardedField1(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
+#getForwardedField1(I)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#addForwardedField2(II)V
+#addForwardedField2(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
+#setForwardedField2(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
+#getForwardedField2(I)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#addReadFields1(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#setReadFields1(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#getReadFields1()Lorg/apache/flink/api/common/operators/util/FieldSet;
+#addReadFields2(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#setReadFields2(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#getReadFields2()Lorg/apache/flink/api/common/operators/util/FieldSet;
+#clearProperties()V
@0.9.0-milestone-1
+#getForwardingTargetFields(II)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#getForwardingSourceField(II)I
+#getReadFields(I)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#addForwardedField(III)V
+#addReadFields(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
+#toString()Ljava/lang/String;
-#addForwardedField1(II)V
-#addForwardedField1(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
-#setForwardedField1(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
-#getForwardedField1(I)Lorg/apache/flink/api/common/operators/util/FieldSet;
-#addForwardedField2(II)V
-#addForwardedField2(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
-#setForwardedField2(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
-#getForwardedField2(I)Lorg/apache/flink/api/common/operators/util/FieldSet;
-#addReadFields1(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
-#setReadFields1(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
-#getReadFields1()Lorg/apache/flink/api/common/operators/util/FieldSet;
-#addReadFields2(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
-#setReadFields2(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
-#getReadFields2()Lorg/apache/flink/api/common/operators/util/FieldSet;
-#clearProperties()V

+###org/apache/flink/api/common/operators/GenericDataSourceBase
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/io/InputFormat;Lorg/apache/flink/api/common/operators/OperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/io/InputFormat;Lorg/apache/flink/api/common/operators/OperatorInformation;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/OperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/OperatorInformation;)V
+#getFormatWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#getUserCodeWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#getStatisticsKey()Ljava/lang/String;
+#setStatisticsKey(Ljava/lang/String;)V
+#accept(Lorg/apache/flink/util/Visitor;)V
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
+#setSplitDataProperties(Lorg/apache/flink/api/common/operators/GenericDataSourceBase$SplitDataProperties;)V
+#getSplitDataProperties()Lorg/apache/flink/api/common/operators/GenericDataSourceBase$SplitDataProperties;

+###org/apache/flink/api/common/operators/SemanticProperties
@0.6-hadoop2-incubating
+#<init>()V
+#addWrittenFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#setWrittenFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#getWrittenFields()Lorg/apache/flink/api/common/operators/util/FieldSet;
+#clearProperties()V
@0.9.0-milestone-1
+#getForwardingTargetFields(II)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#getForwardingSourceField(II)I
+#getReadFields(I)Lorg/apache/flink/api/common/operators/util/FieldSet;
-#<init>()V
-#addWrittenFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
-#setWrittenFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
-#getWrittenFields()Lorg/apache/flink/api/common/operators/util/FieldSet;
-#clearProperties()V

+###org/apache/flink/api/common/operators/util/OperatorUtil
@0.6-hadoop2-incubating
+#<init>()V
+#getContractClass(Ljava/lang/Class;)Ljava/lang/Class;
+#getNumInputs(Ljava/lang/Class;)I
+#setInputs(Lorg/apache/flink/api/common/operators/Operator;Ljava/util/List;)V
@0.10.0
-###org/apache/flink/api/common/operators/util/OperatorUtil

+###org/apache/flink/api/common/operators/util/UserCodeWrapper
@0.6-hadoop2-incubating
+#getUserCodeObject(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#getUserCodeObject()Ljava/lang/Object;
+#getUserCodeAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getUserCodeClass()Ljava/lang/Class;
@0.8.0
+#hasObject()Z

+###org/apache/flink/api/common/operators/util/JoinHashMap$Prober
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/JoinHashMap;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)V
+#lookupMatch(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/common/operators/util/ListKeyGroupedIterator
@0.7.0-hadoop2-incubating
+#<init>(Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Z)V
+#nextKey()Z
+#getValues()Lorg/apache/flink/api/common/operators/util/ListKeyGroupedIterator$ValuesIterator;
@0.9.0-milestone-1
+#<init>(Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
-#<init>(Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;Z)V

+###org/apache/flink/api/common/operators/util/ListKeyGroupedIterator$ValuesIterator
@0.7.0-hadoop2-incubating
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#iterator()Ljava/util/Iterator;
+#getCurrent()Ljava/lang/Object;

+###org/apache/flink/api/common/operators/util/UserCodeClassWrapper
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/Class;)V
+#getUserCodeObject(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#getUserCodeObject()Ljava/lang/Object;
+#getUserCodeAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getUserCodeClass()Ljava/lang/Class;
@0.8.0
+#hasObject()Z

+###org/apache/flink/api/common/operators/util/FieldSet
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/Integer;)V
+#<init>([I)V
+#<init>([IZ)V
+#addField(Ljava/lang/Integer;)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#addFields([I)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#addFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#contains(Ljava/lang/Integer;)Z
+#size()I
+#iterator()Ljava/util/Iterator;
+#toFieldList()Lorg/apache/flink/api/common/operators/util/FieldList;
+#toArray()[I
+#isValidSubset(Lorg/apache/flink/api/common/operators/util/FieldSet;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#clone()Lorg/apache/flink/api/common/operators/util/FieldSet;
+#clone()Ljava/lang/Object;

+###org/apache/flink/api/common/operators/util/TypeComparable
@0.7.0-hadoop2-incubating
+#<init>(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/operators/util/FieldList
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/Integer;)V
+#<init>([I)V
+#addField(Ljava/lang/Integer;)Lorg/apache/flink/api/common/operators/util/FieldList;
+#addFields([I)Lorg/apache/flink/api/common/operators/util/FieldList;
+#addFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)Lorg/apache/flink/api/common/operators/util/FieldList;
+#get(I)Ljava/lang/Integer;
+#toFieldList()Lorg/apache/flink/api/common/operators/util/FieldList;
+#isValidSubset(Lorg/apache/flink/api/common/operators/util/FieldSet;)Z
+#isValidSubset(Lorg/apache/flink/api/common/operators/util/FieldList;)Z
+#isValidUnorderedPrefix(Lorg/apache/flink/api/common/operators/util/FieldSet;)Z
+#addFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#addFields([I)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#addField(Ljava/lang/Integer;)Lorg/apache/flink/api/common/operators/util/FieldSet;
@0.9.0-milestone-1
+#isExactMatch(Lorg/apache/flink/api/common/operators/util/FieldList;)Z

+###org/apache/flink/api/common/operators/util/JoinHashMap
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#getBuildSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getBuildComparator()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#createProber(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypePairComparator;)Lorg/apache/flink/api/common/operators/util/JoinHashMap$Prober;
+#insertOrReplace(Ljava/lang/Object;)V

+###org/apache/flink/api/common/operators/util/UserCodeObjectWrapper
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/Object;)V
+#getUserCodeObject(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#getUserCodeObject()Ljava/lang/Object;
+#getUserCodeAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getUserCodeClass()Ljava/lang/Class;
@0.8.0
+#hasObject()Z

+###org/apache/flink/api/common/operators/AbstractUdfOperator
@0.6-hadoop2-incubating
+#getUserCodeWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#getBroadcastInputs()Ljava/util/Map;
+#setBroadcastVariable(Ljava/lang/String;Lorg/apache/flink/api/common/operators/Operator;)V
+#setBroadcastVariables(Ljava/util/Map;)V
+#getNumberOfInputs()I
+#getKeyColumns(I)[I

+###org/apache/flink/api/common/operators/BinaryOperatorInformation
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/types/TypeInformation;Lorg/apache/flink/types/TypeInformation;Lorg/apache/flink/types/TypeInformation;)V
+#getFirstInputType()Lorg/apache/flink/types/TypeInformation;
+#getSecondInputType()Lorg/apache/flink/types/TypeInformation;
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getFirstInputType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getSecondInputType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#<init>(Lorg/apache/flink/types/TypeInformation;Lorg/apache/flink/types/TypeInformation;Lorg/apache/flink/types/TypeInformation;)V
-#getFirstInputType()Lorg/apache/flink/types/TypeInformation;
-#getSecondInputType()Lorg/apache/flink/types/TypeInformation;

+###org/apache/flink/api/common/operators/Ordering
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(ILjava/lang/Class;Lorg/apache/flink/api/common/operators/Order;)V
+#appendOrdering(Ljava/lang/Integer;Ljava/lang/Class;Lorg/apache/flink/api/common/operators/Order;)Lorg/apache/flink/api/common/operators/Ordering;
+#getNumberOfFields()I
+#getInvolvedIndexes()Lorg/apache/flink/api/common/operators/util/FieldList;
+#getFieldNumber(I)Ljava/lang/Integer;
+#getType(I)Ljava/lang/Class;
+#getOrder(I)Lorg/apache/flink/api/common/operators/Order;
+#getTypes()[Ljava/lang/Class;
+#getFieldPositions()[I
+#getFieldOrders()[Lorg/apache/flink/api/common/operators/Order;
+#getFieldSortDirections()[Z
+#isMetBy(Lorg/apache/flink/api/common/operators/Ordering;)Z
+#isOrderEqualOnFirstNFields(Lorg/apache/flink/api/common/operators/Ordering;I)Z
+#createNewOrderingUpToIndex(I)Lorg/apache/flink/api/common/operators/Ordering;
+#groupsFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)Z
+#clone()Lorg/apache/flink/api/common/operators/Ordering;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;

+###org/apache/flink/api/common/operators/Union
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;)V
+#<init>(Lorg/apache/flink/api/common/operators/Operator;Lorg/apache/flink/api/common/operators/Operator;)V
@0.8.0
+#<init>(Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/operators/Operator;Lorg/apache/flink/api/common/operators/Operator;Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;)V
-#<init>(Lorg/apache/flink/api/common/operators/Operator;Lorg/apache/flink/api/common/operators/Operator;)V

+###org/apache/flink/api/common/operators/SingleInputOperator
@0.6-hadoop2-incubating
+#getOperatorInfo()Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;
+#getInput()Lorg/apache/flink/api/common/operators/Operator;
+#clearInputs()V
+#setInput(Lorg/apache/flink/api/common/operators/Operator;)V
+#setInput([Lorg/apache/flink/api/common/operators/Operator;)V[deprecated]
+#setInputs(Ljava/util/List;)V[deprecated]
+#addInput([Lorg/apache/flink/api/common/operators/Operator;)V[deprecated]
+#addInput(Ljava/util/List;)V[deprecated]
+#getSemanticProperties()Lorg/apache/flink/api/common/operators/SingleInputSemanticProperties;
+#setSemanticProperties(Lorg/apache/flink/api/common/operators/SingleInputSemanticProperties;)V
+#getNumberOfInputs()I
+#getKeyColumns(I)[I
+#accept(Lorg/apache/flink/util/Visitor;)V
+#getOperatorInfo()Lorg/apache/flink/api/common/operators/OperatorInformation;

+###org/apache/flink/api/common/operators/Operator
@0.6-hadoop2-incubating
+#getOperatorInfo()Lorg/apache/flink/api/common/operators/OperatorInformation;
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getCompilerHints()Lorg/apache/flink/api/common/operators/CompilerHints;
+#getParameters()Lorg/apache/flink/configuration/Configuration;
+#setParameter(Ljava/lang/String;Ljava/lang/String;)V
+#setParameter(Ljava/lang/String;I)V
+#setParameter(Ljava/lang/String;Z)V
+#getDegreeOfParallelism()I
+#setDegreeOfParallelism(I)V
+#getUserCodeWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#createUnionCascade(Ljava/util/List;)Lorg/apache/flink/api/common/operators/Operator;
+#createUnionCascade([Lorg/apache/flink/api/common/operators/Operator;)Lorg/apache/flink/api/common/operators/Operator;
+#createUnionCascade(Lorg/apache/flink/api/common/operators/Operator;[Lorg/apache/flink/api/common/operators/Operator;)Lorg/apache/flink/api/common/operators/Operator;
+#toString()Ljava/lang/String;
@0.9.0-milestone-1
*#getDegreeOfParallelism()I[deprecated]
+#getParallelism()I
*#setDegreeOfParallelism(I)V[deprecated]
+#setParallelism(I)V
@0.10.0
-#getDegreeOfParallelism()I[deprecated]
-#setDegreeOfParallelism(I)V[deprecated]
@1.3.0
+#getMinResources()Lorg/apache/flink/api/common/operators/ResourceSpec;
+#getPreferredResources()Lorg/apache/flink/api/common/operators/ResourceSpec;
+#setResources(Lorg/apache/flink/api/common/operators/ResourceSpec;Lorg/apache/flink/api/common/operators/ResourceSpec;)V

+###org/apache/flink/api/common/operators/GenericDataSinkBase
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/io/OutputFormat;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#getInput()Lorg/apache/flink/api/common/operators/Operator;
+#setInput(Lorg/apache/flink/api/common/operators/Operator;)V
+#setInputs([Lorg/apache/flink/api/common/operators/Operator;)V[deprecated]
+#setInputs(Ljava/util/List;)V[deprecated]
+#addInput([Lorg/apache/flink/api/common/operators/Operator;)V[deprecated]
+#addInputs(Ljava/util/List;)V[deprecated]
+#setGlobalOrder(Lorg/apache/flink/api/common/operators/Ordering;)V
+#setGlobalOrder(Lorg/apache/flink/api/common/operators/Ordering;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
+#getLocalOrder()Lorg/apache/flink/api/common/operators/Ordering;
+#setLocalOrder(Lorg/apache/flink/api/common/operators/Ordering;)V
+#getPartitionOrdering()Lorg/apache/flink/api/common/operators/Ordering;
+#setRangePartitioned(Lorg/apache/flink/api/common/operators/Ordering;)V
+#setRangePartitioned(Lorg/apache/flink/api/common/operators/Ordering;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
+#getDataDistribution()Lorg/apache/flink/api/common/distributions/DataDistribution;
+#getFormatWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#getUserCodeWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#accept(Lorg/apache/flink/util/Visitor;)V
+#toString()Ljava/lang/String;
@1.0.0
-#setGlobalOrder(Lorg/apache/flink/api/common/operators/Ordering;)V
-#setGlobalOrder(Lorg/apache/flink/api/common/operators/Ordering;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
-#getPartitionOrdering()Lorg/apache/flink/api/common/operators/Ordering;
-#setRangePartitioned(Lorg/apache/flink/api/common/operators/Ordering;)V
-#setRangePartitioned(Lorg/apache/flink/api/common/operators/Ordering;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
-#getDataDistribution()Lorg/apache/flink/api/common/distributions/DataDistribution;

+###org/apache/flink/api/common/operators/base/JoinOperatorBase$JoinHint
@0.7.0-hadoop2-incubating
+#values()[Lorg/apache/flink/api/common/operators/base/JoinOperatorBase$JoinHint;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/operators/base/JoinOperatorBase$JoinHint;

+###org/apache/flink/api/common/operators/base/FileDataSinkBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/io/FileOutputFormat;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;Ljava/lang/String;)V
+#getFilePath()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.0.0
-###org/apache/flink/api/common/operators/base/FileDataSinkBase

+###org/apache/flink/api/common/operators/base/PartitionOperatorBase
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Lorg/apache/flink/api/common/operators/base/PartitionOperatorBase$PartitionMethod;[ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Lorg/apache/flink/api/common/operators/base/PartitionOperatorBase$PartitionMethod;Ljava/lang/String;)V
+#getPartitionMethod()Lorg/apache/flink/api/common/operators/base/PartitionOperatorBase$PartitionMethod;
@0.8.0
+#getCustomPartitioner()Lorg/apache/flink/api/common/functions/Partitioner;
+#setCustomPartitioner(Lorg/apache/flink/api/common/functions/Partitioner;)V
+#getSemanticProperties()Lorg/apache/flink/api/common/operators/SingleInputSemanticProperties;
@1.1.0
+#getDistribution()Lorg/apache/flink/api/common/distributions/DataDistribution;
+#setOrdering(Lorg/apache/flink/api/common/operators/Ordering;)V
+#getOrdering()Lorg/apache/flink/api/common/operators/Ordering;
+#setDistribution(Lorg/apache/flink/api/common/distributions/DataDistribution;)V

+###org/apache/flink/api/common/operators/base/BulkIterationBase$TerminationCriterionAggregator
@0.6-hadoop2-incubating
+#<init>()V
+#getAggregate()Lorg/apache/flink/types/LongValue;
+#aggregate(J)V
+#aggregate(Lorg/apache/flink/types/LongValue;)V
+#reset()V
+#aggregate(Lorg/apache/flink/types/Value;)V
+#getAggregate()Lorg/apache/flink/types/Value;

+###org/apache/flink/api/common/operators/base/CollectorMapOperatorBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/GenericCollectorMap;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
@1.0.0
-###org/apache/flink/api/common/operators/base/CollectorMapOperatorBase

+###org/apache/flink/api/common/operators/base/CoGroupOperatorBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/CoGroupFunction;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
+#setGroupOrder(ILorg/apache/flink/api/common/operators/Ordering;)V
+#setGroupOrderForInputOne(Lorg/apache/flink/api/common/operators/Ordering;)V
+#setGroupOrderForInputTwo(Lorg/apache/flink/api/common/operators/Ordering;)V
+#getGroupOrder(I)Lorg/apache/flink/api/common/operators/Ordering;
+#getGroupOrderForInputOne()Lorg/apache/flink/api/common/operators/Ordering;
+#getGroupOrderForInputTwo()Lorg/apache/flink/api/common/operators/Ordering;
+#isCombinableFirst()Z
+#setCombinableFirst(Z)V
+#isCombinableSecond()Z
+#setCombinableSecond(Z)V
@0.8.0
+#setCustomPartitioner(Lorg/apache/flink/api/common/functions/Partitioner;)V
+#getCustomPartitioner()Lorg/apache/flink/api/common/functions/Partitioner;

+###org/apache/flink/api/common/operators/base/DeltaIterationBase$SolutionSetPlaceHolder
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/base/DeltaIterationBase;Lorg/apache/flink/api/common/operators/OperatorInformation;)V
+#getContainingWorksetIteration()Lorg/apache/flink/api/common/operators/base/DeltaIterationBase;
+#accept(Lorg/apache/flink/util/Visitor;)V
+#getUserCodeWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;

+###org/apache/flink/api/common/operators/base/FlatMapOperatorBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/FlatMapFunction;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V

+###org/apache/flink/api/common/operators/base/JoinOperatorBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
@0.7.0-hadoop2-incubating
+#setJoinHint(Lorg/apache/flink/api/common/operators/base/JoinOperatorBase$JoinHint;)V
+#getJoinHint()Lorg/apache/flink/api/common/operators/base/JoinOperatorBase$JoinHint;
@0.8.0
+#setCustomPartitioner(Lorg/apache/flink/api/common/functions/Partitioner;)V
+#getCustomPartitioner()Lorg/apache/flink/api/common/functions/Partitioner;

+###org/apache/flink/api/common/operators/base/CrossOperatorBase$CrossWithSmall
@0.6-hadoop2-incubating

+###org/apache/flink/api/common/operators/base/BulkIterationBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;)V
+#<init>(Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#getPartialSolution()Lorg/apache/flink/api/common/operators/Operator;
+#setNextPartialSolution(Lorg/apache/flink/api/common/operators/Operator;)V
+#getNextPartialSolution()Lorg/apache/flink/api/common/operators/Operator;
+#getTerminationCriterion()Lorg/apache/flink/api/common/operators/Operator;
+#setTerminationCriterion(Lorg/apache/flink/api/common/operators/Operator;)V
+#setMaximumNumberOfIterations(I)V
+#getMaximumNumberOfIterations()I
+#getAggregators()Lorg/apache/flink/api/common/aggregators/AggregatorRegistry;
+#validate()V
+#getBroadcastInputs()Ljava/util/Map;
+#setBroadcastVariable(Ljava/lang/String;Lorg/apache/flink/api/common/operators/Operator;)V
+#setBroadcastVariables(Ljava/util/Map;)V

+###org/apache/flink/api/common/operators/base/FileDataSourceBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/io/FileInputFormat;Lorg/apache/flink/api/common/operators/OperatorInformation;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/io/FileInputFormat;Lorg/apache/flink/api/common/operators/OperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/OperatorInformation;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/OperatorInformation;Ljava/lang/String;)V
+#getFilePath()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.0.0
-###org/apache/flink/api/common/operators/base/FileDataSourceBase

+###org/apache/flink/api/common/operators/base/DeltaIterationBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;I)V
+#<init>(Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I)V
+#<init>(Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[ILjava/lang/String;)V
+#getSolutionSetKeyFields()[I
+#setMaximumNumberOfIterations(I)V
+#getMaximumNumberOfIterations()I
+#getAggregators()Lorg/apache/flink/api/common/aggregators/AggregatorRegistry;
+#getSolutionSet()Lorg/apache/flink/api/common/operators/Operator;
+#getWorkset()Lorg/apache/flink/api/common/operators/Operator;
+#setNextWorkset(Lorg/apache/flink/api/common/operators/Operator;)V
+#getNextWorkset()Lorg/apache/flink/api/common/operators/Operator;
+#setSolutionSetDelta(Lorg/apache/flink/api/common/operators/Operator;)V
+#getSolutionSetDelta()Lorg/apache/flink/api/common/operators/Operator;
+#getInitialSolutionSet()Lorg/apache/flink/api/common/operators/Operator;
+#getInitialWorkset()Lorg/apache/flink/api/common/operators/Operator;
+#setInitialSolutionSet(Lorg/apache/flink/api/common/operators/Operator;)V
+#setInitialWorkset(Lorg/apache/flink/api/common/operators/Operator;)V
+#getBroadcastInputs()Ljava/util/Map;
+#setBroadcastVariable(Ljava/lang/String;Lorg/apache/flink/api/common/operators/Operator;)V
+#setBroadcastVariables(Ljava/util/Map;)V
@0.7.0-hadoop2-incubating
+#setSolutionSetUnManaged(Z)V
+#isSolutionSetUnManaged()Z

+###org/apache/flink/api/common/operators/base/BulkIterationBase$TerminationCriterionMapper
@0.6-hadoop2-incubating
+#<init>()V
+#open(Lorg/apache/flink/configuration/Configuration;)V
+#map(Ljava/lang/Object;Lorg/apache/flink/util/Collector;)V
@0.7.0-hadoop2-incubating
+#flatMap(Ljava/lang/Object;Lorg/apache/flink/util/Collector;)V
-#map(Ljava/lang/Object;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/operators/base/MapOperatorBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/MapFunction;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V

+###org/apache/flink/api/common/operators/base/ReduceOperatorBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;[ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/ReduceFunction;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;[ILjava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;[ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/ReduceFunction;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
@0.8.0
+#setCustomPartitioner(Lorg/apache/flink/api/common/functions/Partitioner;)V
+#getCustomPartitioner()Lorg/apache/flink/api/common/functions/Partitioner;
@1.1.0
+#setCombineHint(Lorg/apache/flink/api/common/operators/base/ReduceOperatorBase$CombineHint;)V
+#getCombineHint()Lorg/apache/flink/api/common/operators/base/ReduceOperatorBase$CombineHint;

+###org/apache/flink/api/common/operators/base/MapPartitionOperatorBase
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/MapPartitionFunction;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V

+###org/apache/flink/api/common/operators/base/FilterOperatorBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/FlatMapFunction;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V

+###org/apache/flink/api/common/operators/base/BulkIterationBase$TerminationCriterionAggregationConvergence
@0.6-hadoop2-incubating
+#<init>()V
+#isConverged(ILorg/apache/flink/types/LongValue;)Z
+#isConverged(ILorg/apache/flink/types/Value;)Z

+###org/apache/flink/api/common/operators/base/BulkIterationBase$PartialSolutionPlaceHolder
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/base/BulkIterationBase;Lorg/apache/flink/api/common/operators/OperatorInformation;)V
+#getContainingBulkIteration()Lorg/apache/flink/api/common/operators/base/BulkIterationBase;
+#accept(Lorg/apache/flink/util/Visitor;)V
+#getUserCodeWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;

+###org/apache/flink/api/common/operators/base/CrossOperatorBase$CrossWithLarge
@0.6-hadoop2-incubating

+###org/apache/flink/api/common/operators/base/CrossOperatorBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/CrossFunction;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;Ljava/lang/String;)V
@0.9.0-milestone-1
+#setCrossHint(Lorg/apache/flink/api/common/operators/base/CrossOperatorBase$CrossHint;)V
+#getCrossHint()Lorg/apache/flink/api/common/operators/base/CrossOperatorBase$CrossHint;

+###org/apache/flink/api/common/operators/base/GroupReduceOperatorBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;[ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/GroupReduceFunction;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;[ILjava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;[ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/GroupReduceFunction;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#setGroupOrder(Lorg/apache/flink/api/common/operators/Ordering;)V
+#getGroupOrder()Lorg/apache/flink/api/common/operators/Ordering;
+#setCombinable(Z)V
+#isCombinable()Z
@0.8.0
+#setCustomPartitioner(Lorg/apache/flink/api/common/functions/Partitioner;)V
+#getCustomPartitioner()Lorg/apache/flink/api/common/functions/Partitioner;

+###org/apache/flink/api/common/operators/base/PartitionOperatorBase$PartitionMethod
@0.7.0-hadoop2-incubating
+#values()[Lorg/apache/flink/api/common/operators/base/PartitionOperatorBase$PartitionMethod;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/operators/base/PartitionOperatorBase$PartitionMethod;

+###org/apache/flink/api/common/operators/base/DeltaIterationBase$WorksetPlaceHolder
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/base/DeltaIterationBase;Lorg/apache/flink/api/common/operators/OperatorInformation;)V
+#getContainingWorksetIteration()Lorg/apache/flink/api/common/operators/base/DeltaIterationBase;
+#accept(Lorg/apache/flink/util/Visitor;)V
+#getUserCodeWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;

+###org/apache/flink/api/common/operators/OperatorInformation
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/types/TypeInformation;)V
+#getOutputType()Lorg/apache/flink/types/TypeInformation;
+#toString()Ljava/lang/String;
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getOutputType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#<init>(Lorg/apache/flink/types/TypeInformation;)V
-#getOutputType()Lorg/apache/flink/types/TypeInformation;

+###org/apache/flink/api/common/typeutils/TypeSerializerFactory
@0.6-hadoop2-incubating
+#writeParametersToConfig(Lorg/apache/flink/configuration/Configuration;)V
+#readParametersFromConfig(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)V
+#getSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getDataType()Ljava/lang/Class;

+###org/apache/flink/api/common/typeutils/CompositeType
@0.7.0-hadoop2-incubating
+#<init>(Ljava/lang/Class;)V
+#getKey(Ljava/lang/String;ILjava/util/List;)V
+#getTypeAt(I)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#createComparator([I[ZI)Lorg/apache/flink/api/common/typeutils/TypeComparator;
@0.9.0-milestone-1
+#getFlatFields(Ljava/lang/String;)Ljava/util/List;
+#getFlatFields(Ljava/lang/String;ILjava/util/List;)V
+#getTypeAt(Ljava/lang/String;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#createComparator([I[ZILorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#hasField(Ljava/lang/String;)Z
+#isKeyType()Z
+#isSortKeyType()Z
+#getFieldNames()[Ljava/lang/String;
+#hasDeterministicFieldOrder()Z
+#getFieldIndex(Ljava/lang/String;)I
-#getKey(Ljava/lang/String;ILjava/util/List;)V
-#createComparator([I[ZI)Lorg/apache/flink/api/common/typeutils/TypeComparator;
@0.10.0
+#getTypeClass()Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/api/common/typeutils/TypeSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getLength()I
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.7.0-hadoop2-incubating
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
-#hashCode()I
-#equals(Ljava/lang/Object;)Z
@0.8.1
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
-#isStateful()Z
@0.10.0
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
@1.2.0
+#isCompatibleWith(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Z
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
-#isCompatibleWith(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
*#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;[deprecated]
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;[deprecated]

+###org/apache/flink/api/common/typeutils/TypePairComparator
@0.6-hadoop2-incubating
+#<init>()V
+#setReference(Ljava/lang/Object;)V
+#equalToReference(Ljava/lang/Object;)Z
+#compareToReference(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/CompositeTypeComparator
@0.7.0-hadoop2-incubating
+#<init>()V
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#getFlatComparator(Ljava/util/List;)V

+###org/apache/flink/api/common/typeutils/TypeComparator
@0.6-hadoop2-incubating
+#<init>()V
+#hash(Ljava/lang/Object;)I
+#setReference(Ljava/lang/Object;)V
+#equalToReference(Ljava/lang/Object;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#supportsCompareAgainstReference()Z
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#compareAgainstReference([Ljava/lang/Comparable;)I
@0.7.0-hadoop2-incubating
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
-#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I

+###org/apache/flink/api/common/typeutils/GenericPairComparator
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#setReference(Ljava/lang/Object;)V
+#equalToReference(Ljava/lang/Object;)Z
+#compareToReference(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/CompositeType$FlatFieldDescriptor
@0.7.0-hadoop2-incubating
+#<init>(ILorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getPosition()I
+#getType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#toString()Ljava/lang/String;

+###org/apache/flink/api/common/typeutils/record/RecordSerializerFactory
@0.7.0-hadoop2-incubating
+#<init>()V
+#get()Lorg/apache/flink/api/common/typeutils/record/RecordSerializerFactory;
+#writeParametersToConfig(Lorg/apache/flink/configuration/Configuration;)V
+#readParametersFromConfig(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)V
+#getSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getDataType()Ljava/lang/Class;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.0.0
-###org/apache/flink/api/common/typeutils/record/RecordSerializerFactory

+###org/apache/flink/api/common/typeutils/record/RecordPairComparator
@0.7.0-hadoop2-incubating
+#<init>([I[I[Ljava/lang/Class;)V
+#setReference(Lorg/apache/flink/types/Record;)V
+#equalToReference(Lorg/apache/flink/types/Record;)Z
+#compareToReference(Lorg/apache/flink/types/Record;)I
+#compareToReference(Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
@1.0.0
-###org/apache/flink/api/common/typeutils/record/RecordPairComparator

+###org/apache/flink/api/common/typeutils/record/RecordComparatorFactory
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>([I[Ljava/lang/Class;)V
+#<init>([I[Ljava/lang/Class;[Z)V
+#writeParametersToConfig(Lorg/apache/flink/configuration/Configuration;)V
+#readParametersFromConfig(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)V
+#createComparator()Lorg/apache/flink/api/common/typeutils/record/RecordComparator;
+#createComparator()Lorg/apache/flink/api/common/typeutils/TypeComparator;
@1.0.0
-###org/apache/flink/api/common/typeutils/record/RecordComparatorFactory

+###org/apache/flink/api/common/typeutils/record/RecordSerializer
@0.7.0-hadoop2-incubating
+#get()Lorg/apache/flink/api/common/typeutils/record/RecordSerializer;
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Lorg/apache/flink/types/Record;
+#copy(Lorg/apache/flink/types/Record;)Lorg/apache/flink/types/Record;
+#copy(Lorg/apache/flink/types/Record;Lorg/apache/flink/types/Record;)Lorg/apache/flink/types/Record;
+#getLength()I
+#serialize(Lorg/apache/flink/types/Record;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Record;
+#deserialize(Lorg/apache/flink/types/Record;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Record;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.8.1
+#duplicate()Lorg/apache/flink/api/common/typeutils/record/RecordSerializer;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
-#isStateful()Z
@0.10.0
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
@1.0.0
-###org/apache/flink/api/common/typeutils/record/RecordSerializer

+###org/apache/flink/api/common/typeutils/record/RecordPairComparatorFactory
@0.7.0-hadoop2-incubating
+#<init>()V
+#get()Lorg/apache/flink/api/common/typeutils/record/RecordPairComparatorFactory;
+#createComparator12(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;)Lorg/apache/flink/api/common/typeutils/TypePairComparator;
+#createComparator21(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;)Lorg/apache/flink/api/common/typeutils/TypePairComparator;
@1.0.0
-###org/apache/flink/api/common/typeutils/record/RecordPairComparatorFactory

+###org/apache/flink/api/common/typeutils/record/RecordComparator
@0.7.0-hadoop2-incubating
+#<init>([I[Ljava/lang/Class;)V
+#<init>([I[Ljava/lang/Class;[Z)V
+#hash(Lorg/apache/flink/types/Record;)I
+#setReference(Lorg/apache/flink/types/Record;)V
+#equalToReference(Lorg/apache/flink/types/Record;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/Record;Lorg/apache/flink/types/Record;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/Record;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/Record;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/Record;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Record;
+#duplicate()Lorg/apache/flink/api/common/typeutils/record/RecordComparator;
+#getKeyPositions()[I
+#getKeyTypes()[Ljava/lang/Class;
+#getKeysAsCopy(Lorg/apache/flink/types/Record;)[Lorg/apache/flink/types/Key;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsCompareAgainstReference()Z
+#compareAgainstReference([Ljava/lang/Comparable;)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I
@1.0.0
-###org/apache/flink/api/common/typeutils/record/RecordComparator

+###org/apache/flink/api/common/typeutils/TypeComparatorFactory
@0.6-hadoop2-incubating
+#writeParametersToConfig(Lorg/apache/flink/configuration/Configuration;)V
+#readParametersFromConfig(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)V
+#createComparator()Lorg/apache/flink/api/common/typeutils/TypeComparator;

+###org/apache/flink/api/common/typeutils/TypePairComparatorFactory
@0.6-hadoop2-incubating
+#createComparator12(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;)Lorg/apache/flink/api/common/typeutils/TypePairComparator;
+#createComparator21(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;)Lorg/apache/flink/api/common/typeutils/TypePairComparator;

+###org/apache/flink/api/common/typeutils/base/IntSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Integer;
+#copy(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;
+#getLength()I
+#serialize(Ljava/lang/Integer;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Integer;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Integer;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Ljava/lang/Integer;)Ljava/lang/Integer;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Integer;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/StringComparator
@0.6-hadoop2-incubating
+#<init>(Z)V
+#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/String;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/StringComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
@0.7.0-hadoop2-incubating
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
-#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I

+###org/apache/flink/api/common/typeutils/base/CharValueSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Lorg/apache/flink/types/CharValue;
+#copy(Lorg/apache/flink/types/CharValue;Lorg/apache/flink/types/CharValue;)Lorg/apache/flink/types/CharValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/CharValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/types/CharValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/CharValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Lorg/apache/flink/types/CharValue;)Lorg/apache/flink/types/CharValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/CharValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/StringSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/String;
+#copy(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getLength()I
+#serialize(Ljava/lang/String;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/String;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/String;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Ljava/lang/String;)Ljava/lang/String;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/String;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/array/DoublePrimitiveArraySerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()[D
+#copy([D[D)[D
+#getLength()I
+#serialize([DLorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize([DLorg/apache/flink/core/memory/DataInputView;)[D
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy([D)[D
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)[D
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/array/BooleanPrimitiveArraySerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()[Z
+#copy([Z[Z)[Z
+#getLength()I
+#serialize([ZLorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize([ZLorg/apache/flink/core/memory/DataInputView;)[Z
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy([Z)[Z
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)[Z
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/array/StringArraySerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()[Ljava/lang/String;
+#copy([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#getLength()I
+#serialize([Ljava/lang/String;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize([Ljava/lang/String;Lorg/apache/flink/core/memory/DataInputView;)[Ljava/lang/String;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy([Ljava/lang/String;)[Ljava/lang/String;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)[Ljava/lang/String;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/array/BytePrimitiveArraySerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()[B
+#copy([B[B)[B
+#getLength()I
+#serialize([BLorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize([BLorg/apache/flink/core/memory/DataInputView;)[B
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy([B)[B
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)[B
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/array/LongPrimitiveArraySerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()[J
+#copy([J[J)[J
+#getLength()I
+#serialize([JLorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize([JLorg/apache/flink/core/memory/DataInputView;)[J
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy([J)[J
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)[J
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/array/CharPrimitiveArraySerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()[C
+#copy([C[C)[C
+#getLength()I
+#serialize([CLorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize([CLorg/apache/flink/core/memory/DataInputView;)[C
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy([C)[C
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)[C
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/array/FloatPrimitiveArraySerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()[F
+#copy([F[F)[F
+#getLength()I
+#serialize([FLorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize([FLorg/apache/flink/core/memory/DataInputView;)[F
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy([F)[F
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)[F
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/array/ShortPrimitiveArraySerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()[S
+#copy([S[S)[S
+#getLength()I
+#serialize([SLorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize([SLorg/apache/flink/core/memory/DataInputView;)[S
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy([S)[S
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)[S
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/array/IntPrimitiveArraySerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()[I
+#copy([I[I)[I
+#getLength()I
+#serialize([ILorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize([ILorg/apache/flink/core/memory/DataInputView;)[I
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy([I)[I
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)[I
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/IntComparator
@0.6-hadoop2-incubating
+#<init>(Z)V
+#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Integer;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/IntComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
@0.7.0-hadoop2-incubating
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
-#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I

+###org/apache/flink/api/common/typeutils/base/BooleanValueSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Lorg/apache/flink/types/BooleanValue;
+#copy(Lorg/apache/flink/types/BooleanValue;Lorg/apache/flink/types/BooleanValue;)Lorg/apache/flink/types/BooleanValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/BooleanValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/types/BooleanValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/BooleanValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Lorg/apache/flink/types/BooleanValue;)Lorg/apache/flink/types/BooleanValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/BooleanValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/StringValueSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Lorg/apache/flink/types/StringValue;
+#copy(Lorg/apache/flink/types/StringValue;Lorg/apache/flink/types/StringValue;)Lorg/apache/flink/types/StringValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/StringValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/types/StringValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/StringValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Lorg/apache/flink/types/StringValue;)Lorg/apache/flink/types/StringValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/StringValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/GenericArraySerializer
@0.7.0-hadoop2-incubating
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()[Ljava/lang/Object;
+#copy([Ljava/lang/Object;)[Ljava/lang/Object;
+#copy([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
+#getLength()I
+#serialize([Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)[Ljava/lang/Object;
+#deserialize([Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)[Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.8.0
+#toString()Ljava/lang/String;
@0.8.1
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/GenericArraySerializer;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/base/GenericArraySerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.7.0
+#getComponentClass()Ljava/lang/Class;
+#getComponentSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/base/GenericArraySerializerSnapshot;
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/base/GenericArraySerializerConfigSnapshot;

+###org/apache/flink/api/common/typeutils/base/CharComparator
@0.6-hadoop2-incubating
+#<init>(Z)V
+#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Character;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/CharComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
@0.7.0-hadoop2-incubating
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
-#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I

+###org/apache/flink/api/common/typeutils/base/DoubleValueSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Lorg/apache/flink/types/DoubleValue;
+#copy(Lorg/apache/flink/types/DoubleValue;Lorg/apache/flink/types/DoubleValue;)Lorg/apache/flink/types/DoubleValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/DoubleValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/types/DoubleValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/DoubleValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Lorg/apache/flink/types/DoubleValue;)Lorg/apache/flink/types/DoubleValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/DoubleValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/LongComparator
@0.6-hadoop2-incubating
+#<init>(Z)V
+#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Long;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/LongComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
@0.7.0-hadoop2-incubating
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
-#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I

+###org/apache/flink/api/common/typeutils/base/ShortSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Short;
+#copy(Ljava/lang/Short;Ljava/lang/Short;)Ljava/lang/Short;
+#getLength()I
+#serialize(Ljava/lang/Short;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Short;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Short;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Ljava/lang/Short;)Ljava/lang/Short;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Short;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/DoubleComparator
@0.6-hadoop2-incubating
+#<init>(Z)V
+#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Double;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/DoubleComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
@0.7.0-hadoop2-incubating
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
-#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I

+###org/apache/flink/api/common/typeutils/base/FloatSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Float;
+#copy(Ljava/lang/Float;Ljava/lang/Float;)Ljava/lang/Float;
+#getLength()I
+#serialize(Ljava/lang/Float;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Float;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Float;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Ljava/lang/Float;)Ljava/lang/Float;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Float;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/CharSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Character;
+#copy(Ljava/lang/Character;Ljava/lang/Character;)Ljava/lang/Character;
+#getLength()I
+#serialize(Ljava/lang/Character;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Character;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Character;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Ljava/lang/Character;)Ljava/lang/Character;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Character;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/TypeSerializerSingleton
@0.7.0-hadoop2-incubating
+#<init>()V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.8.1
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/TypeSerializerSingleton;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;

+###org/apache/flink/api/common/typeutils/base/BooleanSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Boolean;
+#copy(Ljava/lang/Boolean;Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#getLength()I
+#serialize(Ljava/lang/Boolean;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Boolean;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Boolean;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Boolean;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/ShortValueSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Lorg/apache/flink/types/ShortValue;
+#copy(Lorg/apache/flink/types/ShortValue;Lorg/apache/flink/types/ShortValue;)Lorg/apache/flink/types/ShortValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/ShortValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/types/ShortValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/ShortValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Lorg/apache/flink/types/ShortValue;)Lorg/apache/flink/types/ShortValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/ShortValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/DoubleSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Double;
+#copy(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;
+#getLength()I
+#serialize(Ljava/lang/Double;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Double;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Double;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Ljava/lang/Double;)Ljava/lang/Double;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Double;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/FloatValueSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Lorg/apache/flink/types/FloatValue;
+#copy(Lorg/apache/flink/types/FloatValue;Lorg/apache/flink/types/FloatValue;)Lorg/apache/flink/types/FloatValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/FloatValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/types/FloatValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/FloatValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Lorg/apache/flink/types/FloatValue;)Lorg/apache/flink/types/FloatValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/FloatValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/BasicTypeComparator
@0.6-hadoop2-incubating
+#hash(Ljava/lang/Comparable;)I
+#setReference(Ljava/lang/Comparable;)V
+#equalToReference(Ljava/lang/Comparable;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)I
+#invertNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Ljava/lang/Comparable;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Ljava/lang/Comparable;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Comparable;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I
@0.7.0-hadoop2-incubating
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;

+###org/apache/flink/api/common/typeutils/base/ByteSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Byte;
+#copy(Ljava/lang/Byte;Ljava/lang/Byte;)Ljava/lang/Byte;
+#getLength()I
+#serialize(Ljava/lang/Byte;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Byte;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Byte;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Ljava/lang/Byte;)Ljava/lang/Byte;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Byte;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/LongSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Long;
+#copy(Ljava/lang/Long;Ljava/lang/Long;)Ljava/lang/Long;
+#getLength()I
+#serialize(Ljava/lang/Long;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Long;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Long;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Ljava/lang/Long;)Ljava/lang/Long;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Long;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/ByteValueSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Lorg/apache/flink/types/ByteValue;
+#copy(Lorg/apache/flink/types/ByteValue;Lorg/apache/flink/types/ByteValue;)Lorg/apache/flink/types/ByteValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/ByteValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/types/ByteValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/ByteValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Lorg/apache/flink/types/ByteValue;)Lorg/apache/flink/types/ByteValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/ByteValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/IntValueSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Lorg/apache/flink/types/IntValue;
+#copy(Lorg/apache/flink/types/IntValue;Lorg/apache/flink/types/IntValue;)Lorg/apache/flink/types/IntValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/IntValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/types/IntValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/IntValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Lorg/apache/flink/types/IntValue;)Lorg/apache/flink/types/IntValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/IntValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/ByteComparator
@0.6-hadoop2-incubating
+#<init>(Z)V
+#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Byte;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/ByteComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
@0.7.0-hadoop2-incubating
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
-#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I

+###org/apache/flink/api/common/typeutils/base/LongValueSerializer
@0.6-hadoop2-incubating
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Lorg/apache/flink/types/LongValue;
+#copy(Lorg/apache/flink/types/LongValue;Lorg/apache/flink/types/LongValue;)Lorg/apache/flink/types/LongValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/LongValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/types/LongValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/LongValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.7.0-hadoop2-incubating
+#copy(Lorg/apache/flink/types/LongValue;)Lorg/apache/flink/types/LongValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/LongValue;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/FloatComparator
@0.6-hadoop2-incubating
+#<init>(Z)V
+#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Float;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/FloatComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
@0.7.0-hadoop2-incubating
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
-#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I

+###org/apache/flink/api/common/typeutils/base/BooleanComparator
@0.6-hadoop2-incubating
+#<init>(Z)V
+#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Boolean;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/BooleanComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
@0.7.0-hadoop2-incubating
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
-#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I

+###org/apache/flink/api/common/typeutils/base/ShortComparator
@0.6-hadoop2-incubating
+#<init>(Z)V
+#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Short;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/ShortComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
@0.7.0-hadoop2-incubating
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
-#compare(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I

+###org/apache/flink/api/common/io/ParseException
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/api/common/io/BinaryOutputFormat$BlockBasedOutput
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/io/BinaryOutputFormat;Ljava/io/OutputStream;I)V
+#close()V
+#startRecord()V
+#write([B)V
+#write([BII)V
+#write(I)V

+###org/apache/flink/api/common/io/BlockInfo
@0.6-hadoop2-incubating
+#<init>()V
+#getInfoSize()I
+#getFirstRecordStart()J
+#setFirstRecordStart(J)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getRecordCount()J
+#getAccumulatedRecordCount()J
+#setAccumulatedRecordCount(J)V
+#setRecordCount(J)V

+###org/apache/flink/api/common/io/InflaterInputStreamFSInputWrapper
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/core/fs/FSDataInputStream;)V
+#seek(J)V
+#read()I
+#read([BII)I
+#read([B)I
@0.9.0-milestone-1
+#getPos()J
@0.9.0
-###org/apache/flink/api/common/io/InflaterInputStreamFSInputWrapper

+###org/apache/flink/api/common/io/InitializeOnMaster
@0.6-hadoop2-incubating
+#initializeGlobal(I)V

+###org/apache/flink/api/common/io/FileInputFormat$ConfigBuilder
@0.6-hadoop2-incubating
@1.0.0
-###org/apache/flink/api/common/io/FileInputFormat$ConfigBuilder

+###org/apache/flink/api/common/io/GenericInputFormat
@0.6-hadoop2-incubating
+#<init>()V
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#getStatistics(Lorg/apache/flink/api/common/io/statistics/BaseStatistics;)Lorg/apache/flink/api/common/io/statistics/BaseStatistics;
+#createInputSplits(I)[Lorg/apache/flink/core/io/GenericInputSplit;
+#getInputSplitType()Ljava/lang/Class;
+#open(Lorg/apache/flink/core/io/GenericInputSplit;)V
+#close()V
+#open(Lorg/apache/flink/core/io/InputSplit;)V
+#createInputSplits(I)[Lorg/apache/flink/core/io/InputSplit;
@0.7.0-hadoop2-incubating
+#getInputSplitAssigner([Lorg/apache/flink/core/io/GenericInputSplit;)Lorg/apache/flink/api/common/io/DefaultInputSplitAssigner;
+#getInputSplitAssigner([Lorg/apache/flink/core/io/InputSplit;)Lorg/apache/flink/core/io/InputSplitAssigner;
-#getInputSplitType()Ljava/lang/Class;

+###org/apache/flink/api/common/io/DelimitedInputFormat$ConfigBuilder
@0.6-hadoop2-incubating
@1.0.0
-###org/apache/flink/api/common/io/DelimitedInputFormat$ConfigBuilder

+###org/apache/flink/api/common/io/FileOutputFormat$OutputDirectoryMode
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/api/common/io/FileOutputFormat$OutputDirectoryMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/io/FileOutputFormat$OutputDirectoryMode;

+###org/apache/flink/api/common/io/BinaryInputFormat$BlockBasedInput
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/io/BinaryInputFormat;Lorg/apache/flink/core/fs/FSDataInputStream;I)V
+#read()I
+#read([B)I
+#read([BII)I
@1.1.0
+#<init>(Lorg/apache/flink/api/common/io/BinaryInputFormat;Lorg/apache/flink/core/fs/FSDataInputStream;IJ)V

+###org/apache/flink/api/common/io/statistics/BaseStatistics
@0.6-hadoop2-incubating
+#getTotalInputSize()J
+#getNumberOfRecords()J
+#getAverageRecordWidth()F

+###org/apache/flink/api/common/io/DelimitedInputFormat$AbstractConfigBuilder
@0.6-hadoop2-incubating
+#recordDelimiter(C)Ljava/lang/Object;
+#recordDelimiter(Ljava/lang/String;)Ljava/lang/Object;
+#recordDelimiter(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#numSamplesForStatistics(I)Ljava/lang/Object;
@0.9.0-milestone-1
-#recordDelimiter(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
@1.0.0
-###org/apache/flink/api/common/io/DelimitedInputFormat$AbstractConfigBuilder

+###org/apache/flink/api/common/io/DelimitedInputFormat
@0.6-hadoop2-incubating
+#<init>()V
+#getDelimiter()[B
+#setDelimiter([B)V
+#setDelimiter(C)V
+#setDelimiter(Ljava/lang/String;)V
+#setDelimiter(Ljava/lang/String;Ljava/lang/String;)V
+#setDelimiter(Ljava/lang/String;Ljava/nio/charset/Charset;)V
+#getLineLengthLimit()I
+#setLineLengthLimit(I)V
+#getBufferSize()I
+#setBufferSize(I)V
+#getNumLineSamples()I
+#setNumLineSamples(I)V
+#readRecord(Ljava/lang/Object;[BII)Ljava/lang/Object;
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#getStatistics(Lorg/apache/flink/api/common/io/statistics/BaseStatistics;)Lorg/apache/flink/api/common/io/FileInputFormat$FileBaseStatistics;
+#open(Lorg/apache/flink/core/fs/FileInputSplit;)V
+#reachedEnd()Z
+#nextRecord(Ljava/lang/Object;)Ljava/lang/Object;
+#close()V
+#configureDelimitedFormat(Lorg/apache/flink/api/common/operators/base/FileDataSourceBase;)Lorg/apache/flink/api/common/io/DelimitedInputFormat$ConfigBuilder;
+#open(Lorg/apache/flink/core/io/InputSplit;)V
+#getStatistics(Lorg/apache/flink/api/common/io/statistics/BaseStatistics;)Lorg/apache/flink/api/common/io/statistics/BaseStatistics;
@0.9.0-milestone-1
-#setDelimiter(Ljava/lang/String;Ljava/lang/String;)V
-#setDelimiter(Ljava/lang/String;Ljava/nio/charset/Charset;)V
@1.0.0
-#configureDelimitedFormat(Lorg/apache/flink/api/common/operators/base/FileDataSourceBase;)Lorg/apache/flink/api/common/io/DelimitedInputFormat$ConfigBuilder;
@1.1.0
+#getCurrentState()Ljava/lang/Long;
+#reopen(Lorg/apache/flink/core/fs/FileInputSplit;Ljava/lang/Long;)V
+#reopen(Lorg/apache/flink/core/io/InputSplit;Ljava/io/Serializable;)V
+#getCurrentState()Ljava/io/Serializable;
@1.2.0
+#getCharset()Ljava/nio/charset/Charset;
+#setCharset(Ljava/lang/String;)V

+###org/apache/flink/api/common/io/FileOutputFormat$ConfigBuilder
@0.6-hadoop2-incubating
@1.0.0
-###org/apache/flink/api/common/io/FileOutputFormat$ConfigBuilder

+###org/apache/flink/api/common/io/BinaryOutputFormat
@0.6-hadoop2-incubating
+#<init>()V
+#close()V
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#open(II)V
+#writeRecord(Lorg/apache/flink/core/io/IOReadableWritable;)V
+#writeRecord(Ljava/lang/Object;)V
@0.8.0
-#writeRecord(Lorg/apache/flink/core/io/IOReadableWritable;)V

+###org/apache/flink/api/common/io/SerializedOutputFormat
@0.6-hadoop2-incubating
+#<init>()V

+###org/apache/flink/api/common/io/FileOutputFormat
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/core/fs/Path;)V
+#setOutputFilePath(Lorg/apache/flink/core/fs/Path;)V
+#getOutputFilePath()Lorg/apache/flink/core/fs/Path;
+#setWriteMode(Lorg/apache/flink/core/fs/FileSystem$WriteMode;)V
+#getWriteMode()Lorg/apache/flink/core/fs/FileSystem$WriteMode;
+#setOutputDirectoryMode(Lorg/apache/flink/api/common/io/FileOutputFormat$OutputDirectoryMode;)V
+#getOutputDirectoryMode()Lorg/apache/flink/api/common/io/FileOutputFormat$OutputDirectoryMode;
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#open(II)V
+#close()V
+#initializeGlobal(I)V
+#configureFileFormat(Lorg/apache/flink/api/common/operators/base/FileDataSinkBase;)Lorg/apache/flink/api/common/io/FileOutputFormat$ConfigBuilder;
@0.8.0
+#tryCleanupOnError()V
@1.0.0
-#configureFileFormat(Lorg/apache/flink/api/common/operators/base/FileDataSinkBase;)Lorg/apache/flink/api/common/io/FileOutputFormat$ConfigBuilder;
@1.5.0
+#initDefaultsFromConfiguration(Lorg/apache/flink/configuration/Configuration;)V

+###org/apache/flink/api/common/io/GenericCsvInputFormat
@0.6-hadoop2-incubating
+#getNumberOfFieldsTotal()I
+#getNumberOfNonNullFields()I
+#getFieldDelimiter()C
+#setFieldDelimiter(C)V
+#isLenient()Z
+#setLenient(Z)V
+#isSkippingFirstLineAsHeader()Z
+#setSkipFirstLineAsHeader(Z)V
+#open(Lorg/apache/flink/core/fs/FileInputSplit;)V
+#open(Lorg/apache/flink/core/io/InputSplit;)V
@0.9.0-milestone-1
+#getCommentPrefix()[B
+#setCommentPrefix([B)V
+#setCommentPrefix(C)V
+#setCommentPrefix(Ljava/lang/String;)V
+#setCommentPrefix(Ljava/lang/String;Ljava/lang/String;)V
+#setCommentPrefix(Ljava/lang/String;Ljava/nio/charset/Charset;)V
+#getFieldDelimiter()[B
+#setFieldDelimiter([B)V
+#setFieldDelimiter(Ljava/lang/String;)V
+#enableQuotedStringParsing(C)V
+#close()V
-#getFieldDelimiter()C
@1.2.0
+#setCharset(Ljava/lang/String;)V
-#setCommentPrefix([B)V
-#setCommentPrefix(C)V
-#setCommentPrefix(Ljava/lang/String;Ljava/lang/String;)V
-#setCommentPrefix(Ljava/lang/String;Ljava/nio/charset/Charset;)V
-#setFieldDelimiter([B)V
-#setFieldDelimiter(C)V
@1.5.0
+#supportsMultiPaths()Z
@1.11.3
-#open(Lorg/apache/flink/core/fs/FileInputSplit;)V
-#open(Lorg/apache/flink/core/io/InputSplit;)V
@1.12.0
+#open(Lorg/apache/flink/core/fs/FileInputSplit;)V
+#open(Lorg/apache/flink/core/io/InputSplit;)V
@1.12.1
-#open(Lorg/apache/flink/core/fs/FileInputSplit;)V
-#open(Lorg/apache/flink/core/io/InputSplit;)V

+###org/apache/flink/api/common/io/InputFormat
@0.6-hadoop2-incubating
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#getStatistics(Lorg/apache/flink/api/common/io/statistics/BaseStatistics;)Lorg/apache/flink/api/common/io/statistics/BaseStatistics;
+#createInputSplits(I)[Lorg/apache/flink/core/io/InputSplit;
+#getInputSplitType()Ljava/lang/Class;
+#open(Lorg/apache/flink/core/io/InputSplit;)V
+#reachedEnd()Z
+#nextRecord(Ljava/lang/Object;)Ljava/lang/Object;
+#close()V
@0.7.0-hadoop2-incubating
+#getInputSplitAssigner([Lorg/apache/flink/core/io/InputSplit;)Lorg/apache/flink/core/io/InputSplitAssigner;
-#getInputSplitType()Ljava/lang/Class;

+###org/apache/flink/api/common/io/FileInputFormat
@0.6-hadoop2-incubating
+#<init>()V
+#getFilePath()Lorg/apache/flink/core/fs/Path;
+#setFilePath(Ljava/lang/String;)V
+#setFilePath(Lorg/apache/flink/core/fs/Path;)V
+#getMinSplitSize()J
+#setMinSplitSize(J)V
+#getNumSplits()I
+#setNumSplits(I)V
+#getOpenTimeout()J
+#setOpenTimeout(J)V
+#getSplitStart()J
+#getSplitLength()J
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#getStatistics(Lorg/apache/flink/api/common/io/statistics/BaseStatistics;)Lorg/apache/flink/api/common/io/FileInputFormat$FileBaseStatistics;
+#getInputSplitType()Ljava/lang/Class;
+#createInputSplits(I)[Lorg/apache/flink/core/fs/FileInputSplit;
+#open(Lorg/apache/flink/core/fs/FileInputSplit;)V
+#close()V
+#toString()Ljava/lang/String;
+#configureFileFormat(Lorg/apache/flink/api/common/operators/base/GenericDataSourceBase;)Lorg/apache/flink/api/common/io/FileInputFormat$ConfigBuilder;
+#open(Lorg/apache/flink/core/io/InputSplit;)V
+#createInputSplits(I)[Lorg/apache/flink/core/io/InputSplit;
+#getStatistics(Lorg/apache/flink/api/common/io/statistics/BaseStatistics;)Lorg/apache/flink/api/common/io/statistics/BaseStatistics;
@0.7.0-hadoop2-incubating
+#getInputSplitAssigner([Lorg/apache/flink/core/fs/FileInputSplit;)Lorg/apache/flink/api/common/io/LocatableInputSplitAssigner;
+#configureFileFormat(Lorg/apache/flink/api/common/operators/GenericDataSourceBase;)Lorg/apache/flink/api/common/io/FileInputFormat$ConfigBuilder;
+#getInputSplitAssigner([Lorg/apache/flink/core/io/InputSplit;)Lorg/apache/flink/core/io/InputSplitAssigner;
-#getInputSplitType()Ljava/lang/Class;
-#configureFileFormat(Lorg/apache/flink/api/common/operators/base/GenericDataSourceBase;)Lorg/apache/flink/api/common/io/FileInputFormat$ConfigBuilder;
@0.9.0
+#registerInflaterInputStreamFactory(Ljava/lang/String;Lorg/apache/flink/api/common/io/compression/InflaterInputStreamFactory;)V
@1.0.0
-#configureFileFormat(Lorg/apache/flink/api/common/operators/GenericDataSourceBase;)Lorg/apache/flink/api/common/io/FileInputFormat$ConfigBuilder;
@1.1.0
+#setNestedFileEnumeration(Z)V
+#getNestedFileEnumeration()Z
@1.2.0
+#setFilesFilter(Lorg/apache/flink/api/common/io/FilePathFilter;)V
+#acceptFile(Lorg/apache/flink/core/fs/FileStatus;)Z
@1.5.0
*#getFilePath()Lorg/apache/flink/core/fs/Path;[deprecated]
+#getFilePaths()[Lorg/apache/flink/core/fs/Path;
+#setFilePaths([Ljava/lang/String;)V
+#setFilePaths([Lorg/apache/flink/core/fs/Path;)V
+#supportsMultiPaths()Z[deprecated]

+###org/apache/flink/api/common/io/LocatableInputSplitAssigner
@0.7.0-hadoop2-incubating
+#<init>(Ljava/util/Collection;)V
+#<init>([Lorg/apache/flink/core/io/LocatableInputSplit;)V
+#getNextInputSplit(Ljava/lang/String;)Lorg/apache/flink/core/io/LocatableInputSplit;
+#getNumberOfLocalAssignments()I
+#getNumberOfRemoteAssignments()I
+#getNextInputSplit(Ljava/lang/String;)Lorg/apache/flink/core/io/InputSplit;
@0.9.0-milestone-1
+#getNextInputSplit(Ljava/lang/String;I)Lorg/apache/flink/core/io/LocatableInputSplit;
+#getNextInputSplit(Ljava/lang/String;I)Lorg/apache/flink/core/io/InputSplit;
-#getNextInputSplit(Ljava/lang/String;)Lorg/apache/flink/core/io/LocatableInputSplit;
-#getNextInputSplit(Ljava/lang/String;)Lorg/apache/flink/core/io/InputSplit;
@1.9.0
+#returnInputSplit(Ljava/util/List;I)V

+###org/apache/flink/api/common/io/FileInputFormat$InputSplitOpenThread
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/core/fs/FileInputSplit;J)V
+#run()V
+#waitForCompletion()Lorg/apache/flink/core/fs/FSDataInputStream;

+###org/apache/flink/api/common/io/FileOutputFormat$AbstractConfigBuilder
@0.6-hadoop2-incubating
@1.0.0
-###org/apache/flink/api/common/io/FileOutputFormat$AbstractConfigBuilder

+###org/apache/flink/api/common/io/NonParallelInput
@0.6-hadoop2-incubating

+###org/apache/flink/api/common/io/BinaryInputFormat
@0.6-hadoop2-incubating
+#<init>()V
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#createInputSplits(I)[Lorg/apache/flink/core/fs/FileInputSplit;
+#getStatistics(Lorg/apache/flink/api/common/io/statistics/BaseStatistics;)Lorg/apache/flink/api/common/io/BinaryInputFormat$SequentialStatistics;
+#open(Lorg/apache/flink/core/fs/FileInputSplit;)V
+#reachedEnd()Z
+#nextRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/core/io/IOReadableWritable;
+#getStatistics(Lorg/apache/flink/api/common/io/statistics/BaseStatistics;)Lorg/apache/flink/api/common/io/FileInputFormat$FileBaseStatistics;
+#nextRecord(Ljava/lang/Object;)Ljava/lang/Object;
+#open(Lorg/apache/flink/core/io/InputSplit;)V
+#createInputSplits(I)[Lorg/apache/flink/core/io/InputSplit;
+#getStatistics(Lorg/apache/flink/api/common/io/statistics/BaseStatistics;)Lorg/apache/flink/api/common/io/statistics/BaseStatistics;
@0.8.0
+#createBlockInfo()Lorg/apache/flink/api/common/io/BlockInfo;
-#nextRecord(Lorg/apache/flink/core/io/IOReadableWritable;)Lorg/apache/flink/core/io/IOReadableWritable;
@1.1.0
+#setBlockSize(J)V
+#getBlockSize()J
+#getCurrentState()Lorg/apache/flink/api/java/tuple/Tuple2;
+#reopen(Lorg/apache/flink/core/fs/FileInputSplit;Lorg/apache/flink/api/java/tuple/Tuple2;)V
+#reopen(Lorg/apache/flink/core/io/InputSplit;Ljava/io/Serializable;)V
+#getCurrentState()Ljava/io/Serializable;

+###org/apache/flink/api/common/io/OutputFormat
@0.6-hadoop2-incubating
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#open(II)V
+#writeRecord(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/api/common/io/FileInputFormat$FileBaseStatistics
@0.6-hadoop2-incubating
+#<init>(JJF)V
+#getLastModificationTime()J
+#getTotalInputSize()J
+#getNumberOfRecords()J
+#getAverageRecordWidth()F
+#toString()Ljava/lang/String;

+###org/apache/flink/api/common/io/FileInputFormat$AbstractConfigBuilder
@0.6-hadoop2-incubating
+#filePath(Ljava/lang/String;)Ljava/lang/Object;
@1.0.0
-###org/apache/flink/api/common/io/FileInputFormat$AbstractConfigBuilder

+###org/apache/flink/api/common/io/SerializedInputFormat
@0.6-hadoop2-incubating
+#<init>()V

+###org/apache/flink/api/common/io/DefaultInputSplitAssigner
@0.7.0-hadoop2-incubating
+#<init>([Lorg/apache/flink/core/io/InputSplit;)V
+#<init>(Ljava/util/Collection;)V
+#getNextInputSplit(Ljava/lang/String;)Lorg/apache/flink/core/io/InputSplit;
@0.9.0-milestone-1
+#getNextInputSplit(Ljava/lang/String;I)Lorg/apache/flink/core/io/InputSplit;
-#getNextInputSplit(Ljava/lang/String;)Lorg/apache/flink/core/io/InputSplit;
@1.9.0
+#returnInputSplit(Ljava/util/List;I)V

+###org/apache/flink/api/common/aggregators/Aggregator
@0.6-hadoop2-incubating
+#getAggregate()Lorg/apache/flink/types/Value;
+#aggregate(Lorg/apache/flink/types/Value;)V
+#reset()V

+###org/apache/flink/api/common/aggregators/AggregatorRegistry
@0.6-hadoop2-incubating
+#<init>()V
+#registerAggregator(Ljava/lang/String;Lorg/apache/flink/api/common/aggregators/Aggregator;)V
+#unregisterAggregator(Ljava/lang/String;)Lorg/apache/flink/api/common/aggregators/Aggregator;
+#getAllRegisteredAggregators()Ljava/util/Collection;
+#registerAggregationConvergenceCriterion(Ljava/lang/String;Lorg/apache/flink/api/common/aggregators/Aggregator;Lorg/apache/flink/api/common/aggregators/ConvergenceCriterion;)V
+#getConvergenceCriterionAggregatorName()Ljava/lang/String;
+#getConvergenceCriterion()Lorg/apache/flink/api/common/aggregators/ConvergenceCriterion;
+#addAll(Lorg/apache/flink/api/common/aggregators/AggregatorRegistry;)V
@1.2.0
-#unregisterAggregator(Ljava/lang/String;)Lorg/apache/flink/api/common/aggregators/Aggregator;

+###org/apache/flink/api/common/aggregators/LongZeroConvergence
@0.6-hadoop2-incubating
+#<init>()V
+#isConverged(ILorg/apache/flink/types/LongValue;)Z
+#isConverged(ILorg/apache/flink/types/Value;)Z

+###org/apache/flink/api/common/aggregators/LongSumAggregator
@0.6-hadoop2-incubating
+#<init>()V
+#getAggregate()Lorg/apache/flink/types/LongValue;
+#aggregate(Lorg/apache/flink/types/LongValue;)V
+#aggregate(J)V
+#reset()V
+#aggregate(Lorg/apache/flink/types/Value;)V
+#getAggregate()Lorg/apache/flink/types/Value;

+###org/apache/flink/api/common/aggregators/DoubleSumAggregator
@0.6-hadoop2-incubating
+#<init>()V
+#getAggregate()Lorg/apache/flink/types/DoubleValue;
+#aggregate(Lorg/apache/flink/types/DoubleValue;)V
+#aggregate(D)V
+#reset()V
+#aggregate(Lorg/apache/flink/types/Value;)V
+#getAggregate()Lorg/apache/flink/types/Value;

+###org/apache/flink/api/common/aggregators/ConvergenceCriterion
@0.6-hadoop2-incubating
+#isConverged(ILorg/apache/flink/types/Value;)Z

+###org/apache/flink/api/common/aggregators/DoubleZeroConvergence
@0.6-hadoop2-incubating
+#<init>()V
+#isConverged(ILorg/apache/flink/types/DoubleValue;)Z
+#isConverged(ILorg/apache/flink/types/Value;)Z

+###org/apache/flink/api/common/aggregators/AggregatorWithName
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/aggregators/Aggregator;)V
+#getName()Ljava/lang/String;
+#getAggregator()Lorg/apache/flink/api/common/aggregators/Aggregator;

+###org/apache/flink/api/common/typeinfo/BasicTypeInfo
@0.7.0-hadoop2-incubating
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createComparator(Z)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getInfoFor(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/BasicTypeInfo;
@0.9.0-milestone-1
+#canCastTo(Lorg/apache/flink/api/common/typeinfo/BasicTypeInfo;)Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createComparator(ZLorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;
-#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
-#createComparator(Z)Lorg/apache/flink/api/common/typeutils/TypeComparator;
@0.10.0
+#shouldAutocastTo(Lorg/apache/flink/api/common/typeinfo/BasicTypeInfo;)Z
+#canEqual(Ljava/lang/Object;)Z
-#canCastTo(Lorg/apache/flink/api/common/typeinfo/BasicTypeInfo;)Z

+###org/apache/flink/api/common/typeinfo/TypeInformation
@0.7.0-hadoop2-incubating
+#<init>()V
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getTotalFields()I
@0.9.0-milestone-1
+#getGenericParameters()Ljava/util/List;
+#isSortKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
-#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@0.10.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
@1.0.0
+#of(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#of(Lorg/apache/flink/api/common/typeinfo/TypeHint;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.2.0
+#getGenericParameters()Ljava/util/Map;
-#getGenericParameters()Ljava/util/List;

+###org/apache/flink/api/common/typeinfo/AtomicType
@0.7.0-hadoop2-incubating
+#createComparator(Z)Lorg/apache/flink/api/common/typeutils/TypeComparator;
@0.9.0-milestone-1
+#createComparator(ZLorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;
-#createComparator(Z)Lorg/apache/flink/api/common/typeutils/TypeComparator;

+###org/apache/flink/api/common/typeinfo/NothingTypeInfo
@0.7.0-hadoop2-incubating
+#<init>()V
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@0.9.0-milestone-1
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
-#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@0.10.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeinfo/PrimitiveArrayTypeInfo
@0.7.0-hadoop2-incubating
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;
+#getInfoFor(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/PrimitiveArrayTypeInfo;
@0.9.0-milestone-1
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#equals(Ljava/lang/Object;)Z
-#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@0.10.0
+#getComponentClass()Ljava/lang/Class;
+#getComponentType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
+#createComparator(ZLorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/base/array/PrimitiveArrayComparator;
+#createComparator(ZLorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;

+###org/apache/flink/api/common/typeinfo/BasicArrayTypeInfo
@0.7.0-hadoop2-incubating
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#getComponentTypeClass()Ljava/lang/Class;
+#getComponentInfo()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#isKeyType()Z
+#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;
+#getInfoFor(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/BasicArrayTypeInfo;
@0.9.0-milestone-1
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
-#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@0.10.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;Ljava/lang/Boolean;)V
@1.6.0
+#<init>(Ljava/lang/String;ZZ)V
+#<init>(Ljava/lang/String;Ljava/lang/Boolean;[BZ)V
+#<init>(Ljava/lang/String;Ljava/lang/Boolean;[B)V
+#toString()Ljava/lang/String;
@1.10.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/common/cache/DistributedCache
@0.6-hadoop2-incubating
+#<init>()V
+#writeFileInfoToConfig(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;Lorg/apache/flink/configuration/Configuration;)V
+#readFileInfoFromConfig(Lorg/apache/flink/configuration/Configuration;)Ljava/util/Set;
+#setCopyTasks(Ljava/util/Map;)V
+#getFile(Ljava/lang/String;)Ljava/io/File;
@0.9.0
+#<init>(Ljava/util/Map;)V
-#<init>()V
-#setCopyTasks(Ljava/util/Map;)V
@1.10.0
+#parseCachedFilesFromString(Ljava/util/List;)Ljava/util/List;

+###org/apache/flink/api/common/PlanExecutor
@0.6-hadoop2-incubating
+#<init>()V
+#executePlan(Lorg/apache/flink/api/common/Plan;)Lorg/apache/flink/api/common/JobExecutionResult;
+#getOptimizerPlanAsJSON(Lorg/apache/flink/api/common/Plan;)Ljava/lang/String;
+#createLocalExecutor()Lorg/apache/flink/api/common/PlanExecutor;
+#createRemoteExecutor(Ljava/lang/String;I[Ljava/lang/String;)Lorg/apache/flink/api/common/PlanExecutor;
@0.9.0-milestone-1
+#createLocalExecutor(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/api/common/PlanExecutor;
-#createLocalExecutor()Lorg/apache/flink/api/common/PlanExecutor;
@0.9.0
+#setPrintStatusDuringExecution(Z)V
+#isPrintingStatusDuringExecution()Z
@0.10.0
+#start()V
+#stop()V
+#isRunning()Z
+#endSession(Lorg/apache/flink/api/common/JobID;)V
+#createRemoteExecutor(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;[Ljava/net/URL;[Ljava/net/URL;)Lorg/apache/flink/api/common/PlanExecutor;
-#createRemoteExecutor(Ljava/lang/String;I[Ljava/lang/String;)Lorg/apache/flink/api/common/PlanExecutor;
@1.1.0
+#createRemoteExecutor(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;Ljava/util/List;Ljava/util/List;)Lorg/apache/flink/api/common/PlanExecutor;
-#createRemoteExecutor(Ljava/lang/String;ILorg/apache/flink/configuration/Configuration;[Ljava/net/URL;[Ljava/net/URL;)Lorg/apache/flink/api/common/PlanExecutor;
@1.9.0
-#endSession(Lorg/apache/flink/api/common/JobID;)V
@1.10.0
-###org/apache/flink/api/common/PlanExecutor

+###org/apache/flink/api/common/Plan
@0.6-hadoop2-incubating
+#<init>(Ljava/util/Collection;Ljava/lang/String;)V
+#<init>(Ljava/util/Collection;Ljava/lang/String;I)V
+#<init>(Lorg/apache/flink/api/common/operators/base/GenericDataSinkBase;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/operators/base/GenericDataSinkBase;Ljava/lang/String;I)V
+#<init>(Ljava/util/Collection;)V
+#<init>(Ljava/util/Collection;I)V
+#<init>(Lorg/apache/flink/api/common/operators/base/GenericDataSinkBase;)V
+#<init>(Lorg/apache/flink/api/common/operators/base/GenericDataSinkBase;I)V
+#addDataSink(Lorg/apache/flink/api/common/operators/base/GenericDataSinkBase;)V
+#getDataSinks()Ljava/util/Collection;
+#getJobName()Ljava/lang/String;
+#setJobName(Ljava/lang/String;)V
+#getDefaultParallelism()I
+#setDefaultParallelism(I)V
+#getPostPassClassName()Ljava/lang/String;
+#accept(Lorg/apache/flink/util/Visitor;)V
+#registerCachedFile(Ljava/lang/String;Lorg/apache/flink/api/common/cache/DistributedCache$DistributedCacheEntry;)V
+#getCachedFiles()Ljava/util/Set;
+#getMaximumParallelism()I
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/operators/GenericDataSinkBase;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/operators/GenericDataSinkBase;Ljava/lang/String;I)V
+#<init>(Lorg/apache/flink/api/common/operators/GenericDataSinkBase;)V
+#<init>(Lorg/apache/flink/api/common/operators/GenericDataSinkBase;I)V
+#addDataSink(Lorg/apache/flink/api/common/operators/GenericDataSinkBase;)V
-#<init>(Lorg/apache/flink/api/common/operators/base/GenericDataSinkBase;Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/api/common/operators/base/GenericDataSinkBase;Ljava/lang/String;I)V
-#<init>(Lorg/apache/flink/api/common/operators/base/GenericDataSinkBase;)V
-#<init>(Lorg/apache/flink/api/common/operators/base/GenericDataSinkBase;I)V
-#addDataSink(Lorg/apache/flink/api/common/operators/base/GenericDataSinkBase;)V
@0.8.0
+#setNumberOfExecutionRetries(I)V
+#getNumberOfExecutionRetries()I
@0.9.0-milestone-1
+#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
+#setExecutionConfig(Lorg/apache/flink/api/common/ExecutionConfig;)V
-#setNumberOfExecutionRetries(I)V
@0.10.0
+#getJobId()Lorg/apache/flink/api/common/JobID;
+#setJobId(Lorg/apache/flink/api/common/JobID;)V
+#setSessionTimeout(J)V
+#getSessionTimeout()J
+#getExecutionRetryDelay()J
@1.0.0
+#getRestartStrategyConfiguration()Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$RestartStrategyConfiguration;
-#getNumberOfExecutionRetries()I
-#getExecutionRetryDelay()J
@1.1.0
-#getRestartStrategyConfiguration()Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$RestartStrategyConfiguration;
@1.10.0
-#setSessionTimeout(J)V
-#getSessionTimeout()J

+###org/apache/flink/api/common/accumulators/DoubleCounter
@0.6-hadoop2-incubating
+#<init>()V
+#add(Ljava/lang/Double;)V
+#getLocalValue()Ljava/lang/Double;
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#resetLocal()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#toString()Ljava/lang/String;
+#getLocalValue()Ljava/lang/Object;
+#add(Ljava/lang/Object;)V
@0.9.0-milestone-1
+#write(Ljava/io/ObjectOutputStream;)V
+#read(Ljava/io/ObjectInputStream;)V
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#clone()Ljava/lang/Object;
+#getLocalValue()Ljava/io/Serializable;
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
-#getLocalValue()Ljava/lang/Object;
@0.9.0
-#write(Ljava/io/ObjectOutputStream;)V
-#read(Ljava/io/ObjectInputStream;)V
@0.10.0
+#add(D)V
@1.1.0
+#<init>(D)V
+#clone()Lorg/apache/flink/api/common/accumulators/DoubleCounter;
+#getLocalValuePrimitive()D

+###org/apache/flink/api/common/accumulators/Histogram
@0.6-hadoop2-incubating
+#<init>()V
+#add(Ljava/lang/Integer;)V
+#getLocalValue()Ljava/util/Map;
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#resetLocal()V
+#toString()Ljava/lang/String;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getLocalValue()Ljava/lang/Object;
+#add(Ljava/lang/Object;)V
@0.9.0-milestone-1
+#getLocalValue()Ljava/util/TreeMap;
+#write(Ljava/io/ObjectOutputStream;)V
+#read(Ljava/io/ObjectInputStream;)V
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#clone()Ljava/lang/Object;
+#getLocalValue()Ljava/io/Serializable;
-#getLocalValue()Ljava/util/Map;
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
-#getLocalValue()Ljava/lang/Object;
@0.9.0
-#write(Ljava/io/ObjectOutputStream;)V
-#read(Ljava/io/ObjectInputStream;)V

+###org/apache/flink/api/common/accumulators/IntCounter
@0.6-hadoop2-incubating
+#<init>()V
+#add(Ljava/lang/Integer;)V
+#getLocalValue()Ljava/lang/Integer;
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#resetLocal()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#toString()Ljava/lang/String;
+#getLocalValue()Ljava/lang/Object;
+#add(Ljava/lang/Object;)V
@0.9.0-milestone-1
+#write(Ljava/io/ObjectOutputStream;)V
+#read(Ljava/io/ObjectInputStream;)V
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#clone()Ljava/lang/Object;
+#getLocalValue()Ljava/io/Serializable;
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
-#getLocalValue()Ljava/lang/Object;
@0.9.0
-#write(Ljava/io/ObjectOutputStream;)V
-#read(Ljava/io/ObjectInputStream;)V
@0.10.0
+#add(I)V
@1.1.0
+#<init>(I)V
+#clone()Lorg/apache/flink/api/common/accumulators/IntCounter;
+#getLocalValuePrimitive()I

+###org/apache/flink/api/common/accumulators/LongCounter
@0.6-hadoop2-incubating
+#<init>()V
+#add(Ljava/lang/Long;)V
+#getLocalValue()Ljava/lang/Long;
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#resetLocal()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#toString()Ljava/lang/String;
+#getLocalValue()Ljava/lang/Object;
+#add(Ljava/lang/Object;)V
@0.9.0-milestone-1
+#write(Ljava/io/ObjectOutputStream;)V
+#read(Ljava/io/ObjectInputStream;)V
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#clone()Ljava/lang/Object;
+#getLocalValue()Ljava/io/Serializable;
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
-#getLocalValue()Ljava/lang/Object;
@0.9.0
+#clone()Lorg/apache/flink/api/common/accumulators/LongCounter;
-#write(Ljava/io/ObjectOutputStream;)V
-#read(Ljava/io/ObjectInputStream;)V
@0.10.0
+#<init>(J)V
+#add(J)V
+#getLocalValuePrimitive()J

+###org/apache/flink/api/common/accumulators/SimpleAccumulator
@0.6-hadoop2-incubating

+###org/apache/flink/api/common/accumulators/AccumulatorHelper
@0.6-hadoop2-incubating
+#<init>()V
+#mergeInto(Ljava/util/Map;Ljava/util/Map;)V
+#compareAccumulatorTypes(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)V
+#toResultMap(Ljava/util/Map;)Ljava/util/Map;
+#getAccumulatorsFormated(Ljava/util/Map;)Ljava/lang/String;
+#getResultsFormated(Ljava/util/Map;)Ljava/lang/String;
+#resetAndClearAccumulators(Ljava/util/Map;)V
@0.9.0-milestone-1
+#copy(Ljava/util/Map;)Ljava/util/Map;
@0.10.0
+#deserializeAccumulators(Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/util/Map;
-#getAccumulatorsFormated(Ljava/util/Map;)Ljava/lang/String;
@1.1.0
-#resetAndClearAccumulators(Ljava/util/Map;)V
@1.4.0
+#getResultsFormatted(Ljava/util/Map;)Ljava/lang/String;
-#getResultsFormated(Ljava/util/Map;)Ljava/lang/String;
@1.10.0
+#deserializeAndUnwrapAccumulators(Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/util/Map;

+###org/apache/flink/api/common/accumulators/Accumulator
@0.6-hadoop2-incubating
+#add(Ljava/lang/Object;)V
+#getLocalValue()Ljava/lang/Object;
+#resetLocal()V
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
@0.9.0-milestone-1
+#getLocalValue()Ljava/io/Serializable;
+#write(Ljava/io/ObjectOutputStream;)V
+#read(Ljava/io/ObjectInputStream;)V
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
-#getLocalValue()Ljava/lang/Object;
@0.9.0
-#write(Ljava/io/ObjectOutputStream;)V
-#read(Ljava/io/ObjectInputStream;)V

+###org/apache/flink/api/common/InvalidProgramException
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
@0.7.0-hadoop2-incubating
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/api/common/JobExecutionResult
@0.6-hadoop2-incubating
+#<init>(JLjava/util/Map;)V
+#getNetRuntime()J
+#getAccumulatorResult(Ljava/lang/String;)Ljava/lang/Object;
+#getAllAccumulatorResults()Ljava/util/Map;
+#getIntCounterResult(Ljava/lang/String;)Ljava/lang/Integer;
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;JLjava/util/Map;)V
-#<init>(JLjava/util/Map;)V
@0.9.0
+#getNetRuntime(Ljava/util/concurrent/TimeUnit;)J
@0.10.0
+#fromJobSubmissionResult(Lorg/apache/flink/api/common/JobSubmissionResult;)Lorg/apache/flink/api/common/JobExecutionResult;
@1.0.0
*#getIntCounterResult(Ljava/lang/String;)Ljava/lang/Integer;[deprecated]
@1.1.0
*#fromJobSubmissionResult(Lorg/apache/flink/api/common/JobSubmissionResult;)Lorg/apache/flink/api/common/JobExecutionResult;[deprecated]
@1.10.0
+#isJobExecutionResult()Z
+#getJobExecutionResult()Lorg/apache/flink/api/common/JobExecutionResult;
+#toString()Ljava/lang/String;

+###org/apache/flink/api/common/ProgramDescription
@0.6-hadoop2-incubating
+#getDescription()Ljava/lang/String;

+###org/apache/flink/api/common/Program
@0.6-hadoop2-incubating
+#getPlan([Ljava/lang/String;)Lorg/apache/flink/api/common/Plan;
@1.10.0
-###org/apache/flink/api/common/Program

+###org/apache/flink/api/common/distributions/SimpleDistribution
@0.6-hadoop2-incubating
+#<init>()V
+#<init>([Lorg/apache/flink/types/Key;)V
+#<init>([[Lorg/apache/flink/types/Key;)V
+#getNumberOfFields()I
+#getBucketBoundary(II)[Lorg/apache/flink/types/Key;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
@1.0.0
+#getBucketBoundary(II)[Ljava/lang/Object;
@1.1.0
-###org/apache/flink/api/common/distributions/SimpleDistribution

+###org/apache/flink/api/common/distributions/UniformIntegerDistribution
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(II)V
+#getBucketBoundary(II)[Lorg/apache/flink/types/IntValue;
+#getNumberOfFields()I
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getBucketBoundary(II)[Lorg/apache/flink/types/Key;
@1.0.0
+#getBucketBoundary(II)[Ljava/lang/Object;
-#getBucketBoundary(II)[Lorg/apache/flink/types/Key;
@1.1.0
-###org/apache/flink/api/common/distributions/UniformIntegerDistribution

+###org/apache/flink/api/common/distributions/UniformDoubleDistribution
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(DD)V
+#getBucketBoundary(II)[Lorg/apache/flink/types/DoubleValue;
+#getNumberOfFields()I
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getBucketBoundary(II)[Lorg/apache/flink/types/Key;
@1.0.0
+#getBucketBoundary(II)[Ljava/lang/Object;
-#getBucketBoundary(II)[Lorg/apache/flink/types/Key;
@1.1.0
-###org/apache/flink/api/common/distributions/UniformDoubleDistribution

+###org/apache/flink/api/common/distributions/SimpleIntegerDistribution
@0.6-hadoop2-incubating
+#<init>()V
+#<init>([I)V
+#<init>([Lorg/apache/flink/types/IntValue;)V
+#<init>([[Lorg/apache/flink/types/IntValue;)V
+#getNumberOfFields()I
+#getBucketBoundary(II)[Lorg/apache/flink/types/IntValue;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getBucketBoundary(II)[Lorg/apache/flink/types/Key;
@1.0.0
+#getBucketBoundary(II)[Ljava/lang/Object;
@1.1.0
-###org/apache/flink/api/common/distributions/SimpleIntegerDistribution

+###org/apache/flink/api/common/distributions/DataDistribution
@0.6-hadoop2-incubating
+#getBucketBoundary(II)[Lorg/apache/flink/types/Key;
+#getNumberOfFields()I
@1.0.0
+#getBucketBoundary(II)[Ljava/lang/Object;
-#getBucketBoundary(II)[Lorg/apache/flink/types/Key;
@1.1.0
+#getKeyTypes()[Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/api/common/functions/RichGroupReduceFunction$Combinable
@0.7.0-hadoop2-incubating
@1.0.0
-###org/apache/flink/api/common/functions/RichGroupReduceFunction$Combinable

+###org/apache/flink/api/common/functions/RichFlatJoinFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#join(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/FlatMapFunction
@0.6-hadoop2-incubating
+#flatMap(Ljava/lang/Object;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/RichReduceFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#reduce(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/common/functions/RichMapPartitionFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#mapPartition(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/FlatCombineFunction
@0.6-hadoop2-incubating
+#combine(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V
@0.9.0-milestone-1
-###org/apache/flink/api/common/functions/FlatCombineFunction

+###org/apache/flink/api/common/functions/ReduceFunction
@0.6-hadoop2-incubating
+#reduce(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/common/functions/RichCrossFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#cross(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/common/functions/Function
@0.6-hadoop2-incubating

+###org/apache/flink/api/common/functions/GenericCollectorMap
@0.6-hadoop2-incubating
+#map(Ljava/lang/Object;Lorg/apache/flink/util/Collector;)V
@1.0.0
-###org/apache/flink/api/common/functions/GenericCollectorMap

+###org/apache/flink/api/common/functions/RichFunction
@0.6-hadoop2-incubating
+#open(Lorg/apache/flink/configuration/Configuration;)V
+#close()V
+#getRuntimeContext()Lorg/apache/flink/api/common/functions/RuntimeContext;
+#setRuntimeContext(Lorg/apache/flink/api/common/functions/RuntimeContext;)V
@0.10.0
+#getIterationRuntimeContext()Lorg/apache/flink/api/common/functions/IterationRuntimeContext;

+###org/apache/flink/api/common/functions/RichFilterFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#filter(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/functions/JoinFunction
@0.6-hadoop2-incubating
+#join(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/common/functions/RichMapFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#map(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/common/functions/util/NoOpFunction
@0.7.0-hadoop2-incubating
+#<init>()V

+###org/apache/flink/api/common/functions/util/RuntimeUDFContext
@0.7.0-hadoop2-incubating
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;)V
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Ljava/util/Map;)V
+#getTaskName()Ljava/lang/String;
+#getNumberOfParallelSubtasks()I
+#getIndexOfThisSubtask()I
+#getIntCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/IntCounter;
+#getLongCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/LongCounter;
+#getHistogram(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/Histogram;
+#getDoubleCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/DoubleCounter;
+#addAccumulator(Ljava/lang/String;Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#getAccumulator(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getAllAccumulators()Ljava/util/HashMap;
+#setBroadcastVariable(Ljava/lang/String;Ljava/util/List;)V
+#getBroadcastVariable(Ljava/lang/String;)Ljava/util/List;
+#getDistributedCache()Lorg/apache/flink/api/common/cache/DistributedCache;
+#getUserCodeClassLoader()Ljava/lang/ClassLoader;
@0.8.0
+#getBroadcastVariableWithInitializer(Ljava/lang/String;Lorg/apache/flink/api/common/functions/BroadcastVariableInitializer;)Ljava/lang/Object;
+#clearBroadcastVariable(Ljava/lang/String;)V
+#clearAllBroadcastVariables()V
-#getTaskName()Ljava/lang/String;
-#getNumberOfParallelSubtasks()I
-#getIndexOfThisSubtask()I
-#getIntCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/IntCounter;
-#getLongCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/LongCounter;
-#getHistogram(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/Histogram;
-#getDoubleCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/DoubleCounter;
-#addAccumulator(Ljava/lang/String;Lorg/apache/flink/api/common/accumulators/Accumulator;)V
-#getAccumulator(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/Accumulator;
-#getAllAccumulators()Ljava/util/HashMap;
-#getDistributedCache()Lorg/apache/flink/api/common/cache/DistributedCache;
-#getUserCodeClassLoader()Ljava/lang/ClassLoader;
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;)V
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Ljava/util/Map;)V
@0.10.0
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;)V
@1.0.0
+#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;)V
@1.1.0
+#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/MetricGroup;)V
+#hasBroadcastVariable(Ljava/lang/String;)Z
-#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;)V
@1.11.0
+#getExternalResourceInfos(Ljava/lang/String;)Ljava/util/Set;
@1.13.0
+#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/api/common/JobID;)V
+#getJobId()Lorg/apache/flink/api/common/JobID;
@1.14.0
+#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/groups/OperatorMetricGroup;)V
+#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/groups/OperatorMetricGroup;Lorg/apache/flink/api/common/JobID;)V
-#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/MetricGroup;)V
-#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/MetricGroup;Lorg/apache/flink/api/common/JobID;)V

+###org/apache/flink/api/common/functions/util/CopyingListCollector
@0.7.0-hadoop2-incubating
+#<init>(Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#collect(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/api/common/functions/util/CopyingIterator
@0.7.0-hadoop2-incubating
+#<init>(Ljava/util/Iterator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#iterator()Ljava/util/Iterator;
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/apache/flink/api/common/functions/util/ListCollector
@0.7.0-hadoop2-incubating
+#<init>(Ljava/util/List;)V
+#collect(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/api/common/functions/util/FunctionUtils
@0.6-hadoop2-incubating
+#<init>()V
+#openFunction(Lorg/apache/flink/api/common/functions/Function;Lorg/apache/flink/configuration/Configuration;)V
+#closeFunction(Lorg/apache/flink/api/common/functions/Function;)V
+#setFunctionRuntimeContext(Lorg/apache/flink/api/common/functions/Function;Lorg/apache/flink/api/common/functions/RuntimeContext;)V
+#getFunctionRuntimeContext(Lorg/apache/flink/api/common/functions/Function;Lorg/apache/flink/api/common/functions/RuntimeContext;)Lorg/apache/flink/api/common/functions/RuntimeContext;
+#isLambdaFunction(Lorg/apache/flink/api/common/functions/Function;)Z
@0.7.0-hadoop2-incubating
+#checkAndExtractLambdaMethod(Lorg/apache/flink/api/common/functions/Function;)Ljava/lang/reflect/Method;
-#isLambdaFunction(Lorg/apache/flink/api/common/functions/Function;)Z
@0.10.0
-#<init>()V
@1.2.0
-#checkAndExtractLambdaMethod(Lorg/apache/flink/api/common/functions/Function;)Ljava/lang/reflect/Method;

+###org/apache/flink/api/common/functions/InvalidTypesException
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/api/common/functions/MapFunction
@0.6-hadoop2-incubating
+#map(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/common/functions/AbstractRichFunction
@0.6-hadoop2-incubating
+#<init>()V
+#setRuntimeContext(Lorg/apache/flink/api/common/functions/RuntimeContext;)V
+#getRuntimeContext()Lorg/apache/flink/api/common/functions/RuntimeContext;
+#getIterationRuntimeContext()Lorg/apache/flink/api/common/functions/IterationRuntimeContext;
+#open(Lorg/apache/flink/configuration/Configuration;)V
+#close()V

+###org/apache/flink/api/common/functions/RuntimeContext
@0.6-hadoop2-incubating
+#getTaskName()Ljava/lang/String;
+#getNumberOfParallelSubtasks()I
+#getIndexOfThisSubtask()I
+#addAccumulator(Ljava/lang/String;Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#getAccumulator(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getAllAccumulators()Ljava/util/HashMap;
+#getIntCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/IntCounter;
+#getLongCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/LongCounter;
+#getDoubleCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/DoubleCounter;
+#getHistogram(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/Histogram;
+#getBroadcastVariable(Ljava/lang/String;)Ljava/util/Collection;
+#getDistributedCache()Lorg/apache/flink/api/common/cache/DistributedCache;
@0.7.0-hadoop2-incubating
+#getUserCodeClassLoader()Ljava/lang/ClassLoader;
+#getBroadcastVariable(Ljava/lang/String;)Ljava/util/List;
-#getBroadcastVariable(Ljava/lang/String;)Ljava/util/Collection;
@0.8.0
+#getBroadcastVariableWithInitializer(Ljava/lang/String;Lorg/apache/flink/api/common/functions/BroadcastVariableInitializer;)Ljava/lang/Object;
@0.9.0-milestone-1
+#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
@0.10.0
+#getAllAccumulators()Ljava/util/Map;[deprecated]
+#getKeyValueState(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;
+#getKeyValueState(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;
-#getAllAccumulators()Ljava/util/HashMap;
@1.0.0
+#getAttemptNumber()I
+#getTaskNameWithSubtasks()Ljava/lang/String;
+#getState(Lorg/apache/flink/api/common/state/ValueStateDescriptor;)Lorg/apache/flink/api/common/state/ValueState;
+#getListState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
+#getReducingState(Lorg/apache/flink/api/common/state/ReducingStateDescriptor;)Lorg/apache/flink/api/common/state/ReducingState;
*#getKeyValueState(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;[deprecated]
*#getKeyValueState(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;[deprecated]
@1.1.0
+#getMetricGroup()Lorg/apache/flink/metrics/MetricGroup;
+#hasBroadcastVariable(Ljava/lang/String;)Z
@1.2.0
-#getKeyValueState(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;[deprecated]
-#getKeyValueState(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;[deprecated]
@1.3.0
+#getMaxNumberOfParallelSubtasks()I
+#getFoldingState(Lorg/apache/flink/api/common/state/FoldingStateDescriptor;)Lorg/apache/flink/api/common/state/FoldingState;[deprecated]
+#getMapState(Lorg/apache/flink/api/common/state/MapStateDescriptor;)Lorg/apache/flink/api/common/state/MapState;
@1.4.0
+#getAggregatingState(Lorg/apache/flink/api/common/state/AggregatingStateDescriptor;)Lorg/apache/flink/api/common/state/AggregatingState;
@1.11.0
+#getExternalResourceInfos(Ljava/lang/String;)Ljava/util/Set;
-#getFoldingState(Lorg/apache/flink/api/common/state/FoldingStateDescriptor;)Lorg/apache/flink/api/common/state/FoldingState;[deprecated]
@1.12.0
+#registerUserCodeClassLoaderReleaseHookIfAbsent(Ljava/lang/String;Ljava/lang/Runnable;)V
-#getAllAccumulators()Ljava/util/Map;[deprecated]
@1.13.0
+#getJobId()Lorg/apache/flink/api/common/JobID;
@1.14.0
+#getMetricGroup()Lorg/apache/flink/metrics/groups/OperatorMetricGroup;
-#getMetricGroup()Lorg/apache/flink/metrics/MetricGroup;

+###org/apache/flink/api/common/functions/RichCoGroupFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#coGroup(Ljava/lang/Iterable;Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/IterationRuntimeContext
@0.6-hadoop2-incubating
+#getSuperstepNumber()I
+#getIterationAggregator(Ljava/lang/String;)Lorg/apache/flink/api/common/aggregators/Aggregator;
+#getPreviousIterationAggregate(Ljava/lang/String;)Lorg/apache/flink/types/Value;

+###org/apache/flink/api/common/functions/RichGroupReduceFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#reduce(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V
+#combine(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V
@1.0.0
-#combine(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/RichJoinFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#join(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/common/functions/CoGroupFunction
@0.6-hadoop2-incubating
+#coGroup(Ljava/lang/Iterable;Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/CrossFunction
@0.6-hadoop2-incubating
+#cross(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/common/functions/CombineFunction
@0.6-hadoop2-incubating
+#combine(Ljava/lang/Iterable;)Ljava/lang/Object;

+###org/apache/flink/api/common/functions/RichFlatMapFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#flatMap(Ljava/lang/Object;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/MapPartitionFunction
@0.7.0-hadoop2-incubating
+#mapPartition(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/GroupReduceFunction
@0.6-hadoop2-incubating
+#reduce(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/FilterFunction
@0.6-hadoop2-incubating
+#filter(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/functions/FlatJoinFunction
@0.6-hadoop2-incubating
+#join(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/RichFlatCombineFunction
@0.7.0-hadoop2-incubating
+#<init>()V
+#combine(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V
@0.9.0-milestone-1
-###org/apache/flink/api/common/functions/RichFlatCombineFunction

+###org/apache/flink/types/ResettableValue
@0.6-hadoop2-incubating
+#setValue(Lorg/apache/flink/types/Value;)V

+###org/apache/flink/types/NullFieldException
@0.7.0-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(I)V
+#getFieldPos()I
@0.10.0
+#<init>(ILjava/lang/Throwable;)V

+###org/apache/flink/types/ByteValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(B)V
+#getValue()B
+#setValue(B)V
+#setValue(Lorg/apache/flink/types/ByteValue;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/flink/types/ByteValue;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getMaxNormalizedKeyLen()I
+#copyNormalizedKey(Lorg/apache/flink/core/memory/MemorySegment;II)V
+#getBinaryLength()I
+#copyTo(Lorg/apache/flink/types/ByteValue;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Ljava/lang/Object;)I
+#setValue(Lorg/apache/flink/types/Value;)V
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/ByteValue;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/DeserializationException
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/types/Pair
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/types/Key;Lorg/apache/flink/types/Key;)V
+#getFirst()Lorg/apache/flink/types/Key;
+#setFirst(Lorg/apache/flink/types/Key;)V
+#getSecond()Lorg/apache/flink/types/Key;
+#setSecond(Lorg/apache/flink/types/Key;)V
+#toString()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Lorg/apache/flink/types/Pair;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Ljava/lang/Object;)I
@1.1.0
-###org/apache/flink/types/Pair

+###org/apache/flink/types/ValueUtil
@0.6-hadoop2-incubating
+#<init>()V
+#toFlinkValueType(Ljava/lang/Object;)Lorg/apache/flink/types/Value;
@0.10.0
-#<init>()V
@1.0.0
-###org/apache/flink/types/ValueUtil

+###org/apache/flink/types/DoubleValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(D)V
+#getValue()D
+#setValue(D)V
+#setValue(Lorg/apache/flink/types/DoubleValue;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/flink/types/DoubleValue;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getBinaryLength()I
+#copyTo(Lorg/apache/flink/types/DoubleValue;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Ljava/lang/Object;)I
+#setValue(Lorg/apache/flink/types/Value;)V
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/DoubleValue;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/StringValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/CharSequence;)V
+#<init>(Lorg/apache/flink/types/StringValue;)V
+#<init>(Lorg/apache/flink/types/StringValue;II)V
+#setLength(I)V
+#getCharArray()[C
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/CharSequence;)V
+#setValue(Lorg/apache/flink/types/StringValue;)V
+#setValue(Lorg/apache/flink/types/StringValue;II)V
+#setValue(Ljava/lang/CharSequence;II)V
+#setValue(Ljava/nio/CharBuffer;)V
+#setValue([CII)V
+#setValueAscii([BII)V
+#substring(I)Lorg/apache/flink/types/StringValue;
+#substring(II)Lorg/apache/flink/types/StringValue;
+#substring(Lorg/apache/flink/types/StringValue;I)V
+#substring(Lorg/apache/flink/types/StringValue;II)V
+#find(Ljava/lang/CharSequence;)I
+#find(Ljava/lang/CharSequence;I)I
+#startsWith(Ljava/lang/CharSequence;I)Z
+#startsWith(Ljava/lang/CharSequence;)Z
+#append(C)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
+#append(Lorg/apache/flink/types/StringValue;)Ljava/lang/Appendable;
+#append(Lorg/apache/flink/types/StringValue;II)Ljava/lang/Appendable;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/flink/types/StringValue;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#length()I
+#charAt(I)C
+#subSequence(II)Ljava/lang/CharSequence;
+#getMaxNormalizedKeyLen()I
+#copyNormalizedKey(Lorg/apache/flink/core/memory/MemorySegment;II)V
+#getBinaryLength()I
+#copyTo(Lorg/apache/flink/types/StringValue;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readString(Ljava/io/DataInput;)Ljava/lang/String;
+#writeString(Ljava/lang/CharSequence;Ljava/io/DataOutput;)V
+#copyString(Ljava/io/DataInput;Ljava/io/DataOutput;)V
+#compareTo(Ljava/lang/Object;)I
+#setValue(Lorg/apache/flink/types/Value;)V
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/StringValue;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/KeyFieldOutOfBoundsException
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(I)V
+#getFieldNumber()I
@0.7.0-hadoop2-incubating
+#<init>(ILjava/lang/Throwable;)V

+###org/apache/flink/types/CharValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(C)V
+#getValue()C
+#setValue(C)V
+#setValue(Lorg/apache/flink/types/CharValue;)V
+#toString()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Lorg/apache/flink/types/CharValue;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getMaxNormalizedKeyLen()I
+#copyNormalizedKey(Lorg/apache/flink/core/memory/MemorySegment;II)V
+#getBinaryLength()I
+#copyTo(Lorg/apache/flink/types/CharValue;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Ljava/lang/Object;)I
+#setValue(Lorg/apache/flink/types/Value;)V
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/CharValue;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/Value
@0.6-hadoop2-incubating

+###org/apache/flink/types/ShortValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(S)V
+#getValue()S
+#setValue(S)V
+#setValue(Lorg/apache/flink/types/ShortValue;)V
+#toString()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Lorg/apache/flink/types/ShortValue;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getMaxNormalizedKeyLen()I
+#copyNormalizedKey(Lorg/apache/flink/core/memory/MemorySegment;II)V
+#getBinaryLength()I
+#copyTo(Lorg/apache/flink/types/ShortValue;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Ljava/lang/Object;)I
+#setValue(Lorg/apache/flink/types/Value;)V
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/ShortValue;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/NullKeyFieldException
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(I)V
+#getFieldNumber()I
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/types/NullFieldException;)V

+###org/apache/flink/types/parser/FieldParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLjava/lang/Object;)I
+#getLastResult()Ljava/lang/Object;
+#createValue()Ljava/lang/Object;
+#getErrorState()Lorg/apache/flink/types/parser/FieldParser$ParseErrorState;
+#getParserForType(Ljava/lang/Class;)Ljava/lang/Class;
@0.9.0-milestone-1
+#parseField([BII[BLjava/lang/Object;)I
+#delimiterNext([BI[B)Z
-#parseField([BIICLjava/lang/Object;)I
@1.1.0
+#resetErrorStateAndParse([BII[BLjava/lang/Object;)I
-#parseField([BII[BLjava/lang/Object;)I
@1.2.0
+#getCharset()Ljava/nio/charset/Charset;
+#setCharset(Ljava/nio/charset/Charset;)V
@1.2.1
+#endsWithDelimiter([BI[B)Z

+###org/apache/flink/types/parser/DoubleParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLjava/lang/Double;)I
+#createValue()Ljava/lang/Double;
+#getLastResult()Ljava/lang/Double;
+#parseField([BII)D
+#parseField([BIIC)D
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLjava/lang/Double;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLjava/lang/Double;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/ShortParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLjava/lang/Short;)I
+#createValue()Ljava/lang/Short;
+#getLastResult()Ljava/lang/Short;
+#parseField([BII)S
+#parseField([BIIC)S
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLjava/lang/Short;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLjava/lang/Short;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/ShortValueParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLorg/apache/flink/types/ShortValue;)I
+#createValue()Lorg/apache/flink/types/ShortValue;
+#getLastResult()Lorg/apache/flink/types/ShortValue;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLorg/apache/flink/types/ShortValue;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLorg/apache/flink/types/ShortValue;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/LongValueParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLorg/apache/flink/types/LongValue;)I
+#createValue()Lorg/apache/flink/types/LongValue;
+#getLastResult()Lorg/apache/flink/types/LongValue;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLorg/apache/flink/types/LongValue;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLorg/apache/flink/types/LongValue;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/LongParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLjava/lang/Long;)I
+#createValue()Ljava/lang/Long;
+#getLastResult()Ljava/lang/Long;
+#parseField([BII)J
+#parseField([BIIC)J
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLjava/lang/Long;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLjava/lang/Long;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/StringParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLjava/lang/String;)I
+#createValue()Ljava/lang/String;
+#getLastResult()Ljava/lang/String;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#enableQuotedStringParsing(B)V
+#parseField([BII[BLjava/lang/String;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLjava/lang/String;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/FloatValueParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLorg/apache/flink/types/FloatValue;)I
+#createValue()Lorg/apache/flink/types/FloatValue;
+#getLastResult()Lorg/apache/flink/types/FloatValue;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLorg/apache/flink/types/FloatValue;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLorg/apache/flink/types/FloatValue;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/IntValueParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLorg/apache/flink/types/IntValue;)I
+#createValue()Lorg/apache/flink/types/IntValue;
+#getLastResult()Lorg/apache/flink/types/IntValue;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLorg/apache/flink/types/IntValue;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLorg/apache/flink/types/IntValue;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/StringValueParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLorg/apache/flink/types/StringValue;)I
+#createValue()Lorg/apache/flink/types/StringValue;
+#getLastResult()Lorg/apache/flink/types/StringValue;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#enableQuotedStringParsing(B)V
+#parseField([BII[BLorg/apache/flink/types/StringValue;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLorg/apache/flink/types/StringValue;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/ByteParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLjava/lang/Byte;)I
+#createValue()Ljava/lang/Byte;
+#getLastResult()Ljava/lang/Byte;
+#parseField([BII)B
+#parseField([BIIC)B
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLjava/lang/Byte;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLjava/lang/Byte;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/FieldParser$ParseErrorState
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/types/parser/FieldParser$ParseErrorState;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/types/parser/FieldParser$ParseErrorState;

+###org/apache/flink/types/parser/DoubleValueParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLorg/apache/flink/types/DoubleValue;)I
+#createValue()Lorg/apache/flink/types/DoubleValue;
+#getLastResult()Lorg/apache/flink/types/DoubleValue;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLorg/apache/flink/types/DoubleValue;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLorg/apache/flink/types/DoubleValue;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/FloatParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLjava/lang/Float;)I
+#createValue()Ljava/lang/Float;
+#getLastResult()Ljava/lang/Float;
+#parseField([BII)F
+#parseField([BIIC)F
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLjava/lang/Float;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLjava/lang/Float;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/IntParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLjava/lang/Integer;)I
+#createValue()Ljava/lang/Integer;
+#getLastResult()Ljava/lang/Integer;
+#parseField([BII)I
+#parseField([BIIC)I
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLjava/lang/Integer;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLjava/lang/Integer;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/parser/ByteValueParser
@0.6-hadoop2-incubating
+#<init>()V
+#parseField([BIICLorg/apache/flink/types/ByteValue;)I
+#createValue()Lorg/apache/flink/types/ByteValue;
+#getLastResult()Lorg/apache/flink/types/ByteValue;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BIICLjava/lang/Object;)I
@0.9.0-milestone-1
+#parseField([BII[BLorg/apache/flink/types/ByteValue;)I
+#parseField([BII[BLjava/lang/Object;)I
-#parseField([BIICLorg/apache/flink/types/ByteValue;)I
-#parseField([BIICLjava/lang/Object;)I

+###org/apache/flink/types/MapValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Lorg/apache/flink/types/Value;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#put(Lorg/apache/flink/types/Value;Lorg/apache/flink/types/Value;)Lorg/apache/flink/types/Value;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Lorg/apache/flink/types/Value;
+#size()I
+#values()Ljava/util/Collection;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/types/Record
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Lorg/apache/flink/types/Value;)V
+#<init>(Lorg/apache/flink/types/Value;Lorg/apache/flink/types/Value;)V
+#<init>(I)V
+#getNumFields()I
+#setNumFields(I)V
+#makeSpace(I)V
+#getField(ILjava/lang/Class;)Lorg/apache/flink/types/Value;
+#getField(ILorg/apache/flink/types/Value;)Lorg/apache/flink/types/Value;
+#getFieldInto(ILorg/apache/flink/types/Value;)Z
+#getFieldsInto([I[Lorg/apache/flink/types/Value;)Z
+#getFieldsIntoCheckingNull([I[Lorg/apache/flink/types/Value;)V
+#setField(ILorg/apache/flink/types/Value;)V
+#addField(Lorg/apache/flink/types/Value;)V
+#removeField(I)V
+#isNull(I)Z
+#setNull(I)V
+#setNull(J)V
+#setNull([J)V
+#clear()V
+#concatenate(Lorg/apache/flink/types/Record;)V
+#unionFields(Lorg/apache/flink/types/Record;)V
+#copyTo(Lorg/apache/flink/types/Record;)V
+#getBinaryLength()I
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#createCopy()Lorg/apache/flink/types/Record;
+#copyFrom(Lorg/apache/flink/types/Record;[I[I)V
+#equalsFields([I[Lorg/apache/flink/types/Value;[Lorg/apache/flink/types/Value;)Z
+#updateBinaryRepresenation()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#serialize(Lorg/apache/flink/core/memory/DataOutputView;)J
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)V
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/Record;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/Nothing
@0.6-hadoop2-incubating

+###org/apache/flink/types/IntValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(I)V
+#getValue()I
+#setValue(I)V
+#setValue(Lorg/apache/flink/types/IntValue;)V
+#toString()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Lorg/apache/flink/types/IntValue;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getMaxNormalizedKeyLen()I
+#copyNormalizedKey(Lorg/apache/flink/core/memory/MemorySegment;II)V
+#getBinaryLength()I
+#copyTo(Lorg/apache/flink/types/IntValue;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Ljava/lang/Object;)I
+#setValue(Lorg/apache/flink/types/Value;)V
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/IntValue;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/Key
@0.6-hadoop2-incubating
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/flink/types/BooleanValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Z)V
+#get()Z
+#set(Z)V
+#getValue()Z
+#setValue(Z)V
+#setValue(Lorg/apache/flink/types/BooleanValue;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/apache/flink/types/BooleanValue;)I
+#toString()Ljava/lang/String;
+#getBinaryLength()I
+#copyTo(Lorg/apache/flink/types/BooleanValue;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#getMaxNormalizedKeyLen()I
+#copyNormalizedKey(Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compareTo(Ljava/lang/Object;)I
+#setValue(Lorg/apache/flink/types/Value;)V
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/BooleanValue;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/NullValue
@0.6-hadoop2-incubating
+#getInstance()Lorg/apache/flink/types/NullValue;
+#<init>()V
+#toString()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Lorg/apache/flink/types/NullValue;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getMaxNormalizedKeyLen()I
+#copyNormalizedKey(Lorg/apache/flink/core/memory/MemorySegment;II)V
+#getBinaryLength()I
+#copyTo(Lorg/apache/flink/types/NullValue;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Ljava/lang/Object;)I
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/NullValue;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/CopyableValue
@0.6-hadoop2-incubating
+#getBinaryLength()I
+#copyTo(Ljava/lang/Object;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
@0.10.0
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/FloatValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(F)V
+#getValue()F
+#setValue(F)V
+#setValue(Lorg/apache/flink/types/FloatValue;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/flink/types/FloatValue;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getBinaryLength()I
+#copyTo(Lorg/apache/flink/types/FloatValue;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Ljava/lang/Object;)I
+#setValue(Lorg/apache/flink/types/Value;)V
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/FloatValue;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/NormalizableKey
@0.6-hadoop2-incubating
+#getMaxNormalizedKeyLen()I
+#copyNormalizedKey(Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/types/ListValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#iterator()Ljava/util/Iterator;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#add(ILorg/apache/flink/types/Value;)V
+#add(Lorg/apache/flink/types/Value;)Z
+#addAll(Ljava/util/Collection;)Z
+#addAll(ILjava/util/Collection;)Z
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#containsAll(Ljava/util/Collection;)Z
+#get(I)Lorg/apache/flink/types/Value;
+#indexOf(Ljava/lang/Object;)I
+#isEmpty()Z
+#lastIndexOf(Ljava/lang/Object;)I
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#remove(I)Lorg/apache/flink/types/Value;
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#set(ILorg/apache/flink/types/Value;)Lorg/apache/flink/types/Value;
+#size()I
+#subList(II)Ljava/util/List;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#remove(I)Ljava/lang/Object;
+#add(ILjava/lang/Object;)V
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z

+###org/apache/flink/types/LongValue
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(J)V
+#getValue()J
+#setValue(J)V
+#setValue(Lorg/apache/flink/types/LongValue;)V
+#toString()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Lorg/apache/flink/types/LongValue;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getMaxNormalizedKeyLen()I
+#copyNormalizedKey(Lorg/apache/flink/core/memory/MemorySegment;II)V
+#getBinaryLength()I
+#copyTo(Lorg/apache/flink/types/LongValue;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#compareTo(Ljava/lang/Object;)I
+#setValue(Lorg/apache/flink/types/Value;)V
+#copyTo(Ljava/lang/Object;)V
@0.10.0
+#copy()Lorg/apache/flink/types/LongValue;
+#copy()Ljava/lang/Object;

+###org/apache/flink/types/JavaToValueConverter
@0.7.0-hadoop2-incubating
+#<init>()V
+#convertBoxedJavaType(Ljava/lang/Object;)Lorg/apache/flink/types/Value;
+#convertValueType(Lorg/apache/flink/types/Value;)Ljava/lang/Object;

+###org/apache/flink/core/protocols/VersionedProtocol
@0.6-hadoop2-incubating
@0.9.0-milestone-1
-###org/apache/flink/core/protocols/VersionedProtocol

+###org/apache/flink/core/io/InputSplitSource
@0.7.0-hadoop2-incubating
+#createInputSplits(I)[Lorg/apache/flink/core/io/InputSplit;
+#getInputSplitAssigner([Lorg/apache/flink/core/io/InputSplit;)Lorg/apache/flink/core/io/InputSplitAssigner;

+###org/apache/flink/core/io/InputSplit
@0.6-hadoop2-incubating
+#getSplitNumber()I

+###org/apache/flink/core/io/GenericInputSplit
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(II)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getSplitNumber()I
+#getTotalNumberOfSplits()I
+#toString()Ljava/lang/String;
@0.7.0-hadoop2-incubating
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.9.0
-#<init>()V
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/core/io/InputSplitAssigner
@0.7.0-hadoop2-incubating
+#getNextInputSplit(Ljava/lang/String;)Lorg/apache/flink/core/io/InputSplit;
@0.9.0-milestone-1
+#getNextInputSplit(Ljava/lang/String;I)Lorg/apache/flink/core/io/InputSplit;
-#getNextInputSplit(Ljava/lang/String;)Lorg/apache/flink/core/io/InputSplit;
@1.9.0
+#returnInputSplit(Ljava/util/List;I)V

+###org/apache/flink/core/io/StringRecord
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/core/io/StringRecord;)V
+#<init>([B)V
+#getBytes()[B
+#charAt(I)I
+#find(Ljava/lang/String;)I
+#find(Ljava/lang/String;I)I
+#set(Ljava/lang/String;)V
+#set([B)V
+#set(Lorg/apache/flink/core/io/StringRecord;)V
+#getLength()I
+#set([BII)V
+#append([BII)V
+#clear()V
+#toString()Ljava/lang/String;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#skip(Ljava/io/DataInput;)V
+#skipFully(Ljava/io/DataInput;I)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#decode([B)Ljava/lang/String;
+#decode([BII)Ljava/lang/String;
+#decode([BIIZ)Ljava/lang/String;
+#encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
+#encode(Ljava/lang/String;Z)Ljava/nio/ByteBuffer;
+#readString(Ljava/io/DataInput;)Ljava/lang/String;
+#writeString(Ljava/io/DataOutput;Ljava/lang/String;)I
+#validateUTF8([B)V
+#validateUTF8([BII)V
+#bytesToCodePoint(Ljava/nio/ByteBuffer;)I
+#utf8Length(Ljava/lang/String;)I
@0.9.0-milestone-1
-###org/apache/flink/core/io/StringRecord

+###org/apache/flink/core/io/IOReadableWritable
@0.6-hadoop2-incubating
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/core/io/LocatableInputSplit
@0.6-hadoop2-incubating
+#<init>(I[Ljava/lang/String;)V
+#<init>()V
+#getHostnames()[Ljava/lang/String;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getSplitNumber()I
@0.7.0-hadoop2-incubating
+#<init>(ILjava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@0.9.0
-#<init>()V
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/core/memory/SeekableDataOutputView
@0.6-hadoop2-incubating
+#setWritePosition(J)V

+###org/apache/flink/core/memory/OutputViewDataOutputStreamWrapper
@0.6-hadoop2-incubating
+#<init>(Ljava/io/DataOutputStream;)V
+#skipBytesToWrite(I)V
+#write(Lorg/apache/flink/core/memory/DataInputView;I)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeShort(I)V
+#writeChar(I)V
+#writeInt(I)V
+#writeLong(J)V
+#writeFloat(F)V
+#writeDouble(D)V
+#writeBytes(Ljava/lang/String;)V
+#writeChars(Ljava/lang/String;)V
+#writeUTF(Ljava/lang/String;)V
@0.8.0
+#flush()V
+#close()V
@1.0.0
-###org/apache/flink/core/memory/OutputViewDataOutputStreamWrapper

+###org/apache/flink/core/memory/DataOutputViewStream
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/core/memory/DataOutputView;)V
+#write(I)V
+#write([BII)V
@0.9.0-milestone-1
-###org/apache/flink/core/memory/DataOutputViewStream

+###org/apache/flink/core/memory/OutputViewObjectOutputStreamWrapper
@0.6-hadoop2-incubating
+#<init>(Ljava/io/ObjectOutputStream;)V
+#skipBytesToWrite(I)V
+#write(Lorg/apache/flink/core/memory/DataInputView;I)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeShort(I)V
+#writeChar(I)V
+#writeInt(I)V
+#writeLong(J)V
+#writeFloat(F)V
+#writeDouble(D)V
+#writeBytes(Ljava/lang/String;)V
+#writeChars(Ljava/lang/String;)V
+#writeUTF(Ljava/lang/String;)V
@1.0.0
-###org/apache/flink/core/memory/OutputViewObjectOutputStreamWrapper

+###org/apache/flink/core/memory/MemorySegmentSource
@0.6-hadoop2-incubating
+#nextSegment()Lorg/apache/flink/core/memory/MemorySegment;

+###org/apache/flink/core/memory/DataInputView
@0.6-hadoop2-incubating
+#skipBytesToRead(I)V
+#read([BII)I
+#read([B)I

+###org/apache/flink/core/memory/DataOutputView
@0.6-hadoop2-incubating
+#skipBytesToWrite(I)V
+#write(Lorg/apache/flink/core/memory/DataInputView;I)V

+###org/apache/flink/core/memory/MemorySegment
@0.6-hadoop2-incubating
+#<init>([B)V
+#isFreed()Z
+#free()V
+#size()I
+#wrap(II)Ljava/nio/ByteBuffer;
+#get(I)B
+#put(IB)V
+#get(I[B)V
+#put(I[B)V
+#get(I[BII)V
+#put(I[BII)V
+#getBoolean(I)Z
+#putBoolean(IZ)V
+#getChar(I)C
+#putChar(IC)V
+#getShort(I)S
+#putShort(IS)V
+#getInt(I)I
+#getIntLittleEndian(I)I
+#getIntBigEndian(I)I
+#putInt(II)V
+#putIntLittleEndian(II)V
+#putIntBigEndian(II)V
+#getLong(I)J
+#getLongLittleEndian(I)J
+#getLongBigEndian(I)J
+#putLong(IJ)V
+#putLongLittleEndian(IJ)V
+#putLongBigEndian(IJ)V
+#getFloat(I)F
+#getFloatLittleEndian(I)F
+#getFloatBigEndian(I)F
+#putFloat(IF)V
+#putFloatLittleEndian(IF)V
+#putFloatBigEndian(IF)V
+#getDouble(I)D
+#getDoubleLittleEndian(I)D
+#getDoubleBigEndian(I)D
+#putDouble(ID)V
+#putDoubleLittleEndian(ID)V
+#putDoubleBigEndian(ID)V
+#get(Ljava/io/DataOutput;II)V
+#put(Ljava/io/DataInput;II)V
+#get(ILjava/nio/ByteBuffer;I)V
+#put(ILjava/nio/ByteBuffer;I)V
+#copyTo(ILorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/core/memory/MemorySegment;III)I
+#swapBytes(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/core/memory/MemorySegment;[BIII)V
@0.10.0
+#isOffHeap()Z
+#getOwner()Ljava/lang/Object;
+#getCharLittleEndian(I)C
+#getCharBigEndian(I)C
+#putCharLittleEndian(IC)V
+#putCharBigEndian(IC)V
+#getShortLittleEndian(I)S
+#getShortBigEndian(I)S
+#putShortLittleEndian(IS)V
+#putShortBigEndian(IS)V
+#compare(Lorg/apache/flink/core/memory/MemorySegment;III)I
+#swapBytes([BLorg/apache/flink/core/memory/MemorySegment;III)V
-#<init>([B)V
-#compare(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/core/memory/MemorySegment;III)I
-#swapBytes(Lorg/apache/flink/core/memory/MemorySegment;Lorg/apache/flink/core/memory/MemorySegment;[BIII)V
@1.5.0
+#getArray()[B
+#getAddress()J
@1.9.0
+#copyToUnsafe(ILjava/lang/Object;II)V
+#copyFromUnsafe(ILjava/lang/Object;II)V
+#equalTo(Lorg/apache/flink/core/memory/MemorySegment;III)Z
+#getHeapMemory()[B
@1.10.0
+#compare(Lorg/apache/flink/core/memory/MemorySegment;IIII)I
@1.12.2
+#processAsByteBuffer(Ljava/util/function/Function;)Ljava/lang/Object;
+#processAsByteBuffer(Ljava/util/function/Consumer;)V

+###org/apache/flink/core/memory/SeekableDataInputView
@0.6-hadoop2-incubating
+#setReadPosition(J)V

+###org/apache/flink/core/memory/DataInputViewStream
@0.7.0-hadoop2-incubating
+#<init>(Lorg/apache/flink/core/memory/DataInputView;)V
+#read()I
+#read([BII)I
@0.9.0-milestone-1
-###org/apache/flink/core/memory/DataInputViewStream

+###org/apache/flink/core/memory/InputViewDataInputStreamWrapper
@0.6-hadoop2-incubating
+#<init>(Ljava/io/DataInputStream;)V
+#skipBytesToRead(I)V
+#read([BII)I
+#read([B)I
+#readFully([B)V
+#readFully([BII)V
+#skipBytes(I)I
+#readBoolean()Z
+#readByte()B
+#readUnsignedByte()I
+#readShort()S
+#readUnsignedShort()I
+#readChar()C
+#readInt()I
+#readLong()J
+#readFloat()F
+#readDouble()D
+#readLine()Ljava/lang/String;
+#readUTF()Ljava/lang/String;
@0.9.0-milestone-1
+#close()V
@0.10.0
*#readLine()Ljava/lang/String;[deprecated]
@1.0.0
-###org/apache/flink/core/memory/InputViewDataInputStreamWrapper

+###org/apache/flink/core/memory/InputViewObjectInputStreamWrapper
@0.6-hadoop2-incubating
+#<init>(Ljava/io/ObjectInputStream;)V
+#skipBytesToRead(I)V
+#read([BII)I
+#read([B)I
+#readFully([B)V
+#readFully([BII)V
+#skipBytes(I)I
+#readBoolean()Z
+#readByte()B
+#readUnsignedByte()I
+#readShort()S
+#readUnsignedShort()I
+#readChar()C
+#readInt()I
+#readLong()J
+#readFloat()F
+#readDouble()D
+#readLine()Ljava/lang/String;
+#readUTF()Ljava/lang/String;
@1.0.0
-###org/apache/flink/core/memory/InputViewObjectInputStreamWrapper

+###org/apache/flink/core/memory/MemoryUtils
@0.6-hadoop2-incubating

+###org/apache/flink/core/fs/FileSystem$FSKey
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.2.0
+#toString()Ljava/lang/String;
@1.3.0
-###org/apache/flink/core/fs/FileSystem$FSKey

+###org/apache/flink/core/fs/FSDataInputStream
@0.6-hadoop2-incubating
+#<init>()V
+#seek(J)V
@0.9.0-milestone-1
+#getPos()J

+###org/apache/flink/core/fs/FileStatus
@0.6-hadoop2-incubating
+#getLen()J
+#getBlockSize()J
+#getReplication()S
+#getModificationTime()J
+#getAccessTime()J
+#isDir()Z
+#getPath()Lorg/apache/flink/core/fs/Path;

+###org/apache/flink/core/fs/FileSystem
@0.6-hadoop2-incubating
+#<init>()V
+#getLocalFileSystem()Lorg/apache/flink/core/fs/FileSystem;
+#get(Ljava/net/URI;)Lorg/apache/flink/core/fs/FileSystem;
+#getWorkingDirectory()Lorg/apache/flink/core/fs/Path;
+#getUri()Ljava/net/URI;
+#initialize(Ljava/net/URI;)V
+#getFileStatus(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FileStatus;
+#getFileBlockLocations(Lorg/apache/flink/core/fs/FileStatus;JJ)[Lorg/apache/flink/core/fs/BlockLocation;
+#open(Lorg/apache/flink/core/fs/Path;I)Lorg/apache/flink/core/fs/FSDataInputStream;
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FSDataInputStream;
+#getDefaultBlockSize()J
+#listStatus(Lorg/apache/flink/core/fs/Path;)[Lorg/apache/flink/core/fs/FileStatus;
+#exists(Lorg/apache/flink/core/fs/Path;)Z
+#delete(Lorg/apache/flink/core/fs/Path;Z)Z
+#mkdirs(Lorg/apache/flink/core/fs/Path;)Z
+#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#rename(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Z
+#initOutPathLocalFS(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem$WriteMode;Z)Z
+#initOutPathDistFS(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem$WriteMode;Z)Z
+#isDistributedFS()Z
+#getNumberOfBlocks(Lorg/apache/flink/core/fs/FileStatus;)I
@0.9.0-milestone-1
+#getHomeDirectory()Lorg/apache/flink/core/fs/Path;
@1.0.0
+#setDefaultScheme(Lorg/apache/flink/configuration/Configuration;)V
-#getNumberOfBlocks(Lorg/apache/flink/core/fs/FileStatus;)I
@1.1.0
+#isFlinkSupportedScheme(Ljava/lang/String;)Z
@1.2.0
+#createAndSetFileSystemCloseableRegistryForThread()V
+#closeAndDisposeFileSystemCloseableRegistryForThread()V
+#getUnguardedFileSystem(Ljava/net/URI;)Lorg/apache/flink/core/fs/FileSystem;
@1.3.0
*#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/core/fs/FSDataOutputStream;[deprecated]
*#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/core/fs/FSDataOutputStream;[deprecated]
+#create(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem$WriteMode;)Lorg/apache/flink/core/fs/FSDataOutputStream;
-#createAndSetFileSystemCloseableRegistryForThread()V
-#closeAndDisposeFileSystemCloseableRegistryForThread()V
@1.3.2
+#getKind()Lorg/apache/flink/core/fs/FileSystemKind;
@1.4.0
+#initialize(Lorg/apache/flink/configuration/Configuration;)V
+#getDefaultFsUri()Ljava/net/URI;
*#getDefaultBlockSize()J[deprecated]
-#setDefaultScheme(Lorg/apache/flink/configuration/Configuration;)V
-#isFlinkSupportedScheme(Ljava/lang/String;)Z
-#initialize(Ljava/net/URI;)V
@1.6.0
+#createRecoverableWriter()Lorg/apache/flink/core/fs/RecoverableWriter;
@1.9.0
*#initialize(Lorg/apache/flink/configuration/Configuration;)V[deprecated]
+#initialize(Lorg/apache/flink/configuration/Configuration;Lorg/apache/flink/core/plugin/PluginManager;)V
@1.11.0
*#getKind()Lorg/apache/flink/core/fs/FileSystemKind;[deprecated]

+###org/apache/flink/core/fs/FileSystem$WriteMode
@0.6-hadoop2-incubating
+#values()[Lorg/apache/flink/core/fs/FileSystem$WriteMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/core/fs/FileSystem$WriteMode;

+###org/apache/flink/core/fs/BlockLocation
@0.6-hadoop2-incubating
+#getHosts()[Ljava/lang/String;
+#getOffset()J
+#getLength()J

+###org/apache/flink/core/fs/FSDataOutputStream
@0.6-hadoop2-incubating
+#<init>()V
@0.10.0
+#flush()V
+#sync()V
@1.2.0
+#getPos()J
@1.3.0
+#close()V

+###org/apache/flink/core/fs/local/LocalFileSystem
@0.6-hadoop2-incubating
+#<init>()V
+#getFileBlockLocations(Lorg/apache/flink/core/fs/FileStatus;JJ)[Lorg/apache/flink/core/fs/BlockLocation;
+#getFileStatus(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FileStatus;
+#getUri()Ljava/net/URI;
+#getWorkingDirectory()Lorg/apache/flink/core/fs/Path;
+#initialize(Ljava/net/URI;)V
+#open(Lorg/apache/flink/core/fs/Path;I)Lorg/apache/flink/core/fs/FSDataInputStream;
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FSDataInputStream;
+#listStatus(Lorg/apache/flink/core/fs/Path;)[Lorg/apache/flink/core/fs/FileStatus;
+#delete(Lorg/apache/flink/core/fs/Path;Z)Z
+#mkdirs(Lorg/apache/flink/core/fs/Path;)Z
+#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#rename(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Z
+#isDistributedFS()Z
@0.9.0-milestone-1
+#getHomeDirectory()Lorg/apache/flink/core/fs/Path;
@1.3.0
+#create(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem$WriteMode;)Lorg/apache/flink/core/fs/FSDataOutputStream;
-#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/core/fs/FSDataOutputStream;
@1.3.2
+#getKind()Lorg/apache/flink/core/fs/FileSystemKind;
@1.4.0
+#getLocalFsURI()Ljava/net/URI;
+#getSharedInstance()Lorg/apache/flink/core/fs/local/LocalFileSystem;
-#initialize(Ljava/net/URI;)V
-#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/core/fs/FSDataOutputStream;
@1.5.0
+#exists(Lorg/apache/flink/core/fs/Path;)Z
@1.6.0
+#createRecoverableWriter()Lorg/apache/flink/core/fs/local/LocalRecoverableWriter;
+#pathToFile(Lorg/apache/flink/core/fs/Path;)Ljava/io/File;
+#createRecoverableWriter()Lorg/apache/flink/core/fs/RecoverableWriter;

+###org/apache/flink/core/fs/local/LocalFileStatus
@0.6-hadoop2-incubating
+#<init>(Ljava/io/File;Lorg/apache/flink/core/fs/FileSystem;)V
+#getAccessTime()J
+#getBlockSize()J
+#getLen()J
+#getModificationTime()J
+#getReplication()S
+#isDir()Z
+#getPath()Lorg/apache/flink/core/fs/Path;
+#getFile()Ljava/io/File;
@1.2.0
+#toString()Ljava/lang/String;
@1.12.0
+#getBlockLocations()[Lorg/apache/flink/core/fs/BlockLocation;

+###org/apache/flink/core/fs/local/LocalBlockLocation
@0.6-hadoop2-incubating
+#<init>(Ljava/lang/String;J)V
+#getHosts()[Ljava/lang/String;
+#getLength()J
+#getOffset()J
+#compareTo(Lorg/apache/flink/core/fs/BlockLocation;)I
+#compareTo(Ljava/lang/Object;)I
@1.12.0
+#<init>(J)V
-#<init>(Ljava/lang/String;J)V

+###org/apache/flink/core/fs/local/LocalDataInputStream
@0.6-hadoop2-incubating
+#<init>(Ljava/io/File;)V
+#seek(J)V
+#read()I
+#read([BII)I
+#close()V
+#available()I
+#skip(J)J
@0.9.0-milestone-1
+#getPos()J

+###org/apache/flink/core/fs/local/LocalDataOutputStream
@0.6-hadoop2-incubating
+#<init>(Ljava/io/File;)V
+#write(I)V
+#write([BII)V
+#close()V
@0.10.0
+#flush()V
+#sync()V
@1.2.0
+#getPos()J
@1.15.0
+#write([B)V

+###org/apache/flink/core/fs/FileInputSplit
@0.6-hadoop2-incubating
+#<init>(ILorg/apache/flink/core/fs/Path;JJ[Ljava/lang/String;)V
+#<init>()V
+#getPath()Lorg/apache/flink/core/fs/Path;
+#getStart()J
+#getLength()J
+#getHostNames()[Ljava/lang/String;
+#getSplitNumber()I
+#toString()Ljava/lang/String;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
@0.7.0-hadoop2-incubating
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
-#getHostNames()[Ljava/lang/String;
-#getSplitNumber()I
@0.9.0
-#<init>()V
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/core/fs/Path
@0.6-hadoop2-incubating
+#<init>()V
+#<init>(Ljava/net/URI;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/core/fs/Path;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/core/fs/Path;)V
+#<init>(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#toUri()Ljava/net/URI;
+#getFileSystem()Lorg/apache/flink/core/fs/FileSystem;
+#isAbsolute()Z
+#getName()Ljava/lang/String;
+#getParent()Lorg/apache/flink/core/fs/Path;
+#suffix(Ljava/lang/String;)Lorg/apache/flink/core/fs/Path;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#depth()I
+#makeQualified(Lorg/apache/flink/core/fs/FileSystem;)Lorg/apache/flink/core/fs/Path;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#constructTestPath(Ljava/lang/String;)Ljava/lang/String;
+#constructTestURI(Ljava/lang/String;)Ljava/lang/String;
@0.7.0-hadoop2-incubating
+#constructTestPath(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
+#constructTestURI(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
-#constructTestPath(Ljava/lang/String;)Ljava/lang/String;
-#constructTestURI(Ljava/lang/String;)Ljava/lang/String;
@0.9.0-milestone-1
-#constructTestPath(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
-#constructTestURI(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
@1.2.0
+#getPath()Ljava/lang/String;
+#hasWindowsDrive()Z
@1.5.0
+#fromLocalFile(Ljava/io/File;)Lorg/apache/flink/core/fs/Path;

+###org/apache/flink/api/common/accumulators/AverageAccumulator
@0.10.0
+#<init>()V
+#add(Ljava/lang/Double;)V
+#add(D)V
+#add(J)V
+#add(I)V
+#getLocalValue()Ljava/lang/Double;
+#resetLocal()V
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#clone()Lorg/apache/flink/api/common/accumulators/AverageAccumulator;
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getLocalValue()Ljava/io/Serializable;
+#add(Ljava/lang/Object;)V

+###org/apache/flink/api/common/accumulators/DoubleMaximum
@1.1.0
+#<init>()V
+#<init>(D)V
+#add(Ljava/lang/Double;)V
+#getLocalValue()Ljava/lang/Double;
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#resetLocal()V
+#clone()Lorg/apache/flink/api/common/accumulators/DoubleMaximum;
+#add(D)V
+#getLocalValuePrimitive()D
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getLocalValue()Ljava/io/Serializable;
+#add(Ljava/lang/Object;)V

+###org/apache/flink/api/common/accumulators/DoubleMinimum
@1.1.0
+#<init>()V
+#<init>(D)V
+#add(Ljava/lang/Double;)V
+#getLocalValue()Ljava/lang/Double;
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#resetLocal()V
+#clone()Lorg/apache/flink/api/common/accumulators/DoubleMinimum;
+#add(D)V
+#getLocalValuePrimitive()D
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getLocalValue()Ljava/io/Serializable;
+#add(Ljava/lang/Object;)V

+###org/apache/flink/api/common/accumulators/IntMaximum
@1.1.0
+#<init>()V
+#<init>(I)V
+#add(Ljava/lang/Integer;)V
+#getLocalValue()Ljava/lang/Integer;
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#resetLocal()V
+#clone()Lorg/apache/flink/api/common/accumulators/IntMaximum;
+#add(I)V
+#getLocalValuePrimitive()I
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getLocalValue()Ljava/io/Serializable;
+#add(Ljava/lang/Object;)V

+###org/apache/flink/api/common/accumulators/IntMinimum
@1.1.0
+#<init>()V
+#<init>(I)V
+#add(Ljava/lang/Integer;)V
+#getLocalValue()Ljava/lang/Integer;
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#resetLocal()V
+#clone()Lorg/apache/flink/api/common/accumulators/IntMinimum;
+#add(I)V
+#getLocalValuePrimitive()I
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getLocalValue()Ljava/io/Serializable;
+#add(Ljava/lang/Object;)V

+###org/apache/flink/api/common/accumulators/ListAccumulator
@0.9.0-milestone-1
+#<init>()V
+#add(Ljava/lang/Object;)V
+#getLocalValue()Ljava/util/ArrayList;
+#resetLocal()V
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#write(Ljava/io/ObjectOutputStream;)V
+#read(Ljava/io/ObjectInputStream;)V
+#clone()Ljava/lang/Object;
+#getLocalValue()Ljava/io/Serializable;
@0.9.0
+#toString()Ljava/lang/String;
-#write(Ljava/io/ObjectOutputStream;)V
-#read(Ljava/io/ObjectInputStream;)V

+###org/apache/flink/api/common/accumulators/LongMaximum
@1.1.0
+#<init>()V
+#<init>(J)V
+#add(Ljava/lang/Long;)V
+#getLocalValue()Ljava/lang/Long;
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#resetLocal()V
+#clone()Lorg/apache/flink/api/common/accumulators/LongMaximum;
+#add(J)V
+#getLocalValuePrimitive()J
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getLocalValue()Ljava/io/Serializable;
+#add(Ljava/lang/Object;)V

+###org/apache/flink/api/common/accumulators/LongMinimum
@1.1.0
+#<init>()V
+#<init>(J)V
+#add(Ljava/lang/Long;)V
+#getLocalValue()Ljava/lang/Long;
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#resetLocal()V
+#clone()Lorg/apache/flink/api/common/accumulators/LongMinimum;
+#add(J)V
+#getLocalValuePrimitive()J
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getLocalValue()Ljava/io/Serializable;
+#add(Ljava/lang/Object;)V

+###org/apache/flink/api/common/accumulators/SerializedListAccumulator
@0.9.0
+#<init>()V
+#add(Ljava/lang/Object;)V
+#add(Ljava/lang/Object;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getLocalValue()Ljava/util/ArrayList;
+#resetLocal()V
+#merge(Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#clone()Lorg/apache/flink/api/common/accumulators/SerializedListAccumulator;
+#deserializeList(Ljava/util/ArrayList;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Ljava/util/List;
+#clone()Ljava/lang/Object;
+#clone()Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getLocalValue()Ljava/io/Serializable;
@1.0.0
+#toString()Ljava/lang/String;

+###org/apache/flink/api/common/Archiveable
@1.2.0
+#archive()Ljava/io/Serializable;

+###org/apache/flink/api/common/ArchivedExecutionConfig
@1.2.0
+#<init>(Lorg/apache/flink/api/common/ExecutionConfig;)V
+#getExecutionMode()Ljava/lang/String;
+#getRestartStrategyDescription()Ljava/lang/String;
+#getParallelism()I
+#getObjectReuseEnabled()Z
+#getGlobalJobParameters()Ljava/util/Map;
@1.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLjava/util/Map;)V
@1.13.0
+#<init>(Ljava/lang/String;Ljava/lang/String;IIZLjava/util/Map;)V
+#getMaxParallelism()I
-#<init>(Ljava/lang/String;Ljava/lang/String;IZLjava/util/Map;)V
@1.16.0
+#<init>(Ljava/lang/String;Ljava/lang/String;IIZJLjava/util/Map;)V
+#getPeriodicMaterializeIntervalMillis()J
-#<init>(Ljava/lang/String;Ljava/lang/String;IIZLjava/util/Map;)V

+###org/apache/flink/api/common/CodeAnalysisMode
@0.9.0
+#values()[Lorg/apache/flink/api/common/CodeAnalysisMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/CodeAnalysisMode;

+###org/apache/flink/api/common/distributions/CommonRangeBoundaries
@1.0.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeComparator;[[Ljava/lang/Object;)V
+#getRangeIndex(Ljava/lang/Object;)I

+###org/apache/flink/api/common/distributions/RangeBoundaries
@1.0.0
+#getRangeIndex(Ljava/lang/Object;)I

+###org/apache/flink/api/common/ExecutionConfig$GlobalJobParameters
@0.9.0
+#<init>()V
+#toMap()Ljava/util/Map;
@1.10.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/common/ExecutionConfig$SerializableSerializer
@0.10.0
+#<init>(Lcom/esotericsoftware/kryo/Serializer;)V
+#getSerializer()Lcom/esotericsoftware/kryo/Serializer;

+###org/apache/flink/api/common/ExecutionConfig
@0.8.0
+#<init>()V
+#enableClosureCleaner()Lorg/apache/flink/api/common/ExecutionConfig;
+#disableClosureCleaner()Lorg/apache/flink/api/common/ExecutionConfig;
+#isClosureCleanerEnabled()Z
+#getDegreeOfParallelism()I
+#setDegreeOfParallelism(I)Lorg/apache/flink/api/common/ExecutionConfig;
+#getNumberOfExecutionRetries()I
+#setNumberOfExecutionRetries(I)Lorg/apache/flink/api/common/ExecutionConfig;
@0.9.0-milestone-1
*#getDegreeOfParallelism()I[deprecated]
+#getParallelism()I
*#setDegreeOfParallelism(I)Lorg/apache/flink/api/common/ExecutionConfig;[deprecated]
+#setParallelism(I)Lorg/apache/flink/api/common/ExecutionConfig;
+#setExecutionMode(Lorg/apache/flink/api/common/ExecutionMode;)V
+#getExecutionMode()Lorg/apache/flink/api/common/ExecutionMode;
+#enableForceKryo()V
+#disableForceKryo()V
+#isForceKryoEnabled()Z
+#enableGenericTypeSerializationWithAvro()V
+#disableGenericTypeSerializationWithAvro()V
+#serializeGenericTypesWithAvro()Z
+#enableObjectReuse()Lorg/apache/flink/api/common/ExecutionConfig;
+#disableObjectReuse()Lorg/apache/flink/api/common/ExecutionConfig;
+#isObjectReuseEnabled()Z
+#addDefaultKryoSerializer(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)V
+#addDefaultKryoSerializer(Ljava/lang/Class;Ljava/lang/Class;)V
+#registerTypeWithKryoSerializer(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)V
+#registerTypeWithKryoSerializer(Ljava/lang/Class;Ljava/lang/Class;)V
+#registerPojoType(Ljava/lang/Class;)V
+#registerKryoType(Ljava/lang/Class;)V
+#getRegisteredTypesWithKryoSerializers()Ljava/util/List;
+#getRegisteredTypesWithKryoSerializerClasses()Ljava/util/List;
+#getDefaultKryoSerializers()Ljava/util/List;
+#getDefaultKryoSerializerClasses()Ljava/util/List;
+#getRegisteredKryoTypes()Ljava/util/List;
+#getRegisteredPojoTypes()Ljava/util/List;
+#isAutoTypeRegistrationDisabled()Z
+#disableAutoTypeRegistration()V
@0.9.0
+#enableForceAvro()V
+#disableForceAvro()V
+#isForceAvroEnabled()Z
+#setCodeAnalysisMode(Lorg/apache/flink/api/common/CodeAnalysisMode;)V
+#getCodeAnalysisMode()Lorg/apache/flink/api/common/CodeAnalysisMode;
+#enableSysoutLogging()Lorg/apache/flink/api/common/ExecutionConfig;
+#disableSysoutLogging()Lorg/apache/flink/api/common/ExecutionConfig;
+#isSysoutLoggingEnabled()Z
+#getGlobalJobParameters()Lorg/apache/flink/api/common/ExecutionConfig$GlobalJobParameters;
+#setGlobalJobParameters(Lorg/apache/flink/api/common/ExecutionConfig$GlobalJobParameters;)V
+#getRegisteredKryoTypes()Ljava/util/LinkedHashSet;
+#getRegisteredPojoTypes()Ljava/util/LinkedHashSet;
-#enableGenericTypeSerializationWithAvro()V
-#disableGenericTypeSerializationWithAvro()V
-#serializeGenericTypesWithAvro()Z
-#getRegisteredKryoTypes()Ljava/util/List;
-#getRegisteredPojoTypes()Ljava/util/List;
@0.10.0
+#setAutoWatermarkInterval(J)Lorg/apache/flink/api/common/ExecutionConfig;
+#enableTimestamps()Lorg/apache/flink/api/common/ExecutionConfig;
+#disableTimestamps()Lorg/apache/flink/api/common/ExecutionConfig;
+#areTimestampsEnabled()Z
+#getAutoWatermarkInterval()J
+#getExecutionRetryDelay()J
+#setExecutionRetryDelay(J)Lorg/apache/flink/api/common/ExecutionConfig;
+#getRegisteredTypesWithKryoSerializers()Ljava/util/LinkedHashMap;
+#getRegisteredTypesWithKryoSerializerClasses()Ljava/util/LinkedHashMap;
+#getDefaultKryoSerializers()Ljava/util/LinkedHashMap;
+#getDefaultKryoSerializerClasses()Ljava/util/LinkedHashMap;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
-#getDegreeOfParallelism()I[deprecated]
-#setDegreeOfParallelism(I)Lorg/apache/flink/api/common/ExecutionConfig;[deprecated]
-#getRegisteredTypesWithKryoSerializers()Ljava/util/List;
-#getRegisteredTypesWithKryoSerializerClasses()Ljava/util/List;
-#getDefaultKryoSerializers()Ljava/util/List;
-#getDefaultKryoSerializerClasses()Ljava/util/List;
@1.0.0
+#setRestartStrategy(Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$RestartStrategyConfiguration;)V
+#getRestartStrategy()Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$RestartStrategyConfiguration;
*#getNumberOfExecutionRetries()I[deprecated]
*#getExecutionRetryDelay()J[deprecated]
*#setNumberOfExecutionRetries(I)Lorg/apache/flink/api/common/ExecutionConfig;[deprecated]
*#setExecutionRetryDelay(J)Lorg/apache/flink/api/common/ExecutionConfig;[deprecated]
-#enableTimestamps()Lorg/apache/flink/api/common/ExecutionConfig;
-#disableTimestamps()Lorg/apache/flink/api/common/ExecutionConfig;
-#areTimestampsEnabled()Z
@1.1.0
+#getTaskCancellationInterval()J
+#setTaskCancellationInterval(J)Lorg/apache/flink/api/common/ExecutionConfig;
@1.1.4
+#getTaskCancellationTimeout()J
+#setTaskCancellationTimeout(J)Lorg/apache/flink/api/common/ExecutionConfig;
@1.2.0
+#setLatencyTrackingInterval(J)Lorg/apache/flink/api/common/ExecutionConfig;
+#getLatencyTrackingInterval()J
+#isLatencyTrackingEnabled()Z
+#getMaxParallelism()I
+#setMaxParallelism(I)V
+#archive()Lorg/apache/flink/api/common/ArchivedExecutionConfig;
+#archive()Ljava/io/Serializable;
@1.3.0
+#enableGenericTypes()V
+#disableGenericTypes()V
+#hasGenericTypesDisabled()Z
@1.4.0
+#isUseSnapshotCompression()Z
+#setUseSnapshotCompression(Z)V
@1.5.0
+#isFailTaskOnCheckpointError()Z
+#setFailTaskOnCheckpointError(Z)V
@1.5.5
*#isLatencyTrackingEnabled()Z[deprecated]
+#isLatencyTrackingConfigured()Z
@1.6.0
-#isLatencyTrackingConfigured()Z
@1.6.2
*#isLatencyTrackingEnabled()Z[deprecated]
+#isLatencyTrackingConfigured()Z
@1.8.0
+#setDefaultInputDependencyConstraint(Lorg/apache/flink/api/common/InputDependencyConstraint;)V
+#getDefaultInputDependencyConstraint()Lorg/apache/flink/api/common/InputDependencyConstraint;
@1.8.1
+#setClosureCleanerLevel(Lorg/apache/flink/api/common/ExecutionConfig$ClosureCleanerLevel;)Lorg/apache/flink/api/common/ExecutionConfig;
+#getClosureCleanerLevel()Lorg/apache/flink/api/common/ExecutionConfig$ClosureCleanerLevel;
@1.9.0
+#enableAutoGeneratedUIDs()V
+#disableAutoGeneratedUIDs()V
+#hasAutoGeneratedUIDsEnabled()Z
*#setCodeAnalysisMode(Lorg/apache/flink/api/common/CodeAnalysisMode;)V[deprecated]
*#getCodeAnalysisMode()Lorg/apache/flink/api/common/CodeAnalysisMode;[deprecated]
*#isFailTaskOnCheckpointError()Z[deprecated]
*#setFailTaskOnCheckpointError(Z)V[deprecated]
@1.10.0
*#enableSysoutLogging()Lorg/apache/flink/api/common/ExecutionConfig;[deprecated]
*#disableSysoutLogging()Lorg/apache/flink/api/common/ExecutionConfig;[deprecated]
*#isSysoutLoggingEnabled()Z[deprecated]
+#toString()Ljava/lang/String;
+#configure(Lorg/apache/flink/configuration/ReadableConfig;Ljava/lang/ClassLoader;)V
@1.12.0
-#isLatencyTrackingEnabled()Z[deprecated]
-#setCodeAnalysisMode(Lorg/apache/flink/api/common/CodeAnalysisMode;)V[deprecated]
-#getCodeAnalysisMode()Lorg/apache/flink/api/common/CodeAnalysisMode;[deprecated]
-#enableSysoutLogging()Lorg/apache/flink/api/common/ExecutionConfig;[deprecated]
-#disableSysoutLogging()Lorg/apache/flink/api/common/ExecutionConfig;[deprecated]
-#isSysoutLoggingEnabled()Z[deprecated]
-#isFailTaskOnCheckpointError()Z[deprecated]
-#setFailTaskOnCheckpointError(Z)V[deprecated]
@1.13.0
*#setDefaultInputDependencyConstraint(Lorg/apache/flink/api/common/InputDependencyConstraint;)V[deprecated]
*#getDefaultInputDependencyConstraint()Lorg/apache/flink/api/common/InputDependencyConstraint;[deprecated]
@1.15.0
+#getPeriodicMaterializeIntervalMillis()J
+#setPeriodicMaterializeIntervalMillis(Ljava/time/Duration;)V
+#getMaterializationMaxAllowedFailures()I
+#setMaterializationMaxAllowedFailures(I)V
+#setDynamicGraph(Z)V
+#isDynamicGraph()Z

+###org/apache/flink/api/common/ExecutionMode
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/api/common/ExecutionMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/ExecutionMode;

+###org/apache/flink/api/common/functions/AggregateFunction
@1.3.0
+#createAccumulator()Ljava/lang/Object;
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#getResult(Ljava/lang/Object;)Ljava/lang/Object;
+#merge(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.4.0
+#add(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#add(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/flink/api/common/functions/BroadcastVariableInitializer
@0.8.0
+#initializeBroadcastVariable(Ljava/lang/Iterable;)Ljava/lang/Object;

+###org/apache/flink/api/common/functions/FoldFunction
@0.9.0-milestone-1
+#fold(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.12.0
-###org/apache/flink/api/common/functions/FoldFunction

+###org/apache/flink/api/common/functions/GroupCombineFunction
@0.9.0-milestone-1
+#combine(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/Partitioner
@0.8.0
+#partition(Ljava/lang/Object;I)I

+###org/apache/flink/api/common/functions/RichAggregateFunction
@1.3.0
+#<init>()V
+#createAccumulator()Ljava/lang/Object;
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#getResult(Ljava/lang/Object;)Ljava/lang/Object;
+#merge(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.4.0
+#add(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#add(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/flink/api/common/functions/RichFoldFunction
@0.9.0-milestone-1
+#<init>()V
+#fold(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.12.0
-###org/apache/flink/api/common/functions/RichFoldFunction

+###org/apache/flink/api/common/functions/RichGroupCombineFunction
@0.9.0-milestone-1
+#<init>()V
+#combine(Ljava/lang/Iterable;Lorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/functions/StoppableFunction
@1.0.0
+#stop()V
@1.9.0
-###org/apache/flink/api/common/functions/StoppableFunction

+###org/apache/flink/api/common/functions/util/AbstractRuntimeUDFContext
@0.8.0
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;)V
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Ljava/util/Map;)V
+#getTaskName()Ljava/lang/String;
+#getNumberOfParallelSubtasks()I
+#getIndexOfThisSubtask()I
+#getIntCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/IntCounter;
+#getLongCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/LongCounter;
+#getHistogram(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/Histogram;
+#getDoubleCounter(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/DoubleCounter;
+#addAccumulator(Ljava/lang/String;Lorg/apache/flink/api/common/accumulators/Accumulator;)V
+#getAccumulator(Ljava/lang/String;)Lorg/apache/flink/api/common/accumulators/Accumulator;
+#getAllAccumulators()Ljava/util/HashMap;
+#getUserCodeClassLoader()Ljava/lang/ClassLoader;
+#getDistributedCache()Lorg/apache/flink/api/common/cache/DistributedCache;
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;)V
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;)V
+#getExecutionConfig()Lorg/apache/flink/api/common/ExecutionConfig;
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Ljava/util/Map;)V
@0.10.0
+#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;)V
+#getAllAccumulators()Ljava/util/Map;
+#getKeyValueState(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;
+#getKeyValueState(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;)V
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;)V
-#getAllAccumulators()Ljava/util/HashMap;
@1.0.0
+#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;)V
+#getAttemptNumber()I
+#getTaskNameWithSubtasks()Ljava/lang/String;
+#getState(Lorg/apache/flink/api/common/state/ValueStateDescriptor;)Lorg/apache/flink/api/common/state/ValueState;
+#getListState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
+#getReducingState(Lorg/apache/flink/api/common/state/ReducingStateDescriptor;)Lorg/apache/flink/api/common/state/ReducingState;
*#getKeyValueState(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;[deprecated]
*#getKeyValueState(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;[deprecated]
-#<init>(Ljava/lang/String;IILjava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;)V
@1.1.0
+#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/MetricGroup;)V
+#getMetricGroup()Lorg/apache/flink/metrics/MetricGroup;
-#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;)V
@1.2.0
-#getKeyValueState(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;[deprecated]
-#getKeyValueState(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/Object;)Lorg/apache/flink/api/common/state/OperatorState;[deprecated]
@1.3.0
+#getMaxNumberOfParallelSubtasks()I
+#getFoldingState(Lorg/apache/flink/api/common/state/FoldingStateDescriptor;)Lorg/apache/flink/api/common/state/FoldingState;
+#getMapState(Lorg/apache/flink/api/common/state/MapStateDescriptor;)Lorg/apache/flink/api/common/state/MapState;
@1.4.0
+#getAggregatingState(Lorg/apache/flink/api/common/state/AggregatingStateDescriptor;)Lorg/apache/flink/api/common/state/AggregatingState;
*#getFoldingState(Lorg/apache/flink/api/common/state/FoldingStateDescriptor;)Lorg/apache/flink/api/common/state/FoldingState;[deprecated]
@1.5.0
+#getAllocationIDAsString()Ljava/lang/String;
@1.11.0
-#getFoldingState(Lorg/apache/flink/api/common/state/FoldingStateDescriptor;)Lorg/apache/flink/api/common/state/FoldingState;[deprecated]
@1.12.0
+#<init>(Lorg/apache/flink/api/common/TaskInfo;Lorg/apache/flink/util/UserCodeClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/MetricGroup;)V
+#registerUserCodeClassLoaderReleaseHookIfAbsent(Ljava/lang/String;Ljava/lang/Runnable;)V
-#<init>(Lorg/apache/flink/api/common/TaskInfo;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/MetricGroup;)V
-#getAllAccumulators()Ljava/util/Map;
@1.14.0
+#<init>(Lorg/apache/flink/api/common/TaskInfo;Lorg/apache/flink/util/UserCodeClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/groups/OperatorMetricGroup;)V
+#getMetricGroup()Lorg/apache/flink/metrics/groups/OperatorMetricGroup;
-#<init>(Lorg/apache/flink/api/common/TaskInfo;Lorg/apache/flink/util/UserCodeClassLoader;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/metrics/MetricGroup;)V
-#getMetricGroup()Lorg/apache/flink/metrics/MetricGroup;

+###org/apache/flink/api/common/io/CheckpointableInputFormat
@1.1.0
+#getCurrentState()Ljava/io/Serializable;
+#reopen(Lorg/apache/flink/core/io/InputSplit;Ljava/io/Serializable;)V

+###org/apache/flink/api/common/io/CleanupWhenUnsuccessful
@0.8.0
+#tryCleanupOnError()V

+###org/apache/flink/api/common/io/compression/Bzip2InputStreamFactory
@1.2.0
+#<init>()V
+#getInstance()Lorg/apache/flink/api/common/io/compression/Bzip2InputStreamFactory;
+#create(Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream;
+#getCommonFileExtensions()Ljava/util/Collection;
+#create(Ljava/io/InputStream;)Ljava/io/InputStream;

+###org/apache/flink/api/common/io/compression/DeflateInflaterInputStreamFactory
@0.9.0
+#<init>()V
+#getInstance()Lorg/apache/flink/api/common/io/compression/DeflateInflaterInputStreamFactory;
+#create(Ljava/io/InputStream;)Ljava/util/zip/InflaterInputStream;
+#getCommonFileExtensions()Ljava/util/Collection;
@1.2.0
+#create(Ljava/io/InputStream;)Ljava/io/InputStream;

+###org/apache/flink/api/common/io/compression/GzipInflaterInputStreamFactory
@0.9.0
+#<init>()V
+#getInstance()Lorg/apache/flink/api/common/io/compression/GzipInflaterInputStreamFactory;
+#create(Ljava/io/InputStream;)Ljava/util/zip/GZIPInputStream;
+#getCommonFileExtensions()Ljava/util/Collection;
+#create(Ljava/io/InputStream;)Ljava/util/zip/InflaterInputStream;
@1.2.0
+#create(Ljava/io/InputStream;)Ljava/io/InputStream;
-#create(Ljava/io/InputStream;)Ljava/util/zip/InflaterInputStream;

+###org/apache/flink/api/common/io/compression/InflaterInputStreamFactory
@0.9.0
+#create(Ljava/io/InputStream;)Ljava/util/zip/InflaterInputStream;
+#getCommonFileExtensions()Ljava/util/Collection;
@1.2.0
+#create(Ljava/io/InputStream;)Ljava/io/InputStream;
-#create(Ljava/io/InputStream;)Ljava/util/zip/InflaterInputStream;

+###org/apache/flink/api/common/io/compression/XZInputStreamFactory
@1.2.0
+#<init>()V
+#getInstance()Lorg/apache/flink/api/common/io/compression/XZInputStreamFactory;
+#create(Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/xz/XZCompressorInputStream;
+#getCommonFileExtensions()Ljava/util/Collection;
+#create(Ljava/io/InputStream;)Ljava/io/InputStream;

+###org/apache/flink/api/common/io/FilePathFilter$DefaultFilter
@1.2.0
+#filterPath(Lorg/apache/flink/core/fs/Path;)Z

+###org/apache/flink/api/common/io/FilePathFilter
@1.2.0
+#<init>()V
+#filterPath(Lorg/apache/flink/core/fs/Path;)Z
+#createDefaultFilter()Lorg/apache/flink/api/common/io/FilePathFilter;

+###org/apache/flink/api/common/io/FinalizeOnMaster
@0.8.0
+#finalizeGlobal(I)V

+###org/apache/flink/api/common/io/GlobFilePathFilter
@1.2.0
+#<init>()V
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#filterPath(Lorg/apache/flink/core/fs/Path;)Z

+###org/apache/flink/api/common/io/InputStreamFSInputWrapper
@0.9.0
+#<init>(Ljava/io/InputStream;)V
+#seek(J)V
+#getPos()J
+#read()I
+#read([BII)I
+#read([B)I
@1.1.4
+#close()V

+###org/apache/flink/api/common/io/ReplicatingInputFormat
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/io/InputFormat;)V
+#getReplicatedInputFormat()Lorg/apache/flink/api/common/io/InputFormat;
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#getStatistics(Lorg/apache/flink/api/common/io/statistics/BaseStatistics;)Lorg/apache/flink/api/common/io/statistics/BaseStatistics;
+#createInputSplits(I)[Lorg/apache/flink/core/io/InputSplit;
+#getInputSplitAssigner([Lorg/apache/flink/core/io/InputSplit;)Lorg/apache/flink/core/io/InputSplitAssigner;
+#open(Lorg/apache/flink/core/io/InputSplit;)V
+#reachedEnd()Z
+#nextRecord(Ljava/lang/Object;)Ljava/lang/Object;
+#close()V
@0.10.0
+#setRuntimeContext(Lorg/apache/flink/api/common/functions/RuntimeContext;)V
+#getRuntimeContext()Lorg/apache/flink/api/common/functions/RuntimeContext;
@1.1.0
+#openInputFormat()V
+#closeInputFormat()V

+###org/apache/flink/api/common/io/ReplicatingInputSplitAssigner
@0.9.0-milestone-1
+#<init>(Ljava/util/Collection;)V
+#<init>([Lorg/apache/flink/core/io/InputSplit;)V
+#getNextInputSplit(Ljava/lang/String;I)Lorg/apache/flink/core/io/InputSplit;
@1.9.0
+#returnInputSplit(Ljava/util/List;I)V

+###org/apache/flink/api/common/io/RichInputFormat
@0.10.0
+#<init>()V
+#setRuntimeContext(Lorg/apache/flink/api/common/functions/RuntimeContext;)V
+#getRuntimeContext()Lorg/apache/flink/api/common/functions/RuntimeContext;
@1.1.0
+#openInputFormat()V
+#closeInputFormat()V

+###org/apache/flink/api/common/io/RichOutputFormat
@0.10.0
+#<init>()V
+#setRuntimeContext(Lorg/apache/flink/api/common/functions/RuntimeContext;)V
+#getRuntimeContext()Lorg/apache/flink/api/common/functions/RuntimeContext;

+###org/apache/flink/api/common/JobID
@0.9.0-milestone-1
+#<init>()V
+#<init>(JJ)V
+#<init>([B)V
+#generate()Lorg/apache/flink/api/common/JobID;
+#fromByteArray([B)Lorg/apache/flink/api/common/JobID;
+#fromByteBuffer(Ljava/nio/ByteBuffer;)Lorg/apache/flink/api/common/JobID;
+#fromHexString(Ljava/lang/String;)Lorg/apache/flink/api/common/JobID;

+###org/apache/flink/api/common/JobSubmissionResult
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/JobID;)V
+#getJobID()Lorg/apache/flink/api/common/JobID;
@1.1.0
+#isJobExecutionResult()Z
+#getJobExecutionResult()Lorg/apache/flink/api/common/JobExecutionResult;

+###org/apache/flink/api/common/operators/base/CoGroupRawOperatorBase$SimpleListIterable$SimpleListIterator
@0.9.0
+#<init>(Lorg/apache/flink/api/common/operators/base/CoGroupRawOperatorBase$SimpleListIterable;Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/apache/flink/api/common/operators/base/CoGroupRawOperatorBase$SimpleListIterable
@0.9.0
+#<init>(Ljava/util/List;Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/api/common/operators/base/CoGroupRawOperatorBase
@0.9.0
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/CoGroupFunction;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
+#setGroupOrder(ILorg/apache/flink/api/common/operators/Ordering;)V
+#setGroupOrderForInputOne(Lorg/apache/flink/api/common/operators/Ordering;)V
+#setGroupOrderForInputTwo(Lorg/apache/flink/api/common/operators/Ordering;)V
+#getGroupOrder(I)Lorg/apache/flink/api/common/operators/Ordering;
+#getGroupOrderForInputOne()Lorg/apache/flink/api/common/operators/Ordering;
+#getGroupOrderForInputTwo()Lorg/apache/flink/api/common/operators/Ordering;
+#isCombinableFirst()Z
+#setCombinableFirst(Z)V
+#isCombinableSecond()Z
+#setCombinableSecond(Z)V

+###org/apache/flink/api/common/operators/base/CrossOperatorBase$CrossHint
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/api/common/operators/base/CrossOperatorBase$CrossHint;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/operators/base/CrossOperatorBase$CrossHint;

+###org/apache/flink/api/common/operators/base/GroupCombineOperatorBase
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/functions/GroupCombineFunction;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;[ILjava/lang/String;)V
+#setGroupOrder(Lorg/apache/flink/api/common/operators/Ordering;)V
+#getGroupOrder()Lorg/apache/flink/api/common/operators/Ordering;

+###org/apache/flink/api/common/operators/base/InnerJoinOperatorBase
@0.10.0
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;)V

+###org/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType
@0.10.0
+#values()[Lorg/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType;

+###org/apache/flink/api/common/operators/base/OuterJoinOperatorBase
@0.10.0
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;Lorg/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType;)V
+#<init>(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;Lorg/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/BinaryOperatorInformation;[I[ILjava/lang/String;Lorg/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType;)V
+#setOuterJoinType(Lorg/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType;)V
+#getOuterJoinType()Lorg/apache/flink/api/common/operators/base/OuterJoinOperatorBase$OuterJoinType;

+###org/apache/flink/api/common/operators/base/ReduceOperatorBase$CombineHint
@1.1.0
+#values()[Lorg/apache/flink/api/common/operators/base/ReduceOperatorBase$CombineHint;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/operators/base/ReduceOperatorBase$CombineHint;

+###org/apache/flink/api/common/operators/base/SortPartitionOperatorBase
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Lorg/apache/flink/api/common/operators/Ordering;Ljava/lang/String;)V
+#getPartitionOrdering()Lorg/apache/flink/api/common/operators/Ordering;
+#getSemanticProperties()Lorg/apache/flink/api/common/operators/SingleInputSemanticProperties;

+###org/apache/flink/api/common/operators/GenericDataSourceBase$SplitDataProperties
@0.9.0-milestone-1
+#getSplitPartitionKeys()[I
+#getSplitPartitioner()Lorg/apache/flink/api/common/functions/Partitioner;
+#getSplitGroupKeys()[I
+#getSplitOrder()Lorg/apache/flink/api/common/operators/Ordering;

+###org/apache/flink/api/common/operators/Keys$ExpressionKeys
@1.0.0
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(ILorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>([ILorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>([ILorg/apache/flink/api/common/typeinfo/TypeInformation;Z)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>([Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getNumberOfKeyFields()I
+#computeLogicalKeyPositions()[I
+#validateCustomPartitioner(Lorg/apache/flink/api/common/functions/Partitioner;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#toString()Ljava/lang/String;
+#isSortKey(ILorg/apache/flink/api/common/typeinfo/TypeInformation;)Z
+#isSortKey(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Z
@1.0.2
+#getKeyFieldTypes()[Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.1.0
+#getOriginalKeyFieldTypes()[Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/api/common/operators/Keys$IncompatibleKeysException
@1.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V

+###org/apache/flink/api/common/operators/Keys$SelectorFunctionKeys
@1.0.0
+#<init>(Lorg/apache/flink/api/java/functions/KeySelector;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getKeyType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getInputType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getKeyExtractor()Lorg/apache/flink/api/java/functions/KeySelector;
+#getNumberOfKeyFields()I
+#computeLogicalKeyPositions()[I
+#validateCustomPartitioner(Lorg/apache/flink/api/common/functions/Partitioner;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#toString()Ljava/lang/String;
@1.0.2
+#getKeyFieldTypes()[Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.1.0
+#getOriginalKeyFieldTypes()[Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/api/common/operators/Keys
@1.0.0
+#<init>()V
+#getNumberOfKeyFields()I
+#computeLogicalKeyPositions()[I
+#validateCustomPartitioner(Lorg/apache/flink/api/common/functions/Partitioner;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#isEmpty()Z
+#areCompatible(Lorg/apache/flink/api/common/operators/Keys;)Z
@1.0.2
+#getKeyFieldTypes()[Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.1.0
+#getOriginalKeyFieldTypes()[Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/api/common/operators/ResourceSpec$Builder
@1.5.0
+#<init>()V
+#setCpuCores(D)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setHeapMemoryInMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setDirectMemoryInMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setNativeMemoryInMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setStateSizeInMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setGPUResource(D)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#build()Lorg/apache/flink/api/common/operators/ResourceSpec;
@1.9.0
+#setManagedMemoryInMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
@1.10.0
+#setTaskHeapMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setTaskHeapMemoryMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setTaskOffHeapMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setOffTaskHeapMemoryMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setManagedMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setManagedMemoryMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
-#<init>()V
-#setHeapMemoryInMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
-#setDirectMemoryInMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
-#setNativeMemoryInMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
-#setStateSizeInMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
-#setManagedMemoryInMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
@1.13.0
+#setExtendedResource(Lorg/apache/flink/api/common/resources/ExternalResource;)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
+#setExtendedResources(Ljava/util/Collection;)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
-#setGPUResource(D)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
@1.14.0
+#setTaskOffHeapMemoryMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
-#setOffTaskHeapMemoryMB(I)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;

+###org/apache/flink/api/common/operators/ResourceSpec
@1.3.0
+#<init>(DI)V
+#<init>(DIIII)V
+#merge(Lorg/apache/flink/api/common/operators/ResourceSpec;)Lorg/apache/flink/api/common/operators/ResourceSpec;
+#getCpuCores()D
+#getHeapMemory()I
+#getDirectMemory()I
+#getNativeMemory()I
+#getStateSize()I
+#isValid()Z
+#lessThanOrEqual(Lorg/apache/flink/api/common/operators/ResourceSpec;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.5.0
+#getGPUResource()D
+#getExtendedResources()Ljava/util/Map;
+#newBuilder()Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
-#<init>(DI)V
-#<init>(DIIII)V
@1.9.0
+#getManagedMemory()I
@1.10.0
+#subtract(Lorg/apache/flink/api/common/operators/ResourceSpec;)Lorg/apache/flink/api/common/operators/ResourceSpec;
+#getCpuCores()Lorg/apache/flink/api/common/resources/Resource;
+#getTaskHeapMemory()Lorg/apache/flink/configuration/MemorySize;
+#getTaskOffHeapMemory()Lorg/apache/flink/configuration/MemorySize;
+#getManagedMemory()Lorg/apache/flink/configuration/MemorySize;
+#getGPUResource()Lorg/apache/flink/api/common/resources/Resource;
+#newBuilder(DI)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
-#getCpuCores()D
-#getHeapMemory()I
-#getDirectMemory()I
-#getNativeMemory()I
-#getStateSize()I
-#getManagedMemory()I
-#getGPUResource()D
-#isValid()Z
-#newBuilder()Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;
@1.13.0
+#getCpuCores()Lorg/apache/flink/api/common/resources/CPUResource;
+#getExtendedResource(Ljava/lang/String;)Ljava/util/Optional;
-#getCpuCores()Lorg/apache/flink/api/common/resources/Resource;
-#getGPUResource()Lorg/apache/flink/api/common/resources/Resource;
@1.14.0
+#newBuilder(DLorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/api/common/operators/ResourceSpec$Builder;

+###org/apache/flink/api/common/operators/SemanticProperties$EmptySemanticProperties
@0.9.0-milestone-1
+#<init>()V
+#getForwardingTargetFields(II)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#getForwardingSourceField(II)I
+#getReadFields(I)Lorg/apache/flink/api/common/operators/util/FieldSet;

+###org/apache/flink/api/common/operators/SemanticProperties$InvalidSemanticAnnotationException
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/api/common/operators/SingleInputSemanticProperties$AllFieldsForwardedProperties
@0.9.0-milestone-1
+#<init>()V
+#getForwardingTargetFields(II)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#getForwardingSourceField(II)I
+#addForwardedField(II)V

+###org/apache/flink/api/common/resources/GPUResource
@1.5.0
+#<init>(D)V
+#create(DLorg/apache/flink/api/common/resources/Resource$ResourceAggregateType;)Lorg/apache/flink/api/common/resources/Resource;
@1.10.0
+#create(Ljava/math/BigDecimal;)Lorg/apache/flink/api/common/resources/Resource;
-#create(DLorg/apache/flink/api/common/resources/Resource$ResourceAggregateType;)Lorg/apache/flink/api/common/resources/Resource;
@1.13.0
-###org/apache/flink/api/common/resources/GPUResource

+###org/apache/flink/api/common/resources/Resource$ResourceAggregateType
@1.5.0
+#values()[Lorg/apache/flink/api/common/resources/Resource$ResourceAggregateType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/resources/Resource$ResourceAggregateType;
@1.10.0
-###org/apache/flink/api/common/resources/Resource$ResourceAggregateType

+###org/apache/flink/api/common/resources/Resource
@1.5.0
+#merge(Lorg/apache/flink/api/common/resources/Resource;)Lorg/apache/flink/api/common/resources/Resource;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getName()Ljava/lang/String;
+#getResourceAggregateType()Lorg/apache/flink/api/common/resources/Resource$ResourceAggregateType;
+#getValue()D
@1.9.0
+#subtract(Lorg/apache/flink/api/common/resources/Resource;)Lorg/apache/flink/api/common/resources/Resource;
@1.10.0
+#divide(Ljava/math/BigDecimal;)Lorg/apache/flink/api/common/resources/Resource;
+#divide(I)Lorg/apache/flink/api/common/resources/Resource;
+#toString()Ljava/lang/String;
+#getValue()Ljava/math/BigDecimal;
-#getResourceAggregateType()Lorg/apache/flink/api/common/resources/Resource$ResourceAggregateType;
-#getValue()D
@1.11.0
+#multiply(Ljava/math/BigDecimal;)Lorg/apache/flink/api/common/resources/Resource;
+#multiply(I)Lorg/apache/flink/api/common/resources/Resource;
@1.13.0
+#compareTo(Lorg/apache/flink/api/common/resources/Resource;)I
+#isZero()Z
+#compareTo(Ljava/lang/Object;)I

+###org/apache/flink/api/common/restartstrategy/RestartStrategies$FailureRateRestartStrategyConfiguration
@1.1.0
+#<init>(ILorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)V
+#getMaxFailureRate()I
+#getFailureInterval()Lorg/apache/flink/api/common/time/Time;
+#getDelayBetweenAttemptsInterval()Lorg/apache/flink/api/common/time/Time;
+#getDescription()Ljava/lang/String;
@1.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/common/restartstrategy/RestartStrategies$FallbackRestartStrategyConfiguration
@1.2.0
+#<init>()V
+#getDescription()Ljava/lang/String;
@1.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/common/restartstrategy/RestartStrategies$FixedDelayRestartStrategyConfiguration
@1.0.0
+#getRestartAttempts()I
+#getDelayBetweenAttempts()J
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getDescription()Ljava/lang/String;
@1.1.0
+#getDelayBetweenAttemptsInterval()Lorg/apache/flink/api/common/time/Time;
-#getDelayBetweenAttempts()J

+###org/apache/flink/api/common/restartstrategy/RestartStrategies$NoRestartStrategyConfiguration
@1.0.0
+#<init>()V
+#getDescription()Ljava/lang/String;
@1.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/common/restartstrategy/RestartStrategies$RestartStrategyConfiguration
@1.0.0
+#getDescription()Ljava/lang/String;
@1.10.0
+#toString()Ljava/lang/String;

+###org/apache/flink/api/common/restartstrategy/RestartStrategies
@1.0.0
+#<init>()V
+#noRestart()Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$RestartStrategyConfiguration;
+#fixedDelayRestart(IJ)Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$RestartStrategyConfiguration;
@1.1.0
+#fixedDelayRestart(ILorg/apache/flink/api/common/time/Time;)Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$RestartStrategyConfiguration;
+#failureRateRestart(ILorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;)Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$FailureRateRestartStrategyConfiguration;
@1.2.0
+#fallBackRestart()Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$RestartStrategyConfiguration;
@1.10.0
+#fromConfiguration(Lorg/apache/flink/configuration/ReadableConfig;)Ljava/util/Optional;
@1.13.0
+#exponentialDelayRestart(Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;DLorg/apache/flink/api/common/time/Time;D)Lorg/apache/flink/api/common/restartstrategy/RestartStrategies$ExponentialDelayRestartStrategyConfiguration;

+###org/apache/flink/api/common/serialization/AbstractDeserializationSchema
@1.4.0
+#<init>()V
+#deserialize([B)Ljava/lang/Object;
+#isEndOfStream(Ljava/lang/Object;)Z
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.5.0
-#<init>()V

+###org/apache/flink/api/common/serialization/DeserializationSchema
@1.4.0
+#deserialize([B)Ljava/lang/Object;
+#isEndOfStream(Ljava/lang/Object;)Z
@1.11.0
+#open(Lorg/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext;)V
+#deserialize([BLorg/apache/flink/util/Collector;)V

+###org/apache/flink/api/common/serialization/SerializationSchema
@1.4.0
+#serialize(Ljava/lang/Object;)[B
@1.11.0
+#open(Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;)V

+###org/apache/flink/api/common/serialization/SimpleStringSchema
@1.4.0
+#<init>()V
+#<init>(Ljava/nio/charset/Charset;)V
+#getCharset()Ljava/nio/charset/Charset;
+#deserialize([B)Ljava/lang/String;
+#isEndOfStream(Ljava/lang/String;)Z
+#serialize(Ljava/lang/String;)[B
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#isEndOfStream(Ljava/lang/Object;)Z
+#deserialize([B)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)[B

+###org/apache/flink/api/common/serialization/TypeInformationSerializationSchema
@1.4.0
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/ExecutionConfig;)V
+#deserialize([B)Ljava/lang/Object;
+#isEndOfStream(Ljava/lang/Object;)Z
+#serialize(Ljava/lang/Object;)[B
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.5.0
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V

+###org/apache/flink/api/common/state/AggregatingState
@1.3.0

+###org/apache/flink/api/common/state/AggregatingStateDescriptor
@1.3.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/functions/AggregateFunction;Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/functions/AggregateFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/functions/AggregateFunction;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/AggregatingState;
+#getAggregateFunction()Lorg/apache/flink/api/common/functions/AggregateFunction;
+#getType()Lorg/apache/flink/api/common/state/StateDescriptor$Type;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;
@1.5.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@1.6.0
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/AggregatingState;
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;

+###org/apache/flink/api/common/state/AppendingState
@1.1.0
+#get()Ljava/lang/Object;
+#add(Ljava/lang/Object;)V

+###org/apache/flink/api/common/state/BroadcastState
@1.5.0
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)V
+#iterator()Ljava/util/Iterator;
+#entries()Ljava/lang/Iterable;

+###org/apache/flink/api/common/state/FoldingState
@1.0.0
@1.12.0
-###org/apache/flink/api/common/state/FoldingState

+###org/apache/flink/api/common/state/FoldingStateDescriptor
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/flink/api/common/functions/FoldFunction;Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/flink/api/common/functions/FoldFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/flink/api/common/functions/FoldFunction;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/FoldingState;
+#getFoldFunction()Lorg/apache/flink/api/common/functions/FoldFunction;
+#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/State;
@1.1.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.2.0
+#getType()Lorg/apache/flink/api/common/state/StateDescriptor$Type;
@1.3.0
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/FoldingState;
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;
-#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/FoldingState;
-#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/State;
@1.5.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@1.6.0
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/FoldingState;
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;
@1.12.0
-###org/apache/flink/api/common/state/FoldingStateDescriptor

+###org/apache/flink/api/common/state/KeyedStateStore
@1.2.0
+#getState(Lorg/apache/flink/api/common/state/ValueStateDescriptor;)Lorg/apache/flink/api/common/state/ValueState;
+#getListState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
+#getReducingState(Lorg/apache/flink/api/common/state/ReducingStateDescriptor;)Lorg/apache/flink/api/common/state/ReducingState;
@1.3.0
+#getFoldingState(Lorg/apache/flink/api/common/state/FoldingStateDescriptor;)Lorg/apache/flink/api/common/state/FoldingState;[deprecated]
+#getMapState(Lorg/apache/flink/api/common/state/MapStateDescriptor;)Lorg/apache/flink/api/common/state/MapState;
@1.4.0
+#getAggregatingState(Lorg/apache/flink/api/common/state/AggregatingStateDescriptor;)Lorg/apache/flink/api/common/state/AggregatingState;
@1.12.0
-#getFoldingState(Lorg/apache/flink/api/common/state/FoldingStateDescriptor;)Lorg/apache/flink/api/common/state/FoldingState;[deprecated]

+###org/apache/flink/api/common/state/ListState
@1.0.0
@1.5.0
+#update(Ljava/util/List;)V
+#addAll(Ljava/util/List;)V

+###org/apache/flink/api/common/state/ListStateDescriptor
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/ListState;
+#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/State;
@1.1.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.2.0
+#getType()Lorg/apache/flink/api/common/state/StateDescriptor$Type;
@1.3.0
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/ListState;
+#getElementSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;
-#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/ListState;
-#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/State;
@1.5.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@1.6.0
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/ListState;
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;

+###org/apache/flink/api/common/state/MapState
@1.3.0
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)V
+#contains(Ljava/lang/Object;)Z
+#entries()Ljava/lang/Iterable;
+#keys()Ljava/lang/Iterable;
+#values()Ljava/lang/Iterable;
+#iterator()Ljava/util/Iterator;
@1.10.0
+#isEmpty()Z

+###org/apache/flink/api/common/state/MapStateDescriptor
@1.3.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/MapState;
+#getType()Lorg/apache/flink/api/common/state/StateDescriptor$Type;
+#getKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getValueSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;
@1.5.0
-#hashCode()I
-#equals(Ljava/lang/Object;)Z
-#toString()Ljava/lang/String;
@1.6.0
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/MapState;
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;

+###org/apache/flink/api/common/state/MergingState
@1.0.0
+#get()Ljava/lang/Object;
+#add(Ljava/lang/Object;)V
@1.1.0
-#get()Ljava/lang/Object;
-#add(Ljava/lang/Object;)V

+###org/apache/flink/api/common/state/OperatorStateStore
@1.2.0
+#getOperatorState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
+#getSerializableListState(Ljava/lang/String;)Lorg/apache/flink/api/common/state/ListState;
+#getRegisteredStateNames()Ljava/util/Set;
@1.3.0
+#getListState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
+#getUnionListState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
*#getOperatorState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;[deprecated]
*#getSerializableListState(Ljava/lang/String;)Lorg/apache/flink/api/common/state/ListState;[deprecated]
@1.5.0
+#getBroadcastState(Lorg/apache/flink/api/common/state/MapStateDescriptor;)Lorg/apache/flink/api/common/state/BroadcastState;
+#getRegisteredBroadcastStateNames()Ljava/util/Set;
@1.11.0
-#getOperatorState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;[deprecated]
-#getSerializableListState(Ljava/lang/String;)Lorg/apache/flink/api/common/state/ListState;[deprecated]

+###org/apache/flink/api/common/state/ReadOnlyBroadcastState
@1.5.0
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#immutableEntries()Ljava/lang/Iterable;

+###org/apache/flink/api/common/state/ReducingState
@1.0.0

+###org/apache/flink/api/common/state/ReducingStateDescriptor
@1.0.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/functions/ReduceFunction;Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/functions/ReduceFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/functions/ReduceFunction;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/ReducingState;
+#getReduceFunction()Lorg/apache/flink/api/common/functions/ReduceFunction;
+#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/State;
@1.1.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.2.0
+#getType()Lorg/apache/flink/api/common/state/StateDescriptor$Type;
@1.3.0
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/ReducingState;
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;
-#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/ReducingState;
-#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/State;
@1.5.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@1.6.0
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/ReducingState;
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;

+###org/apache/flink/api/common/state/State
@1.0.0
+#clear()V

+###org/apache/flink/api/common/state/StateBinder
@1.3.0
+#createValueState(Lorg/apache/flink/api/common/state/ValueStateDescriptor;)Lorg/apache/flink/api/common/state/ValueState;
+#createListState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
+#createReducingState(Lorg/apache/flink/api/common/state/ReducingStateDescriptor;)Lorg/apache/flink/api/common/state/ReducingState;
+#createAggregatingState(Lorg/apache/flink/api/common/state/AggregatingStateDescriptor;)Lorg/apache/flink/api/common/state/AggregatingState;
+#createFoldingState(Lorg/apache/flink/api/common/state/FoldingStateDescriptor;)Lorg/apache/flink/api/common/state/FoldingState;[deprecated]
+#createMapState(Lorg/apache/flink/api/common/state/MapStateDescriptor;)Lorg/apache/flink/api/common/state/MapState;
@1.6.0
-###org/apache/flink/api/common/state/StateBinder

+###org/apache/flink/api/common/state/StateDescriptor$Type
@1.2.0
+#values()[Lorg/apache/flink/api/common/state/StateDescriptor$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/state/StateDescriptor$Type;

+###org/apache/flink/api/common/state/StateDescriptor
@1.0.0
+#getName()Ljava/lang/String;
+#getDefaultValue()Ljava/lang/Object;
+#getSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/State;
+#isSerializerInitialized()Z
+#initializeSerializerUnlessSet(Lorg/apache/flink/api/common/ExecutionConfig;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.2.0
+#setQueryable(Ljava/lang/String;)V
+#getQueryableStateName()Ljava/lang/String;
+#isQueryable()Z
+#getType()Lorg/apache/flink/api/common/state/StateDescriptor$Type;
@1.3.0
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;
-#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/State;
@1.6.0
+#enableTimeToLive(Lorg/apache/flink/api/common/state/StateTtlConfig;)V
+#getTtlConfig()Lorg/apache/flink/api/common/state/StateTtlConfig;
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;

+###org/apache/flink/api/common/state/ValueState
@1.0.0
+#value()Ljava/lang/Object;
+#update(Ljava/lang/Object;)V

+###org/apache/flink/api/common/state/ValueStateDescriptor
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)V
+#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/ValueState;
+#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/State;
@1.1.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.2.0
*#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V[deprecated]
*#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/Object;)V[deprecated]
*#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Object;)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getType()Lorg/apache/flink/api/common/state/StateDescriptor$Type;
@1.3.0
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/ValueState;
+#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;
-#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/ValueState;
-#bind(Lorg/apache/flink/api/common/state/StateBackend;)Lorg/apache/flink/api/common/state/State;
@1.5.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@1.6.0
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/ValueState;
-#bind(Lorg/apache/flink/api/common/state/StateBinder;)Lorg/apache/flink/api/common/state/State;

+###org/apache/flink/api/common/TaskInfo
@1.0.0
+#<init>(Ljava/lang/String;III)V
+#getTaskName()Ljava/lang/String;
+#getIndexOfThisSubtask()I
+#getNumberOfParallelSubtasks()I
+#getAttemptNumber()I
+#getTaskNameWithSubtasks()Ljava/lang/String;
@1.2.0
+#<init>(Ljava/lang/String;IIII)V
+#getNumberOfKeyGroups()I
-#<init>(Ljava/lang/String;III)V
@1.3.0
+#getMaxNumberOfParallelSubtasks()I
-#getNumberOfKeyGroups()I
@1.5.0
+#<init>(Ljava/lang/String;IIIILjava/lang/String;)V
+#getAllocationIDAsString()Ljava/lang/String;

+###org/apache/flink/api/common/time/Deadline
@1.5.0
+#plus(Ljava/time/Duration;)Lorg/apache/flink/api/common/time/Deadline;
+#timeLeft()Ljava/time/Duration;
+#hasTimeLeft()Z
+#isOverdue()Z
+#now()Lorg/apache/flink/api/common/time/Deadline;
+#fromNow(Ljava/time/Duration;)Lorg/apache/flink/api/common/time/Deadline;
@1.10.0
+#timeLeftIfAny()Ljava/time/Duration;
@1.13.0
+#fromNowWithClock(Ljava/time/Duration;Lorg/apache/flink/util/clock/Clock;)Lorg/apache/flink/api/common/time/Deadline;
+#toString()Ljava/lang/String;

+###org/apache/flink/api/common/time/Time
@1.1.0
+#getUnit()Ljava/util/concurrent/TimeUnit;
+#getSize()J
+#toMilliseconds()J
+#toString()Ljava/lang/String;
+#of(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/api/common/time/Time;
+#milliseconds(J)Lorg/apache/flink/api/common/time/Time;
+#seconds(J)Lorg/apache/flink/api/common/time/Time;
+#minutes(J)Lorg/apache/flink/api/common/time/Time;
+#hours(J)Lorg/apache/flink/api/common/time/Time;
+#days(J)Lorg/apache/flink/api/common/time/Time;
@1.10.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.14.0
+#fromDuration(Ljava/time/Duration;)Lorg/apache/flink/api/common/time/Time;

+###org/apache/flink/api/common/typeinfo/FractionalTypeInfo
@0.9.0-milestone-1

+###org/apache/flink/api/common/typeinfo/IntegerTypeInfo
@0.9.0-milestone-1

+###org/apache/flink/api/common/typeinfo/NumericTypeInfo
@0.9.0-milestone-1

+###org/apache/flink/api/common/typeinfo/SqlTimeTypeInfo
@1.1.0
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createComparator(ZLorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getInfoFor(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/SqlTimeTypeInfo;

+###org/apache/flink/api/common/typeinfo/TypeHint
@1.0.0
+#<init>()V
+#getTypeInfo()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.3.0
+#<init>(Ljava/lang/Class;Ljava/lang/Object;I)V
@1.5.0
-#<init>(Ljava/lang/Class;Ljava/lang/Object;I)V

+###org/apache/flink/api/common/typeinfo/TypeInfo
@1.2.0
+#value()Ljava/lang/Class;

+###org/apache/flink/api/common/typeinfo/TypeInfoFactory
@1.2.0
+#<init>()V
+#createTypeInfo(Ljava/lang/reflect/Type;Ljava/util/Map;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/api/common/typeinfo/Types
@1.3.0
+#<init>()V
+#ROW([Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/java/typeutils/RowTypeInfo;
+#ROW_NAMED([Ljava/lang/String;[Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/java/typeutils/RowTypeInfo;
@1.5.0
+#ROW([Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#ROW_NAMED([Ljava/lang/String;[Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#TUPLE([Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#TUPLE(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#POJO(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#POJO(Ljava/lang/Class;Ljava/util/Map;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#GENERIC(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#PRIMITIVE_ARRAY(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#OBJECT_ARRAY(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#VALUE(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#MAP(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#LIST(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#ENUM(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#EITHER(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#ROW([Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/java/typeutils/RowTypeInfo;
-#ROW_NAMED([Ljava/lang/String;[Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/java/typeutils/RowTypeInfo;

+###org/apache/flink/api/common/typeutils/base/array/BooleanPrimitiveArrayComparator
@0.10.0
+#<init>(Z)V
+#hash([Z)I
+#compare([Z[Z)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/array/BytePrimitiveArrayComparator
@0.10.0
+#<init>(Z)V
+#hash([B)I
+#compare([B[B)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/array/CharPrimitiveArrayComparator
@0.10.0
+#<init>(Z)V
+#hash([C)I
+#compare([C[C)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/array/DoublePrimitiveArrayComparator
@0.10.0
+#<init>(Z)V
+#hash([D)I
+#compare([D[D)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/array/FloatPrimitiveArrayComparator
@0.10.0
+#<init>(Z)V
+#hash([F)I
+#compare([F[F)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/array/IntPrimitiveArrayComparator
@0.10.0
+#<init>(Z)V
+#hash([I)I
+#compare([I[I)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/array/LongPrimitiveArrayComparator
@0.10.0
+#<init>(Z)V
+#hash([J)I
+#compare([J[J)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/array/PrimitiveArrayComparator
@0.10.0
+#<init>(ZLorg/apache/flink/api/common/typeutils/base/BasicTypeComparator;)V
+#setReference(Ljava/lang/Object;)V
+#equalToReference(Ljava/lang/Object;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#invertNormalizedKey()Z

+###org/apache/flink/api/common/typeutils/base/array/ShortPrimitiveArrayComparator
@0.10.0
+#<init>(Z)V
+#hash([S)I
+#compare([S[S)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/BigDecComparator
@1.1.0
+#<init>(Z)V
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/math/BigDecimal;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/BigDecComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/api/common/typeutils/base/BigDecSerializer
@1.1.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Ljava/math/BigDecimal;
+#copy(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#copy(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#getLength()I
+#serialize(Ljava/math/BigDecimal;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/math/BigDecimal;
+#deserialize(Ljava/math/BigDecimal;Lorg/apache/flink/core/memory/DataInputView;)Ljava/math/BigDecimal;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#canEqual(Ljava/lang/Object;)Z
+#readBigDecimal(Lorg/apache/flink/core/memory/DataInputView;)Ljava/math/BigDecimal;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/BigIntComparator
@1.1.0
+#<init>(Z)V
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/math/BigInteger;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/BigIntComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/api/common/typeutils/base/BigIntSerializer
@1.1.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Ljava/math/BigInteger;
+#copy(Ljava/math/BigInteger;)Ljava/math/BigInteger;
+#copy(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
+#getLength()I
+#serialize(Ljava/math/BigInteger;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/math/BigInteger;
+#deserialize(Ljava/math/BigInteger;Lorg/apache/flink/core/memory/DataInputView;)Ljava/math/BigInteger;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#canEqual(Ljava/lang/Object;)Z
+#writeBigInteger(Ljava/math/BigInteger;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readBigInteger(Lorg/apache/flink/core/memory/DataInputView;)Ljava/math/BigInteger;
+#copyBigInteger(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)Z
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/BooleanValueComparator
@1.1.0
+#<init>(Z)V
+#hash(Lorg/apache/flink/types/BooleanValue;)I
+#setReference(Lorg/apache/flink/types/BooleanValue;)V
+#equalToReference(Lorg/apache/flink/types/BooleanValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/BooleanValue;Lorg/apache/flink/types/BooleanValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/BooleanValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/BooleanValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/BooleanValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/BooleanValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/ByteValueComparator
@1.1.0
+#<init>(Z)V
+#hash(Lorg/apache/flink/types/ByteValue;)I
+#setReference(Lorg/apache/flink/types/ByteValue;)V
+#equalToReference(Lorg/apache/flink/types/ByteValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/ByteValue;Lorg/apache/flink/types/ByteValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/ByteValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/ByteValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/ByteValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/ByteValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/CharValueComparator
@1.1.0
+#<init>(Z)V
+#hash(Lorg/apache/flink/types/CharValue;)I
+#setReference(Lorg/apache/flink/types/CharValue;)V
+#equalToReference(Lorg/apache/flink/types/CharValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/CharValue;Lorg/apache/flink/types/CharValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/CharValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/CharValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/CharValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/CharValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/CollectionSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getVersion()I
@1.7.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/common/typeutils/base/DateComparator
@0.8.0
+#<init>(Z)V
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/util/Date;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/DateComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
@1.1.0
+#compareSerializedDate(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;Z)I
+#putNormalizedKeyDate(Ljava/util/Date;Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/api/common/typeutils/base/DateSerializer
@0.8.0
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/util/Date;
+#copy(Ljava/util/Date;)Ljava/util/Date;
+#copy(Ljava/util/Date;Ljava/util/Date;)Ljava/util/Date;
+#getLength()I
+#serialize(Ljava/util/Date;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/util/Date;
+#deserialize(Ljava/util/Date;Lorg/apache/flink/core/memory/DataInputView;)Ljava/util/Date;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/DoubleValueComparator
@1.1.0
+#<init>(Z)V
+#hash(Lorg/apache/flink/types/DoubleValue;)I
+#setReference(Lorg/apache/flink/types/DoubleValue;)V
+#equalToReference(Lorg/apache/flink/types/DoubleValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/DoubleValue;Lorg/apache/flink/types/DoubleValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/DoubleValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/DoubleValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/DoubleValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/DoubleValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/EnumComparator
@0.8.0
+#<init>(Z)V
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Enum;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/EnumComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/api/common/typeutils/base/EnumSerializer$EnumSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/Class;[Ljava/lang/Enum;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getVersion()I
+#getEnumConstants()[Ljava/lang/Enum;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.3.1
+#getCompatibleVersions()[I
+#getEnumConstants()Ljava/util/List;
-#getEnumConstants()[Ljava/lang/Enum;
@1.8.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
-#<init>(Ljava/lang/Class;[Ljava/lang/Enum;)V
-#getEnumConstants()Ljava/util/List;

+###org/apache/flink/api/common/typeutils/base/EnumSerializer
@0.8.0
+#<init>(Ljava/lang/Class;)V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Enum;
+#copy(Ljava/lang/Enum;)Ljava/lang/Enum;
+#copy(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/lang/Enum;
+#getLength()I
+#serialize(Ljava/lang/Enum;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Enum;
+#deserialize(Ljava/lang/Enum;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Enum;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.8.1
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/EnumSerializer;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/base/EnumSerializer$EnumSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/base/EnumSerializer$EnumSerializerSnapshot;
+#toString()Ljava/lang/String;
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/base/EnumSerializer$EnumSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;

+###org/apache/flink/api/common/typeutils/base/FloatValueComparator
@1.1.0
+#<init>(Z)V
+#hash(Lorg/apache/flink/types/FloatValue;)I
+#setReference(Lorg/apache/flink/types/FloatValue;)V
+#equalToReference(Lorg/apache/flink/types/FloatValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/FloatValue;Lorg/apache/flink/types/FloatValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/FloatValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/FloatValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/FloatValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/FloatValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/GenericArraySerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getVersion()I
+#getComponentClass()Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.7.0
+#<init>(Lorg/apache/flink/api/common/typeutils/base/GenericArraySerializer;)V
+#getCurrentVersion()I
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
-#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
-#getVersion()I
-#getComponentClass()Ljava/lang/Class;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.0
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/base/GenericArraySerializer;

+###org/apache/flink/api/common/typeutils/base/IntValueComparator
@1.1.0
+#<init>(Z)V
+#hash(Lorg/apache/flink/types/IntValue;)I
+#setReference(Lorg/apache/flink/types/IntValue;)V
+#equalToReference(Lorg/apache/flink/types/IntValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/IntValue;Lorg/apache/flink/types/IntValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/IntValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/IntValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/IntValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/IntValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/ListSerializer
@1.3.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getElementSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createInstance()Ljava/util/List;
+#copy(Ljava/util/List;)Ljava/util/List;
+#copy(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
+#getLength()I
+#serialize(Ljava/util/List;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/util/List;
+#deserialize(Ljava/util/List;Lorg/apache/flink/core/memory/DataInputView;)Ljava/util/List;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/base/CollectionSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/base/CollectionSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/LongValueComparator
@1.1.0
+#<init>(Z)V
+#hash(Lorg/apache/flink/types/LongValue;)I
+#setReference(Lorg/apache/flink/types/LongValue;)V
+#equalToReference(Lorg/apache/flink/types/LongValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/LongValue;Lorg/apache/flink/types/LongValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/LongValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/LongValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/LongValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/LongValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/MapSerializer
@1.3.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getKeySerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getValueSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createInstance()Ljava/util/Map;
+#copy(Ljava/util/Map;)Ljava/util/Map;
+#copy(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
+#getLength()I
+#serialize(Ljava/util/Map;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/util/Map;
+#deserialize(Ljava/util/Map;Lorg/apache/flink/core/memory/DataInputView;)Ljava/util/Map;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/base/MapSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/base/MapSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/MapSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getVersion()I
@1.7.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/common/typeutils/base/NullValueComparator
@1.1.0
+#getInstance()Lorg/apache/flink/api/common/typeutils/base/NullValueComparator;
+#hash(Lorg/apache/flink/types/NullValue;)I
+#setReference(Lorg/apache/flink/types/NullValue;)V
+#equalToReference(Lorg/apache/flink/types/NullValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/NullValue;Lorg/apache/flink/types/NullValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/NullValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/NullValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/NullValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/NullValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/NullValueSerializer
@1.1.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Lorg/apache/flink/types/NullValue;
+#copy(Lorg/apache/flink/types/NullValue;)Lorg/apache/flink/types/NullValue;
+#copy(Lorg/apache/flink/types/NullValue;Lorg/apache/flink/types/NullValue;)Lorg/apache/flink/types/NullValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/NullValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/NullValue;
+#deserialize(Lorg/apache/flink/types/NullValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/NullValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#canEqual(Ljava/lang/Object;)Z
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/ShortValueComparator
@1.1.0
+#<init>(Z)V
+#hash(Lorg/apache/flink/types/ShortValue;)I
+#setReference(Lorg/apache/flink/types/ShortValue;)V
+#equalToReference(Lorg/apache/flink/types/ShortValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/ShortValue;Lorg/apache/flink/types/ShortValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/ShortValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/ShortValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/ShortValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/ShortValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/SqlDateSerializer
@1.1.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Ljava/sql/Date;
+#copy(Ljava/sql/Date;)Ljava/sql/Date;
+#copy(Ljava/sql/Date;Ljava/sql/Date;)Ljava/sql/Date;
+#getLength()I
+#serialize(Ljava/sql/Date;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/sql/Date;
+#deserialize(Ljava/sql/Date;Lorg/apache/flink/core/memory/DataInputView;)Ljava/sql/Date;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#canEqual(Ljava/lang/Object;)Z
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/SqlTimeSerializer
@1.1.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Ljava/sql/Time;
+#copy(Ljava/sql/Time;)Ljava/sql/Time;
+#copy(Ljava/sql/Time;Ljava/sql/Time;)Ljava/sql/Time;
+#getLength()I
+#serialize(Ljava/sql/Time;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/sql/Time;
+#deserialize(Ljava/sql/Time;Lorg/apache/flink/core/memory/DataInputView;)Ljava/sql/Time;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#canEqual(Ljava/lang/Object;)Z
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/SqlTimestampComparator
@1.1.0
+#<init>(Z)V
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/util/Date;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/SqlTimestampComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/api/common/typeutils/base/SqlTimestampSerializer
@1.1.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Ljava/sql/Timestamp;
+#copy(Ljava/sql/Timestamp;)Ljava/sql/Timestamp;
+#copy(Ljava/sql/Timestamp;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;
+#getLength()I
+#serialize(Ljava/sql/Timestamp;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/sql/Timestamp;
+#deserialize(Ljava/sql/Timestamp;Lorg/apache/flink/core/memory/DataInputView;)Ljava/sql/Timestamp;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#canEqual(Ljava/lang/Object;)Z
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/StringValueComparator
@1.1.0
+#<init>(Z)V
+#hash(Lorg/apache/flink/types/StringValue;)I
+#setReference(Lorg/apache/flink/types/StringValue;)V
+#equalToReference(Lorg/apache/flink/types/StringValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/StringValue;Lorg/apache/flink/types/StringValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/StringValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/StringValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/StringValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/StringValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/VoidSerializer
@0.8.0
+#<init>()V
+#isImmutableType()Z
+#isStateful()Z
+#createInstance()Ljava/lang/Void;
+#copy(Ljava/lang/Void;)Ljava/lang/Void;
+#copy(Ljava/lang/Void;Ljava/lang/Void;)Ljava/lang/Void;
+#getLength()I
+#serialize(Ljava/lang/Void;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Void;
+#deserialize(Ljava/lang/Void;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Void;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@0.8.1
-#isStateful()Z
@0.10.0
+#canEqual(Ljava/lang/Object;)Z
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/CompatibilityResult
@1.3.0
+#compatible()Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#requiresMigration(Lorg/apache/flink/api/common/typeutils/TypeDeserializer;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#requiresMigration()Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#getConvertDeserializer()Lorg/apache/flink/api/common/typeutils/TypeDeserializer;
+#isRequiresMigration()Z
@1.3.1
+#requiresMigration(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
@1.8.0
-###org/apache/flink/api/common/typeutils/CompatibilityResult

+###org/apache/flink/api/common/typeutils/CompatibilityUtil
@1.3.0
+#<init>()V
+#resolveCompatibilityResult(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Class;Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
@1.7.0
+#resolveCompatibilityResult(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Class;Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#resolveCompatibilityResult(Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
-#resolveCompatibilityResult(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Class;Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
@1.8.0
-###org/apache/flink/api/common/typeutils/CompatibilityUtil

+###org/apache/flink/api/common/typeutils/CompositeType$InvalidFieldReferenceException
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;)V

+###org/apache/flink/api/common/typeutils/CompositeType$TypeComparatorBuilder
@0.10.0
+#initializeTypeComparatorBuilder(I)V
+#addComparatorField(ILorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#createTypeComparator(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;

+###org/apache/flink/api/common/typeutils/CompositeTypeSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>([Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getNestedSerializersAndConfigs()Ljava/util/List;
+#getSingleNestedSerializerAndConfig()Lorg/apache/flink/api/java/tuple/Tuple2;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.0
+#getNestedSerializerSnapshots()[Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/api/common/typeutils/GenericTypeSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getTypeClass()Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/common/typeutils/ParameterlessTypeSerializerConfig
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getVersion()I
+#getSerializationFormatIdentifier()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/common/typeutils/SameTypePairComparator
@1.1.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#setReference(Ljava/lang/Object;)V
+#equalToReference(Ljava/lang/Object;)Z
+#compareToReference(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/TypeDeserializer
@1.3.0
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#getLength()I
+#canEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.0
-###org/apache/flink/api/common/typeutils/TypeDeserializer

+###org/apache/flink/api/common/typeutils/TypeDeserializerAdapter
@1.3.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeDeserializer;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getLength()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#isImmutableType()Z
+#createInstance()Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
@1.3.1
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-###org/apache/flink/api/common/typeutils/TypeDeserializerAdapter

+###org/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#setUserCodeClassLoader(Ljava/lang/ClassLoader;)V
+#getUserCodeClassLoader()Ljava/lang/ClassLoader;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.7.0
+#setPriorSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getCurrentVersion()I
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###org/apache/flink/api/common/typeutils/TypeSerializerSerializationUtil$TypeSerializerSerializationProxy
@1.3.0
+#<init>(Ljava/lang/ClassLoader;Z)V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getTypeSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getVersion()I
@1.5.0
-#<init>(Ljava/lang/ClassLoader;Z)V

+###org/apache/flink/api/common/typeutils/TypeSerializerSerializationUtil
@1.3.0
+#<init>()V
+#writeSerializer(Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#tryReadSerializer(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#tryReadSerializer(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;Z)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#writeSerializersAndConfigsWithResilience(Lorg/apache/flink/core/memory/DataOutputView;Ljava/util/List;)V
+#readSerializersAndConfigsWithResilience(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Ljava/util/List;
+#writeSerializerConfigSnapshot(Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)V
+#readSerializerConfigSnapshot(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
+#writeSerializerConfigSnapshots(Lorg/apache/flink/core/memory/DataOutputView;[Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)V
+#readSerializerConfigSnapshots(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)[Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.7.0
-#writeSerializerConfigSnapshot(Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)V
-#readSerializerConfigSnapshot(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
-#writeSerializerConfigSnapshots(Lorg/apache/flink/core/memory/DataOutputView;[Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)V
-#readSerializerConfigSnapshots(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)[Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;

+###org/apache/flink/api/common/typeutils/UnloadableDummyTypeSerializer
@1.3.0
+#<init>([B)V
+#getActualBytes()[B
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createInstance()Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getLength()I
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#canEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.7.0
+#<init>([BLjava/lang/Throwable;)V
+#getOriginalError()Ljava/lang/Throwable;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/UnloadableTypeSerializerException
@1.5.0
+#<init>(Ljava/lang/Exception;[B)V
+#getSerializerBytes()[B
@1.7.0
-###org/apache/flink/api/common/typeutils/UnloadableTypeSerializerException

+###org/apache/flink/api/java/functions/KeySelector
@1.0.0
+#getKey(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/java/functions/NullByteKeySelector
@1.3.0
+#<init>()V
+#getKey(Ljava/lang/Object;)Ljava/lang/Byte;
+#getKey(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/api/java/tuple/builder/Tuple0Builder
@1.0.0
+#<init>()V
+#add()Lorg/apache/flink/api/java/tuple/builder/Tuple0Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple0;

+###org/apache/flink/api/java/tuple/builder/Tuple10Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple10Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple10;

+###org/apache/flink/api/java/tuple/builder/Tuple11Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple11Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple11;

+###org/apache/flink/api/java/tuple/builder/Tuple12Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple12Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple12;

+###org/apache/flink/api/java/tuple/builder/Tuple13Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple13Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple13;

+###org/apache/flink/api/java/tuple/builder/Tuple14Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple14Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple14;

+###org/apache/flink/api/java/tuple/builder/Tuple15Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple15Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple15;

+###org/apache/flink/api/java/tuple/builder/Tuple16Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple16Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple16;

+###org/apache/flink/api/java/tuple/builder/Tuple17Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple17Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple17;

+###org/apache/flink/api/java/tuple/builder/Tuple18Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple18Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple18;

+###org/apache/flink/api/java/tuple/builder/Tuple19Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple19Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple19;

+###org/apache/flink/api/java/tuple/builder/Tuple1Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple1Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple1;

+###org/apache/flink/api/java/tuple/builder/Tuple20Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple20Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple20;

+###org/apache/flink/api/java/tuple/builder/Tuple21Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple21Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple21;

+###org/apache/flink/api/java/tuple/builder/Tuple22Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple22Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple22;

+###org/apache/flink/api/java/tuple/builder/Tuple23Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple23Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple23;

+###org/apache/flink/api/java/tuple/builder/Tuple24Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple24Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple24;

+###org/apache/flink/api/java/tuple/builder/Tuple25Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple25Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple25;

+###org/apache/flink/api/java/tuple/builder/Tuple2Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple2Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple2;

+###org/apache/flink/api/java/tuple/builder/Tuple3Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple3Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple3;

+###org/apache/flink/api/java/tuple/builder/Tuple4Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple4Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple4;

+###org/apache/flink/api/java/tuple/builder/Tuple5Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple5Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple5;

+###org/apache/flink/api/java/tuple/builder/Tuple6Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple6Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple6;

+###org/apache/flink/api/java/tuple/builder/Tuple7Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple7Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple7;

+###org/apache/flink/api/java/tuple/builder/Tuple8Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple8Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple8;

+###org/apache/flink/api/java/tuple/builder/Tuple9Builder
@1.0.0
+#<init>()V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/builder/Tuple9Builder;
+#build()[Lorg/apache/flink/api/java/tuple/Tuple9;

+###org/apache/flink/api/java/tuple/Tuple
@1.0.0
+#<init>()V
+#getField(I)Ljava/lang/Object;
+#getFieldNotNull(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#getArity()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;
+#getTupleClass(I)Ljava/lang/Class;
@1.6.0
+#newInstance(I)Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple0
@1.0.0
+#<init>()V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#copy()Lorg/apache/flink/api/java/tuple/Tuple0;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple1
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple1;
+#of(Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple1;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple10
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple10;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple10;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple11
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple11;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple11;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple12
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple12;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple12;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple13
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple13;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple13;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple14
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple14;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple14;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple15
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple15;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple15;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple16
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple16;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple16;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple17
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple17;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple17;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple18
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple18;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple18;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple19
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple19;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple19;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple2
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;)V
+#swap()Lorg/apache/flink/api/java/tuple/Tuple2;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple2;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple2;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple20
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple20;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple20;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple21
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple21;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple21;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple22
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple22;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple22;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple23
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple23;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple23;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple24
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple24;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple24;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple25
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple25;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple25;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple3
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple3;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple3;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple4
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple4;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple4;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple5
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple5;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple5;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple6
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple6;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple6;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple7
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple7;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple7;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple8
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple8;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple8;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/tuple/Tuple9
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/Object;I)V
+#setFields(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/flink/api/java/tuple/Tuple9;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple9;
+#copy()Lorg/apache/flink/api/java/tuple/Tuple;

+###org/apache/flink/api/java/typeutils/AvroUtils
@1.4.0
+#<init>()V
+#getAvroUtils()Lorg/apache/flink/api/java/typeutils/AvroUtils;
+#addAvroSerializersIfRequired(Lorg/apache/flink/api/common/ExecutionConfig;Ljava/lang/Class;)V
+#addAvroGenericDataArrayRegistration(Ljava/util/LinkedHashMap;)V
+#createAvroSerializer(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createAvroTypeInfo(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/api/java/typeutils/EitherTypeInfo
@1.0.0
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
+#getLeftType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getRightType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.3.0
+#getGenericParameters()Ljava/util/Map;

+###org/apache/flink/api/java/typeutils/EitherTypeInfoFactory
@1.3.0
+#<init>()V
+#createTypeInfo(Ljava/lang/reflect/Type;Ljava/util/Map;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/api/java/typeutils/EnumTypeInfo
@1.0.0
+#<init>(Ljava/lang/Class;)V
+#createComparator(ZLorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z

+###org/apache/flink/api/java/typeutils/GenericTypeInfo
@1.0.0
+#<init>(Ljava/lang/Class;)V
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createComparator(ZLorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/api/java/typeutils/InputTypeConfigurable
@1.0.0
+#setInputType(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/ExecutionConfig;)V

+###org/apache/flink/api/java/typeutils/ListTypeInfo
@1.3.0
+#<init>(Ljava/lang/Class;)V
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getElementTypeInfo()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/java/typeutils/MapTypeInfo
@1.3.0
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
+#getKeyTypeInfo()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getValueTypeInfo()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/java/typeutils/MissingTypeInfo
@1.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/functions/InvalidTypesException;)V
+#getFunctionName()Ljava/lang/String;
+#getTypeException()Lorg/apache/flink/api/common/functions/InvalidTypesException;
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
+#getTotalFields()I

+###org/apache/flink/api/java/typeutils/MultisetTypeInfo
@1.4.0
+#<init>(Ljava/lang/Class;)V
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getElementTypeInfo()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
+#getInfoFor(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/java/typeutils/MultisetTypeInfo;

+###org/apache/flink/api/java/typeutils/ObjectArrayTypeInfo
@1.0.0
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#getComponentInfo()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#getInfoFor(Ljava/lang/Class;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/java/typeutils/ObjectArrayTypeInfo;
+#getInfoFor(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/java/typeutils/ObjectArrayTypeInfo;

+###org/apache/flink/api/java/typeutils/PojoField
@1.0.0
+#<init>(Ljava/lang/reflect/Field;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getField()Ljava/lang/reflect/Field;
+#getTypeInformation()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/java/typeutils/PojoTypeInfo$NamedFlatFieldDescriptor
@1.0.0
+#<init>(Ljava/lang/String;ILorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getFieldName()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/flink/api/java/typeutils/PojoTypeInfo
@1.0.0
+#<init>(Ljava/lang/Class;Ljava/util/List;)V
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#isSortKeyType()Z
+#getFlatFields(Ljava/lang/String;ILjava/util/List;)V
+#getTypeAt(Ljava/lang/String;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getTypeAt(I)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getPojoFieldAt(I)Lorg/apache/flink/api/java/typeutils/PojoField;
+#getFieldNames()[Ljava/lang/String;
+#getFieldIndex(Ljava/lang/String;)I
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.4.0
+#createPojoSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializer;

+###org/apache/flink/api/java/typeutils/ResultTypeQueryable
@1.0.0
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/api/java/typeutils/RowTypeInfo
@1.2.0
+#<init>([Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>([Lorg/apache/flink/api/common/typeinfo/TypeInformation;[Ljava/lang/String;)V
+#getFlatFields(Ljava/lang/String;ILjava/util/List;)V
+#getTypeAt(Ljava/lang/String;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#createComparator([I[ZILorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#getFieldNames()[Ljava/lang/String;
+#getFieldIndex(Ljava/lang/String;)I
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.3.0
+#getFieldTypes()[Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.4.0
+#projectFields(Lorg/apache/flink/api/java/typeutils/RowTypeInfo;[I)Lorg/apache/flink/api/java/typeutils/RowTypeInfo;
@1.6.0
+#equals(Ljava/lang/Object;)Z
+#schemaEquals(Ljava/lang/Object;)Z
@1.11.0
+#createLegacySerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;[deprecated]
@1.13.0
-#getFieldTypes()[Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/api/java/typeutils/runtime/CopyableValueComparator
@1.0.0
+#<init>(ZLjava/lang/Class;)V
+#hash(Lorg/apache/flink/types/CopyableValue;)I
+#setReference(Lorg/apache/flink/types/CopyableValue;)V
+#equalToReference(Lorg/apache/flink/types/CopyableValue;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/CopyableValue;Lorg/apache/flink/types/CopyableValue;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/CopyableValue;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/CopyableValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/CopyableValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/CopyableValue;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/java/typeutils/runtime/CopyableValueSerializer$CopyableValueSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#getVersion()I
@1.8.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/java/typeutils/runtime/CopyableValueSerializer
@1.0.0
+#<init>(Ljava/lang/Class;)V
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/java/typeutils/runtime/CopyableValueSerializer;
+#createInstance()Lorg/apache/flink/types/CopyableValue;
+#copy(Lorg/apache/flink/types/CopyableValue;)Lorg/apache/flink/types/CopyableValue;
+#copy(Lorg/apache/flink/types/CopyableValue;Lorg/apache/flink/types/CopyableValue;)Lorg/apache/flink/types/CopyableValue;
+#getLength()I
+#serialize(Lorg/apache/flink/types/CopyableValue;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/CopyableValue;
+#deserialize(Lorg/apache/flink/types/CopyableValue;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/CopyableValue;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/CopyableValueSerializer$CopyableValueSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/CopyableValueSerializer$CopyableValueSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;

+###org/apache/flink/api/java/typeutils/runtime/DataInputViewStream
@1.0.0
+#<init>(Lorg/apache/flink/core/memory/DataInputView;)V
+#getInputView()Lorg/apache/flink/core/memory/DataInputView;
+#read()I
+#skip(J)J
+#read([BII)I

+###org/apache/flink/api/java/typeutils/runtime/DataOutputViewStream
@1.0.0
+#<init>(Lorg/apache/flink/core/memory/DataOutputView;)V
+#write(I)V
+#write([BII)V

+###org/apache/flink/api/java/typeutils/runtime/EitherSerializer
@1.0.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createInstance()Lorg/apache/flink/types/Either;
+#copy(Lorg/apache/flink/types/Either;)Lorg/apache/flink/types/Either;
+#copy(Lorg/apache/flink/types/Either;Lorg/apache/flink/types/Either;)Lorg/apache/flink/types/Either;
+#getLength()I
+#serialize(Lorg/apache/flink/types/Either;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Either;
+#deserialize(Lorg/apache/flink/types/Either;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Either;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/EitherSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.7.0
+#getRightSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getLeftSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/EitherSerializerSnapshot;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/EitherSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/JavaEitherSerializerSnapshot;
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/EitherSerializerSnapshot;

+###org/apache/flink/api/java/typeutils/runtime/EitherSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getVersion()I
@1.7.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
-#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V

+###org/apache/flink/api/java/typeutils/runtime/FieldSerializer
@1.2.0
+#<init>()V
+#serializeField(Ljava/lang/reflect/Field;Ljava/io/ObjectOutputStream;)V
+#deserializeField(Ljava/io/ObjectInputStream;)Ljava/lang/reflect/Field;

+###org/apache/flink/api/java/typeutils/runtime/GenericTypeComparator
@1.0.0
+#<init>(ZLorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Class;)V
+#hash(Ljava/lang/Comparable;)I
+#setReference(Ljava/lang/Comparable;)V
+#equalToReference(Ljava/lang/Comparable;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Comparable;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Ljava/lang/Comparable;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Ljava/lang/Comparable;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Comparable;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/java/typeutils/runtime/kryo/JavaSerializer
@1.1.5
+#<init>()V
+#write(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
+#read(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
@1.2.0
-###org/apache/flink/api/java/typeutils/runtime/kryo/JavaSerializer

+###org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer$KryoSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/Class;Ljava/util/LinkedHashMap;)V
+#getVersion()I
@1.8.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer
@1.0.0
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/ExecutionConfig;)V
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer;
+#createInstance()Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getLength()I
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#getKryo()Lcom/esotericsoftware/kryo/Kryo;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer$KryoSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializer$KryoSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;

+###org/apache/flink/api/java/typeutils/runtime/kryo/Serializers$DummyAvroKryoSerializerClass
@1.4.0
+#<init>()V
+#write(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
+#read(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;

+###org/apache/flink/api/java/typeutils/runtime/kryo/Serializers$DummyAvroRegisteredClass
@1.4.0
+#<init>()V

+###org/apache/flink/api/java/typeutils/runtime/kryo/Serializers$SpecificInstanceCollectionSerializer
@1.0.0
+#<init>(Ljava/lang/Class;)V

+###org/apache/flink/api/java/typeutils/runtime/kryo/Serializers$SpecificInstanceCollectionSerializerForArrayList
@1.0.0
+#<init>()V

+###org/apache/flink/api/java/typeutils/runtime/kryo/Serializers
@1.0.0
+#<init>()V
+#recursivelyRegisterType(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Set;)V
+#recursivelyRegisterType(Ljava/lang/Class;Lorg/apache/flink/api/common/ExecutionConfig;Ljava/util/Set;)V

+###org/apache/flink/api/java/typeutils/runtime/KryoRegistration$SerializerDefinitionType
@1.3.0
+#values()[Lorg/apache/flink/api/java/typeutils/runtime/KryoRegistration$SerializerDefinitionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/java/typeutils/runtime/KryoRegistration$SerializerDefinitionType;

+###org/apache/flink/api/java/typeutils/runtime/KryoRegistration
@1.3.0
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/ExecutionConfig$SerializableSerializer;)V
+#getRegisteredClass()Ljava/lang/Class;
+#getSerializerDefinitionType()Lorg/apache/flink/api/java/typeutils/runtime/KryoRegistration$SerializerDefinitionType;
+#getSerializerClass()Ljava/lang/Class;
+#getSerializableSerializerInstance()Lorg/apache/flink/api/common/ExecutionConfig$SerializableSerializer;
+#getSerializer(Lcom/esotericsoftware/kryo/Kryo;)Lcom/esotericsoftware/kryo/Serializer;
+#isDummy()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/java/typeutils/runtime/KryoRegistrationSerializerConfigSnapshot$DummyKryoSerializerClass
@1.3.0
+#<init>()V
+#write(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
+#read(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;

+###org/apache/flink/api/java/typeutils/runtime/KryoRegistrationSerializerConfigSnapshot$DummyRegisteredClass
@1.3.0
+#<init>()V

+###org/apache/flink/api/java/typeutils/runtime/KryoRegistrationSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/Class;Ljava/util/LinkedHashMap;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getKryoRegistrations()Ljava/util/LinkedHashMap;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/java/typeutils/runtime/KryoUtils
@1.0.0
+#<init>()V
+#copy(Ljava/lang/Object;Lcom/esotericsoftware/kryo/Kryo;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;Lcom/esotericsoftware/kryo/Kryo;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Ljava/lang/Object;
@1.3.0
+#applyRegistrations(Lcom/esotericsoftware/kryo/Kryo;Ljava/util/Collection;)V
@1.15.0
+#applyRegistrations(Lcom/esotericsoftware/kryo/Kryo;Ljava/util/Collection;I)V
-#applyRegistrations(Lcom/esotericsoftware/kryo/Kryo;Ljava/util/Collection;)V

+###org/apache/flink/api/java/typeutils/runtime/NoFetchingInput
@1.0.0
+#<init>(Ljava/io/InputStream;)V
+#eof()Z
+#read()I
+#canReadInt()Z
+#canReadLong()Z
+#read([BII)I
+#skip(I)V
+#readBytes([BII)V

+###org/apache/flink/api/java/typeutils/runtime/NullAwareComparator
@1.2.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeComparator;Z)V
+#hash(Ljava/lang/Object;)I
+#setReference(Ljava/lang/Object;)V
+#equalToReference(Ljava/lang/Object;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;

+###org/apache/flink/api/java/typeutils/runtime/NullMaskUtils
@1.2.0
+#<init>()V
+#writeNullMask(ILorg/apache/flink/types/Row;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readIntoNullMask(ILorg/apache/flink/core/memory/DataInputView;[Z)V
+#readIntoAndCopyNullMask(ILorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;[Z)V
@1.11.0
-###org/apache/flink/api/java/typeutils/runtime/NullMaskUtils

+###org/apache/flink/api/java/typeutils/runtime/PojoComparator
@1.0.0
+#<init>([Ljava/lang/reflect/Field;[Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Class;)V
+#getKeyFields()[Ljava/lang/reflect/Field;
+#getFlatComparator(Ljava/util/List;)V
+#accessField(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
+#hash(Ljava/lang/Object;)I
+#setReference(Ljava/lang/Object;)V
+#equalToReference(Ljava/lang/Object;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#duplicate()Lorg/apache/flink/api/java/typeutils/runtime/PojoComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;

+###org/apache/flink/api/java/typeutils/runtime/PojoSerializer$PojoSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/Class;Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap;Ljava/util/HashMap;)V
+#<init>(Ljava/lang/Class;Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap;Ljava/util/HashMap;Z)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getVersion()I
+#getFieldToSerializerConfigSnapshot()Ljava/util/LinkedHashMap;
+#getRegisteredSubclassesToSerializerConfigSnapshots()Ljava/util/LinkedHashMap;
+#getNonRegisteredSubclassesToSerializerConfigSnapshots()Ljava/util/HashMap;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/java/typeutils/runtime/PojoSerializer
@1.0.0
+#<init>(Ljava/lang/Class;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;[Ljava/lang/reflect/Field;Lorg/apache/flink/api/common/ExecutionConfig;)V
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializer;
+#createInstance()Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getLength()I
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.3.0
+#<init>(Ljava/lang/Class;[Ljava/lang/reflect/Field;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/util/LinkedHashMap;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/util/HashMap;)V
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializer$PojoSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerSnapshot;
-#<init>(Ljava/lang/Class;[Ljava/lang/reflect/Field;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/util/LinkedHashMap;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/util/HashMap;)V
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializer$PojoSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;

+###org/apache/flink/api/java/typeutils/runtime/RowComparator
@1.2.0
+#<init>(I[I[Lorg/apache/flink/api/common/typeutils/TypeComparator;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;[Z)V
+#getFlatComparator(Ljava/util/List;)V
+#hash(Lorg/apache/flink/types/Row;)I
+#setReference(Lorg/apache/flink/types/Row;)V
+#equalToReference(Lorg/apache/flink/types/Row;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/Row;Lorg/apache/flink/types/Row;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/Row;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#writeWithKeyNormalization(Lorg/apache/flink/types/Row;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/Row;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Row;
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/java/typeutils/runtime/RowSerializer$RowSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>([Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getVersion()I
@1.8.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/java/typeutils/runtime/RowSerializer
@1.2.0
+#<init>([Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createInstance()Lorg/apache/flink/types/Row;
+#copy(Lorg/apache/flink/types/Row;)Lorg/apache/flink/types/Row;
+#copy(Lorg/apache/flink/types/Row;Lorg/apache/flink/types/Row;)Lorg/apache/flink/types/Row;
+#getLength()I
+#serialize(Lorg/apache/flink/types/Row;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Row;
+#deserialize(Lorg/apache/flink/types/Row;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Row;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/RowSerializer$RowSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.4.0
+#getArity()I
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/RowSerializer$RowSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
@1.11.0
+#<init>([Lorg/apache/flink/api/common/typeutils/TypeSerializer;Z)V
@1.13.0
+#<init>([Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/util/LinkedHashMap;)V
+#<init>([Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/util/LinkedHashMap;Z)V
-#<init>([Lorg/apache/flink/api/common/typeutils/TypeSerializer;Z)V

+###org/apache/flink/api/java/typeutils/runtime/RuntimeComparatorFactory
@1.0.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeComparator;)V
+#writeParametersToConfig(Lorg/apache/flink/configuration/Configuration;)V
+#readParametersFromConfig(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)V
+#createComparator()Lorg/apache/flink/api/common/typeutils/TypeComparator;

+###org/apache/flink/api/java/typeutils/runtime/RuntimePairComparatorFactory
@1.0.0
+#<init>()V
+#createComparator12(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;)Lorg/apache/flink/api/common/typeutils/TypePairComparator;
+#createComparator21(Lorg/apache/flink/api/common/typeutils/TypeComparator;Lorg/apache/flink/api/common/typeutils/TypeComparator;)Lorg/apache/flink/api/common/typeutils/TypePairComparator;

+###org/apache/flink/api/java/typeutils/runtime/RuntimeSerializerFactory
@1.0.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Ljava/lang/Class;)V
+#writeParametersToConfig(Lorg/apache/flink/configuration/Configuration;)V
+#readParametersFromConfig(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)V
+#getSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getDataType()Ljava/lang/Class;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/flink/api/java/typeutils/runtime/Tuple0Serializer
@1.0.0
+#duplicate()Lorg/apache/flink/api/java/typeutils/runtime/Tuple0Serializer;
+#createInstance()Lorg/apache/flink/api/java/tuple/Tuple0;
+#createInstance([Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple0;
+#copy(Lorg/apache/flink/api/java/tuple/Tuple0;)Lorg/apache/flink/api/java/tuple/Tuple0;
+#copy(Lorg/apache/flink/api/java/tuple/Tuple0;Lorg/apache/flink/api/java/tuple/Tuple0;)Lorg/apache/flink/api/java/tuple/Tuple0;
+#getLength()I
+#serialize(Lorg/apache/flink/api/java/tuple/Tuple0;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/api/java/tuple/Tuple0;
+#deserialize(Lorg/apache/flink/api/java/tuple/Tuple0;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/api/java/tuple/Tuple0;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#deserialize(Lorg/apache/flink/api/java/tuple/Tuple;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/api/java/tuple/Tuple;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/api/java/tuple/Tuple;
+#serialize(Lorg/apache/flink/api/java/tuple/Tuple;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Lorg/apache/flink/api/java/tuple/Tuple;Lorg/apache/flink/api/java/tuple/Tuple;)Lorg/apache/flink/api/java/tuple/Tuple;
+#copy(Lorg/apache/flink/api/java/tuple/Tuple;)Lorg/apache/flink/api/java/tuple/Tuple;
+#createInstance([Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple;
+#createInstance()Lorg/apache/flink/api/java/tuple/Tuple;
+#duplicate()Lorg/apache/flink/api/java/typeutils/runtime/TupleSerializer;
+#createInstance([Ljava/lang/Object;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.8.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#resolveSchemaCompatibilityViaRedirectingToNewSnapshotClass(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/java/typeutils/runtime/TupleComparator
@1.0.0
+#<init>([I[Lorg/apache/flink/api/common/typeutils/TypeComparator;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#hash(Lorg/apache/flink/api/java/tuple/Tuple;)I
+#setReference(Lorg/apache/flink/api/java/tuple/Tuple;)V
+#equalToReference(Lorg/apache/flink/api/java/tuple/Tuple;)Z
+#compare(Lorg/apache/flink/api/java/tuple/Tuple;Lorg/apache/flink/api/java/tuple/Tuple;)I
+#putNormalizedKey(Lorg/apache/flink/api/java/tuple/Tuple;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/java/typeutils/runtime/TupleComparatorBase
@1.0.0
+#<init>([I[Lorg/apache/flink/api/common/typeutils/TypeComparator;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getFlatComparator(Ljava/util/List;)V
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#invertNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;

+###org/apache/flink/api/java/typeutils/runtime/TupleSerializer
@1.0.0
+#<init>(Ljava/lang/Class;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#duplicate()Lorg/apache/flink/api/java/typeutils/runtime/TupleSerializer;
+#createInstance()Lorg/apache/flink/api/java/tuple/Tuple;
+#createInstance([Ljava/lang/Object;)Lorg/apache/flink/api/java/tuple/Tuple;
+#createOrReuseInstance([Ljava/lang/Object;Lorg/apache/flink/api/java/tuple/Tuple;)Lorg/apache/flink/api/java/tuple/Tuple;
+#copy(Lorg/apache/flink/api/java/tuple/Tuple;)Lorg/apache/flink/api/java/tuple/Tuple;
+#copy(Lorg/apache/flink/api/java/tuple/Tuple;Lorg/apache/flink/api/java/tuple/Tuple;)Lorg/apache/flink/api/java/tuple/Tuple;
+#serialize(Lorg/apache/flink/api/java/tuple/Tuple;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/api/java/tuple/Tuple;
+#deserialize(Lorg/apache/flink/api/java/tuple/Tuple;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/api/java/tuple/Tuple;
+#createOrReuseInstance([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance([Ljava/lang/Object;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.8.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#resolveSchemaCompatibilityViaRedirectingToNewSnapshotClass(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/java/typeutils/runtime/TupleSerializerBase
@1.0.0
+#<init>(Ljava/lang/Class;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getTupleClass()Ljava/lang/Class;
+#isImmutableType()Z
+#getLength()I
+#getArity()I
+#createInstance([Ljava/lang/Object;)Ljava/lang/Object;
+#createOrReuseInstance([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/TupleSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.4.0
+#getFieldSerializers()[Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/TupleSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/api/java/typeutils/runtime/TupleSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/Class;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getVersion()I
+#getTupleClass()Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/java/typeutils/runtime/ValueComparator
@1.0.0
+#<init>(ZLjava/lang/Class;)V
+#hash(Lorg/apache/flink/types/Value;)I
+#setReference(Lorg/apache/flink/types/Value;)V
+#equalToReference(Lorg/apache/flink/types/Value;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/flink/types/Value;Lorg/apache/flink/types/Value;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/flink/types/Value;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/flink/types/Value;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/flink/types/Value;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Value;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/java/typeutils/runtime/ValueSerializer$ValueSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#getVersion()I
@1.8.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/java/typeutils/runtime/ValueSerializer
@1.0.0
+#<init>(Ljava/lang/Class;)V
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/java/typeutils/runtime/ValueSerializer;
+#createInstance()Lorg/apache/flink/types/Value;
+#copy(Lorg/apache/flink/types/Value;)Lorg/apache/flink/types/Value;
+#copy(Lorg/apache/flink/types/Value;Lorg/apache/flink/types/Value;)Lorg/apache/flink/types/Value;
+#getLength()I
+#serialize(Lorg/apache/flink/types/Value;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Value;
+#deserialize(Lorg/apache/flink/types/Value;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/flink/types/Value;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/ValueSerializer$ValueSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/ValueSerializer$ValueSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;

+###org/apache/flink/api/java/typeutils/TupleTypeInfo
@1.0.0
+#<init>([Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/Class;[Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getFieldNames()[Ljava/lang/String;
+#getFieldIndex(Ljava/lang/String;)I
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/java/typeutils/runtime/TupleSerializer;
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getBasicTupleTypeInfo([Ljava/lang/Class;)Lorg/apache/flink/api/java/typeutils/TupleTypeInfo;
+#getBasicAndBasicValueTupleTypeInfo([Ljava/lang/Class;)Lorg/apache/flink/api/java/typeutils/TupleTypeInfo;
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.2.0
+#getGenericParameters()Ljava/util/Map;

+###org/apache/flink/api/java/typeutils/TupleTypeInfoBase
@1.0.0
+#<init>(Ljava/lang/Class;[Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#isBasicType()Z
+#isTupleType()Z
+#isCaseClass()Z
+#getArity()I
+#getTotalFields()I
+#getFlatFields(Ljava/lang/String;ILjava/util/List;)V
+#getTypeAt(Ljava/lang/String;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getTypeAt(I)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#hasDeterministicFieldOrder()Z
@1.13.0
+#getFieldTypes()[Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/api/java/typeutils/TypeExtractionException
@1.2.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/api/java/typeutils/TypeExtractionUtils$LambdaExecutable
@1.2.0
+#<init>(Ljava/lang/reflect/Constructor;)V
+#<init>(Ljava/lang/reflect/Method;)V
+#getParameterTypes()[Ljava/lang/reflect/Type;
+#getReturnType()Ljava/lang/reflect/Type;
+#getName()Ljava/lang/String;
+#executablesEquals(Ljava/lang/reflect/Method;)Z
+#executablesEquals(Ljava/lang/reflect/Constructor;)Z

+###org/apache/flink/api/java/typeutils/TypeExtractionUtils
@1.2.0
+#checkAndExtractLambda(Lorg/apache/flink/api/common/functions/Function;)Lorg/apache/flink/api/java/typeutils/TypeExtractionUtils$LambdaExecutable;
+#getAllDeclaredMethods(Ljava/lang/Class;)Ljava/util/List;
+#typeToClass(Ljava/lang/reflect/Type;)Ljava/lang/Class;
+#isClassType(Ljava/lang/reflect/Type;)Z
+#sameTypeVars(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
@1.3.1
+#extractTypeFromLambda(Lorg/apache/flink/api/java/typeutils/TypeExtractionUtils$LambdaExecutable;[III)Ljava/lang/reflect/Type;
+#extractTypeArgument(Ljava/lang/reflect/Type;I)Ljava/lang/reflect/Type;
+#getSingleAbstractMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method;
@1.4.0
+#getTypeHierarchy(Ljava/util/List;Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;
+#hasSuperclass(Ljava/lang/Class;Ljava/lang/String;)Z
+#getRawClass(Ljava/lang/reflect/Type;)Ljava/lang/Class;
@1.6.0
+#extractTypeFromLambda(Ljava/lang/Class;Lorg/apache/flink/api/java/typeutils/TypeExtractionUtils$LambdaExecutable;[III)Ljava/lang/reflect/Type;
+#validateLambdaType(Ljava/lang/Class;Ljava/lang/reflect/Type;)V
-#extractTypeFromLambda(Lorg/apache/flink/api/java/typeutils/TypeExtractionUtils$LambdaExecutable;[III)Ljava/lang/reflect/Type;

+###org/apache/flink/api/java/typeutils/TypeExtractor
@1.0.0
+#getMapReturnTypes(Lorg/apache/flink/api/common/functions/MapFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getMapReturnTypes(Lorg/apache/flink/api/common/functions/MapFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getFlatMapReturnTypes(Lorg/apache/flink/api/common/functions/FlatMapFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getFlatMapReturnTypes(Lorg/apache/flink/api/common/functions/FlatMapFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getFoldReturnTypes(Lorg/apache/flink/api/common/functions/FoldFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getFoldReturnTypes(Lorg/apache/flink/api/common/functions/FoldFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getMapPartitionReturnTypes(Lorg/apache/flink/api/common/functions/MapPartitionFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getMapPartitionReturnTypes(Lorg/apache/flink/api/common/functions/MapPartitionFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getGroupReduceReturnTypes(Lorg/apache/flink/api/common/functions/GroupReduceFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getGroupReduceReturnTypes(Lorg/apache/flink/api/common/functions/GroupReduceFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getGroupCombineReturnTypes(Lorg/apache/flink/api/common/functions/GroupCombineFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getGroupCombineReturnTypes(Lorg/apache/flink/api/common/functions/GroupCombineFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getFlatJoinReturnTypes(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getFlatJoinReturnTypes(Lorg/apache/flink/api/common/functions/FlatJoinFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getJoinReturnTypes(Lorg/apache/flink/api/common/functions/JoinFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getJoinReturnTypes(Lorg/apache/flink/api/common/functions/JoinFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getCoGroupReturnTypes(Lorg/apache/flink/api/common/functions/CoGroupFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getCoGroupReturnTypes(Lorg/apache/flink/api/common/functions/CoGroupFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getCrossReturnTypes(Lorg/apache/flink/api/common/functions/CrossFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getCrossReturnTypes(Lorg/apache/flink/api/common/functions/CrossFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getKeySelectorTypes(Lorg/apache/flink/api/java/functions/KeySelector;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getKeySelectorTypes(Lorg/apache/flink/api/java/functions/KeySelector;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getPartitionerTypes(Lorg/apache/flink/api/common/functions/Partitioner;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getPartitionerTypes(Lorg/apache/flink/api/common/functions/Partitioner;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getInputFormatTypes(Lorg/apache/flink/api/common/io/InputFormat;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getUnaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;ZZLorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getBinaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;ZZLorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#createTypeInfo(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#createTypeInfo(Ljava/lang/reflect/Type;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#createTypeInfo(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;I)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#createTypeInfo(Ljava/lang/Class;Ljava/lang/Class;ILorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getParameterType(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/lang/reflect/Type;
+#getForClass(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getAllDeclaredFields(Ljava/lang/Class;)Ljava/util/List;
+#getDeclaredField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
+#typeToClass(Ljava/lang/reflect/Type;)Ljava/lang/Class;
+#isClassType(Ljava/lang/reflect/Type;)Z
+#getForObject(Ljava/lang/Object;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.0.1
+#getUnaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;IILorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getBinaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;IILorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.2.0
+#getTypeInfoFactory(Ljava/lang/reflect/Type;)Lorg/apache/flink/api/common/typeinfo/TypeInfoFactory;
+#getAllDeclaredFields(Ljava/lang/Class;Z)Ljava/util/List;
+#createHadoopWritableTypeInfo(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#getAllDeclaredFields(Ljava/lang/Class;)Ljava/util/List;
-#typeToClass(Ljava/lang/reflect/Type;)Ljava/lang/Class;
-#isClassType(Ljava/lang/reflect/Type;)Z
@1.3.0
*#getFoldReturnTypes(Lorg/apache/flink/api/common/functions/FoldFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;[deprecated]
*#getFoldReturnTypes(Lorg/apache/flink/api/common/functions/FoldFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;[deprecated]
+#getAggregateFunctionAccumulatorType(Lorg/apache/flink/api/common/functions/AggregateFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getAggregateFunctionReturnType(Lorg/apache/flink/api/common/functions/AggregateFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.3.1
+#getUnaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;II[I[ILorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getBinaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;III[I[I[ILorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#getUnaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;ZZLorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#getUnaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;IILorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#getBinaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;ZZLorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#getBinaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;IILorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.6.0
+#getUnaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;II[ILorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getBinaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;III[ILorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#getUnaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;II[I[ILorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
-#getBinaryOperatorReturnType(Lorg/apache/flink/api/common/functions/Function;Ljava/lang/Class;III[I[I[ILorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.12.0
-#getFoldReturnTypes(Lorg/apache/flink/api/common/functions/FoldFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;[deprecated]
-#getFoldReturnTypes(Lorg/apache/flink/api/common/functions/FoldFunction;Lorg/apache/flink/api/common/typeinfo/TypeInformation;Ljava/lang/String;Z)Lorg/apache/flink/api/common/typeinfo/TypeInformation;[deprecated]
@1.14.0
+#getTypeInfoFactory(Ljava/lang/reflect/Field;)Lorg/apache/flink/api/common/typeinfo/TypeInfoFactory;

+###org/apache/flink/api/java/typeutils/TypeInfoParser
@1.0.0
+#<init>()V
+#parse(Ljava/lang/String;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.6.0
-###org/apache/flink/api/java/typeutils/TypeInfoParser

+###org/apache/flink/api/java/typeutils/ValueTypeInfo
@1.0.0
+#<init>(Ljava/lang/Class;)V
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isBasicType()Z
+#isBasicValueType()Z
+#isTupleType()Z
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createComparator(ZLorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/configuration/AkkaOptions
@1.2.0
+#<init>()V
@1.16.0
+#isForceRpcInvocationSerializationEnabled(Lorg/apache/flink/configuration/Configuration;)Z

+###org/apache/flink/configuration/AlgorithmOptions
@1.5.0
+#<init>()V

+###org/apache/flink/configuration/BlobServerOptions
@1.4.0
+#<init>()V

+###org/apache/flink/configuration/CheckpointingOptions
@1.5.0
+#<init>()V

+###org/apache/flink/configuration/ConfigOption
@1.2.0
+#withDeprecatedKeys([Ljava/lang/String;)Lorg/apache/flink/configuration/ConfigOption;
+#key()Ljava/lang/String;
+#hasDefaultValue()Z
+#defaultValue()Ljava/lang/Object;
+#hasDeprecatedKeys()Z
+#deprecatedKeys()Ljava/lang/Iterable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.4.0
+#withDescription(Ljava/lang/String;)Lorg/apache/flink/configuration/ConfigOption;
+#description()Ljava/lang/String;
@1.6.0
*#withDescription(Ljava/lang/String;)Lorg/apache/flink/configuration/ConfigOption;[deprecated]
+#withDescription(Lorg/apache/flink/configuration/description/Description;)Lorg/apache/flink/configuration/ConfigOption;
+#description()Lorg/apache/flink/configuration/description/Description;
-#description()Ljava/lang/String;
@1.8.0
+#withFallbackKeys([Ljava/lang/String;)Lorg/apache/flink/configuration/ConfigOption;
+#hasFallbackKeys()Z
+#fallbackKeys()Ljava/lang/Iterable;
-#hasDeprecatedKeys()Z
-#deprecatedKeys()Ljava/lang/Iterable;
@1.8.3
+#hasDeprecatedKeys()Z[deprecated]
+#deprecatedKeys()Ljava/lang/Iterable;[deprecated]
@1.9.0
-#hasDeprecatedKeys()Z[deprecated]
-#deprecatedKeys()Ljava/lang/Iterable;[deprecated]
@1.9.1
+#hasDeprecatedKeys()Z[deprecated]
+#deprecatedKeys()Ljava/lang/Iterable;[deprecated]

+###org/apache/flink/configuration/ConfigOptions$OptionBuilder
@1.2.0
+#defaultValue(Ljava/lang/Object;)Lorg/apache/flink/configuration/ConfigOption;
+#noDefaultValue()Lorg/apache/flink/configuration/ConfigOption;
@1.10.0
+#booleanType()Lorg/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder;
+#intType()Lorg/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder;
+#longType()Lorg/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder;
+#floatType()Lorg/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder;
+#doubleType()Lorg/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder;
+#stringType()Lorg/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder;
+#durationType()Lorg/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder;
+#memoryType()Lorg/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder;
+#enumType(Ljava/lang/Class;)Lorg/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder;
+#mapType()Lorg/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder;
*#defaultValue(Ljava/lang/Object;)Lorg/apache/flink/configuration/ConfigOption;[deprecated]
*#noDefaultValue()Lorg/apache/flink/configuration/ConfigOption;[deprecated]

+###org/apache/flink/configuration/ConfigOptions
@1.2.0
+#key(Ljava/lang/String;)Lorg/apache/flink/configuration/ConfigOptions$OptionBuilder;

+###org/apache/flink/configuration/ConfigurationUtils
@1.5.0
+#parseTempDirectories(Lorg/apache/flink/configuration/Configuration;)[Ljava/lang/String;
+#parseLocalStateDirectories(Lorg/apache/flink/configuration/Configuration;)[Ljava/lang/String;
@1.6.0
+#getJobManagerHeapMemory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/MemorySize;
+#getTaskManagerHeapMemory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/MemorySize;
+#createConfiguration(Ljava/util/Properties;)Lorg/apache/flink/configuration/Configuration;
@1.7.0
+#getSystemResourceMetricsProbingInterval(Lorg/apache/flink/configuration/Configuration;)Ljava/util/Optional;
@1.9.0
+#getStandaloneClusterStartupPeriodTime(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/api/common/time/Time;
@1.10.0
+#hideSensitiveValues(Ljava/util/Map;)Ljava/util/Map;
+#splitPaths(Ljava/lang/String;)[Ljava/lang/String;
+#parseTmResourceDynamicConfigs(Ljava/lang/String;)Ljava/util/Map;
+#parseTmResourceJvmParams(Ljava/lang/String;)Ljava/util/Map;
-#getTaskManagerHeapMemory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/MemorySize;
@1.10.3
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
@1.11.0
+#parseJvmArgString(Ljava/lang/String;)Ljava/util/Map;
+#getPrefixedKeyValuePairs(Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Ljava/util/Map;
-#getJobManagerHeapMemory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/MemorySize;
-#parseMap(Ljava/lang/String;)Ljava/util/Map;
-#parseTmResourceJvmParams(Ljava/lang/String;)Ljava/util/Map;
@1.11.3
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
@1.12.0
+#assembleDynamicConfigsStr(Ljava/util/Map;)Ljava/lang/String;
+#convertValue(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@1.14.0
+#canBePrefixMap(Lorg/apache/flink/configuration/ConfigOption;)Z
+#filterPrefixMapKey(Ljava/lang/String;Ljava/lang/String;)Z
@1.15.0
+#getRandomTempDirectory(Lorg/apache/flink/configuration/Configuration;)Ljava/io/File;
@1.16.0
+#convertToEnum(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Enum;

+###org/apache/flink/configuration/CoreOptions
@1.3.0
+#<init>()V
@1.4.0
+#fileSystemConnectionLimit(Ljava/lang/String;)Lorg/apache/flink/configuration/ConfigOption;
+#fileSystemConnectionLimitIn(Ljava/lang/String;)Lorg/apache/flink/configuration/ConfigOption;
+#fileSystemConnectionLimitOut(Ljava/lang/String;)Lorg/apache/flink/configuration/ConfigOption;
+#fileSystemConnectionLimitTimeout(Ljava/lang/String;)Lorg/apache/flink/configuration/ConfigOption;
+#fileSystemConnectionLimitStreamInactivityTimeout(Ljava/lang/String;)Lorg/apache/flink/configuration/ConfigOption;
@1.5.0
+#getParentFirstLoaderPatterns(Lorg/apache/flink/configuration/Configuration;)[Ljava/lang/String;
@1.10.0
+#getPluginParentFirstLoaderPatterns(Lorg/apache/flink/configuration/Configuration;)[Ljava/lang/String;
@1.14.0
+#parseParentFirstLoaderPatterns(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
@1.15.0
+#mergeListsToArray(Ljava/util/List;Ljava/util/List;)[Ljava/lang/String;
-#parseParentFirstLoaderPatterns(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
@1.16.0
+#getParentFirstLoaderPatterns(Lorg/apache/flink/configuration/ReadableConfig;)[Ljava/lang/String;
-#getParentFirstLoaderPatterns(Lorg/apache/flink/configuration/Configuration;)[Ljava/lang/String;

+###org/apache/flink/configuration/DelegatingConfiguration
@1.1.0
+#<init>()V
+#<init>(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)V
+#getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#setString(Ljava/lang/String;Ljava/lang/String;)V
+#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#setClass(Ljava/lang/String;Ljava/lang/Class;)V
+#getInteger(Ljava/lang/String;I)I
+#setInteger(Ljava/lang/String;I)V
+#getLong(Ljava/lang/String;J)J
+#setLong(Ljava/lang/String;J)V
+#getBoolean(Ljava/lang/String;Z)Z
+#setBoolean(Ljava/lang/String;Z)V
+#getFloat(Ljava/lang/String;F)F
+#setFloat(Ljava/lang/String;F)V
+#getDouble(Ljava/lang/String;D)D
+#setDouble(Ljava/lang/String;D)V
+#getBytes(Ljava/lang/String;[B)[B
+#setBytes(Ljava/lang/String;[B)V
+#addAllToProperties(Ljava/util/Properties;)V
+#addAll(Lorg/apache/flink/configuration/Configuration;)V
+#addAll(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#keySet()Ljava/util/Set;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.2.0
+#getString(Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/String;
+#getString(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/String;)Ljava/lang/String;
+#setString(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/String;)V
+#getInteger(Lorg/apache/flink/configuration/ConfigOption;)I
+#setInteger(Lorg/apache/flink/configuration/ConfigOption;I)V
+#getLong(Lorg/apache/flink/configuration/ConfigOption;)J
+#setLong(Lorg/apache/flink/configuration/ConfigOption;J)V
+#getBoolean(Lorg/apache/flink/configuration/ConfigOption;)Z
+#setBoolean(Lorg/apache/flink/configuration/ConfigOption;Z)V
+#getFloat(Lorg/apache/flink/configuration/ConfigOption;)F
+#setFloat(Lorg/apache/flink/configuration/ConfigOption;F)V
+#getDouble(Lorg/apache/flink/configuration/ConfigOption;)D
+#setDouble(Lorg/apache/flink/configuration/ConfigOption;D)V
+#getValue(Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/String;
+#clone()Lorg/apache/flink/configuration/Configuration;
+#toMap()Ljava/util/Map;
+#containsKey(Ljava/lang/String;)Z
+#clone()Ljava/lang/Object;
@1.3.0
+#contains(Lorg/apache/flink/configuration/ConfigOption;)Z
@1.4.0
+#getInteger(Lorg/apache/flink/configuration/ConfigOption;I)I
+#getLong(Lorg/apache/flink/configuration/ConfigOption;J)J
+#getBoolean(Lorg/apache/flink/configuration/ConfigOption;Z)Z
+#getFloat(Lorg/apache/flink/configuration/ConfigOption;F)F
+#getDouble(Lorg/apache/flink/configuration/ConfigOption;D)D
@1.5.2
+#removeConfig(Lorg/apache/flink/configuration/ConfigOption;)Z
@1.8.0
+#getEnum(Ljava/lang/Class;Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/Enum;
@1.10.0
+#get(Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/Object;
+#getOptional(Lorg/apache/flink/configuration/ConfigOption;)Ljava/util/Optional;
+#set(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/Object;)Lorg/apache/flink/configuration/Configuration;
+#set(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/Object;)Lorg/apache/flink/configuration/WritableConfig;

+###org/apache/flink/configuration/HeartbeatManagerOptions
@1.3.0

+###org/apache/flink/configuration/HighAvailabilityOptions
@1.2.0

+###org/apache/flink/configuration/HistoryServerOptions
@1.3.0

+###org/apache/flink/configuration/JobManagerOptions
@1.3.0

+###org/apache/flink/configuration/MemorySize
@1.3.0
+#<init>(J)V
+#getBytes()J
+#getKibiBytes()J
+#getMebiBytes()J
+#getGibiBytes()J
+#getTebiBytes()J
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#parse(Ljava/lang/String;)Lorg/apache/flink/configuration/MemorySize;
+#parseBytes(Ljava/lang/String;)J
@1.6.0
+#getMebiBytes()I
+#parse(Ljava/lang/String;Lorg/apache/flink/configuration/MemorySize$MemoryUnit;)Lorg/apache/flink/configuration/MemorySize;
-#getMebiBytes()J
@1.10.0
+#ofMebiBytes(J)Lorg/apache/flink/configuration/MemorySize;
+#toHumanReadableString()Ljava/lang/String;
+#compareTo(Lorg/apache/flink/configuration/MemorySize;)I
+#add(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/configuration/MemorySize;
+#subtract(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/configuration/MemorySize;
+#multiply(D)Lorg/apache/flink/configuration/MemorySize;
+#divide(J)Lorg/apache/flink/configuration/MemorySize;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/flink/configuration/MetricOptions
@1.3.0

+###org/apache/flink/configuration/OptimizerOptions
@1.5.0
+#<init>()V

+###org/apache/flink/configuration/QueryableStateOptions
@1.2.0

+###org/apache/flink/configuration/ResourceManagerOptions
@1.3.0

+###org/apache/flink/configuration/RestOptions
@1.4.0
+#<init>()V

+###org/apache/flink/configuration/SecurityOptions
@1.2.0
+#<init>()V
@1.14.0
+#isInternalSSLEnabled(Lorg/apache/flink/configuration/Configuration;)Z
+#isRestSSLEnabled(Lorg/apache/flink/configuration/Configuration;)Z
+#isRestSSLAuthenticationEnabled(Lorg/apache/flink/configuration/Configuration;)Z

+###org/apache/flink/configuration/TaskManagerOptions
@1.2.0

+###org/apache/flink/configuration/UnmodifiableConfiguration
@0.10.0
+#<init>(Lorg/apache/flink/configuration/Configuration;)V
+#addAll(Lorg/apache/flink/configuration/Configuration;)V
+#addAll(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)V
@1.1.0
+#addAllToProperties(Ljava/util/Properties;)V
@1.5.2
+#removeConfig(Lorg/apache/flink/configuration/ConfigOption;)Z

+###org/apache/flink/configuration/WebOptions
@1.4.0

+###org/apache/flink/core/fs/AbstractMultiFSDataInputStream
@1.2.0
+#<init>()V
+#seek(J)V
+#getPos()J
+#read()I
+#close()V
+#skip(J)J
@1.6.0
-###org/apache/flink/core/fs/AbstractMultiFSDataInputStream

+###org/apache/flink/core/fs/CloseableRegistry
@1.2.0
+#<init>()V
@1.15.0
+#doClose(Ljava/util/List;)V

+###org/apache/flink/core/fs/ClosingFSDataInputStream
@1.2.0
+#isClosed()Z
+#close()V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#wrapSafe(Lorg/apache/flink/core/fs/FSDataInputStream;Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;)Lorg/apache/flink/core/fs/ClosingFSDataInputStream;
+#wrapSafe(Lorg/apache/flink/core/fs/FSDataInputStream;Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;Ljava/lang/String;)Lorg/apache/flink/core/fs/ClosingFSDataInputStream;

+###org/apache/flink/core/fs/ClosingFSDataOutputStream
@1.2.0
+#<init>(Lorg/apache/flink/core/fs/FSDataOutputStream;Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;)V
+#isClosed()Z
+#close()V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#wrapSafe(Lorg/apache/flink/core/fs/FSDataOutputStream;Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;)Lorg/apache/flink/core/fs/ClosingFSDataOutputStream;
+#wrapSafe(Lorg/apache/flink/core/fs/FSDataOutputStream;Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;Ljava/lang/String;)Lorg/apache/flink/core/fs/ClosingFSDataOutputStream;

+###org/apache/flink/core/fs/ConnectionLimitingFactory
@1.4.0
+#getScheme()Ljava/lang/String;
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#create(Ljava/net/URI;)Lorg/apache/flink/core/fs/FileSystem;
+#decorateIfLimited(Lorg/apache/flink/core/fs/FileSystemFactory;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/core/fs/FileSystemFactory;
@1.9.0
+#getClassLoader()Ljava/lang/ClassLoader;

+###org/apache/flink/core/fs/FileSystemFactory
@1.4.0
+#getScheme()Ljava/lang/String;
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#create(Ljava/net/URI;)Lorg/apache/flink/core/fs/FileSystem;
@1.9.0
-#configure(Lorg/apache/flink/configuration/Configuration;)V

+###org/apache/flink/core/fs/FileSystemKind
@1.3.2
+#values()[Lorg/apache/flink/core/fs/FileSystemKind;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/core/fs/FileSystemKind;

+###org/apache/flink/core/fs/FileSystemSafetyNet
@1.3.0
+#<init>()V
+#initializeSafetyNetForThread()V
+#closeSafetyNetAndGuardedResourcesForThread()V
+#getSafetyNetCloseableRegistryForThread()Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;[deprecated]
+#setSafetyNetCloseableRegistryForThread(Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;)V[deprecated]
@1.10.0
-#getSafetyNetCloseableRegistryForThread()Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;[deprecated]
-#setSafetyNetCloseableRegistryForThread(Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;)V

+###org/apache/flink/core/fs/FSDataInputStreamWrapper
@1.2.0
+#<init>(Lorg/apache/flink/core/fs/FSDataInputStream;)V
+#seek(J)V
+#getPos()J
+#read()I
+#read([B)I
+#read([BII)I
+#skip(J)J
+#available()I
+#close()V
+#mark(I)V
+#reset()V
+#markSupported()Z
+#getWrappedDelegate()Lorg/apache/flink/core/fs/FSDataInputStream;
+#getWrappedDelegate()Ljava/lang/Object;

+###org/apache/flink/core/fs/FSDataOutputStreamWrapper
@1.2.0
+#<init>(Lorg/apache/flink/core/fs/FSDataOutputStream;)V
+#getPos()J
+#flush()V
+#sync()V
+#write(I)V
+#write([B)V
+#write([BII)V
+#close()V
+#getWrappedDelegate()Lorg/apache/flink/core/fs/FSDataOutputStream;
+#getWrappedDelegate()Ljava/lang/Object;

+###org/apache/flink/core/fs/LimitedConnectionsFileSystem$ConnectionLimitingSettings
@1.4.0
+#<init>(IIIJJ)V
+#fromConfig(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)Lorg/apache/flink/core/fs/LimitedConnectionsFileSystem$ConnectionLimitingSettings;

+###org/apache/flink/core/fs/LimitedConnectionsFileSystem$StreamTimeoutException
@1.4.0
+#<init>()V
+#<init>(Lorg/apache/flink/core/fs/LimitedConnectionsFileSystem$StreamTimeoutException;)V

+###org/apache/flink/core/fs/LimitedConnectionsFileSystem
@1.4.0
+#<init>(Lorg/apache/flink/core/fs/FileSystem;I)V
+#<init>(Lorg/apache/flink/core/fs/FileSystem;IJJ)V
+#<init>(Lorg/apache/flink/core/fs/FileSystem;IIIJJ)V
+#getMaxNumOpenOutputStreams()I
+#getMaxNumOpenInputStreams()I
+#getMaxNumOpenStreamsTotal()I
+#getStreamOpenTimeout()J
+#getStreamInactivityTimeout()J
+#getTotalNumberOfOpenStreams()I
+#getNumberOfOpenOutputStreams()I
+#getNumberOfOpenInputStreams()I
+#create(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem$WriteMode;)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/core/fs/FSDataOutputStream;[deprecated]
+#open(Lorg/apache/flink/core/fs/Path;I)Lorg/apache/flink/core/fs/FSDataInputStream;
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FSDataInputStream;
+#getKind()Lorg/apache/flink/core/fs/FileSystemKind;
+#isDistributedFS()Z
+#getWorkingDirectory()Lorg/apache/flink/core/fs/Path;
+#getHomeDirectory()Lorg/apache/flink/core/fs/Path;
+#getUri()Ljava/net/URI;
+#getFileStatus(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FileStatus;
+#getFileBlockLocations(Lorg/apache/flink/core/fs/FileStatus;JJ)[Lorg/apache/flink/core/fs/BlockLocation;
+#listStatus(Lorg/apache/flink/core/fs/Path;)[Lorg/apache/flink/core/fs/FileStatus;
+#delete(Lorg/apache/flink/core/fs/Path;Z)Z
+#mkdirs(Lorg/apache/flink/core/fs/Path;)Z
+#rename(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Z
+#exists(Lorg/apache/flink/core/fs/Path;)Z
+#getDefaultBlockSize()J[deprecated]

+###org/apache/flink/core/fs/local/LocalFileSystemFactory
@1.4.0
+#<init>()V
+#getScheme()Ljava/lang/String;
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#create(Ljava/net/URI;)Lorg/apache/flink/core/fs/FileSystem;
@1.9.0
-#configure(Lorg/apache/flink/configuration/Configuration;)V

+###org/apache/flink/core/fs/SafetyNetCloseableRegistry
@1.2.0
+#<init>()V
+#close()V
@1.2.1
+#isReaperThreadRunning()Z
@1.4.0
-#<init>()V
-#isReaperThreadRunning()Z
@1.15.0
-#close()V

+###org/apache/flink/core/fs/SafetyNetWrapperFileSystem
@1.2.0
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;)V
+#getWorkingDirectory()Lorg/apache/flink/core/fs/Path;
+#getHomeDirectory()Lorg/apache/flink/core/fs/Path;
+#getUri()Ljava/net/URI;
+#initialize(Ljava/net/URI;)V
+#getFileStatus(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FileStatus;
+#getFileBlockLocations(Lorg/apache/flink/core/fs/FileStatus;JJ)[Lorg/apache/flink/core/fs/BlockLocation;
+#open(Lorg/apache/flink/core/fs/Path;I)Lorg/apache/flink/core/fs/FSDataInputStream;
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/FSDataInputStream;
+#getDefaultBlockSize()J
+#listStatus(Lorg/apache/flink/core/fs/Path;)[Lorg/apache/flink/core/fs/FileStatus;
+#exists(Lorg/apache/flink/core/fs/Path;)Z
+#delete(Lorg/apache/flink/core/fs/Path;Z)Z
+#mkdirs(Lorg/apache/flink/core/fs/Path;)Z
+#create(Lorg/apache/flink/core/fs/Path;ZISJ)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/core/fs/FSDataOutputStream;
+#rename(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Z
+#initOutPathLocalFS(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem$WriteMode;Z)Z
+#initOutPathDistFS(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem$WriteMode;Z)Z
+#isDistributedFS()Z
+#getWrappedDelegate()Lorg/apache/flink/core/fs/FileSystem;
+#getWrappedDelegate()Ljava/lang/Object;
@1.3.0
+#create(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem$WriteMode;)Lorg/apache/flink/core/fs/FSDataOutputStream;
-#create(Lorg/apache/flink/core/fs/Path;Z)Lorg/apache/flink/core/fs/FSDataOutputStream;
@1.3.2
+#getKind()Lorg/apache/flink/core/fs/FileSystemKind;
@1.4.0
-#initialize(Ljava/net/URI;)V
@1.6.0
+#createRecoverableWriter()Lorg/apache/flink/core/fs/RecoverableWriter;

+###org/apache/flink/core/fs/UnsupportedFileSystemSchemeException
@1.4.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/core/fs/WrappingProxyCloseable
@1.2.0

+###org/apache/flink/core/io/PostVersionedIOReadableWritable
@1.4.1
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Ljava/io/InputStream;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V

+###org/apache/flink/core/io/SimpleVersionedSerializer
@1.3.0
+#getVersion()I
+#serialize(Ljava/lang/Object;)[B
+#deserialize(I[B)Ljava/lang/Object;

+###org/apache/flink/core/io/Versioned
@1.2.0
+#getVersion()I

+###org/apache/flink/core/io/VersionedIOReadableWritable
@1.2.0
+#<init>()V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#isCompatibleVersion(I)Z
@1.3.0
+#getReadVersion()I
+#getCompatibleVersions()[I
-#isCompatibleVersion(I)Z

+###org/apache/flink/core/io/VersionMismatchException
@1.2.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/core/memory/ByteArrayInputStreamWithPos
@1.2.0
+#<init>([B)V
+#<init>([BII)V
+#read()I
+#read([BII)I
+#skip(J)J
+#markSupported()Z
+#mark(I)V
+#reset()V
+#available()I
+#close()V
+#getPosition()I
+#setPos(I)V
@1.3.0
+#setPosition(I)V
-#setPos(I)V
@1.6.0
+#<init>()V
+#setBuffer([BII)V
@1.10.0
-#read()I
-#read([BII)I
-#skip(J)J
-#markSupported()Z
-#mark(I)V
-#reset()V
-#available()I
-#close()V
-#getPosition()I
-#setPosition(I)V

+###org/apache/flink/core/memory/ByteArrayOutputStreamWithPos
@1.2.0
+#<init>()V
+#<init>(I)V
+#write(I)V
+#write([BII)V
+#reset()V
+#toByteArray()[B
+#size()I
+#toString()Ljava/lang/String;
+#getPosition()I
+#setPosition(I)V
+#close()V
+#getBuf()[B

+###org/apache/flink/core/memory/DataInputDeserializer
@1.4.0
+#<init>()V
+#<init>([B)V
+#<init>([BII)V
+#<init>(Ljava/nio/ByteBuffer;)V
+#setBuffer(Ljava/nio/ByteBuffer;)V
+#setBuffer([BII)V
+#releaseArrays()V
+#available()I
+#readBoolean()Z
+#readByte()B
+#readChar()C
+#readDouble()D
+#readFloat()F
+#readFully([B)V
+#readFully([BII)V
+#readInt()I
+#readLine()Ljava/lang/String;
+#readLong()J
+#readShort()S
+#readUTF()Ljava/lang/String;
+#readUnsignedByte()I
+#readUnsignedShort()I
+#skipBytes(I)I
+#skipBytesToRead(I)V
+#read([BII)I
+#read([B)I
@1.7.0
+#setBuffer([B)V
+#getPosition()I

+###org/apache/flink/core/memory/DataInputViewStreamWrapper
@0.10.0
+#<init>(Ljava/io/InputStream;)V
+#skipBytesToRead(I)V

+###org/apache/flink/core/memory/DataOutputSerializer
@1.4.0
+#<init>(I)V
+#wrapAsByteBuffer()Ljava/nio/ByteBuffer;
+#getByteArray()[B
+#getCopyOfBuffer()[B
+#clear()V
+#length()I
+#pruneBuffer()V
+#toString()Ljava/lang/String;
+#write(I)V
+#write([B)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeBytes(Ljava/lang/String;)V
+#writeChar(I)V
+#writeChars(Ljava/lang/String;)V
+#writeDouble(D)V
+#writeFloat(F)V
+#writeInt(I)V
+#writeLong(J)V
+#writeShort(I)V
+#writeUTF(Ljava/lang/String;)V
+#skipBytesToWrite(I)V
+#write(Lorg/apache/flink/core/memory/DataInputView;I)V
@1.5.0
*#getByteArray()[B[deprecated]
+#getSharedBuffer()[B
@1.8.0
+#setPosition(I)V
@1.9.0
+#write(Lorg/apache/flink/core/memory/MemorySegment;II)V
@1.12.0
+#writeIntUnsafe(II)V
+#setPositionUnsafe(I)V
-#pruneBuffer()V

+###org/apache/flink/core/memory/DataOutputViewStreamWrapper
@0.10.0
+#<init>(Ljava/io/OutputStream;)V
+#skipBytesToWrite(I)V
+#write(Lorg/apache/flink/core/memory/DataInputView;I)V

+###org/apache/flink/core/memory/HeapMemorySegment$HeapMemorySegmentFactory
@0.10.0
+#wrap([B)Lorg/apache/flink/core/memory/HeapMemorySegment;
+#allocateUnpooledSegment(ILjava/lang/Object;)Lorg/apache/flink/core/memory/HeapMemorySegment;
+#wrapPooledHeapMemory([BLjava/lang/Object;)Lorg/apache/flink/core/memory/HeapMemorySegment;
+#wrapPooledOffHeapMemory(Ljava/nio/ByteBuffer;Ljava/lang/Object;)Lorg/apache/flink/core/memory/HeapMemorySegment;
+#wrapPooledOffHeapMemory(Ljava/nio/ByteBuffer;Ljava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#wrapPooledHeapMemory([BLjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#allocateUnpooledSegment(ILjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#wrap([B)Lorg/apache/flink/core/memory/MemorySegment;
@1.4.0
-#wrapPooledOffHeapMemory(Ljava/nio/ByteBuffer;Ljava/lang/Object;)Lorg/apache/flink/core/memory/HeapMemorySegment;
-#wrapPooledOffHeapMemory(Ljava/nio/ByteBuffer;Ljava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
-#wrapPooledHeapMemory([BLjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
-#allocateUnpooledSegment(ILjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
-#wrap([B)Lorg/apache/flink/core/memory/MemorySegment;
@1.13.0
-###org/apache/flink/core/memory/HeapMemorySegment$HeapMemorySegmentFactory

+###org/apache/flink/core/memory/HeapMemorySegment
@0.10.0
+#free()V
+#wrap(II)Ljava/nio/ByteBuffer;
+#getArray()[B
+#get(I)B
+#put(IB)V
+#get(I[B)V
+#put(I[B)V
+#get(I[BII)V
+#put(I[BII)V
+#getBoolean(I)Z
+#putBoolean(IZ)V
+#get(Ljava/io/DataOutput;II)V
+#put(Ljava/io/DataInput;II)V
+#get(ILjava/nio/ByteBuffer;I)V
+#put(ILjava/nio/ByteBuffer;I)V
@1.12.2
+#processAsByteBuffer(Ljava/util/function/Function;)Ljava/lang/Object;
+#processAsByteBuffer(Ljava/util/function/Consumer;)V
@1.13.0
-###org/apache/flink/core/memory/HeapMemorySegment

+###org/apache/flink/core/memory/HybridMemorySegment
@0.10.0
+#getArray()[B
+#getOffHeapBuffer()Ljava/nio/ByteBuffer;
+#wrap(II)Ljava/nio/ByteBuffer;
+#get(I)B
+#put(IB)V
+#get(I[B)V
+#put(I[B)V
+#get(I[BII)V
+#put(I[BII)V
+#getBoolean(I)Z
+#putBoolean(IZ)V
+#get(Ljava/io/DataOutput;II)V
+#put(Ljava/io/DataInput;II)V
+#get(ILjava/nio/ByteBuffer;I)V
+#put(ILjava/nio/ByteBuffer;I)V
@1.5.0
-#getArray()[B
@1.10.0
+#free()V
@1.12.2
+#processAsByteBuffer(Ljava/util/function/Function;)Ljava/lang/Object;
+#processAsByteBuffer(Ljava/util/function/Consumer;)V
-#getOffHeapBuffer()Ljava/nio/ByteBuffer;
@1.13.0
-###org/apache/flink/core/memory/HybridMemorySegment

+###org/apache/flink/core/memory/MemorySegmentFactory
@0.10.0
+#<init>()V
+#wrap([B)Lorg/apache/flink/core/memory/MemorySegment;
+#allocateUnpooledSegment(I)Lorg/apache/flink/core/memory/MemorySegment;
+#allocateUnpooledSegment(ILjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#wrapPooledHeapMemory([BLjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#wrapPooledOffHeapMemory(Ljava/nio/ByteBuffer;Ljava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#initializeFactory(Lorg/apache/flink/core/memory/MemorySegmentFactory$Factory;)V
+#isInitialized()Z
+#getFactory()Lorg/apache/flink/core/memory/MemorySegmentFactory$Factory;
@1.2.0
+#initializeIfNotInitialized(Lorg/apache/flink/core/memory/MemorySegmentFactory$Factory;)Z
-#initializeFactory(Lorg/apache/flink/core/memory/MemorySegmentFactory$Factory;)V
@1.4.0
-#initializeIfNotInitialized(Lorg/apache/flink/core/memory/MemorySegmentFactory$Factory;)Z
-#isInitialized()Z
-#getFactory()Lorg/apache/flink/core/memory/MemorySegmentFactory$Factory;
@1.7.0
+#allocateUnpooledOffHeapMemory(ILjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
@1.9.0
+#wrapOffHeapMemory(Ljava/nio/ByteBuffer;)Lorg/apache/flink/core/memory/MemorySegment;
@1.10.0
+#allocateUnpooledOffHeapMemory(I)Lorg/apache/flink/core/memory/MemorySegment;
+#allocateOffHeapUnsafeMemory(ILjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
-#wrapPooledHeapMemory([BLjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
-#wrapPooledOffHeapMemory(Ljava/nio/ByteBuffer;Ljava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
@1.10.2
+#allocateOffHeapUnsafeMemory(I)Lorg/apache/flink/core/memory/MemorySegment;
+#allocateOffHeapUnsafeMemory(ILjava/lang/Object;Ljava/lang/Runnable;)Lorg/apache/flink/core/memory/MemorySegment;
-#allocateOffHeapUnsafeMemory(ILjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
@1.11.0
+#wrapCopy([BII)Lorg/apache/flink/core/memory/MemorySegment;
+#wrapInt(I)Lorg/apache/flink/core/memory/MemorySegment;

+###org/apache/flink/core/memory/MemoryType
@0.10.0
+#values()[Lorg/apache/flink/core/memory/MemoryType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/core/memory/MemoryType;
@1.10.2
-###org/apache/flink/core/memory/MemoryType

+###org/apache/flink/types/Either$Left
@1.0.0
+#<init>(Ljava/lang/Object;)V
+#left()Ljava/lang/Object;
+#right()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#of(Ljava/lang/Object;)Lorg/apache/flink/types/Either$Left;
@1.3.0
+#setValue(Ljava/lang/Object;)V

+###org/apache/flink/types/Either$Right
@1.0.0
+#<init>(Ljava/lang/Object;)V
+#left()Ljava/lang/Object;
+#right()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#of(Ljava/lang/Object;)Lorg/apache/flink/types/Either$Right;
@1.3.0
+#setValue(Ljava/lang/Object;)V

+###org/apache/flink/types/Either
@1.0.0
+#<init>()V
+#Left(Ljava/lang/Object;)Lorg/apache/flink/types/Either;
+#Right(Ljava/lang/Object;)Lorg/apache/flink/types/Either;
+#left()Ljava/lang/Object;
+#right()Ljava/lang/Object;
+#isLeft()Z
+#isRight()Z
@1.3.0
+#obtainLeft(Lorg/apache/flink/types/Either;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/types/Either$Left;
+#obtainRight(Lorg/apache/flink/types/Either;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/types/Either$Right;

+###org/apache/flink/types/parser/BigDecParser
@1.2.0
+#<init>()V
+#parseField([BII[BLjava/math/BigDecimal;)I
+#createValue()Ljava/math/BigDecimal;
+#getLastResult()Ljava/math/BigDecimal;
+#parseField([BII)Ljava/math/BigDecimal;
+#parseField([BIIC)Ljava/math/BigDecimal;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BII[BLjava/lang/Object;)I

+###org/apache/flink/types/parser/BigIntParser
@1.2.0
+#<init>()V
+#parseField([BII[BLjava/math/BigInteger;)I
+#createValue()Ljava/math/BigInteger;
+#getLastResult()Ljava/math/BigInteger;
+#parseField([BII)Ljava/math/BigInteger;
+#parseField([BIIC)Ljava/math/BigInteger;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BII[BLjava/lang/Object;)I

+###org/apache/flink/types/parser/BooleanParser
@0.9.0
+#<init>()V
+#parseField([BII[BLjava/lang/Boolean;)I
+#getLastResult()Ljava/lang/Boolean;
+#createValue()Ljava/lang/Boolean;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BII[BLjava/lang/Object;)I

+###org/apache/flink/types/parser/BooleanValueParser
@0.9.0
+#<init>()V
+#parseField([BII[BLorg/apache/flink/types/BooleanValue;)I
+#getLastResult()Lorg/apache/flink/types/BooleanValue;
+#createValue()Lorg/apache/flink/types/BooleanValue;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BII[BLjava/lang/Object;)I

+###org/apache/flink/types/parser/SqlDateParser
@1.2.0
+#<init>()V
+#parseField([BII[BLjava/sql/Date;)I
+#createValue()Ljava/sql/Date;
+#getLastResult()Ljava/sql/Date;
+#parseField([BII)Ljava/sql/Date;
+#parseField([BIIC)Ljava/sql/Date;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BII[BLjava/lang/Object;)I

+###org/apache/flink/types/parser/SqlTimeParser
@1.2.0
+#<init>()V
+#parseField([BII[BLjava/sql/Time;)I
+#createValue()Ljava/sql/Time;
+#getLastResult()Ljava/sql/Time;
+#parseField([BII)Ljava/sql/Time;
+#parseField([BIIC)Ljava/sql/Time;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BII[BLjava/lang/Object;)I

+###org/apache/flink/types/parser/SqlTimestampParser
@1.2.0
+#<init>()V
+#parseField([BII[BLjava/sql/Timestamp;)I
+#createValue()Ljava/sql/Timestamp;
+#getLastResult()Ljava/sql/Timestamp;
+#parseField([BII)Ljava/sql/Timestamp;
+#parseField([BIIC)Ljava/sql/Timestamp;
+#createValue()Ljava/lang/Object;
+#getLastResult()Ljava/lang/Object;
+#parseField([BII[BLjava/lang/Object;)I

+###org/apache/flink/types/Row
@1.2.0
+#<init>(I)V
+#getArity()I
+#getField(I)Ljava/lang/Object;
+#setField(ILjava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.3.0
+#of([Ljava/lang/Object;)Lorg/apache/flink/types/Row;
+#copy(Lorg/apache/flink/types/Row;)Lorg/apache/flink/types/Row;
@1.4.0
+#project(Lorg/apache/flink/types/Row;[I)Lorg/apache/flink/types/Row;
@1.10.0
+#join(Lorg/apache/flink/types/Row;[Lorg/apache/flink/types/Row;)Lorg/apache/flink/types/Row;
@1.11.0
+#<init>(Lorg/apache/flink/types/RowKind;I)V
+#getKind()Lorg/apache/flink/types/RowKind;
+#setKind(Lorg/apache/flink/types/RowKind;)V
+#ofKind(Lorg/apache/flink/types/RowKind;[Ljava/lang/Object;)Lorg/apache/flink/types/Row;
@1.13.0
+#withPositions(Lorg/apache/flink/types/RowKind;I)Lorg/apache/flink/types/Row;
+#withPositions(I)Lorg/apache/flink/types/Row;
+#withNames(Lorg/apache/flink/types/RowKind;)Lorg/apache/flink/types/Row;
+#withNames()Lorg/apache/flink/types/Row;
+#getFieldAs(I)Ljava/lang/Object;
+#getField(Ljava/lang/String;)Ljava/lang/Object;
+#getFieldAs(Ljava/lang/String;)Ljava/lang/Object;
+#setField(Ljava/lang/String;Ljava/lang/Object;)V
+#getFieldNames(Z)Ljava/util/Set;
+#clear()V
+#project(Lorg/apache/flink/types/Row;[Ljava/lang/String;)Lorg/apache/flink/types/Row;

+###org/apache/flink/util/AbstractCloseableRegistry
@1.2.0
+#<init>(Ljava/util/Map;)V
+#registerClosable(Ljava/io/Closeable;)V
+#unregisterClosable(Ljava/io/Closeable;)V
+#close()V
+#isClosed()Z
@1.4.0
+#registerCloseable(Ljava/io/Closeable;)V
+#unregisterCloseable(Ljava/io/Closeable;)Z
+#getNumberOfRegisteredCloseables()I
+#isCloseableRegistered(Ljava/io/Closeable;)Z
-#registerClosable(Ljava/io/Closeable;)V
-#unregisterClosable(Ljava/io/Closeable;)V
@1.15.0
-###org/apache/flink/util/AbstractCloseableRegistry

+###org/apache/flink/util/AbstractID
@0.9.0-milestone-1
+#<init>([B)V
+#<init>(JJ)V
+#<init>(Lorg/apache/flink/util/AbstractID;)V
+#<init>()V
+#getLowerPart()J
+#getUpperPart()J
+#getBytes()[B
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toShortString()Ljava/lang/String;
+#compareTo(Lorg/apache/flink/util/AbstractID;)I
+#compareTo(Ljava/lang/Object;)I
@1.0.0
-#toShortString()Ljava/lang/String;
@1.3.0
-#read(Lorg/apache/flink/core/memory/DataInputView;)V
-#write(Lorg/apache/flink/core/memory/DataOutputView;)V
@1.8.0
+#toHexString()Ljava/lang/String;

+###org/apache/flink/util/AutoCloseableAsync
@1.5.0
+#closeAsync()Ljava/util/concurrent/CompletableFuture;
+#close()V

+###org/apache/flink/util/CloseableIterable$Empty
@1.5.0
+#close()V
+#iterator()Ljava/util/Iterator;

+###org/apache/flink/util/CloseableIterable
@1.5.0
+#empty()Lorg/apache/flink/util/CloseableIterable;

+###org/apache/flink/util/CollectionUtil
@1.2.0
+#isNullOrEmpty(Ljava/util/Collection;)Z
+#isNullOrEmpty(Ljava/util/Map;)Z
@1.9.0
+#mapWithIndex(Ljava/util/Collection;Ljava/util/function/BiFunction;)Ljava/util/stream/Stream;
+#partition(Ljava/util/Collection;I)Ljava/util/Collection;
@1.10.0
+#project(Ljava/util/Collection;Ljava/util/function/Function;)Ljava/util/Collection;
@1.11.0
+#iterableToList(Ljava/lang/Iterable;)Ljava/util/List;
@1.12.0
+#iteratorToList(Ljava/util/Iterator;)Ljava/util/List;
@1.15.0
+#ofNullable(Ljava/lang/Object;)Ljava/util/Set;
+#entry(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
+#map([Ljava/util/Map$Entry;)Ljava/util/Map;

+###org/apache/flink/util/concurrent/FutureConsumerWithException
@1.5.2
+#acceptWithException(Ljava/lang/Object;)V
+#accept(Ljava/lang/Object;)V

+###org/apache/flink/util/ConfigurationException
@1.3.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/util/Disposable
@1.5.0
+#dispose()V

+###org/apache/flink/util/DynamicCodeLoadingException
@1.3.0
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/util/ExecutorUtils
@1.4.1
+#<init>()V
+#gracefulShutdown(JLjava/util/concurrent/TimeUnit;[Ljava/util/concurrent/ExecutorService;)V
@1.5.0
+#nonBlockingShutdown(JLjava/util/concurrent/TimeUnit;[Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/util/FileUtils
@1.1.0
+#getRandomFilename(Ljava/lang/String;)Ljava/lang/String;
+#readFile(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;
+#readFileUtf8(Ljava/io/File;)Ljava/lang/String;
+#writeFile(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V
+#writeFileUtf8(Ljava/io/File;Ljava/lang/String;)V
@1.1.4
+#deletePathIfEmpty(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;)Z
@1.1.5
+#deleteFileOrDirectory(Ljava/io/File;)V
+#deleteDirectory(Ljava/io/File;)V
+#deleteDirectoryQuietly(Ljava/io/File;)V
+#cleanDirectory(Ljava/io/File;)V
@1.5.5
+#writeCompletely(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)V
@1.6.0
+#copy(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;Z)V
+#compressDirectory(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/Path;
+#expandDirectory(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/Path;
-#writeCompletely(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)V
@1.6.2
+#writeCompletely(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)V
@1.8.0
+#readAllBytes(Ljava/nio/file/Path;)[B
@1.10.0
+#listFilesInDirectory(Ljava/nio/file/Path;Ljava/util/function/Predicate;)Ljava/util/Collection;
+#absolutizePath(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/Path;
+#relativizePath(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;
+#getCurrentWorkingDirectory()Ljava/nio/file/Path;
+#isClassFile(Ljava/nio/file/Path;)Z
+#isJarFile(Ljava/nio/file/Path;)Z
+#stripFileExtension(Ljava/lang/String;)Ljava/lang/String;
+#toURL(Ljava/nio/file/Path;)Ljava/net/URL;
@1.10.1
+#listDirectory(Ljava/nio/file/Path;)[Ljava/nio/file/Path;
@1.11.0
-#isClassFile(Ljava/nio/file/Path;)Z
@1.16.0
-#deletePathIfEmpty(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;)Z
@1.16.1
+#getTargetPathIfContainsSymbolicPath(Ljava/nio/file/Path;)Ljava/nio/file/Path;

+###org/apache/flink/util/FlinkException
@1.3.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/util/FlinkRuntimeException
@1.3.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/util/function/BiConsumerWithException
@1.5.0
+#acceptWithException(Ljava/lang/Object;Ljava/lang/Object;)V
+#accept(Ljava/lang/Object;Ljava/lang/Object;)V
@1.5.4
+#unchecked(Lorg/apache/flink/util/function/BiConsumerWithException;)Ljava/util/function/BiConsumer;
-#acceptWithException(Ljava/lang/Object;Ljava/lang/Object;)V
@1.6.0
+#acceptWithException(Ljava/lang/Object;Ljava/lang/Object;)V
-#unchecked(Lorg/apache/flink/util/function/BiConsumerWithException;)Ljava/util/function/BiConsumer;
@1.6.1
+#unchecked(Lorg/apache/flink/util/function/BiConsumerWithException;)Ljava/util/function/BiConsumer;
-#acceptWithException(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/flink/util/function/BiFunctionWithException
@1.5.0
+#applyWithException(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.5.4
+#unchecked(Lorg/apache/flink/util/function/BiFunctionWithException;)Ljava/util/function/BiFunction;
-#applyWithException(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.6.0
+#applyWithException(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#unchecked(Lorg/apache/flink/util/function/BiFunctionWithException;)Ljava/util/function/BiFunction;
@1.6.1
+#unchecked(Lorg/apache/flink/util/function/BiFunctionWithException;)Ljava/util/function/BiFunction;
-#applyWithException(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/util/function/CheckedSupplier
@1.5.0
+#unchecked(Lorg/apache/flink/util/function/CheckedSupplier;)Ljava/util/function/Supplier;
+#checked(Ljava/util/function/Supplier;)Lorg/apache/flink/util/function/CheckedSupplier;

+###org/apache/flink/util/function/ConsumerWithException
@1.5.2
+#acceptWithException(Ljava/lang/Object;)V
+#accept(Ljava/lang/Object;)V
@1.5.4
-###org/apache/flink/util/function/ConsumerWithException

+###org/apache/flink/util/function/FunctionWithException
@1.5.0
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/util/function/RunnableWithException
@1.5.0
+#run()V

+###org/apache/flink/util/function/SupplierWithException
@1.4.0
+#get()Ljava/lang/Object;

+###org/apache/flink/util/function/ThrowingConsumer
@1.5.0
+#accept(Ljava/lang/Object;)V

+###org/apache/flink/util/function/ThrowingRunnable
@1.5.0
+#run()V
@1.5.4
+#unchecked(Lorg/apache/flink/util/function/ThrowingRunnable;)Ljava/lang/Runnable;
@1.6.0
-#unchecked(Lorg/apache/flink/util/function/ThrowingRunnable;)Ljava/lang/Runnable;
@1.6.1
+#unchecked(Lorg/apache/flink/util/function/ThrowingRunnable;)Ljava/lang/Runnable;

+###org/apache/flink/util/FutureUtil
@1.2.0
+#runIfNotDoneAndGet(Ljava/util/concurrent/RunnableFuture;)Ljava/lang/Object;
@1.5.0
+#waitForAll(J[Ljava/util/concurrent/Future;)V
+#waitForAll(JLjava/util/Collection;)V
@1.8.0
-###org/apache/flink/util/FutureUtil

+###org/apache/flink/util/InstantiationUtil$ClassLoaderObjectInputStream
@0.10.0
+#resolveClass(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;
+#<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V
@1.2.0
-#resolveClass(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;

+###org/apache/flink/util/InstantiationUtil$FailureTolerantObjectInputStream
@1.4.1
+#<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V

+###org/apache/flink/util/IOUtils
@1.1.0
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;IZ)V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;)V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
+#readFully(Ljava/io/InputStream;[BII)V
+#skipFully(Ljava/io/InputStream;J)V
+#cleanup(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
+#closeStream(Ljava/io/Closeable;)V
+#closeSocket(Ljava/net/Socket;)V
@1.2.0
+#cleanup(Lorg/slf4j/Logger;[Ljava/lang/AutoCloseable;)V
+#closeAll(Ljava/lang/Iterable;)V
+#closeAllQuietly(Ljava/lang/Iterable;)V
+#closeQuietly(Ljava/lang/AutoCloseable;)V
-#cleanup(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
@1.11.0
+#closeAll([Ljava/lang/AutoCloseable;)V
+#closeAllQuietly([Ljava/lang/AutoCloseable;)V
@1.11.3
+#tryReadFully(Ljava/io/InputStream;[B)I
@1.12.0
+#deleteFileQuietly(Ljava/nio/file/Path;)V
@1.15.0
+#closeAll(Ljava/lang/Iterable;Ljava/lang/Class;)V
@1.16.0
+#deleteFilesRecursively(Ljava/nio/file/Path;)V

+###org/apache/flink/util/LambdaUtil
@1.4.0
+#applyToAllWhileSuppressingExceptions(Ljava/lang/Iterable;Lorg/apache/flink/util/ThrowingConsumer;)V
@1.5.0
+#applyToAllWhileSuppressingExceptions(Ljava/lang/Iterable;Lorg/apache/flink/util/function/ThrowingConsumer;)V
+#withContextClassLoader(Ljava/lang/ClassLoader;Lorg/apache/flink/util/function/ThrowingRunnable;)V
+#withContextClassLoader(Ljava/lang/ClassLoader;Lorg/apache/flink/util/function/SupplierWithException;)Ljava/lang/Object;
-#applyToAllWhileSuppressingExceptions(Ljava/lang/Iterable;Lorg/apache/flink/util/ThrowingConsumer;)V

+###org/apache/flink/util/LongValueSequenceIterator
@1.1.0
+#<init>(JJ)V
+#getCurrent()J
+#getTo()J
+#hasNext()Z
+#next()Lorg/apache/flink/types/LongValue;
+#remove()V
+#split(I)[Lorg/apache/flink/util/LongValueSequenceIterator;
+#getMaximumNumberOfSplits()I
+#split(I)[Ljava/util/Iterator;
+#next()Ljava/lang/Object;

+###org/apache/flink/util/MathUtils
@1.1.0
+#log2floor(I)I
+#log2strict(I)I
+#roundDownToPowerOf2(I)I
+#checkedDownCast(J)I
+#isPowerOf2(J)Z
+#jenkinsHash(I)I
+#murmurHash(I)I
@1.2.0
+#roundUpToPowerOfTwo(I)I
@1.2.1
+#longToIntWithBitMixing(J)I
+#bitMix(I)I
@1.6.0
+#flipSignBit(J)J
@1.11.0
+#divideRoundUp(II)I

+###org/apache/flink/util/NetUtils$SocketFactory
@1.0.0
+#createSocket(I)Ljava/net/ServerSocket;

+###org/apache/flink/util/OptionalConsumer
@1.4.0
+#of(Ljava/util/Optional;)Lorg/apache/flink/util/OptionalConsumer;
+#ifPresent(Ljava/util/function/Consumer;)Lorg/apache/flink/util/OptionalConsumer;
+#ifNotPresent(Ljava/lang/Runnable;)Lorg/apache/flink/util/OptionalConsumer;
@1.9.2
+#ifNotPresent(Lorg/apache/flink/util/function/ThrowingRunnable;)Lorg/apache/flink/util/OptionalConsumer;
-#ifNotPresent(Ljava/lang/Runnable;)Lorg/apache/flink/util/OptionalConsumer;

+###org/apache/flink/util/OptionalFailure
@1.5.0
+#of(Ljava/lang/Object;)Lorg/apache/flink/util/OptionalFailure;
+#ofFailure(Ljava/lang/Throwable;)Lorg/apache/flink/util/OptionalFailure;
+#createFrom(Lorg/apache/flink/util/function/CheckedSupplier;)Lorg/apache/flink/util/OptionalFailure;
+#get()Ljava/lang/Object;
+#getUnchecked()Ljava/lang/Object;
+#getFailureCause()Ljava/lang/Throwable;
+#isFailure()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/flink/util/OutputTag
@1.3.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getId()Ljava/lang/String;
+#getTypeInfo()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.12.0
+#isResponsibleFor(Lorg/apache/flink/util/OutputTag;Lorg/apache/flink/util/OutputTag;)Z

+###org/apache/flink/util/Preconditions
@1.1.0
+#checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;
+#checkNotNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#checkNotNull(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#checkArgument(Z)V
+#checkArgument(ZLjava/lang/Object;)V
+#checkArgument(ZLjava/lang/String;[Ljava/lang/Object;)V
+#checkState(Z)V
+#checkState(ZLjava/lang/Object;)V
+#checkState(ZLjava/lang/String;[Ljava/lang/Object;)V
+#checkElementIndex(II)V
+#checkElementIndex(IILjava/lang/String;)V
@1.12.0
+#checkCompletedNormally(Ljava/util/concurrent/CompletableFuture;)V

+###org/apache/flink/util/PropertiesUtil
@1.1.0
+#getInt(Ljava/util/Properties;Ljava/lang/String;I)I
+#getLong(Ljava/util/Properties;Ljava/lang/String;J)J
+#getLong(Ljava/util/Properties;Ljava/lang/String;JLorg/slf4j/Logger;)J
@1.3.0
+#getBoolean(Ljava/util/Properties;Ljava/lang/String;Z)Z
@1.11.0
+#flatten(Ljava/util/Properties;)Ljava/util/Properties;

+###org/apache/flink/util/ReflectionUtil$FullTypeInfo
@1.3.0
+#<init>(Ljava/lang/Class;[Lorg/apache/flink/util/ReflectionUtil$FullTypeInfo;)V
+#getClazz()Ljava/lang/Class;
+#getTemplateTypeInfos()[Lorg/apache/flink/util/ReflectionUtil$FullTypeInfo;
+#getClazzIterator()Ljava/util/Iterator;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z

+###org/apache/flink/util/ResourceGuard$Lease
@1.4.0
+#close()V

+###org/apache/flink/util/ResourceGuard
@1.4.0
+#<init>()V
+#acquireResource()Lorg/apache/flink/util/ResourceGuard$Lease;
+#close()V
+#isClosed()Z
+#getLeaseCount()I
@1.9.0
+#closeInterruptibly()V
+#closeUninterruptibly()V

+###org/apache/flink/util/SerializableObject
@1.4.0
+#<init>()V

+###org/apache/flink/util/SerializedThrowable
@1.4.0
+#<init>(Ljava/lang/Throwable;)V
+#deserializeError(Ljava/lang/ClassLoader;)Ljava/lang/Throwable;
+#getOriginalErrorClassName()Ljava/lang/String;
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V
+#toString()Ljava/lang/String;
+#get(Ljava/lang/Throwable;Ljava/lang/ClassLoader;)Ljava/lang/Throwable;
@1.4.1
+#getFullStringifiedStackTrace()Ljava/lang/String;
@1.5.0
+#getSerializedException()[B

+###org/apache/flink/util/SerializedValue
@0.10.0
+#<init>(Ljava/lang/Object;)V
+#deserializeValue(Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#getSizeOfSerializedState()I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.1.0
+#getByteArray()[B
+#fromBytes([B)Lorg/apache/flink/util/SerializedValue;
-#getSizeOfSerializedState()I

+###org/apache/flink/util/ShutdownHookUtil
@1.5.0
+#addShutdownHook(Ljava/lang/AutoCloseable;Ljava/lang/String;Lorg/slf4j/Logger;)Ljava/lang/Thread;
+#addShutdownHookThread(Ljava/lang/Thread;Ljava/lang/String;Lorg/slf4j/Logger;)Z
+#removeShutdownHook(Ljava/lang/Thread;Ljava/lang/String;Lorg/slf4j/Logger;)V

+###org/apache/flink/util/StateMigrationException
@1.3.1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.6.0
+#notSupported()Lorg/apache/flink/util/StateMigrationException;

+###org/apache/flink/util/StringBasedID
@1.3.0
+#getKeyString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/util/StringValueUtils$WhitespaceTokenizer
@1.3.0
+#<init>()V
+#setStringToTokenize(Lorg/apache/flink/types/StringValue;)V
+#next(Lorg/apache/flink/types/StringValue;)Z

+###org/apache/flink/util/StringValueUtils
@1.3.0
+#toLowerCase(Lorg/apache/flink/types/StringValue;)V
+#replaceNonWordChars(Lorg/apache/flink/types/StringValue;C)V

+###org/apache/flink/util/TernaryBoolean
@1.5.0
+#values()[Lorg/apache/flink/util/TernaryBoolean;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/util/TernaryBoolean;
+#getOrDefault(Z)Z
+#resolveUndefined(Z)Lorg/apache/flink/util/TernaryBoolean;
+#getAsBoolean()Ljava/lang/Boolean;
+#fromBoolean(Z)Lorg/apache/flink/util/TernaryBoolean;
+#fromBoxedBoolean(Ljava/lang/Boolean;)Lorg/apache/flink/util/TernaryBoolean;

+###org/apache/flink/util/UnionIterator
@1.1.0
+#<init>()V
+#clear()V
+#addList(Ljava/util/List;)V
+#add(Ljava/util/Iterator;)V
+#iterator()Ljava/util/Iterator;
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/apache/flink/util/WrappingProxy
@1.2.0
+#getWrappedDelegate()Ljava/lang/Object;

+###org/apache/flink/util/WrappingProxyUtil
@1.2.0
+#stripProxy(Ljava/lang/Object;)Ljava/lang/Object;
@1.8.0
+#stripProxy(Lorg/apache/flink/util/WrappingProxy;)Ljava/lang/Object;
-#stripProxy(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/util/WrappingRuntimeException
@1.3.0
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#unwrap()Ljava/lang/Throwable;
@1.10.0
+#wrapIfNecessary(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;

+###org/apache/flink/util/XORShiftRandom
@0.10.0
+#<init>()V
+#<init>(J)V
+#next(I)I

+###org/apache/flink/api/common/operators/SingleInputSemanticProperties$AllFieldsConstantProperties
@0.8.0
+#<init>()V
+#getReadFields()Lorg/apache/flink/api/common/operators/util/FieldSet;
+#getWrittenFields()Lorg/apache/flink/api/common/operators/util/FieldSet;
+#getForwardedField(I)Lorg/apache/flink/api/common/operators/util/FieldSet;
+#addForwardedField(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
+#addForwardedField(II)V
+#setForwardedField(ILorg/apache/flink/api/common/operators/util/FieldSet;)V
+#addReadFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#setReadFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#addWrittenFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
+#setWrittenFields(Lorg/apache/flink/api/common/operators/util/FieldSet;)V
@0.9.0-milestone-1
-###org/apache/flink/api/common/operators/SingleInputSemanticProperties$AllFieldsConstantProperties

+###org/apache/flink/core/fs/HadoopFileSystemWrapper
@0.8.0
+#getHadoopWrapperClassNameForFileSystem(Ljava/lang/String;)Ljava/lang/Class;
@1.4.0
-###org/apache/flink/core/fs/HadoopFileSystemWrapper

+###org/apache/flink/util/TraversableOnceIterable
@0.8.0
+#<init>(Ljava/util/Iterator;)V
+#iterator()Ljava/util/Iterator;
@0.10.0
-###org/apache/flink/util/TraversableOnceIterable

+###org/apache/flink/api/common/io/FormatUtil
@0.6-hadoop2-incubating
+#<init>()V
+#openInput(Ljava/lang/Class;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/api/common/io/FileInputFormat;
+#openAllInputs(Ljava/lang/Class;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Ljava/util/List;
+#openInput(Ljava/lang/Class;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/api/common/io/InputFormat;
+#openOutput(Ljava/lang/Class;Ljava/lang/String;Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/api/common/io/FileOutputFormat;
@0.7.0-hadoop2-incubating
-###org/apache/flink/api/common/io/FormatUtil

+###org/apache/flink/api/common/operators/base/GenericDataSinkBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/io/OutputFormat;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;Lorg/apache/flink/api/common/operators/UnaryOperatorInformation;Ljava/lang/String;)V
+#getInput()Lorg/apache/flink/api/common/operators/Operator;
+#setInput(Lorg/apache/flink/api/common/operators/Operator;)V
+#setInputs([Lorg/apache/flink/api/common/operators/Operator;)V[deprecated]
+#setInputs(Ljava/util/List;)V[deprecated]
+#addInput([Lorg/apache/flink/api/common/operators/Operator;)V[deprecated]
+#addInputs(Ljava/util/List;)V[deprecated]
+#setGlobalOrder(Lorg/apache/flink/api/common/operators/Ordering;)V
+#setGlobalOrder(Lorg/apache/flink/api/common/operators/Ordering;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
+#getLocalOrder()Lorg/apache/flink/api/common/operators/Ordering;
+#setLocalOrder(Lorg/apache/flink/api/common/operators/Ordering;)V
+#getPartitionOrdering()Lorg/apache/flink/api/common/operators/Ordering;
+#setRangePartitioned(Lorg/apache/flink/api/common/operators/Ordering;)V
+#setRangePartitioned(Lorg/apache/flink/api/common/operators/Ordering;Lorg/apache/flink/api/common/distributions/DataDistribution;)V
+#getDataDistribution()Lorg/apache/flink/api/common/distributions/DataDistribution;
+#getFormatWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#getUserCodeWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#accept(Lorg/apache/flink/util/Visitor;)V
+#toString()Ljava/lang/String;
@0.7.0-hadoop2-incubating
-###org/apache/flink/api/common/operators/base/GenericDataSinkBase

+###org/apache/flink/api/common/operators/base/GenericDataSourceBase
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/api/common/io/InputFormat;Lorg/apache/flink/api/common/operators/OperatorInformation;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/api/common/io/InputFormat;Lorg/apache/flink/api/common/operators/OperatorInformation;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/OperatorInformation;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/api/common/operators/OperatorInformation;)V
+#getFormatWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#getUserCodeWrapper()Lorg/apache/flink/api/common/operators/util/UserCodeWrapper;
+#getStatisticsKey()Ljava/lang/String;
+#setStatisticsKey(Ljava/lang/String;)V
+#accept(Lorg/apache/flink/util/Visitor;)V
+#toString()Ljava/lang/String;
@0.7.0-hadoop2-incubating
-###org/apache/flink/api/common/operators/base/GenericDataSourceBase

+###org/apache/flink/core/fs/FileChannelWrapper
@0.6-hadoop2-incubating
+#<init>(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;IS)V
+#force(Z)V
+#lock(JJZ)Ljava/nio/channels/FileLock;
+#map(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
+#position()J
+#position(J)Ljava/nio/channels/FileChannel;
+#read(Ljava/nio/ByteBuffer;)I
+#read(Ljava/nio/ByteBuffer;J)I
+#read([Ljava/nio/ByteBuffer;II)J
+#size()J
+#transferFrom(Ljava/nio/channels/ReadableByteChannel;JJ)J
+#transferTo(JJLjava/nio/channels/WritableByteChannel;)J
+#truncate(J)Ljava/nio/channels/FileChannel;
+#tryLock(JJZ)Ljava/nio/channels/FileLock;
+#write(Ljava/nio/ByteBuffer;)I
+#write(Ljava/nio/ByteBuffer;J)I
+#write([Ljava/nio/ByteBuffer;II)J
+#truncate(J)Ljava/nio/channels/SeekableByteChannel;
+#position(J)Ljava/nio/channels/SeekableByteChannel;
@0.7.0-hadoop2-incubating
-###org/apache/flink/core/fs/FileChannelWrapper

+###org/apache/flink/types/NothingTypeInfo
@0.6-hadoop2-incubating
+#<init>()V
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@0.7.0-hadoop2-incubating
-###org/apache/flink/types/NothingTypeInfo

+###org/apache/flink/types/TypeInformation
@0.6-hadoop2-incubating
+#<init>()V
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@0.7.0-hadoop2-incubating
-###org/apache/flink/types/TypeInformation

+###org/apache/flink/util/LogUtils
@0.6-hadoop2-incubating
+#<init>()V
+#initializeDefaultConsoleLogger()V
+#initializeDefaultTestConsoleLogger()V
+#initializeDefaultConsoleLogger(Lorg/apache/log4j/Level;)V
@0.7.0-hadoop2-incubating
-###org/apache/flink/util/LogUtils

+###org/apache/flink/api/connector/source/SplitEnumerator
@1.11.0
+#start()V
+#handleSourceEvent(ILorg/apache/flink/api/connector/source/SourceEvent;)V
+#addSplitsBack(Ljava/util/List;I)V
+#addReader(I)V
+#snapshotState()Ljava/lang/Object;
+#close()V
@1.11.3
+#handleSplitRequest(ILjava/lang/String;)V
+#notifyCheckpointComplete(J)V
+#notifyCheckpointAborted(J)V
@1.12.0
-#notifyCheckpointAborted(J)V
@1.13.0
+#snapshotState(J)Ljava/lang/Object;
-#snapshotState()Ljava/lang/Object;

+###org/apache/flink/api/connector/source/Source
@1.11.0
+#getBoundedness()Lorg/apache/flink/api/connector/source/Boundedness;
+#createReader(Lorg/apache/flink/api/connector/source/SourceReaderContext;)Lorg/apache/flink/api/connector/source/SourceReader;
+#createEnumerator(Lorg/apache/flink/api/connector/source/SplitEnumeratorContext;)Lorg/apache/flink/api/connector/source/SplitEnumerator;
+#restoreEnumerator(Lorg/apache/flink/api/connector/source/SplitEnumeratorContext;Ljava/lang/Object;)Lorg/apache/flink/api/connector/source/SplitEnumerator;
+#getSplitSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;
+#getEnumeratorCheckpointSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;

+###org/apache/flink/api/connector/source/ExternallyInducedSourceReader
@1.11.3
+#shouldTriggerCheckpoint()Ljava/util/Optional;

+###org/apache/flink/api/connector/source/SourceReader
@1.11.0
+#start()V
+#pollNext(Lorg/apache/flink/api/connector/source/ReaderOutput;)Lorg/apache/flink/core/io/InputStatus;
+#snapshotState()Ljava/util/List;
+#isAvailable()Ljava/util/concurrent/CompletableFuture;
+#addSplits(Ljava/util/List;)V
+#handleSourceEvents(Lorg/apache/flink/api/connector/source/SourceEvent;)V
@1.11.3
+#snapshotState(J)Ljava/util/List;
+#notifyNoMoreSplits()V
+#notifyCheckpointComplete(J)V
+#notifyCheckpointAborted(J)V
-#snapshotState()Ljava/util/List;
@1.12.0
-#notifyCheckpointAborted(J)V

+###org/apache/flink/api/connector/source/SourceEvent
@1.11.0

+###org/apache/flink/api/connector/source/SourceSplit
@1.11.0
+#splitId()Ljava/lang/String;

+###org/apache/flink/api/connector/source/ReaderInfo
@1.11.0
+#<init>(ILjava/lang/String;)V
+#getSubtaskId()I
+#getLocation()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/flink/api/connector/source/Boundedness
@1.11.0
+#values()[Lorg/apache/flink/api/connector/source/Boundedness;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/connector/source/Boundedness;

+###org/apache/flink/api/connector/source/ReaderOutput
@1.11.0
+#collect(Ljava/lang/Object;)V
+#collect(Ljava/lang/Object;J)V
+#emitWatermark(Lorg/apache/flink/api/common/eventtime/Watermark;)V
+#markIdle()V
+#createOutputForSplit(Ljava/lang/String;)Lorg/apache/flink/api/connector/source/SourceOutput;
+#releaseOutputForSplit(Ljava/lang/String;)V

+###org/apache/flink/api/connector/source/lib/NumberSequenceSource$NumberSequenceSplit
@1.11.3
+#<init>(Ljava/lang/String;JJ)V
+#splitId()Ljava/lang/String;
+#from()J
+#to()J
+#getIterator()Lorg/apache/flink/util/NumberSequenceIterator;
+#getUpdatedSplitForIterator(Lorg/apache/flink/util/NumberSequenceIterator;)Lorg/apache/flink/api/connector/source/lib/util/IteratorSourceSplit;
+#toString()Ljava/lang/String;
+#getUpdatedSplitForIterator(Ljava/util/Iterator;)Lorg/apache/flink/api/connector/source/lib/util/IteratorSourceSplit;
+#getIterator()Ljava/util/Iterator;

+###org/apache/flink/api/connector/source/lib/NumberSequenceSource
@1.11.3
+#<init>(JJ)V
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#getBoundedness()Lorg/apache/flink/api/connector/source/Boundedness;
+#createReader(Lorg/apache/flink/api/connector/source/SourceReaderContext;)Lorg/apache/flink/api/connector/source/SourceReader;
+#createEnumerator(Lorg/apache/flink/api/connector/source/SplitEnumeratorContext;)Lorg/apache/flink/api/connector/source/SplitEnumerator;
+#restoreEnumerator(Lorg/apache/flink/api/connector/source/SplitEnumeratorContext;Ljava/util/Collection;)Lorg/apache/flink/api/connector/source/SplitEnumerator;
+#getSplitSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;
+#getEnumeratorCheckpointSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;
+#restoreEnumerator(Lorg/apache/flink/api/connector/source/SplitEnumeratorContext;Ljava/lang/Object;)Lorg/apache/flink/api/connector/source/SplitEnumerator;
@1.12.3
+#getFrom()J
+#getTo()J

+###org/apache/flink/api/connector/source/lib/util/IteratorSourceSplit
@1.11.3
+#getIterator()Ljava/util/Iterator;
+#getUpdatedSplitForIterator(Ljava/util/Iterator;)Lorg/apache/flink/api/connector/source/lib/util/IteratorSourceSplit;

+###org/apache/flink/api/connector/source/lib/util/IteratorSourceEnumerator
@1.11.3
+#<init>(Lorg/apache/flink/api/connector/source/SplitEnumeratorContext;Ljava/util/Collection;)V
+#start()V
+#close()V
+#handleSplitRequest(ILjava/lang/String;)V
+#addSplitsBack(Ljava/util/List;I)V
+#snapshotState()Ljava/util/Collection;
+#addReader(I)V
+#snapshotState()Ljava/lang/Object;
@1.13.0
+#snapshotState(J)Ljava/util/Collection;
+#snapshotState(J)Ljava/lang/Object;
-#snapshotState()Ljava/util/Collection;
-#snapshotState()Ljava/lang/Object;

+###org/apache/flink/api/connector/source/lib/util/IteratorSourceReader
@1.11.3
+#<init>(Lorg/apache/flink/api/connector/source/SourceReaderContext;)V
+#start()V
+#pollNext(Lorg/apache/flink/api/connector/source/ReaderOutput;)Lorg/apache/flink/core/io/InputStatus;
+#isAvailable()Ljava/util/concurrent/CompletableFuture;
+#addSplits(Ljava/util/List;)V
+#notifyNoMoreSplits()V
+#snapshotState(J)Ljava/util/List;
+#close()V

+###org/apache/flink/api/connector/source/SourceReaderContext
@1.11.0
+#metricGroup()Lorg/apache/flink/metrics/MetricGroup;
+#sendSourceEventToCoordinator(Lorg/apache/flink/api/connector/source/SourceEvent;)V
@1.11.3
+#getConfiguration()Lorg/apache/flink/configuration/Configuration;
+#getLocalHostName()Ljava/lang/String;
+#getIndexOfSubtask()I
+#sendSplitRequest()V
@1.13.0
+#getUserCodeClassLoader()Lorg/apache/flink/util/UserCodeClassLoader;
@1.14.0
+#metricGroup()Lorg/apache/flink/metrics/groups/SourceReaderMetricGroup;
-#metricGroup()Lorg/apache/flink/metrics/MetricGroup;

+###org/apache/flink/api/connector/source/SourceOutput
@1.11.0
+#collect(Ljava/lang/Object;)V
+#collect(Ljava/lang/Object;J)V

+###org/apache/flink/api/connector/source/SplitEnumeratorContext
@1.11.0
+#metricGroup()Lorg/apache/flink/metrics/MetricGroup;
+#sendEventToSourceReader(ILorg/apache/flink/api/connector/source/SourceEvent;)V
+#currentParallelism()I
+#registeredReaders()Ljava/util/Map;
+#assignSplits(Lorg/apache/flink/api/connector/source/SplitsAssignment;)V
+#callAsync(Ljava/util/concurrent/Callable;Ljava/util/function/BiConsumer;)V
+#callAsync(Ljava/util/concurrent/Callable;Ljava/util/function/BiConsumer;JJ)V
@1.11.3
+#assignSplit(Lorg/apache/flink/api/connector/source/SourceSplit;I)V
+#signalNoMoreSplits(I)V
+#runInCoordinatorThread(Ljava/lang/Runnable;)V
@1.14.0
+#metricGroup()Lorg/apache/flink/metrics/groups/SplitEnumeratorMetricGroup;
-#metricGroup()Lorg/apache/flink/metrics/MetricGroup;
@1.16.0
+#sendEventToSourceReader(IILorg/apache/flink/api/connector/source/SourceEvent;)V
+#registeredReadersOfAttempts()Ljava/util/Map;

+###org/apache/flink/api/connector/source/SplitsAssignment
@1.11.0
+#<init>(Ljava/util/Map;)V
+#assignment()Ljava/util/Map;
+#toString()Ljava/lang/String;
@1.11.3
+#<init>(Lorg/apache/flink/api/connector/source/SourceSplit;I)V

+###org/apache/flink/api/java/typeutils/runtime/ValueSerializer$ValueSerializerSnapshot
@1.8.0
+#<init>()V

+###org/apache/flink/api/java/typeutils/runtime/NullableSerializer$NullableSerializerSnapshot
@1.8.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/java/typeutils/runtime/NullableSerializer;)V

+###org/apache/flink/api/java/typeutils/runtime/MaskUtils
@1.11.0
+#<init>()V
+#writeMask([ZLorg/apache/flink/core/memory/DataOutputView;)V
+#readIntoMask(Lorg/apache/flink/core/memory/DataInputView;[Z)V
+#readIntoAndCopyMask(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;[Z)V
@1.13.3
+#writeMask([ZILorg/apache/flink/core/memory/DataOutputView;)V
+#readIntoMask(Lorg/apache/flink/core/memory/DataInputView;[ZI)V
+#readIntoAndCopyMask(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;[ZI)V

+###org/apache/flink/api/java/typeutils/runtime/RowSerializer$RowSerializerSnapshot
@1.8.0
+#<init>()V

+###org/apache/flink/api/java/typeutils/runtime/EitherSerializerSnapshot
@1.7.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getCurrentVersion()I
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
@1.8.0
+#restoreSerializer()Lorg/apache/flink/api/java/typeutils/runtime/EitherSerializer;

+###org/apache/flink/api/java/typeutils/runtime/PojoSerializerSnapshot
@1.8.0
+#<init>()V
+#getCurrentVersion()I
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/java/typeutils/runtime/NullableSerializer
@1.6.2
+#wrapIfNullIsNotSupported(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Z)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#checkIfNullSupported(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Z
+#wrap(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Z)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createInstance()Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getLength()I
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#hashCode()I
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/NullableSerializer$NullableSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/NullableSerializer$NullableSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;

+###org/apache/flink/api/java/typeutils/runtime/JavaEitherSerializerSnapshot
@1.8.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/java/typeutils/runtime/EitherSerializer;)V

+###org/apache/flink/api/java/typeutils/runtime/NullableSerializer$NullableSerializerConfigSnapshot
@1.6.2
+#<init>()V
+#getVersion()I
@1.8.0
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/java/typeutils/runtime/Tuple0SerializerSnapshot
@1.8.0
+#<init>()V

+###org/apache/flink/api/java/typeutils/runtime/CopyableValueSerializer$CopyableValueSerializerSnapshot
@1.8.0
+#<init>()V

+###org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializerSnapshot
@1.8.0
+#<init>()V
+#getCurrentVersion()I
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/java/typeutils/runtime/TupleSerializerSnapshot
@1.8.0
+#<init>()V

+###org/apache/flink/api/java/ClosureCleaner
@1.10.0
+#<init>()V
+#clean(Ljava/lang/Object;Lorg/apache/flink/api/common/ExecutionConfig$ClosureCleanerLevel;Z)V
+#ensureSerializable(Ljava/lang/Object;)V

+###org/apache/flink/api/common/typeutils/CompositeSerializer$ConfigSnapshot
@1.6.0
+#<init>()V
+#getVersion()I

+###org/apache/flink/api/common/typeutils/CompositeSerializer$PrecomputedParameters
@1.6.0

+###org/apache/flink/api/common/typeutils/CompositeSerializer
@1.6.0
+#createInstance([Ljava/lang/Object;)Ljava/lang/Object;
+#duplicate()Lorg/apache/flink/api/common/typeutils/CompositeSerializer;
+#isImmutableType()Z
+#createInstance()Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getLength()I
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.7.0
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
-#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
-#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/api/common/typeutils/TypeSerializerSnapshot
@1.7.0
+#getCurrentVersion()I
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#writeVersionedSnapshot(Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;)V
+#readVersionedSnapshot(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/api/common/typeutils/CompositeTypeSerializerSnapshot
@1.8.0
+#<init>(Ljava/lang/Class;)V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getCurrentVersion()I
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.9.0
+#getNestedSerializerSnapshots()[Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/api/common/typeutils/NestedSerializersSnapshotDelegate
@1.8.0
+#<init>([Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getRestoredNestedSerializers()[Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getRestoredNestedSerializer(I)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getNestedSerializerSnapshots()[Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#resolveCompatibilityWithNested(Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;[deprecated]
+#writeNestedSerializerSnapshots(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readNestedSerializerSnapshots(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/NestedSerializersSnapshotDelegate;
+#legacyReadNestedSerializerSnapshots(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/NestedSerializersSnapshotDelegate;

+###org/apache/flink/api/common/typeutils/TypeSerializerSnapshotSerializationUtil
@1.7.0
+#<init>()V
+#writeSerializerSnapshot(Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#readSerializerSnapshot(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#readAndInstantiateSnapshotClass(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/api/common/typeutils/LegacySerializerSnapshotTransformer
@1.8.0
+#transformLegacySerializerSnapshot(Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/api/common/typeutils/CompositeTypeSerializerUtil$IntermediateCompatibilityResult
@1.8.0
+#isCompatibleWithReconfiguredSerializer()Z
+#isCompatibleAsIs()Z
+#isCompatibleAfterMigration()Z
+#isIncompatible()Z
+#getFinalResult()Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#getNestedSerializers()[Lorg/apache/flink/api/common/typeutils/TypeSerializer;

+###org/apache/flink/api/common/typeutils/BackwardsCompatibleSerializerSnapshot
@1.7.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#getCurrentVersion()I
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/SingleThreadAccessCheckingTypeSerializer
@1.8.0
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createInstance()Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getLength()I
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot$SelfResolvingTypeSerializer
@1.8.0
+#resolveSchemaCompatibilityViaRedirectingToNewSnapshotClass(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/common/typeutils/CompositeTypeSerializerSnapshot$OuterSchemaCompatibility
@1.11.0
+#values()[Lorg/apache/flink/api/common/typeutils/CompositeTypeSerializerSnapshot$OuterSchemaCompatibility;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/typeutils/CompositeTypeSerializerSnapshot$OuterSchemaCompatibility;

+###org/apache/flink/api/common/typeutils/SingleThreadAccessCheckingTypeSerializer$SingleThreadAccessCheckingTypeSerializerSnapshot
@1.8.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/TypeSerializerUtils
@1.7.0
+#snapshotBackwardsCompatible([Lorg/apache/flink/api/common/typeutils/TypeSerializer;)[Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
@1.8.0
+#snapshotBackwardsCompatible(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/api/common/typeutils/SimpleTypeSerializerSnapshot
@1.7.0
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#getCurrentVersion()I
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.8.0
+#<init>(Ljava/util/function/Supplier;)V
-#<init>()V
-#<init>(Ljava/lang/Class;)V

+###org/apache/flink/api/common/typeutils/base/LocalDateComparator
@1.9.0
+#<init>(Z)V
+#hash(Ljava/time/LocalDate;)I
+#setReference(Ljava/time/LocalDate;)V
+#equalToReference(Ljava/time/LocalDate;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Ljava/time/LocalDate;Ljava/time/LocalDate;)I
+#invertNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Ljava/time/LocalDate;Lorg/apache/flink/core/memory/DataOutputView;)V
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#readWithKeyDenormalization(Ljava/time/LocalDate;Lorg/apache/flink/core/memory/DataInputView;)Ljava/time/LocalDate;
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/time/LocalDate;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/LocalDateComparator;
+#compareSerializedLocalDate(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;Z)I
+#putNormalizedKeyLocalDate(Ljava/time/LocalDate;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/ShortSerializer$ShortSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/CharSerializer$CharSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/BigIntSerializer$BigIntSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/SqlTimeSerializer$SqlTimeSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/BooleanSerializer$BooleanSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/InstantSerializer$InstantSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/FloatSerializer$FloatSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/BooleanValueSerializer$BooleanValueSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/ShortValueSerializer$ShortValueSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/BigDecSerializer$BigDecSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/LongSerializer$LongSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/IntSerializer$IntSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/LocalTimeComparator
@1.9.0
+#<init>(Z)V
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/time/LocalTime;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/LocalTimeComparator;
+#compareSerializedLocalTime(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;Z)I
+#putNormalizedKeyLocalTime(Ljava/time/LocalTime;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/api/common/typeutils/base/LocalTimeSerializer$LocalTimeSerializerSnapshot
@1.9.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/IntValueSerializer$IntValueSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/LocalDateSerializer
@1.9.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Ljava/time/LocalDate;
+#copy(Ljava/time/LocalDate;)Ljava/time/LocalDate;
+#copy(Ljava/time/LocalDate;Ljava/time/LocalDate;)Ljava/time/LocalDate;
+#getLength()I
+#serialize(Ljava/time/LocalDate;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/time/LocalDate;
+#deserialize(Ljava/time/LocalDate;Lorg/apache/flink/core/memory/DataInputView;)Ljava/time/LocalDate;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;

+###org/apache/flink/api/common/typeutils/base/GenericArraySerializerSnapshot
@1.8.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/common/typeutils/base/GenericArraySerializer;)V

+###org/apache/flink/api/common/typeutils/base/EnumSerializer$EnumSerializerSnapshot
@1.8.0
+#<init>()V
+#getCurrentVersion()I
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/common/typeutils/base/CharValueSerializer$CharValueSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/StringSerializer$StringSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/DoubleSerializer$DoubleSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/VoidSerializer$VoidSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/LocalTimeSerializer
@1.9.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Ljava/time/LocalTime;
+#copy(Ljava/time/LocalTime;)Ljava/time/LocalTime;
+#copy(Ljava/time/LocalTime;Ljava/time/LocalTime;)Ljava/time/LocalTime;
+#getLength()I
+#serialize(Ljava/time/LocalTime;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/time/LocalTime;
+#deserialize(Ljava/time/LocalTime;Lorg/apache/flink/core/memory/DataInputView;)Ljava/time/LocalTime;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;

+###org/apache/flink/api/common/typeutils/base/InstantSerializer
@1.7.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Ljava/time/Instant;
+#copy(Ljava/time/Instant;)Ljava/time/Instant;
+#copy(Ljava/time/Instant;Ljava/time/Instant;)Ljava/time/Instant;
+#getLength()I
+#serialize(Ljava/time/Instant;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/time/Instant;
+#deserialize(Ljava/time/Instant;Lorg/apache/flink/core/memory/DataInputView;)Ljava/time/Instant;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#canEqual(Ljava/lang/Object;)Z
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
@1.8.0
-#canEqual(Ljava/lang/Object;)Z

+###org/apache/flink/api/common/typeutils/base/DoubleValueSerializer$DoubleValueSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/FloatValueSerializer$FloatValueSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/LocalDateSerializer$LocalDateSerializerSnapshot
@1.9.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/LocalDateTimeSerializer
@1.9.0
+#<init>()V
+#isImmutableType()Z
+#createInstance()Ljava/time/LocalDateTime;
+#copy(Ljava/time/LocalDateTime;)Ljava/time/LocalDateTime;
+#copy(Ljava/time/LocalDateTime;Ljava/time/LocalDateTime;)Ljava/time/LocalDateTime;
+#getLength()I
+#serialize(Ljava/time/LocalDateTime;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/time/LocalDateTime;
+#deserialize(Ljava/time/LocalDateTime;Lorg/apache/flink/core/memory/DataInputView;)Ljava/time/LocalDateTime;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;

+###org/apache/flink/api/common/typeutils/base/LongValueSerializer$LongValueSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/ByteValueSerializer$ByteValueSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/NormalizedKeyUtil
@1.9.0
+#<init>()V
+#putByteNormalizedKey(BLorg/apache/flink/core/memory/MemorySegment;II)V
+#putCharNormalizedKey(CLorg/apache/flink/core/memory/MemorySegment;II)V
+#putBooleanNormalizedKey(ZLorg/apache/flink/core/memory/MemorySegment;II)V
+#putShortNormalizedKey(SLorg/apache/flink/core/memory/MemorySegment;II)V
+#putIntNormalizedKey(ILorg/apache/flink/core/memory/MemorySegment;II)V
+#putUnsignedIntegerNormalizedKey(ILorg/apache/flink/core/memory/MemorySegment;II)V
+#putLongNormalizedKey(JLorg/apache/flink/core/memory/MemorySegment;II)V
+#putUnsignedLongNormalizedKey(JLorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/api/common/typeutils/base/NullValueSerializer$NullValueSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/StringValueSerializer$StringValueSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/LocalDateTimeSerializer$LocalDateTimeSerializerSnapshot
@1.9.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/array/ShortPrimitiveArraySerializer$ShortPrimitiveArraySerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/array/BooleanPrimitiveArraySerializer$BooleanPrimitiveArraySerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/array/IntPrimitiveArraySerializer$IntPrimitiveArraySerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/array/CharPrimitiveArraySerializer$CharPrimitiveArraySerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/array/DoublePrimitiveArraySerializer$DoublePrimitiveArraySerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/array/BytePrimitiveArraySerializer$BytePrimitiveArraySerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/array/LongPrimitiveArraySerializer$LongPrimitiveArraySerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/array/FloatPrimitiveArraySerializer$FloatPrimitiveArraySerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/array/StringArraySerializer$StringArraySerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/ListSerializerSnapshot
@1.7.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getCurrentVersion()I
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
@1.8.0
+#<init>(Lorg/apache/flink/api/common/typeutils/base/ListSerializer;)V
+#getCurrentOuterSnapshotVersion()I
-#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
-#getCurrentVersion()I
-#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
-#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
-#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
-#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V

+###org/apache/flink/api/common/typeutils/base/ByteSerializer$ByteSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/SqlTimestampSerializer$SqlTimestampSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/InstantComparator
@1.7.0
+#<init>(Z)V
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/time/Instant;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/api/common/typeutils/base/SqlDateSerializer$SqlDateSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/base/MapSerializerSnapshot
@1.7.0
+#<init>()V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getCurrentVersion()I
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
@1.8.0
+#<init>(Lorg/apache/flink/api/common/typeutils/base/MapSerializer;)V
+#getCurrentOuterSnapshotVersion()I
-#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
-#getCurrentVersion()I
-#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
-#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
-#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
-#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
@1.9.0
+#getKeySerializerSnapshot()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/api/common/typeutils/base/LocalDateTimeComparator
@1.9.0
+#<init>(Z)V
+#hash(Ljava/time/LocalDateTime;)I
+#setReference(Ljava/time/LocalDateTime;)V
+#equalToReference(Ljava/time/LocalDateTime;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Ljava/time/LocalDateTime;Ljava/time/LocalDateTime;)I
+#invertNormalizedKey()Z
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Ljava/time/LocalDateTime;Lorg/apache/flink/core/memory/DataOutputView;)V
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#readWithKeyDenormalization(Ljava/time/LocalDateTime;Lorg/apache/flink/core/memory/DataInputView;)Ljava/time/LocalDateTime;
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Ljava/time/LocalDateTime;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#duplicate()Lorg/apache/flink/api/common/typeutils/base/LocalDateTimeComparator;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I

+###org/apache/flink/api/common/typeutils/base/DateSerializer$DateSerializerSnapshot
@1.7.0
+#<init>()V

+###org/apache/flink/api/common/typeutils/GenericTypeSerializerSnapshot
@1.8.0
+#getCurrentVersion()I
+#writeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readSnapshot(ILorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)V
+#restoreSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveSchemaCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;

+###org/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility
@1.7.0
+#compatibleAsIs()Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#compatibleAfterMigration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#incompatible()Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#isCompatibleAsIs()Z
+#isCompatibleAfterMigration()Z
+#isIncompatible()Z
@1.8.0
+#compatibleWithReconfiguredSerializer(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#isCompatibleWithReconfiguredSerializer()Z
+#getReconfiguredSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;

+###org/apache/flink/api/common/typeutils/CompositeTypeSerializerUtil
@1.8.0
+#<init>()V
+#delegateCompatibilityCheckToNewSnapshot(Lorg/apache/flink/api/common/typeutils/TypeSerializer;Lorg/apache/flink/api/common/typeutils/CompositeTypeSerializerSnapshot;[Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#setNestedSerializersSnapshots(Lorg/apache/flink/api/common/typeutils/CompositeTypeSerializerSnapshot;[Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;)V
+#constructIntermediateCompatibilityResult([Lorg/apache/flink/api/common/typeutils/TypeSerializer;[Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;)Lorg/apache/flink/api/common/typeutils/CompositeTypeSerializerUtil$IntermediateCompatibilityResult;

+###org/apache/flink/api/common/functions/util/PrintSinkOutputWriter
@1.7.0
+#<init>()V
+#<init>(Z)V
+#<init>(Ljava/lang/String;Z)V
+#open(II)V
+#write(Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
@1.16.0
+#write(Ljava/lang/Object;Lorg/apache/flink/api/connector/sink2/SinkWriter$Context;)V
+#flush(Z)V
+#close()V

+###org/apache/flink/api/common/operators/util/OperatorValidationUtils
@1.10.0
+#validateParallelism(I)V
+#validateParallelism(IZ)V
+#validateMaxParallelism(I)V
+#validateMaxParallelism(II)V
+#validateMaxParallelism(IZ)V
+#validateMaxParallelism(IIZ)V
+#validateResources(Lorg/apache/flink/api/common/operators/ResourceSpec;)V
+#validateMinAndPreferredResources(Lorg/apache/flink/api/common/operators/ResourceSpec;Lorg/apache/flink/api/common/operators/ResourceSpec;)V
+#validateResourceRequirements(Lorg/apache/flink/api/common/operators/ResourceSpec;Lorg/apache/flink/api/common/operators/ResourceSpec;I)V
@1.12.0
-#validateResourceRequirements(Lorg/apache/flink/api/common/operators/ResourceSpec;Lorg/apache/flink/api/common/operators/ResourceSpec;I)V

+###org/apache/flink/api/common/eventtime/WatermarkOutput
@1.11.0
+#emitWatermark(Lorg/apache/flink/api/common/eventtime/Watermark;)V
+#markIdle()V
@1.14.0
+#markActive()V

+###org/apache/flink/api/common/eventtime/WatermarkGenerator
@1.11.0
+#onEvent(Ljava/lang/Object;JLorg/apache/flink/api/common/eventtime/WatermarkOutput;)V
+#onPeriodicEmit(Lorg/apache/flink/api/common/eventtime/WatermarkOutput;)V

+###org/apache/flink/api/common/eventtime/TimestampAssignerSupplier
@1.11.0
+#createTimestampAssigner(Lorg/apache/flink/api/common/eventtime/TimestampAssignerSupplier$Context;)Lorg/apache/flink/api/common/eventtime/TimestampAssigner;
+#of(Lorg/apache/flink/api/common/eventtime/SerializableTimestampAssigner;)Lorg/apache/flink/api/common/eventtime/TimestampAssignerSupplier;

+###org/apache/flink/api/common/eventtime/BoundedOutOfOrdernessWatermarks
@1.11.0
+#<init>(Ljava/time/Duration;)V
+#onEvent(Ljava/lang/Object;JLorg/apache/flink/api/common/eventtime/WatermarkOutput;)V
+#onPeriodicEmit(Lorg/apache/flink/api/common/eventtime/WatermarkOutput;)V

+###org/apache/flink/api/common/eventtime/TimestampAssigner
@1.11.0
+#extractTimestamp(Ljava/lang/Object;J)J

+###org/apache/flink/api/common/eventtime/AscendingTimestampsWatermarks
@1.11.0
+#<init>()V

+###org/apache/flink/api/common/eventtime/TimestampAssignerSupplier$Context
@1.11.0
+#getMetricGroup()Lorg/apache/flink/metrics/MetricGroup;

+###org/apache/flink/api/common/eventtime/WatermarkGeneratorSupplier
@1.11.0
+#createWatermarkGenerator(Lorg/apache/flink/api/common/eventtime/WatermarkGeneratorSupplier$Context;)Lorg/apache/flink/api/common/eventtime/WatermarkGenerator;

+###org/apache/flink/api/common/eventtime/TimestampAssignerSupplier$SupplierFromSerializableTimestampAssigner
@1.11.0
+#<init>(Lorg/apache/flink/api/common/eventtime/SerializableTimestampAssigner;)V
+#createTimestampAssigner(Lorg/apache/flink/api/common/eventtime/TimestampAssignerSupplier$Context;)Lorg/apache/flink/api/common/eventtime/TimestampAssigner;

+###org/apache/flink/api/common/eventtime/WatermarkStrategy
@1.11.0
+#createWatermarkGenerator(Lorg/apache/flink/api/common/eventtime/WatermarkGeneratorSupplier$Context;)Lorg/apache/flink/api/common/eventtime/WatermarkGenerator;
+#createTimestampAssigner(Lorg/apache/flink/api/common/eventtime/TimestampAssignerSupplier$Context;)Lorg/apache/flink/api/common/eventtime/TimestampAssigner;
+#withTimestampAssigner(Lorg/apache/flink/api/common/eventtime/TimestampAssignerSupplier;)Lorg/apache/flink/api/common/eventtime/WatermarkStrategy;
+#withTimestampAssigner(Lorg/apache/flink/api/common/eventtime/SerializableTimestampAssigner;)Lorg/apache/flink/api/common/eventtime/WatermarkStrategy;
+#withIdleness(Ljava/time/Duration;)Lorg/apache/flink/api/common/eventtime/WatermarkStrategy;
+#forMonotonousTimestamps()Lorg/apache/flink/api/common/eventtime/WatermarkStrategy;
+#forBoundedOutOfOrderness(Ljava/time/Duration;)Lorg/apache/flink/api/common/eventtime/WatermarkStrategy;
+#forGenerator(Lorg/apache/flink/api/common/eventtime/WatermarkGeneratorSupplier;)Lorg/apache/flink/api/common/eventtime/WatermarkStrategy;
+#noWatermarks()Lorg/apache/flink/api/common/eventtime/WatermarkStrategy;
@1.15.0
+#getAlignmentParameters()Lorg/apache/flink/api/common/eventtime/WatermarkAlignmentParams;
+#withWatermarkAlignment(Ljava/lang/String;Ljava/time/Duration;)Lorg/apache/flink/api/common/eventtime/WatermarkStrategy;
+#withWatermarkAlignment(Ljava/lang/String;Ljava/time/Duration;Ljava/time/Duration;)Lorg/apache/flink/api/common/eventtime/WatermarkStrategy;

+###org/apache/flink/api/common/eventtime/NoWatermarksGenerator
@1.11.0
+#<init>()V
+#onEvent(Ljava/lang/Object;JLorg/apache/flink/api/common/eventtime/WatermarkOutput;)V
+#onPeriodicEmit(Lorg/apache/flink/api/common/eventtime/WatermarkOutput;)V

+###org/apache/flink/api/common/eventtime/WatermarkOutputMultiplexer
@1.11.0
+#<init>(Lorg/apache/flink/api/common/eventtime/WatermarkOutput;)V
+#registerNewOutput(Ljava/lang/String;)V
+#unregisterOutput(Ljava/lang/String;)Z
+#getImmediateOutput(Ljava/lang/String;)Lorg/apache/flink/api/common/eventtime/WatermarkOutput;
+#getDeferredOutput(Ljava/lang/String;)Lorg/apache/flink/api/common/eventtime/WatermarkOutput;
+#onPeriodicEmit()V

+###org/apache/flink/api/common/eventtime/SerializableTimestampAssigner
@1.11.0

+###org/apache/flink/api/common/eventtime/RecordTimestampAssigner
@1.11.0
+#<init>()V
+#extractTimestamp(Ljava/lang/Object;J)J

+###org/apache/flink/api/common/eventtime/IngestionTimeAssigner
@1.11.0
+#<init>()V
+#extractTimestamp(Ljava/lang/Object;J)J

+###org/apache/flink/api/common/eventtime/Watermark
@1.11.0
+#<init>(J)V
+#getTimestamp()J
+#getFormattedTimestamp()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/api/common/eventtime/WatermarksWithIdleness
@1.11.0
+#<init>(Lorg/apache/flink/api/common/eventtime/WatermarkGenerator;Ljava/time/Duration;)V
+#onEvent(Ljava/lang/Object;JLorg/apache/flink/api/common/eventtime/WatermarkOutput;)V
+#onPeriodicEmit(Lorg/apache/flink/api/common/eventtime/WatermarkOutput;)V

+###org/apache/flink/api/common/eventtime/WatermarkGeneratorSupplier$Context
@1.11.0
+#getMetricGroup()Lorg/apache/flink/metrics/MetricGroup;

+###org/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext
@1.11.0
+#getMetricGroup()Lorg/apache/flink/metrics/MetricGroup;
@1.12.0
+#getUserCodeClassLoader()Lorg/apache/flink/util/UserCodeClassLoader;

+###org/apache/flink/api/common/serialization/SerializationSchema$InitializationContext
@1.11.0
+#getMetricGroup()Lorg/apache/flink/metrics/MetricGroup;
@1.12.0
+#getUserCodeClassLoader()Lorg/apache/flink/util/UserCodeClassLoader;

+###org/apache/flink/api/common/serialization/SimpleStringEncoder
@1.6.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#encode(Ljava/lang/Object;Ljava/io/OutputStream;)V

+###org/apache/flink/api/common/serialization/BulkWriter
@1.6.0
+#addElement(Ljava/lang/Object;)V
+#flush()V
+#finish()V

+###org/apache/flink/api/common/serialization/BulkWriter$Factory
@1.6.0
+#create(Lorg/apache/flink/core/fs/FSDataOutputStream;)Lorg/apache/flink/api/common/serialization/BulkWriter;

+###org/apache/flink/api/common/serialization/Encoder
@1.6.0
+#encode(Ljava/lang/Object;Ljava/io/OutputStream;)V

+###org/apache/flink/api/common/state/StateTtlConfig$IncrementalCleanupStrategy
@1.8.0
+#getCleanupSize()I
+#runCleanupForEveryRecord()Z

+###org/apache/flink/api/common/state/StateTtlConfig$CleanupStrategies
@1.6.0
+#<init>()V
+#inFullSnapshot()Z
@1.8.0
+#activate(Lorg/apache/flink/api/common/state/StateTtlConfig$CleanupStrategies$Strategies;)V
+#activate(Lorg/apache/flink/api/common/state/StateTtlConfig$CleanupStrategies$Strategies;Lorg/apache/flink/api/common/state/StateTtlConfig$CleanupStrategies$CleanupStrategy;)V
+#getIncrementalCleanupStrategy()Lorg/apache/flink/api/common/state/StateTtlConfig$IncrementalCleanupStrategy;
+#inRocksdbCompactFilter()Z
+#getRocksdbCompactFilterCleanupStrategy()Lorg/apache/flink/api/common/state/StateTtlConfig$RocksdbCompactFilterCleanupStrategy;
@1.8.1
+#isCleanupInBackground()Z
-#<init>()V
-#activate(Lorg/apache/flink/api/common/state/StateTtlConfig$CleanupStrategies$Strategies;)V
-#activate(Lorg/apache/flink/api/common/state/StateTtlConfig$CleanupStrategies$Strategies;Lorg/apache/flink/api/common/state/StateTtlConfig$CleanupStrategies$CleanupStrategy;)V

+###org/apache/flink/api/common/state/StateTtlConfig$TtlTimeCharacteristic
@1.9.0
+#values()[Lorg/apache/flink/api/common/state/StateTtlConfig$TtlTimeCharacteristic;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/state/StateTtlConfig$TtlTimeCharacteristic;

+###org/apache/flink/api/common/state/StateTtlConfig$UpdateType
@1.6.0
+#values()[Lorg/apache/flink/api/common/state/StateTtlConfig$UpdateType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/state/StateTtlConfig$UpdateType;

+###org/apache/flink/api/common/state/StateTtlConfig$Builder
@1.6.0
+#<init>(Lorg/apache/flink/api/common/time/Time;)V
+#setUpdateType(Lorg/apache/flink/api/common/state/StateTtlConfig$UpdateType;)Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#updateTtlOnCreateAndWrite()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#updateTtlOnReadAndWrite()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#setStateVisibility(Lorg/apache/flink/api/common/state/StateTtlConfig$StateVisibility;)Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#returnExpiredIfNotCleanedUp()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#neverReturnExpired()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#setTimeCharacteristic(Lorg/apache/flink/api/common/state/StateTtlConfig$TimeCharacteristic;)Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#useProcessingTime()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#cleanupFullSnapshot()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#setTtl(Lorg/apache/flink/api/common/time/Time;)Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#build()Lorg/apache/flink/api/common/state/StateTtlConfig;
@1.8.0
+#cleanupIncrementally(IZ)Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#cleanupInRocksdbCompactFilter()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
+#cleanupInRocksdbCompactFilter(J)Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
@1.8.1
*#cleanupInRocksdbCompactFilter()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;[deprecated]
+#cleanupInBackground()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
@1.9.0
*#setTimeCharacteristic(Lorg/apache/flink/api/common/state/StateTtlConfig$TimeCharacteristic;)Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;[deprecated]
+#setTtlTimeCharacteristic(Lorg/apache/flink/api/common/state/StateTtlConfig$TtlTimeCharacteristic;)Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
@1.10.0
*#cleanupInBackground()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;[deprecated]
+#disableCleanupInBackground()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
-#setTimeCharacteristic(Lorg/apache/flink/api/common/state/StateTtlConfig$TimeCharacteristic;)Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;[deprecated]
@1.11.0
-#cleanupInRocksdbCompactFilter()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;[deprecated]
-#cleanupInBackground()Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;[deprecated]

+###org/apache/flink/api/common/state/StateTtlConfig$RocksdbCompactFilterCleanupStrategy
@1.8.0
+#getQueryTimeAfterNumEntries()J

+###org/apache/flink/api/common/state/StateTtlConfig$StateVisibility
@1.6.0
+#values()[Lorg/apache/flink/api/common/state/StateTtlConfig$StateVisibility;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/state/StateTtlConfig$StateVisibility;

+###org/apache/flink/api/common/state/StateTtlConfig
@1.6.0
+#getUpdateType()Lorg/apache/flink/api/common/state/StateTtlConfig$UpdateType;
+#getStateVisibility()Lorg/apache/flink/api/common/state/StateTtlConfig$StateVisibility;
+#getTtl()Lorg/apache/flink/api/common/time/Time;
+#getTimeCharacteristic()Lorg/apache/flink/api/common/state/StateTtlConfig$TimeCharacteristic;
+#isEnabled()Z
+#getCleanupStrategies()Lorg/apache/flink/api/common/state/StateTtlConfig$CleanupStrategies;
+#toString()Ljava/lang/String;
+#newBuilder(Lorg/apache/flink/api/common/time/Time;)Lorg/apache/flink/api/common/state/StateTtlConfig$Builder;
@1.9.0
+#getTtlTimeCharacteristic()Lorg/apache/flink/api/common/state/StateTtlConfig$TtlTimeCharacteristic;
-#getTimeCharacteristic()Lorg/apache/flink/api/common/state/StateTtlConfig$TimeCharacteristic;

+###org/apache/flink/api/common/ExecutionConfig$ClosureCleanerLevel
@1.8.1
+#values()[Lorg/apache/flink/api/common/ExecutionConfig$ClosureCleanerLevel;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/ExecutionConfig$ClosureCleanerLevel;
@1.14.0
+#getDescription()Lorg/apache/flink/configuration/description/InlineElement;

+###org/apache/flink/api/common/JobStatus
@1.10.0
+#values()[Lorg/apache/flink/api/common/JobStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/JobStatus;
+#isGloballyTerminalState()Z
+#isTerminalState()Z

+###org/apache/flink/api/common/resources/CPUResource
@1.10.0
+#<init>(D)V
+#create(Ljava/math/BigDecimal;)Lorg/apache/flink/api/common/resources/Resource;
@1.13.0
+#create(Ljava/math/BigDecimal;)Lorg/apache/flink/api/common/resources/CPUResource;
+#toHumanReadableString()Ljava/lang/String;

+###org/apache/flink/api/common/io/ratelimiting/FlinkConnectorRateLimiter
@1.8.0
+#open(Lorg/apache/flink/api/common/functions/RuntimeContext;)V
+#setRate(J)V
+#acquire(I)V
+#getRate()J
+#close()V

+###org/apache/flink/api/common/io/ratelimiting/GuavaFlinkConnectorRateLimiter
@1.8.0
+#<init>()V
+#open(Lorg/apache/flink/api/common/functions/RuntimeContext;)V
+#setRate(J)V
+#acquire(I)V
+#getRate()J
+#close()V

+###org/apache/flink/api/common/externalresource/ExternalResourceDriver
@1.11.0
+#retrieveResourceInfo(J)Ljava/util/Set;

+###org/apache/flink/api/common/externalresource/ExternalResourceInfo
@1.11.0
+#getProperty(Ljava/lang/String;)Ljava/util/Optional;
+#getKeys()Ljava/util/Collection;

+###org/apache/flink/api/common/externalresource/ExternalResourceDriverFactory
@1.11.0
+#createExternalResourceDriver(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/api/common/externalresource/ExternalResourceDriver;

+###org/apache/flink/api/common/typeinfo/LocalTimeTypeInfo
@1.9.0
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createComparator(ZLorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#hashCode()I
+#canEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getInfoFor(Ljava/lang/Class;)Lorg/apache/flink/api/common/typeinfo/LocalTimeTypeInfo;

+###org/apache/flink/api/common/InputDependencyConstraint
@1.8.0
+#values()[Lorg/apache/flink/api/common/InputDependencyConstraint;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/InputDependencyConstraint;

+###org/apache/flink/api/dag/Pipeline
@1.10.0

+###org/apache/flink/api/dag/Transformation
@1.9.0
+#getNewNodeId()I
+#<init>(Ljava/lang/String;Lorg/apache/flink/api/common/typeinfo/TypeInformation;I)V
+#getId()I
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getParallelism()I
+#setParallelism(I)V
+#getMaxParallelism()I
+#setMaxParallelism(I)V
+#setResources(Lorg/apache/flink/api/common/operators/ResourceSpec;Lorg/apache/flink/api/common/operators/ResourceSpec;)V
+#getMinResources()Lorg/apache/flink/api/common/operators/ResourceSpec;
+#getPreferredResources()Lorg/apache/flink/api/common/operators/ResourceSpec;
+#setUidHash(Ljava/lang/String;)V
+#getUserProvidedNodeHash()Ljava/lang/String;
+#setUid(Ljava/lang/String;)V
+#getUid()Ljava/lang/String;
+#getSlotSharingGroup()Ljava/lang/String;
+#setSlotSharingGroup(Ljava/lang/String;)V
+#setCoLocationGroupKey(Ljava/lang/String;)V
+#getCoLocationGroupKey()Ljava/lang/String;
+#setOutputType(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#getOutputType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#setBufferTimeout(J)V
+#getBufferTimeout()J
+#getTransitivePredecessors()Ljava/util/Collection;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.10.0
+#setManagedMemoryWeight(I)V
+#getManagedMemoryWeight()I
@1.12.0
+#declareManagedMemoryUseCaseAtOperatorScope(Lorg/apache/flink/core/memory/ManagedMemoryUseCase;I)Ljava/util/Optional;
+#declareManagedMemoryUseCaseAtSlotScope(Lorg/apache/flink/core/memory/ManagedMemoryUseCase;)V
+#getManagedMemoryOperatorScopeUseCaseWeights()Ljava/util/Map;
+#getManagedMemorySlotScopeUseCases()Ljava/util/Set;
+#getTransitivePredecessors()Ljava/util/List;
+#getInputs()Ljava/util/List;
-#setManagedMemoryWeight(I)V
-#getManagedMemoryWeight()I
-#getTransitivePredecessors()Ljava/util/Collection;
@1.14.0
+#getSlotSharingGroup()Ljava/util/Optional;
+#setSlotSharingGroup(Lorg/apache/flink/api/common/operators/SlotSharingGroup;)V
-#getSlotSharingGroup()Ljava/lang/String;
@1.15.0
+#setDescription(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;

+###org/apache/flink/core/execution/PipelineExecutorServiceLoader
@1.10.0
+#getExecutorFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/core/execution/PipelineExecutorFactory;
+#getExecutorNames()Ljava/util/stream/Stream;

+###org/apache/flink/core/execution/DefaultExecutorServiceLoader
@1.10.0
+#getExecutorFactory(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/core/execution/PipelineExecutorFactory;
+#getExecutorNames()Ljava/util/stream/Stream;
@1.10.2
+#<init>()V

+###org/apache/flink/core/execution/JobClient
@1.10.0
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#getJobStatus()Ljava/util/concurrent/CompletableFuture;
+#cancel()Ljava/util/concurrent/CompletableFuture;
+#stopWithSavepoint(ZLjava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#triggerSavepoint(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#getAccumulators(Ljava/lang/ClassLoader;)Ljava/util/concurrent/CompletableFuture;
+#getJobExecutionResult(Ljava/lang/ClassLoader;)Ljava/util/concurrent/CompletableFuture;
@1.12.0
+#getAccumulators()Ljava/util/concurrent/CompletableFuture;
+#getJobExecutionResult()Ljava/util/concurrent/CompletableFuture;
-#getAccumulators(Ljava/lang/ClassLoader;)Ljava/util/concurrent/CompletableFuture;
-#getJobExecutionResult(Ljava/lang/ClassLoader;)Ljava/util/concurrent/CompletableFuture;
@1.15.0
*#stopWithSavepoint(ZLjava/lang/String;)Ljava/util/concurrent/CompletableFuture;[deprecated]
+#stopWithSavepoint(ZLjava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;
*#triggerSavepoint(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;[deprecated]
+#triggerSavepoint(Ljava/lang/String;Lorg/apache/flink/core/execution/SavepointFormatType;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/core/execution/PipelineExecutorFactory
@1.10.0
+#getName()Ljava/lang/String;
+#isCompatibleWith(Lorg/apache/flink/configuration/Configuration;)Z
+#getExecutor(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/core/execution/PipelineExecutor;

+###org/apache/flink/core/execution/DetachedJobExecutionResult
@1.10.0
+#<init>(Lorg/apache/flink/api/common/JobID;)V
+#getNetRuntime()J
+#getAccumulatorResult(Ljava/lang/String;)Ljava/lang/Object;
+#getAllAccumulatorResults()Ljava/util/Map;
+#getIntCounterResult(Ljava/lang/String;)Ljava/lang/Integer;
+#getJobID()Lorg/apache/flink/api/common/JobID;
+#isJobExecutionResult()Z
+#getJobExecutionResult()Lorg/apache/flink/api/common/JobExecutionResult;
+#toString()Ljava/lang/String;

+###org/apache/flink/core/execution/PipelineExecutor
@1.10.0
+#execute(Lorg/apache/flink/api/dag/Pipeline;Lorg/apache/flink/configuration/Configuration;)Ljava/util/concurrent/CompletableFuture;
@1.12.0
+#execute(Lorg/apache/flink/api/dag/Pipeline;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)Ljava/util/concurrent/CompletableFuture;
-#execute(Lorg/apache/flink/api/dag/Pipeline;Lorg/apache/flink/configuration/Configuration;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/core/execution/JobListener
@1.10.0
+#onJobSubmitted(Lorg/apache/flink/core/execution/JobClient;Ljava/lang/Throwable;)V
+#onJobExecuted(Lorg/apache/flink/api/common/JobExecutionResult;Ljava/lang/Throwable;)V

+###org/apache/flink/core/memory/MemorySegmentInputStreamWithPos
@1.10.0
+#<init>(Lorg/apache/flink/core/memory/MemorySegment;II)V
+#read()I
+#read([BII)I
+#skip(J)J
+#markSupported()Z
+#mark(I)V
+#reset()V
+#available()I
+#close()V
+#getPosition()I
+#setPosition(I)V
+#setSegment(Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/core/memory/MemorySegmentWritable
@1.9.0
+#write(Lorg/apache/flink/core/memory/MemorySegment;II)V

+###org/apache/flink/core/memory/MemorySegmentProvider
@1.9.0
+#requestMemorySegments()Ljava/util/Collection;
+#recycleMemorySegments(Ljava/util/Collection;)V
@1.12.0
+#requestMemorySegments(I)Ljava/util/Collection;
-#requestMemorySegments()Ljava/util/Collection;
@1.14.4
+#requestUnpooledMemorySegments(I)Ljava/util/Collection;
+#recycleUnpooledMemorySegments(Ljava/util/Collection;)V
-#requestMemorySegments(I)Ljava/util/Collection;
-#recycleMemorySegments(Ljava/util/Collection;)V

+###org/apache/flink/core/plugin/PluginManager
@1.9.0
+#<init>(Ljava/util/Collection;[Ljava/lang/String;)V
+#<init>(Ljava/util/Collection;Ljava/lang/ClassLoader;[Ljava/lang/String;)V
+#load(Ljava/lang/Class;)Ljava/util/Iterator;
+#toString()Ljava/lang/String;
@1.11.0
-#<init>(Ljava/util/Collection;[Ljava/lang/String;)V
-#<init>(Ljava/util/Collection;Ljava/lang/ClassLoader;[Ljava/lang/String;)V
-#toString()Ljava/lang/String;

+###org/apache/flink/core/plugin/DirectoryBasedPluginFinder
@1.9.0
+#<init>(Ljava/nio/file/Path;)V
+#findPlugins()Ljava/util/Collection;

+###org/apache/flink/core/plugin/PluginDescriptor
@1.9.0
+#<init>(Ljava/lang/String;[Ljava/net/URL;[Ljava/lang/String;)V
+#getPluginId()Ljava/lang/String;
+#getPluginResourceURLs()[Ljava/net/URL;
+#getLoaderExcludePatterns()[Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/flink/core/plugin/PluginUtils
@1.9.0
+#createPluginManagerFromRootFolder(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/core/plugin/PluginManager;

+###org/apache/flink/core/plugin/Plugin
@1.9.0
+#getClassLoader()Ljava/lang/ClassLoader;
+#configure(Lorg/apache/flink/configuration/Configuration;)V

+###org/apache/flink/core/plugin/PluginLoader
@1.9.0
+#<init>(Ljava/lang/ClassLoader;)V
+#createPluginClassLoader(Lorg/apache/flink/core/plugin/PluginDescriptor;Ljava/lang/ClassLoader;[Ljava/lang/String;)Ljava/lang/ClassLoader;
+#create(Lorg/apache/flink/core/plugin/PluginDescriptor;Ljava/lang/ClassLoader;[Ljava/lang/String;)Lorg/apache/flink/core/plugin/PluginLoader;
+#load(Ljava/lang/Class;)Ljava/util/Iterator;
@1.14.0
+#<init>(Ljava/lang/String;Ljava/net/URLClassLoader;)V
+#createPluginClassLoader(Lorg/apache/flink/core/plugin/PluginDescriptor;Ljava/lang/ClassLoader;[Ljava/lang/String;)Ljava/net/URLClassLoader;
+#close()V
-#<init>(Ljava/lang/ClassLoader;)V
-#createPluginClassLoader(Lorg/apache/flink/core/plugin/PluginDescriptor;Ljava/lang/ClassLoader;[Ljava/lang/String;)Ljava/lang/ClassLoader;

+###org/apache/flink/core/plugin/DefaultPluginManager
@1.11.0
+#<init>(Ljava/util/Collection;[Ljava/lang/String;)V
+#<init>(Ljava/util/Collection;Ljava/lang/ClassLoader;[Ljava/lang/String;)V
+#load(Ljava/lang/Class;)Ljava/util/Iterator;
+#toString()Ljava/lang/String;

+###org/apache/flink/core/plugin/PluginConfig
@1.9.0
+#getPluginsPath()Ljava/util/Optional;
+#getAlwaysParentFirstPatterns()[Ljava/lang/String;
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/core/plugin/PluginConfig;
@1.9.2
+#getPluginsDir()Ljava/util/Optional;

+###org/apache/flink/core/plugin/PluginFinder
@1.9.0
+#findPlugins()Ljava/util/Collection;

+###org/apache/flink/core/io/SimpleVersionedSerialization
@1.6.0
+#writeVersionAndSerialize(Lorg/apache/flink/core/io/SimpleVersionedSerializer;Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readVersionAndDeSerialize(Lorg/apache/flink/core/io/SimpleVersionedSerializer;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeVersionAndSerialize(Lorg/apache/flink/core/io/SimpleVersionedSerializer;Ljava/lang/Object;)[B
+#readVersionAndDeSerialize(Lorg/apache/flink/core/io/SimpleVersionedSerializer;[B)Ljava/lang/Object;
@1.15.0
+#writeVersionAndSerializeList(Lorg/apache/flink/core/io/SimpleVersionedSerializer;Ljava/util/List;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readVersionAndDeserializeList(Lorg/apache/flink/core/io/SimpleVersionedSerializer;Lorg/apache/flink/core/memory/DataInputView;)Ljava/util/List;

+###org/apache/flink/core/io/InputStatus
@1.11.0
+#values()[Lorg/apache/flink/core/io/InputStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/core/io/InputStatus;

+###org/apache/flink/core/fs/PluginFileSystemFactory
@1.9.2
+#of(Lorg/apache/flink/core/fs/FileSystemFactory;)Lorg/apache/flink/core/fs/PluginFileSystemFactory;
+#getScheme()Ljava/lang/String;
+#getClassLoader()Ljava/lang/ClassLoader;
+#configure(Lorg/apache/flink/configuration/Configuration;)V
+#create(Ljava/net/URI;)Lorg/apache/flink/core/fs/FileSystem;
@1.10.2
+#toString()Ljava/lang/String;
@1.11.0
-#toString()Ljava/lang/String;
@1.11.1
+#toString()Ljava/lang/String;

+###org/apache/flink/core/fs/RecoverableWriter$CommitRecoverable
@1.6.0

+###org/apache/flink/core/fs/RecoverableFsDataOutputStream
@1.6.0
+#<init>()V
+#persist()Lorg/apache/flink/core/fs/RecoverableWriter$ResumeRecoverable;
+#closeForCommit()Lorg/apache/flink/core/fs/RecoverableFsDataOutputStream$Committer;
+#close()V

+###org/apache/flink/core/fs/RecoverableFsDataOutputStream$Committer
@1.6.0
+#commit()V
+#commitAfterRecovery()V
+#getRecoverable()Lorg/apache/flink/core/fs/RecoverableWriter$CommitRecoverable;

+###org/apache/flink/core/fs/EntropyInjector
@1.6.2
+#createEntropyAware(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/FileSystem$WriteMode;)Lorg/apache/flink/core/fs/OutputStreamAndPath;
+#removeEntropyMarkerIfPresent(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/Path;
@1.11.0
+#isEntropyInjecting(Lorg/apache/flink/core/fs/FileSystem;)Z
@1.15.0
+#addEntropy(Lorg/apache/flink/core/fs/FileSystem;Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/Path;

+###org/apache/flink/core/fs/EntropyInjectingFileSystem
@1.6.2
+#getEntropyInjectionKey()Ljava/lang/String;
+#generateEntropy()Ljava/lang/String;

+###org/apache/flink/core/fs/RefCountedFile
@1.11.0
+#<init>(Ljava/io/File;)V
+#getFile()Ljava/io/File;
+#retain()V
+#release()Z
+#getReferenceCounter()I

+###org/apache/flink/core/fs/RecoverableWriter$ResumeRecoverable
@1.6.0

+###org/apache/flink/core/fs/RecoverableWriter
@1.6.0
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/RecoverableFsDataOutputStream;
+#recover(Lorg/apache/flink/core/fs/RecoverableWriter$ResumeRecoverable;)Lorg/apache/flink/core/fs/RecoverableFsDataOutputStream;
+#recoverForCommit(Lorg/apache/flink/core/fs/RecoverableWriter$CommitRecoverable;)Lorg/apache/flink/core/fs/RecoverableFsDataOutputStream$Committer;
+#getCommitRecoverableSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;
+#getResumeRecoverableSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;
+#supportsResume()Z
@1.7.1
+#requiresCleanupOfRecoverableState()Z
+#cleanupRecoverableState(Lorg/apache/flink/core/fs/RecoverableWriter$ResumeRecoverable;)Z

+###org/apache/flink/core/fs/OutputStreamAndPath
@1.6.2
+#<init>(Lorg/apache/flink/core/fs/FSDataOutputStream;Lorg/apache/flink/core/fs/Path;)V
+#stream()Lorg/apache/flink/core/fs/FSDataOutputStream;
+#path()Lorg/apache/flink/core/fs/Path;

+###org/apache/flink/core/fs/local/LocalRecoverableWriter
@1.6.0
+#<init>(Lorg/apache/flink/core/fs/local/LocalFileSystem;)V
+#open(Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/RecoverableFsDataOutputStream;
+#recover(Lorg/apache/flink/core/fs/RecoverableWriter$ResumeRecoverable;)Lorg/apache/flink/core/fs/RecoverableFsDataOutputStream;
+#recoverForCommit(Lorg/apache/flink/core/fs/RecoverableWriter$CommitRecoverable;)Lorg/apache/flink/core/fs/RecoverableFsDataOutputStream$Committer;
+#getCommitRecoverableSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;
+#getResumeRecoverableSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;
+#supportsResume()Z
@1.7.1
+#requiresCleanupOfRecoverableState()Z
+#cleanupRecoverableState(Lorg/apache/flink/core/fs/RecoverableWriter$ResumeRecoverable;)Z
@1.15.0
+#generateStagingTempFilePath(Ljava/io/File;)Ljava/io/File;

+###org/apache/flink/configuration/ReadableConfig
@1.10.0
+#get(Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/Object;
+#getOptional(Lorg/apache/flink/configuration/ConfigOption;)Ljava/util/Optional;

+###org/apache/flink/configuration/ConfigUtils
@1.10.0
+#encodeArrayToConfig(Lorg/apache/flink/configuration/WritableConfig;Lorg/apache/flink/configuration/ConfigOption;[Ljava/lang/Object;Ljava/util/function/Function;)V
+#encodeCollectionToConfig(Lorg/apache/flink/configuration/WritableConfig;Lorg/apache/flink/configuration/ConfigOption;Ljava/util/Collection;Ljava/util/function/Function;)V
+#decodeListFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Lorg/apache/flink/configuration/ConfigOption;Ljava/util/function/Function;)Ljava/util/List;
@1.11.0
+#decodeListFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Lorg/apache/flink/configuration/ConfigOption;Lorg/apache/flink/util/function/FunctionWithException;)Ljava/util/List;
-#decodeListFromConfig(Lorg/apache/flink/configuration/ReadableConfig;Lorg/apache/flink/configuration/ConfigOption;Ljava/util/function/Function;)Ljava/util/List;
@1.15.0
+#getAllConfigOptions(Ljava/lang/Class;)Ljava/util/Set;

+###org/apache/flink/configuration/description/LinkElement
@1.6.0
+#link(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/configuration/description/LinkElement;
+#link(Ljava/lang/String;)Lorg/apache/flink/configuration/description/LinkElement;
+#getLink()Ljava/lang/String;
+#getText()Ljava/lang/String;
+#format(Lorg/apache/flink/configuration/description/Formatter;)V

+###org/apache/flink/configuration/description/BlockElement
@1.6.0

+###org/apache/flink/configuration/description/TextElement$TextStyle
@1.6.1
+#values()[Lorg/apache/flink/configuration/description/TextElement$TextStyle;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/configuration/description/TextElement$TextStyle;

+###org/apache/flink/configuration/description/Formatter
@1.6.0
+#<init>()V
+#format(Lorg/apache/flink/configuration/description/Description;)Ljava/lang/String;
+#format(Lorg/apache/flink/configuration/description/LinkElement;)V
+#format(Lorg/apache/flink/configuration/description/TextElement;)V
+#format(Lorg/apache/flink/configuration/description/LineBreakElement;)V
+#format(Lorg/apache/flink/configuration/description/ListElement;)V

+###org/apache/flink/configuration/description/TextElement
@1.6.0
+#text(Ljava/lang/String;[Lorg/apache/flink/configuration/description/InlineElement;)Lorg/apache/flink/configuration/description/TextElement;
+#text(Ljava/lang/String;)Lorg/apache/flink/configuration/description/TextElement;
+#getFormat()Ljava/lang/String;
+#getElements()Ljava/util/List;
+#format(Lorg/apache/flink/configuration/description/Formatter;)V
@1.6.1
+#code(Ljava/lang/String;)Lorg/apache/flink/configuration/description/TextElement;
+#getStyles()Ljava/util/EnumSet;
@1.14.0
+#wrap([Lorg/apache/flink/configuration/description/InlineElement;)Lorg/apache/flink/configuration/description/InlineElement;

+###org/apache/flink/configuration/description/InlineElement
@1.6.0

+###org/apache/flink/configuration/description/Description
@1.6.0
+#builder()Lorg/apache/flink/configuration/description/Description$DescriptionBuilder;
+#getBlocks()Ljava/util/List;

+###org/apache/flink/configuration/description/Description$DescriptionBuilder
@1.6.0
+#<init>()V
+#text(Ljava/lang/String;[Lorg/apache/flink/configuration/description/InlineElement;)Lorg/apache/flink/configuration/description/Description$DescriptionBuilder;
+#text(Ljava/lang/String;)Lorg/apache/flink/configuration/description/Description$DescriptionBuilder;
+#linebreak()Lorg/apache/flink/configuration/description/Description$DescriptionBuilder;
+#list([Lorg/apache/flink/configuration/description/InlineElement;)Lorg/apache/flink/configuration/description/Description$DescriptionBuilder;
+#build()Lorg/apache/flink/configuration/description/Description;
@1.6.1
+#add(Lorg/apache/flink/configuration/description/BlockElement;)Lorg/apache/flink/configuration/description/Description$DescriptionBuilder;

+###org/apache/flink/configuration/description/HtmlFormatter
@1.6.0
+#<init>()V

+###org/apache/flink/configuration/description/ListElement
@1.6.0
+#list([Lorg/apache/flink/configuration/description/InlineElement;)Lorg/apache/flink/configuration/description/ListElement;
+#getEntries()Ljava/util/List;
+#format(Lorg/apache/flink/configuration/description/Formatter;)V

+###org/apache/flink/configuration/description/LineBreakElement
@1.6.0
+#linebreak()Lorg/apache/flink/configuration/description/LineBreakElement;
+#format(Lorg/apache/flink/configuration/description/Formatter;)V

+###org/apache/flink/configuration/DeploymentOptions
@1.10.0
+#<init>()V

+###org/apache/flink/configuration/DeploymentOptionsInternal
@1.11.0
+#<init>()V

+###org/apache/flink/configuration/PipelineOptions
@1.10.0
+#<init>()V

+###org/apache/flink/configuration/ConfigOptions$ListConfigOptionBuilder
@1.10.0
+#defaultValues([Ljava/lang/Object;)Lorg/apache/flink/configuration/ConfigOption;
+#noDefaultValue()Lorg/apache/flink/configuration/ConfigOption;

+###org/apache/flink/configuration/NettyShuffleEnvironmentOptions
@1.9.0

+###org/apache/flink/configuration/FallbackKey
@1.8.0
+#getKey()Ljava/lang/String;
+#isDeprecated()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/flink/configuration/MemorySize$MemoryUnit
@1.6.0
+#values()[Lorg/apache/flink/configuration/MemorySize$MemoryUnit;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/configuration/MemorySize$MemoryUnit;
+#getUnits()[Ljava/lang/String;
+#getAllUnits()Ljava/lang/String;
+#hasUnit(Ljava/lang/String;)Z
@1.10.0
+#getMultiplier()J

+###org/apache/flink/configuration/WritableConfig
@1.10.0
+#set(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/Object;)Lorg/apache/flink/configuration/WritableConfig;

+###org/apache/flink/configuration/RestartStrategyOptions
@1.10.0

+###org/apache/flink/configuration/ExternalResourceOptions
@1.11.0
+#<init>()V
+#genericKeyWithSuffix(Ljava/lang/String;)Ljava/lang/String;
+#getAmountConfigOptionForResource(Ljava/lang/String;)Ljava/lang/String;
+#getSystemConfigKeyConfigOptionForResource(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getExternalResourceDriverFactoryConfigOptionForResource(Ljava/lang/String;)Ljava/lang/String;
+#getExternalResourceParamConfigPrefixForResource(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/flink/configuration/ExecutionOptions
@1.10.0
+#<init>()V

+###org/apache/flink/configuration/ConfigOptions$TypedConfigOptionBuilder
@1.10.0
+#asList()Lorg/apache/flink/configuration/ConfigOptions$ListConfigOptionBuilder;
+#defaultValue(Ljava/lang/Object;)Lorg/apache/flink/configuration/ConfigOption;
+#noDefaultValue()Lorg/apache/flink/configuration/ConfigOption;

+###org/apache/flink/configuration/ClusterOptions
@1.8.0
+#<init>()V
@1.12.0
+#isDeclarativeResourceManagementEnabled(Lorg/apache/flink/configuration/Configuration;)Z
@1.13.0
+#getSchedulerType(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/JobManagerOptions$SchedulerType;
+#isAdaptiveSchedulerEnabled(Lorg/apache/flink/configuration/Configuration;)Z
+#isFineGrainedResourceManagementEnabled(Lorg/apache/flink/configuration/Configuration;)Z
@1.14.0
-#isDeclarativeResourceManagementEnabled(Lorg/apache/flink/configuration/Configuration;)Z

+###org/apache/flink/configuration/PipelineOptionsInternal
@1.11.0
+#<init>()V

+###org/apache/flink/util/TemporaryClassLoaderContext
@1.11.0
+#of(Ljava/lang/ClassLoader;)Lorg/apache/flink/util/TemporaryClassLoaderContext;
+#close()V

+###org/apache/flink/util/LinkedOptionalMap
@1.8.0
+#optionalMapOf(Ljava/util/Map;Ljava/util/function/Function;)Lorg/apache/flink/util/LinkedOptionalMap;
+#mergeRightIntoLeft(Lorg/apache/flink/util/LinkedOptionalMap;Lorg/apache/flink/util/LinkedOptionalMap;)Lorg/apache/flink/util/LinkedOptionalMap$MergeResult;
+#<init>()V
+#<init>(I)V
+#size()I
+#put(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#absentKeysOrValues()Ljava/util/Set;
+#hasAbsentKeysOrValues()Z
+#forEach(Lorg/apache/flink/util/LinkedOptionalMap$ConsumerWithException;)V
+#getPresentEntries()Ljava/util/Set;
+#unwrapOptionals()Ljava/util/LinkedHashMap;
+#keyNames()Ljava/util/Set;

+###org/apache/flink/util/JavaGcCleanerWrapper
@1.10.0
+#values()[Lorg/apache/flink/util/JavaGcCleanerWrapper;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/util/JavaGcCleanerWrapper;
+#create(Ljava/lang/Object;Ljava/lang/Runnable;)Ljava/lang/Runnable;
@1.10.2
+#createCleaner(Ljava/lang/Object;Ljava/lang/Runnable;)Ljava/lang/Runnable;
+#tryRunPendingCleaners()Z
-#create(Ljava/lang/Object;Ljava/lang/Runnable;)Ljava/lang/Runnable;
@1.13.0
-###org/apache/flink/util/JavaGcCleanerWrapper

+###org/apache/flink/util/LinkedOptionalMapSerializer
@1.8.0
+#writeOptionalMap(Lorg/apache/flink/core/memory/DataOutputView;Lorg/apache/flink/util/LinkedOptionalMap;Lorg/apache/flink/util/function/BiConsumerWithException;Lorg/apache/flink/util/function/BiConsumerWithException;)V
+#readOptionalMap(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/util/function/BiFunctionWithException;Lorg/apache/flink/util/function/BiFunctionWithException;)Lorg/apache/flink/util/LinkedOptionalMap;

+###org/apache/flink/util/ArrayUtils
@1.9.0
+#<init>()V
+#concat([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;

+###org/apache/flink/util/RefCounted
@1.11.0
+#retain()V
+#release()Z

+###org/apache/flink/util/LinkedOptionalMap$MergeResult
@1.8.0
+#hasMissingKeys()Z
+#missingKeys()Ljava/util/Set;
+#getMerged()Ljava/util/LinkedHashMap;
+#isOrderedSubset()Z

+###org/apache/flink/util/CloseableIterator
@1.6.0
+#adapterForIterator(Ljava/util/Iterator;)Lorg/apache/flink/util/CloseableIterator;
+#empty()Lorg/apache/flink/util/CloseableIterator;
@1.11.0
+#adapterForIterator(Ljava/util/Iterator;Ljava/lang/AutoCloseable;)Lorg/apache/flink/util/CloseableIterator;
+#fromList(Ljava/util/List;Ljava/util/function/Consumer;)Lorg/apache/flink/util/CloseableIterator;
+#flatten([Lorg/apache/flink/util/CloseableIterator;)Lorg/apache/flink/util/CloseableIterator;
+#ofElements(Ljava/util/function/Consumer;[Ljava/lang/Object;)Lorg/apache/flink/util/CloseableIterator;
+#ofElement(Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/apache/flink/util/CloseableIterator;

+###org/apache/flink/util/JarUtils
@1.10.0
+#<init>()V
+#checkJarFile(Ljava/net/URL;)V
+#getJarFiles([Ljava/lang/String;)Ljava/util/List;

+###org/apache/flink/util/CloseableIterator$IteratorAdapter
@1.6.0
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#forEachRemaining(Ljava/util/function/Consumer;)V
+#close()V

+###org/apache/flink/util/LinkedOptionalMap$KeyValue
@1.8.0
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;

+###org/apache/flink/util/ThrowableCatchingRunnable
@1.11.0
+#<init>(Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
+#run()V

+###org/apache/flink/util/concurrent/NeverCompleteFuture
@1.9.0
+#<init>(J)V
+#getDelay(Ljava/util/concurrent/TimeUnit;)J
+#compareTo(Ljava/util/concurrent/Delayed;)I
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/flink/util/ChildFirstClassLoader
@1.9.0
+#<init>([Ljava/net/URL;Ljava/lang/ClassLoader;[Ljava/lang/String;)V
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResources(Ljava/lang/String;)Ljava/util/Enumeration;
@1.10.2
+#<init>([Ljava/net/URL;Ljava/lang/ClassLoader;[Ljava/lang/String;Ljava/util/function/Consumer;)V
-#<init>([Ljava/net/URL;Ljava/lang/ClassLoader;[Ljava/lang/String;)V

+###org/apache/flink/util/FlinkUserCodeClassLoader
@1.10.2
@1.12.0
+#loadClass(Ljava/lang/String;Z)Ljava/lang/Class;

+###org/apache/flink/util/function/TriConsumer
@1.5.5
+#accept(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
@1.6.0
-###org/apache/flink/util/function/TriConsumer

+###org/apache/flink/util/function/LongFunctionWithException
@1.10.0
+#apply(J)Ljava/lang/Object;

+###org/apache/flink/util/function/QuadFunction
@1.11.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/util/function/TriFunctionWithException
@1.10.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#unchecked(Lorg/apache/flink/util/function/TriFunctionWithException;)Lorg/apache/flink/util/function/TriFunction;

+###org/apache/flink/util/function/QuadConsumer
@1.11.0
+#accept(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/flink/util/function/FunctionUtils
@1.5.4
+#nullFn()Ljava/util/function/Function;
+#uncheckedFunction(Lorg/apache/flink/util/function/FunctionWithException;)Ljava/util/function/Function;
+#uncheckedConsumer(Lorg/apache/flink/util/function/ThrowingConsumer;)Ljava/util/function/Consumer;
@1.5.5
+#ignoreFn()Ljava/util/function/Consumer;
@1.6.0
-###org/apache/flink/util/function/FunctionUtils

+###org/apache/flink/util/function/TriFunction
@1.5.5
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.6.0
-###org/apache/flink/util/function/TriFunction

+###org/apache/flink/util/TimeUtils
@1.9.0
+#<init>()V
+#parseDuration(Ljava/lang/String;)Ljava/time/Duration;
@1.10.0
+#getStringInMillis(Ljava/time/Duration;)Ljava/lang/String;
+#formatWithHighestUnit(Ljava/time/Duration;)Ljava/lang/String;
@1.11.0
+#toDuration(Lorg/apache/flink/api/common/time/Time;)Ljava/time/Duration;

+###org/apache/flink/util/IterableUtils
@1.10.0
+#toStream(Ljava/lang/Iterable;)Ljava/util/stream/Stream;
@1.13.0
+#flatMap(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/Iterable;

+###org/apache/flink/util/ProcessorArchitecture$MemoryAddressSize
@1.11.0
+#values()[Lorg/apache/flink/util/ProcessorArchitecture$MemoryAddressSize;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/util/ProcessorArchitecture$MemoryAddressSize;

+###org/apache/flink/util/LinkedOptionalMap$ConsumerWithException
@1.8.0
+#accept(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/flink/util/TaskManagerExceptionUtils
@1.11.0
+#tryEnrichTaskManagerError(Ljava/lang/Throwable;)Ljava/lang/Throwable;
@1.12.0
+#tryEnrichTaskManagerError(Ljava/lang/Throwable;)V
-#tryEnrichTaskManagerError(Ljava/lang/Throwable;)Ljava/lang/Throwable;

+###org/apache/flink/util/ProcessorArchitecture
@1.11.0
+#values()[Lorg/apache/flink/util/ProcessorArchitecture;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/util/ProcessorArchitecture;
+#getAddressSize()Lorg/apache/flink/util/ProcessorArchitecture$MemoryAddressSize;
+#getArchitectureName()Ljava/lang/String;
+#getAlternativeNames()Ljava/util/List;
+#getProcessorArchitecture()Lorg/apache/flink/util/ProcessorArchitecture;
+#getMemoryAddressSize()Lorg/apache/flink/util/ProcessorArchitecture$MemoryAddressSize;

+###org/apache/flink/util/clock/SystemClock
@1.11.0
+#getInstance()Lorg/apache/flink/util/clock/SystemClock;
+#absoluteTimeMillis()J
+#relativeTimeMillis()J
+#relativeTimeNanos()J

+###org/apache/flink/util/clock/Clock
@1.11.0
+#<init>()V
+#absoluteTimeMillis()J
+#relativeTimeMillis()J
+#relativeTimeNanos()J

+###org/apache/flink/util/clock/ManualClock
@1.11.0
+#<init>()V
+#<init>(J)V
+#absoluteTimeMillis()J
+#relativeTimeMillis()J
+#relativeTimeNanos()J
+#advanceTime(JLjava/util/concurrent/TimeUnit;)V
+#advanceTime(Ljava/time/Duration;)V

+###org/apache/flink/types/SerializableOptional
@1.7.0
+#get()Ljava/io/Serializable;
+#isPresent()Z
+#ifPresent(Ljava/util/function/Consumer;)V
+#map(Ljava/util/function/Function;)Ljava/util/Optional;
+#of(Ljava/io/Serializable;)Lorg/apache/flink/types/SerializableOptional;
+#ofNullable(Ljava/io/Serializable;)Lorg/apache/flink/types/SerializableOptional;
+#empty()Lorg/apache/flink/types/SerializableOptional;
@1.9.0
+#map(Ljava/util/function/Function;)Lorg/apache/flink/types/SerializableOptional;
+#toOptional()Ljava/util/Optional;
-#map(Ljava/util/function/Function;)Ljava/util/Optional;

+###org/apache/flink/types/RowKind
@1.11.0
+#values()[Lorg/apache/flink/types/RowKind;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/types/RowKind;
+#shortString()Ljava/lang/String;
+#toByteValue()B
+#fromByteValue(B)Lorg/apache/flink/types/RowKind;

+###org/apache/flink/configuration/ClusterOptions$UserSystemExitMode
@1.13.0
+#values()[Lorg/apache/flink/configuration/ClusterOptions$UserSystemExitMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/configuration/ClusterOptions$UserSystemExitMode;
+#getConfigDescription()Lorg/apache/flink/configuration/description/Description;
+#getDescription()Ljava/lang/String;
@1.14.0
+#getDescription()Lorg/apache/flink/configuration/description/InlineElement;
-#getConfigDescription()Lorg/apache/flink/configuration/description/Description;
-#getDescription()Ljava/lang/String;

+###org/apache/flink/configuration/TaskManagerOptionsInternal
@1.12.0
+#<init>()V

+###org/apache/flink/configuration/ClusterOptions$UncaughtExceptionHandleMode
@1.14.0
+#values()[Lorg/apache/flink/configuration/ClusterOptions$UncaughtExceptionHandleMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/configuration/ClusterOptions$UncaughtExceptionHandleMode;

+###org/apache/flink/configuration/JMXServerOptions
@1.12.0

+###org/apache/flink/configuration/SchedulerExecutionMode
@1.13.0
+#values()[Lorg/apache/flink/configuration/SchedulerExecutionMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/configuration/SchedulerExecutionMode;

+###org/apache/flink/configuration/JobManagerOptions$SchedulerType
@1.13.0
+#values()[Lorg/apache/flink/configuration/JobManagerOptions$SchedulerType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/configuration/JobManagerOptions$SchedulerType;

+###org/apache/flink/configuration/DescribedEnum
@1.14.0
+#getDescription()Lorg/apache/flink/configuration/description/InlineElement;

+###org/apache/flink/configuration/StateBackendOptions
@1.13.0
+#<init>()V

+###org/apache/flink/types/RowUtils
@1.12.0
+#compareRows(Ljava/util/List;Ljava/util/List;)Z
+#compareRows(Ljava/util/List;Ljava/util/List;Z)Z
@1.13.0
+#createRowWithNamedPositions(Lorg/apache/flink/types/RowKind;[Ljava/lang/Object;Ljava/util/LinkedHashMap;)Lorg/apache/flink/types/Row;

+###org/apache/flink/core/memory/ManagedMemoryUseCase
@1.12.0
+#values()[Lorg/apache/flink/core/memory/ManagedMemoryUseCase;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/core/memory/ManagedMemoryUseCase;

+###org/apache/flink/core/memory/ManagedMemoryUseCase$Scope
@1.12.0
+#values()[Lorg/apache/flink/core/memory/ManagedMemoryUseCase$Scope;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/core/memory/ManagedMemoryUseCase$Scope;

+###org/apache/flink/core/security/UserSystemExitException
@1.14.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flink/core/security/FlinkSecurityManager
@1.14.0
+#setFromConfiguration(Lorg/apache/flink/configuration/Configuration;)V
+#monitorUserSystemExitForCurrentThread()V
+#unmonitorUserSystemExitForCurrentThread()V
+#checkPermission(Ljava/security/Permission;)V
+#checkPermission(Ljava/security/Permission;Ljava/lang/Object;)V
+#checkExit(I)V
+#forceProcessExit(I)V

+###org/apache/flink/core/io/SimpleVersionedSerializerTypeSerializerProxy
@1.12.0
+#<init>(Lorg/apache/flink/util/function/SerializableSupplier;)V
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#createInstance()Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getLength()I
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerSnapshot;

+###org/apache/flink/core/classloading/SubmoduleClassLoader
@1.14.0
+#<init>([Ljava/net/URL;Ljava/lang/ClassLoader;)V

+###org/apache/flink/core/classloading/ComponentClassLoader
@1.14.0
+#<init>([Ljava/net/URL;Ljava/lang/ClassLoader;[Ljava/lang/String;[Ljava/lang/String;)V
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResources(Ljava/lang/String;)Ljava/util/Enumeration;
@1.15.0
+#<init>([Ljava/net/URL;Ljava/lang/ClassLoader;[Ljava/lang/String;[Ljava/lang/String;Ljava/util/Map;)V
-#<init>([Ljava/net/URL;Ljava/lang/ClassLoader;[Ljava/lang/String;[Ljava/lang/String;)V

+###org/apache/flink/core/fs/LocatedFileStatus
@1.12.0
+#getBlockLocations()[Lorg/apache/flink/core/fs/BlockLocation;

+###org/apache/flink/util/function/SerializableSupplier
@1.12.0

+###org/apache/flink/util/function/SerializableFunction
@1.14.3

+###org/apache/flink/util/function/FutureTaskWithException
@1.14.0
+#<init>(Ljava/util/concurrent/Callable;)V
+#<init>(Lorg/apache/flink/util/function/RunnableWithException;)V

+###org/apache/flink/util/function/TriConsumerWithException
@1.14.0
+#accept(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#unchecked(Lorg/apache/flink/util/function/TriConsumerWithException;)Lorg/apache/flink/util/function/TriConsumer;

+###org/apache/flink/util/UserCodeClassLoader
@1.12.0
+#asClassLoader()Ljava/lang/ClassLoader;
+#registerReleaseHookIfAbsent(Ljava/lang/String;Ljava/lang/Runnable;)V

+###org/apache/flink/util/concurrent/ExecutorThreadFactory
@1.14.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Thread$UncaughtExceptionHandler;)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;

+###org/apache/flink/util/concurrent/FutureUtils
@1.14.0
+#<init>()V
+#completedVoidFuture()Ljava/util/concurrent/CompletableFuture;
+#unsupportedOperationFuture()Ljava/util/concurrent/CompletableFuture;
+#completeFromCallable(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Callable;)V
+#retry(Ljava/util/function/Supplier;ILjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#retry(Ljava/util/function/Supplier;ILjava/util/function/Predicate;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#retryWithDelay(Ljava/util/function/Supplier;ILorg/apache/flink/api/common/time/Time;Ljava/util/function/Predicate;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
+#retryWithDelay(Ljava/util/function/Supplier;Lorg/apache/flink/util/concurrent/RetryStrategy;Ljava/util/function/Predicate;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
+#retryWithDelay(Ljava/util/function/Supplier;ILorg/apache/flink/api/common/time/Time;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
+#retryWithDelay(Ljava/util/function/Supplier;Lorg/apache/flink/util/concurrent/RetryStrategy;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
+#scheduleWithDelay(Ljava/lang/Runnable;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
+#scheduleWithDelay(Ljava/util/function/Supplier;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
+#retrySuccessfulWithDelay(Ljava/util/function/Supplier;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Deadline;Ljava/util/function/Predicate;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
+#orTimeout(Ljava/util/concurrent/CompletableFuture;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;
+#orTimeout(Ljava/util/concurrent/CompletableFuture;JLjava/util/concurrent/TimeUnit;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#orTimeout(Ljava/util/concurrent/CompletableFuture;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#orTimeout(Ljava/util/concurrent/CompletableFuture;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/Executor;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#completeDelayed(Ljava/util/concurrent/CompletableFuture;Ljava/lang/Object;Ljava/time/Duration;)V
+#runIfNotDoneAndGet(Ljava/util/concurrent/RunnableFuture;)Ljava/lang/Object;
+#runAfterwards(Ljava/util/concurrent/CompletableFuture;Lorg/apache/flink/util/function/RunnableWithException;)Ljava/util/concurrent/CompletableFuture;
+#runAfterwardsAsync(Ljava/util/concurrent/CompletableFuture;Lorg/apache/flink/util/function/RunnableWithException;)Ljava/util/concurrent/CompletableFuture;
+#runAfterwardsAsync(Ljava/util/concurrent/CompletableFuture;Lorg/apache/flink/util/function/RunnableWithException;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#composeAfterwards(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;
+#combineAll(Ljava/util/Collection;)Lorg/apache/flink/util/concurrent/FutureUtils$ConjunctFuture;
+#waitForAll(Ljava/util/Collection;)Lorg/apache/flink/util/concurrent/FutureUtils$ConjunctFuture;
+#completeAll(Ljava/util/Collection;)Lorg/apache/flink/util/concurrent/FutureUtils$ConjunctFuture;
+#completedExceptionally(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
+#supplyAsync(Lorg/apache/flink/util/function/SupplierWithException;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#toDuration(Lorg/apache/flink/api/common/time/Time;)Ljava/time/Duration;
+#thenApplyAsyncIfNotDone(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
+#thenComposeAsyncIfNotDone(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
+#whenCompleteAsyncIfNotDone(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
+#thenAcceptAsyncIfNotDone(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
+#handleAsyncIfNotDone(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
+#isCompletedNormally(Ljava/util/concurrent/CompletableFuture;)Z
+#checkStateAndGet(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Object;
+#getWithoutException(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Object;
+#getOrDefault(Ljava/util/concurrent/CompletableFuture;Ljava/lang/Object;)Ljava/lang/Object;
+#assertNoException(Ljava/util/concurrent/CompletableFuture;)V
+#handleException(Ljava/util/concurrent/CompletableFuture;Ljava/lang/Class;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
+#handleUncaughtException(Ljava/util/concurrent/CompletableFuture;Ljava/lang/Thread$UncaughtExceptionHandler;)V
+#forward(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V
+#forwardAsync(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;)V
+#throwIfCompletedExceptionally(Ljava/util/concurrent/CompletableFuture;)V
+#doForward(Ljava/lang/Object;Ljava/lang/Throwable;Ljava/util/concurrent/CompletableFuture;)V
+#switchExecutor(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
@1.16.0
+#retrySuccessfulWithDelay(Ljava/util/function/Supplier;Ljava/time/Duration;Lorg/apache/flink/api/common/time/Deadline;Ljava/util/function/Predicate;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
-#retryWithDelay(Ljava/util/function/Supplier;ILorg/apache/flink/api/common/time/Time;Ljava/util/function/Predicate;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
-#retryWithDelay(Ljava/util/function/Supplier;ILorg/apache/flink/api/common/time/Time;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
-#scheduleWithDelay(Ljava/lang/Runnable;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
-#scheduleWithDelay(Ljava/util/function/Supplier;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
-#retrySuccessfulWithDelay(Ljava/util/function/Supplier;Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Deadline;Ljava/util/function/Predicate;Lorg/apache/flink/util/concurrent/ScheduledExecutor;)Ljava/util/concurrent/CompletableFuture;
-#toDuration(Lorg/apache/flink/api/common/time/Time;)Ljava/time/Duration;

+###org/apache/flink/util/concurrent/Executors
@1.14.0
+#<init>()V
+#directExecutor()Ljava/util/concurrent/Executor;
+#newDirectExecutorService()Ljava/util/concurrent/ExecutorService;

+###org/apache/flink/util/concurrent/FutureUtils$ConjunctFuture
@1.14.0
+#<init>()V
+#getNumFuturesTotal()I
+#getNumFuturesCompleted()I

+###org/apache/flink/util/concurrent/ExecutorThreadFactory$Builder
@1.14.0
+#<init>()V
+#setPoolName(Ljava/lang/String;)Lorg/apache/flink/util/concurrent/ExecutorThreadFactory$Builder;
+#setThreadPriority(I)Lorg/apache/flink/util/concurrent/ExecutorThreadFactory$Builder;
+#setExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)Lorg/apache/flink/util/concurrent/ExecutorThreadFactory$Builder;
+#build()Lorg/apache/flink/util/concurrent/ExecutorThreadFactory;

+###org/apache/flink/util/concurrent/ExponentialBackoffRetryStrategy
@1.14.0
+#<init>(ILjava/time/Duration;Ljava/time/Duration;)V
+#getNumRemainingRetries()I
+#getRetryDelay()Ljava/time/Duration;
+#getNextRetryStrategy()Lorg/apache/flink/util/concurrent/RetryStrategy;

+###org/apache/flink/util/concurrent/RetryStrategy
@1.14.0
+#getNumRemainingRetries()I
+#getRetryDelay()Ljava/time/Duration;
+#getNextRetryStrategy()Lorg/apache/flink/util/concurrent/RetryStrategy;

+###org/apache/flink/util/concurrent/ScheduledExecutor
@1.14.0
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;

+###org/apache/flink/util/concurrent/FixedRetryStrategy
@1.14.0
+#<init>(ILjava/time/Duration;)V
+#getNumRemainingRetries()I
+#getRetryDelay()Ljava/time/Duration;
+#getNextRetryStrategy()Lorg/apache/flink/util/concurrent/RetryStrategy;

+###org/apache/flink/util/concurrent/ScheduledExecutorServiceAdapter
@1.14.0
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;)V
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#execute(Ljava/lang/Runnable;)V

+###org/apache/flink/util/concurrent/FutureUtils$RetryException
@1.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/util/concurrent/SeparateThreadExecutor
@1.13.6
+#<init>(Ljava/util/concurrent/ThreadFactory;)V
+#execute(Ljava/lang/Runnable;)V
@1.14.0
-###org/apache/flink/util/concurrent/SeparateThreadExecutor

+###org/apache/flink/util/SimpleUserCodeClassLoader
@1.12.0
+#asClassLoader()Ljava/lang/ClassLoader;
+#registerReleaseHookIfAbsent(Ljava/lang/String;Ljava/lang/Runnable;)V
+#create(Ljava/lang/ClassLoader;)Lorg/apache/flink/util/SimpleUserCodeClassLoader;

+###org/apache/flink/util/CompressedSerializedValue
@1.14.0
+#deserializeValue(Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#getSize()I
+#fromObject(Ljava/lang/Object;)Lorg/apache/flink/util/CompressedSerializedValue;
+#fromBytes([B)Lorg/apache/flink/util/CompressedSerializedValue;
+#toString()Ljava/lang/String;

+###org/apache/flink/util/FatalExitExceptionHandler
@1.14.0
+#<init>()V
+#uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V

+###org/apache/flink/management/jmx/JMXService
@1.14.0
+#<init>()V
+#getInstance()Ljava/util/Optional;
+#startInstance(Ljava/lang/String;)V
+#stopInstance()V
+#getPort()Ljava/util/Optional;

+###org/apache/flink/api/common/RuntimeExecutionMode
@1.12.0
+#values()[Lorg/apache/flink/api/common/RuntimeExecutionMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/RuntimeExecutionMode;

+###org/apache/flink/api/common/operators/util/SlotSharingGroupUtils
@1.14.0
+#<init>()V
+#extractResourceSpec(Lorg/apache/flink/api/common/operators/SlotSharingGroup;)Lorg/apache/flink/api/common/operators/ResourceSpec;

+###org/apache/flink/api/common/operators/SlotSharingGroup
@1.14.0
+#getName()Ljava/lang/String;
+#getManagedMemory()Ljava/util/Optional;
+#getTaskHeapMemory()Ljava/util/Optional;
+#getTaskOffHeapMemory()Ljava/util/Optional;
+#getCpuCores()Ljava/util/Optional;
+#getExternalResources()Ljava/util/Map;
+#newBuilder(Ljava/lang/String;)Lorg/apache/flink/api/common/operators/SlotSharingGroup$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/common/operators/SlotSharingGroup$Builder
@1.14.0
+#setCpuCores(D)Lorg/apache/flink/api/common/operators/SlotSharingGroup$Builder;
+#setTaskHeapMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/api/common/operators/SlotSharingGroup$Builder;
+#setTaskHeapMemoryMB(I)Lorg/apache/flink/api/common/operators/SlotSharingGroup$Builder;
+#setTaskOffHeapMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/api/common/operators/SlotSharingGroup$Builder;
+#setTaskOffHeapMemoryMB(I)Lorg/apache/flink/api/common/operators/SlotSharingGroup$Builder;
+#setManagedMemory(Lorg/apache/flink/configuration/MemorySize;)Lorg/apache/flink/api/common/operators/SlotSharingGroup$Builder;
+#setManagedMemoryMB(I)Lorg/apache/flink/api/common/operators/SlotSharingGroup$Builder;
+#setExternalResource(Ljava/lang/String;D)Lorg/apache/flink/api/common/operators/SlotSharingGroup$Builder;
+#build()Lorg/apache/flink/api/common/operators/SlotSharingGroup;

+###org/apache/flink/api/common/operators/MailboxExecutor
@1.14.0
+#execute(Lorg/apache/flink/util/function/ThrowingRunnable;Ljava/lang/String;)V
+#execute(Lorg/apache/flink/util/function/ThrowingRunnable;Ljava/lang/String;[Ljava/lang/Object;)V
+#submit(Lorg/apache/flink/util/function/RunnableWithException;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Lorg/apache/flink/util/function/RunnableWithException;Ljava/lang/String;)Ljava/util/concurrent/Future;
+#submit(Ljava/util/concurrent/Callable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/util/concurrent/Callable;Ljava/lang/String;)Ljava/util/concurrent/Future;
+#yield()V
+#tryYield()Z

+###org/apache/flink/api/common/serialization/RuntimeContextInitializationContextAdapters
@1.12.0
+#<init>()V
+#deserializationAdapter(Lorg/apache/flink/api/common/functions/RuntimeContext;)Lorg/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext;
+#deserializationAdapter(Lorg/apache/flink/api/common/functions/RuntimeContext;Ljava/util/function/Function;)Lorg/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext;
+#serializationAdapter(Lorg/apache/flink/api/common/functions/RuntimeContext;)Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;
+#serializationAdapter(Lorg/apache/flink/api/common/functions/RuntimeContext;Ljava/util/function/Function;)Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;

+###org/apache/flink/api/common/resources/ExternalResource
@1.13.0
+#<init>(Ljava/lang/String;D)V

+###org/apache/flink/api/common/io/compression/ZStandardInputStreamFactory
@1.13.0
+#<init>()V
+#getInstance()Lorg/apache/flink/api/common/io/compression/ZStandardInputStreamFactory;
+#create(Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;
+#getCommonFileExtensions()Ljava/util/Collection;
+#create(Ljava/io/InputStream;)Ljava/io/InputStream;

+###org/apache/flink/api/common/state/CheckpointListener
@1.12.0
+#notifyCheckpointComplete(J)V
+#notifyCheckpointAborted(J)V

+###org/apache/flink/api/common/restartstrategy/RestartStrategies$ExponentialDelayRestartStrategyConfiguration
@1.13.0
+#<init>(Lorg/apache/flink/api/common/time/Time;Lorg/apache/flink/api/common/time/Time;DLorg/apache/flink/api/common/time/Time;D)V
+#getInitialBackoff()Lorg/apache/flink/api/common/time/Time;
+#getMaxBackoff()Lorg/apache/flink/api/common/time/Time;
+#getBackoffMultiplier()D
+#getResetBackoffThreshold()Lorg/apache/flink/api/common/time/Time;
+#getJitterFactor()D
+#getDescription()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/flink/api/common/eventtime/IndexedCombinedWatermarkStatus
@1.14.0
+#forInputsCount(I)Lorg/apache/flink/api/common/eventtime/IndexedCombinedWatermarkStatus;
+#updateWatermark(IJ)Z
+#getCombinedWatermark()J
+#updateStatus(IZ)Z
+#isIdle()Z

+###org/apache/flink/api/common/BatchShuffleMode
@1.14.0
+#values()[Lorg/apache/flink/api/common/BatchShuffleMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/BatchShuffleMode;
+#getDescription()Lorg/apache/flink/configuration/description/InlineElement;

+###org/apache/flink/api/connector/sink/Sink$ProcessingTimeService$ProcessingTimeCallback
@1.12.0
+#onProcessingTime(J)V

+###org/apache/flink/api/connector/sink/GlobalCommitter
@1.12.0
+#filterRecoveredCommittables(Ljava/util/List;)Ljava/util/List;
+#combine(Ljava/util/List;)Ljava/lang/Object;
+#commit(Ljava/util/List;)Ljava/util/List;
+#endOfInput()V

+###org/apache/flink/api/connector/sink/Sink$InitContext
@1.12.0
+#getProcessingTimeService()Lorg/apache/flink/api/connector/sink/Sink$ProcessingTimeService;
+#getSubtaskId()I
+#metricGroup()Lorg/apache/flink/metrics/MetricGroup;
@1.14.0
+#getUserCodeClassLoader()Lorg/apache/flink/util/UserCodeClassLoader;
+#getMailboxExecutor()Lorg/apache/flink/api/common/operators/MailboxExecutor;
+#getNumberOfParallelSubtasks()I
+#metricGroup()Lorg/apache/flink/metrics/groups/SinkWriterMetricGroup;
+#getRestoredCheckpointId()Ljava/util/OptionalLong;
-#metricGroup()Lorg/apache/flink/metrics/MetricGroup;

+###org/apache/flink/api/connector/sink/SinkWriter$Context
@1.12.0
+#currentWatermark()J
+#timestamp()Ljava/lang/Long;

+###org/apache/flink/api/connector/sink/Sink$ProcessingTimeService
@1.12.0
+#getCurrentProcessingTime()J
+#registerProcessingTimer(JLorg/apache/flink/api/connector/sink/Sink$ProcessingTimeService$ProcessingTimeCallback;)V

+###org/apache/flink/api/connector/sink/InitContextInitializationContextAdapter
@1.14.0
+#<init>(Lorg/apache/flink/util/UserCodeClassLoader;Ljava/util/function/Supplier;)V
+#getMetricGroup()Lorg/apache/flink/metrics/MetricGroup;
+#getUserCodeClassLoader()Lorg/apache/flink/util/UserCodeClassLoader;
@1.15.0
-###org/apache/flink/api/connector/sink/InitContextInitializationContextAdapter

+###org/apache/flink/api/connector/sink/Sink
@1.12.0
+#createWriter(Lorg/apache/flink/api/connector/sink/Sink$InitContext;Ljava/util/List;)Lorg/apache/flink/api/connector/sink/SinkWriter;
+#createCommitter()Ljava/util/Optional;
+#createGlobalCommitter()Ljava/util/Optional;
+#getCommittableSerializer()Ljava/util/Optional;
+#getGlobalCommittableSerializer()Ljava/util/Optional;
+#getWriterStateSerializer()Ljava/util/Optional;
@1.14.0
+#getCompatibleStateNames()Ljava/util/Collection;

+###org/apache/flink/api/connector/sink/Committer
@1.12.0
+#commit(Ljava/util/List;)Ljava/util/List;

+###org/apache/flink/api/connector/sink/SinkWriter
@1.12.0
+#write(Ljava/lang/Object;Lorg/apache/flink/api/connector/sink/SinkWriter$Context;)V
+#prepareCommit(Z)Ljava/util/List;
+#snapshotState()Ljava/util/List;
@1.14.0
+#writeWatermark(Lorg/apache/flink/api/common/eventtime/Watermark;)V
+#snapshotState(J)Ljava/util/List;

+###org/apache/flink/api/common/typeutils/TypeSerializerSerializationUtil$SerialUIDMismatchTolerantInputStream
@1.3.1
+#<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V
@1.4.0
-###org/apache/flink/api/common/typeutils/TypeSerializerSerializationUtil$SerialUIDMismatchTolerantInputStream

+###org/apache/flink/api/java/typeutils/AvroTypeInfo
@1.0.0
+#<init>(Ljava/lang/Class;)V
@1.4.0
-###org/apache/flink/api/java/typeutils/AvroTypeInfo

+###org/apache/flink/api/java/typeutils/runtime/AvroSerializer$AvroSerializerConfigSnapshot
@1.3.0
+#<init>()V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/LinkedHashMap;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#getVersion()I
+#getTypeToInstantiate()Ljava/lang/Class;
@1.4.0
-###org/apache/flink/api/java/typeutils/runtime/AvroSerializer$AvroSerializerConfigSnapshot

+###org/apache/flink/api/java/typeutils/runtime/AvroSerializer
@1.0.0
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/java/typeutils/runtime/AvroSerializer;
+#createInstance()Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getLength()I
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.3.0
+#snapshotConfiguration()Lorg/apache/flink/api/java/typeutils/runtime/AvroSerializer$AvroSerializerConfigSnapshot;
+#ensureCompatibility(Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;)Lorg/apache/flink/api/common/typeutils/CompatibilityResult;
+#snapshotConfiguration()Lorg/apache/flink/api/common/typeutils/TypeSerializerConfigSnapshot;
@1.4.0
-###org/apache/flink/api/java/typeutils/runtime/AvroSerializer

+###org/apache/flink/api/java/typeutils/runtime/DataInputDecoder
@1.0.0
+#<init>()V
+#setIn(Ljava/io/DataInput;)V
+#readNull()V
+#readBoolean()Z
+#readInt()I
+#readLong()J
+#readFloat()F
+#readDouble()D
+#readEnum()I
+#readFixed([BII)V
+#readBytes(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
+#skipFixed(I)V
+#skipBytes()V
+#readString(Lorg/apache/avro/util/Utf8;)Lorg/apache/avro/util/Utf8;
+#readString()Ljava/lang/String;
+#skipString()V
+#readArrayStart()J
+#arrayNext()J
+#skipArray()J
+#readMapStart()J
+#mapNext()J
+#skipMap()J
+#readIndex()I
+#readVarLongCount(Ljava/io/DataInput;)J
@1.4.0
-###org/apache/flink/api/java/typeutils/runtime/DataInputDecoder

+###org/apache/flink/api/java/typeutils/runtime/DataOutputEncoder
@1.0.0
+#<init>()V
+#setOut(Ljava/io/DataOutput;)V
+#flush()V
+#writeNull()V
+#writeBoolean(Z)V
+#writeInt(I)V
+#writeLong(J)V
+#writeFloat(F)V
+#writeDouble(D)V
+#writeEnum(I)V
+#writeFixed([BII)V
+#writeBytes([BII)V
+#writeBytes(Ljava/nio/ByteBuffer;)V
+#writeString(Ljava/lang/String;)V
+#writeString(Lorg/apache/avro/util/Utf8;)V
+#writeArrayStart()V
+#setItemCount(J)V
+#startItem()V
+#writeArrayEnd()V
+#writeMapStart()V
+#writeMapEnd()V
+#writeIndex(I)V
+#writeVarLongCount(Ljava/io/DataOutput;J)V
@1.4.0
-###org/apache/flink/api/java/typeutils/runtime/DataOutputEncoder

+###org/apache/flink/api/java/typeutils/runtime/kryo/Serializers$AvroSchemaSerializer
@1.0.0
+#<init>()V
+#write(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Lorg/apache/avro/Schema;)V
+#read(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Lorg/apache/avro/Schema;
+#read(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
+#write(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
@1.4.0
-###org/apache/flink/api/java/typeutils/runtime/kryo/Serializers$AvroSchemaSerializer

+###org/apache/flink/core/memory/HybridMemorySegment$HybridMemorySegmentFactory
@0.10.0
+#wrap([B)Lorg/apache/flink/core/memory/HybridMemorySegment;
+#allocateUnpooledSegment(ILjava/lang/Object;)Lorg/apache/flink/core/memory/HybridMemorySegment;
+#wrapPooledHeapMemory([BLjava/lang/Object;)Lorg/apache/flink/core/memory/HybridMemorySegment;
+#wrapPooledOffHeapMemory(Ljava/nio/ByteBuffer;Ljava/lang/Object;)Lorg/apache/flink/core/memory/HybridMemorySegment;
+#wrapPooledOffHeapMemory(Ljava/nio/ByteBuffer;Ljava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#wrapPooledHeapMemory([BLjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#allocateUnpooledSegment(ILjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#wrap([B)Lorg/apache/flink/core/memory/MemorySegment;
@1.4.0
-###org/apache/flink/core/memory/HybridMemorySegment$HybridMemorySegmentFactory

+###org/apache/flink/core/memory/MemorySegmentFactory$Factory
@0.10.0
+#wrap([B)Lorg/apache/flink/core/memory/MemorySegment;
+#allocateUnpooledSegment(ILjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#wrapPooledHeapMemory([BLjava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
+#wrapPooledOffHeapMemory(Ljava/nio/ByteBuffer;Ljava/lang/Object;)Lorg/apache/flink/core/memory/MemorySegment;
@1.4.0
-###org/apache/flink/core/memory/MemorySegmentFactory$Factory

+###org/apache/flink/migration/util/MigrationInstantiationUtil$ClassLoaderObjectInputStream
@1.2.0
+#<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V
@1.4.0
-###org/apache/flink/migration/util/MigrationInstantiationUtil$ClassLoaderObjectInputStream

+###org/apache/flink/migration/util/MigrationInstantiationUtil
@1.2.0
+#deserializeObject([BLjava/lang/ClassLoader;)Ljava/lang/Object;
+#deserializeObject(Ljava/io/InputStream;Ljava/lang/ClassLoader;)Ljava/lang/Object;
@1.4.0
-###org/apache/flink/migration/util/MigrationInstantiationUtil

+###org/apache/flink/migration/util/SerializedValue
@1.2.0
+#<init>(Ljava/lang/Object;)V
+#deserializeValue(Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#getByteArray()[B
+#fromBytes([B)Lorg/apache/flink/migration/util/SerializedValue;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.4.0
-###org/apache/flink/migration/util/SerializedValue

+###org/apache/flink/util/ConfigurationUtil
@1.2.0
+#<init>()V
+#getIntegerWithDeprecatedKeys(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;I[Ljava/lang/String;)I
+#getStringWithDeprecatedKeys(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
@1.4.0
-###org/apache/flink/util/ConfigurationUtil

+###org/apache/flink/util/Migration
@1.2.0
@1.5.0
-###org/apache/flink/util/Migration

+###org/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor
@1.2.0
+#<init>(I)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor

+###org/apache/flink/shaded/org/objectweb/asm/Attribute
@1.2.0
+#isUnknown()Z
+#isCodeAttribute()Z
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/Attribute

+###org/apache/flink/shaded/org/objectweb/asm/ByteVector
@1.2.0
+#<init>()V
+#<init>(I)V
+#putByte(I)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
+#putShort(I)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
+#putInt(I)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
+#putLong(J)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
+#putUTF8(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
+#putByteArray([BII)Lorg/apache/flink/shaded/org/objectweb/asm/ByteVector;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/ByteVector

+###org/apache/flink/shaded/org/objectweb/asm/ClassReader
@1.2.0
+#<init>([B)V
+#<init>([BII)V
+#getAccess()I
+#getClassName()Ljava/lang/String;
+#getSuperName()Ljava/lang/String;
+#getInterfaces()[Ljava/lang/String;
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/lang/String;)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;[Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;I)V
+#getItemCount()I
+#getItem(I)I
+#getMaxStringLength()I
+#readByte(I)I
+#readUnsignedShort(I)I
+#readShort(I)S
+#readInt(I)I
+#readLong(I)J
+#readUTF8(I[C)Ljava/lang/String;
+#readClass(I[C)Ljava/lang/String;
+#readConst(I[C)Ljava/lang/Object;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/ClassReader

+###org/apache/flink/shaded/org/objectweb/asm/ClassVisitor
@1.2.0
+#<init>(I)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/ClassVisitor

+###org/apache/flink/shaded/org/objectweb/asm/ClassWriter
@1.2.0
+#<init>(I)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassReader;I)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
+#toByteArray()[B
+#newConst(Ljava/lang/Object;)I
+#newUTF8(Ljava/lang/String;)I
+#newClass(Ljava/lang/String;)I
+#newMethodType(Ljava/lang/String;)I
+#newHandle(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#newInvokeDynamic(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)I
+#newField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#newMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I
+#newNameType(Ljava/lang/String;Ljava/lang/String;)I
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/ClassWriter

+###org/apache/flink/shaded/org/objectweb/asm/FieldVisitor
@1.2.0
+#<init>(I)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/FieldVisitor

+###org/apache/flink/shaded/org/objectweb/asm/Handle
@1.2.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getTag()I
+#getOwner()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getDesc()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/Handle

+###org/apache/flink/shaded/org/objectweb/asm/Label
@1.2.0
+#<init>()V
+#getOffset()I
+#toString()Ljava/lang/String;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/Label

+###org/apache/flink/shaded/org/objectweb/asm/MethodVisitor
@1.2.0
+#<init>(I)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/MethodVisitor

+###org/apache/flink/shaded/org/objectweb/asm/Opcodes
@1.2.0
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/Opcodes

+###org/apache/flink/shaded/org/objectweb/asm/Type
@1.2.0
+#getType(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getObjectType(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getMethodType(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getMethodType(Lorg/apache/flink/shaded/org/objectweb/asm/Type;[Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getType(Ljava/lang/Class;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getType(Ljava/lang/reflect/Constructor;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getType(Ljava/lang/reflect/Method;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getArgumentTypes(Ljava/lang/String;)[Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getArgumentTypes(Ljava/lang/reflect/Method;)[Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getReturnType(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getReturnType(Ljava/lang/reflect/Method;)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getArgumentsAndReturnSizes(Ljava/lang/String;)I
+#getSort()I
+#getDimensions()I
+#getElementType()Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getClassName()Ljava/lang/String;
+#getInternalName()Ljava/lang/String;
+#getArgumentTypes()[Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getArgumentsAndReturnSizes()I
+#getDescriptor()Ljava/lang/String;
+#getMethodDescriptor(Lorg/apache/flink/shaded/org/objectweb/asm/Type;[Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Ljava/lang/String;
+#getInternalName(Ljava/lang/Class;)Ljava/lang/String;
+#getDescriptor(Ljava/lang/Class;)Ljava/lang/String;
+#getConstructorDescriptor(Ljava/lang/reflect/Constructor;)Ljava/lang/String;
+#getMethodDescriptor(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getSize()I
+#getOpcode(I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/Type

+###org/apache/flink/shaded/org/objectweb/asm/TypePath
@1.2.0
+#getLength()I
+#getStep(I)I
+#getStepArgument(I)I
+#fromString(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/TypePath;
+#toString()Ljava/lang/String;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/TypePath

+###org/apache/flink/shaded/org/objectweb/asm/TypeReference
@1.2.0
+#<init>(I)V
+#newTypeReference(I)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newTypeParameterReference(II)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newTypeParameterBoundReference(III)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newSuperTypeReference(I)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newFormalParameterReference(I)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newExceptionReference(I)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newTryCatchReference(I)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#newTypeArgumentReference(II)Lorg/apache/flink/shaded/org/objectweb/asm/TypeReference;
+#getSort()I
+#getTypeParameterIndex()I
+#getTypeParameterBoundIndex()I
+#getSuperTypeIndex()I
+#getFormalParameterIndex()I
+#getExceptionIndex()I
+#getTryCatchBlockIndex()I
+#getTypeArgumentIndex()I
+#getValue()I
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/TypeReference

+###org/apache/flink/shaded/org/objectweb/asm/commons/AdviceAdapter
@1.2.0
+#visitCode()V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitInsn(I)V
+#visitVarInsn(II)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitIntInsn(II)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/AdviceAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/AnalyzerAdapter
@1.2.0
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitMaxs(II)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/AnalyzerAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/CodeSizeEvaluator
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#getMinSize()I
+#getMaxSize()I
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/CodeSizeEvaluator

+###org/apache/flink/shaded/org/objectweb/asm/commons/GeneratorAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/commons/Method;Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/commons/Method;Ljava/lang/String;[Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#push(Z)V
+#push(I)V
+#push(J)V
+#push(F)V
+#push(D)V
+#push(Ljava/lang/String;)V
+#push(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#push(Lorg/apache/flink/shaded/org/objectweb/asm/Handle;)V
+#loadThis()V
+#loadArg(I)V
+#loadArgs(II)V
+#loadArgs()V
+#loadArgArray()V
+#storeArg(I)V
+#getLocalType(I)Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#loadLocal(I)V
+#loadLocal(ILorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#storeLocal(I)V
+#storeLocal(ILorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#arrayLoad(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#arrayStore(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#pop()V
+#pop2()V
+#dup()V
+#dup2()V
+#dupX1()V
+#dupX2()V
+#dup2X1()V
+#dup2X2()V
+#swap()V
+#swap(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#math(ILorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#not()V
+#iinc(II)V
+#cast(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#box(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#valueOf(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#unbox(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#newLabel()Lorg/apache/flink/shaded/org/objectweb/asm/Label;
+#mark(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#mark()Lorg/apache/flink/shaded/org/objectweb/asm/Label;
+#ifCmp(Lorg/apache/flink/shaded/org/objectweb/asm/Type;ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifICmp(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifZCmp(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifNull(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifNonNull(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#goTo(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ret(I)V
+#tableSwitch([ILorg/apache/flink/shaded/org/objectweb/asm/commons/TableSwitchGenerator;)V
+#tableSwitch([ILorg/apache/flink/shaded/org/objectweb/asm/commons/TableSwitchGenerator;Z)V
+#returnValue()V
+#getStatic(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#putStatic(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#getField(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#putField(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#invokeVirtual(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;)V
+#invokeConstructor(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;)V
+#invokeStatic(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;)V
+#invokeInterface(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;)V
+#invokeDynamic(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#newInstance(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#newArray(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#arrayLength()V
+#throwException()V
+#throwException(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/lang/String;)V
+#checkCast(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#instanceOf(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#monitorEnter()V
+#monitorExit()V
+#endMethod()V
+#catchException(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/GeneratorAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/InstructionAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#nop()V
+#aconst(Ljava/lang/Object;)V
+#iconst(I)V
+#lconst(J)V
+#fconst(F)V
+#dconst(D)V
+#tconst(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#hconst(Lorg/apache/flink/shaded/org/objectweb/asm/Handle;)V
+#load(ILorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#aload(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#store(ILorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#astore(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#pop()V
+#pop2()V
+#dup()V
+#dup2()V
+#dupX1()V
+#dupX2()V
+#dup2X1()V
+#dup2X2()V
+#swap()V
+#add(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#sub(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#mul(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#div(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#rem(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#neg(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#shl(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#shr(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#ushr(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#and(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#or(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#xor(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#iinc(II)V
+#cast(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#lcmp()V
+#cmpl(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#cmpg(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#ifeq(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifne(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#iflt(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifge(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifgt(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifle(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmpeq(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmpne(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmplt(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmpge(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmpgt(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ificmple(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifacmpeq(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifacmpne(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#goTo(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#jsr(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ret(I)V
+#tableswitch(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#lookupswitch(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#areturn(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#getstatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#putstatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getfield(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#putfield(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokevirtual(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokevirtual(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#invokespecial(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokespecial(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#invokestatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokestatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#invokeinterface(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokedynamic(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#anew(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#newarray(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#arraylength()V
+#athrow()V
+#checkcast(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#instanceOf(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#monitorenter()V
+#monitorexit()V
+#multianewarray(Ljava/lang/String;I)V
+#ifnull(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#ifnonnull(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#mark(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/InstructionAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/JSRInlinerAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/JSRInlinerAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/LocalVariablesSorter
@1.2.0
+#<init>(ILjava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#visitVarInsn(II)V
+#visitIincInsn(II)V
+#visitMaxs(II)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#newLocal(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)I
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/LocalVariablesSorter

+###org/apache/flink/shaded/org/objectweb/asm/commons/Method
@1.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Type;[Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#getMethod(Ljava/lang/reflect/Method;)Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;
+#getMethod(Ljava/lang/reflect/Constructor;)Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;
+#getMethod(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;
+#getMethod(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/commons/Method;
+#getName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getArgumentTypes()[Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/Method

+###org/apache/flink/shaded/org/objectweb/asm/commons/Remapper
@1.2.0
+#<init>()V
+#mapDesc(Ljava/lang/String;)Ljava/lang/String;
+#mapType(Ljava/lang/String;)Ljava/lang/String;
+#mapTypes([Ljava/lang/String;)[Ljava/lang/String;
+#mapMethodDesc(Ljava/lang/String;)Ljava/lang/String;
+#mapValue(Ljava/lang/Object;)Ljava/lang/Object;
+#mapSignature(Ljava/lang/String;Z)Ljava/lang/String;
+#mapMethodName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapInvokeDynamicMethodName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapFieldName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#map(Ljava/lang/String;)Ljava/lang/String;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/Remapper

+###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingAnnotationAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Remapper;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingAnnotationAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingClassAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Remapper;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingClassAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingFieldAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Remapper;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingFieldAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingMethodAdapter
@1.2.0
+#<init>(ILjava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Remapper;)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingMethodAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingSignatureAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/commons/Remapper;)V
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitClassBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/RemappingSignatureAdapter

+###org/apache/flink/shaded/org/objectweb/asm/commons/SerialVersionUIDAdder
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitEnd()V
+#hasSVUID()Z
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/SerialVersionUIDAdder

+###org/apache/flink/shaded/org/objectweb/asm/commons/SimpleRemapper
@1.2.0
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#mapMethodName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapInvokeDynamicMethodName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapFieldName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#map(Ljava/lang/String;)Ljava/lang/String;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/SimpleRemapper

+###org/apache/flink/shaded/org/objectweb/asm/commons/StaticInitMerger
@1.2.0
+#<init>(Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/StaticInitMerger

+###org/apache/flink/shaded/org/objectweb/asm/commons/TableSwitchGenerator
@1.2.0
+#generateCase(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#generateDefault()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/TableSwitchGenerator

+###org/apache/flink/shaded/org/objectweb/asm/commons/TryCatchBlockSorter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/commons/TryCatchBlockSorter

+###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureReader
@1.2.0
+#<init>(Ljava/lang/String;)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;)V
+#acceptType(Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureReader

+###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor
@1.2.0
+#<init>(I)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor

+###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureWriter
@1.2.0
+#<init>()V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
+#toString()Ljava/lang/String;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/signature/SignatureWriter

+###org/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode
@1.2.0
+#getOpcode()I
+#getType()I
+#getPrevious()Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#getNext()Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/AnnotationNode
@1.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(ILjava/lang/String;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
+#check(I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/AnnotationNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/ClassNode
@1.2.0
+#<init>()V
+#<init>(I)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
+#check(I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/ClassNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/FieldInsnNode
@1.2.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/FieldInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/FieldNode
@1.2.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitEnd()V
+#check(I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/FieldNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/FrameNode
@1.2.0
+#<init>(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/FrameNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/IincInsnNode
@1.2.0
+#<init>(II)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/IincInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/InnerClassNode
@1.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/InnerClassNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/InsnList
@1.2.0
+#<init>()V
+#size()I
+#getFirst()Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#getLast()Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#get(I)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#contains(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Z
+#indexOf(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#iterator()Ljava/util/ListIterator;
+#iterator(I)Ljava/util/ListIterator;
+#toArray()[Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#set(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#add(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#add(Lorg/apache/flink/shaded/org/objectweb/asm/tree/InsnList;)V
+#insert(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#insert(Lorg/apache/flink/shaded/org/objectweb/asm/tree/InsnList;)V
+#insert(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#insert(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/InsnList;)V
+#insertBefore(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#insertBefore(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/InsnList;)V
+#remove(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#clear()V
+#resetLabels()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/InsnList

+###org/apache/flink/shaded/org/objectweb/asm/tree/InsnNode
@1.2.0
+#<init>(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/InsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/IntInsnNode
@1.2.0
+#<init>(II)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/IntInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/InvokeDynamicInsnNode
@1.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/InvokeDynamicInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/JumpInsnNode
@1.2.0
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/JumpInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LabelNode
@1.2.0
+#<init>()V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#getType()I
+#getLabel()Lorg/apache/flink/shaded/org/objectweb/asm/Label;
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
+#resetLabel()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LabelNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LdcInsnNode
@1.2.0
+#<init>(Ljava/lang/Object;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LdcInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LineNumberNode
@1.2.0
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LineNumberNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LocalVariableAnnotationNode
@1.2.0
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[ILjava/lang/String;)V
+#<init>(IILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[ILjava/lang/String;)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;Z)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LocalVariableAnnotationNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LocalVariableNode
@1.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LocalVariableNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/LookupSwitchInsnNode
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[I[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/LookupSwitchInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/MethodInsnNode
@1.2.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/MethodInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/MethodNode
@1.2.0
+#<init>()V
+#<init>(I)V
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
+#check(I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/MethodNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/MultiANewArrayInsnNode
@1.2.0
+#<init>(Ljava/lang/String;I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/MultiANewArrayInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/ParameterNode
@1.2.0
+#<init>(Ljava/lang/String;I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/ParameterNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/TableSwitchInsnNode
@1.2.0
+#<init>(IILorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;[Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/TableSwitchInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/TryCatchBlockNode
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/LabelNode;Ljava/lang/String;)V
+#updateIndex(I)V
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/TryCatchBlockNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/TypeAnnotationNode
@1.2.0
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;)V
+#<init>(IILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/TypeAnnotationNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/TypeInsnNode
@1.2.0
+#<init>(ILjava/lang/String;)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/TypeInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/VarInsnNode
@1.2.0
+#<init>(II)V
+#setOpcode(I)V
+#getType()I
+#accept(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#clone(Ljava/util/Map;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/VarInsnNode

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Analyzer
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Interpreter;)V
+#analyze(Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/tree/MethodNode;)[Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;
+#getFrames()[Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;
+#getHandlers(I)Ljava/util/List;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Analyzer

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/AnalyzerException
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/lang/String;Ljava/lang/Object;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/AnalyzerException

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicInterpreter
@1.2.0
+#<init>()V
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#newOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)V
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicInterpreter

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)V
+#getType()Lorg/apache/flink/shaded/org/objectweb/asm/Type;
+#getSize()I
+#isReference()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicVerifier
@1.2.0
+#<init>()V
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)V
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicVerifier

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame
@1.2.0
+#<init>(II)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;)V
+#init(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;
+#setReturn(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#getLocals()I
+#getMaxStackSize()I
+#getLocal(I)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#setLocal(ILorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#getStackSize()I
+#getStack(I)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#clearStack()V
+#pop()Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#push(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#execute(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Interpreter;)V
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Interpreter;)Z
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame;[Z)Z
+#toString()Ljava/lang/String;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Frame

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Interpreter
@1.2.0
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Interpreter

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SimpleVerifier
@1.2.0
+#<init>()V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/Type;Z)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/Type;Lorg/apache/flink/shaded/org/objectweb/asm/Type;Ljava/util/List;Z)V
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/BasicValue;
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SimpleVerifier

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceInterpreter
@1.2.0
+#<init>()V
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#newOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)V
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue;
+#merge(Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#returnOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)V
+#naryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Ljava/util/List;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#ternaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#binaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#unaryOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#copyOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newOperation(Lorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
+#newValue(Lorg/apache/flink/shaded/org/objectweb/asm/Type;)Lorg/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceInterpreter

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue
@1.2.0
+#<init>(I)V
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/tree/AbstractInsnNode;)V
+#<init>(ILjava/util/Set;)V
+#getSize()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/SourceValue

+###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value
@1.2.0
+#getSize()I
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/tree/analysis/Value

+###org/apache/flink/shaded/org/objectweb/asm/util/ASMifiable
@1.2.0
+#asmify(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/util/Map;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/ASMifiable

+###org/apache/flink/shaded/org/objectweb/asm/util/ASMifier
@1.2.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitClassAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitClassTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitClassAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitClassEnd()V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitAnnotationEnd()V
+#visitFieldAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitFieldTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitFieldAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitFieldEnd()V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitMethodAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitMethodTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitMethodAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitMethodEnd()V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitTypeAnnotation(Ljava/lang/String;ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/ASMifier;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/ASMifier

+###org/apache/flink/shaded/org/objectweb/asm/util/CheckAnnotationAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/CheckAnnotationAdapter

+###org/apache/flink/shaded/org/objectweb/asm/util/CheckClassAdapter
@1.2.0
+#main([Ljava/lang/String;)V
+#verify(Lorg/apache/flink/shaded/org/objectweb/asm/ClassReader;Ljava/lang/ClassLoader;ZLjava/io/PrintWriter;)V
+#verify(Lorg/apache/flink/shaded/org/objectweb/asm/ClassReader;ZLjava/io/PrintWriter;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;Z)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitEnd()V
+#checkClassSignature(Ljava/lang/String;)V
+#checkMethodSignature(Ljava/lang/String;)V
+#checkFieldSignature(Ljava/lang/String;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/CheckClassAdapter

+###org/apache/flink/shaded/org/objectweb/asm/util/CheckFieldAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/CheckFieldAdapter

+###org/apache/flink/shaded/org/objectweb/asm/util/CheckMethodAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;Ljava/util/Map;)V
+#<init>(ILjava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;Ljava/util/Map;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/CheckMethodAdapter

+###org/apache/flink/shaded/org/objectweb/asm/util/CheckSignatureAdapter
@1.2.0
+#<init>(ILorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/CheckSignatureAdapter

+###org/apache/flink/shaded/org/objectweb/asm/util/Printer
@1.2.0
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitClassAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassEnd()V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitAnnotationEnd()V
+#visitFieldAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitFieldEnd()V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitMethodEnd()V
+#getText()Ljava/util/List;
+#print(Ljava/io/PrintWriter;)V
+#appendString(Ljava/lang/StringBuffer;Ljava/lang/String;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/Printer

+###org/apache/flink/shaded/org/objectweb/asm/util/Textifiable
@1.2.0
+#textify(Ljava/lang/StringBuffer;Ljava/util/Map;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/Textifiable

+###org/apache/flink/shaded/org/objectweb/asm/util/Textifier
@1.2.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitClassAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitClassTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitClassEnd()V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitAnnotationEnd()V
+#visitFieldAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitFieldTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitFieldEnd()V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitMethodAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitMethodTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitMethodAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitMethodEnd()V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Textifier;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethodAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitFieldAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
+#visitClassAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/Textifier

+###org/apache/flink/shaded/org/objectweb/asm/util/TraceAnnotationVisitor
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/TraceAnnotationVisitor

+###org/apache/flink/shaded/org/objectweb/asm/util/TraceClassVisitor
@1.2.0
+#<init>(Ljava/io/PrintWriter;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;Ljava/io/PrintWriter;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;Ljava/io/PrintWriter;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/TraceClassVisitor

+###org/apache/flink/shaded/org/objectweb/asm/util/TraceFieldVisitor
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/TraceFieldVisitor

+###org/apache/flink/shaded/org/objectweb/asm/util/TraceMethodVisitor
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;Lorg/apache/flink/shaded/org/objectweb/asm/util/Printer;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/apache/flink/shaded/org/objectweb/asm/Attribute;)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/TraceMethodVisitor

+###org/apache/flink/shaded/org/objectweb/asm/util/TraceSignatureVisitor
@1.2.0
+#<init>(I)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/apache/flink/shaded/org/objectweb/asm/signature/SignatureVisitor;
+#visitEnd()V
+#getDeclaration()Ljava/lang/String;
+#getReturnType()Ljava/lang/String;
+#getExceptions()Ljava/lang/String;
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/util/TraceSignatureVisitor

+###org/apache/flink/shaded/org/objectweb/asm/xml/ASMContentHandler$Rule
@1.2.0
+#begin(Ljava/lang/String;Lorg/xml/sax/Attributes;)V
+#end(Ljava/lang/String;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/ASMContentHandler$Rule

+###org/apache/flink/shaded/org/objectweb/asm/xml/ASMContentHandler
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/ClassVisitor;)V
+#startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
+#endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/ASMContentHandler

+###org/apache/flink/shaded/org/objectweb/asm/xml/Processor
@1.2.0
+#<init>(IILjava/io/InputStream;Ljava/io/OutputStream;Ljavax/xml/transform/Source;)V
+#process()I
+#main([Ljava/lang/String;)V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/Processor

+###org/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter
@1.2.0
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter

+###org/apache/flink/shaded/org/objectweb/asm/xml/SAXAnnotationAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;Ljava/lang/String;IILjava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;)V
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Ljava/lang/String;[Ljava/lang/String;[I)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/SAXAnnotationAdapter

+###org/apache/flink/shaded/org/objectweb/asm/xml/SAXClassAdapter
@1.2.0
+#<init>(Lorg/xml/sax/ContentHandler;Z)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/org/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/flink/shaded/org/objectweb/asm/MethodVisitor;
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/SAXClassAdapter

+###org/apache/flink/shaded/org/objectweb/asm/xml/SAXCodeAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;I)V
+#visitParameter(Ljava/lang/String;I)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLabel(Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/apache/flink/shaded/org/objectweb/asm/Label;[I[Lorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitMaxs(II)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/flink/shaded/org/objectweb/asm/Label;Lorg/apache/flink/shaded/org/objectweb/asm/Label;I)V
+#visitLineNumber(ILorg/apache/flink/shaded/org/objectweb/asm/Label;)V
+#visitAnnotationDefault()Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitInsnAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTryCatchAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitLocalVariableAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[Lorg/apache/flink/shaded/org/objectweb/asm/Label;[ILjava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/SAXCodeAdapter

+###org/apache/flink/shaded/org/objectweb/asm/xml/SAXFieldAdapter
@1.2.0
+#<init>(Lorg/apache/flink/shaded/org/objectweb/asm/xml/SAXAdapter;Lorg/xml/sax/Attributes;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/apache/flink/shaded/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/apache/flink/shaded/org/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
@1.4.0
-###org/apache/flink/shaded/org/objectweb/asm/xml/SAXFieldAdapter

+###org/apache/flink/api/common/state/StateTtlConfig$TimeCharacteristic
@1.6.0
+#values()[Lorg/apache/flink/api/common/state/StateTtlConfig$TimeCharacteristic;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/api/common/state/StateTtlConfig$TimeCharacteristic;
@1.10.0
-###org/apache/flink/api/common/state/StateTtlConfig$TimeCharacteristic

+###org/apache/flink/util/MavenForkNumberPrefixLayout
@0.9.0-milestone-1
+#<init>()V
+#format(Lorg/apache/log4j/spi/LoggingEvent;)Ljava/lang/String;
@1.3.0
-###org/apache/flink/util/MavenForkNumberPrefixLayout

+###org/apache/flink/api/java/typeutils/WritableTypeInfo
@1.0.0
+#<init>(Ljava/lang/Class;)V
+#createComparator(ZLorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#isBasicType()Z
+#isTupleType()Z
+#getArity()I
+#getTotalFields()I
+#getTypeClass()Ljava/lang/Class;
+#isKeyType()Z
+#createSerializer(Lorg/apache/flink/api/common/ExecutionConfig;)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
@1.2.0
-###org/apache/flink/api/java/typeutils/WritableTypeInfo

+###org/apache/flink/api/java/typeutils/runtime/WritableComparator
@1.0.0
+#<init>(ZLjava/lang/Class;)V
+#hash(Lorg/apache/hadoop/io/Writable;)I
+#setReference(Lorg/apache/hadoop/io/Writable;)V
+#equalToReference(Lorg/apache/hadoop/io/Writable;)Z
+#compareToReference(Lorg/apache/flink/api/common/typeutils/TypeComparator;)I
+#compare(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)I
+#compareSerialized(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataInputView;)I
+#supportsNormalizedKey()Z
+#getNormalizeKeyLen()I
+#isNormalizedKeyPrefixOnly(I)Z
+#putNormalizedKey(Lorg/apache/hadoop/io/Writable;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#invertNormalizedKey()Z
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#extractKeys(Ljava/lang/Object;[Ljava/lang/Object;I)I
+#getFlatComparators()[Lorg/apache/flink/api/common/typeutils/TypeComparator;
+#supportsSerializationWithKeyNormalization()Z
+#writeWithKeyNormalization(Lorg/apache/hadoop/io/Writable;Lorg/apache/flink/core/memory/DataOutputView;)V
+#readWithKeyDenormalization(Lorg/apache/hadoop/io/Writable;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/hadoop/io/Writable;
+#readWithKeyDenormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#writeWithKeyNormalization(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#putNormalizedKey(Ljava/lang/Object;Lorg/apache/flink/core/memory/MemorySegment;II)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equalToReference(Ljava/lang/Object;)Z
+#setReference(Ljava/lang/Object;)V
+#hash(Ljava/lang/Object;)I
@1.2.0
-###org/apache/flink/api/java/typeutils/runtime/WritableComparator

+###org/apache/flink/api/java/typeutils/runtime/WritableSerializer
@1.0.0
+#<init>(Ljava/lang/Class;)V
+#createInstance()Lorg/apache/hadoop/io/Writable;
+#copy(Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;
+#copy(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;
+#getLength()I
+#serialize(Lorg/apache/hadoop/io/Writable;Lorg/apache/flink/core/memory/DataOutputView;)V
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/hadoop/io/Writable;
+#deserialize(Lorg/apache/hadoop/io/Writable;Lorg/apache/flink/core/memory/DataInputView;)Lorg/apache/hadoop/io/Writable;
+#copy(Lorg/apache/flink/core/memory/DataInputView;Lorg/apache/flink/core/memory/DataOutputView;)V
+#isImmutableType()Z
+#duplicate()Lorg/apache/flink/api/java/typeutils/runtime/WritableSerializer;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#canEqual(Ljava/lang/Object;)Z
+#deserialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#deserialize(Lorg/apache/flink/core/memory/DataInputView;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;Lorg/apache/flink/core/memory/DataOutputView;)V
+#copy(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#createInstance()Ljava/lang/Object;
+#duplicate()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
@1.2.0
-###org/apache/flink/api/java/typeutils/runtime/WritableSerializer

+###org/apache/flink/api/common/state/OperatorState
@0.10.0
+#value()Ljava/lang/Object;
+#update(Ljava/lang/Object;)V
@1.2.0
-###org/apache/flink/api/common/state/OperatorState

+###org/apache/flink/api/common/state/StateBackend
@1.0.0
+#createValueState(Lorg/apache/flink/api/common/state/ValueStateDescriptor;)Lorg/apache/flink/api/common/state/ValueState;
+#createListState(Lorg/apache/flink/api/common/state/ListStateDescriptor;)Lorg/apache/flink/api/common/state/ListState;
+#createReducingState(Lorg/apache/flink/api/common/state/ReducingStateDescriptor;)Lorg/apache/flink/api/common/state/ReducingState;
+#createFoldingState(Lorg/apache/flink/api/common/state/FoldingStateDescriptor;)Lorg/apache/flink/api/common/state/FoldingState;
@1.3.0
-###org/apache/flink/api/common/state/StateBackend

+###org/apache/flink/api/common/io/StrictlyLocalAssignment
@0.9.0-milestone-1
@1.2.0
-###org/apache/flink/api/common/io/StrictlyLocalAssignment

+###org/apache/flink/shaded/com/google/common/annotations/Beta
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/annotations/Beta

+###org/apache/flink/shaded/com/google/common/annotations/GwtCompatible
@0.9.0-milestone-1
+#serializable()Z
+#emulated()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/annotations/GwtCompatible

+###org/apache/flink/shaded/com/google/common/annotations/GwtIncompatible
@0.9.0-milestone-1
+#value()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/annotations/GwtIncompatible

+###org/apache/flink/shaded/com/google/common/annotations/VisibleForTesting
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/annotations/VisibleForTesting

+###org/apache/flink/shaded/com/google/common/base/Ascii
@0.9.0-milestone-1
+#toLowerCase(Ljava/lang/String;)Ljava/lang/String;
+#toLowerCase(Ljava/lang/CharSequence;)Ljava/lang/String;
+#toLowerCase(C)C
+#toUpperCase(Ljava/lang/String;)Ljava/lang/String;
+#toUpperCase(Ljava/lang/CharSequence;)Ljava/lang/String;
+#toUpperCase(C)C
+#isLowerCase(C)Z
+#isUpperCase(C)Z
+#truncate(Ljava/lang/CharSequence;ILjava/lang/String;)Ljava/lang/String;
+#equalsIgnoreCase(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Ascii

+###org/apache/flink/shaded/com/google/common/base/CaseFormat
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/base/CaseFormat;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/CaseFormat;
+#to(Lorg/apache/flink/shaded/com/google/common/base/CaseFormat;Ljava/lang/String;)Ljava/lang/String;
+#converterTo(Lorg/apache/flink/shaded/com/google/common/base/CaseFormat;)Lorg/apache/flink/shaded/com/google/common/base/Converter;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/CaseFormat

+###org/apache/flink/shaded/com/google/common/base/CharMatcher
@0.9.0-milestone-1
+#is(C)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#isNot(C)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#anyOf(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#noneOf(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#inRange(CC)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#forPredicate(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#matches(C)Z
+#negate()Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#and(Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#or(Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;)Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#precomputed()Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;
+#matchesAnyOf(Ljava/lang/CharSequence;)Z
+#matchesAllOf(Ljava/lang/CharSequence;)Z
+#matchesNoneOf(Ljava/lang/CharSequence;)Z
+#indexIn(Ljava/lang/CharSequence;)I
+#indexIn(Ljava/lang/CharSequence;I)I
+#lastIndexIn(Ljava/lang/CharSequence;)I
+#countIn(Ljava/lang/CharSequence;)I
+#removeFrom(Ljava/lang/CharSequence;)Ljava/lang/String;
+#retainFrom(Ljava/lang/CharSequence;)Ljava/lang/String;
+#replaceFrom(Ljava/lang/CharSequence;C)Ljava/lang/String;
+#replaceFrom(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
+#trimFrom(Ljava/lang/CharSequence;)Ljava/lang/String;
+#trimLeadingFrom(Ljava/lang/CharSequence;)Ljava/lang/String;
+#trimTrailingFrom(Ljava/lang/CharSequence;)Ljava/lang/String;
+#collapseFrom(Ljava/lang/CharSequence;C)Ljava/lang/String;
+#trimAndCollapseFrom(Ljava/lang/CharSequence;C)Ljava/lang/String;
+#apply(Ljava/lang/Character;)Z[deprecated]
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/CharMatcher

+###org/apache/flink/shaded/com/google/common/base/Charsets
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Charsets

+###org/apache/flink/shaded/com/google/common/base/Converter
@0.9.0-milestone-1
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
+#convertAll(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#reverse()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#andThen(Lorg/apache/flink/shaded/com/google/common/base/Converter;)Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#equals(Ljava/lang/Object;)Z
+#from(Lorg/apache/flink/shaded/com/google/common/base/Function;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#identity()Lorg/apache/flink/shaded/com/google/common/base/Converter;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Converter

+###org/apache/flink/shaded/com/google/common/base/Defaults
@0.9.0-milestone-1
+#defaultValue(Ljava/lang/Class;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Defaults

+###org/apache/flink/shaded/com/google/common/base/Enums
@0.9.0-milestone-1
+#getField(Ljava/lang/Enum;)Ljava/lang/reflect/Field;
+#getIfPresent(Ljava/lang/Class;Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#stringConverter(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/base/Converter;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Enums

+###org/apache/flink/shaded/com/google/common/base/Equivalence$Wrapper
@0.9.0-milestone-1
+#get()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Equivalence$Wrapper

+###org/apache/flink/shaded/com/google/common/base/Equivalence
@0.9.0-milestone-1
+#equivalent(Ljava/lang/Object;Ljava/lang/Object;)Z
+#hash(Ljava/lang/Object;)I
+#onResultOf(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/base/Equivalence;
+#wrap(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Equivalence$Wrapper;
+#pairwise()Lorg/apache/flink/shaded/com/google/common/base/Equivalence;
+#equivalentTo(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#equals()Lorg/apache/flink/shaded/com/google/common/base/Equivalence;
+#identity()Lorg/apache/flink/shaded/com/google/common/base/Equivalence;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Equivalence

+###org/apache/flink/shaded/com/google/common/base/FinalizablePhantomReference
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/FinalizablePhantomReference

+###org/apache/flink/shaded/com/google/common/base/FinalizableReference
@0.9.0-milestone-1
+#finalizeReferent()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/FinalizableReference

+###org/apache/flink/shaded/com/google/common/base/FinalizableReferenceQueue
@0.9.0-milestone-1
+#<init>()V
+#close()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/FinalizableReferenceQueue

+###org/apache/flink/shaded/com/google/common/base/FinalizableSoftReference
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/FinalizableSoftReference

+###org/apache/flink/shaded/com/google/common/base/FinalizableWeakReference
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/FinalizableWeakReference

+###org/apache/flink/shaded/com/google/common/base/Function
@0.9.0-milestone-1
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Function

+###org/apache/flink/shaded/com/google/common/base/Functions
@0.9.0-milestone-1
+#toStringFunction()Lorg/apache/flink/shaded/com/google/common/base/Function;
+#identity()Lorg/apache/flink/shaded/com/google/common/base/Function;
+#forMap(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/base/Function;
+#forMap(Ljava/util/Map;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Function;
+#compose(Lorg/apache/flink/shaded/com/google/common/base/Function;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/base/Function;
+#forPredicate(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Function;
+#constant(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Function;
+#forSupplier(Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/base/Function;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Functions

+###org/apache/flink/shaded/com/google/common/base/Joiner$MapJoiner
@0.9.0-milestone-1
+#appendTo(Ljava/lang/Appendable;Ljava/util/Map;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;
+#join(Ljava/util/Map;)Ljava/lang/String;
+#appendTo(Ljava/lang/Appendable;Ljava/lang/Iterable;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;
+#appendTo(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;
+#join(Ljava/lang/Iterable;)Ljava/lang/String;
+#join(Ljava/util/Iterator;)Ljava/lang/String;
+#useForNull(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Joiner$MapJoiner;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Joiner$MapJoiner

+###org/apache/flink/shaded/com/google/common/base/Joiner
@0.9.0-milestone-1
+#on(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Joiner;
+#on(C)Lorg/apache/flink/shaded/com/google/common/base/Joiner;
+#appendTo(Ljava/lang/Appendable;Ljava/lang/Iterable;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/Appendable;[Ljava/lang/Object;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/Appendable;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Appendable;
+#appendTo(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;
+#appendTo(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;
+#appendTo(Ljava/lang/StringBuilder;[Ljava/lang/Object;)Ljava/lang/StringBuilder;
+#appendTo(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/StringBuilder;
+#join(Ljava/lang/Iterable;)Ljava/lang/String;
+#join(Ljava/util/Iterator;)Ljava/lang/String;
+#join([Ljava/lang/Object;)Ljava/lang/String;
+#join(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/String;
+#useForNull(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Joiner;
+#skipNulls()Lorg/apache/flink/shaded/com/google/common/base/Joiner;
+#withKeyValueSeparator(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Joiner$MapJoiner;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Joiner

+###org/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper
@0.9.0-milestone-1
+#omitNullValues()Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;Z)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;C)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;D)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;F)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#add(Ljava/lang/String;J)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(Z)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(C)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(D)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(F)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(I)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#addValue(J)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper

+###org/apache/flink/shaded/com/google/common/base/MoreObjects
@0.9.0-milestone-1
+#firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#toStringHelper(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#toStringHelper(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
+#toStringHelper(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/MoreObjects$ToStringHelper;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/MoreObjects

+###org/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper
@0.9.0-milestone-1
+#omitNullValues()Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;Z)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;C)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;D)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;F)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#add(Ljava/lang/String;J)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(Z)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(C)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(D)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(F)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(I)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#addValue(J)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper

+###org/apache/flink/shaded/com/google/common/base/Objects
@0.9.0-milestone-1
+#equal(Ljava/lang/Object;Ljava/lang/Object;)Z
+#hashCode([Ljava/lang/Object;)I
+#toStringHelper(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;[deprecated]
+#toStringHelper(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;[deprecated]
+#toStringHelper(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Objects$ToStringHelper;[deprecated]
+#firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Objects

+###org/apache/flink/shaded/com/google/common/base/Optional
@0.9.0-milestone-1
+#absent()Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#of(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#fromNullable(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#isPresent()Z
+#get()Ljava/lang/Object;
+#or(Ljava/lang/Object;)Ljava/lang/Object;
+#or(Lorg/apache/flink/shaded/com/google/common/base/Optional;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#or(Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Ljava/lang/Object;
+#orNull()Ljava/lang/Object;
+#asSet()Ljava/util/Set;
+#transform(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#presentInstances(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Optional

+###org/apache/flink/shaded/com/google/common/base/Preconditions
@0.9.0-milestone-1
+#checkArgument(Z)V
+#checkArgument(ZLjava/lang/Object;)V
+#checkArgument(ZLjava/lang/String;[Ljava/lang/Object;)V
+#checkState(Z)V
+#checkState(ZLjava/lang/Object;)V
+#checkState(ZLjava/lang/String;[Ljava/lang/Object;)V
+#checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;
+#checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#checkNotNull(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#checkElementIndex(II)I
+#checkElementIndex(IILjava/lang/String;)I
+#checkPositionIndex(II)I
+#checkPositionIndex(IILjava/lang/String;)I
+#checkPositionIndexes(III)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Preconditions

+###org/apache/flink/shaded/com/google/common/base/Predicate
@0.9.0-milestone-1
+#apply(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Predicate

+###org/apache/flink/shaded/com/google/common/base/Predicates
@0.9.0-milestone-1
+#alwaysTrue()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#alwaysFalse()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#isNull()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#notNull()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#not(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#and(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#and([Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#and(Lorg/apache/flink/shaded/com/google/common/base/Predicate;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#or(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#or([Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#or(Lorg/apache/flink/shaded/com/google/common/base/Predicate;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#equalTo(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#instanceOf(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#assignableFrom(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#in(Ljava/util/Collection;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#compose(Lorg/apache/flink/shaded/com/google/common/base/Predicate;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#containsPattern(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#contains(Ljava/util/regex/Pattern;)Lorg/apache/flink/shaded/com/google/common/base/Predicate;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Predicates

+###org/apache/flink/shaded/com/google/common/base/Splitter$MapSplitter
@0.9.0-milestone-1
+#split(Ljava/lang/CharSequence;)Ljava/util/Map;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Splitter$MapSplitter

+###org/apache/flink/shaded/com/google/common/base/Splitter
@0.9.0-milestone-1
+#on(C)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#on(Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#on(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#on(Ljava/util/regex/Pattern;)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#onPattern(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#fixedLength(I)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#omitEmptyStrings()Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#limit(I)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#trimResults()Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#trimResults(Lorg/apache/flink/shaded/com/google/common/base/CharMatcher;)Lorg/apache/flink/shaded/com/google/common/base/Splitter;
+#split(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
+#splitToList(Ljava/lang/CharSequence;)Ljava/util/List;
+#withKeyValueSeparator(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/Splitter$MapSplitter;
+#withKeyValueSeparator(C)Lorg/apache/flink/shaded/com/google/common/base/Splitter$MapSplitter;
+#withKeyValueSeparator(Lorg/apache/flink/shaded/com/google/common/base/Splitter;)Lorg/apache/flink/shaded/com/google/common/base/Splitter$MapSplitter;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Splitter

+###org/apache/flink/shaded/com/google/common/base/StandardSystemProperty
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/base/StandardSystemProperty;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/base/StandardSystemProperty;
+#key()Ljava/lang/String;
+#value()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/StandardSystemProperty

+###org/apache/flink/shaded/com/google/common/base/Stopwatch
@0.9.0-milestone-1
+#createUnstarted()Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#createUnstarted(Lorg/apache/flink/shaded/com/google/common/base/Ticker;)Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#createStarted()Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#createStarted(Lorg/apache/flink/shaded/com/google/common/base/Ticker;)Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#isRunning()Z
+#start()Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#stop()Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#reset()Lorg/apache/flink/shaded/com/google/common/base/Stopwatch;
+#elapsed(Ljava/util/concurrent/TimeUnit;)J
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Stopwatch

+###org/apache/flink/shaded/com/google/common/base/Strings
@0.9.0-milestone-1
+#nullToEmpty(Ljava/lang/String;)Ljava/lang/String;
+#emptyToNull(Ljava/lang/String;)Ljava/lang/String;
+#isNullOrEmpty(Ljava/lang/String;)Z
+#padStart(Ljava/lang/String;IC)Ljava/lang/String;
+#padEnd(Ljava/lang/String;IC)Ljava/lang/String;
+#repeat(Ljava/lang/String;I)Ljava/lang/String;
+#commonPrefix(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
+#commonSuffix(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Strings

+###org/apache/flink/shaded/com/google/common/base/Supplier
@0.9.0-milestone-1
+#get()Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Supplier

+###org/apache/flink/shaded/com/google/common/base/Suppliers
@0.9.0-milestone-1
+#compose(Lorg/apache/flink/shaded/com/google/common/base/Function;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/base/Supplier;
+#memoize(Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/base/Supplier;
+#memoizeWithExpiration(Lorg/apache/flink/shaded/com/google/common/base/Supplier;JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/base/Supplier;
+#ofInstance(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Supplier;
+#synchronizedSupplier(Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/base/Supplier;
+#supplierFunction()Lorg/apache/flink/shaded/com/google/common/base/Function;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Suppliers

+###org/apache/flink/shaded/com/google/common/base/Throwables
@0.9.0-milestone-1
+#propagateIfInstanceOf(Ljava/lang/Throwable;Ljava/lang/Class;)V
+#propagateIfPossible(Ljava/lang/Throwable;)V
+#propagateIfPossible(Ljava/lang/Throwable;Ljava/lang/Class;)V
+#propagateIfPossible(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/Class;)V
+#propagate(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#getRootCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#getCausalChain(Ljava/lang/Throwable;)Ljava/util/List;
+#getStackTraceAsString(Ljava/lang/Throwable;)Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Throwables

+###org/apache/flink/shaded/com/google/common/base/Ticker
@0.9.0-milestone-1
+#read()J
+#systemTicker()Lorg/apache/flink/shaded/com/google/common/base/Ticker;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Ticker

+###org/apache/flink/shaded/com/google/common/base/Utf8
@0.9.0-milestone-1
+#encodedLength(Ljava/lang/CharSequence;)I
+#isWellFormed([B)Z
+#isWellFormed([BII)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Utf8

+###org/apache/flink/shaded/com/google/common/base/Verify
@0.9.0-milestone-1
+#verify(Z)V
+#verify(ZLjava/lang/String;[Ljava/lang/Object;)V
+#verifyNotNull(Ljava/lang/Object;)Ljava/lang/Object;
+#verifyNotNull(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/Verify

+###org/apache/flink/shaded/com/google/common/base/VerifyException
@0.9.0-milestone-1
+#<init>()V
+#<init>(Ljava/lang/String;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/VerifyException

+###org/apache/flink/shaded/com/google/common/base/internal/Finalizer
@0.9.0-milestone-1
+#startFinalizer(Ljava/lang/Class;Ljava/lang/ref/ReferenceQueue;Ljava/lang/ref/PhantomReference;)V
+#run()V
+#getInheritableThreadLocalsField()Ljava/lang/reflect/Field;
@1.1.0
-###org/apache/flink/shaded/com/google/common/base/internal/Finalizer

+###org/apache/flink/shaded/com/google/common/cache/AbstractCache$SimpleStatsCounter
@0.9.0-milestone-1
+#<init>()V
+#recordHits(I)V
+#recordMisses(I)V
+#recordLoadSuccess(J)V
+#recordLoadException(J)V
+#recordEviction()V
+#snapshot()Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#incrementBy(Lorg/apache/flink/shaded/com/google/common/cache/AbstractCache$StatsCounter;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/AbstractCache$SimpleStatsCounter

+###org/apache/flink/shaded/com/google/common/cache/AbstractCache$StatsCounter
@0.9.0-milestone-1
+#recordHits(I)V
+#recordMisses(I)V
+#recordLoadSuccess(J)V
+#recordLoadException(J)V
+#recordEviction()V
+#snapshot()Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/AbstractCache$StatsCounter

+###org/apache/flink/shaded/com/google/common/cache/AbstractCache
@0.9.0-milestone-1
+#get(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#getAllPresent(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#cleanUp()V
+#size()J
+#invalidate(Ljava/lang/Object;)V
+#invalidateAll(Ljava/lang/Iterable;)V
+#invalidateAll()V
+#stats()Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#asMap()Ljava/util/concurrent/ConcurrentMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/AbstractCache

+###org/apache/flink/shaded/com/google/common/cache/AbstractLoadingCache
@0.9.0-milestone-1
+#getUnchecked(Ljava/lang/Object;)Ljava/lang/Object;
+#getAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#refresh(Ljava/lang/Object;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/AbstractLoadingCache

+###org/apache/flink/shaded/com/google/common/cache/Cache
@0.9.0-milestone-1
+#getIfPresent(Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#getAllPresent(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#invalidate(Ljava/lang/Object;)V
+#invalidateAll(Ljava/lang/Iterable;)V
+#invalidateAll()V
+#size()J
+#stats()Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#asMap()Ljava/util/concurrent/ConcurrentMap;
+#cleanUp()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/Cache

+###org/apache/flink/shaded/com/google/common/cache/CacheBuilder
@0.9.0-milestone-1
+#newBuilder()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#from(Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilderSpec;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#from(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#initialCapacity(I)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#concurrencyLevel(I)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#maximumSize(J)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#maximumWeight(J)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#weigher(Lorg/apache/flink/shaded/com/google/common/cache/Weigher;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#weakKeys()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#weakValues()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#softValues()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#expireAfterWrite(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#expireAfterAccess(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#refreshAfterWrite(JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#ticker(Lorg/apache/flink/shaded/com/google/common/base/Ticker;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#removalListener(Lorg/apache/flink/shaded/com/google/common/cache/RemovalListener;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#recordStats()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilder;
+#build(Lorg/apache/flink/shaded/com/google/common/cache/CacheLoader;)Lorg/apache/flink/shaded/com/google/common/cache/LoadingCache;
+#build()Lorg/apache/flink/shaded/com/google/common/cache/Cache;
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/CacheBuilder

+###org/apache/flink/shaded/com/google/common/cache/CacheBuilderSpec
@0.9.0-milestone-1
+#parse(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilderSpec;
+#disableCaching()Lorg/apache/flink/shaded/com/google/common/cache/CacheBuilderSpec;
+#toParsableString()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/CacheBuilderSpec

+###org/apache/flink/shaded/com/google/common/cache/CacheLoader$InvalidCacheLoadException
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/CacheLoader$InvalidCacheLoadException

+###org/apache/flink/shaded/com/google/common/cache/CacheLoader
@0.9.0-milestone-1
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#reload(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#from(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/cache/CacheLoader;
+#from(Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/cache/CacheLoader;
+#asyncReloading(Lorg/apache/flink/shaded/com/google/common/cache/CacheLoader;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/cache/CacheLoader;
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/CacheLoader

+###org/apache/flink/shaded/com/google/common/cache/CacheStats
@0.9.0-milestone-1
+#<init>(JJJJJJ)V
+#requestCount()J
+#hitCount()J
+#hitRate()D
+#missCount()J
+#missRate()D
+#loadCount()J
+#loadSuccessCount()J
+#loadExceptionCount()J
+#loadExceptionRate()D
+#totalLoadTime()J
+#averageLoadPenalty()D
+#evictionCount()J
+#minus(Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;)Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#plus(Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;)Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/CacheStats

+###org/apache/flink/shaded/com/google/common/cache/ForwardingCache$SimpleForwardingCache
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/ForwardingCache$SimpleForwardingCache

+###org/apache/flink/shaded/com/google/common/cache/ForwardingCache
@0.9.0-milestone-1
+#getIfPresent(Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#getAllPresent(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#invalidate(Ljava/lang/Object;)V
+#invalidateAll(Ljava/lang/Iterable;)V
+#invalidateAll()V
+#size()J
+#stats()Lorg/apache/flink/shaded/com/google/common/cache/CacheStats;
+#asMap()Ljava/util/concurrent/ConcurrentMap;
+#cleanUp()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/ForwardingCache

+###org/apache/flink/shaded/com/google/common/cache/ForwardingLoadingCache$SimpleForwardingLoadingCache
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/ForwardingLoadingCache$SimpleForwardingLoadingCache

+###org/apache/flink/shaded/com/google/common/cache/ForwardingLoadingCache
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getUnchecked(Ljava/lang/Object;)Ljava/lang/Object;
+#getAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#refresh(Ljava/lang/Object;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/ForwardingLoadingCache

+###org/apache/flink/shaded/com/google/common/cache/LoadingCache
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getUnchecked(Ljava/lang/Object;)Ljava/lang/Object;
+#getAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#refresh(Ljava/lang/Object;)V
+#asMap()Ljava/util/concurrent/ConcurrentMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/LoadingCache

+###org/apache/flink/shaded/com/google/common/cache/RemovalCause
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/cache/RemovalCause;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/cache/RemovalCause;
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/RemovalCause

+###org/apache/flink/shaded/com/google/common/cache/RemovalListener
@0.9.0-milestone-1
+#onRemoval(Lorg/apache/flink/shaded/com/google/common/cache/RemovalNotification;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/RemovalListener

+###org/apache/flink/shaded/com/google/common/cache/RemovalListeners
@0.9.0-milestone-1
+#asynchronous(Lorg/apache/flink/shaded/com/google/common/cache/RemovalListener;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/cache/RemovalListener;
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/RemovalListeners

+###org/apache/flink/shaded/com/google/common/cache/RemovalNotification
@0.9.0-milestone-1
+#getCause()Lorg/apache/flink/shaded/com/google/common/cache/RemovalCause;
+#wasEvicted()Z
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/RemovalNotification

+###org/apache/flink/shaded/com/google/common/cache/Weigher
@0.9.0-milestone-1
+#weigh(Ljava/lang/Object;Ljava/lang/Object;)I
@1.1.0
-###org/apache/flink/shaded/com/google/common/cache/Weigher

+###org/apache/flink/shaded/com/google/common/collect/AbstractIterator
@0.9.0-milestone-1
+#hasNext()Z
+#next()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/AbstractIterator

+###org/apache/flink/shaded/com/google/common/collect/AbstractSequentialIterator
@0.9.0-milestone-1
+#hasNext()Z
+#next()Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/AbstractSequentialIterator

+###org/apache/flink/shaded/com/google/common/collect/ArrayListMultimap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/ArrayListMultimap;
+#create(II)Lorg/apache/flink/shaded/com/google/common/collect/ArrayListMultimap;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ArrayListMultimap;
+#trimToSize()V
+#equals(Ljava/lang/Object;)Z
+#asMap()Ljava/util/Map;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;
+#removeAll(Ljava/lang/Object;)Ljava/util/List;
+#get(Ljava/lang/Object;)Ljava/util/List;
+#entries()Ljava/util/Collection;
+#values()Ljava/util/Collection;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#size()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ArrayListMultimap

+###org/apache/flink/shaded/com/google/common/collect/ArrayTable
@0.9.0-milestone-1
+#create(Ljava/lang/Iterable;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ArrayTable;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/ArrayTable;
+#rowKeyList()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#columnKeyList()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#at(II)Ljava/lang/Object;
+#set(IILjava/lang/Object;)Ljava/lang/Object;
+#toArray(Ljava/lang/Class;)[[Ljava/lang/Object;
+#clear()V[deprecated]
+#eraseAll()V
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsColumn(Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#erase(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#cellSet()Ljava/util/Set;
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#columnKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#columnMap()Ljava/util/Map;
+#row(Ljava/lang/Object;)Ljava/util/Map;
+#rowKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#rowMap()Ljava/util/Map;
+#values()Ljava/util/Collection;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#columnKeySet()Ljava/util/Set;
+#rowKeySet()Ljava/util/Set;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ArrayTable

+###org/apache/flink/shaded/com/google/common/collect/BiMap
@0.9.0-milestone-1
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#forcePut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#values()Ljava/util/Set;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/BiMap

+###org/apache/flink/shaded/com/google/common/collect/BinaryTreeTraverser
@0.9.0-milestone-1
+#<init>()V
+#leftChild(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#rightChild(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#children(Ljava/lang/Object;)Ljava/lang/Iterable;
+#inOrderTraversal(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/BinaryTreeTraverser

+###org/apache/flink/shaded/com/google/common/collect/BoundType
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/collect/BoundType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/BoundType;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/BoundType

+###org/apache/flink/shaded/com/google/common/collect/ClassToInstanceMap
@0.9.0-milestone-1
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ClassToInstanceMap

+###org/apache/flink/shaded/com/google/common/collect/Collections2
@0.9.0-milestone-1
+#filter(Ljava/util/Collection;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/Collection;
+#transform(Ljava/util/Collection;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/Collection;
+#orderedPermutations(Ljava/lang/Iterable;)Ljava/util/Collection;
+#orderedPermutations(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/util/Collection;
+#permutations(Ljava/util/Collection;)Ljava/util/Collection;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Collections2

+###org/apache/flink/shaded/com/google/common/collect/ComparisonChain
@0.9.0-milestone-1
+#start()Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(II)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(JJ)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(FF)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compare(DD)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compareTrueFirst(ZZ)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#compareFalseFirst(ZZ)Lorg/apache/flink/shaded/com/google/common/collect/ComparisonChain;
+#result()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ComparisonChain

+###org/apache/flink/shaded/com/google/common/collect/ComputationException
@0.9.0-milestone-1
+#<init>(Ljava/lang/Throwable;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ComputationException

+###org/apache/flink/shaded/com/google/common/collect/ConcurrentHashMultiset
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/ConcurrentHashMultiset;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ConcurrentHashMultiset;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;)Lorg/apache/flink/shaded/com/google/common/collect/ConcurrentHashMultiset;
+#count(Ljava/lang/Object;)I
+#size()I
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#removeExactly(Ljava/lang/Object;I)Z
+#setCount(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;II)Z
+#createEntrySet()Ljava/util/Set;
+#isEmpty()Z
+#clear()V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#elementSet()Ljava/util/Set;
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#remove(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ConcurrentHashMultiset

+###org/apache/flink/shaded/com/google/common/collect/ContiguousSet
@0.9.0-milestone-1
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Range;Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#headSet(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#headSet(Ljava/lang/Comparable;Z)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#subSet(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#subSet(Ljava/lang/Comparable;ZLjava/lang/Comparable;Z)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#tailSet(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#tailSet(Ljava/lang/Comparable;Z)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#intersection(Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;)Lorg/apache/flink/shaded/com/google/common/collect/ContiguousSet;
+#range()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#range(Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#toString()Ljava/lang/String;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;[deprecated]
+#tailSet(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#tailSet(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#headSet(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#headSet(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ContiguousSet

+###org/apache/flink/shaded/com/google/common/collect/DiscreteDomain
@0.9.0-milestone-1
+#integers()Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;
+#longs()Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;
+#bigIntegers()Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;
+#next(Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#previous(Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#distance(Ljava/lang/Comparable;Ljava/lang/Comparable;)J
+#minValue()Ljava/lang/Comparable;
+#maxValue()Ljava/lang/Comparable;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/DiscreteDomain

+###org/apache/flink/shaded/com/google/common/collect/EnumBiMap
@0.9.0-milestone-1
+#create(Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/EnumBiMap;
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/EnumBiMap;
+#keyType()Ljava/lang/Class;
+#valueType()Ljava/lang/Class;
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Set;
+#keySet()Ljava/util/Set;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#clear()V
+#putAll(Ljava/util/Map;)V
+#containsValue(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/EnumBiMap

+###org/apache/flink/shaded/com/google/common/collect/EnumHashBiMap
@0.9.0-milestone-1
+#create(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/EnumHashBiMap;
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/EnumHashBiMap;
+#put(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
+#forcePut(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
+#keyType()Ljava/lang/Class;
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Set;
+#keySet()Ljava/util/Set;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#clear()V
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#forcePut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#containsValue(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/EnumHashBiMap

+###org/apache/flink/shaded/com/google/common/collect/EnumMultiset
@0.9.0-milestone-1
+#create(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/EnumMultiset;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/EnumMultiset;
+#create(Ljava/lang/Iterable;Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/EnumMultiset;
+#remove(Ljava/lang/Object;I)I
+#count(Ljava/lang/Object;)I
+#iterator()Ljava/util/Iterator;
+#size()I
+#clear()V
+#entrySet()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#elementSet()Ljava/util/Set;
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#remove(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/EnumMultiset

+###org/apache/flink/shaded/com/google/common/collect/EvictingQueue
@0.9.0-milestone-1
+#create(I)Lorg/apache/flink/shaded/com/google/common/collect/EvictingQueue;
+#remainingCapacity()I
+#offer(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/EvictingQueue

+###org/apache/flink/shaded/com/google/common/collect/FluentIterable
@0.9.0-milestone-1
+#from(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#from(Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;[deprecated]
+#of([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#toString()Ljava/lang/String;
+#size()I
+#contains(Ljava/lang/Object;)Z
+#cycle()Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#append(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#append([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#filter(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#filter(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#anyMatch(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#allMatch(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#firstMatch(Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#transform(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#transformAndConcat(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#first()Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#last()Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#skip(I)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#limit(I)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#isEmpty()Z
+#toList()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#toSortedList(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#toSet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#toSortedSet(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#toMap(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#index(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#uniqueIndex(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#toArray(Ljava/lang/Class;)[Ljava/lang/Object;
+#copyInto(Ljava/util/Collection;)Ljava/util/Collection;
+#join(Lorg/apache/flink/shaded/com/google/common/base/Joiner;)Ljava/lang/String;
+#get(I)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/FluentIterable

+###org/apache/flink/shaded/com/google/common/collect/ForwardingBlockingDeque
@0.9.0-milestone-1
+#remainingCapacity()I
+#putFirst(Ljava/lang/Object;)V
+#putLast(Ljava/lang/Object;)V
+#offerFirst(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#offerLast(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#takeFirst()Ljava/lang/Object;
+#takeLast()Ljava/lang/Object;
+#pollFirst(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#pollLast(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#put(Ljava/lang/Object;)V
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#take()Ljava/lang/Object;
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#drainTo(Ljava/util/Collection;)I
+#drainTo(Ljava/util/Collection;I)I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingBlockingDeque

+###org/apache/flink/shaded/com/google/common/collect/ForwardingCollection
@0.9.0-milestone-1
+#iterator()Ljava/util/Iterator;
+#size()I
+#removeAll(Ljava/util/Collection;)Z
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingCollection

+###org/apache/flink/shaded/com/google/common/collect/ForwardingConcurrentMap
@0.9.0-milestone-1
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingConcurrentMap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingDeque
@0.9.0-milestone-1
+#addFirst(Ljava/lang/Object;)V
+#addLast(Ljava/lang/Object;)V
+#descendingIterator()Ljava/util/Iterator;
+#getFirst()Ljava/lang/Object;
+#getLast()Ljava/lang/Object;
+#offerFirst(Ljava/lang/Object;)Z
+#offerLast(Ljava/lang/Object;)Z
+#peekFirst()Ljava/lang/Object;
+#peekLast()Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;
+#pollLast()Ljava/lang/Object;
+#pop()Ljava/lang/Object;
+#push(Ljava/lang/Object;)V
+#removeFirst()Ljava/lang/Object;
+#removeLast()Ljava/lang/Object;
+#removeFirstOccurrence(Ljava/lang/Object;)Z
+#removeLastOccurrence(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingDeque

+###org/apache/flink/shaded/com/google/common/collect/ForwardingIterator
@0.9.0-milestone-1
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingIterator

+###org/apache/flink/shaded/com/google/common/collect/ForwardingList
@0.9.0-milestone-1
+#add(ILjava/lang/Object;)V
+#addAll(ILjava/util/Collection;)Z
+#get(I)Ljava/lang/Object;
+#indexOf(Ljava/lang/Object;)I
+#lastIndexOf(Ljava/lang/Object;)I
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#remove(I)Ljava/lang/Object;
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#subList(II)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingList

+###org/apache/flink/shaded/com/google/common/collect/ForwardingListIterator
@0.9.0-milestone-1
+#add(Ljava/lang/Object;)V
+#hasPrevious()Z
+#nextIndex()I
+#previous()Ljava/lang/Object;
+#previousIndex()I
+#set(Ljava/lang/Object;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingListIterator

+###org/apache/flink/shaded/com/google/common/collect/ForwardingListMultimap
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/util/List;
+#removeAll(Ljava/lang/Object;)Ljava/util/List;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingListMultimap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardEntrySet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingMap;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardEntrySet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardKeySet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingMap;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardKeySet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardValues
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingMap;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMap$StandardValues

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMap
@0.9.0-milestone-1
+#size()I
+#isEmpty()Z
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMapEntry
@0.9.0-milestone-1
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMapEntry

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMultimap
@0.9.0-milestone-1
+#asMap()Ljava/util/Map;
+#clear()V
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entries()Ljava/util/Collection;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#isEmpty()Z
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#size()I
+#values()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMultimap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMultiset$StandardElementSet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingMultiset;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMultiset$StandardElementSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingMultiset
@0.9.0-milestone-1
+#count(Ljava/lang/Object;)I
+#add(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#elementSet()Ljava/util/Set;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#setCount(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;II)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingMultiset

+###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap$StandardDescendingMap
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap$StandardDescendingMap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap$StandardNavigableKeySet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap$StandardNavigableKeySet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap
@0.9.0-milestone-1
+#lowerEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#lowerKey(Ljava/lang/Object;)Ljava/lang/Object;
+#floorEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#floorKey(Ljava/lang/Object;)Ljava/lang/Object;
+#ceilingEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#ceilingKey(Ljava/lang/Object;)Ljava/lang/Object;
+#higherEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#higherKey(Ljava/lang/Object;)Ljava/lang/Object;
+#firstEntry()Ljava/util/Map$Entry;
+#lastEntry()Ljava/util/Map$Entry;
+#pollFirstEntry()Ljava/util/Map$Entry;
+#pollLastEntry()Ljava/util/Map$Entry;
+#descendingMap()Ljava/util/NavigableMap;
+#navigableKeySet()Ljava/util/NavigableSet;
+#descendingKeySet()Ljava/util/NavigableSet;
+#subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
+#headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
+#tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableMap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableSet$StandardDescendingSet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingNavigableSet;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableSet$StandardDescendingSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableSet
@0.9.0-milestone-1
+#lower(Ljava/lang/Object;)Ljava/lang/Object;
+#floor(Ljava/lang/Object;)Ljava/lang/Object;
+#ceiling(Ljava/lang/Object;)Ljava/lang/Object;
+#higher(Ljava/lang/Object;)Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;
+#pollLast()Ljava/lang/Object;
+#descendingSet()Ljava/util/NavigableSet;
+#descendingIterator()Ljava/util/Iterator;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
+#headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingNavigableSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingObject
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingObject

+###org/apache/flink/shaded/com/google/common/collect/ForwardingQueue
@0.9.0-milestone-1
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#remove()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#element()Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingQueue

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSet
@0.9.0-milestone-1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSetMultimap
@0.9.0-milestone-1
+#<init>()V
+#entries()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#entries()Ljava/util/Collection;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSetMultimap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMap$StandardKeySet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingSortedMap;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMap$StandardKeySet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMap
@0.9.0-milestone-1
+#comparator()Ljava/util/Comparator;
+#firstKey()Ljava/lang/Object;
+#headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#lastKey()Ljava/lang/Object;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
+#tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset$StandardDescendingMultiset
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset$StandardDescendingMultiset

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset$StandardElementSet
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset$StandardElementSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset
@0.9.0-milestone-1
+#elementSet()Ljava/util/NavigableSet;
+#comparator()Ljava/util/Comparator;
+#descendingMultiset()Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#firstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#lastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#pollFirstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#pollLastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#headMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#subMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#tailMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#elementSet()Ljava/util/Set;
+#elementSet()Ljava/util/SortedSet;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedMultiset

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedSet
@0.9.0-milestone-1
+#comparator()Ljava/util/Comparator;
+#first()Ljava/lang/Object;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#last()Ljava/lang/Object;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedSet

+###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedSetMultimap
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/util/SortedSet;
+#removeAll(Ljava/lang/Object;)Ljava/util/SortedSet;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/SortedSet;
+#valueComparator()Ljava/util/Comparator;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingSortedSetMultimap

+###org/apache/flink/shaded/com/google/common/collect/ForwardingTable
@0.9.0-milestone-1
+#cellSet()Ljava/util/Set;
+#clear()V
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#columnKeySet()Ljava/util/Set;
+#columnMap()Ljava/util/Map;
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsColumn(Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#row(Ljava/lang/Object;)Ljava/util/Map;
+#rowKeySet()Ljava/util/Set;
+#rowMap()Ljava/util/Map;
+#size()I
+#values()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ForwardingTable

+###org/apache/flink/shaded/com/google/common/collect/HashBasedTable
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/HashBasedTable;
+#create(II)Lorg/apache/flink/shaded/com/google/common/collect/HashBasedTable;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/HashBasedTable;
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsColumn(Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#columnMap()Ljava/util/Map;
+#rowMap()Ljava/util/Map;
+#values()Ljava/util/Collection;
+#columnKeySet()Ljava/util/Set;
+#rowKeySet()Ljava/util/Set;
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#row(Ljava/lang/Object;)Ljava/util/Map;
+#cellSet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#size()I
+#isEmpty()Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/HashBasedTable

+###org/apache/flink/shaded/com/google/common/collect/HashBiMap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/HashBiMap;
+#create(I)Lorg/apache/flink/shaded/com/google/common/collect/HashBiMap;
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/HashBiMap;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#forcePut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#size()I
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Set;
+#entrySet()Ljava/util/Set;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#values()Ljava/util/Collection;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/HashBiMap

+###org/apache/flink/shaded/com/google/common/collect/HashMultimap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/HashMultimap;
+#create(II)Lorg/apache/flink/shaded/com/google/common/collect/HashMultimap;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/HashMultimap;
+#equals(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#asMap()Ljava/util/Map;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#entries()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#values()Ljava/util/Collection;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#size()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/HashMultimap

+###org/apache/flink/shaded/com/google/common/collect/HashMultiset
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/HashMultiset;
+#create(I)Lorg/apache/flink/shaded/com/google/common/collect/HashMultiset;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/HashMultiset;
+#setCount(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#add(Ljava/lang/Object;I)I
+#count(Ljava/lang/Object;)I
+#iterator()Ljava/util/Iterator;
+#size()I
+#clear()V
+#entrySet()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#elementSet()Ljava/util/Set;
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#setCount(Ljava/lang/Object;II)Z
+#remove(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/HashMultiset

+###org/apache/flink/shaded/com/google/common/collect/ImmutableBiMap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap$Builder;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableBiMap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableBiMap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap$Builder;
+#copyOf(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableBiMap;
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#forcePut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#values()Ljava/util/Collection;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#values()Ljava/util/Set;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableBiMap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Class;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap$Builder;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap
@0.9.0-milestone-1
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap$Builder;
+#copyOf(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap;
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableClassToInstanceMap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder
@0.9.0-milestone-1
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableCollection
@0.9.0-milestone-1
+#iterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z[deprecated]
+#remove(Ljava/lang/Object;)Z[deprecated]
+#addAll(Ljava/util/Collection;)Z[deprecated]
+#removeAll(Ljava/util/Collection;)Z[deprecated]
+#retainAll(Ljava/util/Collection;)Z[deprecated]
+#clear()V[deprecated]
+#asList()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#iterator()Ljava/util/Iterator;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableCollection

+###org/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder
@0.9.0-milestone-1
+#<init>()V
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$ArrayBasedBuilder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableList
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#copyOf(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#copyOf(Ljava/util/Collection;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#copyOf(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#copyOf([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#iterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#listIterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableListIterator;
+#listIterator(I)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableListIterator;
+#indexOf(Ljava/lang/Object;)I
+#lastIndexOf(Ljava/lang/Object;)I
+#contains(Ljava/lang/Object;)Z
+#subList(II)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#addAll(ILjava/util/Collection;)Z[deprecated]
+#set(ILjava/lang/Object;)Ljava/lang/Object;[deprecated]
+#add(ILjava/lang/Object;)V[deprecated]
+#remove(I)Ljava/lang/Object;[deprecated]
+#asList()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#reverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList$Builder;
+#iterator()Ljava/util/Iterator;
+#subList(II)Ljava/util/List;
+#listIterator(I)Ljava/util/ListIterator;
+#listIterator()Ljava/util/ListIterator;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableList

+###org/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#putAll(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#orderKeysBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#orderValuesBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#orderValuesBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#orderKeysBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap$Builder;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#get(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#removeAll(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;[deprecated]
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;[deprecated]
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#get(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#removeAll(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;
+#removeAll(Ljava/lang/Object;)Ljava/util/List;
+#get(Ljava/lang/Object;)Ljava/util/List;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#copyOf(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#remove(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#putAll(Ljava/util/Map;)V[deprecated]
+#clear()V[deprecated]
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#entrySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#keySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#asMultimap()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#keySet()Ljava/util/Set;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#orderKeysBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#orderValuesBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMultimap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#removeAll(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;[deprecated]
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;[deprecated]
+#clear()V[deprecated]
+#get(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z[deprecated]
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z[deprecated]
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z[deprecated]
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z[deprecated]
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#size()I
+#keySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#asMap()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#entries()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#asMap()Ljava/util/Map;
+#values()Ljava/util/Collection;
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#entries()Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#isEmpty()Z
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMultimap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder
@0.9.0-milestone-1
+#<init>()V
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#addCopies(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#setCount(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableMultiset
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#copyOf([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#copyOf(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#copyOf(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#iterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#add(Ljava/lang/Object;I)I[deprecated]
+#remove(Ljava/lang/Object;I)I[deprecated]
+#setCount(Ljava/lang/Object;I)I[deprecated]
+#setCount(Ljava/lang/Object;II)Z[deprecated]
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#entrySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#iterator()Ljava/util/Iterator;
+#entrySet()Ljava/util/Set;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableMultiset

+###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Lorg/apache/flink/shaded/com/google/common/collect/Range;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap;
+#of(Lorg/apache/flink/shaded/com/google/common/collect/Range;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap$Builder;
+#get(Ljava/lang/Comparable;)Ljava/lang/Object;
+#getEntry(Ljava/lang/Comparable;)Ljava/util/Map$Entry;
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#put(Lorg/apache/flink/shaded/com/google/common/collect/Range;Ljava/lang/Object;)V
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;)V
+#clear()V
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#asMapOfRanges()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#subRangeMap(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#subRangeMap(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;
+#asMapOfRanges()Ljava/util/Map;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeMap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet$Builder
@0.9.0-milestone-1
+#<init>()V
+#add(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet$Builder;
+#addAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
+#of(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
+#encloses(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Z
+#rangeContaining(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#isEmpty()Z
+#add(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#addAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#removeAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#asRanges()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#complement()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
+#subRangeSet(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet;
+#asSet(Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet$Builder;
+#equals(Ljava/lang/Object;)Z
+#enclosesAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Z
+#clear()V
+#contains(Ljava/lang/Comparable;)Z
+#subRangeSet(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#complement()Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#asRanges()Ljava/util/Set;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableRangeSet

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder
@0.9.0-milestone-1
+#<init>()V
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$ArrayBasedBuilder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSet
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#copyOf([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#copyOf(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#copyOf(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#copyOf(Ljava/util/Collection;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#iterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#iterator()Ljava/util/Iterator;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSet

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder
@0.9.0-milestone-1
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#putAll(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#orderKeysBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#orderValuesBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#orderValuesBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#orderKeysBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap$Builder;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap$Builder;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#get(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;
+#removeAll(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;[deprecated]
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;[deprecated]
+#entries()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#entries()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#inverse()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#get(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#removeAll(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#entries()Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#entries()Ljava/util/Set;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Set;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder
@0.9.0-milestone-1
+#<init>(Ljava/util/Comparator;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#putAll(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#put(Ljava/util/Map$Entry;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap$Builder;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#of(Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#of(Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#of(Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#of(Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#of(Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#copyOf(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#copyOf(Ljava/util/Map;Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#copyOfSorted(Ljava/util/SortedMap;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#naturalOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#orderedBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#reverseOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap$Builder;
+#size()I
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#keySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#comparator()Ljava/util/Comparator;
+#firstKey()Ljava/lang/Object;
+#lastKey()Ljava/lang/Object;
+#headMap(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#headMap(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#tailMap(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#tailMap(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#lowerEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#lowerKey(Ljava/lang/Object;)Ljava/lang/Object;
+#floorEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#floorKey(Ljava/lang/Object;)Ljava/lang/Object;
+#ceilingEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#ceilingKey(Ljava/lang/Object;)Ljava/lang/Object;
+#higherEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#higherKey(Ljava/lang/Object;)Ljava/lang/Object;
+#firstEntry()Ljava/util/Map$Entry;
+#lastEntry()Ljava/util/Map$Entry;
+#pollFirstEntry()Ljava/util/Map$Entry;[deprecated]
+#pollLastEntry()Ljava/util/Map$Entry;[deprecated]
+#descendingMap()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap;
+#navigableKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#descendingKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#keySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#keySet()Ljava/util/Set;
+#tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
+#tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
+#headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
+#subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
+#descendingKeySet()Ljava/util/NavigableSet;
+#navigableKeySet()Ljava/util/NavigableSet;
+#descendingMap()Ljava/util/NavigableMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMap

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder
@0.9.0-milestone-1
+#<init>(Ljava/util/Comparator;)V
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#addCopies(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#setCount(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#setCount(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#addCopies(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOf([Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOf(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOf(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOf(Ljava/util/Comparator;Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOf(Ljava/util/Comparator;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#copyOfSorted(Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#comparator()Ljava/util/Comparator;
+#elementSet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#descendingMultiset()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#pollFirstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;[deprecated]
+#pollLastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;[deprecated]
+#headMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#subMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#tailMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset;
+#orderedBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#reverseOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#naturalOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset$Builder;
+#elementSet()Ljava/util/Set;
+#tailMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#subMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#headMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#descendingMultiset()Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#elementSet()Ljava/util/NavigableSet;
+#elementSet()Ljava/util/SortedSet;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedMultiset

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder
@0.9.0-milestone-1
+#<init>(Ljava/util/Comparator;)V
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet$Builder;
+#addAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$ArrayBasedBuilder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#addAll(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
+#add(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection$Builder;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#of(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf([Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/util/Collection;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/util/Comparator;Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/util/Comparator;Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOf(Ljava/util/Comparator;Ljava/util/Collection;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#copyOfSorted(Ljava/util/SortedSet;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#orderedBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#reverseOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#naturalOrder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet$Builder;
+#comparator()Ljava/util/Comparator;
+#iterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#headSet(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#headSet(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#tailSet(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#tailSet(Ljava/lang/Object;Z)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#lower(Ljava/lang/Object;)Ljava/lang/Object;
+#floor(Ljava/lang/Object;)Ljava/lang/Object;
+#ceiling(Ljava/lang/Object;)Ljava/lang/Object;
+#higher(Ljava/lang/Object;)Ljava/lang/Object;
+#first()Ljava/lang/Object;
+#last()Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;[deprecated]
+#pollLast()Ljava/lang/Object;[deprecated]
+#descendingSet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet;
+#descendingIterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#iterator()Ljava/util/Iterator;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
+#descendingIterator()Ljava/util/Iterator;
+#descendingSet()Ljava/util/NavigableSet;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableSortedSet

+###org/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder
@0.9.0-milestone-1
+#<init>()V
+#orderRowsBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#orderColumnsBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#put(Lorg/apache/flink/shaded/com/google/common/collect/Table$Cell;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder

+###org/apache/flink/shaded/com/google/common/collect/ImmutableTable
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable;
+#copyOf(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable;
+#builder()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableTable$Builder;
+#cellSet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#values()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;
+#column(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#columnKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#columnMap()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#row(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#rowKeySet()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#rowMap()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#clear()V[deprecated]
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V[deprecated]
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#values()Ljava/util/Collection;
+#cellSet()Ljava/util/Set;
+#isEmpty()Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#columnKeySet()Ljava/util/Set;
+#rowKeySet()Ljava/util/Set;
+#containsColumn(Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#columnMap()Ljava/util/Map;
+#rowMap()Ljava/util/Map;
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#row(Ljava/lang/Object;)Ljava/util/Map;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ImmutableTable

+###org/apache/flink/shaded/com/google/common/collect/Interner
@0.9.0-milestone-1
+#intern(Ljava/lang/Object;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Interner

+###org/apache/flink/shaded/com/google/common/collect/Interners
@0.9.0-milestone-1
+#newStrongInterner()Lorg/apache/flink/shaded/com/google/common/collect/Interner;
+#newWeakInterner()Lorg/apache/flink/shaded/com/google/common/collect/Interner;
+#asFunction(Lorg/apache/flink/shaded/com/google/common/collect/Interner;)Lorg/apache/flink/shaded/com/google/common/base/Function;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Interners

+###org/apache/flink/shaded/com/google/common/collect/Iterables
@0.9.0-milestone-1
+#unmodifiableIterable(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#unmodifiableIterable(Lorg/apache/flink/shaded/com/google/common/collect/ImmutableCollection;)Ljava/lang/Iterable;[deprecated]
+#size(Ljava/lang/Iterable;)I
+#contains(Ljava/lang/Iterable;Ljava/lang/Object;)Z
+#removeAll(Ljava/lang/Iterable;Ljava/util/Collection;)Z
+#retainAll(Ljava/lang/Iterable;Ljava/util/Collection;)Z
+#removeIf(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#elementsEqual(Ljava/lang/Iterable;Ljava/lang/Iterable;)Z
+#toString(Ljava/lang/Iterable;)Ljava/lang/String;
+#getOnlyElement(Ljava/lang/Iterable;)Ljava/lang/Object;
+#getOnlyElement(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;
+#toArray(Ljava/lang/Iterable;Ljava/lang/Class;)[Ljava/lang/Object;
+#addAll(Ljava/util/Collection;Ljava/lang/Iterable;)Z
+#frequency(Ljava/lang/Iterable;Ljava/lang/Object;)I
+#cycle(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#cycle([Ljava/lang/Object;)Ljava/lang/Iterable;
+#concat(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#concat(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#concat(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#concat([Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#concat(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#partition(Ljava/lang/Iterable;I)Ljava/lang/Iterable;
+#paddedPartition(Ljava/lang/Iterable;I)Ljava/lang/Iterable;
+#filter(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/lang/Iterable;
+#filter(Ljava/lang/Iterable;Ljava/lang/Class;)Ljava/lang/Iterable;
+#any(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#all(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#find(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/lang/Object;
+#find(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;Ljava/lang/Object;)Ljava/lang/Object;
+#tryFind(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#indexOf(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)I
+#transform(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/lang/Iterable;
+#get(Ljava/lang/Iterable;I)Ljava/lang/Object;
+#get(Ljava/lang/Iterable;ILjava/lang/Object;)Ljava/lang/Object;
+#getFirst(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;
+#getLast(Ljava/lang/Iterable;)Ljava/lang/Object;
+#getLast(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;
+#skip(Ljava/lang/Iterable;I)Ljava/lang/Iterable;
+#limit(Ljava/lang/Iterable;I)Ljava/lang/Iterable;
+#consumingIterable(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#isEmpty(Ljava/lang/Iterable;)Z
+#mergeSorted(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/lang/Iterable;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Iterables

+###org/apache/flink/shaded/com/google/common/collect/Iterators
@0.9.0-milestone-1
+#emptyIterator()Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;[deprecated]
+#unmodifiableIterator(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#unmodifiableIterator(Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;[deprecated]
+#size(Ljava/util/Iterator;)I
+#contains(Ljava/util/Iterator;Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Iterator;Ljava/util/Collection;)Z
+#removeIf(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#retainAll(Ljava/util/Iterator;Ljava/util/Collection;)Z
+#elementsEqual(Ljava/util/Iterator;Ljava/util/Iterator;)Z
+#toString(Ljava/util/Iterator;)Ljava/lang/String;
+#getOnlyElement(Ljava/util/Iterator;)Ljava/lang/Object;
+#getOnlyElement(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
+#toArray(Ljava/util/Iterator;Ljava/lang/Class;)[Ljava/lang/Object;
+#addAll(Ljava/util/Collection;Ljava/util/Iterator;)Z
+#frequency(Ljava/util/Iterator;Ljava/lang/Object;)I
+#cycle(Ljava/lang/Iterable;)Ljava/util/Iterator;
+#cycle([Ljava/lang/Object;)Ljava/util/Iterator;
+#concat(Ljava/util/Iterator;Ljava/util/Iterator;)Ljava/util/Iterator;
+#concat(Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Iterator;)Ljava/util/Iterator;
+#concat(Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Iterator;)Ljava/util/Iterator;
+#concat([Ljava/util/Iterator;)Ljava/util/Iterator;
+#concat(Ljava/util/Iterator;)Ljava/util/Iterator;
+#partition(Ljava/util/Iterator;I)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#paddedPartition(Ljava/util/Iterator;I)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#filter(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#filter(Ljava/util/Iterator;Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#any(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#all(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Z
+#find(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/lang/Object;
+#find(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;Ljava/lang/Object;)Ljava/lang/Object;
+#tryFind(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#indexOf(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)I
+#transform(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/Iterator;
+#get(Ljava/util/Iterator;I)Ljava/lang/Object;
+#get(Ljava/util/Iterator;ILjava/lang/Object;)Ljava/lang/Object;
+#getNext(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
+#getLast(Ljava/util/Iterator;)Ljava/lang/Object;
+#getLast(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
+#advance(Ljava/util/Iterator;I)I
+#limit(Ljava/util/Iterator;I)Ljava/util/Iterator;
+#consumingIterator(Ljava/util/Iterator;)Ljava/util/Iterator;
+#forArray([Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#singletonIterator(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#forEnumeration(Ljava/util/Enumeration;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
+#asEnumeration(Ljava/util/Iterator;)Ljava/util/Enumeration;
+#peekingIterator(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/collect/PeekingIterator;
+#peekingIterator(Lorg/apache/flink/shaded/com/google/common/collect/PeekingIterator;)Lorg/apache/flink/shaded/com/google/common/collect/PeekingIterator;[deprecated]
+#mergeSorted(Ljava/lang/Iterable;Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Iterators

+###org/apache/flink/shaded/com/google/common/collect/LinkedHashMultimap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultimap;
+#create(II)Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultimap;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultimap;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#entries()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#clear()V
+#equals(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#asMap()Ljava/util/Map;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#entries()Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#containsKey(Ljava/lang/Object;)Z
+#size()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/LinkedHashMultimap

+###org/apache/flink/shaded/com/google/common/collect/LinkedHashMultiset
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultiset;
+#create(I)Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultiset;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/LinkedHashMultiset;
+#setCount(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#add(Ljava/lang/Object;I)I
+#count(Ljava/lang/Object;)I
+#iterator()Ljava/util/Iterator;
+#size()I
+#clear()V
+#entrySet()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#elementSet()Ljava/util/Set;
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#setCount(Ljava/lang/Object;II)Z
+#remove(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/LinkedHashMultiset

+###org/apache/flink/shaded/com/google/common/collect/LinkedListMultimap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/LinkedListMultimap;
+#create(I)Lorg/apache/flink/shaded/com/google/common/collect/LinkedListMultimap;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/LinkedListMultimap;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;
+#removeAll(Ljava/lang/Object;)Ljava/util/List;
+#clear()V
+#get(Ljava/lang/Object;)Ljava/util/List;
+#values()Ljava/util/List;
+#entries()Ljava/util/List;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#asMap()Ljava/util/Map;
+#values()Ljava/util/Collection;
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#keySet()Ljava/util/Set;
+#entries()Ljava/util/Collection;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/LinkedListMultimap

+###org/apache/flink/shaded/com/google/common/collect/ListMultimap
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/util/List;
+#removeAll(Ljava/lang/Object;)Ljava/util/List;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;
+#asMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ListMultimap

+###org/apache/flink/shaded/com/google/common/collect/Lists
@0.9.0-milestone-1
+#newArrayList()Ljava/util/ArrayList;
+#newArrayList([Ljava/lang/Object;)Ljava/util/ArrayList;
+#newArrayList(Ljava/lang/Iterable;)Ljava/util/ArrayList;
+#newArrayList(Ljava/util/Iterator;)Ljava/util/ArrayList;
+#newArrayListWithCapacity(I)Ljava/util/ArrayList;
+#newArrayListWithExpectedSize(I)Ljava/util/ArrayList;
+#newLinkedList()Ljava/util/LinkedList;
+#newLinkedList(Ljava/lang/Iterable;)Ljava/util/LinkedList;
+#newCopyOnWriteArrayList()Ljava/util/concurrent/CopyOnWriteArrayList;
+#newCopyOnWriteArrayList(Ljava/lang/Iterable;)Ljava/util/concurrent/CopyOnWriteArrayList;
+#asList(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
+#asList(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
+#transform(Ljava/util/List;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/List;
+#partition(Ljava/util/List;I)Ljava/util/List;
+#charactersOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#charactersOf(Ljava/lang/CharSequence;)Ljava/util/List;
+#reverse(Ljava/util/List;)Ljava/util/List;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Lists

+###org/apache/flink/shaded/com/google/common/collect/MapConstraint
@0.9.0-milestone-1
+#checkKeyValue(Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MapConstraint

+###org/apache/flink/shaded/com/google/common/collect/MapConstraints
@0.9.0-milestone-1
+#notNull()Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;
+#constrainedMap(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Ljava/util/Map;
+#constrainedMultimap(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#constrainedListMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#constrainedSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#constrainedSortedSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#constrainedBiMap(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;Lorg/apache/flink/shaded/com/google/common/collect/MapConstraint;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MapConstraints

+###org/apache/flink/shaded/com/google/common/collect/MapDifference$ValueDifference
@0.9.0-milestone-1
+#leftValue()Ljava/lang/Object;
+#rightValue()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MapDifference$ValueDifference

+###org/apache/flink/shaded/com/google/common/collect/MapDifference
@0.9.0-milestone-1
+#areEqual()Z
+#entriesOnlyOnLeft()Ljava/util/Map;
+#entriesOnlyOnRight()Ljava/util/Map;
+#entriesInCommon()Ljava/util/Map;
+#entriesDiffering()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MapDifference

+###org/apache/flink/shaded/com/google/common/collect/MapMaker
@0.9.0-milestone-1
+#<init>()V
+#initialCapacity(I)Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;
+#concurrencyLevel(I)Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;
+#weakKeys()Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;
+#weakValues()Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;
+#softValues()Lorg/apache/flink/shaded/com/google/common/collect/MapMaker;[deprecated]
+#makeMap()Ljava/util/concurrent/ConcurrentMap;
+#toString()Ljava/lang/String;
+#softValues()Lorg/apache/flink/shaded/com/google/common/collect/GenericMapMaker;
+#weakValues()Lorg/apache/flink/shaded/com/google/common/collect/GenericMapMaker;
+#weakKeys()Lorg/apache/flink/shaded/com/google/common/collect/GenericMapMaker;
+#concurrencyLevel(I)Lorg/apache/flink/shaded/com/google/common/collect/GenericMapMaker;
+#initialCapacity(I)Lorg/apache/flink/shaded/com/google/common/collect/GenericMapMaker;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MapMaker

+###org/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer
@0.9.0-milestone-1
+#transformEntry(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer

+###org/apache/flink/shaded/com/google/common/collect/Maps
@0.9.0-milestone-1
+#immutableEnumMap(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#newHashMap()Ljava/util/HashMap;
+#newHashMapWithExpectedSize(I)Ljava/util/HashMap;
+#newHashMap(Ljava/util/Map;)Ljava/util/HashMap;
+#newLinkedHashMap()Ljava/util/LinkedHashMap;
+#newLinkedHashMap(Ljava/util/Map;)Ljava/util/LinkedHashMap;
+#newConcurrentMap()Ljava/util/concurrent/ConcurrentMap;
+#newTreeMap()Ljava/util/TreeMap;
+#newTreeMap(Ljava/util/SortedMap;)Ljava/util/TreeMap;
+#newTreeMap(Ljava/util/Comparator;)Ljava/util/TreeMap;
+#newEnumMap(Ljava/lang/Class;)Ljava/util/EnumMap;
+#newEnumMap(Ljava/util/Map;)Ljava/util/EnumMap;
+#newIdentityHashMap()Ljava/util/IdentityHashMap;
+#difference(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/MapDifference;
+#difference(Ljava/util/Map;Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Equivalence;)Lorg/apache/flink/shaded/com/google/common/collect/MapDifference;
+#difference(Ljava/util/SortedMap;Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMapDifference;
+#asMap(Ljava/util/Set;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/Map;
+#asMap(Ljava/util/SortedSet;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/SortedMap;
+#asMap(Ljava/util/NavigableSet;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/NavigableMap;
+#toMap(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#toMap(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#uniqueIndex(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#uniqueIndex(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#fromProperties(Ljava/util/Properties;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#immutableEntry(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
+#asConverter(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;)Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#synchronizedBiMap(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#unmodifiableBiMap(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#transformValues(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/Map;
+#transformValues(Ljava/util/SortedMap;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/SortedMap;
+#transformValues(Ljava/util/NavigableMap;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/NavigableMap;
+#transformEntries(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer;)Ljava/util/Map;
+#transformEntries(Ljava/util/SortedMap;Lorg/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer;)Ljava/util/SortedMap;
+#transformEntries(Ljava/util/NavigableMap;Lorg/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer;)Ljava/util/NavigableMap;
+#filterKeys(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/Map;
+#filterKeys(Ljava/util/SortedMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/SortedMap;
+#filterKeys(Ljava/util/NavigableMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/NavigableMap;
+#filterKeys(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#filterValues(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/Map;
+#filterValues(Ljava/util/SortedMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/SortedMap;
+#filterValues(Ljava/util/NavigableMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/NavigableMap;
+#filterValues(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#filterEntries(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/Map;
+#filterEntries(Ljava/util/SortedMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/SortedMap;
+#filterEntries(Ljava/util/NavigableMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/NavigableMap;
+#filterEntries(Lorg/apache/flink/shaded/com/google/common/collect/BiMap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/BiMap;
+#unmodifiableNavigableMap(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;
+#synchronizedNavigableMap(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Maps

+###org/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder
@0.9.0-milestone-1
+#expectedSize(I)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder;
+#maximumSize(I)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder;
+#create()Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder

+###org/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue;
+#orderedBy(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder;
+#expectedSize(I)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder;
+#maximumSize(I)Lorg/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue$Builder;
+#size()I
+#add(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;
+#removeFirst()Ljava/lang/Object;
+#peekFirst()Ljava/lang/Object;
+#pollLast()Ljava/lang/Object;
+#removeLast()Ljava/lang/Object;
+#peekLast()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#clear()V
+#toArray()[Ljava/lang/Object;
+#comparator()Ljava/util/Comparator;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MinMaxPriorityQueue

+###org/apache/flink/shaded/com/google/common/collect/Multimap
@0.9.0-milestone-1
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#clear()V
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#keySet()Ljava/util/Set;
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#values()Ljava/util/Collection;
+#entries()Ljava/util/Collection;
+#asMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Multimap

+###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$ListMultimapBuilder
@0.9.0-milestone-1
+#build()Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$ListMultimapBuilder

+###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys
@0.9.0-milestone-1
+#arrayListValues()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$ListMultimapBuilder;
+#arrayListValues(I)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$ListMultimapBuilder;
+#linkedListValues()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$ListMultimapBuilder;
+#hashSetValues()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder;
+#hashSetValues(I)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder;
+#linkedHashSetValues()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder;
+#linkedHashSetValues(I)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder;
+#treeSetValues()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SortedSetMultimapBuilder;
+#treeSetValues(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SortedSetMultimapBuilder;
+#enumSetValues(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys

+###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder
@0.9.0-milestone-1
+#build()Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SetMultimapBuilder

+###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SortedSetMultimapBuilder
@0.9.0-milestone-1
+#build()Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder$SortedSetMultimapBuilder

+###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder
@0.9.0-milestone-1
+#hashKeys()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#hashKeys(I)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#linkedHashKeys()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#linkedHashKeys(I)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#treeKeys()Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#treeKeys(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#enumKeys(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys;
+#build()Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#build(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MultimapBuilder

+###org/apache/flink/shaded/com/google/common/collect/Multimaps
@0.9.0-milestone-1
+#newMultimap(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#newListMultimap(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#newSetMultimap(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#newSortedSetMultimap(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#invertFrom(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#synchronizedMultimap(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#unmodifiableMultimap(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#unmodifiableMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;[deprecated]
+#synchronizedSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#unmodifiableSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#unmodifiableSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSetMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;[deprecated]
+#synchronizedSortedSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#unmodifiableSortedSetMultimap(Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;
+#synchronizedListMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#unmodifiableListMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#unmodifiableListMultimap(Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;[deprecated]
+#asMap(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;)Ljava/util/Map;
+#asMap(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;)Ljava/util/Map;
+#asMap(Lorg/apache/flink/shaded/com/google/common/collect/SortedSetMultimap;)Ljava/util/Map;
+#asMap(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Ljava/util/Map;
+#forMap(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#transformValues(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#transformEntries(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#transformValues(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#transformEntries(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;Lorg/apache/flink/shaded/com/google/common/collect/Maps$EntryTransformer;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#index(Ljava/lang/Iterable;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#index(Ljava/util/Iterator;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#filterKeys(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#filterKeys(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#filterKeys(Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/ListMultimap;
+#filterValues(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#filterValues(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
+#filterEntries(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/Multimap;
+#filterEntries(Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/SetMultimap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Multimaps

+###org/apache/flink/shaded/com/google/common/collect/Multiset$Entry
@0.9.0-milestone-1
+#getElement()Ljava/lang/Object;
+#getCount()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Multiset$Entry

+###org/apache/flink/shaded/com/google/common/collect/Multiset
@0.9.0-milestone-1
+#count(Ljava/lang/Object;)I
+#add(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;II)Z
+#elementSet()Ljava/util/Set;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Multiset

+###org/apache/flink/shaded/com/google/common/collect/Multisets
@0.9.0-milestone-1
+#unmodifiableMultiset(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#unmodifiableMultiset(Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;[deprecated]
+#unmodifiableSortedMultiset(Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#immutableEntry(Ljava/lang/Object;I)Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#filter(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#union(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#intersection(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#sum(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#difference(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#containsOccurrences(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Z
+#retainOccurrences(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Z
+#removeOccurrences(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;Ljava/lang/Iterable;)Z
+#copyHighestCountFirst(Lorg/apache/flink/shaded/com/google/common/collect/Multiset;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultiset;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Multisets

+###org/apache/flink/shaded/com/google/common/collect/MutableClassToInstanceMap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/MutableClassToInstanceMap;
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/collect/MutableClassToInstanceMap;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#entrySet()Ljava/util/Set;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/MutableClassToInstanceMap

+###org/apache/flink/shaded/com/google/common/collect/ObjectArrays
@0.9.0-milestone-1
+#newArray(Ljava/lang/Class;I)[Ljava/lang/Object;
+#newArray([Ljava/lang/Object;I)[Ljava/lang/Object;
+#concat([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Class;)[Ljava/lang/Object;
+#concat(Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
+#concat([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/ObjectArrays

+###org/apache/flink/shaded/com/google/common/collect/Ordering
@0.9.0-milestone-1
+#natural()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#from(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#from(Lorg/apache/flink/shaded/com/google/common/collect/Ordering;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;[deprecated]
+#explicit(Ljava/util/List;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#explicit(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#allEqual()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#usingToString()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#arbitrary()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#reverse()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#nullsFirst()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#nullsLast()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#onResultOf(Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#compound(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#compound(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#lexicographical()Lorg/apache/flink/shaded/com/google/common/collect/Ordering;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#min(Ljava/util/Iterator;)Ljava/lang/Object;
+#min(Ljava/lang/Iterable;)Ljava/lang/Object;
+#min(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#min(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#max(Ljava/util/Iterator;)Ljava/lang/Object;
+#max(Ljava/lang/Iterable;)Ljava/lang/Object;
+#max(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#max(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#leastOf(Ljava/lang/Iterable;I)Ljava/util/List;
+#leastOf(Ljava/util/Iterator;I)Ljava/util/List;
+#greatestOf(Ljava/lang/Iterable;I)Ljava/util/List;
+#greatestOf(Ljava/util/Iterator;I)Ljava/util/List;
+#sortedCopy(Ljava/lang/Iterable;)Ljava/util/List;
+#immutableSortedCopy(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#isOrdered(Ljava/lang/Iterable;)Z
+#isStrictlyOrdered(Ljava/lang/Iterable;)Z
+#binarySearch(Ljava/util/List;Ljava/lang/Object;)I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Ordering

+###org/apache/flink/shaded/com/google/common/collect/PeekingIterator
@0.9.0-milestone-1
+#peek()Ljava/lang/Object;
+#next()Ljava/lang/Object;
+#remove()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/PeekingIterator

+###org/apache/flink/shaded/com/google/common/collect/Queues
@0.9.0-milestone-1
+#newArrayBlockingQueue(I)Ljava/util/concurrent/ArrayBlockingQueue;
+#newArrayDeque()Ljava/util/ArrayDeque;
+#newArrayDeque(Ljava/lang/Iterable;)Ljava/util/ArrayDeque;
+#newConcurrentLinkedQueue()Ljava/util/concurrent/ConcurrentLinkedQueue;
+#newConcurrentLinkedQueue(Ljava/lang/Iterable;)Ljava/util/concurrent/ConcurrentLinkedQueue;
+#newLinkedBlockingDeque()Ljava/util/concurrent/LinkedBlockingDeque;
+#newLinkedBlockingDeque(I)Ljava/util/concurrent/LinkedBlockingDeque;
+#newLinkedBlockingDeque(Ljava/lang/Iterable;)Ljava/util/concurrent/LinkedBlockingDeque;
+#newLinkedBlockingQueue()Ljava/util/concurrent/LinkedBlockingQueue;
+#newLinkedBlockingQueue(I)Ljava/util/concurrent/LinkedBlockingQueue;
+#newLinkedBlockingQueue(Ljava/lang/Iterable;)Ljava/util/concurrent/LinkedBlockingQueue;
+#newPriorityBlockingQueue()Ljava/util/concurrent/PriorityBlockingQueue;
+#newPriorityBlockingQueue(Ljava/lang/Iterable;)Ljava/util/concurrent/PriorityBlockingQueue;
+#newPriorityQueue()Ljava/util/PriorityQueue;
+#newPriorityQueue(Ljava/lang/Iterable;)Ljava/util/PriorityQueue;
+#newSynchronousQueue()Ljava/util/concurrent/SynchronousQueue;
+#drain(Ljava/util/concurrent/BlockingQueue;Ljava/util/Collection;IJLjava/util/concurrent/TimeUnit;)I
+#drainUninterruptibly(Ljava/util/concurrent/BlockingQueue;Ljava/util/Collection;IJLjava/util/concurrent/TimeUnit;)I
+#synchronizedQueue(Ljava/util/Queue;)Ljava/util/Queue;
+#synchronizedDeque(Ljava/util/Deque;)Ljava/util/Deque;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Queues

+###org/apache/flink/shaded/com/google/common/collect/Range
@0.9.0-milestone-1
+#open(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#closed(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#closedOpen(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#openClosed(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#range(Ljava/lang/Comparable;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Comparable;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#lessThan(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#atMost(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#upTo(Ljava/lang/Comparable;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#greaterThan(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#atLeast(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#downTo(Ljava/lang/Comparable;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#all()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#singleton(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#encloseAll(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#hasLowerBound()Z
+#lowerEndpoint()Ljava/lang/Comparable;
+#lowerBoundType()Lorg/apache/flink/shaded/com/google/common/collect/BoundType;
+#hasUpperBound()Z
+#upperEndpoint()Ljava/lang/Comparable;
+#upperBoundType()Lorg/apache/flink/shaded/com/google/common/collect/BoundType;
+#isEmpty()Z
+#contains(Ljava/lang/Comparable;)Z
+#apply(Ljava/lang/Comparable;)Z[deprecated]
+#containsAll(Ljava/lang/Iterable;)Z
+#encloses(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Z
+#isConnected(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Z
+#intersection(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#span(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#canonical(Lorg/apache/flink/shaded/com/google/common/collect/DiscreteDomain;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#apply(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Range

+###org/apache/flink/shaded/com/google/common/collect/RangeMap
@0.9.0-milestone-1
+#get(Ljava/lang/Comparable;)Ljava/lang/Object;
+#getEntry(Ljava/lang/Comparable;)Ljava/util/Map$Entry;
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#put(Lorg/apache/flink/shaded/com/google/common/collect/Range;Ljava/lang/Object;)V
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;)V
+#clear()V
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#asMapOfRanges()Ljava/util/Map;
+#subRangeMap(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/RangeMap

+###org/apache/flink/shaded/com/google/common/collect/RangeSet
@0.9.0-milestone-1
+#contains(Ljava/lang/Comparable;)Z
+#rangeContaining(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#encloses(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Z
+#enclosesAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Z
+#isEmpty()Z
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#asRanges()Ljava/util/Set;
+#complement()Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#subRangeSet(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#add(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#clear()V
+#addAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#removeAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/RangeSet

+###org/apache/flink/shaded/com/google/common/collect/RowSortedTable
@0.9.0-milestone-1
+#rowKeySet()Ljava/util/SortedSet;
+#rowMap()Ljava/util/SortedMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/RowSortedTable

+###org/apache/flink/shaded/com/google/common/collect/SetMultimap
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#removeAll(Ljava/lang/Object;)Ljava/util/Set;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;
+#entries()Ljava/util/Set;
+#asMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/SetMultimap

+###org/apache/flink/shaded/com/google/common/collect/Sets$SetView
@0.9.0-milestone-1
+#immutableCopy()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#copyInto(Ljava/util/Set;)Ljava/util/Set;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Sets$SetView

+###org/apache/flink/shaded/com/google/common/collect/Sets
@0.9.0-milestone-1
+#immutableEnumSet(Ljava/lang/Enum;[Ljava/lang/Enum;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#immutableEnumSet(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#newEnumSet(Ljava/lang/Iterable;Ljava/lang/Class;)Ljava/util/EnumSet;
+#newHashSet()Ljava/util/HashSet;
+#newHashSet([Ljava/lang/Object;)Ljava/util/HashSet;
+#newHashSetWithExpectedSize(I)Ljava/util/HashSet;
+#newHashSet(Ljava/lang/Iterable;)Ljava/util/HashSet;
+#newHashSet(Ljava/util/Iterator;)Ljava/util/HashSet;
+#newConcurrentHashSet()Ljava/util/Set;
+#newConcurrentHashSet(Ljava/lang/Iterable;)Ljava/util/Set;
+#newLinkedHashSet()Ljava/util/LinkedHashSet;
+#newLinkedHashSetWithExpectedSize(I)Ljava/util/LinkedHashSet;
+#newLinkedHashSet(Ljava/lang/Iterable;)Ljava/util/LinkedHashSet;
+#newTreeSet()Ljava/util/TreeSet;
+#newTreeSet(Ljava/lang/Iterable;)Ljava/util/TreeSet;
+#newTreeSet(Ljava/util/Comparator;)Ljava/util/TreeSet;
+#newIdentityHashSet()Ljava/util/Set;
+#newCopyOnWriteArraySet()Ljava/util/concurrent/CopyOnWriteArraySet;
+#newCopyOnWriteArraySet(Ljava/lang/Iterable;)Ljava/util/concurrent/CopyOnWriteArraySet;
+#complementOf(Ljava/util/Collection;)Ljava/util/EnumSet;
+#complementOf(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/EnumSet;
+#newSetFromMap(Ljava/util/Map;)Ljava/util/Set;
+#union(Ljava/util/Set;Ljava/util/Set;)Lorg/apache/flink/shaded/com/google/common/collect/Sets$SetView;
+#intersection(Ljava/util/Set;Ljava/util/Set;)Lorg/apache/flink/shaded/com/google/common/collect/Sets$SetView;
+#difference(Ljava/util/Set;Ljava/util/Set;)Lorg/apache/flink/shaded/com/google/common/collect/Sets$SetView;
+#symmetricDifference(Ljava/util/Set;Ljava/util/Set;)Lorg/apache/flink/shaded/com/google/common/collect/Sets$SetView;
+#filter(Ljava/util/Set;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/Set;
+#filter(Ljava/util/SortedSet;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/SortedSet;
+#filter(Ljava/util/NavigableSet;Lorg/apache/flink/shaded/com/google/common/base/Predicate;)Ljava/util/NavigableSet;
+#cartesianProduct(Ljava/util/List;)Ljava/util/Set;
+#cartesianProduct([Ljava/util/Set;)Ljava/util/Set;
+#powerSet(Ljava/util/Set;)Ljava/util/Set;
+#unmodifiableNavigableSet(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;
+#synchronizedNavigableSet(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Sets

+###org/apache/flink/shaded/com/google/common/collect/SortedLists$KeyAbsentBehavior
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/collect/SortedLists$KeyAbsentBehavior;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/SortedLists$KeyAbsentBehavior;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/SortedLists$KeyAbsentBehavior

+###org/apache/flink/shaded/com/google/common/collect/SortedLists$KeyPresentBehavior
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/collect/SortedLists$KeyPresentBehavior;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/SortedLists$KeyPresentBehavior;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/SortedLists$KeyPresentBehavior

+###org/apache/flink/shaded/com/google/common/collect/SortedMapDifference
@0.9.0-milestone-1
+#entriesOnlyOnLeft()Ljava/util/SortedMap;
+#entriesOnlyOnRight()Ljava/util/SortedMap;
+#entriesInCommon()Ljava/util/SortedMap;
+#entriesDiffering()Ljava/util/SortedMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/SortedMapDifference

+###org/apache/flink/shaded/com/google/common/collect/SortedMultiset
@0.9.0-milestone-1
+#comparator()Ljava/util/Comparator;
+#firstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#lastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#pollFirstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#pollLastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#elementSet()Ljava/util/NavigableSet;
+#entrySet()Ljava/util/Set;
+#iterator()Ljava/util/Iterator;
+#descendingMultiset()Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#headMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#subMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#tailMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/SortedMultiset

+###org/apache/flink/shaded/com/google/common/collect/SortedSetMultimap
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/util/SortedSet;
+#removeAll(Ljava/lang/Object;)Ljava/util/SortedSet;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/SortedSet;
+#asMap()Ljava/util/Map;
+#valueComparator()Ljava/util/Comparator;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/SortedSetMultimap

+###org/apache/flink/shaded/com/google/common/collect/Table$Cell
@0.9.0-milestone-1
+#getRowKey()Ljava/lang/Object;
+#getColumnKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Table$Cell

+###org/apache/flink/shaded/com/google/common/collect/Table
@0.9.0-milestone-1
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#containsColumn(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#size()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clear()V
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#row(Ljava/lang/Object;)Ljava/util/Map;
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#cellSet()Ljava/util/Set;
+#rowKeySet()Ljava/util/Set;
+#columnKeySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#rowMap()Ljava/util/Map;
+#columnMap()Ljava/util/Map;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Table

+###org/apache/flink/shaded/com/google/common/collect/Tables
@0.9.0-milestone-1
+#immutableCell(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/Table$Cell;
+#transpose(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/Table;
+#newCustomTable(Ljava/util/Map;Lorg/apache/flink/shaded/com/google/common/base/Supplier;)Lorg/apache/flink/shaded/com/google/common/collect/Table;
+#transformValues(Lorg/apache/flink/shaded/com/google/common/collect/Table;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/collect/Table;
+#unmodifiableTable(Lorg/apache/flink/shaded/com/google/common/collect/Table;)Lorg/apache/flink/shaded/com/google/common/collect/Table;
+#unmodifiableRowSortedTable(Lorg/apache/flink/shaded/com/google/common/collect/RowSortedTable;)Lorg/apache/flink/shaded/com/google/common/collect/RowSortedTable;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/Tables

+###org/apache/flink/shaded/com/google/common/collect/TreeBasedTable
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/TreeBasedTable;
+#create(Ljava/util/Comparator;Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/TreeBasedTable;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/TreeBasedTable;)Lorg/apache/flink/shaded/com/google/common/collect/TreeBasedTable;
+#rowComparator()Ljava/util/Comparator;
+#columnComparator()Ljava/util/Comparator;
+#row(Ljava/lang/Object;)Ljava/util/SortedMap;
+#rowKeySet()Ljava/util/SortedSet;
+#rowMap()Ljava/util/SortedMap;
+#rowMap()Ljava/util/Map;
+#rowKeySet()Ljava/util/Set;
+#row(Ljava/lang/Object;)Ljava/util/Map;
+#columnMap()Ljava/util/Map;
+#values()Ljava/util/Collection;
+#columnKeySet()Ljava/util/Set;
+#column(Ljava/lang/Object;)Ljava/util/Map;
+#cellSet()Ljava/util/Set;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#size()I
+#isEmpty()Z
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#containsValue(Ljava/lang/Object;)Z
+#containsRow(Ljava/lang/Object;)Z
+#containsColumn(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Table;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/TreeBasedTable

+###org/apache/flink/shaded/com/google/common/collect/TreeMultimap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/TreeMultimap;
+#create(Ljava/util/Comparator;Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/TreeMultimap;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/collect/TreeMultimap;
+#keyComparator()Ljava/util/Comparator;
+#valueComparator()Ljava/util/Comparator;
+#get(Ljava/lang/Object;)Ljava/util/NavigableSet;
+#keySet()Ljava/util/NavigableSet;
+#asMap()Ljava/util/NavigableMap;
+#keySet()Ljava/util/SortedSet;
+#asMap()Ljava/util/SortedMap;
+#values()Ljava/util/Collection;
+#asMap()Ljava/util/Map;
+#replaceValues(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/SortedSet;
+#removeAll(Ljava/lang/Object;)Ljava/util/SortedSet;
+#get(Ljava/lang/Object;)Ljava/util/SortedSet;
+#get(Ljava/lang/Object;)Ljava/util/Set;
+#keySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#entries()Ljava/util/Set;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#size()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#keys()Lorg/apache/flink/shaded/com/google/common/collect/Multiset;
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Z
+#putAll(Ljava/lang/Object;Ljava/lang/Iterable;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsEntry(Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/TreeMultimap

+###org/apache/flink/shaded/com/google/common/collect/TreeMultiset
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/TreeMultiset;
+#create(Ljava/util/Comparator;)Lorg/apache/flink/shaded/com/google/common/collect/TreeMultiset;
+#create(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/TreeMultiset;
+#size()I
+#count(Ljava/lang/Object;)I
+#add(Ljava/lang/Object;I)I
+#remove(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;I)I
+#setCount(Ljava/lang/Object;II)Z
+#headMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#tailMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#descendingMultiset()Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#subMultiset(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/collect/BoundType;)Lorg/apache/flink/shaded/com/google/common/collect/SortedMultiset;
+#pollLastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#pollFirstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#lastEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#firstEntry()Lorg/apache/flink/shaded/com/google/common/collect/Multiset$Entry;
+#comparator()Ljava/util/Comparator;
+#elementSet()Ljava/util/NavigableSet;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#clear()V
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#remove(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#isEmpty()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/TreeMultiset

+###org/apache/flink/shaded/com/google/common/collect/TreeRangeMap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/TreeRangeMap;
+#get(Ljava/lang/Comparable;)Ljava/lang/Object;
+#getEntry(Ljava/lang/Comparable;)Ljava/util/Map$Entry;
+#put(Lorg/apache/flink/shaded/com/google/common/collect/Range;Ljava/lang/Object;)V
+#putAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;)V
+#clear()V
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#asMapOfRanges()Ljava/util/Map;
+#subRangeMap(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeMap;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/TreeRangeMap

+###org/apache/flink/shaded/com/google/common/collect/TreeRangeSet
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/collect/TreeRangeSet;
+#create(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Lorg/apache/flink/shaded/com/google/common/collect/TreeRangeSet;
+#asRanges()Ljava/util/Set;
+#rangeContaining(Ljava/lang/Comparable;)Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#encloses(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Z
+#span()Lorg/apache/flink/shaded/com/google/common/collect/Range;
+#add(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#remove(Lorg/apache/flink/shaded/com/google/common/collect/Range;)V
+#complement()Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#subRangeSet(Lorg/apache/flink/shaded/com/google/common/collect/Range;)Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;
+#equals(Ljava/lang/Object;)Z
+#removeAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#addAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)V
+#enclosesAll(Lorg/apache/flink/shaded/com/google/common/collect/RangeSet;)Z
+#clear()V
+#isEmpty()Z
+#contains(Ljava/lang/Comparable;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/TreeRangeSet

+###org/apache/flink/shaded/com/google/common/collect/TreeTraverser
@0.9.0-milestone-1
+#<init>()V
+#children(Ljava/lang/Object;)Ljava/lang/Iterable;
+#preOrderTraversal(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#postOrderTraversal(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
+#breadthFirstTraversal(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/collect/FluentIterable;
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/TreeTraverser

+###org/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator
@0.9.0-milestone-1
+#remove()V[deprecated]
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/UnmodifiableIterator

+###org/apache/flink/shaded/com/google/common/collect/UnmodifiableListIterator
@0.9.0-milestone-1
+#add(Ljava/lang/Object;)V[deprecated]
+#set(Ljava/lang/Object;)V[deprecated]
@1.1.0
-###org/apache/flink/shaded/com/google/common/collect/UnmodifiableListIterator

+###org/apache/flink/shaded/com/google/common/escape/ArrayBasedCharEscaper
@0.9.0-milestone-1
+#escape(Ljava/lang/String;)Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/escape/ArrayBasedCharEscaper

+###org/apache/flink/shaded/com/google/common/escape/ArrayBasedEscaperMap
@0.9.0-milestone-1
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/escape/ArrayBasedEscaperMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/escape/ArrayBasedEscaperMap

+###org/apache/flink/shaded/com/google/common/escape/ArrayBasedUnicodeEscaper
@0.9.0-milestone-1
+#escape(Ljava/lang/String;)Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/escape/ArrayBasedUnicodeEscaper

+###org/apache/flink/shaded/com/google/common/escape/CharEscaper
@0.9.0-milestone-1
+#escape(Ljava/lang/String;)Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/escape/CharEscaper

+###org/apache/flink/shaded/com/google/common/escape/CharEscaperBuilder
@0.9.0-milestone-1
+#<init>()V
+#addEscape(CLjava/lang/String;)Lorg/apache/flink/shaded/com/google/common/escape/CharEscaperBuilder;
+#addEscapes([CLjava/lang/String;)Lorg/apache/flink/shaded/com/google/common/escape/CharEscaperBuilder;
+#toArray()[[C
+#toEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
@1.1.0
-###org/apache/flink/shaded/com/google/common/escape/CharEscaperBuilder

+###org/apache/flink/shaded/com/google/common/escape/Escaper
@0.9.0-milestone-1
+#escape(Ljava/lang/String;)Ljava/lang/String;
+#asFunction()Lorg/apache/flink/shaded/com/google/common/base/Function;
@1.1.0
-###org/apache/flink/shaded/com/google/common/escape/Escaper

+###org/apache/flink/shaded/com/google/common/escape/Escapers$Builder
@0.9.0-milestone-1
+#setSafeRange(CC)Lorg/apache/flink/shaded/com/google/common/escape/Escapers$Builder;
+#setUnsafeReplacement(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/escape/Escapers$Builder;
+#addEscape(CLjava/lang/String;)Lorg/apache/flink/shaded/com/google/common/escape/Escapers$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
@1.1.0
-###org/apache/flink/shaded/com/google/common/escape/Escapers$Builder

+###org/apache/flink/shaded/com/google/common/escape/Escapers
@0.9.0-milestone-1
+#nullEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
+#builder()Lorg/apache/flink/shaded/com/google/common/escape/Escapers$Builder;
+#computeReplacement(Lorg/apache/flink/shaded/com/google/common/escape/CharEscaper;C)Ljava/lang/String;
+#computeReplacement(Lorg/apache/flink/shaded/com/google/common/escape/UnicodeEscaper;I)Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/escape/Escapers

+###org/apache/flink/shaded/com/google/common/escape/UnicodeEscaper
@0.9.0-milestone-1
+#escape(Ljava/lang/String;)Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/escape/UnicodeEscaper

+###org/apache/flink/shaded/com/google/common/eventbus/AllowConcurrentEvents
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/eventbus/AllowConcurrentEvents

+###org/apache/flink/shaded/com/google/common/eventbus/AsyncEventBus
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Lorg/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionHandler;)V
+#<init>(Ljava/util/concurrent/Executor;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/eventbus/AsyncEventBus

+###org/apache/flink/shaded/com/google/common/eventbus/DeadEvent
@0.9.0-milestone-1
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getSource()Ljava/lang/Object;
+#getEvent()Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/eventbus/DeadEvent

+###org/apache/flink/shaded/com/google/common/eventbus/EventBus
@0.9.0-milestone-1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionHandler;)V
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
+#post(Ljava/lang/Object;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/eventbus/EventBus

+###org/apache/flink/shaded/com/google/common/eventbus/Subscribe
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/eventbus/Subscribe

+###org/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionContext
@0.9.0-milestone-1
+#getEventBus()Lorg/apache/flink/shaded/com/google/common/eventbus/EventBus;
+#getEvent()Ljava/lang/Object;
+#getSubscriber()Ljava/lang/Object;
+#getSubscriberMethod()Ljava/lang/reflect/Method;
@1.1.0
-###org/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionContext

+###org/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionHandler
@0.9.0-milestone-1
+#handleException(Ljava/lang/Throwable;Lorg/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionContext;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/eventbus/SubscriberExceptionHandler

+###org/apache/flink/shaded/com/google/common/hash/AbstractStreamingHashFunction$AbstractStreamingHasher
@0.9.0-milestone-1
+#putBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putBytes([BII)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putUnencodedChars(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putByte(B)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putShort(S)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putChar(C)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putInt(I)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putLong(J)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putObject(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/hash/Funnel;)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#hash()Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#putUnencodedChars(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putChar(C)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putLong(J)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putInt(I)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putShort(S)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putBytes([BII)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putByte(B)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/AbstractStreamingHashFunction$AbstractStreamingHasher

+###org/apache/flink/shaded/com/google/common/hash/BloomFilter
@0.9.0-milestone-1
+#copy()Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;
+#mightContain(Ljava/lang/Object;)Z
+#apply(Ljava/lang/Object;)Z[deprecated]
+#put(Ljava/lang/Object;)Z
+#expectedFpp()D
+#isCompatible(Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;)Z
+#putAll(Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#create(Lorg/apache/flink/shaded/com/google/common/hash/Funnel;ID)Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;
+#create(Lorg/apache/flink/shaded/com/google/common/hash/Funnel;I)Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;
+#writeTo(Ljava/io/OutputStream;)V
+#readFrom(Ljava/io/InputStream;Lorg/apache/flink/shaded/com/google/common/hash/Funnel;)Lorg/apache/flink/shaded/com/google/common/hash/BloomFilter;
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/BloomFilter

+###org/apache/flink/shaded/com/google/common/hash/Funnel
@0.9.0-milestone-1
+#funnel(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/Funnel

+###org/apache/flink/shaded/com/google/common/hash/Funnels
@0.9.0-milestone-1
+#byteArrayFunnel()Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#unencodedCharsFunnel()Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#stringFunnel(Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#integerFunnel()Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#sequentialFunnel(Lorg/apache/flink/shaded/com/google/common/hash/Funnel;)Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#longFunnel()Lorg/apache/flink/shaded/com/google/common/hash/Funnel;
+#asOutputStream(Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;)Ljava/io/OutputStream;
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/Funnels

+###org/apache/flink/shaded/com/google/common/hash/HashCode
@0.9.0-milestone-1
+#bits()I
+#asInt()I
+#asLong()J
+#padToLong()J
+#asBytes()[B
+#writeBytesTo([BII)I
+#fromInt(I)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#fromLong(J)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#fromBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#fromString(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/HashCode

+###org/apache/flink/shaded/com/google/common/hash/HashFunction
@0.9.0-milestone-1
+#newHasher()Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#newHasher(I)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#hashInt(I)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashLong(J)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashBytes([BII)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashUnencodedChars(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashString(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#hashObject(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/hash/Funnel;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#bits()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/HashFunction

+###org/apache/flink/shaded/com/google/common/hash/Hasher
@0.9.0-milestone-1
+#putByte(B)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putBytes([BII)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putShort(S)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putInt(I)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putLong(J)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putFloat(F)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putDouble(D)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putBoolean(Z)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putChar(C)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putUnencodedChars(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putString(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#putObject(Ljava/lang/Object;Lorg/apache/flink/shaded/com/google/common/hash/Funnel;)Lorg/apache/flink/shaded/com/google/common/hash/Hasher;
+#hash()Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/Hasher

+###org/apache/flink/shaded/com/google/common/hash/Hashing
@0.9.0-milestone-1
+#goodFastHash(I)Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#murmur3_32(I)Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#murmur3_32()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#murmur3_128(I)Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#murmur3_128()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#sipHash24()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#sipHash24(JJ)Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#md5()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#sha1()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#sha256()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#sha512()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#crc32c()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#crc32()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#adler32()Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;
+#consistentHash(Lorg/apache/flink/shaded/com/google/common/hash/HashCode;I)I
+#consistentHash(JI)I
+#combineOrdered(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#combineUnordered(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/Hashing

+###org/apache/flink/shaded/com/google/common/hash/HashingInputStream
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;Ljava/io/InputStream;)V
+#read()I
+#read([BII)I
+#markSupported()Z
+#mark(I)V
+#reset()V
+#hash()Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/HashingInputStream

+###org/apache/flink/shaded/com/google/common/hash/HashingOutputStream
@0.9.0-milestone-1
+#<init>(Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;Ljava/io/OutputStream;)V
+#write(I)V
+#write([BII)V
+#hash()Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#close()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/HashingOutputStream

+###org/apache/flink/shaded/com/google/common/hash/PrimitiveSink
@0.9.0-milestone-1
+#putByte(B)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putBytes([B)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putBytes([BII)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putShort(S)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putInt(I)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putLong(J)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putFloat(F)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putDouble(D)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putBoolean(Z)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putChar(C)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putUnencodedChars(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
+#putString(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/hash/PrimitiveSink;
@1.1.0
-###org/apache/flink/shaded/com/google/common/hash/PrimitiveSink

+###org/apache/flink/shaded/com/google/common/html/HtmlEscapers
@0.9.0-milestone-1
+#htmlEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
@1.1.0
-###org/apache/flink/shaded/com/google/common/html/HtmlEscapers

+###org/apache/flink/shaded/com/google/common/io/BaseEncoding$DecodingException
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/BaseEncoding$DecodingException

+###org/apache/flink/shaded/com/google/common/io/BaseEncoding
@0.9.0-milestone-1
+#encode([B)Ljava/lang/String;
+#encode([BII)Ljava/lang/String;
+#encodingStream(Ljava/io/Writer;)Ljava/io/OutputStream;
+#encodingSink(Lorg/apache/flink/shaded/com/google/common/io/CharSink;)Lorg/apache/flink/shaded/com/google/common/io/ByteSink;
+#decode(Ljava/lang/CharSequence;)[B
+#decodingStream(Ljava/io/Reader;)Ljava/io/InputStream;
+#decodingSource(Lorg/apache/flink/shaded/com/google/common/io/CharSource;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#omitPadding()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#withPadChar(C)Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#withSeparator(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#upperCase()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#lowerCase()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#base64()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#base64Url()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#base32()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#base32Hex()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
+#base16()Lorg/apache/flink/shaded/com/google/common/io/BaseEncoding;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/BaseEncoding

+###org/apache/flink/shaded/com/google/common/io/ByteArrayDataInput
@0.9.0-milestone-1
+#readFully([B)V
+#readFully([BII)V
+#skipBytes(I)I
+#readBoolean()Z
+#readByte()B
+#readUnsignedByte()I
+#readShort()S
+#readUnsignedShort()I
+#readChar()C
+#readInt()I
+#readLong()J
+#readFloat()F
+#readDouble()D
+#readLine()Ljava/lang/String;
+#readUTF()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/ByteArrayDataInput

+###org/apache/flink/shaded/com/google/common/io/ByteArrayDataOutput
@0.9.0-milestone-1
+#write(I)V
+#write([B)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeShort(I)V
+#writeChar(I)V
+#writeInt(I)V
+#writeLong(J)V
+#writeFloat(F)V
+#writeDouble(D)V
+#writeChars(Ljava/lang/String;)V
+#writeUTF(Ljava/lang/String;)V
+#writeBytes(Ljava/lang/String;)V[deprecated]
+#toByteArray()[B
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/ByteArrayDataOutput

+###org/apache/flink/shaded/com/google/common/io/ByteProcessor
@0.9.0-milestone-1
+#processBytes([BII)Z
+#getResult()Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/ByteProcessor

+###org/apache/flink/shaded/com/google/common/io/ByteSink
@0.9.0-milestone-1
+#asCharSink(Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/io/CharSink;
+#openStream()Ljava/io/OutputStream;
+#openBufferedStream()Ljava/io/OutputStream;
+#write([B)V
+#writeFrom(Ljava/io/InputStream;)J
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/ByteSink

+###org/apache/flink/shaded/com/google/common/io/ByteSource
@0.9.0-milestone-1
+#asCharSource(Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#openStream()Ljava/io/InputStream;
+#openBufferedStream()Ljava/io/InputStream;
+#slice(JJ)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#isEmpty()Z
+#size()J
+#copyTo(Ljava/io/OutputStream;)J
+#copyTo(Lorg/apache/flink/shaded/com/google/common/io/ByteSink;)J
+#read()[B
+#read(Lorg/apache/flink/shaded/com/google/common/io/ByteProcessor;)Ljava/lang/Object;
+#hash(Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#contentEquals(Lorg/apache/flink/shaded/com/google/common/io/ByteSource;)Z
+#concat(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#concat(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#concat([Lorg/apache/flink/shaded/com/google/common/io/ByteSource;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#wrap([B)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#empty()Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/ByteSource

+###org/apache/flink/shaded/com/google/common/io/ByteStreams
@0.9.0-milestone-1
+#copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J
+#copy(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/channels/WritableByteChannel;)J
+#toByteArray(Ljava/io/InputStream;)[B
+#newDataInput([B)Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataInput;
+#newDataInput([BI)Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataInput;
+#newDataInput(Ljava/io/ByteArrayInputStream;)Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataInput;
+#newDataOutput()Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataOutput;
+#newDataOutput(I)Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataOutput;
+#newDataOutput(Ljava/io/ByteArrayOutputStream;)Lorg/apache/flink/shaded/com/google/common/io/ByteArrayDataOutput;
+#nullOutputStream()Ljava/io/OutputStream;
+#limit(Ljava/io/InputStream;J)Ljava/io/InputStream;
+#readFully(Ljava/io/InputStream;[B)V
+#readFully(Ljava/io/InputStream;[BII)V
+#skipFully(Ljava/io/InputStream;J)V
+#readBytes(Ljava/io/InputStream;Lorg/apache/flink/shaded/com/google/common/io/ByteProcessor;)Ljava/lang/Object;
+#read(Ljava/io/InputStream;[BII)I
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/ByteStreams

+###org/apache/flink/shaded/com/google/common/io/CharSink
@0.9.0-milestone-1
+#openStream()Ljava/io/Writer;
+#openBufferedStream()Ljava/io/Writer;
+#write(Ljava/lang/CharSequence;)V
+#writeLines(Ljava/lang/Iterable;)V
+#writeLines(Ljava/lang/Iterable;Ljava/lang/String;)V
+#writeFrom(Ljava/lang/Readable;)J
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/CharSink

+###org/apache/flink/shaded/com/google/common/io/CharSource
@0.9.0-milestone-1
+#openStream()Ljava/io/Reader;
+#openBufferedStream()Ljava/io/BufferedReader;
+#copyTo(Ljava/lang/Appendable;)J
+#copyTo(Lorg/apache/flink/shaded/com/google/common/io/CharSink;)J
+#read()Ljava/lang/String;
+#readFirstLine()Ljava/lang/String;
+#readLines()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#readLines(Lorg/apache/flink/shaded/com/google/common/io/LineProcessor;)Ljava/lang/Object;
+#isEmpty()Z
+#concat(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#concat(Ljava/util/Iterator;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#concat([Lorg/apache/flink/shaded/com/google/common/io/CharSource;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#wrap(Ljava/lang/CharSequence;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#empty()Lorg/apache/flink/shaded/com/google/common/io/CharSource;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/CharSource

+###org/apache/flink/shaded/com/google/common/io/CharStreams
@0.9.0-milestone-1
+#copy(Ljava/lang/Readable;Ljava/lang/Appendable;)J
+#toString(Ljava/lang/Readable;)Ljava/lang/String;
+#readLines(Ljava/lang/Readable;)Ljava/util/List;
+#readLines(Ljava/lang/Readable;Lorg/apache/flink/shaded/com/google/common/io/LineProcessor;)Ljava/lang/Object;
+#skipFully(Ljava/io/Reader;J)V
+#nullWriter()Ljava/io/Writer;
+#asWriter(Ljava/lang/Appendable;)Ljava/io/Writer;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/CharStreams

+###org/apache/flink/shaded/com/google/common/io/Closeables
@0.9.0-milestone-1
+#close(Ljava/io/Closeable;Z)V
+#closeQuietly(Ljava/io/InputStream;)V
+#closeQuietly(Ljava/io/Reader;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/Closeables

+###org/apache/flink/shaded/com/google/common/io/Closer
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/io/Closer;
+#register(Ljava/io/Closeable;)Ljava/io/Closeable;
+#rethrow(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#rethrow(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/RuntimeException;
+#rethrow(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/RuntimeException;
+#close()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/Closer

+###org/apache/flink/shaded/com/google/common/io/CountingInputStream
@0.9.0-milestone-1
+#<init>(Ljava/io/InputStream;)V
+#getCount()J
+#read()I
+#read([BII)I
+#skip(J)J
+#mark(I)V
+#reset()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/CountingInputStream

+###org/apache/flink/shaded/com/google/common/io/CountingOutputStream
@0.9.0-milestone-1
+#<init>(Ljava/io/OutputStream;)V
+#getCount()J
+#write([BII)V
+#write(I)V
+#close()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/CountingOutputStream

+###org/apache/flink/shaded/com/google/common/io/FileBackedOutputStream
@0.9.0-milestone-1
+#<init>(I)V
+#<init>(IZ)V
+#asByteSource()Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#reset()V
+#write(I)V
+#write([B)V
+#write([BII)V
+#close()V
+#flush()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/FileBackedOutputStream

+###org/apache/flink/shaded/com/google/common/io/FileWriteMode
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/io/FileWriteMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/io/FileWriteMode;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/FileWriteMode

+###org/apache/flink/shaded/com/google/common/io/Files
@0.9.0-milestone-1
+#newReader(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;
+#newWriter(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/io/BufferedWriter;
+#asByteSource(Ljava/io/File;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#asByteSink(Ljava/io/File;[Lorg/apache/flink/shaded/com/google/common/io/FileWriteMode;)Lorg/apache/flink/shaded/com/google/common/io/ByteSink;
+#asCharSource(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#asCharSink(Ljava/io/File;Ljava/nio/charset/Charset;[Lorg/apache/flink/shaded/com/google/common/io/FileWriteMode;)Lorg/apache/flink/shaded/com/google/common/io/CharSink;
+#toByteArray(Ljava/io/File;)[B
+#toString(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#write([BLjava/io/File;)V
+#copy(Ljava/io/File;Ljava/io/OutputStream;)V
+#copy(Ljava/io/File;Ljava/io/File;)V
+#write(Ljava/lang/CharSequence;Ljava/io/File;Ljava/nio/charset/Charset;)V
+#append(Ljava/lang/CharSequence;Ljava/io/File;Ljava/nio/charset/Charset;)V
+#copy(Ljava/io/File;Ljava/nio/charset/Charset;Ljava/lang/Appendable;)V
+#equal(Ljava/io/File;Ljava/io/File;)Z
+#createTempDir()Ljava/io/File;
+#touch(Ljava/io/File;)V
+#createParentDirs(Ljava/io/File;)V
+#move(Ljava/io/File;Ljava/io/File;)V
+#readFirstLine(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#readLines(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/util/List;
+#readLines(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/flink/shaded/com/google/common/io/LineProcessor;)Ljava/lang/Object;
+#readBytes(Ljava/io/File;Lorg/apache/flink/shaded/com/google/common/io/ByteProcessor;)Ljava/lang/Object;
+#hash(Ljava/io/File;Lorg/apache/flink/shaded/com/google/common/hash/HashFunction;)Lorg/apache/flink/shaded/com/google/common/hash/HashCode;
+#map(Ljava/io/File;)Ljava/nio/MappedByteBuffer;
+#map(Ljava/io/File;Ljava/nio/channels/FileChannel$MapMode;)Ljava/nio/MappedByteBuffer;
+#map(Ljava/io/File;Ljava/nio/channels/FileChannel$MapMode;J)Ljava/nio/MappedByteBuffer;
+#simplifyPath(Ljava/lang/String;)Ljava/lang/String;
+#getFileExtension(Ljava/lang/String;)Ljava/lang/String;
+#getNameWithoutExtension(Ljava/lang/String;)Ljava/lang/String;
+#fileTreeTraverser()Lorg/apache/flink/shaded/com/google/common/collect/TreeTraverser;
+#isDirectory()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
+#isFile()Lorg/apache/flink/shaded/com/google/common/base/Predicate;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/Files

+###org/apache/flink/shaded/com/google/common/io/Flushables
@0.9.0-milestone-1
+#flush(Ljava/io/Flushable;Z)V
+#flushQuietly(Ljava/io/Flushable;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/Flushables

+###org/apache/flink/shaded/com/google/common/io/InputSupplier
@0.9.0-milestone-1
+#getInput()Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/InputSupplier

+###org/apache/flink/shaded/com/google/common/io/LineProcessor
@0.9.0-milestone-1
+#processLine(Ljava/lang/String;)Z
+#getResult()Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/LineProcessor

+###org/apache/flink/shaded/com/google/common/io/LineReader
@0.9.0-milestone-1
+#<init>(Ljava/lang/Readable;)V
+#readLine()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/LineReader

+###org/apache/flink/shaded/com/google/common/io/LittleEndianDataInputStream
@0.9.0-milestone-1
+#<init>(Ljava/io/InputStream;)V
+#readLine()Ljava/lang/String;
+#readFully([B)V
+#readFully([BII)V
+#skipBytes(I)I
+#readUnsignedByte()I
+#readUnsignedShort()I
+#readInt()I
+#readLong()J
+#readFloat()F
+#readDouble()D
+#readUTF()Ljava/lang/String;
+#readShort()S
+#readChar()C
+#readByte()B
+#readBoolean()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/LittleEndianDataInputStream

+###org/apache/flink/shaded/com/google/common/io/LittleEndianDataOutputStream
@0.9.0-milestone-1
+#<init>(Ljava/io/OutputStream;)V
+#write([BII)V
+#writeBoolean(Z)V
+#writeByte(I)V
+#writeBytes(Ljava/lang/String;)V[deprecated]
+#writeChar(I)V
+#writeChars(Ljava/lang/String;)V
+#writeDouble(D)V
+#writeFloat(F)V
+#writeInt(I)V
+#writeLong(J)V
+#writeShort(I)V
+#writeUTF(Ljava/lang/String;)V
+#close()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/LittleEndianDataOutputStream

+###org/apache/flink/shaded/com/google/common/io/OutputSupplier
@0.9.0-milestone-1
+#getOutput()Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/OutputSupplier

+###org/apache/flink/shaded/com/google/common/io/PatternFilenameFilter
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/regex/Pattern;)V
+#accept(Ljava/io/File;Ljava/lang/String;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/PatternFilenameFilter

+###org/apache/flink/shaded/com/google/common/io/Resources
@0.9.0-milestone-1
+#asByteSource(Ljava/net/URL;)Lorg/apache/flink/shaded/com/google/common/io/ByteSource;
+#asCharSource(Ljava/net/URL;Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/io/CharSource;
+#toByteArray(Ljava/net/URL;)[B
+#toString(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#readLines(Ljava/net/URL;Ljava/nio/charset/Charset;Lorg/apache/flink/shaded/com/google/common/io/LineProcessor;)Ljava/lang/Object;
+#readLines(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/util/List;
+#copy(Ljava/net/URL;Ljava/io/OutputStream;)V
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResource(Ljava/lang/Class;Ljava/lang/String;)Ljava/net/URL;
@1.1.0
-###org/apache/flink/shaded/com/google/common/io/Resources

+###org/apache/flink/shaded/com/google/common/math/BigIntegerMath
@0.9.0-milestone-1
+#isPowerOfTwo(Ljava/math/BigInteger;)Z
+#log2(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I
+#log10(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I
+#sqrt(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;
+#divide(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;
+#factorial(I)Ljava/math/BigInteger;
+#binomial(II)Ljava/math/BigInteger;
@1.1.0
-###org/apache/flink/shaded/com/google/common/math/BigIntegerMath

+###org/apache/flink/shaded/com/google/common/math/DoubleMath
@0.9.0-milestone-1
+#roundToInt(DLjava/math/RoundingMode;)I
+#roundToLong(DLjava/math/RoundingMode;)J
+#roundToBigInteger(DLjava/math/RoundingMode;)Ljava/math/BigInteger;
+#isPowerOfTwo(D)Z
+#log2(D)D
+#log2(DLjava/math/RoundingMode;)I
+#isMathematicalInteger(D)Z
+#factorial(I)D
+#fuzzyEquals(DDD)Z
+#fuzzyCompare(DDD)I
+#mean([D)D
+#mean([I)D
+#mean([J)D
+#mean(Ljava/lang/Iterable;)D
+#mean(Ljava/util/Iterator;)D
@1.1.0
-###org/apache/flink/shaded/com/google/common/math/DoubleMath

+###org/apache/flink/shaded/com/google/common/math/IntMath
@0.9.0-milestone-1
+#isPowerOfTwo(I)Z
+#log2(ILjava/math/RoundingMode;)I
+#log10(ILjava/math/RoundingMode;)I
+#pow(II)I
+#sqrt(ILjava/math/RoundingMode;)I
+#divide(IILjava/math/RoundingMode;)I
+#mod(II)I
+#gcd(II)I
+#checkedAdd(II)I
+#checkedSubtract(II)I
+#checkedMultiply(II)I
+#checkedPow(II)I
+#factorial(I)I
+#binomial(II)I
+#mean(II)I
@1.1.0
-###org/apache/flink/shaded/com/google/common/math/IntMath

+###org/apache/flink/shaded/com/google/common/math/LongMath
@0.9.0-milestone-1
+#isPowerOfTwo(J)Z
+#log2(JLjava/math/RoundingMode;)I
+#log10(JLjava/math/RoundingMode;)I
+#pow(JI)J
+#sqrt(JLjava/math/RoundingMode;)J
+#divide(JJLjava/math/RoundingMode;)J
+#mod(JI)I
+#mod(JJ)J
+#gcd(JJ)J
+#checkedAdd(JJ)J
+#checkedSubtract(JJ)J
+#checkedMultiply(JJ)J
+#checkedPow(JI)J
+#factorial(I)J
+#binomial(II)J
+#mean(JJ)J
@1.1.0
-###org/apache/flink/shaded/com/google/common/math/LongMath

+###org/apache/flink/shaded/com/google/common/net/HostAndPort
@0.9.0-milestone-1
+#getHostText()Ljava/lang/String;
+#hasPort()Z
+#getPort()I
+#getPortOrDefault(I)I
+#fromParts(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/net/HostAndPort;
+#fromHost(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/HostAndPort;
+#fromString(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/HostAndPort;
+#withDefaultPort(I)Lorg/apache/flink/shaded/com/google/common/net/HostAndPort;
+#requireBracketsForIPv6()Lorg/apache/flink/shaded/com/google/common/net/HostAndPort;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/net/HostAndPort

+###org/apache/flink/shaded/com/google/common/net/HostSpecifier
@0.9.0-milestone-1
+#fromValid(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/HostSpecifier;
+#from(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/HostSpecifier;
+#isValid(Ljava/lang/String;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/net/HostSpecifier

+###org/apache/flink/shaded/com/google/common/net/HttpHeaders
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/net/HttpHeaders

+###org/apache/flink/shaded/com/google/common/net/InetAddresses$TeredoInfo
@0.9.0-milestone-1
+#<init>(Ljava/net/Inet4Address;Ljava/net/Inet4Address;II)V
+#getServer()Ljava/net/Inet4Address;
+#getClient()Ljava/net/Inet4Address;
+#getPort()I
+#getFlags()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/net/InetAddresses$TeredoInfo

+###org/apache/flink/shaded/com/google/common/net/InetAddresses
@0.9.0-milestone-1
+#forString(Ljava/lang/String;)Ljava/net/InetAddress;
+#isInetAddress(Ljava/lang/String;)Z
+#toAddrString(Ljava/net/InetAddress;)Ljava/lang/String;
+#toUriString(Ljava/net/InetAddress;)Ljava/lang/String;
+#forUriString(Ljava/lang/String;)Ljava/net/InetAddress;
+#isUriInetAddress(Ljava/lang/String;)Z
+#isCompatIPv4Address(Ljava/net/Inet6Address;)Z
+#getCompatIPv4Address(Ljava/net/Inet6Address;)Ljava/net/Inet4Address;
+#is6to4Address(Ljava/net/Inet6Address;)Z
+#get6to4IPv4Address(Ljava/net/Inet6Address;)Ljava/net/Inet4Address;
+#isTeredoAddress(Ljava/net/Inet6Address;)Z
+#getTeredoInfo(Ljava/net/Inet6Address;)Lorg/apache/flink/shaded/com/google/common/net/InetAddresses$TeredoInfo;
+#isIsatapAddress(Ljava/net/Inet6Address;)Z
+#getIsatapIPv4Address(Ljava/net/Inet6Address;)Ljava/net/Inet4Address;
+#hasEmbeddedIPv4ClientAddress(Ljava/net/Inet6Address;)Z
+#getEmbeddedIPv4ClientAddress(Ljava/net/Inet6Address;)Ljava/net/Inet4Address;
+#isMappedIPv4Address(Ljava/lang/String;)Z
+#getCoercedIPv4Address(Ljava/net/InetAddress;)Ljava/net/Inet4Address;
+#coerceToInteger(Ljava/net/InetAddress;)I
+#fromInteger(I)Ljava/net/Inet4Address;
+#fromLittleEndianByteArray([B)Ljava/net/InetAddress;
+#decrement(Ljava/net/InetAddress;)Ljava/net/InetAddress;
+#increment(Ljava/net/InetAddress;)Ljava/net/InetAddress;
+#isMaximum(Ljava/net/InetAddress;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/net/InetAddresses

+###org/apache/flink/shaded/com/google/common/net/InternetDomainName
@0.9.0-milestone-1
+#from(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/InternetDomainName;
+#parts()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#isPublicSuffix()Z
+#hasPublicSuffix()Z
+#publicSuffix()Lorg/apache/flink/shaded/com/google/common/net/InternetDomainName;
+#isUnderPublicSuffix()Z
+#isTopPrivateDomain()Z
+#topPrivateDomain()Lorg/apache/flink/shaded/com/google/common/net/InternetDomainName;
+#hasParent()Z
+#parent()Lorg/apache/flink/shaded/com/google/common/net/InternetDomainName;
+#child(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/InternetDomainName;
+#isValid(Ljava/lang/String;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
-###org/apache/flink/shaded/com/google/common/net/InternetDomainName

+###org/apache/flink/shaded/com/google/common/net/MediaType
@0.9.0-milestone-1
+#type()Ljava/lang/String;
+#subtype()Ljava/lang/String;
+#parameters()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableListMultimap;
+#charset()Lorg/apache/flink/shaded/com/google/common/base/Optional;
+#withoutParameters()Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#withParameters(Lorg/apache/flink/shaded/com/google/common/collect/Multimap;)Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#withParameter(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#withCharset(Ljava/nio/charset/Charset;)Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#hasWildcard()Z
+#is(Lorg/apache/flink/shaded/com/google/common/net/MediaType;)Z
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#parse(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/net/MediaType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/net/MediaType

+###org/apache/flink/shaded/com/google/common/net/PercentEscaper
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;Z)V
+#escape(Ljava/lang/String;)Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/net/PercentEscaper

+###org/apache/flink/shaded/com/google/common/net/UrlEscapers
@0.9.0-milestone-1
+#urlFormParameterEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
+#urlPathSegmentEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
+#urlFragmentEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
@1.1.0
-###org/apache/flink/shaded/com/google/common/net/UrlEscapers

+###org/apache/flink/shaded/com/google/common/primitives/Booleans
@0.9.0-milestone-1
+#hashCode(Z)I
+#compare(ZZ)I
+#contains([ZZ)Z
+#indexOf([ZZ)I
+#indexOf([Z[Z)I
+#lastIndexOf([ZZ)I
+#concat([[Z)[Z
+#ensureCapacity([ZII)[Z
+#join(Ljava/lang/String;[Z)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[Z
+#asList([Z)Ljava/util/List;
+#countTrue([Z)I
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/Booleans

+###org/apache/flink/shaded/com/google/common/primitives/Bytes
@0.9.0-milestone-1
+#hashCode(B)I
+#contains([BB)Z
+#indexOf([BB)I
+#indexOf([B[B)I
+#lastIndexOf([BB)I
+#concat([[B)[B
+#ensureCapacity([BII)[B
+#toArray(Ljava/util/Collection;)[B
+#asList([B)Ljava/util/List;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/Bytes

+###org/apache/flink/shaded/com/google/common/primitives/Chars
@0.9.0-milestone-1
+#hashCode(C)I
+#checkedCast(J)C
+#saturatedCast(J)C
+#compare(CC)I
+#contains([CC)Z
+#indexOf([CC)I
+#indexOf([C[C)I
+#lastIndexOf([CC)I
+#min([C)C
+#max([C)C
+#concat([[C)[C
+#toByteArray(C)[B
+#fromByteArray([B)C
+#fromBytes(BB)C
+#ensureCapacity([CII)[C
+#join(Ljava/lang/String;[C)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[C
+#asList([C)Ljava/util/List;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/Chars

+###org/apache/flink/shaded/com/google/common/primitives/Doubles
@0.9.0-milestone-1
+#hashCode(D)I
+#compare(DD)I
+#isFinite(D)Z
+#contains([DD)Z
+#indexOf([DD)I
+#indexOf([D[D)I
+#lastIndexOf([DD)I
+#min([D)D
+#max([D)D
+#concat([[D)[D
+#stringConverter()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#ensureCapacity([DII)[D
+#join(Ljava/lang/String;[D)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[D
+#asList([D)Ljava/util/List;
+#tryParse(Ljava/lang/String;)Ljava/lang/Double;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/Doubles

+###org/apache/flink/shaded/com/google/common/primitives/Floats
@0.9.0-milestone-1
+#hashCode(F)I
+#compare(FF)I
+#isFinite(F)Z
+#contains([FF)Z
+#indexOf([FF)I
+#indexOf([F[F)I
+#lastIndexOf([FF)I
+#min([F)F
+#max([F)F
+#concat([[F)[F
+#stringConverter()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#ensureCapacity([FII)[F
+#join(Ljava/lang/String;[F)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[F
+#asList([F)Ljava/util/List;
+#tryParse(Ljava/lang/String;)Ljava/lang/Float;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/Floats

+###org/apache/flink/shaded/com/google/common/primitives/Ints
@0.9.0-milestone-1
+#hashCode(I)I
+#checkedCast(J)I
+#saturatedCast(J)I
+#compare(II)I
+#contains([II)Z
+#indexOf([II)I
+#indexOf([I[I)I
+#lastIndexOf([II)I
+#min([I)I
+#max([I)I
+#concat([[I)[I
+#toByteArray(I)[B
+#fromByteArray([B)I
+#fromBytes(BBBB)I
+#stringConverter()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#ensureCapacity([III)[I
+#join(Ljava/lang/String;[I)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[I
+#asList([I)Ljava/util/List;
+#tryParse(Ljava/lang/String;)Ljava/lang/Integer;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/Ints

+###org/apache/flink/shaded/com/google/common/primitives/Longs
@0.9.0-milestone-1
+#hashCode(J)I
+#compare(JJ)I
+#contains([JJ)Z
+#indexOf([JJ)I
+#indexOf([J[J)I
+#lastIndexOf([JJ)I
+#min([J)J
+#max([J)J
+#concat([[J)[J
+#toByteArray(J)[B
+#fromByteArray([B)J
+#fromBytes(BBBBBBBB)J
+#tryParse(Ljava/lang/String;)Ljava/lang/Long;
+#stringConverter()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#ensureCapacity([JII)[J
+#join(Ljava/lang/String;[J)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[J
+#asList([J)Ljava/util/List;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/Longs

+###org/apache/flink/shaded/com/google/common/primitives/Primitives
@0.9.0-milestone-1
+#allPrimitiveTypes()Ljava/util/Set;
+#allWrapperTypes()Ljava/util/Set;
+#isWrapperType(Ljava/lang/Class;)Z
+#wrap(Ljava/lang/Class;)Ljava/lang/Class;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Class;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/Primitives

+###org/apache/flink/shaded/com/google/common/primitives/Shorts
@0.9.0-milestone-1
+#hashCode(S)I
+#checkedCast(J)S
+#saturatedCast(J)S
+#compare(SS)I
+#contains([SS)Z
+#indexOf([SS)I
+#indexOf([S[S)I
+#lastIndexOf([SS)I
+#min([S)S
+#max([S)S
+#concat([[S)[S
+#toByteArray(S)[B
+#fromByteArray([B)S
+#fromBytes(BB)S
+#stringConverter()Lorg/apache/flink/shaded/com/google/common/base/Converter;
+#ensureCapacity([SII)[S
+#join(Ljava/lang/String;[S)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#toArray(Ljava/util/Collection;)[S
+#asList([S)Ljava/util/List;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/Shorts

+###org/apache/flink/shaded/com/google/common/primitives/SignedBytes
@0.9.0-milestone-1
+#checkedCast(J)B
+#saturatedCast(J)B
+#compare(BB)I
+#min([B)B
+#max([B)B
+#join(Ljava/lang/String;[B)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/SignedBytes

+###org/apache/flink/shaded/com/google/common/primitives/UnsignedBytes
@0.9.0-milestone-1
+#toInt(B)I
+#checkedCast(J)B
+#saturatedCast(J)B
+#compare(BB)I
+#min([B)B
+#max([B)B
+#toString(B)Ljava/lang/String;
+#toString(BI)Ljava/lang/String;
+#parseUnsignedByte(Ljava/lang/String;)B
+#parseUnsignedByte(Ljava/lang/String;I)B
+#join(Ljava/lang/String;[B)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/UnsignedBytes

+###org/apache/flink/shaded/com/google/common/primitives/UnsignedInteger
@0.9.0-milestone-1
+#fromIntBits(I)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#valueOf(J)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#valueOf(Ljava/math/BigInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#valueOf(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#plus(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#minus(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#times(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#dividedBy(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#mod(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#bigIntegerValue()Ljava/math/BigInteger;
+#compareTo(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedInteger;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toString(I)Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/UnsignedInteger

+###org/apache/flink/shaded/com/google/common/primitives/UnsignedInts
@0.9.0-milestone-1
+#compare(II)I
+#toLong(I)J
+#min([I)I
+#max([I)I
+#join(Ljava/lang/String;[I)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#divide(II)I
+#remainder(II)I
+#decode(Ljava/lang/String;)I
+#parseUnsignedInt(Ljava/lang/String;)I
+#parseUnsignedInt(Ljava/lang/String;I)I
+#toString(I)Ljava/lang/String;
+#toString(II)Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/UnsignedInts

+###org/apache/flink/shaded/com/google/common/primitives/UnsignedLong
@0.9.0-milestone-1
+#fromLongBits(J)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#valueOf(J)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#valueOf(Ljava/math/BigInteger;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#valueOf(Ljava/lang/String;I)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#plus(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#minus(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#times(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#dividedBy(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#mod(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#bigIntegerValue()Ljava/math/BigInteger;
+#compareTo(Lorg/apache/flink/shaded/com/google/common/primitives/UnsignedLong;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toString(I)Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/UnsignedLong

+###org/apache/flink/shaded/com/google/common/primitives/UnsignedLongs
@0.9.0-milestone-1
+#compare(JJ)I
+#min([J)J
+#max([J)J
+#join(Ljava/lang/String;[J)Ljava/lang/String;
+#lexicographicalComparator()Ljava/util/Comparator;
+#divide(JJ)J
+#remainder(JJ)J
+#parseUnsignedLong(Ljava/lang/String;)J
+#decode(Ljava/lang/String;)J
+#parseUnsignedLong(Ljava/lang/String;I)J
+#toString(J)Ljava/lang/String;
+#toString(JI)Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/primitives/UnsignedLongs

+###org/apache/flink/shaded/com/google/common/reflect/AbstractInvocationHandler
@0.9.0-milestone-1
+#<init>()V
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/AbstractInvocationHandler

+###org/apache/flink/shaded/com/google/common/reflect/ClassPath$ClassInfo
@0.9.0-milestone-1
+#getPackageName()Ljava/lang/String;
+#getSimpleName()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#load()Ljava/lang/Class;
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/ClassPath$ClassInfo

+###org/apache/flink/shaded/com/google/common/reflect/ClassPath$ResourceInfo
@0.9.0-milestone-1
+#url()Ljava/net/URL;
+#getResourceName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/ClassPath$ResourceInfo

+###org/apache/flink/shaded/com/google/common/reflect/ClassPath
@0.9.0-milestone-1
+#from(Ljava/lang/ClassLoader;)Lorg/apache/flink/shaded/com/google/common/reflect/ClassPath;
+#getResources()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#getAllClasses()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#getTopLevelClasses()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#getTopLevelClasses(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
+#getTopLevelClassesRecursive(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableSet;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/ClassPath

+###org/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap$Builder
@0.9.0-milestone-1
+#put(Ljava/lang/Class;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap$Builder;
+#put(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap$Builder;
+#build()Lorg/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap$Builder

+###org/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap
@0.9.0-milestone-1
+#of()Lorg/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap;
+#builder()Lorg/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap$Builder;
+#getInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Ljava/lang/Object;
+#putInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;Ljava/lang/Object;)Ljava/lang/Object;
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/ImmutableTypeToInstanceMap

+###org/apache/flink/shaded/com/google/common/reflect/Invokable
@0.9.0-milestone-1
+#from(Ljava/lang/reflect/Method;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#from(Ljava/lang/reflect/Constructor;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#isOverridable()Z
+#isVarArgs()Z
+#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#getReturnType()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getParameters()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#getExceptionTypes()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#returning(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#returning(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#getDeclaringClass()Ljava/lang/Class;
+#getOwnerType()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/Invokable

+###org/apache/flink/shaded/com/google/common/reflect/MutableTypeToInstanceMap
@0.9.0-milestone-1
+#<init>()V
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Ljava/lang/Object;
+#putInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#entrySet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/MutableTypeToInstanceMap

+###org/apache/flink/shaded/com/google/common/reflect/Parameter
@0.9.0-milestone-1
+#getType()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getDeclaringInvokable()Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#isAnnotationPresent(Ljava/lang/Class;)Z
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getAnnotations()[Ljava/lang/annotation/Annotation;
+#getAnnotationsByType(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;
+#getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;
+#getDeclaredAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getDeclaredAnnotationsByType(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/Parameter

+###org/apache/flink/shaded/com/google/common/reflect/Reflection
@0.9.0-milestone-1
+#getPackageName(Ljava/lang/Class;)Ljava/lang/String;
+#getPackageName(Ljava/lang/String;)Ljava/lang/String;
+#initialize([Ljava/lang/Class;)V
+#newProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/Reflection

+###org/apache/flink/shaded/com/google/common/reflect/TypeParameter
@0.9.0-milestone-1
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/TypeParameter

+###org/apache/flink/shaded/com/google/common/reflect/TypeResolver
@0.9.0-milestone-1
+#<init>()V
+#where(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeResolver;
+#resolveType(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/TypeResolver

+###org/apache/flink/shaded/com/google/common/reflect/TypeToInstanceMap
@0.9.0-milestone-1
+#getInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#putInstance(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Ljava/lang/Object;
+#putInstance(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;Ljava/lang/Object;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/TypeToInstanceMap

+###org/apache/flink/shaded/com/google/common/reflect/TypeToken$TypeSet
@0.9.0-milestone-1
+#interfaces()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken$TypeSet;
+#classes()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken$TypeSet;
+#rawTypes()Ljava/util/Set;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/TypeToken$TypeSet

+###org/apache/flink/shaded/com/google/common/reflect/TypeToken
@0.9.0-milestone-1
+#of(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#of(Ljava/lang/reflect/Type;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getRawType()Ljava/lang/Class;
+#getType()Ljava/lang/reflect/Type;
+#where(Lorg/apache/flink/shaded/com/google/common/reflect/TypeParameter;Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#where(Lorg/apache/flink/shaded/com/google/common/reflect/TypeParameter;Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#resolveType(Ljava/lang/reflect/Type;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getTypes()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken$TypeSet;
+#getSupertype(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getSubtype(Ljava/lang/Class;)Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#isAssignableFrom(Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;)Z
+#isAssignableFrom(Ljava/lang/reflect/Type;)Z
+#isArray()Z
+#isPrimitive()Z
+#wrap()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#unwrap()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#getComponentType()Lorg/apache/flink/shaded/com/google/common/reflect/TypeToken;
+#method(Ljava/lang/reflect/Method;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#constructor(Ljava/lang/reflect/Constructor;)Lorg/apache/flink/shaded/com/google/common/reflect/Invokable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/reflect/TypeToken

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractCheckedFuture
@0.9.0-milestone-1
+#checkedGet()Ljava/lang/Object;
+#checkedGet(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractCheckedFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractExecutionThreadService
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
+#isRunning()Z
+#state()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
+#failureCause()Ljava/lang/Throwable;
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractExecutionThreadService

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractFuture
@0.9.0-milestone-1
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#get()Ljava/lang/Object;
+#isDone()Z
+#isCancelled()Z
+#cancel(Z)Z
+#addListener(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractIdleService
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
+#isRunning()Z
+#state()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
+#failureCause()Ljava/lang/Throwable;
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractIdleService

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractListeningExecutorService
@0.9.0-milestone-1
+#<init>()V
+#submit(Ljava/lang/Runnable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/util/concurrent/Callable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractListeningExecutorService

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule
@0.9.0-milestone-1
+#<init>(JLjava/util/concurrent/TimeUnit;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler
@0.9.0-milestone-1
+#<init>()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$Scheduler
@0.9.0-milestone-1
+#newFixedDelaySchedule(JJLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$Scheduler;
+#newFixedRateSchedule(JJLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$Scheduler;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService$Scheduler

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService
@0.9.0-milestone-1
+#toString()Ljava/lang/String;
+#isRunning()Z
+#state()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
+#failureCause()Ljava/lang/Throwable;
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractScheduledService

+###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractService
@0.9.0-milestone-1
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
+#isRunning()Z
+#state()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#failureCause()Ljava/lang/Throwable;
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AbstractService

+###org/apache/flink/shaded/com/google/common/util/concurrent/AsyncFunction
@0.9.0-milestone-1
+#apply(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AsyncFunction

+###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicDouble
@0.9.0-milestone-1
+#<init>(D)V
+#<init>()V
+#get()D
+#set(D)V
+#lazySet(D)V
+#getAndSet(D)D
+#compareAndSet(DD)Z
+#weakCompareAndSet(DD)Z
+#getAndAdd(D)D
+#addAndGet(D)D
+#toString()Ljava/lang/String;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicDouble

+###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicDoubleArray
@0.9.0-milestone-1
+#<init>(I)V
+#<init>([D)V
+#length()I
+#get(I)D
+#set(ID)V
+#lazySet(ID)V
+#getAndSet(ID)D
+#compareAndSet(IDD)Z
+#weakCompareAndSet(IDD)Z
+#getAndAdd(ID)D
+#addAndGet(ID)D
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicDoubleArray

+###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicLongMap
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/util/concurrent/AtomicLongMap;
+#create(Ljava/util/Map;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/AtomicLongMap;
+#get(Ljava/lang/Object;)J
+#incrementAndGet(Ljava/lang/Object;)J
+#decrementAndGet(Ljava/lang/Object;)J
+#addAndGet(Ljava/lang/Object;J)J
+#getAndIncrement(Ljava/lang/Object;)J
+#getAndDecrement(Ljava/lang/Object;)J
+#getAndAdd(Ljava/lang/Object;J)J
+#put(Ljava/lang/Object;J)J
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)J
+#removeAllZeros()V
+#sum()J
+#asMap()Ljava/util/Map;
+#containsKey(Ljava/lang/Object;)Z
+#size()I
+#isEmpty()Z
+#clear()V
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/AtomicLongMap

+###org/apache/flink/shaded/com/google/common/util/concurrent/Atomics
@0.9.0-milestone-1
+#newReference()Ljava/util/concurrent/atomic/AtomicReference;
+#newReference(Ljava/lang/Object;)Ljava/util/concurrent/atomic/AtomicReference;
+#newReferenceArray(I)Ljava/util/concurrent/atomic/AtomicReferenceArray;
+#newReferenceArray([Ljava/lang/Object;)Ljava/util/concurrent/atomic/AtomicReferenceArray;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Atomics

+###org/apache/flink/shaded/com/google/common/util/concurrent/Callables
@0.9.0-milestone-1
+#returning(Ljava/lang/Object;)Ljava/util/concurrent/Callable;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Callables

+###org/apache/flink/shaded/com/google/common/util/concurrent/CheckedFuture
@0.9.0-milestone-1
+#checkedGet()Ljava/lang/Object;
+#checkedGet(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CheckedFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policies
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policies;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policies;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policies

+###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policy
@0.9.0-milestone-1
+#handlePotentialDeadlock(Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policy

+###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException
@0.9.0-milestone-1
+#getConflictingStackTrace()Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace;
+#getMessage()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException

+###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$WithExplicitOrdering
@0.9.0-milestone-1
+#newReentrantLock(Ljava/lang/Enum;)Ljava/util/concurrent/locks/ReentrantLock;
+#newReentrantLock(Ljava/lang/Enum;Z)Ljava/util/concurrent/locks/ReentrantLock;
+#newReentrantReadWriteLock(Ljava/lang/Enum;)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#newReentrantReadWriteLock(Ljava/lang/Enum;Z)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$WithExplicitOrdering

+###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory
@0.9.0-milestone-1
+#newInstance(Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policy;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory;
+#newReentrantLock(Ljava/lang/String;)Ljava/util/concurrent/locks/ReentrantLock;
+#newReentrantLock(Ljava/lang/String;Z)Ljava/util/concurrent/locks/ReentrantLock;
+#newReentrantReadWriteLock(Ljava/lang/String;)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#newReentrantReadWriteLock(Ljava/lang/String;Z)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#newInstanceWithExplicitOrdering(Ljava/lang/Class;Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$Policy;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory$WithExplicitOrdering;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/CycleDetectingLockFactory

+###org/apache/flink/shaded/com/google/common/util/concurrent/ExecutionError
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;Ljava/lang/Error;)V
+#<init>(Ljava/lang/Error;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ExecutionError

+###org/apache/flink/shaded/com/google/common/util/concurrent/ExecutionList
@0.9.0-milestone-1
+#<init>()V
+#add(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
+#execute()V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ExecutionList

+###org/apache/flink/shaded/com/google/common/util/concurrent/FakeTimeLimiter
@0.9.0-milestone-1
+#<init>()V
+#newProxy(Ljava/lang/Object;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#callWithTimeout(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;Z)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/FakeTimeLimiter

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingBlockingQueue
@0.9.0-milestone-1
+#drainTo(Ljava/util/Collection;I)I
+#drainTo(Ljava/util/Collection;)I
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#put(Ljava/lang/Object;)V
+#remainingCapacity()I
+#take()Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingBlockingQueue

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingCheckedFuture$SimpleForwardingCheckedFuture
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingCheckedFuture$SimpleForwardingCheckedFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingCheckedFuture
@0.9.0-milestone-1
+#<init>()V
+#checkedGet()Ljava/lang/Object;
+#checkedGet(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingCheckedFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingExecutorService
@0.9.0-milestone-1
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
+#invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
+#invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#isShutdown()Z
+#isTerminated()Z
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#execute(Ljava/lang/Runnable;)V
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingExecutorService

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingFuture$SimpleForwardingFuture
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingFuture$SimpleForwardingFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingFuture
@0.9.0-milestone-1
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListenableFuture$SimpleForwardingListenableFuture
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListenableFuture$SimpleForwardingListenableFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListenableFuture
@0.9.0-milestone-1
+#addListener(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListenableFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListeningExecutorService
@0.9.0-milestone-1
+#submit(Ljava/util/concurrent/Callable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ForwardingListeningExecutorService

+###org/apache/flink/shaded/com/google/common/util/concurrent/FutureCallback
@0.9.0-milestone-1
+#onSuccess(Ljava/lang/Object;)V
+#onFailure(Ljava/lang/Throwable;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/FutureCallback

+###org/apache/flink/shaded/com/google/common/util/concurrent/FutureFallback
@0.9.0-milestone-1
+#create(Ljava/lang/Throwable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/FutureFallback

+###org/apache/flink/shaded/com/google/common/util/concurrent/Futures
@0.9.0-milestone-1
+#makeChecked(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CheckedFuture;
+#immediateFuture(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#immediateCheckedFuture(Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CheckedFuture;
+#immediateFailedFuture(Ljava/lang/Throwable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#immediateCancelledFuture()Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#immediateFailedCheckedFuture(Ljava/lang/Exception;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/CheckedFuture;
+#withFallback(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/FutureFallback;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#withFallback(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/FutureFallback;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#transform(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/AsyncFunction;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#transform(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#transform(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/base/Function;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#transform(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/base/Function;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#lazyTransform(Ljava/util/concurrent/Future;Lorg/apache/flink/shaded/com/google/common/base/Function;)Ljava/util/concurrent/Future;
+#dereference(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#allAsList([Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#allAsList(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#nonCancellationPropagating(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#successfulAsList([Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#successfulAsList(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#inCompletionOrder(Ljava/lang/Iterable;)Lorg/apache/flink/shaded/com/google/common/collect/ImmutableList;
+#addCallback(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/FutureCallback;)V
+#addCallback(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;Lorg/apache/flink/shaded/com/google/common/util/concurrent/FutureCallback;Ljava/util/concurrent/Executor;)V
+#get(Ljava/util/concurrent/Future;Ljava/lang/Class;)Ljava/lang/Object;
+#get(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;Ljava/lang/Class;)Ljava/lang/Object;
+#getUnchecked(Ljava/util/concurrent/Future;)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Futures

+###org/apache/flink/shaded/com/google/common/util/concurrent/JdkFutureAdapters
@0.9.0-milestone-1
+#listenInPoolThread(Ljava/util/concurrent/Future;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#listenInPoolThread(Ljava/util/concurrent/Future;Ljava/util/concurrent/Executor;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/JdkFutureAdapters

+###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture
@0.9.0-milestone-1
+#addListener(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableFutureTask
@0.9.0-milestone-1
+#create(Ljava/util/concurrent/Callable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFutureTask;
+#create(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFutureTask;
+#addListener(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableFutureTask

+###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/ListeningExecutorService
@0.9.0-milestone-1
+#submit(Ljava/util/concurrent/Callable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableFuture;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ListeningExecutorService

+###org/apache/flink/shaded/com/google/common/util/concurrent/ListeningScheduledExecutorService
@0.9.0-milestone-1
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture;
+#schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture;
+#scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture;
+#scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListenableScheduledFuture;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ListeningScheduledExecutorService

+###org/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard
@0.9.0-milestone-1
+#isSatisfied()Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard

+###org/apache/flink/shaded/com/google/common/util/concurrent/Monitor
@0.9.0-milestone-1
+#<init>()V
+#<init>(Z)V
+#enter()V
+#enterInterruptibly()V
+#enter(JLjava/util/concurrent/TimeUnit;)Z
+#enterInterruptibly(JLjava/util/concurrent/TimeUnit;)Z
+#tryEnter()Z
+#enterWhen(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
+#enterWhenUninterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
+#enterWhen(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#enterWhenUninterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#enterIf(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)Z
+#enterIfInterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)Z
+#enterIf(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#enterIfInterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#tryEnterIf(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)Z
+#waitFor(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
+#waitForUninterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)V
+#waitFor(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#waitForUninterruptibly(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
+#leave()V
+#isFair()Z
+#isOccupied()Z
+#isOccupiedByCurrentThread()Z
+#getOccupiedDepth()I
+#getQueueLength()I
+#hasQueuedThreads()Z
+#hasQueuedThread(Ljava/lang/Thread;)Z
+#hasWaiters(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)Z
+#getWaitQueueLength(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Monitor$Guard;)I
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Monitor

+###org/apache/flink/shaded/com/google/common/util/concurrent/MoreExecutors
@0.9.0-milestone-1
+#getExitingExecutorService(Ljava/util/concurrent/ThreadPoolExecutor;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ExecutorService;
+#getExitingScheduledExecutorService(Ljava/util/concurrent/ScheduledThreadPoolExecutor;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledExecutorService;
+#addDelayedShutdownHook(Ljava/util/concurrent/ExecutorService;JLjava/util/concurrent/TimeUnit;)V
+#getExitingExecutorService(Ljava/util/concurrent/ThreadPoolExecutor;)Ljava/util/concurrent/ExecutorService;
+#getExitingScheduledExecutorService(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)Ljava/util/concurrent/ScheduledExecutorService;
+#sameThreadExecutor()Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListeningExecutorService;[deprecated]
+#newDirectExecutorService()Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListeningExecutorService;
+#directExecutor()Ljava/util/concurrent/Executor;
+#listeningDecorator(Ljava/util/concurrent/ExecutorService;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListeningExecutorService;
+#listeningDecorator(Ljava/util/concurrent/ScheduledExecutorService;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ListeningScheduledExecutorService;
+#platformThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#shutdownAndAwaitTermination(Ljava/util/concurrent/ExecutorService;JLjava/util/concurrent/TimeUnit;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/MoreExecutors

+###org/apache/flink/shaded/com/google/common/util/concurrent/RateLimiter
@0.9.0-milestone-1
+#create(D)Lorg/apache/flink/shaded/com/google/common/util/concurrent/RateLimiter;
+#create(DJLjava/util/concurrent/TimeUnit;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/RateLimiter;
+#setRate(D)V
+#getRate()D
+#acquire()D
+#acquire(I)D
+#tryAcquire(JLjava/util/concurrent/TimeUnit;)Z
+#tryAcquire(I)Z
+#tryAcquire()Z
+#tryAcquire(IJLjava/util/concurrent/TimeUnit;)Z
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/RateLimiter

+###org/apache/flink/shaded/com/google/common/util/concurrent/Runnables
@0.9.0-milestone-1
+#doNothing()Ljava/lang/Runnable;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Runnables

+###org/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener
@0.9.0-milestone-1
+#<init>()V
+#starting()V
+#running()V
+#stopping(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;)V
+#terminated(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;)V
+#failed(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;Ljava/lang/Throwable;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener

+###org/apache/flink/shaded/com/google/common/util/concurrent/Service$State
@0.9.0-milestone-1
+#values()[Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Service$State

+###org/apache/flink/shaded/com/google/common/util/concurrent/Service
@0.9.0-milestone-1
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#isRunning()Z
+#state()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$State;
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
+#failureCause()Ljava/lang/Throwable;
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Service

+###org/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager$Listener
@0.9.0-milestone-1
+#<init>()V
+#healthy()V
+#stopped()V
+#failure(Lorg/apache/flink/shaded/com/google/common/util/concurrent/Service;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager$Listener

+###org/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager
@0.9.0-milestone-1
+#<init>(Ljava/lang/Iterable;)V
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager$Listener;Ljava/util/concurrent/Executor;)V
+#addListener(Lorg/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager$Listener;)V
+#startAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager;
+#awaitHealthy()V
+#awaitHealthy(JLjava/util/concurrent/TimeUnit;)V
+#stopAsync()Lorg/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager;
+#awaitStopped()V
+#awaitStopped(JLjava/util/concurrent/TimeUnit;)V
+#isHealthy()Z
+#servicesByState()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMultimap;
+#startupTimes()Lorg/apache/flink/shaded/com/google/common/collect/ImmutableMap;
+#toString()Ljava/lang/String;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ServiceManager

+###org/apache/flink/shaded/com/google/common/util/concurrent/SettableFuture
@0.9.0-milestone-1
+#create()Lorg/apache/flink/shaded/com/google/common/util/concurrent/SettableFuture;
+#set(Ljava/lang/Object;)Z
+#setException(Ljava/lang/Throwable;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/SettableFuture

+###org/apache/flink/shaded/com/google/common/util/concurrent/SimpleTimeLimiter
@0.9.0-milestone-1
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#<init>()V
+#newProxy(Ljava/lang/Object;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#callWithTimeout(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;Z)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/SimpleTimeLimiter

+###org/apache/flink/shaded/com/google/common/util/concurrent/Striped
@0.9.0-milestone-1
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getAt(I)Ljava/lang/Object;
+#size()I
+#bulkGet(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#lock(I)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
+#lazyWeakLock(I)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
+#semaphore(II)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
+#lazyWeakSemaphore(II)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
+#readWriteLock(I)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
+#lazyWeakReadWriteLock(I)Lorg/apache/flink/shaded/com/google/common/util/concurrent/Striped;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Striped

+###org/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder
@0.9.0-milestone-1
+#<init>()V
+#setNameFormat(Ljava/lang/String;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder;
+#setDaemon(Z)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder;
+#setPriority(I)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder;
+#setUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder;
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder;
+#build()Ljava/util/concurrent/ThreadFactory;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/ThreadFactoryBuilder

+###org/apache/flink/shaded/com/google/common/util/concurrent/TimeLimiter
@0.9.0-milestone-1
+#newProxy(Ljava/lang/Object;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#callWithTimeout(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;Z)Ljava/lang/Object;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/TimeLimiter

+###org/apache/flink/shaded/com/google/common/util/concurrent/UncaughtExceptionHandlers
@0.9.0-milestone-1
+#systemExit()Ljava/lang/Thread$UncaughtExceptionHandler;
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/UncaughtExceptionHandlers

+###org/apache/flink/shaded/com/google/common/util/concurrent/UncheckedExecutionException
@0.9.0-milestone-1
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/UncheckedExecutionException

+###org/apache/flink/shaded/com/google/common/util/concurrent/UncheckedTimeoutException
@0.9.0-milestone-1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/UncheckedTimeoutException

+###org/apache/flink/shaded/com/google/common/util/concurrent/Uninterruptibles
@0.9.0-milestone-1
+#awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;)V
+#awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;JLjava/util/concurrent/TimeUnit;)Z
+#joinUninterruptibly(Ljava/lang/Thread;)V
+#getUninterruptibly(Ljava/util/concurrent/Future;)Ljava/lang/Object;
+#getUninterruptibly(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#joinUninterruptibly(Ljava/lang/Thread;JLjava/util/concurrent/TimeUnit;)V
+#takeUninterruptibly(Ljava/util/concurrent/BlockingQueue;)Ljava/lang/Object;
+#putUninterruptibly(Ljava/util/concurrent/BlockingQueue;Ljava/lang/Object;)V
+#sleepUninterruptibly(JLjava/util/concurrent/TimeUnit;)V
+#tryAcquireUninterruptibly(Ljava/util/concurrent/Semaphore;JLjava/util/concurrent/TimeUnit;)Z
+#tryAcquireUninterruptibly(Ljava/util/concurrent/Semaphore;IJLjava/util/concurrent/TimeUnit;)Z
@1.1.0
-###org/apache/flink/shaded/com/google/common/util/concurrent/Uninterruptibles

+###org/apache/flink/shaded/com/google/common/xml/XmlEscapers
@0.9.0-milestone-1
+#xmlContentEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
+#xmlAttributeEscaper()Lorg/apache/flink/shaded/com/google/common/escape/Escaper;
@1.1.0
-###org/apache/flink/shaded/com/google/common/xml/XmlEscapers

+###org/apache/flink/shaded/com/google/thirdparty/publicsuffix/PublicSuffixPatterns
@0.9.0-milestone-1
@1.1.0
-###org/apache/flink/shaded/com/google/thirdparty/publicsuffix/PublicSuffixPatterns

+###org/apache/flink/core/memory/ByteArrayDataInputView
@1.6.0
+#<init>()V
+#<init>([B)V
+#<init>([BII)V
+#getPosition()I
+#setPosition(I)V
+#setData([BII)V
@1.7.0
-###org/apache/flink/core/memory/ByteArrayDataInputView

+###org/apache/flink/core/memory/ByteArrayDataOutputView
@1.6.0
+#<init>()V
+#<init>(I)V
+#reset()V
+#toByteArray()[B
+#getPosition()I
+#setPosition(I)V
+#getInternalBufferReference()[B
@1.7.0
-###org/apache/flink/core/memory/ByteArrayDataOutputView

+###org/apache/flink/configuration/RestartBackoffTimeStrategyOptions
@1.9.0
+#<init>()V
@1.10.0
-###org/apache/flink/configuration/RestartBackoffTimeStrategyOptions

+###org/apache/flink/util/ClassLoaderUtils
@1.9.0
+#getClasspathURLs()[Ljava/net/URL;
@1.10.0
-###org/apache/flink/util/ClassLoaderUtils

+###org/apache/flink/util/MemoryArchitecture
@1.9.0
+#values()[Lorg/apache/flink/util/MemoryArchitecture;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/util/MemoryArchitecture;
+#get()Lorg/apache/flink/util/MemoryArchitecture;
@1.11.0
-###org/apache/flink/util/MemoryArchitecture

+###org/apache/flink/core/plugin/TemporaryClassLoaderContext
@1.9.0
+#<init>(Ljava/lang/ClassLoader;)V
+#close()V
@1.11.0
-###org/apache/flink/core/plugin/TemporaryClassLoaderContext

+###org/apache/flink/configuration/MetricOptions$JobStatusMetrics
@1.15.0
+#values()[Lorg/apache/flink/configuration/MetricOptions$JobStatusMetrics;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/configuration/MetricOptions$JobStatusMetrics;
+#getDescription()Lorg/apache/flink/configuration/description/InlineElement;

+###org/apache/flink/configuration/CleanupOptions
@1.15.0
+#<init>()V
+#extractAlphaNumericCharacters(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/flink/configuration/StateChangelogOptions
@1.15.0
+#<init>()V

+###org/apache/flink/configuration/MetricOptions$JobStatusMetricsSettings
@1.15.0
+#isStateMetricsEnabled()Z
+#isCurrentTimeMetricsEnabled()Z
+#isTotalTimeMetricsEnabled()Z
+#fromConfiguration(Lorg/apache/flink/configuration/Configuration;)Lorg/apache/flink/configuration/MetricOptions$JobStatusMetricsSettings;

+###org/apache/flink/configuration/JobManagerOptions$JobStoreType
@1.15.0
+#values()[Lorg/apache/flink/configuration/JobManagerOptions$JobStoreType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/configuration/JobManagerOptions$JobStoreType;

+###org/apache/flink/configuration/PipelineOptions$VertexDescriptionMode
@1.15.0
+#values()[Lorg/apache/flink/configuration/PipelineOptions$VertexDescriptionMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/configuration/PipelineOptions$VertexDescriptionMode;

+###org/apache/flink/core/execution/SavepointFormatType
@1.15.0
+#values()[Lorg/apache/flink/core/execution/SavepointFormatType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/core/execution/SavepointFormatType;
+#getDescription()Lorg/apache/flink/configuration/description/InlineElement;

+###org/apache/flink/core/fs/DuplicatingFileSystem$CopyRequest
@1.15.0
+#getSource()Lorg/apache/flink/core/fs/Path;
+#getDestination()Lorg/apache/flink/core/fs/Path;
+#of(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Lorg/apache/flink/core/fs/DuplicatingFileSystem$CopyRequest;

+###org/apache/flink/core/fs/AutoCloseableRegistry
@1.15.0
+#<init>()V

+###org/apache/flink/core/fs/local/LocalRecoverableFsDataOutputStream
@1.15.0
+#<init>(Ljava/io/File;Ljava/io/File;)V
+#write(I)V
+#write([BII)V
+#flush()V
+#sync()V
+#getPos()J
+#persist()Lorg/apache/flink/core/fs/RecoverableWriter$ResumeRecoverable;
+#closeForCommit()Lorg/apache/flink/core/fs/RecoverableFsDataOutputStream$Committer;
+#close()V

+###org/apache/flink/core/fs/DuplicatingFileSystem
@1.15.0
+#canFastDuplicate(Lorg/apache/flink/core/fs/Path;Lorg/apache/flink/core/fs/Path;)Z
+#duplicate(Ljava/util/List;)V

+###org/apache/flink/util/Reference
@1.15.0
+#deref()Ljava/lang/Object;
+#owned()Ljava/util/Optional;
+#isOwned()Z
+#toString()Ljava/lang/String;
+#owned(Ljava/lang/Object;)Lorg/apache/flink/util/Reference;
+#borrowed(Ljava/lang/Object;)Lorg/apache/flink/util/Reference;

+###org/apache/flink/util/CloseShieldOutputStream
@1.15.0
+#<init>(Ljava/io/OutputStream;)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#flush()V
+#close()V

+###org/apache/flink/util/FileLock
@1.15.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#inTempFolder(Ljava/lang/String;)Lorg/apache/flink/util/FileLock;
+#tryLock()Z
+#unlock()V
+#unlockAndDestroy()V
+#isValid()Z

+###org/apache/flink/util/OptionalUtils
@1.15.0
+#stream(Ljava/util/Optional;)Ljava/util/stream/Stream;
+#firstPresent([Ljava/util/Optional;)Ljava/util/Optional;

+###org/apache/flink/util/function/CachingSupplier
@1.15.0
+#<init>(Ljava/util/function/Supplier;)V
+#get()Ljava/lang/Object;

+###org/apache/flink/util/function/SerializableSupplierWithException
@1.15.0

+###org/apache/flink/util/AbstractAutoCloseableRegistry
@1.15.0
+#<init>(Ljava/util/Map;)V
+#registerCloseable(Ljava/lang/AutoCloseable;)V
+#unregisterCloseable(Ljava/lang/AutoCloseable;)Z
+#close()V
+#isClosed()Z
+#getNumberOfRegisteredCloseables()I
+#isCloseableRegistered(Ljava/lang/AutoCloseable;)Z

+###org/apache/flink/util/NetUtils$Port
@1.15.0
+#<init>(ILorg/apache/flink/util/FileLock;)V
+#getPort()I
+#close()V

+###org/apache/flink/api/java/typeutils/runtime/kryo/ChillSerializerRegistrar
@1.15.0
+#registerSerializers(Lcom/esotericsoftware/kryo/Kryo;)V
+#getNextRegistrationId()I

+###org/apache/flink/api/common/operators/ProcessingTimeService$ProcessingTimeCallback
@1.15.0
+#onProcessingTime(J)V

+###org/apache/flink/api/common/operators/ProcessingTimeService
@1.15.0
+#getCurrentProcessingTime()J
+#registerTimer(JLorg/apache/flink/api/common/operators/ProcessingTimeService$ProcessingTimeCallback;)Ljava/util/concurrent/ScheduledFuture;

+###org/apache/flink/api/common/state/InternalCheckpointListener
@1.15.0
+#notifyCheckpointSubsumed(J)V

+###org/apache/flink/api/common/eventtime/WatermarkAlignmentParams
@1.15.0
+#<init>(JLjava/lang/String;J)V
+#isEnabled()Z
+#getMaxAllowedWatermarkDrift()J
+#getWatermarkGroup()Ljava/lang/String;
+#getUpdateInterval()J

+###org/apache/flink/api/connector/sink2/StatefulSink
@1.15.0
+#createWriter(Lorg/apache/flink/api/connector/sink2/Sink$InitContext;)Lorg/apache/flink/api/connector/sink2/StatefulSink$StatefulSinkWriter;
+#restoreWriter(Lorg/apache/flink/api/connector/sink2/Sink$InitContext;Ljava/util/Collection;)Lorg/apache/flink/api/connector/sink2/StatefulSink$StatefulSinkWriter;
+#getWriterStateSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;
+#createWriter(Lorg/apache/flink/api/connector/sink2/Sink$InitContext;)Lorg/apache/flink/api/connector/sink2/SinkWriter;

+###org/apache/flink/api/connector/sink2/Committer$CommitRequest
@1.15.0
+#getCommittable()Ljava/lang/Object;
+#getNumberOfRetries()I
+#signalFailedWithKnownReason(Ljava/lang/Throwable;)V
+#signalFailedWithUnknownReason(Ljava/lang/Throwable;)V
+#retryLater()V
+#updateAndRetryLater(Ljava/lang/Object;)V
+#signalAlreadyCommitted()V

+###org/apache/flink/api/connector/sink2/StatefulSink$StatefulSinkWriter
@1.15.0
+#snapshotState(J)Ljava/util/List;

+###org/apache/flink/api/connector/sink2/TwoPhaseCommittingSink$PrecommittingSinkWriter
@1.15.0
+#prepareCommit()Ljava/util/Collection;

+###org/apache/flink/api/connector/sink2/Sink$InitContext
@1.15.0
+#getUserCodeClassLoader()Lorg/apache/flink/util/UserCodeClassLoader;
+#getMailboxExecutor()Lorg/apache/flink/api/common/operators/MailboxExecutor;
+#getProcessingTimeService()Lorg/apache/flink/api/common/operators/ProcessingTimeService;
+#getSubtaskId()I
+#getNumberOfParallelSubtasks()I
+#metricGroup()Lorg/apache/flink/metrics/groups/SinkWriterMetricGroup;
+#getRestoredCheckpointId()Ljava/util/OptionalLong;
+#asSerializationSchemaInitializationContext()Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;
+#metadataConsumer()Ljava/util/Optional;

+###org/apache/flink/api/connector/sink2/SinkWriter$Context
@1.15.0
+#currentWatermark()J
+#timestamp()Ljava/lang/Long;

+###org/apache/flink/api/connector/sink2/Sink
@1.15.0
+#createWriter(Lorg/apache/flink/api/connector/sink2/Sink$InitContext;)Lorg/apache/flink/api/connector/sink2/SinkWriter;

+###org/apache/flink/api/connector/sink2/Committer
@1.15.0
+#commit(Ljava/util/Collection;)V

+###org/apache/flink/api/connector/sink2/StatefulSink$WithCompatibleState
@1.15.0
+#getCompatibleWriterStateNames()Ljava/util/Collection;

+###org/apache/flink/api/connector/sink2/SinkWriter
@1.15.0
+#write(Ljava/lang/Object;Lorg/apache/flink/api/connector/sink2/SinkWriter$Context;)V
+#flush(Z)V
+#writeWatermark(Lorg/apache/flink/api/common/eventtime/Watermark;)V

+###org/apache/flink/api/connector/sink2/TwoPhaseCommittingSink
@1.15.0
+#createWriter(Lorg/apache/flink/api/connector/sink2/Sink$InitContext;)Lorg/apache/flink/api/connector/sink2/TwoPhaseCommittingSink$PrecommittingSinkWriter;
+#createCommitter()Lorg/apache/flink/api/connector/sink2/Committer;
+#getCommittableSerializer()Lorg/apache/flink/core/io/SimpleVersionedSerializer;
+#createWriter(Lorg/apache/flink/api/connector/sink2/Sink$InitContext;)Lorg/apache/flink/api/connector/sink2/SinkWriter;

+###org/apache/flink/configuration/ConfigGroup
@1.4.0
+#name()Ljava/lang/String;
+#keyPrefix()Ljava/lang/String;
@1.5.0
-###org/apache/flink/configuration/ConfigGroup

+###org/apache/flink/configuration/ConfigGroups
@1.4.0
+#groups()[Lorg/apache/flink/configuration/ConfigGroup;
@1.5.0
-###org/apache/flink/configuration/ConfigGroups

+###org/apache/flink/configuration/ConfigOptionsDocGenerator
@1.4.0
+#main([Ljava/lang/String;)V
@1.5.0
-###org/apache/flink/configuration/ConfigOptionsDocGenerator

+###org/apache/flink/util/ThrowingConsumer
@1.4.0
+#accept(Ljava/lang/Object;)V
@1.5.0
-###org/apache/flink/util/ThrowingConsumer

+###org/apache/flink/api/common/typeutils/TypeSerializerSerializationProxy
@1.2.0
+#<init>(Ljava/lang/ClassLoader;Z)V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getTypeSerializer()Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getVersion()I
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isIgnoreClassNotFound()Z
+#setIgnoreClassNotFound(Z)V
@1.3.0
-###org/apache/flink/api/common/typeutils/TypeSerializerSerializationProxy

+###org/apache/flink/api/common/ExecutionConfig$Entry
@0.9.0-milestone-1
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.10.0
-###org/apache/flink/api/common/ExecutionConfig$Entry

+###org/apache/flink/api/common/typeutils/CompositeSerializerSnapshot
@1.7.0
+#<init>([Lorg/apache/flink/api/common/typeutils/TypeSerializer;)V
+#getRestoreSerializers()[Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#getRestoreSerializer(I)Lorg/apache/flink/api/common/typeutils/TypeSerializer;
+#resolveCompatibilityWithNested(Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;[Lorg/apache/flink/api/common/typeutils/TypeSerializer;)Lorg/apache/flink/api/common/typeutils/TypeSerializerSchemaCompatibility;
+#writeCompositeSnapshot(Lorg/apache/flink/core/memory/DataOutputView;)V
+#readCompositeSnapshot(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/CompositeSerializerSnapshot;
+#legacyReadProductSnapshots(Lorg/apache/flink/core/memory/DataInputView;Ljava/lang/ClassLoader;)Lorg/apache/flink/api/common/typeutils/CompositeSerializerSnapshot;
@1.8.0
-###org/apache/flink/api/common/typeutils/CompositeSerializerSnapshot

+###org/apache/flink/configuration/ReadableConfigToConfigurationAdapter
@1.10.0
+#<init>(Lorg/apache/flink/configuration/ReadableConfig;)V
+#getString(Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/String;
+#getString(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/String;)Ljava/lang/String;
+#getInteger(Lorg/apache/flink/configuration/ConfigOption;)I
+#getInteger(Lorg/apache/flink/configuration/ConfigOption;I)I
+#getLong(Lorg/apache/flink/configuration/ConfigOption;)J
+#getLong(Lorg/apache/flink/configuration/ConfigOption;J)J
+#getBoolean(Lorg/apache/flink/configuration/ConfigOption;)Z
+#getBoolean(Lorg/apache/flink/configuration/ConfigOption;Z)Z
+#getFloat(Lorg/apache/flink/configuration/ConfigOption;)F
+#getFloat(Lorg/apache/flink/configuration/ConfigOption;F)F
+#getDouble(Lorg/apache/flink/configuration/ConfigOption;)D
+#getDouble(Lorg/apache/flink/configuration/ConfigOption;D)D
+#get(Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/Object;
+#getOptional(Lorg/apache/flink/configuration/ConfigOption;)Ljava/util/Optional;
+#contains(Lorg/apache/flink/configuration/ConfigOption;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#setClass(Ljava/lang/String;Ljava/lang/Class;)V
+#setString(Ljava/lang/String;Ljava/lang/String;)V
+#setString(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/String;)V
+#setInteger(Ljava/lang/String;I)V
+#setInteger(Lorg/apache/flink/configuration/ConfigOption;I)V
+#setLong(Ljava/lang/String;J)V
+#setLong(Lorg/apache/flink/configuration/ConfigOption;J)V
+#setBoolean(Ljava/lang/String;Z)V
+#setBoolean(Lorg/apache/flink/configuration/ConfigOption;Z)V
+#setFloat(Ljava/lang/String;F)V
+#setFloat(Lorg/apache/flink/configuration/ConfigOption;F)V
+#setDouble(Ljava/lang/String;D)V
+#setDouble(Lorg/apache/flink/configuration/ConfigOption;D)V
+#setBytes(Ljava/lang/String;[B)V
+#addAllToProperties(Ljava/util/Properties;)V
+#addAll(Lorg/apache/flink/configuration/Configuration;)V
+#addAll(Lorg/apache/flink/configuration/Configuration;Ljava/lang/String;)V
+#set(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/Object;)Lorg/apache/flink/configuration/Configuration;
+#removeConfig(Lorg/apache/flink/configuration/ConfigOption;)Z
+#getBytes(Ljava/lang/String;[B)[B
+#getValue(Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/String;
+#getEnum(Ljava/lang/Class;Lorg/apache/flink/configuration/ConfigOption;)Ljava/lang/Enum;
+#clone()Lorg/apache/flink/configuration/Configuration;
+#containsKey(Ljava/lang/String;)Z
+#getDouble(Ljava/lang/String;D)D
+#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getInteger(Ljava/lang/String;I)I
+#getLong(Ljava/lang/String;J)J
+#getBoolean(Ljava/lang/String;Z)Z
+#getFloat(Ljava/lang/String;F)F
+#keySet()Ljava/util/Set;
+#toMap()Ljava/util/Map;
+#read(Lorg/apache/flink/core/memory/DataInputView;)V
+#write(Lorg/apache/flink/core/memory/DataOutputView;)V
+#set(Lorg/apache/flink/configuration/ConfigOption;Ljava/lang/Object;)Lorg/apache/flink/configuration/WritableConfig;
+#clone()Ljava/lang/Object;
@1.11.0
-###org/apache/flink/configuration/ReadableConfigToConfigurationAdapter

+###org/apache/flink/api/common/io/OutputFormatBase
@1.16.0
+#open(II)V
+#writeRecord(Ljava/lang/Object;)V
+#close()V

+###org/apache/flink/api/common/io/SinkUtils
@1.16.0
+#<init>()V
+#tryAcquire(IILjava/time/Duration;Ljava/util/concurrent/Semaphore;)V

+###org/apache/flink/api/connector/source/SupportsHandleExecutionAttemptSourceEvent
@1.16.0
+#handleSourceEvent(IILorg/apache/flink/api/connector/source/SourceEvent;)V

+###org/apache/flink/api/connector/source/SupportsIntermediateNoMoreSplits
@1.16.1
+#signalIntermediateNoMoreSplits(I)V

+###org/apache/flink/util/FlinkUserCodeClassLoaders$ParentFirstClassLoader
@1.16.0

+###org/apache/flink/util/jackson/JacksonMapperFactory
@1.16.0
+#createObjectMapper()Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/ObjectMapper;
+#createCsvMapper()Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/dataformat/csv/CsvMapper;

+###org/apache/flink/util/FlinkUserCodeClassLoaders$SafetyNetWrapperClassLoader
@1.16.0
+#close()V
+#loadClass(Ljava/lang/String;)Ljava/lang/Class;
+#addURL(Ljava/net/URL;)V
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResources(Ljava/lang/String;)Ljava/util/Enumeration;
+#getURLs()[Ljava/net/URL;

+###org/apache/flink/util/FlinkExpectedException
@1.16.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flink/util/ClassLoaderUtil
@1.16.0
+#getUserCodeClassLoaderInfo(Ljava/lang/ClassLoader;)Ljava/lang/String;
+#formatURL(Ljava/net/URL;)Ljava/lang/String;
+#validateClassLoadable(Ljava/lang/ClassNotFoundException;Ljava/lang/ClassLoader;)Z

+###org/apache/flink/util/MutableURLClassLoader
@1.16.0
+#<init>([Ljava/net/URL;Ljava/lang/ClassLoader;)V
+#addURL(Ljava/net/URL;)V

+###org/apache/flink/util/FlinkUserCodeClassLoaders
@1.16.0
+#parentFirst([Ljava/net/URL;Ljava/lang/ClassLoader;Ljava/util/function/Consumer;Z)Lorg/apache/flink/util/MutableURLClassLoader;
+#childFirst([Ljava/net/URL;Ljava/lang/ClassLoader;[Ljava/lang/String;Ljava/util/function/Consumer;Z)Lorg/apache/flink/util/MutableURLClassLoader;
+#create([Ljava/net/URL;Ljava/lang/ClassLoader;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/util/MutableURLClassLoader;
+#create(Lorg/apache/flink/util/FlinkUserCodeClassLoaders$ResolveOrder;[Ljava/net/URL;Ljava/lang/ClassLoader;[Ljava/lang/String;Ljava/util/function/Consumer;Z)Lorg/apache/flink/util/MutableURLClassLoader;

+###org/apache/flink/util/FlinkUserCodeClassLoaders$ResolveOrder
@1.16.0
+#values()[Lorg/apache/flink/util/FlinkUserCodeClassLoaders$ResolveOrder;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/util/FlinkUserCodeClassLoaders$ResolveOrder;
+#fromString(Ljava/lang/String;)Lorg/apache/flink/util/FlinkUserCodeClassLoaders$ResolveOrder;

+###org/apache/flink/util/concurrent/ThreadUtils
@1.16.1
+#<init>()V
+#errorLogThreadDump(Lorg/slf4j/Logger;)V

+###org/apache/flink/configuration/StateChangelogOptionsInternal
@1.16.0
+#<init>()V

+###org/apache/flink/configuration/SlowTaskDetectorOptions
@1.16.0

+###org/apache/flink/core/execution/CacheSupportedPipelineExecutor
@1.16.0
+#listCompletedClusterDatasetIds(Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)Ljava/util/concurrent/CompletableFuture;
+#invalidateClusterDataset(Lorg/apache/flink/util/AbstractID;Lorg/apache/flink/configuration/Configuration;Ljava/lang/ClassLoader;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/flink/core/fs/BackPressuringExecutor
@1.16.0
+#<init>(Ljava/util/concurrent/Executor;I)V
+#execute(Ljava/lang/Runnable;)V

+###org/apache/flink/core/fs/RefCountedTmpFileCreator
@1.16.0
+#apply(Ljava/io/File;)Lorg/apache/flink/core/fs/RefCountedFileWithStream;
+#inDirectories([Ljava/io/File;)Lorg/apache/flink/core/fs/RefCountedTmpFileCreator;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/core/fs/RefCountedBufferingFileStream
@1.16.0
+#<init>(Lorg/apache/flink/core/fs/RefCountedFileWithStream;I)V
+#getInputFile()Ljava/io/File;
+#getPos()J
+#write(I)V
+#write([BII)V
+#flush()V
+#sync()V
+#isClosed()Z
+#close()V
+#retain()V
+#release()Z
+#toString()Ljava/lang/String;
+#getReferenceCounter()I
+#openNew(Lorg/apache/flink/util/function/FunctionWithException;)Lorg/apache/flink/core/fs/RefCountedBufferingFileStream;
+#restore(Lorg/apache/flink/util/function/FunctionWithException;Ljava/io/File;)Lorg/apache/flink/core/fs/RefCountedBufferingFileStream;

+###org/apache/flink/core/fs/RefCountedFileWithStream
@1.16.0
+#getStream()Lorg/apache/flink/core/fs/OffsetAwareOutputStream;
+#getLength()J
+#write([BII)V
+#newFile(Ljava/io/File;Ljava/io/OutputStream;)Lorg/apache/flink/core/fs/RefCountedFileWithStream;
+#restoredFile(Ljava/io/File;Ljava/io/OutputStream;J)Lorg/apache/flink/core/fs/RefCountedFileWithStream;

+###org/apache/flink/core/fs/RefCountedFSOutputStream
@1.16.0
+#<init>()V
+#getInputFile()Ljava/io/File;
+#isClosed()Z

+###org/apache/flink/core/fs/OffsetAwareOutputStream
@1.16.0
+#getLength()J
+#write([BII)V
+#flush()V
+#close()V

+###org/apache/flink/api/common/typeutils/TypeSerializerSerializationUtil$FailureTolerantObjectInputStream
@1.4.0
+#<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V
@1.4.1
-###org/apache/flink/api/common/typeutils/TypeSerializerSerializationUtil$FailureTolerantObjectInputStream
