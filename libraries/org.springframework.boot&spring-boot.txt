
+###org/springframework/boot/builder/SpringApplicationBuilder
@1.0.0.RELEASE
+#<init>([Ljava/lang/Object;)V
+#context()Lorg/springframework/context/ConfigurableApplicationContext;
+#application()Lorg/springframework/boot/SpringApplication;
+#run([Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;
+#child([Ljava/lang/Object;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#parent([Ljava/lang/Object;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#parent(Lorg/springframework/context/ConfigurableApplicationContext;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#sibling([Ljava/lang/Object;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#sibling([Ljava/lang/Object;[Ljava/lang/String;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#contextClass(Ljava/lang/Class;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#sources([Ljava/lang/Object;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#sources([Ljava/lang/Class;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#web(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#logStartupInfo(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#showBanner(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#headless(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#registerShutdownHook(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#main(Ljava/lang/Class;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#addCommandLineProperties(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#properties([Ljava/lang/String;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#properties(Ljava/util/Properties;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#properties(Ljava/util/Map;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#profiles([Ljava/lang/String;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#beanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#environment(Lorg/springframework/core/env/ConfigurableEnvironment;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#resourceLoader(Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#initializers([Lorg/springframework/context/ApplicationContextInitializer;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#listeners([Lorg/springframework/context/ApplicationListener;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
@1.2.0.RELEASE
+#build()Lorg/springframework/boot/SpringApplication;
+#banner(Lorg/springframework/boot/Banner;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
@1.3.0.RELEASE
*#showBanner(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;[deprecated]
+#bannerMode(Lorg/springframework/boot/Banner$Mode;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
@1.3.3.RELEASE
+#build([Ljava/lang/String;)Lorg/springframework/boot/SpringApplication;
@1.4.0.RELEASE
-#showBanner(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;[deprecated]
@2.0.0.RELEASE
+#<init>([Ljava/lang/Class;)V
+#child([Ljava/lang/Class;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#parent([Ljava/lang/Class;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#sibling([Ljava/lang/Class;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#sibling([Ljava/lang/Class;[Ljava/lang/String;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
*#web(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;[deprecated]
+#web(Lorg/springframework/boot/WebApplicationType;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
-#<init>([Ljava/lang/Object;)V
-#child([Ljava/lang/Object;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
-#parent([Ljava/lang/Object;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
-#sibling([Ljava/lang/Object;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
-#sibling([Ljava/lang/Object;[Ljava/lang/String;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
-#sources([Ljava/lang/Object;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
@2.1.0.RELEASE
+#setAddConversionService(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;
-#web(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;[deprecated]
@2.2.0.RELEASE
+#lazyInitialization(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;
@2.4.0
*#contextClass(Ljava/lang/Class;)Lorg/springframework/boot/builder/SpringApplicationBuilder;[deprecated]
+#contextFactory(Lorg/springframework/boot/ApplicationContextFactory;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#addBootstrapper(Lorg/springframework/boot/Bootstrapper;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
+#applicationStartup(Lorg/springframework/core/metrics/ApplicationStartup;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
@2.4.5
*#addBootstrapper(Lorg/springframework/boot/Bootstrapper;)Lorg/springframework/boot/builder/SpringApplicationBuilder;[deprecated]
+#addBootstrapRegistryInitializer(Lorg/springframework/boot/BootstrapRegistryInitializer;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
@2.5.0
+#environmentPrefix(Ljava/lang/String;)Lorg/springframework/boot/builder/SpringApplicationBuilder;
@2.6.0
+#<init>(Lorg/springframework/core/io/ResourceLoader;[Ljava/lang/Class;)V
+#allowCircularReferences(Z)Lorg/springframework/boot/builder/SpringApplicationBuilder;
-#contextClass(Ljava/lang/Class;)Lorg/springframework/boot/builder/SpringApplicationBuilder;[deprecated]
-#addBootstrapper(Lorg/springframework/boot/Bootstrapper;)Lorg/springframework/boot/builder/SpringApplicationBuilder;[deprecated]

+###org/springframework/boot/builder/ParentContextApplicationContextInitializer$ParentContextAvailableEvent
@1.0.0.RELEASE
+#<init>(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ConfigurableApplicationContext;

+###org/springframework/boot/builder/ParentContextCloserApplicationListener
@1.0.0.RELEASE
+#<init>()V
+#getOrder()I
+#onApplicationEvent(Lorg/springframework/boot/builder/ParentContextApplicationContextInitializer$ParentContextAvailableEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.1.2.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V

+###org/springframework/boot/builder/ParentContextCloserApplicationListener$ContextCloserListener
@1.0.0.RELEASE
+#<init>(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#onApplicationEvent(Lorg/springframework/context/event/ContextClosedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.1.2.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/boot/builder/ParentContextApplicationContextInitializer
@1.0.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
+#setOrder(I)V
+#getOrder()I
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V

+###org/springframework/boot/ApplicationHome
@1.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#getSource()Ljava/io/File;
+#getDir()Ljava/io/File;
+#toString()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/ApplicationHome

+###org/springframework/boot/context/web/SpringBootServletInitializer
@1.0.0.RELEASE
+#<init>()V
+#onStartup(Ljavax/servlet/ServletContext;)V
@1.4.0.RELEASE
-#onStartup(Ljavax/servlet/ServletContext;)V
@1.5.0.RELEASE
-###org/springframework/boot/context/web/SpringBootServletInitializer

+###org/springframework/boot/context/web/OrderedRequestContextFilter
@1.3.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
@1.4.0.RELEASE
-#getOrder()I
-#setOrder(I)V
@1.5.0.RELEASE
-###org/springframework/boot/context/web/OrderedRequestContextFilter

+###org/springframework/boot/context/web/ServerPortInfoApplicationContextInitializer
@1.3.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@1.4.0.RELEASE
-#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@1.5.0.RELEASE
-###org/springframework/boot/context/web/ServerPortInfoApplicationContextInitializer

+###org/springframework/boot/context/web/ServletContextApplicationContextInitializer
@1.0.0.RELEASE
+#<init>(Ljavax/servlet/ServletContext;)V
+#setOrder(I)V
+#getOrder()I
+#initialize(Lorg/springframework/web/context/ConfigurableWebApplicationContext;)V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@1.3.4.RELEASE
+#<init>(Ljavax/servlet/ServletContext;Z)V
@1.4.0.RELEASE
-#setOrder(I)V
-#getOrder()I
-#initialize(Lorg/springframework/web/context/ConfigurableWebApplicationContext;)V
-#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@1.5.0.RELEASE
-###org/springframework/boot/context/web/ServletContextApplicationContextInitializer

+###org/springframework/boot/context/web/OrderedHttpPutFormContentFilter
@1.3.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
@1.4.0.RELEASE
-#getOrder()I
-#setOrder(I)V
@1.5.0.RELEASE
-###org/springframework/boot/context/web/OrderedHttpPutFormContentFilter

+###org/springframework/boot/context/web/ErrorPageFilter
@1.1.10.RELEASE
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#addErrorPages([Lorg/springframework/boot/context/embedded/ErrorPage;)V
+#destroy()V
@1.4.0.RELEASE
-#init(Ljavax/servlet/FilterConfig;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
-#addErrorPages([Lorg/springframework/boot/context/embedded/ErrorPage;)V
-#destroy()V
@1.5.0.RELEASE
-###org/springframework/boot/context/web/ErrorPageFilter

+###org/springframework/boot/context/web/OrderedHiddenHttpMethodFilter
@1.2.4.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
@1.4.0.RELEASE
-#getOrder()I
-#setOrder(I)V
@1.5.0.RELEASE
-###org/springframework/boot/context/web/OrderedHiddenHttpMethodFilter

+###org/springframework/boot/context/web/OrderedCharacterEncodingFilter
@1.2.1.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
@1.4.0.RELEASE
-#getOrder()I
-#setOrder(I)V
@1.5.0.RELEASE
-###org/springframework/boot/context/web/OrderedCharacterEncodingFilter

+###org/springframework/boot/context/web/NonEmbeddedServletContainerFactory
@1.0.0.RELEASE
@1.5.0.RELEASE
-###org/springframework/boot/context/web/NonEmbeddedServletContainerFactory

+###org/springframework/boot/context/FileEncodingApplicationListener
@1.0.0.RELEASE
+#<init>()V
+#getOrder()I
+#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/boot/context/ContextIdApplicationContextInitializer
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setOrder(I)V
+#getOrder()I
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@2.0.0.RELEASE
-#<init>(Ljava/lang/String;)V

+###org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializer
@1.2.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V

+###org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializer$ComponentScanPackageCheck
@1.3.1.RELEASE
+#getWarning(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Ljava/lang/String;

+###org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessorRegistrar
@1.0.0.RELEASE
+#<init>()V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@2.3.0.RELEASE
-###org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessorRegistrar

+###org/springframework/boot/context/properties/EnableConfigurationPropertiesImportSelector$ConfigurationPropertiesBeanRegistrar
@1.0.0.RELEASE
+#<init>()V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@2.2.0.RELEASE
-###org/springframework/boot/context/properties/EnableConfigurationPropertiesImportSelector$ConfigurationPropertiesBeanRegistrar

+###org/springframework/boot/context/properties/ConfigurationPropertiesBinding
@1.3.0.RELEASE

+###org/springframework/boot/context/properties/ConfigurationProperties
@1.0.0.RELEASE
+#value()Ljava/lang/String;
+#prefix()Ljava/lang/String;
+#ignoreInvalidFields()Z
+#ignoreNestedProperties()Z
+#ignoreUnknownFields()Z
+#exceptionIfInvalid()Z
+#locations()[Ljava/lang/String;
@1.2.0.RELEASE
+#merge()Z
@1.4.0.RELEASE
*#locations()[Ljava/lang/String;[deprecated]
*#merge()Z[deprecated]
@1.5.0.RELEASE
*#exceptionIfInvalid()Z[deprecated]
-#locations()[Ljava/lang/String;[deprecated]
-#merge()Z[deprecated]
@2.0.0.RELEASE
-#ignoreNestedProperties()Z
-#exceptionIfInvalid()Z[deprecated]

+###org/springframework/boot/context/properties/NestedConfigurationProperty
@1.2.0.RELEASE

+###org/springframework/boot/context/properties/DeprecatedConfigurationProperty
@1.3.0.RELEASE
+#reason()Ljava/lang/String;
+#replacement()Ljava/lang/String;

+###org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor
@1.0.0.RELEASE
+#<init>()V
+#setOrder(I)V
+#getOrder()I
+#setPropertySources(Lorg/springframework/core/env/PropertySources;)V
+#setValidator(Lorg/springframework/validation/Validator;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#afterPropertiesSet()V
+#destroy()V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@1.1.0.RELEASE
+#setBeanMetaDataStore(Lorg/springframework/boot/context/properties/ConfigurationBeanFactoryMetaData;)V
@1.3.0.RELEASE
+#setConverters(Ljava/util/List;)V
@1.3.1.RELEASE
+#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.3.2.RELEASE
+#setGenericConverters(Ljava/util/List;)V
@1.4.2.RELEASE
*#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V[deprecated]
@1.5.0.RELEASE
-#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V[deprecated]
@2.0.0.RELEASE
-#setConverters(Ljava/util/List;)V
-#setGenericConverters(Ljava/util/List;)V
-#setOrder(I)V
-#setPropertySources(Lorg/springframework/core/env/PropertySources;)V
-#setValidator(Lorg/springframework/validation/Validator;)V
-#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
-#setBeanMetaDataStore(Lorg/springframework/boot/context/properties/ConfigurationBeanFactoryMetaData;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
-#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
-#destroy()V
-#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
-#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.2.0.RELEASE
*#<init>()V[deprecated]
+#register(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V

+###org/springframework/boot/context/properties/ConfigurationBeanFactoryMetaData
@1.1.0.RELEASE
+#<init>()V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#getBeansWithFactoryAnnotation(Ljava/lang/Class;)Ljava/util/Map;
+#findFactoryAnnotation(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
@2.0.0.RELEASE
-###org/springframework/boot/context/properties/ConfigurationBeanFactoryMetaData

+###org/springframework/boot/context/properties/EnableConfigurationProperties
@1.0.0.RELEASE
+#value()[Ljava/lang/Class;

+###org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializer$Check
@1.2.0.RELEASE
+#getWarning(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Ljava/lang/String;

+###org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory
@1.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory

+###org/springframework/boot/context/embedded/ServletContextInitializer
@1.0.0.RELEASE
+#onStartup(Ljavax/servlet/ServletContext;)V
@1.4.0.RELEASE
-#onStartup(Ljavax/servlet/ServletContext;)V
@1.5.0.RELEASE
-###org/springframework/boot/context/embedded/ServletContextInitializer

+###org/springframework/boot/context/embedded/EmbeddedWebApplicationContext
@1.0.0.RELEASE
+#<init>()V
+#refresh()V
+#setNamespace(Ljava/lang/String;)V
+#getNamespace()Ljava/lang/String;
+#setServletConfig(Ljavax/servlet/ServletConfig;)V
+#getServletConfig()Ljavax/servlet/ServletConfig;
+#getEmbeddedServletContainer()Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/EmbeddedWebApplicationContext

+###org/springframework/boot/context/embedded/WebApplicationContextServletContextAwareProcessor
@1.0.0.RELEASE
+#<init>(Lorg/springframework/web/context/ConfigurableWebApplicationContext;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/WebApplicationContextServletContextAwareProcessor

+###org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer
@1.0.0.RELEASE
+#<init>(Lorg/apache/catalina/startup/Tomcat;)V
+#<init>(Lorg/apache/catalina/startup/Tomcat;Z)V
+#start()V
+#stop()V
+#getPort()I
+#getTomcat()Lorg/apache/catalina/startup/Tomcat;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer

+###org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedWebappClassLoader
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#loadClass(Ljava/lang/String;Z)Ljava/lang/Class;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedWebappClassLoader

+###org/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer
@1.0.0.RELEASE
+#customize(Lorg/apache/catalina/Context;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer

+###org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
@1.0.0.RELEASE
+#customize(Lorg/apache/catalina/connector/Connector;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer

+###org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory
@1.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#getEmbeddedServletContainer([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setBaseDirectory(Ljava/io/File;)V
+#setTldSkip(Ljava/lang/String;)V
+#setProtocol(Ljava/lang/String;)V
+#setContextValves(Ljava/util/Collection;)V
+#getValves()Ljava/util/Collection;
+#addContextValves([Lorg/apache/catalina/Valve;)V
+#setContextLifecycleListeners(Ljava/util/Collection;)V
+#getContextLifecycleListeners()Ljava/util/Collection;
+#addContextLifecycleListeners([Lorg/apache/catalina/LifecycleListener;)V
+#setTomcatContextCustomizers(Ljava/util/Collection;)V
+#getTomcatContextCustomizers()Ljava/util/Collection;
+#addContextCustomizers([Lorg/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer;)V
+#setTomcatConnectorCustomizers(Ljava/util/Collection;)V
+#addConnectorCustomizers([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
+#getTomcatConnectorCustomizers()Ljava/util/Collection;
+#addAdditionalTomcatConnectors([Lorg/apache/catalina/connector/Connector;)V
+#getAdditionalTomcatConnectors()Ljava/util/List;
+#setUriEncoding(Ljava/lang/String;)V
+#getUriEncoding()Ljava/lang/String;
@1.3.0.RELEASE
+#setUriEncoding(Ljava/nio/charset/Charset;)V
+#getUriEncoding()Ljava/nio/charset/Charset;
-#setUriEncoding(Ljava/lang/String;)V
-#getUriEncoding()Ljava/lang/String;
@1.4.0.RELEASE
+#getEmbeddedServletContainer([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
+#setEngineValves(Ljava/util/Collection;)V
+#getEngineValves()Ljava/util/Collection;
+#addEngineValves([Lorg/apache/catalina/Valve;)V
*#getValves()Ljava/util/Collection;[deprecated]
+#getContextValves()Ljava/util/Collection;
-#getEmbeddedServletContainer([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
@1.4.1.RELEASE
+#setBackgroundProcessorDelay(I)V
@1.5.0.RELEASE
*#setTldSkip(Ljava/lang/String;)V[deprecated]
+#getTldSkipPatterns()Ljava/util/Set;
+#setTldSkipPatterns(Ljava/util/Collection;)V
+#addTldSkipPatterns([Ljava/lang/String;)V
-#getValves()Ljava/util/Collection;[deprecated]
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory

+###org/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainer
@1.0.0.RELEASE
+#setContextPath(Ljava/lang/String;)V
+#setPort(I)V
+#setSessionTimeout(I)V
+#setSessionTimeout(ILjava/util/concurrent/TimeUnit;)V
+#setAddress(Ljava/net/InetAddress;)V
+#setJspServletClassName(Ljava/lang/String;)V
+#setRegisterJspServlet(Z)V
+#setRegisterDefaultServlet(Z)V
+#addErrorPages([Lorg/springframework/boot/context/embedded/ErrorPage;)V
+#setErrorPages(Ljava/util/Set;)V
+#setMimeMappings(Lorg/springframework/boot/context/embedded/MimeMappings;)V
+#setDocumentRoot(Ljava/io/File;)V
+#setInitializers(Ljava/util/List;)V
+#addInitializers([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)V
@1.1.7.RELEASE
+#setSsl(Lorg/springframework/boot/context/embedded/Ssl;)V
@1.3.0.RELEASE
+#setDisplayName(Ljava/lang/String;)V
+#setPersistSession(Z)V
+#setSessionStoreDir(Ljava/io/File;)V
*#setJspServletClassName(Ljava/lang/String;)V[deprecated]
*#setRegisterJspServlet(Z)V[deprecated]
+#setJspServlet(Lorg/springframework/boot/context/embedded/JspServlet;)V
+#setCompression(Lorg/springframework/boot/context/embedded/Compression;)V
@1.3.1.RELEASE
+#setServerHeader(Ljava/lang/String;)V
@1.4.0.RELEASE
+#addInitializers([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)V
+#setSslStoreProvider(Lorg/springframework/boot/context/embedded/SslStoreProvider;)V
+#setLocaleCharsetMappings(Ljava/util/Map;)V
-#setJspServletClassName(Ljava/lang/String;)V[deprecated]
-#setRegisterJspServlet(Z)V[deprecated]
-#addErrorPages([Lorg/springframework/boot/context/embedded/ErrorPage;)V
-#addInitializers([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainer

+###org/springframework/boot/context/embedded/MimeMappings
@1.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/boot/context/embedded/MimeMappings;)V
+#<init>(Ljava/util/Map;)V
+#iterator()Ljava/util/Iterator;
+#getAll()Ljava/util/Collection;
+#add(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#remove(Ljava/lang/String;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#unmodifiableMappings(Lorg/springframework/boot/context/embedded/MimeMappings;)Lorg/springframework/boot/context/embedded/MimeMappings;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/MimeMappings

+###org/springframework/boot/context/embedded/JspServlet
@1.3.0.RELEASE
+#<init>()V
+#getClassName()Ljava/lang/String;
+#setClassName(Ljava/lang/String;)V
+#getInitParameters()Ljava/util/Map;
+#setInitParameters(Ljava/util/Map;)V
+#getRegistered()Z
+#setRegistered(Z)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/JspServlet

+###org/springframework/boot/context/embedded/ErrorPage
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#getException()Ljava/lang/Class;
+#getStatus()Lorg/springframework/http/HttpStatus;
+#getStatusCode()I
+#getExceptionName()Ljava/lang/String;
+#isGlobal()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.4.0.RELEASE
-#getPath()Ljava/lang/String;
-#getException()Ljava/lang/Class;
-#getStatus()Lorg/springframework/http/HttpStatus;
-#getStatusCode()I
-#getExceptionName()Ljava/lang/String;
-#isGlobal()Z
-#hashCode()I
-#equals(Ljava/lang/Object;)Z
@1.5.0.RELEASE
-###org/springframework/boot/context/embedded/ErrorPage

+###org/springframework/boot/context/embedded/ServletListenerRegistrationBean
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/EventListener;)V
+#setListener(Ljava/util/EventListener;)V
+#onStartup(Ljavax/servlet/ServletContext;)V
+#getListener()Ljava/util/EventListener;
+#isSupportedType(Ljava/util/EventListener;)Z
+#getSupportedTypes()Ljava/util/Set;
@1.4.0.RELEASE
-#setListener(Ljava/util/EventListener;)V
-#onStartup(Ljavax/servlet/ServletContext;)V
-#getListener()Ljava/util/EventListener;
-#isSupportedType(Ljava/util/EventListener;)Z
-#getSupportedTypes()Ljava/util/Set;
@1.5.0.RELEASE
-###org/springframework/boot/context/embedded/ServletListenerRegistrationBean

+###org/springframework/boot/context/embedded/XmlEmbeddedWebApplicationContext
@1.0.0.RELEASE
+#<init>()V
+#<init>([Lorg/springframework/core/io/Resource;)V
+#<init>([Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;[Ljava/lang/String;)V
+#setValidating(Z)V
+#setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#load([Lorg/springframework/core/io/Resource;)V
+#load([Ljava/lang/String;)V
+#load(Ljava/lang/Class;[Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/XmlEmbeddedWebApplicationContext

+###org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer
@1.0.0.RELEASE
+#<init>(Lorg/eclipse/jetty/server/Server;)V
+#<init>(Lorg/eclipse/jetty/server/Server;Z)V
+#start()V
+#stop()V
+#getPort()I
+#getServer()Lorg/eclipse/jetty/server/Server;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer

+###org/springframework/boot/context/embedded/jetty/ServletContextInitializerConfiguration
@1.0.0.RELEASE
+#<init>(Lorg/eclipse/jetty/server/handler/ContextHandler;[Lorg/springframework/boot/context/embedded/ServletContextInitializer;)V
+#configure(Lorg/eclipse/jetty/webapp/WebAppContext;)V
@1.2.1.RELEASE
*#<init>(Lorg/eclipse/jetty/server/handler/ContextHandler;[Lorg/springframework/boot/context/embedded/ServletContextInitializer;)V[deprecated]
+#<init>([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)V
@1.3.0.RELEASE
-#<init>(Lorg/eclipse/jetty/server/handler/ContextHandler;[Lorg/springframework/boot/context/embedded/ServletContextInitializer;)V[deprecated]
@1.4.0.RELEASE
+#<init>([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)V
-#<init>([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/jetty/ServletContextInitializerConfiguration

+###org/springframework/boot/context/embedded/jetty/JettyServerCustomizer
@1.0.0.RELEASE
+#customize(Lorg/eclipse/jetty/server/Server;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/jetty/JettyServerCustomizer

+###org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory
@1.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#getEmbeddedServletContainer([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setServerCustomizers(Ljava/util/Collection;)V
+#getServerCustomizers()Ljava/util/Collection;
+#addServerCustomizers([Lorg/springframework/boot/context/embedded/jetty/JettyServerCustomizer;)V
+#setConfigurations(Ljava/util/Collection;)V
+#getConfigurations()Ljava/util/Collection;
+#addConfigurations([Lorg/eclipse/jetty/webapp/Configuration;)V
@1.3.0.RELEASE
+#setUseForwardHeaders(Z)V
@1.4.0.RELEASE
+#getEmbeddedServletContainer([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
+#setAcceptors(I)V
+#setSelectors(I)V
+#getThreadPool()Lorg/eclipse/jetty/util/thread/ThreadPool;
+#setThreadPool(Lorg/eclipse/jetty/util/thread/ThreadPool;)V
-#getEmbeddedServletContainer([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory

+###org/springframework/boot/context/embedded/AbstractConfigurableEmbeddedServletContainer
@1.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#setContextPath(Ljava/lang/String;)V
+#getContextPath()Ljava/lang/String;
+#setPort(I)V
+#getPort()I
+#setAddress(Ljava/net/InetAddress;)V
+#getAddress()Ljava/net/InetAddress;
+#setSessionTimeout(I)V
+#setSessionTimeout(ILjava/util/concurrent/TimeUnit;)V
+#getSessionTimeout()I
+#setInitializers(Ljava/util/List;)V
+#addInitializers([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)V
+#setDocumentRoot(Ljava/io/File;)V
+#getDocumentRoot()Ljava/io/File;
+#setErrorPages(Ljava/util/Set;)V
+#addErrorPages([Lorg/springframework/boot/context/embedded/ErrorPage;)V
+#getErrorPages()Ljava/util/Set;
+#setMimeMappings(Lorg/springframework/boot/context/embedded/MimeMappings;)V
+#getMimeMappings()Lorg/springframework/boot/context/embedded/MimeMappings;
+#setRegisterDefaultServlet(Z)V
+#isRegisterJspServlet()Z
+#setRegisterJspServlet(Z)V
+#isRegisterDefaultServlet()Z
+#setJspServletClassName(Ljava/lang/String;)V
@1.1.7.RELEASE
+#setSsl(Lorg/springframework/boot/context/embedded/Ssl;)V
+#getSsl()Lorg/springframework/boot/context/embedded/Ssl;
@1.3.0.RELEASE
+#setDisplayName(Ljava/lang/String;)V
+#getDisplayName()Ljava/lang/String;
+#setPersistSession(Z)V
+#isPersistSession()Z
+#setSessionStoreDir(Ljava/io/File;)V
+#getSessionStoreDir()Ljava/io/File;
+#setJspServlet(Lorg/springframework/boot/context/embedded/JspServlet;)V
+#getJspServlet()Lorg/springframework/boot/context/embedded/JspServlet;
+#getCompression()Lorg/springframework/boot/context/embedded/Compression;
+#setCompression(Lorg/springframework/boot/context/embedded/Compression;)V
-#isRegisterJspServlet()Z
@1.3.1.RELEASE
+#getServerHeader()Ljava/lang/String;
+#setServerHeader(Ljava/lang/String;)V
@1.4.0.RELEASE
+#addInitializers([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)V
+#addErrorPages([Lorg/springframework/boot/web/servlet/ErrorPage;)V
+#setSslStoreProvider(Lorg/springframework/boot/context/embedded/SslStoreProvider;)V
+#getSslStoreProvider()Lorg/springframework/boot/context/embedded/SslStoreProvider;
+#getLocaleCharsetMappings()Ljava/util/Map;
+#setLocaleCharsetMappings(Ljava/util/Map;)V
-#addInitializers([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)V
-#addErrorPages([Lorg/springframework/boot/context/embedded/ErrorPage;)V
-#setRegisterJspServlet(Z)V
-#setJspServletClassName(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/AbstractConfigurableEmbeddedServletContainer

+###org/springframework/boot/context/embedded/Compression
@1.3.0.RELEASE
+#<init>()V
+#getEnabled()Z
+#setEnabled(Z)V
+#getMimeTypes()[Ljava/lang/String;
+#setMimeTypes([Ljava/lang/String;)V
+#getMinResponseSize()I
+#setMinResponseSize(I)V
+#getExcludedUserAgents()[Ljava/lang/String;
+#setExcludedUserAgents([Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/Compression

+###org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer
@1.2.0.RELEASE
+#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZ)V
+#start()V
+#stop()V
+#getPort()I
@1.3.0.RELEASE
+#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZLorg/springframework/boot/context/embedded/Compression;)V
+#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZZLorg/springframework/boot/context/embedded/Compression;)V
-#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZ)V
@1.3.1.RELEASE
+#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZZLorg/springframework/boot/context/embedded/Compression;Ljava/lang/String;)V
@1.4.0.RELEASE
*#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZLorg/springframework/boot/context/embedded/Compression;)V[deprecated]
*#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZZLorg/springframework/boot/context/embedded/Compression;)V[deprecated]
*#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZZLorg/springframework/boot/context/embedded/Compression;Ljava/lang/String;)V[deprecated]
+#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZLorg/springframework/boot/context/embedded/Compression;)V
+#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/context/embedded/Compression;)V
+#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/context/embedded/Compression;Ljava/lang/String;)V
@1.5.0.RELEASE
-#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZLorg/springframework/boot/context/embedded/Compression;)V[deprecated]
-#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZZLorg/springframework/boot/context/embedded/Compression;)V[deprecated]
-#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;IZZLorg/springframework/boot/context/embedded/Compression;Ljava/lang/String;)V[deprecated]
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer

+###org/springframework/boot/context/embedded/undertow/UndertowDeploymentInfoCustomizer
@1.2.0.RELEASE
+#customize(Lio/undertow/servlet/api/DeploymentInfo;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/undertow/UndertowDeploymentInfoCustomizer

+###org/springframework/boot/context/embedded/undertow/UndertowBuilderCustomizer
@1.2.0.RELEASE
+#customize(Lio/undertow/Undertow$Builder;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/undertow/UndertowBuilderCustomizer

+###org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory
@1.2.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#setBuilderCustomizers(Ljava/util/Collection;)V
+#getBuilderCustomizers()Ljava/util/Collection;
+#addBuilderCustomizers([Lorg/springframework/boot/context/embedded/undertow/UndertowBuilderCustomizer;)V
+#setDeploymentInfoCustomizers(Ljava/util/Collection;)V
+#getDeploymentInfoCustomizers()Ljava/util/Collection;
+#addDeploymentInfoCustomizers([Lorg/springframework/boot/context/embedded/undertow/UndertowDeploymentInfoCustomizer;)V
+#getEmbeddedServletContainer([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setBufferSize(Ljava/lang/Integer;)V
+#setBuffersPerRegion(Ljava/lang/Integer;)V
+#setIoThreads(Ljava/lang/Integer;)V
+#setWorkerThreads(Ljava/lang/Integer;)V
+#setDirectBuffers(Ljava/lang/Boolean;)V
+#setRegisterJspServlet(Z)V
@1.3.0.RELEASE
+#setAccessLogDirectory(Ljava/io/File;)V
+#setAccessLogPattern(Ljava/lang/String;)V
+#setAccessLogEnabled(Z)V
+#isAccessLogEnabled()Z
+#setUseForwardHeaders(Z)V
-#setRegisterJspServlet(Z)V
@1.4.0.RELEASE
+#getEmbeddedServletContainer([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
-#getEmbeddedServletContainer([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
@1.4.1.RELEASE
+#getAccessLogPrefix()Ljava/lang/String;
+#setAccessLogPrefix(Ljava/lang/String;)V
+#setAccessLogSuffix(Ljava/lang/String;)V
@1.5.0.RELEASE
*#setBuffersPerRegion(Ljava/lang/Integer;)V[deprecated]
+#setAccessLogRotate(Z)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory

+###org/springframework/boot/context/embedded/undertow/FileSessionPersistence
@1.3.0.RELEASE
+#<init>(Ljava/io/File;)V
+#persistSessions(Ljava/lang/String;Ljava/util/Map;)V
+#loadSessionAttributes(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Map;
+#clear(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/undertow/FileSessionPersistence

+###org/springframework/boot/context/embedded/EmbeddedServletContainerFactory
@1.0.0.RELEASE
+#getEmbeddedServletContainer([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
@1.4.0.RELEASE
+#getEmbeddedServletContainer([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
-#getEmbeddedServletContainer([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/EmbeddedServletContainerFactory

+###org/springframework/boot/context/embedded/DelegatingFilterProxyRegistrationBean
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;[Lorg/springframework/boot/context/embedded/ServletRegistrationBean;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#onStartup(Ljavax/servlet/ServletContext;)V
+#isMatchAfter()Z
+#setMatchAfter(Z)V
+#setDispatcherTypes(Ljava/util/EnumSet;)V
+#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
+#addUrlPatterns([Ljava/lang/String;)V
+#getUrlPatterns()Ljava/util/Collection;
+#setUrlPatterns(Ljava/util/Collection;)V
+#addServletNames([Ljava/lang/String;)V
+#getServletNames()Ljava/util/Collection;
+#setServletNames(Ljava/util/Collection;)V
+#addServletRegistrationBeans([Lorg/springframework/boot/context/embedded/ServletRegistrationBean;)V
+#getServletRegistrationBeans()Ljava/util/Collection;
+#setServletRegistrationBeans(Ljava/util/Collection;)V
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;[Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
-#<init>(Ljava/lang/String;[Lorg/springframework/boot/context/embedded/ServletRegistrationBean;)V
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#onStartup(Ljavax/servlet/ServletContext;)V
-#isMatchAfter()Z
-#setMatchAfter(Z)V
-#setDispatcherTypes(Ljava/util/EnumSet;)V
-#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
-#addUrlPatterns([Ljava/lang/String;)V
-#getUrlPatterns()Ljava/util/Collection;
-#setUrlPatterns(Ljava/util/Collection;)V
-#addServletNames([Ljava/lang/String;)V
-#getServletNames()Ljava/util/Collection;
-#setServletNames(Ljava/util/Collection;)V
-#addServletRegistrationBeans([Lorg/springframework/boot/context/embedded/ServletRegistrationBean;)V
-#getServletRegistrationBeans()Ljava/util/Collection;
-#setServletRegistrationBeans(Ljava/util/Collection;)V
@1.5.0.RELEASE
-###org/springframework/boot/context/embedded/DelegatingFilterProxyRegistrationBean

+###org/springframework/boot/context/embedded/Ssl$ClientAuth
@1.1.7.RELEASE
+#values()[Lorg/springframework/boot/context/embedded/Ssl$ClientAuth;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/context/embedded/Ssl$ClientAuth;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/Ssl$ClientAuth

+###org/springframework/boot/context/embedded/EmbeddedServletContainerCustomizer
@1.0.0.RELEASE
+#customize(Lorg/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainer;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/EmbeddedServletContainerCustomizer

+###org/springframework/boot/context/embedded/EmbeddedServletContainerException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/EmbeddedServletContainerException

+###org/springframework/boot/context/embedded/EmbeddedWebApplicationContext$ExistingWebApplicationScopes
@1.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#restore()V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/EmbeddedWebApplicationContext$ExistingWebApplicationScopes

+###org/springframework/boot/context/embedded/EmbeddedServletContainerInitializedEvent
@1.0.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;)V
+#getEmbeddedServletContainer()Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
+#getSource()Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
+#getSource()Ljava/lang/Object;
@1.0.2.RELEASE
+#<init>(Lorg/springframework/boot/context/embedded/EmbeddedWebApplicationContext;Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;)V
+#getApplicationContext()Lorg/springframework/boot/context/embedded/EmbeddedWebApplicationContext;
-#<init>(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/context/embedded/EmbeddedServletContainer;)V
-#getApplicationContext()Lorg/springframework/context/ApplicationContext;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/EmbeddedServletContainerInitializedEvent

+###org/springframework/boot/context/embedded/MultipartConfigFactory
@1.1.0.RELEASE
+#<init>()V
+#setLocation(Ljava/lang/String;)V
+#setMaxFileSize(J)V
+#setMaxFileSize(Ljava/lang/String;)V
+#setMaxRequestSize(J)V
+#setMaxRequestSize(Ljava/lang/String;)V
+#setFileSizeThreshold(I)V
+#setFileSizeThreshold(Ljava/lang/String;)V
+#createMultipartConfig()Ljavax/servlet/MultipartConfigElement;
@1.4.0.RELEASE
-#setLocation(Ljava/lang/String;)V
-#setMaxFileSize(J)V
-#setMaxFileSize(Ljava/lang/String;)V
-#setMaxRequestSize(J)V
-#setMaxRequestSize(Ljava/lang/String;)V
-#setFileSizeThreshold(I)V
-#setFileSizeThreshold(Ljava/lang/String;)V
-#createMultipartConfig()Ljavax/servlet/MultipartConfigElement;
@1.5.0.RELEASE
-###org/springframework/boot/context/embedded/MultipartConfigFactory

+###org/springframework/boot/context/embedded/FilterRegistrationBean
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljavax/servlet/Filter;[Lorg/springframework/boot/context/embedded/ServletRegistrationBean;)V
+#setFilter(Ljavax/servlet/Filter;)V
+#setServletRegistrationBeans(Ljava/util/Collection;)V
+#getServletRegistrationBeans()Ljava/util/Collection;
+#addServletRegistrationBeans([Lorg/springframework/boot/context/embedded/ServletRegistrationBean;)V
+#setServletNames(Ljava/util/Collection;)V
+#getServletNames()Ljava/util/Collection;
+#addServletNames([Ljava/lang/String;)V
+#setUrlPatterns(Ljava/util/Collection;)V
+#getUrlPatterns()Ljava/util/Collection;
+#addUrlPatterns([Ljava/lang/String;)V
+#setMatchAfter(Z)V
+#isMatchAfter()Z
+#onStartup(Ljavax/servlet/ServletContext;)V
@1.1.0.RELEASE
+#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
+#setDispatcherTypes(Ljava/util/EnumSet;)V
@1.4.0.RELEASE
-#setFilter(Ljavax/servlet/Filter;)V
-#onStartup(Ljavax/servlet/ServletContext;)V
-#isMatchAfter()Z
-#setMatchAfter(Z)V
-#setDispatcherTypes(Ljava/util/EnumSet;)V
-#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
-#addUrlPatterns([Ljava/lang/String;)V
-#getUrlPatterns()Ljava/util/Collection;
-#setUrlPatterns(Ljava/util/Collection;)V
-#addServletNames([Ljava/lang/String;)V
-#getServletNames()Ljava/util/Collection;
-#setServletNames(Ljava/util/Collection;)V
-#addServletRegistrationBeans([Lorg/springframework/boot/context/embedded/ServletRegistrationBean;)V
-#getServletRegistrationBeans()Ljava/util/Collection;
-#setServletRegistrationBeans(Ljava/util/Collection;)V
@1.5.0.RELEASE
-###org/springframework/boot/context/embedded/FilterRegistrationBean

+###org/springframework/boot/context/embedded/InitParameterConfiguringServletContextInitializer
@1.2.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#onStartup(Ljavax/servlet/ServletContext;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/InitParameterConfiguringServletContextInitializer

+###org/springframework/boot/context/embedded/EmbeddedServletContainer
@1.0.0.RELEASE
+#start()V
+#stop()V
+#getPort()I
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/EmbeddedServletContainer

+###org/springframework/boot/context/embedded/Ssl
@1.1.7.RELEASE
+#<init>()V
+#getClientAuth()Lorg/springframework/boot/context/embedded/Ssl$ClientAuth;
+#setClientAuth(Lorg/springframework/boot/context/embedded/Ssl$ClientAuth;)V
+#getCiphers()[Ljava/lang/String;
+#setCiphers([Ljava/lang/String;)V
+#getKeyAlias()Ljava/lang/String;
+#setKeyAlias(Ljava/lang/String;)V
+#getKeyPassword()Ljava/lang/String;
+#setKeyPassword(Ljava/lang/String;)V
+#getKeyStore()Ljava/lang/String;
+#setKeyStore(Ljava/lang/String;)V
+#getKeyStorePassword()Ljava/lang/String;
+#setKeyStorePassword(Ljava/lang/String;)V
+#getKeyStoreType()Ljava/lang/String;
+#setKeyStoreType(Ljava/lang/String;)V
+#getKeyStoreProvider()Ljava/lang/String;
+#setKeyStoreProvider(Ljava/lang/String;)V
+#getTrustStore()Ljava/lang/String;
+#setTrustStore(Ljava/lang/String;)V
+#getTrustStorePassword()Ljava/lang/String;
+#setTrustStorePassword(Ljava/lang/String;)V
+#getTrustStoreType()Ljava/lang/String;
+#setTrustStoreType(Ljava/lang/String;)V
+#getTrustStoreProvider()Ljava/lang/String;
+#setTrustStoreProvider(Ljava/lang/String;)V
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
@1.2.1.RELEASE
+#isEnabled()Z
+#setEnabled(Z)V
@1.4.0.RELEASE
+#getEnabledProtocols()[Ljava/lang/String;
+#setEnabledProtocols([Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/Ssl

+###org/springframework/boot/context/embedded/MimeMappings$Mapping
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getExtension()Ljava/lang/String;
+#getMimeType()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.2.8.RELEASE
+#toString()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/MimeMappings$Mapping

+###org/springframework/boot/context/embedded/AnnotationConfigEmbeddedWebApplicationContext
@1.0.0.RELEASE
+#<init>()V
+#<init>([Ljava/lang/Class;)V
+#<init>([Ljava/lang/String;)V
+#setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V
+#setScopeMetadataResolver(Lorg/springframework/context/annotation/ScopeMetadataResolver;)V
+#register([Ljava/lang/Class;)V
+#scan([Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/AnnotationConfigEmbeddedWebApplicationContext

+###org/springframework/boot/context/embedded/EmbeddedServletContainerCustomizerBeanPostProcessor
@1.0.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@1.4.6.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@1.5.0.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@1.5.3.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/EmbeddedServletContainerCustomizerBeanPostProcessor

+###org/springframework/boot/context/embedded/RegistrationBean
@1.0.0.RELEASE
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setAsyncSupported(Z)V
+#isAsyncSupported()Z
+#setInitParameters(Ljava/util/Map;)V
+#getInitParameters()Ljava/util/Map;
+#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V
+#setOrder(I)V
+#getOrder()I
@1.0.2.RELEASE
+#setEnabled(Z)V
+#isEnabled()Z
@1.4.0.RELEASE
-###org/springframework/boot/context/embedded/RegistrationBean

+###org/springframework/boot/context/embedded/ServletRegistrationBean
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljavax/servlet/Servlet;[Ljava/lang/String;)V
+#setServlet(Ljavax/servlet/Servlet;)V
+#setUrlMappings(Ljava/util/Collection;)V
+#getUrlMappings()Ljava/util/Collection;
+#addUrlMappings([Ljava/lang/String;)V
+#setLoadOnStartup(I)V
+#setMultipartConfig(Ljavax/servlet/MultipartConfigElement;)V
+#getMultipartConfig()Ljavax/servlet/MultipartConfigElement;
+#getServletName()Ljava/lang/String;
+#onStartup(Ljavax/servlet/ServletContext;)V
@1.2.3.RELEASE
+#<init>(Ljavax/servlet/Servlet;Z[Ljava/lang/String;)V
@1.4.0.RELEASE
-#setServlet(Ljavax/servlet/Servlet;)V
-#setUrlMappings(Ljava/util/Collection;)V
-#getUrlMappings()Ljava/util/Collection;
-#addUrlMappings([Ljava/lang/String;)V
-#setLoadOnStartup(I)V
-#setMultipartConfig(Ljavax/servlet/MultipartConfigElement;)V
-#getMultipartConfig()Ljavax/servlet/MultipartConfigElement;
-#getServletName()Ljava/lang/String;
-#onStartup(Ljavax/servlet/ServletContext;)V
@1.5.0.RELEASE
-###org/springframework/boot/context/embedded/ServletRegistrationBean

+###org/springframework/boot/context/config/DelegatingApplicationListener
@1.0.0.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#setOrder(I)V
+#getOrder()I

+###org/springframework/boot/context/config/ConfigFileApplicationListener
@1.0.0.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#setOrder(I)V
+#getOrder()I
+#setSearchLocations(Ljava/lang/String;)V
+#setSearchNames(Ljava/lang/String;)V
@1.3.0.RELEASE
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V
@1.5.5.RELEASE
+#supportsEventType(Ljava/lang/Class;)Z
+#supportsSourceType(Ljava/lang/Class;)Z
@2.1.0.RELEASE
-#supportsSourceType(Ljava/lang/Class;)Z
@3.0.0
-###org/springframework/boot/context/config/ConfigFileApplicationListener

+###org/springframework/boot/context/config/RandomValuePropertySource
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#addToEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V
@1.3.1.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/boot/context/config/RandomValuePropertySource

+###org/springframework/boot/context/config/DelegatingApplicationContextInitializer
@1.0.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#setOrder(I)V
+#getOrder()I

+###org/springframework/boot/context/config/AnsiOutputApplicationListener
@1.2.0.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent;)V
+#getOrder()I
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializer$ConfigurationWarningsPostProcessor
@1.2.0.RELEASE
+#<init>([Lorg/springframework/boot/context/ConfigurationWarningsApplicationContextInitializer$Check;)V
+#getOrder()I
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#postProcessBeanDefinitionRegistry(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V

+###org/springframework/boot/context/event/ApplicationFailedEvent
@1.0.0.RELEASE
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)V
+#getApplicationContext()Lorg/springframework/context/ConfigurableApplicationContext;
+#getException()Ljava/lang/Throwable;

+###org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
@1.0.0.RELEASE
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#getEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;
@2.4.0
*#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/core/env/ConfigurableEnvironment;)V[deprecated]
+#<init>(Lorg/springframework/boot/ConfigurableBootstrapContext;Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#getBootstrapContext()Lorg/springframework/boot/ConfigurableBootstrapContext;
@2.6.0
-#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/core/env/ConfigurableEnvironment;)V[deprecated]

+###org/springframework/boot/context/event/ApplicationStartedEvent
@1.0.0.RELEASE
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ConfigurableApplicationContext;
-#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;)V
@2.6.0
*#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;)V[deprecated]
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;Ljava/time/Duration;)V
+#getTimeTaken()Ljava/time/Duration;
@3.0.0
-#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;)V[deprecated]

+###org/springframework/boot/context/event/ApplicationPreparedEvent
@1.0.0.RELEASE
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ConfigurableApplicationContext;

+###org/springframework/boot/context/event/EventPublishingRunListener
@1.0.0.RELEASE
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;)V
+#started()V
+#environmentPrepared(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#contextPrepared(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#contextLoaded(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#finished(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)V
@1.3.0.RELEASE
+#getOrder()I
@1.5.0.RELEASE
+#starting()V
-#started()V
@2.0.0.RELEASE
+#started(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#running(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#failed(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)V
-#finished(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)V
@2.4.0
+#starting(Lorg/springframework/boot/ConfigurableBootstrapContext;)V
+#environmentPrepared(Lorg/springframework/boot/ConfigurableBootstrapContext;Lorg/springframework/core/env/ConfigurableEnvironment;)V
-#starting()V
-#environmentPrepared(Lorg/springframework/core/env/ConfigurableEnvironment;)V
@2.6.0
+#started(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/time/Duration;)V
+#ready(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/time/Duration;)V
-#started(Lorg/springframework/context/ConfigurableApplicationContext;)V
-#running(Lorg/springframework/context/ConfigurableApplicationContext;)V
@3.0.0
-###org/springframework/boot/context/event/EventPublishingRunListener

+###org/springframework/boot/context/event/SpringApplicationEvent
@1.0.0.RELEASE
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;)V
+#getSpringApplication()Lorg/springframework/boot/SpringApplication;
+#getArgs()[Ljava/lang/String;

+###org/springframework/boot/context/event/ApplicationReadyEvent
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ConfigurableApplicationContext;
@2.6.0
*#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;)V[deprecated]
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;Ljava/time/Duration;)V
+#getTimeTaken()Ljava/time/Duration;
@3.0.0
-#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;)V[deprecated]

+###org/springframework/boot/cloudfoundry/VcapEnvironmentPostProcessor
@1.3.0.RELEASE
+#<init>()V
@1.4.0.RELEASE
-###org/springframework/boot/cloudfoundry/VcapEnvironmentPostProcessor

+###org/springframework/boot/web/servlet/view/velocity/EmbeddedVelocityToolboxView
@1.2.5.RELEASE
+#<init>()V
@1.5.0.RELEASE
-###org/springframework/boot/web/servlet/view/velocity/EmbeddedVelocityToolboxView

+###org/springframework/boot/web/servlet/view/velocity/EmbeddedVelocityViewResolver
@1.2.5.RELEASE
+#<init>()V
+#setToolboxConfigLocation(Ljava/lang/String;)V
@1.5.0.RELEASE
-###org/springframework/boot/web/servlet/view/velocity/EmbeddedVelocityViewResolver

+###org/springframework/boot/web/servlet/ServletComponentScan
@1.3.0.RELEASE
+#value()[Ljava/lang/String;
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;

+###org/springframework/boot/SpringApplication
@1.0.0.RELEASE
+#<init>([Ljava/lang/Object;)V
+#<init>(Lorg/springframework/core/io/ResourceLoader;[Ljava/lang/Object;)V
+#run([Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;
+#getResourceLoader()Lorg/springframework/core/io/ResourceLoader;
+#getClassLoader()Ljava/lang/ClassLoader;
+#setMainApplicationClass(Ljava/lang/Class;)V
+#setWebEnvironment(Z)V
+#setHeadless(Z)V
+#setRegisterShutdownHook(Z)V
+#setShowBanner(Z)V
+#setLogStartupInfo(Z)V
+#setAddCommandLineProperties(Z)V
+#setDefaultProperties(Ljava/util/Map;)V
+#setDefaultProperties(Ljava/util/Properties;)V
+#setAdditionalProfiles([Ljava/lang/String;)V
+#setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V
+#setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#getSources()Ljava/util/Set;
+#setSources(Ljava/util/Set;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setApplicationContextClass(Ljava/lang/Class;)V
+#setInitializers(Ljava/util/Collection;)V
+#addInitializers([Lorg/springframework/context/ApplicationContextInitializer;)V
+#getInitializers()Ljava/util/Set;
+#setListeners(Ljava/util/Collection;)V
+#addListeners([Lorg/springframework/context/ApplicationListener;)V
+#getListeners()Ljava/util/Set;
+#run(Ljava/lang/Object;[Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;
+#run([Ljava/lang/Object;[Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;
+#main([Ljava/lang/String;)V
+#exit(Lorg/springframework/context/ApplicationContext;[Lorg/springframework/boot/ExitCodeGenerator;)I
@1.2.0.RELEASE
+#setBanner(Lorg/springframework/boot/Banner;)V
@1.3.0.RELEASE
*#setShowBanner(Z)V[deprecated]
+#setBannerMode(Lorg/springframework/boot/Banner$Mode;)V
@1.3.2.RELEASE
+#getMainApplicationClass()Ljava/lang/Class;
@1.4.0.RELEASE
+#isWebEnvironment()Z
-#setShowBanner(Z)V[deprecated]
@2.0.0.RELEASE
+#<init>([Ljava/lang/Class;)V
+#<init>(Lorg/springframework/core/io/ResourceLoader;[Ljava/lang/Class;)V
*#isWebEnvironment()Z[deprecated]
+#getWebApplicationType()Lorg/springframework/boot/WebApplicationType;
*#setWebEnvironment(Z)V[deprecated]
+#setWebApplicationType(Lorg/springframework/boot/WebApplicationType;)V
+#addPrimarySources(Ljava/util/Collection;)V
+#getAllSources()Ljava/util/Set;
+#run(Ljava/lang/Class;[Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;
+#run([Ljava/lang/Class;[Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;
-#<init>([Ljava/lang/Object;)V
-#<init>(Lorg/springframework/core/io/ResourceLoader;[Ljava/lang/Object;)V
-#run(Ljava/lang/Object;[Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;
-#run([Ljava/lang/Object;[Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;
@2.1.0.RELEASE
+#setAllowBeanDefinitionOverriding(Z)V
+#setAddConversionService(Z)V
-#isWebEnvironment()Z[deprecated]
-#setWebEnvironment(Z)V[deprecated]
@2.2.0.RELEASE
+#setLazyInitialization(Z)V
@2.4.0
+#addBootstrapper(Lorg/springframework/boot/Bootstrapper;)V
+#getAdditionalProfiles()Ljava/util/Set;
*#setApplicationContextClass(Ljava/lang/Class;)V[deprecated]
+#setApplicationContextFactory(Lorg/springframework/boot/ApplicationContextFactory;)V
+#setApplicationStartup(Lorg/springframework/core/metrics/ApplicationStartup;)V
+#getApplicationStartup()Lorg/springframework/core/metrics/ApplicationStartup;
@2.4.5
*#addBootstrapper(Lorg/springframework/boot/Bootstrapper;)V[deprecated]
+#addBootstrapRegistryInitializer(Lorg/springframework/boot/BootstrapRegistryInitializer;)V
@2.5.0
+#getEnvironmentPrefix()Ljava/lang/String;
+#setEnvironmentPrefix(Ljava/lang/String;)V
@2.5.1
+#getShutdownHandlers()Lorg/springframework/boot/SpringApplicationShutdownHandlers;
@2.5.7
+#convertEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)Lorg/springframework/core/env/StandardEnvironment;
@2.5.9
*#convertEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)Lorg/springframework/core/env/StandardEnvironment;[deprecated]
@2.6.0
+#setAllowCircularReferences(Z)V
-#addBootstrapper(Lorg/springframework/boot/Bootstrapper;)V[deprecated]
-#setApplicationContextClass(Ljava/lang/Class;)V[deprecated]
@2.6.3
*#convertEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)Lorg/springframework/core/env/StandardEnvironment;[deprecated]
@2.7.0
-#convertEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)Lorg/springframework/core/env/StandardEnvironment;[deprecated]
@3.0.0
+#withHook(Lorg/springframework/boot/SpringApplicationHook;Ljava/lang/Runnable;)V
+#withHook(Lorg/springframework/boot/SpringApplicationHook;Lorg/springframework/util/function/ThrowingSupplier;)Ljava/lang/Object;

+###org/springframework/boot/yaml/ArrayDocumentMatcher
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#matches(Ljava/util/Properties;)Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;
@1.2.0.RELEASE
+#matches(Ljava/util/Properties;)Lorg/springframework/beans/factory/config/YamlProcessor$MatchStatus;
-#matches(Ljava/util/Properties;)Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;
@1.5.0.RELEASE
-###org/springframework/boot/yaml/ArrayDocumentMatcher

+###org/springframework/boot/yaml/DefaultProfileDocumentMatcher
@1.0.0.RELEASE
+#<init>()V
+#matches(Ljava/util/Properties;)Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;
@1.2.0.RELEASE
+#matches(Ljava/util/Properties;)Lorg/springframework/beans/factory/config/YamlProcessor$MatchStatus;
-#matches(Ljava/util/Properties;)Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;
@1.5.0.RELEASE
-###org/springframework/boot/yaml/DefaultProfileDocumentMatcher

+###org/springframework/boot/yaml/SpringProfileDocumentMatcher
@1.0.0.RELEASE
+#<init>()V
+#<init>([Ljava/lang/String;)V
+#addActiveProfiles([Ljava/lang/String;)V
+#matches(Ljava/util/Properties;)Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;
@1.2.0.RELEASE
+#matches(Ljava/util/Properties;)Lorg/springframework/beans/factory/config/YamlProcessor$MatchStatus;
-#matches(Ljava/util/Properties;)Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;
@2.0.0.RELEASE
-###org/springframework/boot/yaml/SpringProfileDocumentMatcher

+###org/springframework/boot/liquibase/LiquibaseServiceLocatorApplicationListener
@1.0.0.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationStartedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.5.0.RELEASE
+#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationStartingEvent;)V
-#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationStartedEvent;)V
@2.5.0
-###org/springframework/boot/liquibase/LiquibaseServiceLocatorApplicationListener

+###org/springframework/boot/liquibase/CommonsLoggingLiquibaseLogger
@1.2.0.RELEASE
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setLogLevel(Ljava/lang/String;Ljava/lang/String;)V
+#severe(Ljava/lang/String;)V
+#severe(Ljava/lang/String;Ljava/lang/Throwable;)V
+#warning(Ljava/lang/String;)V
+#warning(Ljava/lang/String;Ljava/lang/Throwable;)V
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getPriority()I
+#getLogLevel()Lliquibase/logging/LogLevel;
@1.2.4.RELEASE
-#getLogLevel()Lliquibase/logging/LogLevel;
@2.1.0.RELEASE
-###org/springframework/boot/liquibase/CommonsLoggingLiquibaseLogger

+###org/springframework/boot/liquibase/SpringPackageScanClassResolver
@1.0.0.RELEASE
+#<init>(Lorg/apache/commons/logging/Log;)V
@2.5.0
-###org/springframework/boot/liquibase/SpringPackageScanClassResolver

+###org/springframework/boot/BeanDefinitionLoader$GroovyBeanDefinitionSource
@1.0.0.RELEASE
+#getBeans()Lgroovy/lang/Closure;

+###org/springframework/boot/ansi/AnsiOutput
@1.0.0.RELEASE
+#<init>()V
+#setEnabled(Lorg/springframework/boot/ansi/AnsiOutput$Enabled;)V
+#toString([Ljava/lang/Object;)Ljava/lang/String;
@1.3.0.RELEASE
+#setConsoleAvailable(Ljava/lang/Boolean;)V
+#encode(Lorg/springframework/boot/ansi/AnsiElement;)Ljava/lang/String;
@2.2.0.RELEASE
+#getEnabled()Lorg/springframework/boot/ansi/AnsiOutput$Enabled;

+###org/springframework/boot/ansi/AnsiColor
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/ansi/AnsiColor;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/ansi/AnsiColor;
+#toString()Ljava/lang/String;

+###org/springframework/boot/ansi/AnsiElement
@1.0.0.RELEASE
+#toString()Ljava/lang/String;

+###org/springframework/boot/ansi/AnsiOutput$Enabled
@1.0.0.RELEASE
+#values()[Lorg/springframework/boot/ansi/AnsiOutput$Enabled;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/ansi/AnsiOutput$Enabled;

+###org/springframework/boot/ansi/AnsiBackground
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/ansi/AnsiBackground;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/ansi/AnsiBackground;
+#toString()Ljava/lang/String;

+###org/springframework/boot/ansi/AnsiStyle
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/ansi/AnsiStyle;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/ansi/AnsiStyle;
+#toString()Ljava/lang/String;

+###org/springframework/boot/ansi/AnsiPropertySource
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Z)V
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/boot/ansi/AnsiElement$DefaultAnsiElement
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@1.3.0.RELEASE
-#<init>(Ljava/lang/String;)V
@1.4.0.RELEASE
-###org/springframework/boot/ansi/AnsiElement$DefaultAnsiElement

+###org/springframework/boot/Banner
@1.2.0.RELEASE
+#printBanner(Lorg/springframework/core/env/Environment;Ljava/lang/Class;Ljava/io/PrintStream;)V

+###org/springframework/boot/ExitCodeGenerator
@1.0.0.RELEASE
+#getExitCode()I

+###org/springframework/boot/cloud/CloudFoundryVcapEnvironmentPostProcessor
@1.3.0.RELEASE
+#<init>()V
+#setOrder(I)V
+#getOrder()I
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V
@2.1.11.RELEASE
+#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.2.0.RELEASE
-#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V
-#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.2.2.RELEASE
+#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.4.0
*#<init>()V[deprecated]
+#<init>(Lorg/apache/commons/logging/Log;)V
*#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V[deprecated]
*#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V[deprecated]
@2.6.0
-#<init>()V[deprecated]
-#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V[deprecated]
-#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V[deprecated]
@3.0.0
+#<init>(Lorg/springframework/boot/logging/DeferredLogFactory;)V
-#<init>(Lorg/apache/commons/logging/Log;)V

+###org/springframework/boot/cloud/CloudPlatform
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/cloud/CloudPlatform;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/cloud/CloudPlatform;
+#isActive(Lorg/springframework/core/env/Environment;)Z
+#isUsingForwardHeaders()Z
+#getActive(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/cloud/CloudPlatform;
@2.3.0.RELEASE
+#isEnforced(Lorg/springframework/core/env/Environment;)Z
+#isDetected(Lorg/springframework/core/env/Environment;)Z
@2.4.0
+#isEnforced(Lorg/springframework/boot/context/properties/bind/Binder;)Z

+###org/springframework/boot/ExitCodeExceptionMapper
@1.3.2.RELEASE
+#getExitCode(Ljava/lang/Throwable;)I

+###org/springframework/boot/SpringApplicationRunListener
@1.0.0.RELEASE
+#started()V
+#environmentPrepared(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#contextPrepared(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#contextLoaded(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#finished(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)V
@1.5.0.RELEASE
+#starting()V
-#started()V
@2.0.0.RELEASE
+#started(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#running(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#failed(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)V
-#finished(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)V
@2.4.0
+#starting(Lorg/springframework/boot/ConfigurableBootstrapContext;)V
*#starting()V[deprecated]
+#environmentPrepared(Lorg/springframework/boot/ConfigurableBootstrapContext;Lorg/springframework/core/env/ConfigurableEnvironment;)V
*#environmentPrepared(Lorg/springframework/core/env/ConfigurableEnvironment;)V[deprecated]
@2.6.0
+#started(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/time/Duration;)V
*#started(Lorg/springframework/context/ConfigurableApplicationContext;)V[deprecated]
+#ready(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/time/Duration;)V
*#running(Lorg/springframework/context/ConfigurableApplicationContext;)V[deprecated]
-#starting()V[deprecated]
-#environmentPrepared(Lorg/springframework/core/env/ConfigurableEnvironment;)V[deprecated]
@3.0.0
-#started(Lorg/springframework/context/ConfigurableApplicationContext;)V[deprecated]
-#running(Lorg/springframework/context/ConfigurableApplicationContext;)V[deprecated]

+###org/springframework/boot/ApplicationArguments
@1.3.0.RELEASE
+#getSourceArgs()[Ljava/lang/String;
+#getOptionNames()Ljava/util/Set;
+#containsOption(Ljava/lang/String;)Z
+#getOptionValues(Ljava/lang/String;)Ljava/util/List;
+#getNonOptionArgs()Ljava/util/List;

+###org/springframework/boot/jta/atomikos/AtomikosConnectionFactoryBean
@1.2.0.RELEASE
+#<init>()V
+#setBeanName(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#destroy()V
@3.0.0
-###org/springframework/boot/jta/atomikos/AtomikosConnectionFactoryBean

+###org/springframework/boot/jta/atomikos/AtomikosProperties
@1.2.0.RELEASE
+#<init>()V
+#setService(Ljava/lang/String;)V
+#setMaxTimeout(J)V
+#setDefaultJtaTimeout(J)V
+#setMaxActives(I)V
+#setEnableLogging(Z)V
+#setTransactionManagerUniqueName(Ljava/lang/String;)V
+#setSerialJtaTransactions(Z)V
+#setForceShutdownOnVmExit(Z)V
+#setLogBaseName(Ljava/lang/String;)V
+#setLogBaseDir(Ljava/lang/String;)V
+#setCheckpointInterval(J)V
+#setConsoleLogLevel(Lorg/springframework/boot/jta/atomikos/AtomikosLoggingLevel;)V
+#setOutputDir(Ljava/lang/String;)V
+#setConsoleFileName(Ljava/lang/String;)V
+#setConsoleFileCount(I)V
+#setConsoleFileLimit(I)V
+#setThreadedTwoPhaseCommit(Z)V
+#asProperties()Ljava/util/Properties;
@1.4.0.RELEASE
+#getService()Ljava/lang/String;
+#getMaxTimeout()J
+#getDefaultJtaTimeout()J
+#getMaxActives()I
+#isEnableLogging()Z
+#getTransactionManagerUniqueName()Ljava/lang/String;
+#isSerialJtaTransactions()Z
+#isForceShutdownOnVmExit()Z
+#getLogBaseName()Ljava/lang/String;
+#getLogBaseDir()Ljava/lang/String;
+#getCheckpointInterval()J
+#getConsoleLogLevel()Lorg/springframework/boot/jta/atomikos/AtomikosLoggingLevel;
+#getOutputDir()Ljava/lang/String;
+#getConsoleFileName()Ljava/lang/String;
+#getConsoleFileCount()I
+#getConsoleFileLimit()I
+#isThreadedTwoPhaseCommit()Z
@1.4.7.RELEASE
*#setConsoleLogLevel(Lorg/springframework/boot/jta/atomikos/AtomikosLoggingLevel;)V[deprecated]
*#getConsoleLogLevel()Lorg/springframework/boot/jta/atomikos/AtomikosLoggingLevel;[deprecated]
*#setOutputDir(Ljava/lang/String;)V[deprecated]
*#getOutputDir()Ljava/lang/String;[deprecated]
*#setConsoleFileName(Ljava/lang/String;)V[deprecated]
*#getConsoleFileName()Ljava/lang/String;[deprecated]
*#setConsoleFileCount(I)V[deprecated]
*#getConsoleFileCount()I[deprecated]
*#setConsoleFileLimit(I)V[deprecated]
*#getConsoleFileLimit()I[deprecated]
@1.5.4.RELEASE
-#setConsoleLogLevel(Lorg/springframework/boot/jta/atomikos/AtomikosLoggingLevel;)V
-#getConsoleLogLevel()Lorg/springframework/boot/jta/atomikos/AtomikosLoggingLevel;
-#setOutputDir(Ljava/lang/String;)V
-#getOutputDir()Ljava/lang/String;
-#setConsoleFileName(Ljava/lang/String;)V
-#getConsoleFileName()Ljava/lang/String;
-#setConsoleFileCount(I)V
-#getConsoleFileCount()I
-#setConsoleFileLimit(I)V
-#getConsoleFileLimit()I
@2.0.0.RELEASE
+#setMaxTimeout(Ljava/time/Duration;)V
+#getMaxTimeout()Ljava/time/Duration;
+#setDefaultJtaTimeout(Ljava/time/Duration;)V
+#getDefaultJtaTimeout()Ljava/time/Duration;
+#setAllowSubTransactions(Z)V
+#isAllowSubTransactions()Z
+#setDefaultMaxWaitTimeOnShutdown(J)V
+#getDefaultMaxWaitTimeOnShutdown()J
+#getRecovery()Lorg/springframework/boot/jta/atomikos/AtomikosProperties$Recovery;
-#setMaxTimeout(J)V
-#getMaxTimeout()J
-#setDefaultJtaTimeout(J)V
-#getDefaultJtaTimeout()J
@3.0.0
-###org/springframework/boot/jta/atomikos/AtomikosProperties

+###org/springframework/boot/jta/atomikos/AtomikosXAConnectionFactoryWrapper
@1.2.0.RELEASE
+#<init>()V
+#wrapConnectionFactory(Ljavax/jms/XAConnectionFactory;)Ljavax/jms/ConnectionFactory;
@3.0.0
-###org/springframework/boot/jta/atomikos/AtomikosXAConnectionFactoryWrapper

+###org/springframework/boot/jta/atomikos/AtomikosDependsOnBeanFactoryPostProcessor
@1.2.0.RELEASE
+#<init>()V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#getOrder()I
+#setOrder(I)V
@3.0.0
-###org/springframework/boot/jta/atomikos/AtomikosDependsOnBeanFactoryPostProcessor

+###org/springframework/boot/jta/atomikos/AtomikosXADataSourceWrapper
@1.2.0.RELEASE
+#<init>()V
+#wrapDataSource(Ljavax/sql/XADataSource;)Lorg/springframework/boot/jta/atomikos/AtomikosDataSourceBean;
+#wrapDataSource(Ljavax/sql/XADataSource;)Ljavax/sql/DataSource;
@3.0.0
-###org/springframework/boot/jta/atomikos/AtomikosXADataSourceWrapper

+###org/springframework/boot/jta/atomikos/AtomikosDataSourceBean
@1.2.0.RELEASE
+#<init>()V
+#setBeanName(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#destroy()V
@3.0.0
-###org/springframework/boot/jta/atomikos/AtomikosDataSourceBean

+###org/springframework/boot/jta/atomikos/AtomikosLoggingLevel
@1.2.0.RELEASE
+#values()[Lorg/springframework/boot/jta/atomikos/AtomikosLoggingLevel;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/jta/atomikos/AtomikosLoggingLevel;
@1.5.4.RELEASE
-###org/springframework/boot/jta/atomikos/AtomikosLoggingLevel

+###org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBean
@1.2.0.RELEASE
+#<init>()V
+#init()V
+#setBeanName(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#destroy()V
+#setConnectionFactory(Ljavax/jms/XAConnectionFactory;)V
+#createPooledConnection(Ljava/lang/Object;Lbitronix/tm/resource/common/ResourceBean;)Lbitronix/tm/resource/common/XAStatefulHolder;
@2.5.0
-###org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBean

+###org/springframework/boot/jta/bitronix/BitronixXADataSourceWrapper
@1.2.0.RELEASE
+#<init>()V
+#wrapDataSource(Ljavax/sql/XADataSource;)Lorg/springframework/boot/jta/bitronix/PoolingDataSourceBean;
+#wrapDataSource(Ljavax/sql/XADataSource;)Ljavax/sql/DataSource;
@2.5.0
-###org/springframework/boot/jta/bitronix/BitronixXADataSourceWrapper

+###org/springframework/boot/jta/bitronix/PoolingDataSourceBean
@1.2.0.RELEASE
+#<init>()V
+#init()V
+#setBeanName(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#setDataSource(Ljavax/sql/XADataSource;)V
+#createPooledConnection(Ljava/lang/Object;Lbitronix/tm/resource/common/ResourceBean;)Lbitronix/tm/resource/common/XAStatefulHolder;
+#getParentLogger()Ljava/util/logging/Logger;
@2.5.0
-###org/springframework/boot/jta/bitronix/PoolingDataSourceBean

+###org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBean$DirectXAConnectionFactory
@1.2.0.RELEASE
+#<init>()V
+#createXAConnection()Ljavax/jms/XAConnection;
+#createXAConnection(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XAConnection;
+#getConnectionFactory()Ljavax/jms/XAConnectionFactory;
@2.0.0.RELEASE
+#createXAContext()Ljavax/jms/XAJMSContext;
+#createXAContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XAJMSContext;
@2.5.0
-###org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBean$DirectXAConnectionFactory

+###org/springframework/boot/jta/bitronix/PoolingDataSourceBean$DirectXADataSource
@1.2.0.RELEASE
+#<init>()V
+#getLogWriter()Ljava/io/PrintWriter;
+#getXAConnection()Ljavax/sql/XAConnection;
+#getXAConnection(Ljava/lang/String;Ljava/lang/String;)Ljavax/sql/XAConnection;
+#setLogWriter(Ljava/io/PrintWriter;)V
+#setLoginTimeout(I)V
+#getLoginTimeout()I
+#getParentLogger()Ljava/util/logging/Logger;
+#getDataSource()Ljavax/sql/XADataSource;
@2.5.0
-###org/springframework/boot/jta/bitronix/PoolingDataSourceBean$DirectXADataSource

+###org/springframework/boot/jta/bitronix/BitronixDependentBeanFactoryPostProcessor
@1.2.0.RELEASE
+#<init>()V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#getOrder()I
+#setOrder(I)V
@2.5.0
-###org/springframework/boot/jta/bitronix/BitronixDependentBeanFactoryPostProcessor

+###org/springframework/boot/jta/bitronix/BitronixXAConnectionFactoryWrapper
@1.2.0.RELEASE
+#<init>()V
+#wrapConnectionFactory(Ljavax/jms/XAConnectionFactory;)Ljavax/jms/ConnectionFactory;
@2.5.0
-###org/springframework/boot/jta/bitronix/BitronixXAConnectionFactoryWrapper

+###org/springframework/boot/jta/XADataSourceWrapper
@1.2.0.RELEASE
+#wrapDataSource(Ljavax/sql/XADataSource;)Ljavax/sql/DataSource;
@2.0.0.RELEASE
-###org/springframework/boot/jta/XADataSourceWrapper

+###org/springframework/boot/jta/XAConnectionFactoryWrapper
@1.2.0.RELEASE
+#wrapConnectionFactory(Ljavax/jms/XAConnectionFactory;)Ljavax/jms/ConnectionFactory;
@2.0.0.RELEASE
-###org/springframework/boot/jta/XAConnectionFactoryWrapper

+###org/springframework/boot/ApplicationTemp
@1.3.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#toString()Ljava/lang/String;
+#getDir(Ljava/lang/String;)Ljava/io/File;
+#getDir()Ljava/io/File;
@2.0.0.RELEASE
-###org/springframework/boot/ApplicationTemp

+###org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationReadyEvent;)V
+#afterPropertiesSet()V
+#destroy()V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.0.0.RELEASE
+#onApplicationReadyEvent(Lorg/springframework/boot/context/event/ApplicationReadyEvent;)V
+#onWebServerInitializedEvent(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V
-#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationReadyEvent;)V
-#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.1.0.RELEASE
+#supportsEventType(Lorg/springframework/core/ResolvableType;)Z
+#supportsSourceType(Ljava/lang/Class;)Z
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#getOrder()I
-#onApplicationReadyEvent(Lorg/springframework/boot/context/event/ApplicationReadyEvent;)V
-#onWebServerInitializedEvent(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V

+###org/springframework/boot/admin/SpringApplicationAdminMXBean
@1.3.0.RELEASE
+#isReady()Z
+#isEmbeddedWebApplication()Z
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#shutdown()V

+###org/springframework/boot/json/GsonJsonParser
@1.2.0.RELEASE
+#<init>()V
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#parseList(Ljava/lang/String;)Ljava/util/List;

+###org/springframework/boot/json/JsonJsonParser
@1.2.0.RELEASE
+#<init>()V
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#parseList(Ljava/lang/String;)Ljava/util/List;
@2.0.0.RELEASE
-###org/springframework/boot/json/JsonJsonParser

+###org/springframework/boot/json/BasicJsonParser
@1.2.0.RELEASE
+#<init>()V
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#parseList(Ljava/lang/String;)Ljava/util/List;

+###org/springframework/boot/json/YamlJsonParser
@1.0.0.RELEASE
+#<init>()V
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#parseList(Ljava/lang/String;)Ljava/util/List;
@3.0.0
-###org/springframework/boot/json/YamlJsonParser

+###org/springframework/boot/json/JacksonJsonParser
@1.0.0.RELEASE
+#<init>()V
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#parseList(Ljava/lang/String;)Ljava/util/List;
@2.1.0.RELEASE
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V

+###org/springframework/boot/json/JsonSimpleJsonParser
@1.2.0.RELEASE
+#<init>()V
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#parseList(Ljava/lang/String;)Ljava/util/List;
@2.1.0.RELEASE
-###org/springframework/boot/json/JsonSimpleJsonParser

+###org/springframework/boot/json/JsonParserFactory
@1.0.0.RELEASE
+#<init>()V
+#getJsonParser()Lorg/springframework/boot/json/JsonParser;

+###org/springframework/boot/json/JsonParser
@1.0.0.RELEASE
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#parseList(Ljava/lang/String;)Ljava/util/List;

+###org/springframework/boot/ApplicationRunner
@1.3.0.RELEASE
+#run(Lorg/springframework/boot/ApplicationArguments;)V

+###org/springframework/boot/ResourceBanner
@1.2.0.RELEASE
+#<init>(Lorg/springframework/core/io/Resource;)V
+#printBanner(Lorg/springframework/core/env/Environment;Ljava/lang/Class;Ljava/io/PrintStream;)V

+###org/springframework/boot/Banner$Mode
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/Banner$Mode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/Banner$Mode;

+###org/springframework/boot/lang/UsesUnsafeJava
@1.3.0.RELEASE
@2.1.0.RELEASE
-###org/springframework/boot/lang/UsesUnsafeJava

+###org/springframework/boot/SpringBootVersion
@1.3.0.RELEASE
+#getVersion()Ljava/lang/String;

+###org/springframework/boot/logging/LoggingApplicationListener
@1.0.0.RELEASE
+#<init>()V
+#supportsEventType(Ljava/lang/Class;)Z
+#supportsSourceType(Ljava/lang/Class;)Z
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#setOrder(I)V
+#getOrder()I
+#setSpringBootLogging(Lorg/springframework/boot/logging/LogLevel;)V
+#setParseArgs(Z)V
@1.1.4.RELEASE
+#setLogLevels(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/core/env/Environment;)V
@1.2.0.RELEASE
-#setLogLevels(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/core/env/Environment;)V
@1.3.0.RELEASE
+#supportsEventType(Lorg/springframework/core/ResolvableType;)Z
-#supportsEventType(Ljava/lang/Class;)Z
@2.0.0.RELEASE
-###org/springframework/boot/logging/LoggingApplicationListener

+###org/springframework/boot/logging/LoggingInitializationContext
@1.3.0.RELEASE
+#<init>(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#getEnvironment()Lorg/springframework/core/env/Environment;

+###org/springframework/boot/logging/java/SimpleFormatter
@1.0.0.RELEASE
+#<init>()V
+#format(Ljava/util/logging/LogRecord;)Ljava/lang/String;

+###org/springframework/boot/logging/java/JavaLoggingSystem
@1.0.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#initialize(Ljava/lang/String;)V
+#setLogLevel(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
@1.2.0.RELEASE
+#beforeInitialize()V
-#initialize(Ljava/lang/String;)V
@1.3.0.RELEASE
+#getShutdownHandler()Ljava/lang/Runnable;
@1.5.0.RELEASE
+#getSupportedLogLevels()Ljava/util/Set;
+#getLoggerConfigurations()Ljava/util/List;
+#getLoggerConfiguration(Ljava/lang/String;)Lorg/springframework/boot/logging/LoggerConfiguration;
@2.1.7.RELEASE
+#cleanUp()V

+###org/springframework/boot/logging/log4j2/ExtendedWhitespaceThrowablePatternConverter
@1.3.0.RELEASE
+#format(Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/StringBuilder;)V
+#newInstance([Ljava/lang/String;)Lorg/springframework/boot/logging/log4j2/ExtendedWhitespaceThrowablePatternConverter;
@2.0.0.RELEASE
+#newInstance(Lorg/apache/logging/log4j/core/config/Configuration;[Ljava/lang/String;)Lorg/springframework/boot/logging/log4j2/ExtendedWhitespaceThrowablePatternConverter;
-#newInstance([Ljava/lang/String;)Lorg/springframework/boot/logging/log4j2/ExtendedWhitespaceThrowablePatternConverter;

+###org/springframework/boot/logging/log4j2/Log4J2LoggingSystem
@1.2.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#beforeInitialize()V
+#setLogLevel(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
@1.2.1.RELEASE
+#initialize(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
@1.3.0.RELEASE
+#initialize(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
+#getShutdownHandler()Ljava/lang/Runnable;
-#initialize(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
@1.4.1.RELEASE
+#cleanUp()V
@1.5.0.RELEASE
+#getSupportedLogLevels()Ljava/util/Set;
+#getLoggerConfigurations()Ljava/util/List;
+#getLoggerConfiguration(Ljava/lang/String;)Lorg/springframework/boot/logging/LoggerConfiguration;
@3.0.0
+#getEnvironment(Lorg/apache/logging/log4j/core/LoggerContext;)Lorg/springframework/core/env/Environment;

+###org/springframework/boot/logging/log4j2/ColorConverter
@1.3.0.RELEASE
+#newInstance(Lorg/apache/logging/log4j/core/config/Configuration;[Ljava/lang/String;)Lorg/springframework/boot/logging/log4j2/ColorConverter;
+#handlesThrowable()Z
+#format(Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/StringBuilder;)V

+###org/springframework/boot/logging/log4j2/WhitespaceThrowablePatternConverter
@1.3.0.RELEASE
+#format(Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/StringBuilder;)V
+#newInstance([Ljava/lang/String;)Lorg/springframework/boot/logging/log4j2/WhitespaceThrowablePatternConverter;
@2.0.0.RELEASE
+#newInstance(Lorg/apache/logging/log4j/core/config/Configuration;[Ljava/lang/String;)Lorg/springframework/boot/logging/log4j2/WhitespaceThrowablePatternConverter;
-#newInstance([Ljava/lang/String;)Lorg/springframework/boot/logging/log4j2/WhitespaceThrowablePatternConverter;

+###org/springframework/boot/logging/DeferredLog
@1.3.0.RELEASE
+#<init>()V
+#isTraceEnabled()Z
+#isDebugEnabled()Z
+#isInfoEnabled()Z
+#isWarnEnabled()Z
+#isErrorEnabled()Z
+#isFatalEnabled()Z
+#trace(Ljava/lang/Object;)V
+#trace(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#debug(Ljava/lang/Object;)V
+#debug(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#info(Ljava/lang/Object;)V
+#info(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#warn(Ljava/lang/Object;)V
+#warn(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#error(Ljava/lang/Object;)V
+#error(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#fatal(Ljava/lang/Object;)V
+#fatal(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#replayTo(Ljava/lang/Class;)V
+#replayTo(Lorg/apache/commons/logging/Log;)V
+#replay(Lorg/apache/commons/logging/Log;Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
+#replay(Lorg/apache/commons/logging/Log;Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;
@2.1.0.RELEASE
+#switchTo(Ljava/lang/Class;)V
+#switchTo(Lorg/apache/commons/logging/Log;)V

+###org/springframework/boot/logging/Slf4JLoggingSystem
@1.2.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#beforeInitialize()V
@1.2.2.RELEASE
+#cleanUp()V
@3.0.0
-###org/springframework/boot/logging/Slf4JLoggingSystem

+###org/springframework/boot/logging/LogFile
@1.2.1.RELEASE
+#applyToSystemProperties()V
+#applyTo(Ljava/util/Properties;)V
+#toString()Ljava/lang/String;
+#get(Lorg/springframework/core/env/PropertyResolver;)Lorg/springframework/boot/logging/LogFile;

+###org/springframework/boot/logging/LoggingSystem
@1.0.0.RELEASE
+#<init>()V
+#beforeInitialize()V
+#initialize()V
+#initialize(Ljava/lang/String;)V
+#setLogLevel(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
+#get(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
@1.1.11.RELEASE
+#cleanUp()V
@1.2.0.RELEASE
+#initialize(Ljava/lang/String;Ljava/lang/String;)V
-#initialize()V
-#initialize(Ljava/lang/String;)V
-#cleanUp()V
@1.2.1.RELEASE
+#initialize(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
-#initialize(Ljava/lang/String;Ljava/lang/String;)V
@1.2.2.RELEASE
+#cleanUp()V
@1.3.0.RELEASE
+#initialize(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
*#initialize(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V[deprecated]
+#getShutdownHandler()Ljava/lang/Runnable;
@1.4.0.RELEASE
-#initialize(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V[deprecated]
@1.5.0.RELEASE
+#getSupportedLogLevels()Ljava/util/Set;
+#getLoggerConfigurations()Ljava/util/List;
+#getLoggerConfiguration(Ljava/lang/String;)Lorg/springframework/boot/logging/LoggerConfiguration;
@2.4.0
+#getSystemProperties(Lorg/springframework/core/env/ConfigurableEnvironment;)Lorg/springframework/boot/logging/LoggingSystemProperties;

+###org/springframework/boot/logging/ClasspathLoggingApplicationListener
@1.0.0.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#getOrder()I
+#supportsEventType(Ljava/lang/Class;)Z
+#supportsSourceType(Ljava/lang/Class;)Z
@1.3.0.RELEASE
+#supportsEventType(Lorg/springframework/core/ResolvableType;)Z
-#supportsEventType(Ljava/lang/Class;)Z
@2.0.0.RELEASE
-###org/springframework/boot/logging/ClasspathLoggingApplicationListener

+###org/springframework/boot/logging/AbstractLoggingSystem
@1.0.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;[Ljava/lang/String;)V
+#beforeInitialize()V
+#initialize()V
@1.2.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#initialize(Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Ljava/lang/ClassLoader;[Ljava/lang/String;)V
-#initialize()V
@1.2.1.RELEASE
+#initialize(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
-#initialize(Ljava/lang/String;Ljava/lang/String;)V
@1.3.0.RELEASE
+#initialize(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
-#initialize(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V

+###org/springframework/boot/logging/log4j/Log4JLoggingSystem
@1.0.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#beforeInitialize()V
+#initialize(Ljava/lang/String;)V
+#setLogLevel(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
@1.1.11.RELEASE
+#cleanUp()V
@1.2.0.RELEASE
-#initialize(Ljava/lang/String;)V
-#cleanUp()V
@1.3.0.RELEASE
+#getShutdownHandler()Ljava/lang/Runnable;
@1.4.0.RELEASE
-###org/springframework/boot/logging/log4j/Log4JLoggingSystem

+###org/springframework/boot/logging/LogLevel
@1.0.0.RELEASE
+#values()[Lorg/springframework/boot/logging/LogLevel;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/logging/LogLevel;

+###org/springframework/boot/logging/logback/LevelRemappingAppender$AppendableLogger
@1.0.0.RELEASE
+#<init>(Lch/qos/logback/classic/Logger;)V
+#callAppenders(Lch/qos/logback/classic/spi/ILoggingEvent;)V
@2.0.0.RELEASE
-###org/springframework/boot/logging/logback/LevelRemappingAppender$AppendableLogger

+###org/springframework/boot/logging/logback/LevelRemappingAppender
@1.0.0.RELEASE
+#<init>()V
+#setDestinationLogger(Ljava/lang/String;)V
+#setRemapLevels(Ljava/lang/String;)V
@1.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/logging/logback/LevelRemappingAppender

+###org/springframework/boot/logging/logback/LogbackLoggingSystem
@1.0.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#beforeInitialize()V
+#initialize(Ljava/lang/String;)V
+#setLogLevel(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
@1.1.11.RELEASE
+#cleanUp()V
@1.2.0.RELEASE
+#initialize(Ljava/lang/String;Ljava/lang/String;)V
-#cleanUp()V
-#initialize(Ljava/lang/String;)V
@1.2.1.RELEASE
+#initialize(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
-#initialize(Ljava/lang/String;Ljava/lang/String;)V
@1.3.0.RELEASE
+#initialize(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
+#cleanUp()V
+#getShutdownHandler()Ljava/lang/Runnable;
-#initialize(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
@1.5.0.RELEASE
+#getLoggerConfigurations()Ljava/util/List;
+#getLoggerConfiguration(Ljava/lang/String;)Lorg/springframework/boot/logging/LoggerConfiguration;
+#getSupportedLogLevels()Ljava/util/Set;
@2.4.0
+#getSystemProperties(Lorg/springframework/core/env/ConfigurableEnvironment;)Lorg/springframework/boot/logging/LoggingSystemProperties;
@3.0.0
+#processAheadOfTime(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Lorg/springframework/beans/factory/aot/BeanFactoryInitializationAotContribution;

+###org/springframework/boot/logging/logback/ExtendedWhitespaceThrowableProxyConverter
@1.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/logging/logback/ColorConverter
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/logging/logback/WhitespaceThrowableProxyConverter
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/ExitCodeEvent
@1.3.2.RELEASE
+#<init>(Ljava/lang/Object;I)V
+#getExitCode()I

+###org/springframework/boot/env/YamlPropertySourceLoader
@1.0.0.RELEASE
+#<init>()V
+#getFileExtensions()[Ljava/lang/String;
+#load(Ljava/lang/String;Lorg/springframework/core/io/Resource;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
@2.0.0.RELEASE
+#load(Ljava/lang/String;Lorg/springframework/core/io/Resource;)Ljava/util/List;
-#load(Ljava/lang/String;Lorg/springframework/core/io/Resource;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;

+###org/springframework/boot/env/EnvironmentPostProcessor
@1.3.0.RELEASE
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V

+###org/springframework/boot/env/EnumerableCompositePropertySource
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#getPropertyNames()[Ljava/lang/String;
+#add(Lorg/springframework/core/env/PropertySource;)V
@2.0.0.RELEASE
-###org/springframework/boot/env/EnumerableCompositePropertySource

+###org/springframework/boot/env/PropertySourcesLoader
@1.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/env/MutablePropertySources;)V
+#load(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/env/PropertySource;
+#load(Lorg/springframework/core/io/Resource;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
+#load(Lorg/springframework/core/io/Resource;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
+#load(Lorg/springframework/core/io/Resource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
+#getPropertySources()Lorg/springframework/core/env/MutablePropertySources;
+#getAllFileExtensions()Ljava/util/Set;
@2.0.0.RELEASE
-###org/springframework/boot/env/PropertySourcesLoader

+###org/springframework/boot/env/PropertiesPropertySourceLoader
@1.0.0.RELEASE
+#<init>()V
+#getFileExtensions()[Ljava/lang/String;
+#load(Ljava/lang/String;Lorg/springframework/core/io/Resource;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
@2.0.0.RELEASE
+#load(Ljava/lang/String;Lorg/springframework/core/io/Resource;)Ljava/util/List;
-#load(Ljava/lang/String;Lorg/springframework/core/io/Resource;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;

+###org/springframework/boot/env/SpringApplicationJsonEnvironmentPostProcessor
@1.3.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V

+###org/springframework/boot/env/PropertySourceLoader
@1.0.0.RELEASE
+#getFileExtensions()[Ljava/lang/String;
+#load(Ljava/lang/String;Lorg/springframework/core/io/Resource;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
@2.0.0.RELEASE
+#load(Ljava/lang/String;Lorg/springframework/core/io/Resource;)Ljava/util/List;
-#load(Ljava/lang/String;Lorg/springframework/core/io/Resource;Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;

+###org/springframework/boot/bind/PropertiesConfigurationFactory
@1.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Class;)V
+#setIgnoreNestedProperties(Z)V
+#setIgnoreUnknownFields(Z)V
+#setIgnoreInvalidFields(Z)V
+#setTargetName(Ljava/lang/String;)V
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
+#setProperties(Ljava/util/Properties;)V
+#setPropertySources(Lorg/springframework/core/env/PropertySources;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setValidator(Lorg/springframework/validation/Validator;)V
+#setExceptionIfInvalid(Z)V
+#afterPropertiesSet()V
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
+#bindPropertiesToTarget()V
@1.4.0.RELEASE
*#setProperties(Ljava/util/Properties;)V[deprecated]
@1.4.1.RELEASE
+#setResolvePlaceholders(Z)V
@1.5.0.RELEASE
*#setExceptionIfInvalid(Z)V[deprecated]
-#setProperties(Ljava/util/Properties;)V[deprecated]
@1.5.11.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@2.0.0.RELEASE
-###org/springframework/boot/bind/PropertiesConfigurationFactory

+###org/springframework/boot/bind/RelaxedNames
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#iterator()Ljava/util/Iterator;
@1.3.0.RELEASE
+#forCamelCase(Ljava/lang/String;)Lorg/springframework/boot/bind/RelaxedNames;
@2.0.0.RELEASE
-###org/springframework/boot/bind/RelaxedNames

+###org/springframework/boot/bind/InetAddressEditor
@1.0.0.RELEASE
+#<init>()V
+#getAsText()Ljava/lang/String;
+#setAsText(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/boot/bind/InetAddressEditor

+###org/springframework/boot/bind/PropertySourcesPropertyValues
@1.0.0.RELEASE
+#<init>(Lorg/springframework/core/env/PropertySources;)V
+#<init>(Lorg/springframework/core/env/PropertySources;Ljava/util/Collection;Ljava/util/Collection;)V
+#getPropertyValues()[Lorg/springframework/beans/PropertyValue;
+#getPropertyValue(Ljava/lang/String;)Lorg/springframework/beans/PropertyValue;
+#changesSince(Lorg/springframework/beans/PropertyValues;)Lorg/springframework/beans/PropertyValues;
+#contains(Ljava/lang/String;)Z
+#isEmpty()Z
@1.5.2.RELEASE
+#<init>(Lorg/springframework/core/env/PropertySources;Z)V
@2.0.0.RELEASE
-###org/springframework/boot/bind/PropertySourcesPropertyValues

+###org/springframework/boot/bind/YamlConfigurationFactory
@1.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
+#setPropertyAliases(Ljava/util/Map;)V
+#setYaml(Ljava/lang/String;)V
+#setResource(Lorg/springframework/core/io/Resource;)V
+#setValidator(Lorg/springframework/validation/Validator;)V
+#setExceptionIfInvalid(Z)V
+#afterPropertiesSet()V
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@1.5.0.RELEASE
*#setExceptionIfInvalid(Z)V[deprecated]
@2.0.0.RELEASE
-###org/springframework/boot/bind/YamlConfigurationFactory

+###org/springframework/boot/bind/RelaxedBindingNotWritablePropertyException
@1.3.0.RELEASE
+#getMessage()Ljava/lang/String;
+#getPropertyOrigin()Lorg/springframework/boot/bind/PropertyOrigin;
@2.0.0.RELEASE
-###org/springframework/boot/bind/RelaxedBindingNotWritablePropertyException

+###org/springframework/boot/bind/PropertyOrigin
@1.3.0.RELEASE
+#getSource()Lorg/springframework/core/env/PropertySource;
+#getName()Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/bind/PropertyOrigin

+###org/springframework/boot/bind/YamlJavaBeanPropertyConstructor
@1.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Ljava/util/Map;)V
@2.0.0.RELEASE
-###org/springframework/boot/bind/YamlJavaBeanPropertyConstructor

+###org/springframework/boot/bind/RelaxedDataBinder
@1.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#setIgnoreNestedProperties(Z)V
@1.1.0.RELEASE
+#initBeanPropertyAccess()V
@1.2.0.RELEASE
+#setNameAliases(Ljava/util/Map;)V
+#withAlias(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/boot/bind/RelaxedDataBinder;
@1.3.0.RELEASE
-#initBeanPropertyAccess()V
@1.5.14.RELEASE
+#registerCustomEditor(Ljava/lang/Class;Ljava/beans/PropertyEditor;)V
+#registerCustomEditor(Ljava/lang/Class;Ljava/lang/String;Ljava/beans/PropertyEditor;)V
@2.0.0.RELEASE
-###org/springframework/boot/bind/RelaxedDataBinder

+###org/springframework/boot/bind/RelaxedPropertyResolver
@1.0.0.RELEASE
+#<init>(Lorg/springframework/core/env/PropertyResolver;)V
+#<init>(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;)V
+#getRequiredProperty(Ljava/lang/String;)Ljava/lang/String;
+#getRequiredProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
+#containsProperty(Ljava/lang/String;)Z
+#resolvePlaceholders(Ljava/lang/String;)Ljava/lang/String;
+#resolveRequiredPlaceholders(Ljava/lang/String;)Ljava/lang/String;
+#getSubProperties(Ljava/lang/String;)Ljava/util/Map;
@1.4.0.RELEASE
*#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]
@1.4.3.RELEASE
+#ignoringUnresolvableNestedPlaceholders(Lorg/springframework/core/env/Environment;Ljava/lang/String;)Lorg/springframework/boot/bind/RelaxedPropertyResolver;
@2.0.0.RELEASE
-###org/springframework/boot/bind/RelaxedPropertyResolver

+###org/springframework/boot/bind/PropertySourceUtils
@1.0.0.RELEASE
+#<init>()V
+#getSubProperties(Lorg/springframework/core/env/PropertySources;Ljava/lang/String;)Ljava/util/Map;
+#getSubProperties(Lorg/springframework/core/env/PropertySources;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
@2.0.0.RELEASE
-###org/springframework/boot/bind/PropertySourceUtils

+###org/springframework/boot/CommandLineRunner
@1.0.0.RELEASE
+#run([Ljava/lang/String;)V

+###org/springframework/boot/orm/jpa/hibernate/SpringNamingStrategy
@1.2.0.RELEASE
+#<init>()V
+#foreignKeyColumnName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@2.0.0.RELEASE
-###org/springframework/boot/orm/jpa/hibernate/SpringNamingStrategy

+###org/springframework/boot/orm/jpa/hibernate/SpringJtaPlatform
@1.2.0.RELEASE
+#<init>(Lorg/springframework/transaction/jta/JtaTransactionManager;)V

+###org/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$Builder
@1.3.0.RELEASE
+#packages([Ljava/lang/String;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#packages([Ljava/lang/Class;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#persistenceUnit(Ljava/lang/String;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#properties(Ljava/util/Map;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#jta(Z)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#build()Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;
@2.0.0.RELEASE
+#mappingResources([Ljava/lang/String;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$Builder;
@3.0.0
+#managedTypes(Lorg/springframework/orm/jpa/persistenceunit/PersistenceManagedTypes;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$Builder;

+###org/springframework/boot/orm/jpa/EntityScan
@1.0.0.RELEASE
+#value()[Ljava/lang/String;
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;
@1.5.0.RELEASE
-###org/springframework/boot/orm/jpa/EntityScan

+###org/springframework/boot/orm/jpa/EntityManagerFactoryBuilder
@1.3.0.RELEASE
+#<init>(Lorg/springframework/orm/jpa/JpaVendorAdapter;Ljava/util/Map;Lorg/springframework/orm/jpa/persistenceunit/PersistenceUnitManager;)V
+#dataSource(Ljavax/sql/DataSource;)Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$Builder;
+#setCallback(Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$EntityManagerFactoryBeanCallback;)V
@1.4.1.RELEASE
+#<init>(Lorg/springframework/orm/jpa/JpaVendorAdapter;Ljava/util/Map;Lorg/springframework/orm/jpa/persistenceunit/PersistenceUnitManager;Ljava/net/URL;)V
@2.0.5.RELEASE
*#setCallback(Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$EntityManagerFactoryBeanCallback;)V[deprecated]
@2.1.0.RELEASE
+#setBootstrapExecutor(Lorg/springframework/core/task/AsyncTaskExecutor;)V
-#setCallback(Lorg/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$EntityManagerFactoryBeanCallback;)V[deprecated]
@2.5.0
+#setPersistenceUnitPostProcessors([Lorg/springframework/orm/jpa/persistenceunit/PersistenceUnitPostProcessor;)V

+###org/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$EntityManagerFactoryBeanCallback
@1.3.0.RELEASE
+#execute(Lorg/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean;)V
@2.1.0.RELEASE
-###org/springframework/boot/orm/jpa/EntityManagerFactoryBuilder$EntityManagerFactoryBeanCallback

+###org/springframework/boot/ApplicationPid
@1.0.2.RELEASE
+#<init>()V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#write(Ljava/io/File;)V
@2.0.0.RELEASE
-###org/springframework/boot/ApplicationPid

+###org/springframework/boot/test/TestRestTemplate$HttpClientOption
@1.1.9.RELEASE
+#values()[Lorg/springframework/boot/test/TestRestTemplate$HttpClientOption;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/test/TestRestTemplate$HttpClientOption;
@1.4.0.RELEASE
-###org/springframework/boot/test/TestRestTemplate$HttpClientOption

+###org/springframework/boot/test/TestRestTemplate
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
@1.1.6.RELEASE
+#<init>([Lorg/springframework/boot/test/TestRestTemplate$HtppClientOption;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[Lorg/springframework/boot/test/TestRestTemplate$HtppClientOption;)V
-#<init>()V
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
@1.1.9.RELEASE
+#<init>([Lorg/springframework/boot/test/TestRestTemplate$HttpClientOption;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[Lorg/springframework/boot/test/TestRestTemplate$HttpClientOption;)V
-#<init>([Lorg/springframework/boot/test/TestRestTemplate$HtppClientOption;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Lorg/springframework/boot/test/TestRestTemplate$HtppClientOption;)V
@1.4.0.RELEASE
-###org/springframework/boot/test/TestRestTemplate

+###org/springframework/boot/test/IntegrationTest
@1.0.0.RELEASE
@1.0.2.RELEASE
+#value()[Ljava/lang/String;
@1.4.0.RELEASE
-###org/springframework/boot/test/IntegrationTest

+###org/springframework/boot/test/ConfigFileApplicationContextInitializer
@1.0.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@1.4.0.RELEASE
-###org/springframework/boot/test/ConfigFileApplicationContextInitializer

+###org/springframework/boot/test/IntegrationTestPropertiesListener
@1.2.1.RELEASE
+#<init>()V
+#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
+#getOrder()I
@1.4.0.RELEASE
-###org/springframework/boot/test/IntegrationTestPropertiesListener

+###org/springframework/boot/test/ServerPortInfoApplicationContextInitializer
@1.0.2.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@1.3.0.RELEASE
-#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@1.4.0.RELEASE
-###org/springframework/boot/test/ServerPortInfoApplicationContextInitializer

+###org/springframework/boot/test/TestRestTemplate$CustomHttpComponentsClientHttpRequestFactory
@1.1.6.RELEASE
+#<init>([Lorg/springframework/boot/test/TestRestTemplate$HtppClientOption;)V
@1.1.9.RELEASE
+#<init>([Lorg/springframework/boot/test/TestRestTemplate$HttpClientOption;)V
-#<init>([Lorg/springframework/boot/test/TestRestTemplate$HtppClientOption;)V
@1.4.0.RELEASE
-###org/springframework/boot/test/TestRestTemplate$CustomHttpComponentsClientHttpRequestFactory

+###org/springframework/boot/test/WebIntegrationTest
@1.2.1.RELEASE
+#value()[Ljava/lang/String;
+#randomPort()Z
@1.4.0.RELEASE
-###org/springframework/boot/test/WebIntegrationTest

+###org/springframework/boot/test/SpringBootMockServletContext
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V
+#getResource(Ljava/lang/String;)Ljava/net/URL;
@1.4.0.RELEASE
-###org/springframework/boot/test/SpringBootMockServletContext

+###org/springframework/boot/test/SpringApplicationContextLoader
@1.0.0.RELEASE
+#<init>()V
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#processContextConfiguration(Lorg/springframework/test/context/ContextConfigurationAttributes;)V
+#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;
@1.4.0.RELEASE
-###org/springframework/boot/test/SpringApplicationContextLoader

+###org/springframework/boot/test/EnvironmentTestUtils
@1.0.0.RELEASE
+#<init>()V
+#addEnvironment(Lorg/springframework/context/ConfigurableApplicationContext;[Ljava/lang/String;)V
+#addEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;[Ljava/lang/String;)V
@1.0.2.RELEASE
+#addEnvironment(Ljava/lang/String;Lorg/springframework/core/env/ConfigurableEnvironment;[Ljava/lang/String;)V
@1.4.0.RELEASE
-###org/springframework/boot/test/EnvironmentTestUtils

+###org/springframework/boot/test/SpringApplicationConfiguration
@1.0.0.RELEASE
+#locations()[Ljava/lang/String;
+#classes()[Ljava/lang/Class;
+#initializers()[Ljava/lang/Class;
+#inheritLocations()Z
+#inheritInitializers()Z
+#name()Ljava/lang/String;
@1.3.0.RELEASE
+#value()[Ljava/lang/Class;
@1.4.0.RELEASE
-###org/springframework/boot/test/SpringApplicationConfiguration

+###org/springframework/boot/test/OutputCapture
@1.0.0.RELEASE
+#<init>()V
+#apply(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;
+#flush()V
+#toString()Ljava/lang/String;
@1.3.0.RELEASE
+#expect(Lorg/hamcrest/Matcher;)V
@1.4.0.RELEASE
-###org/springframework/boot/test/OutputCapture

+###org/springframework/boot/context/properties/source/ConfigurationPropertyName$Form
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Form;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Form;

+###org/springframework/boot/context/properties/bind/handler/IgnoreErrorsBindHandler
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/boot/context/properties/bind/BindHandler;)V
+#onFailure(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Exception;)Ljava/lang/Object;

+###org/springframework/boot/web/servlet/ServletListenerRegistrationBean
@1.4.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/EventListener;)V
+#setListener(Ljava/util/EventListener;)V
+#onStartup(Ljavax/servlet/ServletContext;)V
+#getListener()Ljava/util/EventListener;
+#isSupportedType(Ljava/util/EventListener;)Z
+#getSupportedTypes()Ljava/util/Set;
@1.5.10.RELEASE
+#setName(Ljava/lang/String;)V[deprecated]
+#setAsyncSupported(Z)V[deprecated]
+#isAsyncSupported()Z[deprecated]
+#setInitParameters(Ljava/util/Map;)V[deprecated]
+#getInitParameters()Ljava/util/Map;[deprecated]
+#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
@2.0.0.RELEASE
-#setName(Ljava/lang/String;)V[deprecated]
-#setAsyncSupported(Z)V[deprecated]
-#isAsyncSupported()Z[deprecated]
-#setInitParameters(Ljava/util/Map;)V[deprecated]
-#getInitParameters()Ljava/util/Map;[deprecated]
-#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
-#onStartup(Ljavax/servlet/ServletContext;)V

+###org/springframework/boot/web/servlet/error/ErrorController
@2.0.0.RELEASE
+#getErrorPath()Ljava/lang/String;
@2.3.0.RELEASE
*#getErrorPath()Ljava/lang/String;[deprecated]
@2.5.0
-#getErrorPath()Ljava/lang/String;[deprecated]

+###org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory
@2.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#getWebServer([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)Lorg/springframework/boot/web/server/WebServer;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setBaseDirectory(Ljava/io/File;)V
+#getTldSkipPatterns()Ljava/util/Set;
+#setTldSkipPatterns(Ljava/util/Collection;)V
+#addTldSkipPatterns([Ljava/lang/String;)V
+#setProtocol(Ljava/lang/String;)V
+#setEngineValves(Ljava/util/Collection;)V
+#getEngineValves()Ljava/util/Collection;
+#addEngineValves([Lorg/apache/catalina/Valve;)V
+#setContextValves(Ljava/util/Collection;)V
+#getContextValves()Ljava/util/Collection;
+#addContextValves([Lorg/apache/catalina/Valve;)V
+#setContextLifecycleListeners(Ljava/util/Collection;)V
+#getContextLifecycleListeners()Ljava/util/Collection;
+#addContextLifecycleListeners([Lorg/apache/catalina/LifecycleListener;)V
+#setTomcatContextCustomizers(Ljava/util/Collection;)V
+#getTomcatContextCustomizers()Ljava/util/Collection;
+#addContextCustomizers([Lorg/springframework/boot/web/embedded/tomcat/TomcatContextCustomizer;)V
+#setTomcatConnectorCustomizers(Ljava/util/Collection;)V
+#addConnectorCustomizers([Lorg/springframework/boot/web/embedded/tomcat/TomcatConnectorCustomizer;)V
+#getTomcatConnectorCustomizers()Ljava/util/Collection;
+#addAdditionalTomcatConnectors([Lorg/apache/catalina/connector/Connector;)V
+#getAdditionalTomcatConnectors()Ljava/util/List;
+#setUriEncoding(Ljava/nio/charset/Charset;)V
+#getUriEncoding()Ljava/nio/charset/Charset;
+#setBackgroundProcessorDelay(I)V
@2.2.0.RELEASE
+#setTomcatProtocolHandlerCustomizers(Ljava/util/Collection;)V
+#addProtocolHandlerCustomizers([Lorg/springframework/boot/web/embedded/tomcat/TomcatProtocolHandlerCustomizer;)V
+#getTomcatProtocolHandlerCustomizers()Ljava/util/Collection;
+#setDisableMBeanRegistry(Z)V

+###org/springframework/boot/web/embedded/tomcat/ConfigurableTomcatWebServerFactory
@2.0.0.RELEASE
+#setBaseDirectory(Ljava/io/File;)V
+#setBackgroundProcessorDelay(I)V
+#addEngineValves([Lorg/apache/catalina/Valve;)V
+#addConnectorCustomizers([Lorg/springframework/boot/web/embedded/tomcat/TomcatConnectorCustomizer;)V
+#addContextCustomizers([Lorg/springframework/boot/web/embedded/tomcat/TomcatContextCustomizer;)V
+#setUriEncoding(Ljava/nio/charset/Charset;)V
@2.2.0.RELEASE
+#addProtocolHandlerCustomizers([Lorg/springframework/boot/web/embedded/tomcat/TomcatProtocolHandlerCustomizer;)V

+###org/springframework/boot/web/embedded/tomcat/TomcatContextCustomizer
@2.0.0.RELEASE
+#customize(Lorg/apache/catalina/Context;)V

+###org/springframework/boot/web/embedded/tomcat/TomcatWebServer
@2.0.0.RELEASE
+#<init>(Lorg/apache/catalina/startup/Tomcat;)V
+#<init>(Lorg/apache/catalina/startup/Tomcat;Z)V
+#start()V
+#stop()V
+#getPort()I
+#getTomcat()Lorg/apache/catalina/startup/Tomcat;
@2.3.0.RELEASE
+#<init>(Lorg/apache/catalina/startup/Tomcat;ZLorg/springframework/boot/web/server/Shutdown;)V
+#shutDownGracefully(Lorg/springframework/boot/web/server/GracefulShutdownCallback;)V

+###org/springframework/boot/jdbc/metadata/AbstractDataSourcePoolMetadata
@2.0.0.RELEASE
+#getUsage()Ljava/lang/Float;

+###org/springframework/boot/system/ApplicationPid
@2.0.0.RELEASE
+#<init>()V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#write(Ljava/io/File;)V

+###org/springframework/boot/util/LambdaSafe
@2.0.0.RELEASE
+#callback(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/springframework/boot/util/LambdaSafe$Callback;
+#callbacks(Ljava/lang/Class;Ljava/util/Collection;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/springframework/boot/util/LambdaSafe$Callbacks;

+###org/springframework/boot/context/properties/source/UnboundElementsSourceFilter
@2.0.0.RELEASE
+#<init>()V
+#apply(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;)Ljava/lang/Boolean;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/boot/context/properties/bind/AbstractBindHandler
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/boot/context/properties/bind/BindHandler;)V
+#onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Z
+#onSuccess(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)Ljava/lang/Object;
+#onFailure(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Exception;)Ljava/lang/Object;
+#onFinish(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)V
@2.1.0.RELEASE
+#onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Lorg/springframework/boot/context/properties/bind/Bindable;
-#onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Z

+###org/springframework/boot/context/properties/bind/validation/BindValidationException
@2.0.0.RELEASE
+#getValidationErrors()Lorg/springframework/boot/context/properties/bind/validation/ValidationErrors;

+###org/springframework/boot/context/properties/bind/PropertySourcesPlaceholdersResolver
@2.0.0.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;)V
+#<init>(Ljava/lang/Iterable;)V
+#<init>(Ljava/lang/Iterable;Lorg/springframework/util/PropertyPlaceholderHelper;)V
+#resolvePlaceholders(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/boot/context/properties/bind/UnboundConfigurationPropertiesException
@2.0.0.RELEASE
+#<init>(Ljava/util/Set;)V
+#getUnboundProperties()Ljava/util/Set;

+###org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata
@2.0.0.RELEASE
+#<init>()V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#getBeansWithFactoryAnnotation(Ljava/lang/Class;)Ljava/util/Map;
+#findFactoryAnnotation(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#findFactoryMethod(Ljava/lang/String;)Ljava/lang/reflect/Method;
@2.2.0.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@2.4.0
-###org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata

+###org/springframework/boot/context/properties/ConfigurationPropertiesBindException
@2.0.0.RELEASE
+#getBeanType()Ljava/lang/Class;
+#getAnnotation()Lorg/springframework/boot/context/properties/ConfigurationProperties;

+###org/springframework/boot/web/servlet/server/Jsp
@2.0.0.RELEASE
+#<init>()V
+#getClassName()Ljava/lang/String;
+#setClassName(Ljava/lang/String;)V
+#getInitParameters()Ljava/util/Map;
+#setInitParameters(Ljava/util/Map;)V
+#getRegistered()Z
+#setRegistered(Z)V

+###org/springframework/boot/web/servlet/view/MustacheView
@2.0.0.RELEASE
+#<init>()V
+#setCompiler(Lcom/samskivert/mustache/Mustache$Compiler;)V
+#setCharset(Ljava/lang/String;)V
+#checkResource(Ljava/util/Locale;)Z

+###org/springframework/boot/web/server/SslStoreProvider
@2.0.0.RELEASE
+#getKeyStore()Ljava/security/KeyStore;
+#getTrustStore()Ljava/security/KeyStore;
@2.7.2
+#getKeyPassword()Ljava/lang/String;

+###org/springframework/boot/web/embedded/jetty/JettyServerCustomizer
@2.0.0.RELEASE
+#customize(Lorg/eclipse/jetty/server/Server;)V

+###org/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V
+#refresh()V
+#getWebServer()Lorg/springframework/boot/web/server/WebServer;
+#getServerNamespace()Ljava/lang/String;
+#setServerNamespace(Ljava/lang/String;)V

+###org/springframework/boot/web/reactive/error/ErrorWebExceptionHandler
@2.0.0.RELEASE

+###org/springframework/boot/web/reactive/result/view/MustacheViewResolver
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lcom/samskivert/mustache/Mustache$Compiler;)V
+#setCharset(Ljava/lang/String;)V

+###org/springframework/boot/web/reactive/function/client/WebClientCustomizer
@2.0.0.RELEASE
+#customize(Lorg/springframework/web/reactive/function/client/WebClient$Builder;)V

+###org/springframework/boot/web/client/RootUriTemplateHandler
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/web/util/UriTemplateHandler;)V
+#expand(Ljava/lang/String;Ljava/util/Map;)Ljava/net/URI;
+#expand(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
+#getRootUri()Ljava/lang/String;
+#addTo(Lorg/springframework/web/client/RestTemplate;Ljava/lang/String;)Lorg/springframework/boot/web/client/RootUriTemplateHandler;
@2.3.10.RELEASE
+#withHandlerWrapper(Ljava/util/function/Function;)Lorg/springframework/boot/web/client/RootUriTemplateHandler;
@2.4.0
-#withHandlerWrapper(Ljava/util/function/Function;)Lorg/springframework/boot/web/client/RootUriTemplateHandler;
@2.4.5
+#withHandlerWrapper(Ljava/util/function/Function;)Lorg/springframework/boot/web/client/RootUriTemplateHandler;

+###org/springframework/boot/web/client/RestTemplateCustomizer
@1.4.0.RELEASE
+#customize(Lorg/springframework/web/client/RestTemplate;)V

+###org/springframework/boot/web/codec/CodecCustomizer
@2.0.0.RELEASE
+#customize(Lorg/springframework/http/codec/CodecConfigurer;)V

+###org/springframework/boot/origin/OriginProvider
@2.0.0.RELEASE
+#getOrigin()Lorg/springframework/boot/origin/Origin;

+###org/springframework/boot/origin/Origin
@2.0.0.RELEASE
+#from(Ljava/lang/Object;)Lorg/springframework/boot/origin/Origin;
@2.4.0
+#getParent()Lorg/springframework/boot/origin/Origin;
+#parentsFrom(Ljava/lang/Object;)Ljava/util/List;

+###org/springframework/boot/jdbc/metadata/TomcatDataSourcePoolMetadata
@2.0.0.RELEASE
+#<init>(Lorg/apache/tomcat/jdbc/pool/DataSource;)V
+#getActive()Ljava/lang/Integer;
+#getMax()Ljava/lang/Integer;
+#getMin()Ljava/lang/Integer;
+#getValidationQuery()Ljava/lang/String;
+#getDefaultAutoCommit()Ljava/lang/Boolean;
@2.2.0.RELEASE
+#getIdle()Ljava/lang/Integer;

+###org/springframework/boot/system/JavaVersion
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/system/JavaVersion;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/system/JavaVersion;
+#toString()Ljava/lang/String;
+#getJavaVersion()Lorg/springframework/boot/system/JavaVersion;
+#isEqualOrNewerThan(Lorg/springframework/boot/system/JavaVersion;)Z
+#isOlderThan(Lorg/springframework/boot/system/JavaVersion;)Z

+###org/springframework/boot/jackson/JsonObjectDeserializer
@1.4.0.RELEASE
+#<init>()V
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###org/springframework/boot/context/properties/source/InvalidConfigurationPropertyNameException
@2.0.0.RELEASE
+#<init>(Ljava/lang/CharSequence;Ljava/util/List;)V
+#getInvalidCharacters()Ljava/util/List;
+#getName()Ljava/lang/CharSequence;
+#throwIfHasInvalidChars(Ljava/lang/CharSequence;Ljava/util/List;)V

+###org/springframework/boot/context/event/ApplicationStartingEvent
@1.5.0.RELEASE
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;)V
@2.4.0
*#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;)V[deprecated]
+#<init>(Lorg/springframework/boot/ConfigurableBootstrapContext;Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;)V
+#getBootstrapContext()Lorg/springframework/boot/ConfigurableBootstrapContext;
@2.6.0
-#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;)V[deprecated]

+###org/springframework/boot/context/annotation/DeterminableImports
@1.5.0.RELEASE
+#determineImports(Lorg/springframework/core/type/AnnotationMetadata;)Ljava/util/Set;

+###org/springframework/boot/web/servlet/context/AnnotationConfigServletWebServerApplicationContext
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V
+#<init>([Ljava/lang/Class;)V
+#<init>([Ljava/lang/String;)V
+#setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V
+#setScopeMetadataResolver(Lorg/springframework/context/annotation/ScopeMetadataResolver;)V
+#register([Ljava/lang/Class;)V
+#scan([Ljava/lang/String;)V

+###org/springframework/boot/web/servlet/server/ServletWebServerFactory
@2.0.0.RELEASE
+#getWebServer([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)Lorg/springframework/boot/web/server/WebServer;

+###org/springframework/boot/web/servlet/DynamicRegistrationBean
@2.0.0.RELEASE
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setAsyncSupported(Z)V
+#isAsyncSupported()Z
+#setInitParameters(Ljava/util/Map;)V
+#getInitParameters()Ljava/util/Map;
+#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/boot/web/server/MimeMappings
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/boot/web/server/MimeMappings;)V
+#<init>(Ljava/util/Map;)V
+#iterator()Ljava/util/Iterator;
+#getAll()Ljava/util/Collection;
+#add(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#remove(Ljava/lang/String;)Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#unmodifiableMappings(Lorg/springframework/boot/web/server/MimeMappings;)Lorg/springframework/boot/web/server/MimeMappings;
@3.0.0
+#lazyCopy(Lorg/springframework/boot/web/server/MimeMappings;)Lorg/springframework/boot/web/server/MimeMappings;

+###org/springframework/boot/web/server/WebServerFactoryCustomizer
@2.0.0.RELEASE
+#customize(Lorg/springframework/boot/web/server/WebServerFactory;)V

+###org/springframework/boot/web/reactive/server/ConfigurableReactiveWebServerFactory
@2.0.0.RELEASE

+###org/springframework/boot/origin/OriginLookup
@2.0.0.RELEASE
+#getOrigin(Ljava/lang/Object;)Lorg/springframework/boot/origin/Origin;
+#getOrigin(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/boot/origin/Origin;
@2.2.0.RELEASE
+#isImmutable()Z
@2.5.0
+#getPrefix()Ljava/lang/String;

+###org/springframework/boot/origin/PropertySourceOrigin
@2.0.0.RELEASE
+#<init>(Lorg/springframework/core/env/PropertySource;Ljava/lang/String;)V
+#getPropertySource()Lorg/springframework/core/env/PropertySource;
+#getPropertyName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#get(Lorg/springframework/core/env/PropertySource;Ljava/lang/String;)Lorg/springframework/boot/origin/Origin;

+###org/springframework/boot/origin/SystemEnvironmentOrigin
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getProperty()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/boot/origin/TextResourceOrigin$Location
@2.0.0.RELEASE
+#<init>(II)V
+#getLine()I
+#getColumn()I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/boot/origin/TextResourceOrigin
@2.0.0.RELEASE
+#<init>(Lorg/springframework/core/io/Resource;Lorg/springframework/boot/origin/TextResourceOrigin$Location;)V
+#getResource()Lorg/springframework/core/io/Resource;
+#getLocation()Lorg/springframework/boot/origin/TextResourceOrigin$Location;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@2.4.0
+#getParent()Lorg/springframework/boot/origin/Origin;

+###org/springframework/boot/convert/Delimiter
@2.0.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/boot/jdbc/metadata/DataSourcePoolMetadata
@2.0.0.RELEASE
+#getUsage()Ljava/lang/Float;
+#getActive()Ljava/lang/Integer;
+#getMax()Ljava/lang/Integer;
+#getMin()Ljava/lang/Integer;
+#getValidationQuery()Ljava/lang/String;
+#getDefaultAutoCommit()Ljava/lang/Boolean;
@2.2.0.RELEASE
+#getIdle()Ljava/lang/Integer;

+###org/springframework/boot/jdbc/DatabaseDriver
@1.4.0.RELEASE
+#values()[Lorg/springframework/boot/jdbc/DatabaseDriver;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DatabaseDriver;
+#getDriverClassName()Ljava/lang/String;
+#getXaDataSourceClassName()Ljava/lang/String;
+#getValidationQuery()Ljava/lang/String;
+#fromJdbcUrl(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DatabaseDriver;
+#fromProductName(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DatabaseDriver;
@1.5.0.RELEASE
+#getId()Ljava/lang/String;
@2.6.0
+#fromDataSource(Ljavax/sql/DataSource;)Lorg/springframework/boot/jdbc/DatabaseDriver;

+###org/springframework/boot/jta/narayana/NarayanaXADataSourceWrapper
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/jta/narayana/NarayanaRecoveryManagerBean;Lorg/springframework/boot/jta/narayana/NarayanaProperties;)V
+#wrapDataSource(Ljavax/sql/XADataSource;)Ljavax/sql/DataSource;
@2.1.0.RELEASE
-###org/springframework/boot/jta/narayana/NarayanaXADataSourceWrapper

+###org/springframework/boot/jta/narayana/NarayanaRecoveryManagerBean
@1.4.0.RELEASE
+#<init>(Lcom/arjuna/ats/jbossatx/jta/RecoveryManagerService;)V
+#afterPropertiesSet()V
+#destroy()V
@2.1.0.RELEASE
-###org/springframework/boot/jta/narayana/NarayanaRecoveryManagerBean

+###org/springframework/boot/jta/narayana/NarayanaProperties
@1.4.0.RELEASE
+#<init>()V
+#getLogDir()Ljava/lang/String;
+#setLogDir(Ljava/lang/String;)V
+#getTransactionManagerId()Ljava/lang/String;
+#setTransactionManagerId(Ljava/lang/String;)V
+#isOnePhaseCommit()Z
+#setOnePhaseCommit(Z)V
+#getDefaultTimeout()I
+#getPeriodicRecoveryPeriod()I
+#setPeriodicRecoveryPeriod(I)V
+#getRecoveryBackoffPeriod()I
+#setRecoveryBackoffPeriod(I)V
+#setDefaultTimeout(I)V
+#getXaResourceOrphanFilters()Ljava/util/List;
+#setXaResourceOrphanFilters(Ljava/util/List;)V
+#getRecoveryModules()Ljava/util/List;
+#setRecoveryModules(Ljava/util/List;)V
+#getExpiryScanners()Ljava/util/List;
+#setExpiryScanners(Ljava/util/List;)V
+#getRecoveryDbUser()Ljava/lang/String;
+#setRecoveryDbUser(Ljava/lang/String;)V
+#getRecoveryDbPass()Ljava/lang/String;
+#setRecoveryDbPass(Ljava/lang/String;)V
+#getRecoveryJmsUser()Ljava/lang/String;
+#setRecoveryJmsUser(Ljava/lang/String;)V
+#getRecoveryJmsPass()Ljava/lang/String;
+#setRecoveryJmsPass(Ljava/lang/String;)V
@2.0.0.RELEASE
+#getDefaultTimeout()Ljava/time/Duration;
+#setDefaultTimeout(Ljava/time/Duration;)V
+#getPeriodicRecoveryPeriod()Ljava/time/Duration;
+#setPeriodicRecoveryPeriod(Ljava/time/Duration;)V
+#getRecoveryBackoffPeriod()Ljava/time/Duration;
+#setRecoveryBackoffPeriod(Ljava/time/Duration;)V
-#getDefaultTimeout()I
-#getPeriodicRecoveryPeriod()I
-#setPeriodicRecoveryPeriod(I)V
-#getRecoveryBackoffPeriod()I
-#setRecoveryBackoffPeriod(I)V
-#setDefaultTimeout(I)V
@2.1.0.RELEASE
-###org/springframework/boot/jta/narayana/NarayanaProperties

+###org/springframework/boot/context/properties/source/ConfigurationPropertySources
@2.0.0.RELEASE
+#isAttachedConfigurationPropertySource(Lorg/springframework/core/env/PropertySource;)Z
+#attach(Lorg/springframework/core/env/Environment;)V
+#get(Lorg/springframework/core/env/Environment;)Ljava/lang/Iterable;
+#from(Lorg/springframework/core/env/PropertySource;)Ljava/lang/Iterable;
+#from(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@2.5.0
+#createPropertyResolver(Lorg/springframework/core/env/MutablePropertySources;)Lorg/springframework/core/env/ConfigurablePropertyResolver;

+###org/springframework/boot/context/properties/bind/BindHandler
@2.0.0.RELEASE
+#onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Z
+#onSuccess(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)Ljava/lang/Object;
+#onFailure(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Exception;)Ljava/lang/Object;
+#onFinish(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)V
@2.1.0.RELEASE
+#onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Lorg/springframework/boot/context/properties/bind/Bindable;
-#onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Z
@2.2.0.RELEASE
+#onCreate(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/boot/context/properties/bind/validation/ValidationBindHandler
@2.0.0.RELEASE
+#<init>([Lorg/springframework/validation/Validator;)V
+#<init>(Lorg/springframework/boot/context/properties/bind/BindHandler;[Lorg/springframework/validation/Validator;)V
+#onSuccess(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)Ljava/lang/Object;
+#onFinish(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)V
@2.1.2.RELEASE
+#onFailure(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Exception;)Ljava/lang/Object;
@2.2.0.RELEASE
+#onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Lorg/springframework/boot/context/properties/bind/Bindable;

+###org/springframework/boot/context/properties/bind/IndexedElementsBinder$IndexedCollectionSupplier
@2.0.0.RELEASE
+#<init>(Ljava/util/function/Supplier;)V

+###org/springframework/boot/context/ApplicationPidFileWriter
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/io/File;)V
+#setTriggerEventType(Ljava/lang/Class;)V
+#onApplicationEvent(Lorg/springframework/boot/context/event/SpringApplicationEvent;)V
+#setOrder(I)V
+#getOrder()I
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/boot/logging/LoggerConfiguration
@1.5.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;Lorg/springframework/boot/logging/LogLevel;)V
+#getConfiguredLevel()Lorg/springframework/boot/logging/LogLevel;
+#getEffectiveLevel()Lorg/springframework/boot/logging/LogLevel;
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/boot/SpringApplicationExtensionsKt
@2.0.0.RELEASE
@2.2.0.RELEASE
+#runApplication([Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;
+#runApplication([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/springframework/context/ConfigurableApplicationContext;

+###org/springframework/boot/web/server/Http2
@2.0.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory
@2.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#getWebServer(Lorg/springframework/http/server/reactive/HttpHandler;)Lorg/springframework/boot/web/server/WebServer;
+#getServerCustomizers()Ljava/util/Collection;
+#setServerCustomizers(Ljava/util/Collection;)V
+#addServerCustomizers([Lorg/springframework/boot/web/embedded/netty/NettyServerCustomizer;)V
+#setLifecycleTimeout(Ljava/time/Duration;)V
@2.1.0.RELEASE
+#setUseForwardHeaders(Z)V
+#setResourceFactory(Lorg/springframework/http/client/reactive/ReactorResourceFactory;)V
@2.2.0.RELEASE
+#addRouteProviders([Lorg/springframework/boot/web/embedded/netty/NettyRouteProvider;)V
@2.3.0.RELEASE
+#setShutdown(Lorg/springframework/boot/web/server/Shutdown;)V
+#getShutdown()Lorg/springframework/boot/web/server/Shutdown;

+###org/springframework/boot/convert/DurationUnit
@2.0.0.RELEASE
+#value()Ljava/time/temporal/ChronoUnit;

+###org/springframework/boot/diagnostics/analyzer/AbstractInjectionFailureAnalyzer
@1.4.1.RELEASE
+#<init>()V

+###org/springframework/boot/jdbc/metadata/DataSourcePoolMetadataProvider
@2.0.0.RELEASE
+#getDataSourcePoolMetadata(Ljavax/sql/DataSource;)Lorg/springframework/boot/jdbc/metadata/DataSourcePoolMetadata;

+###org/springframework/boot/jdbc/metadata/CompositeDataSourcePoolMetadataProvider
@2.0.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#getDataSourcePoolMetadata(Ljavax/sql/DataSource;)Lorg/springframework/boot/jdbc/metadata/DataSourcePoolMetadata;

+###org/springframework/boot/info/GitProperties
@1.4.0.RELEASE
+#<init>(Ljava/util/Properties;)V
+#getBranch()Ljava/lang/String;
+#getCommitId()Ljava/lang/String;
+#getShortCommitId()Ljava/lang/String;
+#getCommitTime()Ljava/util/Date;
@2.0.0.RELEASE
+#getCommitTime()Ljava/time/Instant;
-#getCommitTime()Ljava/util/Date;

+###org/springframework/boot/context/properties/source/ConfigurationPropertyName
@2.0.0.RELEASE
+#isEmpty()Z
+#isLastElementIndexed()Z
+#isNumericIndex(I)Z
+#getLastElement(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Form;)Ljava/lang/String;
+#getElement(ILorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Form;)Ljava/lang/String;
+#getNumberOfElements()I
+#append(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
+#chop(I)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
+#isParentOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z
+#isAncestorOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z
+#compareTo(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)I
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#isValid(Ljava/lang/CharSequence;)Z
+#of(Ljava/lang/CharSequence;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
+#compareTo(Ljava/lang/Object;)I
@2.2.10.RELEASE
+#hasIndexedElement()Z
@2.3.0.RELEASE
+#getParent()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
+#adapt(Ljava/lang/CharSequence;C)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
-#hasIndexedElement()Z
@2.3.1.RELEASE
+#ofIfValid(Ljava/lang/CharSequence;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
@2.3.4.RELEASE
+#hasIndexedElement()Z
@2.5.0
+#append(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
+#subName(I)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;

+###org/springframework/boot/web/servlet/server/Session$SessionTrackingMode
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/web/servlet/server/Session$SessionTrackingMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/web/servlet/server/Session$SessionTrackingMode;

+###org/springframework/boot/web/servlet/filter/OrderedCharacterEncodingFilter
@2.0.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V

+###org/springframework/boot/web/servlet/filter/OrderedHttpPutFormContentFilter
@2.0.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
@2.1.0.RELEASE
-###org/springframework/boot/web/servlet/filter/OrderedHttpPutFormContentFilter

+###org/springframework/boot/web/servlet/support/ErrorPageFilter
@2.0.0.RELEASE
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#addErrorPages([Lorg/springframework/boot/web/server/ErrorPage;)V
+#destroy()V
@2.2.10.RELEASE
+#getOrder()I
@2.3.0.RELEASE
-#getOrder()I
@2.3.4.RELEASE
+#getOrder()I
@3.0.0
+#init(Ljakarta/servlet/FilterConfig;)V
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#init(Ljavax/servlet/FilterConfig;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/boot/web/servlet/support/SpringBootServletInitializer
@2.0.0.RELEASE
+#<init>()V
+#onStartup(Ljavax/servlet/ServletContext;)V
@3.0.0
+#onStartup(Ljakarta/servlet/ServletContext;)V
-#onStartup(Ljavax/servlet/ServletContext;)V

+###org/springframework/boot/web/servlet/MultipartConfigFactory
@1.4.0.RELEASE
+#<init>()V
+#setLocation(Ljava/lang/String;)V
+#setMaxFileSize(J)V
+#setMaxFileSize(Ljava/lang/String;)V
+#setMaxRequestSize(J)V
+#setMaxRequestSize(Ljava/lang/String;)V
+#setFileSizeThreshold(I)V
+#setFileSizeThreshold(Ljava/lang/String;)V
+#createMultipartConfig()Ljavax/servlet/MultipartConfigElement;
@2.1.0.RELEASE
+#setMaxFileSize(Lorg/springframework/util/unit/DataSize;)V
*#setMaxFileSize(J)V[deprecated]
*#setMaxFileSize(Ljava/lang/String;)V[deprecated]
+#setMaxRequestSize(Lorg/springframework/util/unit/DataSize;)V
*#setMaxRequestSize(J)V[deprecated]
*#setMaxRequestSize(Ljava/lang/String;)V[deprecated]
+#setFileSizeThreshold(Lorg/springframework/util/unit/DataSize;)V
*#setFileSizeThreshold(I)V[deprecated]
*#setFileSizeThreshold(Ljava/lang/String;)V[deprecated]
@2.2.0.RELEASE
-#setMaxFileSize(J)V[deprecated]
-#setMaxFileSize(Ljava/lang/String;)V[deprecated]
-#setMaxRequestSize(J)V[deprecated]
-#setMaxRequestSize(Ljava/lang/String;)V[deprecated]
-#setFileSizeThreshold(I)V[deprecated]
-#setFileSizeThreshold(Ljava/lang/String;)V[deprecated]
@3.0.0
+#createMultipartConfig()Ljakarta/servlet/MultipartConfigElement;
-#createMultipartConfig()Ljavax/servlet/MultipartConfigElement;

+###org/springframework/boot/web/servlet/DispatcherType
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/web/servlet/DispatcherType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/web/servlet/DispatcherType;

+###org/springframework/boot/web/context/WebServerPortFileWriter
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/io/File;)V
+#onApplicationEvent(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/boot/web/server/MimeMappings$Mapping
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getExtension()Ljava/lang/String;
+#getMimeType()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory
@2.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#setBuilderCustomizers(Ljava/util/Collection;)V
+#getBuilderCustomizers()Ljava/util/Collection;
+#addBuilderCustomizers([Lorg/springframework/boot/web/embedded/undertow/UndertowBuilderCustomizer;)V
+#setDeploymentInfoCustomizers(Ljava/util/Collection;)V
+#getDeploymentInfoCustomizers()Ljava/util/Collection;
+#addDeploymentInfoCustomizers([Lorg/springframework/boot/web/embedded/undertow/UndertowDeploymentInfoCustomizer;)V
+#getWebServer([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)Lorg/springframework/boot/web/server/WebServer;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setBufferSize(Ljava/lang/Integer;)V
+#setIoThreads(Ljava/lang/Integer;)V
+#setWorkerThreads(Ljava/lang/Integer;)V
+#setUseDirectBuffers(Ljava/lang/Boolean;)V
+#setAccessLogDirectory(Ljava/io/File;)V
+#setAccessLogPattern(Ljava/lang/String;)V
+#getAccessLogPrefix()Ljava/lang/String;
+#setAccessLogPrefix(Ljava/lang/String;)V
+#setAccessLogSuffix(Ljava/lang/String;)V
+#setAccessLogEnabled(Z)V
+#isAccessLogEnabled()Z
+#setAccessLogRotate(Z)V
+#setUseForwardHeaders(Z)V
+#isEagerInitFilters()Z
+#setEagerInitFilters(Z)V
@2.4.0
*#isEagerInitFilters()Z[deprecated]
*#setEagerInitFilters(Z)V[deprecated]
+#isEagerFilterInit()Z
+#setEagerFilterInit(Z)V
+#isPreservePathOnForward()Z
+#setPreservePathOnForward(Z)V
@2.6.0
-#isEagerInitFilters()Z[deprecated]
-#setEagerInitFilters(Z)V[deprecated]

+###org/springframework/boot/web/embedded/tomcat/ConnectorStartFailedException
@2.0.0.RELEASE
+#<init>(I)V
+#getPort()I

+###org/springframework/boot/origin/OriginTrackedValue
@2.0.0.RELEASE
+#getValue()Ljava/lang/Object;
+#getOrigin()Lorg/springframework/boot/origin/Origin;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#of(Ljava/lang/Object;)Lorg/springframework/boot/origin/OriginTrackedValue;
+#of(Ljava/lang/Object;Lorg/springframework/boot/origin/Origin;)Lorg/springframework/boot/origin/OriginTrackedValue;

+###org/springframework/boot/WebApplicationType
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/WebApplicationType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/WebApplicationType;

+###org/springframework/boot/convert/ApplicationConversionService
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/util/StringValueResolver;)V
+#getSharedInstance()Lorg/springframework/core/convert/ConversionService;
+#configure(Lorg/springframework/format/FormatterRegistry;)V
+#addApplicationConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V
+#addDelimitedStringConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V
+#addApplicationFormatters(Lorg/springframework/format/FormatterRegistry;)V
@2.2.0.RELEASE
+#addBeans(Lorg/springframework/format/FormatterRegistry;Lorg/springframework/beans/factory/ListableBeanFactory;)V
@2.4.3
+#isConvertViaObjectSourceType(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
@2.5.0
+#addPrinter(Lorg/springframework/format/Printer;)V
+#addParser(Lorg/springframework/format/Parser;)V
+#addFormatter(Lorg/springframework/format/Formatter;)V
+#addFormatterForFieldType(Ljava/lang/Class;Lorg/springframework/format/Formatter;)V
+#addConverter(Lorg/springframework/core/convert/converter/Converter;)V
+#addFormatterForFieldType(Ljava/lang/Class;Lorg/springframework/format/Printer;Lorg/springframework/format/Parser;)V
+#addFormatterForFieldAnnotation(Lorg/springframework/format/AnnotationFormatterFactory;)V
+#addConverter(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/core/convert/converter/Converter;)V
+#addConverter(Lorg/springframework/core/convert/converter/GenericConverter;)V
+#addConverterFactory(Lorg/springframework/core/convert/converter/ConverterFactory;)V
+#removeConvertible(Ljava/lang/Class;Ljava/lang/Class;)V

+###org/springframework/boot/info/InfoProperties$Entry
@1.4.0.RELEASE
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;

+###org/springframework/boot/context/properties/bind/validation/ValidationErrors
@2.0.0.RELEASE
+#getName()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
+#getBoundProperties()Ljava/util/Set;
+#hasErrors()Z
+#getAllErrors()Ljava/util/List;
+#iterator()Ljava/util/Iterator;

+###org/springframework/boot/web/servlet/server/Session
@2.0.0.RELEASE
+#<init>()V
+#getCookie()Lorg/springframework/boot/web/servlet/server/Session$Cookie;
+#getTimeout()Ljava/time/Duration;
+#setTimeout(Ljava/time/Duration;)V
+#getTrackingModes()Ljava/util/Set;
+#setTrackingModes(Ljava/util/Set;)V
+#isPersistent()Z
+#setPersistent(Z)V
+#getStoreDir()Ljava/io/File;
+#setStoreDir(Ljava/io/File;)V

+###org/springframework/boot/web/servlet/support/ServletContextApplicationContextInitializer
@2.0.0.RELEASE
+#<init>(Ljavax/servlet/ServletContext;)V
+#<init>(Ljavax/servlet/ServletContext;Z)V
+#setOrder(I)V
+#getOrder()I
+#initialize(Lorg/springframework/web/context/ConfigurableWebApplicationContext;)V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@3.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
+#<init>(Ljakarta/servlet/ServletContext;Z)V
-#<init>(Ljavax/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;Z)V

+###org/springframework/boot/web/servlet/AbstractFilterRegistrationBean
@1.5.22.RELEASE
+#setServletRegistrationBeans(Ljava/util/Collection;)V
+#getServletRegistrationBeans()Ljava/util/Collection;
+#addServletRegistrationBeans([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
+#setServletNames(Ljava/util/Collection;)V
+#getServletNames()Ljava/util/Collection;
+#addServletNames([Ljava/lang/String;)V
+#setUrlPatterns(Ljava/util/Collection;)V
+#getUrlPatterns()Ljava/util/Collection;
+#addUrlPatterns([Ljava/lang/String;)V
+#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
+#setDispatcherTypes(Ljava/util/EnumSet;)V
+#setMatchAfter(Z)V
+#isMatchAfter()Z
+#onStartup(Ljavax/servlet/ServletContext;)V
+#getFilter()Ljavax/servlet/Filter;
@2.0.0.RELEASE
-###org/springframework/boot/web/servlet/AbstractFilterRegistrationBean

+###org/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;[Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getFilter()Ljavax/servlet/Filter;
+#onStartup(Ljavax/servlet/ServletContext;)V
+#isMatchAfter()Z
+#setMatchAfter(Z)V
+#setDispatcherTypes(Ljava/util/EnumSet;)V
+#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
+#addUrlPatterns([Ljava/lang/String;)V
+#getUrlPatterns()Ljava/util/Collection;
+#setUrlPatterns(Ljava/util/Collection;)V
+#addServletNames([Ljava/lang/String;)V
+#getServletNames()Ljava/util/Collection;
+#setServletNames(Ljava/util/Collection;)V
+#addServletRegistrationBeans([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
+#getServletRegistrationBeans()Ljava/util/Collection;
+#setServletRegistrationBeans(Ljava/util/Collection;)V
@1.5.22.RELEASE
-#onStartup(Ljavax/servlet/ServletContext;)V
-#isMatchAfter()Z
-#setMatchAfter(Z)V
-#setDispatcherTypes(Ljava/util/EnumSet;)V
-#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
-#addUrlPatterns([Ljava/lang/String;)V
-#getUrlPatterns()Ljava/util/Collection;
-#setUrlPatterns(Ljava/util/Collection;)V
-#addServletNames([Ljava/lang/String;)V
-#getServletNames()Ljava/util/Collection;
-#setServletNames(Ljava/util/Collection;)V
-#addServletRegistrationBeans([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
-#getServletRegistrationBeans()Ljava/util/Collection;
-#setServletRegistrationBeans(Ljava/util/Collection;)V
@2.0.0.RELEASE
+#getFilter()Lorg/springframework/web/filter/DelegatingFilterProxy;
+#isMatchAfter()Z
+#setMatchAfter(Z)V
+#setDispatcherTypes(Ljava/util/EnumSet;)V
+#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
+#addUrlPatterns([Ljava/lang/String;)V
+#getUrlPatterns()Ljava/util/Collection;
+#setUrlPatterns(Ljava/util/Collection;)V
+#addServletNames([Ljava/lang/String;)V
+#getServletNames()Ljava/util/Collection;
+#setServletNames(Ljava/util/Collection;)V
+#addServletRegistrationBeans([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
+#getServletRegistrationBeans()Ljava/util/Collection;
+#setServletRegistrationBeans(Ljava/util/Collection;)V
@2.0.1.RELEASE
-#isMatchAfter()Z
-#setMatchAfter(Z)V
-#setDispatcherTypes(Ljava/util/EnumSet;)V
-#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
-#addUrlPatterns([Ljava/lang/String;)V
-#getUrlPatterns()Ljava/util/Collection;
-#setUrlPatterns(Ljava/util/Collection;)V
-#addServletNames([Ljava/lang/String;)V
-#getServletNames()Ljava/util/Collection;
-#setServletNames(Ljava/util/Collection;)V
-#addServletRegistrationBeans([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
-#getServletRegistrationBeans()Ljava/util/Collection;
-#setServletRegistrationBeans(Ljava/util/Collection;)V
@3.0.0
+#getFilter()Ljakarta/servlet/Filter;
-#getFilter()Ljavax/servlet/Filter;

+###org/springframework/boot/web/context/ConfigurableWebServerApplicationContext
@2.0.0.RELEASE
+#setServerNamespace(Ljava/lang/String;)V

+###org/springframework/boot/web/server/Ssl$ClientAuth
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/web/server/Ssl$ClientAuth;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/web/server/Ssl$ClientAuth;

+###org/springframework/boot/web/server/Ssl
@2.0.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getClientAuth()Lorg/springframework/boot/web/server/Ssl$ClientAuth;
+#setClientAuth(Lorg/springframework/boot/web/server/Ssl$ClientAuth;)V
+#getCiphers()[Ljava/lang/String;
+#setCiphers([Ljava/lang/String;)V
+#getKeyAlias()Ljava/lang/String;
+#setKeyAlias(Ljava/lang/String;)V
+#getKeyPassword()Ljava/lang/String;
+#setKeyPassword(Ljava/lang/String;)V
+#getKeyStore()Ljava/lang/String;
+#setKeyStore(Ljava/lang/String;)V
+#getKeyStorePassword()Ljava/lang/String;
+#setKeyStorePassword(Ljava/lang/String;)V
+#getKeyStoreType()Ljava/lang/String;
+#setKeyStoreType(Ljava/lang/String;)V
+#getKeyStoreProvider()Ljava/lang/String;
+#setKeyStoreProvider(Ljava/lang/String;)V
+#getEnabledProtocols()[Ljava/lang/String;
+#setEnabledProtocols([Ljava/lang/String;)V
+#getTrustStore()Ljava/lang/String;
+#setTrustStore(Ljava/lang/String;)V
+#getTrustStorePassword()Ljava/lang/String;
+#setTrustStorePassword(Ljava/lang/String;)V
+#getTrustStoreType()Ljava/lang/String;
+#setTrustStoreType(Ljava/lang/String;)V
+#getTrustStoreProvider()Ljava/lang/String;
+#setTrustStoreProvider(Ljava/lang/String;)V
+#getProtocol()Ljava/lang/String;
+#setProtocol(Ljava/lang/String;)V
@2.7.0
+#getCertificate()Ljava/lang/String;
+#setCertificate(Ljava/lang/String;)V
+#getCertificatePrivateKey()Ljava/lang/String;
+#setCertificatePrivateKey(Ljava/lang/String;)V
+#getTrustCertificate()Ljava/lang/String;
+#setTrustCertificate(Ljava/lang/String;)V
+#getTrustCertificatePrivateKey()Ljava/lang/String;
+#setTrustCertificatePrivateKey(Ljava/lang/String;)V

+###org/springframework/boot/web/reactive/context/ConfigurableReactiveWebApplicationContext
@2.0.0.RELEASE

+###org/springframework/boot/orm/jpa/hibernate/SpringImplicitNamingStrategy
@1.4.0.RELEASE
+#<init>()V
+#determineJoinTableName(Lorg/hibernate/boot/model/naming/ImplicitJoinTableNameSource;)Lorg/hibernate/boot/model/naming/Identifier;

+###org/springframework/boot/orm/jpa/hibernate/SpringPhysicalNamingStrategy
@1.4.0.RELEASE
+#<init>()V
+#toPhysicalCatalogName(Lorg/hibernate/boot/model/naming/Identifier;Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
+#toPhysicalSchemaName(Lorg/hibernate/boot/model/naming/Identifier;Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
+#toPhysicalTableName(Lorg/hibernate/boot/model/naming/Identifier;Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
+#toPhysicalSequenceName(Lorg/hibernate/boot/model/naming/Identifier;Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
+#toPhysicalColumnName(Lorg/hibernate/boot/model/naming/Identifier;Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;)Lorg/hibernate/boot/model/naming/Identifier;
@3.0.0
-###org/springframework/boot/orm/jpa/hibernate/SpringPhysicalNamingStrategy

+###org/springframework/boot/diagnostics/FailureAnalyzer
@1.4.0.RELEASE
+#analyze(Ljava/lang/Throwable;)Lorg/springframework/boot/diagnostics/FailureAnalysis;

+###org/springframework/boot/diagnostics/FailureAnalysis
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getDescription()Ljava/lang/String;
+#getAction()Ljava/lang/String;
+#getCause()Ljava/lang/Throwable;

+###org/springframework/boot/jdbc/DataSourceUnwrapper
@2.0.7.RELEASE
+#unwrap(Ljavax/sql/DataSource;Ljava/lang/Class;)Ljava/lang/Object;
@2.1.0.RELEASE
-###org/springframework/boot/jdbc/DataSourceUnwrapper

+###org/springframework/boot/type/classreading/ConcurrentReferenceCachingMetadataReaderFactory
@1.4.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
+#<init>(Ljava/lang/ClassLoader;)V
+#getMetadataReader(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/type/classreading/MetadataReader;
+#clearCache()V

+###org/springframework/boot/validation/MessageInterpolatorFactory
@1.5.0.RELEASE
+#<init>()V
+#getObject()Ljavax/validation/MessageInterpolator;
+#getObject()Ljava/lang/Object;
@2.6.0
+#<init>(Lorg/springframework/context/MessageSource;)V
@3.0.0
+#getObject()Ljakarta/validation/MessageInterpolator;
-#getObject()Ljavax/validation/MessageInterpolator;

+###org/springframework/boot/context/properties/bind/Binder
@2.0.0.RELEASE
+#<init>([Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;)V
+#<init>(Ljava/lang/Iterable;)V
+#<init>(Ljava/lang/Iterable;Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;)V
+#<init>(Ljava/lang/Iterable;Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;Lorg/springframework/core/convert/ConversionService;)V
+#<init>(Ljava/lang/Iterable;Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;Lorg/springframework/core/convert/ConversionService;Ljava/util/function/Consumer;)V
+#bind(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/BindResult;
+#bind(Ljava/lang/String;Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/BindResult;
+#bind(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/BindResult;
+#bind(Ljava/lang/String;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;)Lorg/springframework/boot/context/properties/bind/BindResult;
+#bind(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;)Lorg/springframework/boot/context/properties/bind/BindResult;
+#get(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/context/properties/bind/Binder;
@2.2.0.RELEASE
+#<init>(Ljava/lang/Iterable;Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;Lorg/springframework/core/convert/ConversionService;Ljava/util/function/Consumer;Lorg/springframework/boot/context/properties/bind/BindHandler;)V
+#bindOrCreate(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#bindOrCreate(Ljava/lang/String;Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/lang/Object;
+#bindOrCreate(Ljava/lang/String;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;)Ljava/lang/Object;
+#bindOrCreate(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;)Ljava/lang/Object;
+#get(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/context/properties/bind/BindHandler;)Lorg/springframework/boot/context/properties/bind/Binder;
@2.2.1.RELEASE
+#<init>(Ljava/lang/Iterable;Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;Lorg/springframework/core/convert/ConversionService;Ljava/util/function/Consumer;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/BindConstructorProvider;)V
@2.5.0
+#<init>(Ljava/lang/Iterable;Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;Ljava/util/List;Ljava/util/function/Consumer;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/BindConstructorProvider;)V

+###org/springframework/boot/context/logging/ClasspathLoggingApplicationListener
@2.0.0.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#getOrder()I
+#supportsEventType(Lorg/springframework/core/ResolvableType;)Z
+#supportsSourceType(Ljava/lang/Class;)Z
@2.1.0.RELEASE
-#supportsSourceType(Ljava/lang/Class;)Z
@2.6.0
-###org/springframework/boot/context/logging/ClasspathLoggingApplicationListener

+###org/springframework/boot/context/logging/LoggingApplicationListener
@2.0.0.RELEASE
+#<init>()V
+#supportsEventType(Lorg/springframework/core/ResolvableType;)Z
+#supportsSourceType(Ljava/lang/Class;)Z
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#setOrder(I)V
+#getOrder()I
+#setSpringBootLogging(Lorg/springframework/boot/logging/LogLevel;)V
+#setParseArgs(Z)V

+###org/springframework/boot/web/servlet/context/WebApplicationContextServletContextAwareProcessor
@2.0.0.RELEASE
+#<init>(Lorg/springframework/web/context/ConfigurableWebApplicationContext;)V

+###org/springframework/boot/web/servlet/context/ServletWebServerInitializedEvent
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/web/server/WebServer;Lorg/springframework/boot/web/servlet/context/ServletWebServerApplicationContext;)V
+#getApplicationContext()Lorg/springframework/boot/web/servlet/context/ServletWebServerApplicationContext;
+#getApplicationContext()Lorg/springframework/boot/web/context/WebServerApplicationContext;

+###org/springframework/boot/web/servlet/filter/OrderedRequestContextFilter
@2.0.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V

+###org/springframework/boot/web/servlet/filter/OrderedHiddenHttpMethodFilter
@2.0.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V

+###org/springframework/boot/web/servlet/FilterRegistrationBean
@1.4.0.RELEASE
+#<init>()V
+#<init>(Ljavax/servlet/Filter;[Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
+#getFilter()Ljavax/servlet/Filter;
+#setFilter(Ljavax/servlet/Filter;)V
+#onStartup(Ljavax/servlet/ServletContext;)V
+#isMatchAfter()Z
+#setMatchAfter(Z)V
+#setDispatcherTypes(Ljava/util/EnumSet;)V
+#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
+#addUrlPatterns([Ljava/lang/String;)V
+#getUrlPatterns()Ljava/util/Collection;
+#setUrlPatterns(Ljava/util/Collection;)V
+#addServletNames([Ljava/lang/String;)V
+#getServletNames()Ljava/util/Collection;
+#setServletNames(Ljava/util/Collection;)V
+#addServletRegistrationBeans([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
+#getServletRegistrationBeans()Ljava/util/Collection;
+#setServletRegistrationBeans(Ljava/util/Collection;)V
@1.5.22.RELEASE
-#onStartup(Ljavax/servlet/ServletContext;)V
-#isMatchAfter()Z
-#setMatchAfter(Z)V
-#setDispatcherTypes(Ljava/util/EnumSet;)V
-#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
-#addUrlPatterns([Ljava/lang/String;)V
-#getUrlPatterns()Ljava/util/Collection;
-#setUrlPatterns(Ljava/util/Collection;)V
-#addServletNames([Ljava/lang/String;)V
-#getServletNames()Ljava/util/Collection;
-#setServletNames(Ljava/util/Collection;)V
-#addServletRegistrationBeans([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
-#getServletRegistrationBeans()Ljava/util/Collection;
-#setServletRegistrationBeans(Ljava/util/Collection;)V
@2.0.0.RELEASE
+#isMatchAfter()Z
+#setMatchAfter(Z)V
+#setDispatcherTypes(Ljava/util/EnumSet;)V
+#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
+#addUrlPatterns([Ljava/lang/String;)V
+#getUrlPatterns()Ljava/util/Collection;
+#setUrlPatterns(Ljava/util/Collection;)V
+#addServletNames([Ljava/lang/String;)V
+#getServletNames()Ljava/util/Collection;
+#setServletNames(Ljava/util/Collection;)V
+#addServletRegistrationBeans([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
+#getServletRegistrationBeans()Ljava/util/Collection;
+#setServletRegistrationBeans(Ljava/util/Collection;)V
@2.0.1.RELEASE
-#isMatchAfter()Z
-#setMatchAfter(Z)V
-#setDispatcherTypes(Ljava/util/EnumSet;)V
-#setDispatcherTypes(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
-#addUrlPatterns([Ljava/lang/String;)V
-#getUrlPatterns()Ljava/util/Collection;
-#setUrlPatterns(Ljava/util/Collection;)V
-#addServletNames([Ljava/lang/String;)V
-#getServletNames()Ljava/util/Collection;
-#setServletNames(Ljava/util/Collection;)V
-#addServletRegistrationBeans([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
-#getServletRegistrationBeans()Ljava/util/Collection;
-#setServletRegistrationBeans(Ljava/util/Collection;)V
@3.0.0
+#<init>(Ljakarta/servlet/Filter;[Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
+#getFilter()Ljakarta/servlet/Filter;
+#setFilter(Ljakarta/servlet/Filter;)V
-#<init>(Ljavax/servlet/Filter;[Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
-#getFilter()Ljavax/servlet/Filter;
-#setFilter(Ljavax/servlet/Filter;)V

+###org/springframework/boot/web/server/WebServerFactory
@2.0.0.RELEASE

+###org/springframework/boot/web/embedded/jetty/ServletContextInitializerConfiguration
@2.0.0.RELEASE
+#<init>([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)V
+#configure(Lorg/eclipse/jetty/webapp/WebAppContext;)V

+###org/springframework/boot/web/embedded/jetty/JettyWebServer
@2.0.0.RELEASE
+#<init>(Lorg/eclipse/jetty/server/Server;)V
+#<init>(Lorg/eclipse/jetty/server/Server;Z)V
+#start()V
+#stop()V
+#getPort()I
+#getServer()Lorg/eclipse/jetty/server/Server;
@2.3.0.RELEASE
+#shutDownGracefully(Lorg/springframework/boot/web/server/GracefulShutdownCallback;)V

+###org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory
@2.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#getWebServer([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)Lorg/springframework/boot/web/server/WebServer;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setUseForwardHeaders(Z)V
+#setAcceptors(I)V
+#setSelectors(I)V
+#setServerCustomizers(Ljava/util/Collection;)V
+#getServerCustomizers()Ljava/util/Collection;
+#addServerCustomizers([Lorg/springframework/boot/web/embedded/jetty/JettyServerCustomizer;)V
+#setConfigurations(Ljava/util/Collection;)V
+#getConfigurations()Ljava/util/Collection;
+#addConfigurations([Lorg/eclipse/jetty/webapp/Configuration;)V
+#getThreadPool()Lorg/eclipse/jetty/util/thread/ThreadPool;
+#setThreadPool(Lorg/eclipse/jetty/util/thread/ThreadPool;)V

+###org/springframework/boot/web/reactive/server/ReactiveWebServerFactory
@2.0.0.RELEASE
+#getWebServer(Lorg/springframework/http/server/reactive/HttpHandler;)Lorg/springframework/boot/web/server/WebServer;

+###org/springframework/boot/web/reactive/context/GenericReactiveWebApplicationContext
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V

+###org/springframework/boot/web/reactive/context/ReactiveWebApplicationContext
@2.0.0.RELEASE

+###org/springframework/boot/web/reactive/context/StandardReactiveWebEnvironment
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/web/reactive/error/DefaultErrorAttributes
@2.0.0.RELEASE
+#<init>()V
+#<init>(Z)V
+#getErrorAttributes(Lorg/springframework/web/reactive/function/server/ServerRequest;Z)Ljava/util/Map;
+#getError(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/lang/Throwable;
+#storeErrorInformation(Ljava/lang/Throwable;Lorg/springframework/web/server/ServerWebExchange;)V
@2.3.0.RELEASE
*#<init>(Z)V[deprecated]
+#getErrorAttributes(Lorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/boot/web/error/ErrorAttributeOptions;)Ljava/util/Map;
*#getErrorAttributes(Lorg/springframework/web/reactive/function/server/ServerRequest;Z)Ljava/util/Map;[deprecated]
@2.5.0
-#<init>(Z)V[deprecated]
-#getErrorAttributes(Lorg/springframework/web/reactive/function/server/ServerRequest;Z)Ljava/util/Map;[deprecated]

+###org/springframework/boot/web/reactive/filter/OrderedHiddenHttpMethodFilter
@2.0.5.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V

+###org/springframework/boot/diagnostics/AbstractFailureAnalyzer
@1.4.0.RELEASE
+#<init>()V
+#analyze(Ljava/lang/Throwable;)Lorg/springframework/boot/diagnostics/FailureAnalysis;

+###org/springframework/boot/info/InfoProperties
@1.4.0.RELEASE
+#<init>(Ljava/util/Properties;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#getDate(Ljava/lang/String;)Ljava/util/Date;
+#iterator()Ljava/util/Iterator;
+#toPropertySource()Lorg/springframework/core/env/PropertySource;
@2.0.0.RELEASE
+#getInstant(Ljava/lang/String;)Ljava/time/Instant;
-#getDate(Ljava/lang/String;)Ljava/util/Date;

+###org/springframework/boot/context/properties/bind/BindContext
@2.0.0.RELEASE
+#getDepth()I
+#getSources()Ljava/lang/Iterable;
+#getConfigurationProperty()Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
@2.1.0.RELEASE
+#getBinder()Lorg/springframework/boot/context/properties/bind/Binder;

+###org/springframework/boot/context/annotation/Configurations
@2.0.0.RELEASE
+#getClasses([Lorg/springframework/boot/context/annotation/Configurations;)[Ljava/lang/Class;
+#getClasses(Ljava/util/Collection;)[Ljava/lang/Class;

+###org/springframework/boot/web/server/WebServerFactoryCustomizerBeanPostProcessor
@2.0.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/boot/web/embedded/jetty/JettyReactiveWebServerFactory
@2.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#setUseForwardHeaders(Z)V
+#setAcceptors(I)V
+#getWebServer(Lorg/springframework/http/server/reactive/HttpHandler;)Lorg/springframework/boot/web/server/WebServer;
+#addServerCustomizers([Lorg/springframework/boot/web/embedded/jetty/JettyServerCustomizer;)V
+#setServerCustomizers(Ljava/util/Collection;)V
+#getServerCustomizers()Ljava/util/Collection;
+#setSelectors(I)V
+#getThreadPool()Lorg/eclipse/jetty/util/thread/ThreadPool;
+#setThreadPool(Lorg/eclipse/jetty/util/thread/ThreadPool;)V
@2.1.0.RELEASE
+#setResourceFactory(Lorg/springframework/http/client/reactive/JettyResourceFactory;)V

+###org/springframework/boot/web/embedded/undertow/UndertowWebServer
@2.0.0.RELEASE
+#<init>(Lio/undertow/Undertow$Builder;Z)V
+#start()V
+#stop()V
+#getPort()I
@2.0.4.RELEASE
+#<init>(Lio/undertow/Undertow$Builder;ZLjava/io/Closeable;)V
@2.3.0.RELEASE
*#<init>(Lio/undertow/Undertow$Builder;ZLjava/io/Closeable;)V[deprecated]
+#<init>(Lio/undertow/Undertow$Builder;Ljava/lang/Iterable;Z)V
+#shutDownGracefully(Lorg/springframework/boot/web/server/GracefulShutdownCallback;)V
@2.5.0
-#<init>(Lio/undertow/Undertow$Builder;ZLjava/io/Closeable;)V[deprecated]

+###org/springframework/boot/jdbc/DataSourceInitializationMode
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
@3.0.0
-###org/springframework/boot/jdbc/DataSourceInitializationMode

+###org/springframework/boot/jta/atomikos/AtomikosProperties$Recovery
@2.0.0.RELEASE
+#<init>()V
+#getForgetOrphanedLogEntriesDelay()Ljava/time/Duration;
+#setForgetOrphanedLogEntriesDelay(Ljava/time/Duration;)V
+#getDelay()Ljava/time/Duration;
+#setDelay(Ljava/time/Duration;)V
+#getMaxRetries()I
+#setMaxRetries(I)V
+#getRetryInterval()Ljava/time/Duration;
+#setRetryInterval(Ljava/time/Duration;)V
@3.0.0
-###org/springframework/boot/jta/atomikos/AtomikosProperties$Recovery

+###org/springframework/boot/system/ApplicationTemp
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#toString()Ljava/lang/String;
+#getDir(Ljava/lang/String;)Ljava/io/File;
+#getDir()Ljava/io/File;

+###org/springframework/boot/context/properties/source/ConfigurationProperty
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Ljava/lang/Object;Lorg/springframework/boot/origin/Origin;)V
+#getName()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
+#getValue()Ljava/lang/Object;
+#getOrigin()Lorg/springframework/boot/origin/Origin;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/springframework/boot/context/properties/source/ConfigurationProperty;)I
+#compareTo(Ljava/lang/Object;)I
@2.6.0
+#getSource()Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;

+###org/springframework/boot/logging/AbstractLoggingSystem$LogLevels
@1.5.0.RELEASE
+#<init>()V
+#map(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
+#convertNativeToSystem(Ljava/lang/Object;)Lorg/springframework/boot/logging/LogLevel;
+#convertSystemToNative(Lorg/springframework/boot/logging/LogLevel;)Ljava/lang/Object;
+#getSupported()Ljava/util/Set;

+###org/springframework/boot/web/servlet/ServletContextInitializerBeans
@1.4.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
+#iterator()Ljava/util/Iterator;
+#size()I
@2.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;[Ljava/lang/Class;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V

+###org/springframework/boot/web/server/ErrorPageRegistrar
@2.0.0.RELEASE
+#registerErrorPages(Lorg/springframework/boot/web/server/ErrorPageRegistry;)V

+###org/springframework/boot/web/server/PortInUseException
@2.0.0.RELEASE
+#<init>(I)V
+#getPort()I
@2.1.14.RELEASE
+#<init>(ILjava/lang/Throwable;)V
@2.2.0.RELEASE
-#<init>(ILjava/lang/Throwable;)V
@2.2.7.RELEASE
+#<init>(ILjava/lang/Throwable;)V
+#throwIfPortBindingException(Ljava/lang/Exception;Ljava/util/function/IntSupplier;)V
+#ifPortBindingException(Ljava/lang/Exception;Ljava/util/function/Consumer;)V
+#ifCausedBy(Ljava/lang/Exception;Ljava/lang/Class;Ljava/util/function/Consumer;)V

+###org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedWebappClassLoader
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#findResource(Ljava/lang/String;)Ljava/net/URL;
+#findResources(Ljava/lang/String;)Ljava/util/Enumeration;
+#loadClass(Ljava/lang/String;Z)Ljava/lang/Class;

+###org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactory
@2.0.0.RELEASE
+#<init>()V
+#<init>(I)V

+###org/springframework/boot/jdbc/EmbeddedDatabaseConnection
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
+#getDriverClassName()Ljava/lang/String;
+#getType()Lorg/springframework/jdbc/datasource/embedded/EmbeddedDatabaseType;
+#getUrl(Ljava/lang/String;)Ljava/lang/String;
+#isEmbedded(Ljava/lang/String;)Z
+#isEmbedded(Ljavax/sql/DataSource;)Z
+#get(Ljava/lang/ClassLoader;)Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
@2.4.0
*#isEmbedded(Ljava/lang/String;)Z[deprecated]
+#isEmbedded(Ljava/lang/String;Ljava/lang/String;)Z
@2.6.0
-#isEmbedded(Ljava/lang/String;)Z[deprecated]

+###org/springframework/boot/jta/narayana/DataSourceXAResourceRecoveryHelper
@1.4.0.RELEASE
+#<init>(Ljavax/sql/XADataSource;)V
+#<init>(Ljavax/sql/XADataSource;Ljava/lang/String;Ljava/lang/String;)V
+#initialise(Ljava/lang/String;)Z
+#getXAResources()[Ljavax/transaction/xa/XAResource;
+#recover(I)[Ljavax/transaction/xa/Xid;
+#start(Ljavax/transaction/xa/Xid;I)V
+#end(Ljavax/transaction/xa/Xid;I)V
+#prepare(Ljavax/transaction/xa/Xid;)I
+#commit(Ljavax/transaction/xa/Xid;Z)V
+#rollback(Ljavax/transaction/xa/Xid;)V
+#isSameRM(Ljavax/transaction/xa/XAResource;)Z
+#forget(Ljavax/transaction/xa/Xid;)V
+#getTransactionTimeout()I
+#setTransactionTimeout(I)Z
@2.1.0.RELEASE
-###org/springframework/boot/jta/narayana/DataSourceXAResourceRecoveryHelper

+###org/springframework/boot/context/properties/source/ConfigurationPropertyState
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;

+###org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V
+#refresh()V
+#getServerNamespace()Ljava/lang/String;
+#setServerNamespace(Ljava/lang/String;)V
+#setServletConfig(Ljavax/servlet/ServletConfig;)V
+#getServletConfig()Ljavax/servlet/ServletConfig;
+#getWebServer()Lorg/springframework/boot/web/server/WebServer;
@3.0.0
+#setServletConfig(Ljakarta/servlet/ServletConfig;)V
+#getServletConfig()Ljakarta/servlet/ServletConfig;
-#setServletConfig(Ljavax/servlet/ServletConfig;)V
-#getServletConfig()Ljavax/servlet/ServletConfig;

+###org/springframework/boot/web/servlet/context/XmlServletWebServerApplicationContext
@2.0.0.RELEASE
+#<init>()V
+#<init>([Lorg/springframework/core/io/Resource;)V
+#<init>([Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;[Ljava/lang/String;)V
+#setValidating(Z)V
+#setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#load([Lorg/springframework/core/io/Resource;)V
+#load([Ljava/lang/String;)V
+#load(Ljava/lang/Class;[Ljava/lang/String;)V

+###org/springframework/boot/web/servlet/RegistrationBean
@1.4.0.RELEASE
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setAsyncSupported(Z)V
+#isAsyncSupported()Z
+#setEnabled(Z)V
+#isEnabled()Z
+#setInitParameters(Ljava/util/Map;)V
+#getInitParameters()Ljava/util/Map;
+#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V
+#setOrder(I)V
+#getOrder()I
@2.0.0.RELEASE
+#onStartup(Ljavax/servlet/ServletContext;)V
-#setName(Ljava/lang/String;)V
-#setAsyncSupported(Z)V
-#isAsyncSupported()Z
-#setInitParameters(Ljava/util/Map;)V
-#getInitParameters()Ljava/util/Map;
-#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V
@3.0.0
+#onStartup(Ljakarta/servlet/ServletContext;)V
-#onStartup(Ljavax/servlet/ServletContext;)V

+###org/springframework/boot/web/servlet/ServletRegistrationBean
@1.4.0.RELEASE
+#<init>()V
+#<init>(Ljavax/servlet/Servlet;[Ljava/lang/String;)V
+#<init>(Ljavax/servlet/Servlet;Z[Ljava/lang/String;)V
+#setServlet(Ljavax/servlet/Servlet;)V
+#setUrlMappings(Ljava/util/Collection;)V
+#getUrlMappings()Ljava/util/Collection;
+#addUrlMappings([Ljava/lang/String;)V
+#setLoadOnStartup(I)V
+#setMultipartConfig(Ljavax/servlet/MultipartConfigElement;)V
+#getMultipartConfig()Ljavax/servlet/MultipartConfigElement;
+#getServletName()Ljava/lang/String;
+#onStartup(Ljavax/servlet/ServletContext;)V
@2.0.0.RELEASE
-#onStartup(Ljavax/servlet/ServletContext;)V
@2.0.4.RELEASE
+#getServlet()Ljavax/servlet/Servlet;
@2.1.1.RELEASE
+#toString()Ljava/lang/String;
@3.0.0
+#<init>(Ljakarta/servlet/Servlet;[Ljava/lang/String;)V
+#<init>(Ljakarta/servlet/Servlet;Z[Ljava/lang/String;)V
+#setServlet(Ljakarta/servlet/Servlet;)V
+#getServlet()Ljakarta/servlet/Servlet;
+#setMultipartConfig(Ljakarta/servlet/MultipartConfigElement;)V
+#getMultipartConfig()Ljakarta/servlet/MultipartConfigElement;
-#<init>(Ljavax/servlet/Servlet;[Ljava/lang/String;)V
-#<init>(Ljavax/servlet/Servlet;Z[Ljava/lang/String;)V
-#setServlet(Ljavax/servlet/Servlet;)V
-#getServlet()Ljavax/servlet/Servlet;
-#setMultipartConfig(Ljavax/servlet/MultipartConfigElement;)V
-#getMultipartConfig()Ljavax/servlet/MultipartConfigElement;

+###org/springframework/boot/web/context/WebServerApplicationContext
@2.0.0.RELEASE
+#getWebServer()Lorg/springframework/boot/web/server/WebServer;
+#getServerNamespace()Ljava/lang/String;
@2.1.8.RELEASE
+#hasServerNamespace(Lorg/springframework/context/ApplicationContext;Ljava/lang/String;)Z
@2.6.0
+#getServerNamespace(Lorg/springframework/context/ApplicationContext;)Ljava/lang/String;

+###org/springframework/boot/web/server/Compression
@2.0.0.RELEASE
+#<init>()V
+#getEnabled()Z
+#setEnabled(Z)V
+#getMimeTypes()[Ljava/lang/String;
+#setMimeTypes([Ljava/lang/String;)V
+#getMinResponseSize()I
+#setMinResponseSize(I)V
+#getExcludedUserAgents()[Ljava/lang/String;
+#setExcludedUserAgents([Ljava/lang/String;)V
@2.1.0.RELEASE
+#getMinResponseSize()Lorg/springframework/util/unit/DataSize;
+#setMinResponseSize(Lorg/springframework/util/unit/DataSize;)V
-#getMinResponseSize()I
-#setMinResponseSize(I)V

+###org/springframework/boot/web/embedded/netty/NettyWebServer
@2.0.0.RELEASE
+#<init>(Lreactor/ipc/netty/http/server/HttpServer;Lorg/springframework/http/server/reactive/ReactorHttpHandlerAdapter;Ljava/time/Duration;)V
+#start()V
+#stop()V
+#getPort()I
@2.1.0.RELEASE
+#<init>(Lreactor/netty/http/server/HttpServer;Lorg/springframework/http/server/reactive/ReactorHttpHandlerAdapter;Ljava/time/Duration;)V
-#<init>(Lreactor/ipc/netty/http/server/HttpServer;Lorg/springframework/http/server/reactive/ReactorHttpHandlerAdapter;Ljava/time/Duration;)V
@2.2.0.RELEASE
+#setRouteProviders(Ljava/util/List;)V
@2.3.0.RELEASE
+#<init>(Lreactor/netty/http/server/HttpServer;Lorg/springframework/http/server/reactive/ReactorHttpHandlerAdapter;Ljava/time/Duration;Lorg/springframework/boot/web/server/Shutdown;)V
+#shutDownGracefully(Lorg/springframework/boot/web/server/GracefulShutdownCallback;)V
-#<init>(Lreactor/netty/http/server/HttpServer;Lorg/springframework/http/server/reactive/ReactorHttpHandlerAdapter;Ljava/time/Duration;)V

+###org/springframework/boot/convert/DurationFormat
@2.0.0.RELEASE
+#value()Lorg/springframework/boot/convert/DurationStyle;

+###org/springframework/boot/diagnostics/FailureAnalysisReporter
@1.4.0.RELEASE
+#report(Lorg/springframework/boot/diagnostics/FailureAnalysis;)V

+###org/springframework/boot/jta/narayana/NarayanaDataSourceBean
@1.4.0.RELEASE
+#<init>(Ljavax/sql/XADataSource;)V
+#getConnection()Ljava/sql/Connection;
+#getConnection(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
+#getLogWriter()Ljava/io/PrintWriter;
+#setLogWriter(Ljava/io/PrintWriter;)V
+#setLoginTimeout(I)V
+#getLoginTimeout()I
+#getParentLogger()Ljava/util/logging/Logger;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
@2.1.0.RELEASE
-###org/springframework/boot/jta/narayana/NarayanaDataSourceBean

+###org/springframework/boot/info/BuildProperties
@1.4.0.RELEASE
+#<init>(Ljava/util/Properties;)V
+#getGroup()Ljava/lang/String;
+#getArtifact()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getTime()Ljava/util/Date;
@2.0.0.RELEASE
+#getTime()Ljava/time/Instant;
-#getTime()Ljava/util/Date;

+###org/springframework/boot/context/properties/bind/AggregateBinder$AggregateSupplier
@2.0.0.RELEASE
+#<init>(Ljava/util/function/Supplier;)V
+#get()Ljava/lang/Object;
+#wasSupplied()Z

+###org/springframework/boot/context/properties/PropertyMapper
@2.0.0.RELEASE
+#alwaysApplyingWhenNonNull()Lorg/springframework/boot/context/properties/PropertyMapper;
+#alwaysApplying(Lorg/springframework/boot/context/properties/PropertyMapper$SourceOperator;)Lorg/springframework/boot/context/properties/PropertyMapper;
+#from(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#get()Lorg/springframework/boot/context/properties/PropertyMapper;
@2.1.0.RELEASE
+#from(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;

+###org/springframework/boot/logging/LoggingSystemProperties
@2.0.0.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;)V
+#apply()V
+#apply(Lorg/springframework/boot/logging/LogFile;)V
@2.4.2
+#<init>(Lorg/springframework/core/env/Environment;Ljava/util/function/BiConsumer;)V

+###org/springframework/boot/web/servlet/server/AbstractServletWebServerFactory
@2.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#getContextPath()Ljava/lang/String;
+#setContextPath(Ljava/lang/String;)V
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#isRegisterDefaultServlet()Z
+#setRegisterDefaultServlet(Z)V
+#getMimeMappings()Lorg/springframework/boot/web/server/MimeMappings;
+#setMimeMappings(Lorg/springframework/boot/web/server/MimeMappings;)V
+#getDocumentRoot()Ljava/io/File;
+#setDocumentRoot(Ljava/io/File;)V
+#setInitializers(Ljava/util/List;)V
+#addInitializers([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)V
+#getJsp()Lorg/springframework/boot/web/servlet/server/Jsp;
+#setJsp(Lorg/springframework/boot/web/servlet/server/Jsp;)V
+#getSession()Lorg/springframework/boot/web/servlet/server/Session;
+#setSession(Lorg/springframework/boot/web/servlet/server/Session;)V
+#getLocaleCharsetMappings()Ljava/util/Map;
+#setLocaleCharsetMappings(Ljava/util/Map;)V
+#setInitParameters(Ljava/util/Map;)V
+#getInitParameters()Ljava/util/Map;
@2.4.0
+#addWebListeners([Ljava/lang/String;)V
@2.6.0
+#setCookieSameSiteSuppliers(Ljava/util/List;)V
+#addCookieSameSiteSuppliers([Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;)V
+#getCookieSameSiteSuppliers()Ljava/util/List;

+###org/springframework/boot/web/servlet/view/MustacheViewResolver
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lcom/samskivert/mustache/Mustache$Compiler;)V
+#setCharset(Ljava/lang/String;)V

+###org/springframework/boot/web/embedded/undertow/UndertowReactiveWebServerFactory
@2.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#getWebServer(Lorg/springframework/http/server/reactive/HttpHandler;)Lorg/springframework/boot/web/server/WebServer;
+#setDeploymentInfoCustomizers(Ljava/util/Collection;)V
+#getDeploymentInfoCustomizers()Ljava/util/Collection;
+#addDeploymentInfoCustomizers([Lorg/springframework/boot/web/embedded/undertow/UndertowDeploymentInfoCustomizer;)V
+#setAccessLogDirectory(Ljava/io/File;)V
+#setAccessLogPattern(Ljava/lang/String;)V
+#setAccessLogPrefix(Ljava/lang/String;)V
+#setAccessLogSuffix(Ljava/lang/String;)V
+#isAccessLogEnabled()Z
+#setAccessLogEnabled(Z)V
+#setAccessLogRotate(Z)V
+#setUseForwardHeaders(Z)V
+#setBufferSize(Ljava/lang/Integer;)V
+#setIoThreads(Ljava/lang/Integer;)V
+#setWorkerThreads(Ljava/lang/Integer;)V
+#setUseDirectBuffers(Ljava/lang/Boolean;)V
+#setBuilderCustomizers(Ljava/util/Collection;)V
+#getBuilderCustomizers()Ljava/util/Collection;
+#addBuilderCustomizers([Lorg/springframework/boot/web/embedded/undertow/UndertowBuilderCustomizer;)V
@2.1.7.RELEASE
*#setDeploymentInfoCustomizers(Ljava/util/Collection;)V[deprecated]
*#getDeploymentInfoCustomizers()Ljava/util/Collection;[deprecated]
@2.2.0.RELEASE
-#setDeploymentInfoCustomizers(Ljava/util/Collection;)V[deprecated]
-#getDeploymentInfoCustomizers()Ljava/util/Collection;[deprecated]
-#addDeploymentInfoCustomizers([Lorg/springframework/boot/web/embedded/undertow/UndertowDeploymentInfoCustomizer;)V

+###org/springframework/boot/diagnostics/analyzer/BeanNotOfRequiredTypeFailureAnalyzer
@1.4.0.RELEASE
+#<init>()V

+###org/springframework/boot/jdbc/metadata/HikariDataSourcePoolMetadata
@2.0.0.RELEASE
+#<init>(Lcom/zaxxer/hikari/HikariDataSource;)V
+#getActive()Ljava/lang/Integer;
+#getMax()Ljava/lang/Integer;
+#getMin()Ljava/lang/Integer;
+#getValidationQuery()Ljava/lang/String;
+#getDefaultAutoCommit()Ljava/lang/Boolean;
@2.2.0.RELEASE
+#getIdle()Ljava/lang/Integer;

+###org/springframework/boot/jdbc/AbstractDataSourceInitializer
@2.0.0.RELEASE
@2.2.12.RELEASE
+#afterPropertiesSet()V
@2.3.0.RELEASE
-#afterPropertiesSet()V
@2.3.6.RELEASE
+#afterPropertiesSet()V
@3.0.0
-###org/springframework/boot/jdbc/AbstractDataSourceInitializer

+###org/springframework/boot/system/SystemProperties
@2.0.0.RELEASE
+#get([Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/boot/json/AbstractJsonParser
@2.0.1.RELEASE
+#<init>()V

+###org/springframework/boot/SpringBootConfiguration
@1.4.0.RELEASE
@2.2.0.RELEASE
+#proxyBeanMethods()Z

+###org/springframework/boot/jackson/JsonComponentModule
@1.4.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#registerJsonComponents()V
@2.2.12.RELEASE
+#afterPropertiesSet()V
@2.3.0.RELEASE
-#afterPropertiesSet()V
@2.3.6.RELEASE
+#afterPropertiesSet()V

+###org/springframework/boot/jackson/JsonComponent
@1.4.0.RELEASE
+#value()Ljava/lang/String;
@2.2.0.RELEASE
+#type()[Ljava/lang/Class;
+#scope()Lorg/springframework/boot/jackson/JsonComponent$Scope;

+###org/springframework/boot/jackson/JsonObjectSerializer
@1.4.0.RELEASE
+#<init>()V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V

+###org/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)V
+#addAliases(Ljava/lang/String;[Ljava/lang/String;)V
+#addAliases(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)V
+#getAliases(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/util/List;
+#getNameForAlias(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
@2.0.7.RELEASE
+#iterator()Ljava/util/Iterator;

+###org/springframework/boot/context/properties/bind/Bindable
@2.0.0.RELEASE
+#getType()Lorg/springframework/core/ResolvableType;
+#getBoxedType()Lorg/springframework/core/ResolvableType;
+#getValue()Ljava/util/function/Supplier;
+#getAnnotations()[Ljava/lang/annotation/Annotation;
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#withAnnotations([Ljava/lang/annotation/Annotation;)Lorg/springframework/boot/context/properties/bind/Bindable;
+#withExistingValue(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/bind/Bindable;
+#withSuppliedValue(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/bind/Bindable;
+#ofInstance(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/bind/Bindable;
+#of(Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;
+#listOf(Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;
+#setOf(Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;
+#mapOf(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;
+#of(Lorg/springframework/core/ResolvableType;)Lorg/springframework/boot/context/properties/bind/Bindable;
@2.2.0.RELEASE
+#getConstructorFilter()Ljava/util/function/Predicate;
+#withConstructorFilter(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/bind/Bindable;
@2.2.1.RELEASE
-#getConstructorFilter()Ljava/util/function/Predicate;
-#withConstructorFilter(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/bind/Bindable;
@2.5.0
+#hasBindRestriction(Lorg/springframework/boot/context/properties/bind/Bindable$BindRestriction;)Z
+#withBindRestrictions([Lorg/springframework/boot/context/properties/bind/Bindable$BindRestriction;)Lorg/springframework/boot/context/properties/bind/Bindable;

+###org/springframework/boot/context/TypeExcludeFilter
@1.4.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#match(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z
@1.5.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/boot/context/annotation/UserConfigurations
@2.0.0.RELEASE
+#getOrder()I
+#of([Ljava/lang/Class;)Lorg/springframework/boot/context/annotation/UserConfigurations;

+###org/springframework/boot/logging/log4j2/SpringBootConfigurationFactory
@1.5.0.RELEASE
+#<init>()V
+#getConfiguration(Lorg/apache/logging/log4j/core/LoggerContext;Lorg/apache/logging/log4j/core/config/ConfigurationSource;)Lorg/apache/logging/log4j/core/config/Configuration;

+###org/springframework/boot/web/servlet/ServletContextInitializer
@1.4.0.RELEASE
+#onStartup(Ljavax/servlet/ServletContext;)V
@3.0.0
+#onStartup(Ljakarta/servlet/ServletContext;)V
-#onStartup(Ljavax/servlet/ServletContext;)V

+###org/springframework/boot/web/servlet/error/ErrorAttributes
@2.0.0.RELEASE
+#getErrorAttributes(Lorg/springframework/web/context/request/WebRequest;Z)Ljava/util/Map;
+#getError(Lorg/springframework/web/context/request/WebRequest;)Ljava/lang/Throwable;
@2.3.0.RELEASE
*#getErrorAttributes(Lorg/springframework/web/context/request/WebRequest;Z)Ljava/util/Map;[deprecated]
+#getErrorAttributes(Lorg/springframework/web/context/request/WebRequest;Lorg/springframework/boot/web/error/ErrorAttributeOptions;)Ljava/util/Map;
@2.5.0
-#getErrorAttributes(Lorg/springframework/web/context/request/WebRequest;Z)Ljava/util/Map;[deprecated]

+###org/springframework/boot/web/context/WebServerInitializedEvent
@2.0.0.RELEASE
+#getWebServer()Lorg/springframework/boot/web/server/WebServer;
+#getApplicationContext()Lorg/springframework/boot/web/context/WebServerApplicationContext;
+#getSource()Lorg/springframework/boot/web/server/WebServer;
+#getSource()Ljava/lang/Object;

+###org/springframework/boot/web/context/ServerPortInfoApplicationContextInitializer
@2.0.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#onApplicationEvent(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/boot/web/server/WebServer
@2.0.0.RELEASE
+#start()V
+#stop()V
+#getPort()I
@2.3.0.RELEASE
+#shutDownGracefully(Lorg/springframework/boot/web/server/GracefulShutdownCallback;)V

+###org/springframework/boot/web/server/WebServerException
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/boot/web/server/AbstractConfigurableWebServerFactory
@2.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#getPort()I
+#setPort(I)V
+#getAddress()Ljava/net/InetAddress;
+#setAddress(Ljava/net/InetAddress;)V
+#getErrorPages()Ljava/util/Set;
+#setErrorPages(Ljava/util/Set;)V
+#addErrorPages([Lorg/springframework/boot/web/server/ErrorPage;)V
+#getSsl()Lorg/springframework/boot/web/server/Ssl;
+#setSsl(Lorg/springframework/boot/web/server/Ssl;)V
+#getSslStoreProvider()Lorg/springframework/boot/web/server/SslStoreProvider;
+#setSslStoreProvider(Lorg/springframework/boot/web/server/SslStoreProvider;)V
+#getHttp2()Lorg/springframework/boot/web/server/Http2;
+#setHttp2(Lorg/springframework/boot/web/server/Http2;)V
+#getCompression()Lorg/springframework/boot/web/server/Compression;
+#setCompression(Lorg/springframework/boot/web/server/Compression;)V
+#getServerHeader()Ljava/lang/String;
+#setServerHeader(Ljava/lang/String;)V
@2.3.0.RELEASE
+#setShutdown(Lorg/springframework/boot/web/server/Shutdown;)V
+#getShutdown()Lorg/springframework/boot/web/server/Shutdown;
@2.7.0
+#getOrCreateSslStoreProvider()Lorg/springframework/boot/web/server/SslStoreProvider;

+###org/springframework/boot/web/server/ErrorPage
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#getException()Ljava/lang/Class;
+#getStatus()Lorg/springframework/http/HttpStatus;
+#getStatusCode()I
+#getExceptionName()Ljava/lang/String;
+#isGlobal()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/boot/web/embedded/undertow/UndertowServletWebServer
@2.0.0.RELEASE
+#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZLorg/springframework/boot/web/server/Compression;)V
+#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/web/server/Compression;)V
+#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/web/server/Compression;Ljava/lang/String;)V
+#start()V
+#getDeploymentManager()Lio/undertow/servlet/api/DeploymentManager;
+#stop()V
+#getPort()I
@2.3.0.RELEASE
*#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZLorg/springframework/boot/web/server/Compression;)V[deprecated]
*#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/web/server/Compression;)V[deprecated]
*#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/web/server/Compression;Ljava/lang/String;)V[deprecated]
+#<init>(Lio/undertow/Undertow$Builder;Ljava/lang/Iterable;Ljava/lang/String;Z)V
-#start()V
-#stop()V
-#getPort()I
@2.5.0
-#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZLorg/springframework/boot/web/server/Compression;)V[deprecated]
-#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/web/server/Compression;)V[deprecated]
-#<init>(Lio/undertow/Undertow$Builder;Lio/undertow/servlet/api/DeploymentManager;Ljava/lang/String;ZZLorg/springframework/boot/web/server/Compression;Ljava/lang/String;)V[deprecated]

+###org/springframework/boot/web/embedded/tomcat/TomcatConnectorCustomizer
@2.0.0.RELEASE
+#customize(Lorg/apache/catalina/connector/Connector;)V

+###org/springframework/boot/convert/DurationStyle
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/convert/DurationStyle;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/convert/DurationStyle;
+#parse(Ljava/lang/String;)Ljava/time/Duration;
+#parse(Ljava/lang/String;Ljava/time/temporal/ChronoUnit;)Ljava/time/Duration;
+#print(Ljava/time/Duration;)Ljava/lang/String;
+#print(Ljava/time/Duration;Ljava/time/temporal/ChronoUnit;)Ljava/lang/String;
+#detectAndParse(Ljava/lang/String;)Ljava/time/Duration;
+#detectAndParse(Ljava/lang/String;Ljava/time/temporal/ChronoUnit;)Ljava/time/Duration;
+#detect(Ljava/lang/String;)Lorg/springframework/boot/convert/DurationStyle;

+###org/springframework/boot/jdbc/metadata/CommonsDbcp2DataSourcePoolMetadata
@2.0.0.RELEASE
+#<init>(Lorg/apache/commons/dbcp2/BasicDataSource;)V
+#getActive()Ljava/lang/Integer;
+#getMax()Ljava/lang/Integer;
+#getMin()Ljava/lang/Integer;
+#getValidationQuery()Ljava/lang/String;
+#getDefaultAutoCommit()Ljava/lang/Boolean;
@2.2.0.RELEASE
+#getIdle()Ljava/lang/Integer;

+###org/springframework/boot/jdbc/SchemaManagement
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/jdbc/SchemaManagement;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/jdbc/SchemaManagement;

+###org/springframework/boot/jdbc/SchemaManagementProvider
@2.0.0.RELEASE
+#getSchemaManagement(Ljavax/sql/DataSource;)Lorg/springframework/boot/jdbc/SchemaManagement;

+###org/springframework/boot/jms/XAConnectionFactoryWrapper
@2.0.0.RELEASE
+#wrapConnectionFactory(Ljavax/jms/XAConnectionFactory;)Ljavax/jms/ConnectionFactory;
@3.0.0
+#wrapConnectionFactory(Ljakarta/jms/XAConnectionFactory;)Ljakarta/jms/ConnectionFactory;
-#wrapConnectionFactory(Ljavax/jms/XAConnectionFactory;)Ljavax/jms/ConnectionFactory;

+###org/springframework/boot/context/properties/source/InvalidConfigurationPropertyValueException
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#getReason()Ljava/lang/String;

+###org/springframework/boot/context/properties/bind/handler/IgnoreTopLevelConverterNotFoundBindHandler
@2.0.1.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/boot/context/properties/bind/BindHandler;)V
+#onFailure(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Exception;)Ljava/lang/Object;

+###org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandler
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/context/properties/bind/BindHandler;)V
+#<init>(Lorg/springframework/boot/context/properties/bind/BindHandler;Ljava/util/function/Function;)V
+#onSuccess(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)Ljava/lang/Object;
+#onFinish(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)V
@2.1.13.RELEASE
+#onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Lorg/springframework/boot/context/properties/bind/Bindable;
@2.2.0.RELEASE
-#onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Lorg/springframework/boot/context/properties/bind/Bindable;
@2.2.5.RELEASE
+#onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Lorg/springframework/boot/context/properties/bind/Bindable;
@2.2.10.RELEASE
+#onFailure(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Exception;)Ljava/lang/Object;
@2.3.0.RELEASE
-#onFailure(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Exception;)Ljava/lang/Object;
@2.3.3.RELEASE
+#onFailure(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Exception;)Ljava/lang/Object;

+###org/springframework/boot/web/servlet/server/Session$Cookie
@2.0.0.RELEASE
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDomain()Ljava/lang/String;
+#setDomain(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getHttpOnly()Ljava/lang/Boolean;
+#setHttpOnly(Ljava/lang/Boolean;)V
+#getSecure()Ljava/lang/Boolean;
+#setSecure(Ljava/lang/Boolean;)V
+#getMaxAge()Ljava/time/Duration;
+#setMaxAge(Ljava/time/Duration;)V
@2.6.0
-#getName()Ljava/lang/String;
-#setName(Ljava/lang/String;)V
-#getDomain()Ljava/lang/String;
-#setDomain(Ljava/lang/String;)V
-#getPath()Ljava/lang/String;
-#setPath(Ljava/lang/String;)V
-#getHttpOnly()Ljava/lang/Boolean;
-#setHttpOnly(Ljava/lang/Boolean;)V
-#getSecure()Ljava/lang/Boolean;
-#setSecure(Ljava/lang/Boolean;)V
-#getMaxAge()Ljava/time/Duration;
-#setMaxAge(Ljava/time/Duration;)V
@3.0.0
*#getComment()Ljava/lang/String;[deprecated]
*#setComment(Ljava/lang/String;)V[deprecated]

+###org/springframework/boot/web/servlet/filter/ApplicationContextHeaderFilter
@2.0.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V

+###org/springframework/boot/web/reactive/context/ReactiveWebServerInitializedEvent
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/web/server/WebServer;Lorg/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext;)V
+#getApplicationContext()Lorg/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext;
+#getApplicationContext()Lorg/springframework/boot/web/context/WebServerApplicationContext;

+###org/springframework/boot/web/reactive/error/ErrorAttributes
@2.0.0.RELEASE
+#getErrorAttributes(Lorg/springframework/web/reactive/function/server/ServerRequest;Z)Ljava/util/Map;
+#getError(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/lang/Throwable;
+#storeErrorInformation(Ljava/lang/Throwable;Lorg/springframework/web/server/ServerWebExchange;)V
@2.3.0.RELEASE
*#getErrorAttributes(Lorg/springframework/web/reactive/function/server/ServerRequest;Z)Ljava/util/Map;[deprecated]
+#getErrorAttributes(Lorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/boot/web/error/ErrorAttributeOptions;)Ljava/util/Map;
@2.5.0
-#getErrorAttributes(Lorg/springframework/web/reactive/function/server/ServerRequest;Z)Ljava/util/Map;[deprecated]

+###org/springframework/boot/web/reactive/result/view/MustacheView
@2.0.0.RELEASE
+#<init>()V
+#setCompiler(Lcom/samskivert/mustache/Mustache$Compiler;)V
+#setCharset(Ljava/lang/String;)V
+#checkResourceExists(Ljava/util/Locale;)Z

+###org/springframework/boot/diagnostics/LoggingFailureAnalysisReporter
@1.4.0.RELEASE
+#<init>()V
+#report(Lorg/springframework/boot/diagnostics/FailureAnalysis;)V

+###org/springframework/boot/env/OriginTrackedMapPropertySource
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#getOrigin(Ljava/lang/String;)Lorg/springframework/boot/origin/Origin;
+#getOrigin(Ljava/lang/Object;)Lorg/springframework/boot/origin/Origin;
@2.2.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Map;Z)V
+#isImmutable()Z

+###org/springframework/boot/env/RandomValuePropertySource
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#addToEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V

+###org/springframework/boot/env/SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource
@2.0.0.RELEASE
+#getOrigin(Ljava/lang/String;)Lorg/springframework/boot/origin/Origin;
+#getOrigin(Ljava/lang/Object;)Lorg/springframework/boot/origin/Origin;
@2.5.0
+#containsProperty(Ljava/lang/String;)Z
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#getPrefix()Ljava/lang/String;

+###org/springframework/boot/env/SystemEnvironmentPropertySourceEnvironmentPostProcessor
@2.0.0.RELEASE
+#<init>()V
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V
+#getOrder()I
+#setOrder(I)V

+###org/springframework/boot/DefaultApplicationArguments
@1.4.1.RELEASE
+#<init>([Ljava/lang/String;)V
+#getSourceArgs()[Ljava/lang/String;
+#getOptionNames()Ljava/util/Set;
+#containsOption(Ljava/lang/String;)Z
+#getOptionValues(Ljava/lang/String;)Ljava/util/List;
+#getNonOptionArgs()Ljava/util/List;

+###org/springframework/boot/context/properties/source/ConfigurationPropertySource
@2.0.0.RELEASE
+#getConfigurationProperty(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
+#containsDescendantOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;
+#filter(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;
+#withAliases(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;
+#getUnderlyingSource()Ljava/lang/Object;
@2.4.0
+#from(Lorg/springframework/core/env/PropertySource;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;
@2.5.0
+#withPrefix(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;

+###org/springframework/boot/context/properties/bind/BindException
@2.0.0.RELEASE
+#getName()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
+#getTarget()Lorg/springframework/boot/context/properties/bind/Bindable;
+#getProperty()Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
+#getOrigin()Lorg/springframework/boot/origin/Origin;

+###org/springframework/boot/context/properties/PropertyMapper$Source
@2.0.0.RELEASE
+#asInt(Ljava/util/function/Function;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#as(Ljava/util/function/Function;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#whenNonNull()Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#whenTrue()Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#whenFalse()Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#whenHasText()Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#whenEqualTo(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#whenInstanceOf(Ljava/lang/Class;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#whenNot(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#when(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
+#to(Ljava/util/function/Consumer;)V
+#toInstance(Ljava/util/function/Function;)Ljava/lang/Object;
+#toCall(Ljava/lang/Runnable;)V
@3.0.0
+#to(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;

+###org/springframework/boot/web/servlet/server/ConfigurableServletWebServerFactory
@2.0.0.RELEASE
+#setContextPath(Ljava/lang/String;)V
+#setDisplayName(Ljava/lang/String;)V
+#setSession(Lorg/springframework/boot/web/servlet/server/Session;)V
+#setRegisterDefaultServlet(Z)V
+#setMimeMappings(Lorg/springframework/boot/web/server/MimeMappings;)V
+#setDocumentRoot(Ljava/io/File;)V
+#setInitializers(Ljava/util/List;)V
+#addInitializers([Lorg/springframework/boot/web/servlet/ServletContextInitializer;)V
+#setJsp(Lorg/springframework/boot/web/servlet/server/Jsp;)V
+#setLocaleCharsetMappings(Ljava/util/Map;)V
+#setInitParameters(Ljava/util/Map;)V
@2.6.0
+#setCookieSameSiteSuppliers(Ljava/util/List;)V
+#addCookieSameSiteSuppliers([Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;)V

+###org/springframework/boot/web/server/ErrorPageRegistry
@2.0.0.RELEASE
+#addErrorPages([Lorg/springframework/boot/web/server/ErrorPage;)V

+###org/springframework/boot/web/embedded/jetty/ConfigurableJettyWebServerFactory
@2.0.0.RELEASE
+#setAcceptors(I)V
+#setSelectors(I)V
+#setUseForwardHeaders(Z)V
+#addServerCustomizers([Lorg/springframework/boot/web/embedded/jetty/JettyServerCustomizer;)V
@2.3.0.RELEASE
+#setThreadPool(Lorg/eclipse/jetty/util/thread/ThreadPool;)V

+###org/springframework/boot/web/embedded/undertow/UndertowBuilderCustomizer
@2.0.0.RELEASE
+#customize(Lio/undertow/Undertow$Builder;)V

+###org/springframework/boot/web/embedded/netty/NettyServerCustomizer
@2.0.0.RELEASE
+#customize(Lreactor/ipc/netty/http/server/HttpServerOptions$Builder;)V
@2.1.0.RELEASE
-#customize(Lreactor/ipc/netty/http/server/HttpServerOptions$Builder;)V

+###org/springframework/boot/jta/narayana/NarayanaXAConnectionFactoryWrapper
@1.4.0.RELEASE
+#<init>(Ljavax/transaction/TransactionManager;Lorg/springframework/boot/jta/narayana/NarayanaRecoveryManagerBean;Lorg/springframework/boot/jta/narayana/NarayanaProperties;)V
+#wrapConnectionFactory(Ljavax/jms/XAConnectionFactory;)Ljavax/jms/ConnectionFactory;
@2.1.0.RELEASE
-###org/springframework/boot/jta/narayana/NarayanaXAConnectionFactoryWrapper

+###org/springframework/boot/jta/narayana/NarayanaConfigurationBean
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/jta/narayana/NarayanaProperties;)V
+#afterPropertiesSet()V
@2.1.0.RELEASE
-###org/springframework/boot/jta/narayana/NarayanaConfigurationBean

+###org/springframework/boot/jta/narayana/NarayanaBeanFactoryPostProcessor
@1.4.0.RELEASE
+#<init>()V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#getOrder()I
@2.1.0.RELEASE
-###org/springframework/boot/jta/narayana/NarayanaBeanFactoryPostProcessor

+###org/springframework/boot/security/reactive/ApplicationContextServerWebExchangeMatcher
@2.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/boot/context/properties/source/IterableConfigurationPropertySource
@2.0.0.RELEASE
+#iterator()Ljava/util/Iterator;
+#stream()Ljava/util/stream/Stream;
+#containsDescendantOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;
+#filter(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;
+#withAliases(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases;)Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;
+#withAliases(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;
+#filter(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;
@2.5.0
+#withPrefix(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;
+#withPrefix(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;

+###org/springframework/boot/context/properties/PropertyMapper$SourceOperator
@2.0.0.RELEASE
+#apply(Lorg/springframework/boot/context/properties/PropertyMapper$Source;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;

+###org/springframework/boot/web/servlet/error/DefaultErrorAttributes
@2.0.0.RELEASE
+#<init>()V
+#<init>(Z)V
+#getOrder()I
+#resolveException(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Exception;)Lorg/springframework/web/servlet/ModelAndView;
+#getErrorAttributes(Lorg/springframework/web/context/request/WebRequest;Z)Ljava/util/Map;
+#getError(Lorg/springframework/web/context/request/WebRequest;)Ljava/lang/Throwable;
@2.3.0.RELEASE
*#<init>(Z)V[deprecated]
+#getErrorAttributes(Lorg/springframework/web/context/request/WebRequest;Lorg/springframework/boot/web/error/ErrorAttributeOptions;)Ljava/util/Map;
*#getErrorAttributes(Lorg/springframework/web/context/request/WebRequest;Z)Ljava/util/Map;[deprecated]
@2.5.0
-#<init>(Z)V[deprecated]
-#getErrorAttributes(Lorg/springframework/web/context/request/WebRequest;Z)Ljava/util/Map;[deprecated]
@3.0.0
+#resolveException(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Exception;)Lorg/springframework/web/servlet/ModelAndView;
-#resolveException(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Exception;)Lorg/springframework/web/servlet/ModelAndView;

+###org/springframework/boot/web/server/ConfigurableWebServerFactory
@2.0.0.RELEASE
+#setPort(I)V
+#setAddress(Ljava/net/InetAddress;)V
+#setErrorPages(Ljava/util/Set;)V
+#setSsl(Lorg/springframework/boot/web/server/Ssl;)V
+#setSslStoreProvider(Lorg/springframework/boot/web/server/SslStoreProvider;)V
+#setHttp2(Lorg/springframework/boot/web/server/Http2;)V
+#setCompression(Lorg/springframework/boot/web/server/Compression;)V
+#setServerHeader(Ljava/lang/String;)V
@2.3.0.RELEASE
+#setShutdown(Lorg/springframework/boot/web/server/Shutdown;)V

+###org/springframework/boot/web/server/ErrorPageRegistrarBeanPostProcessor
@2.0.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/boot/web/embedded/undertow/ConfigurableUndertowWebServerFactory
@2.0.0.RELEASE
+#addBuilderCustomizers([Lorg/springframework/boot/web/embedded/undertow/UndertowBuilderCustomizer;)V
+#addDeploymentInfoCustomizers([Lorg/springframework/boot/web/embedded/undertow/UndertowDeploymentInfoCustomizer;)V
+#setBufferSize(Ljava/lang/Integer;)V
+#setIoThreads(Ljava/lang/Integer;)V
+#setWorkerThreads(Ljava/lang/Integer;)V
+#setUseDirectBuffers(Ljava/lang/Boolean;)V
+#setAccessLogDirectory(Ljava/io/File;)V
+#setAccessLogPattern(Ljava/lang/String;)V
+#setAccessLogPrefix(Ljava/lang/String;)V
+#setAccessLogSuffix(Ljava/lang/String;)V
+#setAccessLogEnabled(Z)V
+#setAccessLogRotate(Z)V
+#setUseForwardHeaders(Z)V
@2.1.7.RELEASE
*#addDeploymentInfoCustomizers([Lorg/springframework/boot/web/embedded/undertow/UndertowDeploymentInfoCustomizer;)V[deprecated]
@2.2.0.RELEASE
-#addDeploymentInfoCustomizers([Lorg/springframework/boot/web/embedded/undertow/UndertowDeploymentInfoCustomizer;)V[deprecated]
@2.3.0.RELEASE
+#setBuilderCustomizers(Ljava/util/Collection;)V

+###org/springframework/boot/web/embedded/undertow/UndertowDeploymentInfoCustomizer
@2.0.0.RELEASE
+#customize(Lio/undertow/servlet/api/DeploymentInfo;)V

+###org/springframework/boot/web/reactive/context/AnnotationConfigReactiveWebServerApplicationContext
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V
+#<init>([Ljava/lang/Class;)V
+#<init>([Ljava/lang/String;)V
+#setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V
+#setScopeMetadataResolver(Lorg/springframework/context/annotation/ScopeMetadataResolver;)V
+#register([Ljava/lang/Class;)V
+#scan([Ljava/lang/String;)V

+###org/springframework/boot/web/reactive/context/ConfigurableReactiveWebEnvironment
@2.0.0.RELEASE

+###org/springframework/boot/web/reactive/context/AnnotationConfigReactiveWebApplicationContext
@2.0.0.RELEASE
+#<init>()V
+#setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V
+#setScopeMetadataResolver(Lorg/springframework/context/annotation/ScopeMetadataResolver;)V
+#register([Ljava/lang/Class;)V
+#scan([Ljava/lang/String;)V
@2.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V
+#<init>([Ljava/lang/Class;)V
+#<init>([Ljava/lang/String;)V
+#setConfigLocation(Ljava/lang/String;)V[deprecated]
+#setConfigLocations([Ljava/lang/String;)V[deprecated]
-#setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V
-#setScopeMetadataResolver(Lorg/springframework/context/annotation/ScopeMetadataResolver;)V
-#register([Ljava/lang/Class;)V
-#scan([Ljava/lang/String;)V
@2.3.0.RELEASE
-#setConfigLocation(Ljava/lang/String;)V[deprecated]
-#setConfigLocations([Ljava/lang/String;)V[deprecated]

+###org/springframework/boot/SpringBootExceptionReporter
@2.0.0.RELEASE
+#reportException(Ljava/lang/Throwable;)Z

+###org/springframework/boot/jdbc/DataSourceBuilder
@2.0.0.RELEASE
+#create()Lorg/springframework/boot/jdbc/DataSourceBuilder;
+#create(Ljava/lang/ClassLoader;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
+#build()Ljavax/sql/DataSource;
+#type(Ljava/lang/Class;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
+#url(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
+#driverClassName(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
+#username(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
+#password(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
+#findType(Ljava/lang/ClassLoader;)Ljava/lang/Class;
@2.5.0
+#derivedFrom(Ljavax/sql/DataSource;)Lorg/springframework/boot/jdbc/DataSourceBuilder;

+###org/springframework/boot/security/servlet/ApplicationContextRequestMatcher
@2.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
@3.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/boot/ansi/AnsiColors
@1.4.0.RELEASE
+#getClosest(Ljava/awt/Color;)Lorg/springframework/boot/ansi/AnsiColor;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/ansi/AnsiColors$BitDepth;)V
+#findClosest(Ljava/awt/Color;)Lorg/springframework/boot/ansi/AnsiElement;
*#getClosest(Ljava/awt/Color;)Lorg/springframework/boot/ansi/AnsiColor;[deprecated]
@2.3.0.RELEASE
-#getClosest(Ljava/awt/Color;)Lorg/springframework/boot/ansi/AnsiColor;[deprecated]
@3.0.0
-###org/springframework/boot/ansi/AnsiColors

+###org/springframework/boot/util/LambdaSafe$Callback
@2.0.0.RELEASE
+#invoke(Ljava/util/function/Consumer;)V
+#invokeAnd(Ljava/util/function/Function;)Lorg/springframework/boot/util/LambdaSafe$InvocationResult;
@3.0.0
+#withLogger(Lorg/apache/commons/logging/Log;)Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;
+#withLogger(Ljava/lang/Class;)Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;

+###org/springframework/boot/util/LambdaSafe$Callbacks
@2.0.0.RELEASE
+#invoke(Ljava/util/function/Consumer;)V
+#invokeAnd(Ljava/util/function/Function;)Ljava/util/stream/Stream;
@3.0.0
+#withLogger(Lorg/apache/commons/logging/Log;)Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;
+#withLogger(Ljava/lang/Class;)Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;

+###org/springframework/boot/util/LambdaSafe$InvocationResult
@2.0.0.RELEASE
+#hasResult()Z
+#get()Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#of(Ljava/lang/Object;)Lorg/springframework/boot/util/LambdaSafe$InvocationResult;
+#noResult()Lorg/springframework/boot/util/LambdaSafe$InvocationResult;

+###org/springframework/boot/ImageBanner
@1.4.0.RELEASE
+#<init>(Lorg/springframework/core/io/Resource;)V
+#printBanner(Lorg/springframework/core/env/Environment;Ljava/lang/Class;Ljava/io/PrintStream;)V
@3.0.0
-###org/springframework/boot/ImageBanner

+###org/springframework/boot/context/properties/source/MapConfigurationPropertySource
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#putAll(Ljava/util/Map;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#getUnderlyingSource()Ljava/lang/Object;
+#getConfigurationProperty(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
+#iterator()Ljava/util/Iterator;
+#stream()Ljava/util/stream/Stream;

+###org/springframework/boot/context/properties/bind/PlaceholdersResolver
@2.0.0.RELEASE
+#resolvePlaceholders(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/boot/context/properties/bind/BindResult
@2.0.0.RELEASE
+#get()Ljava/lang/Object;
+#isBound()Z
+#ifBound(Ljava/util/function/Consumer;)V
+#map(Ljava/util/function/Function;)Lorg/springframework/boot/context/properties/bind/BindResult;
+#orElse(Ljava/lang/Object;)Ljava/lang/Object;
+#orElseGet(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#orElseCreate(Ljava/lang/Class;)Ljava/lang/Object;
+#orElseThrow(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.2.0.RELEASE
*#orElseCreate(Ljava/lang/Class;)Ljava/lang/Object;[deprecated]
@2.3.0.RELEASE
-#orElseCreate(Ljava/lang/Class;)Ljava/lang/Object;[deprecated]

+###org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext$ExistingWebApplicationScopes
@2.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#restore()V

+###org/springframework/boot/web/server/LocalServerPort
@2.0.0.RELEASE
@3.0.0
-###org/springframework/boot/web/server/LocalServerPort

+###org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory
@2.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#getWebServer(Lorg/springframework/http/server/reactive/HttpHandler;)Lorg/springframework/boot/web/server/WebServer;
+#setBaseDirectory(Ljava/io/File;)V
+#setBackgroundProcessorDelay(I)V
+#setTomcatContextCustomizers(Ljava/util/Collection;)V
+#getTomcatContextCustomizers()Ljava/util/Collection;
+#addContextCustomizers([Lorg/springframework/boot/web/embedded/tomcat/TomcatContextCustomizer;)V
+#setTomcatConnectorCustomizers(Ljava/util/Collection;)V
+#addConnectorCustomizers([Lorg/springframework/boot/web/embedded/tomcat/TomcatConnectorCustomizer;)V
+#getTomcatConnectorCustomizers()Ljava/util/Collection;
+#addEngineValves([Lorg/apache/catalina/Valve;)V
+#getEngineValves()Ljava/util/List;
+#setUriEncoding(Ljava/nio/charset/Charset;)V
+#getUriEncoding()Ljava/nio/charset/Charset;
+#setContextLifecycleListeners(Ljava/util/Collection;)V
+#getContextLifecycleListeners()Ljava/util/Collection;
+#addContextLifecycleListeners([Lorg/apache/catalina/LifecycleListener;)V
+#setProtocol(Ljava/lang/String;)V
@2.2.0.RELEASE
+#setTomcatProtocolHandlerCustomizers(Ljava/util/Collection;)V
+#addProtocolHandlerCustomizers([Lorg/springframework/boot/web/embedded/tomcat/TomcatProtocolHandlerCustomizer;)V
+#getTomcatProtocolHandlerCustomizers()Ljava/util/Collection;
+#addAdditionalTomcatConnectors([Lorg/apache/catalina/connector/Connector;)V
+#getAdditionalTomcatConnectors()Ljava/util/List;
+#setDisableMBeanRegistry(Z)V

+###org/springframework/boot/web/embedded/netty/SslServerCustomizer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/web/server/SslStoreProvider;)V
+#customize(Lreactor/ipc/netty/http/server/HttpServerOptions$Builder;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/web/server/Http2;Lorg/springframework/boot/web/server/SslStoreProvider;)V
+#apply(Lreactor/netty/http/server/HttpServer;)Lreactor/netty/http/server/HttpServer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/web/server/SslStoreProvider;)V
-#customize(Lreactor/ipc/netty/http/server/HttpServerOptions$Builder;)V

+###org/springframework/boot/web/client/RestTemplateBuilder
@1.4.0.RELEASE
+#<init>([Lorg/springframework/boot/web/client/RestTemplateCustomizer;)V
+#detectRequestFactory(Z)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#rootUri(Ljava/lang/String;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#messageConverters([Lorg/springframework/http/converter/HttpMessageConverter;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#messageConverters(Ljava/util/Collection;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#additionalMessageConverters([Lorg/springframework/http/converter/HttpMessageConverter;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#additionalMessageConverters(Ljava/util/Collection;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#defaultMessageConverters()Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#requestFactory(Ljava/lang/Class;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#requestFactory(Lorg/springframework/http/client/ClientHttpRequestFactory;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#uriTemplateHandler(Lorg/springframework/web/util/UriTemplateHandler;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#errorHandler(Lorg/springframework/web/client/ResponseErrorHandler;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#basicAuthorization(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#customizers([Lorg/springframework/boot/web/client/RestTemplateCustomizer;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#customizers(Ljava/util/Collection;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#additionalCustomizers([Lorg/springframework/boot/web/client/RestTemplateCustomizer;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#additionalCustomizers(Ljava/util/Collection;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#setConnectTimeout(I)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#setReadTimeout(I)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#build()Lorg/springframework/web/client/RestTemplate;
+#build(Ljava/lang/Class;)Lorg/springframework/web/client/RestTemplate;
+#configure(Lorg/springframework/web/client/RestTemplate;)Lorg/springframework/web/client/RestTemplate;
@1.4.1.RELEASE
+#interceptors([Lorg/springframework/http/client/ClientHttpRequestInterceptor;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#interceptors(Ljava/util/Collection;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#additionalInterceptors([Lorg/springframework/http/client/ClientHttpRequestInterceptor;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#additionalInterceptors(Ljava/util/Collection;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
@2.0.0.RELEASE
+#requestFactory(Ljava/util/function/Supplier;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
-#requestFactory(Lorg/springframework/http/client/ClientHttpRequestFactory;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
@2.1.0.RELEASE
+#basicAuthentication(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#setConnectTimeout(Ljava/time/Duration;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
*#setConnectTimeout(I)Lorg/springframework/boot/web/client/RestTemplateBuilder;[deprecated]
+#setReadTimeout(Ljava/time/Duration;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
*#setReadTimeout(I)Lorg/springframework/boot/web/client/RestTemplateBuilder;[deprecated]
@2.1.1.RELEASE
*#basicAuthorization(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/boot/web/client/RestTemplateBuilder;[deprecated]
@2.2.0.RELEASE
+#basicAuthentication(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#defaultHeader(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#setBufferRequestBody(Z)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#requestCustomizers([Lorg/springframework/boot/web/client/RestTemplateRequestCustomizer;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#requestCustomizers(Ljava/util/Collection;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#additionalRequestCustomizers([Lorg/springframework/boot/web/client/RestTemplateRequestCustomizer;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#additionalRequestCustomizers(Ljava/util/Collection;)Lorg/springframework/boot/web/client/RestTemplateBuilder;
+#buildRequestFactory()Lorg/springframework/http/client/ClientHttpRequestFactory;
-#basicAuthorization(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/boot/web/client/RestTemplateBuilder;[deprecated]
-#setConnectTimeout(I)Lorg/springframework/boot/web/client/RestTemplateBuilder;[deprecated]
-#setReadTimeout(I)Lorg/springframework/boot/web/client/RestTemplateBuilder;[deprecated]
@3.0.0
+#requestFactory(Ljava/util/function/Function;)Lorg/springframework/boot/web/client/RestTemplateBuilder;

+###org/springframework/boot/jdbc/XADataSourceWrapper
@2.0.0.RELEASE
+#wrapDataSource(Ljavax/sql/XADataSource;)Ljavax/sql/DataSource;

+###org/springframework/boot/system/ApplicationHome
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#getSource()Ljava/io/File;
+#getDir()Ljava/io/File;
+#toString()Ljava/lang/String;

+###org/springframework/boot/json/JsonParseException
@2.0.1.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Throwable;)V

+###org/springframework/boot/context/embedded/tomcat/ServletContextInitializerLifecycleListener
@1.0.0.RELEASE
+#<init>([Lorg/springframework/boot/context/embedded/ServletContextInitializer;)V
+#lifecycleEvent(Lorg/apache/catalina/LifecycleEvent;)V
@1.1.2.RELEASE
+#getStartUpException()Ljava/lang/Exception;
@1.2.1.RELEASE
-###org/springframework/boot/context/embedded/tomcat/ServletContextInitializerLifecycleListener

+###org/springframework/boot/cloudfoundry/VcapApplicationListener
@1.0.0.RELEASE
+#<init>()V
+#setOrder(I)V
+#getOrder()I
+#onApplicationEvent(Lorg/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.3.0.RELEASE
-###org/springframework/boot/cloudfoundry/VcapApplicationListener

+###org/springframework/boot/yaml/YamlProcessor$DocumentMatcher
@1.0.0.RELEASE
+#matches(Ljava/util/Properties;)Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;
@1.2.0.RELEASE
-###org/springframework/boot/yaml/YamlProcessor$DocumentMatcher

+###org/springframework/boot/yaml/YamlProcessor$MatchCallback
@1.0.0.RELEASE
+#process(Ljava/util/Properties;Ljava/util/Map;)V
@1.2.0.RELEASE
-###org/springframework/boot/yaml/YamlProcessor$MatchCallback

+###org/springframework/boot/yaml/YamlProcessor$MatchStatus
@1.0.0.RELEASE
+#values()[Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;
+#getMostSpecific(Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;)Lorg/springframework/boot/yaml/YamlProcessor$MatchStatus;
@1.2.0.RELEASE
-###org/springframework/boot/yaml/YamlProcessor$MatchStatus

+###org/springframework/boot/yaml/YamlProcessor
@1.0.0.RELEASE
+#<init>()V
+#setDocumentMatchers([Lorg/springframework/boot/yaml/YamlProcessor$DocumentMatcher;)V
+#setMatchDefault(Z)V
+#setResolutionMethod(Lorg/springframework/boot/yaml/YamlProcessor$ResolutionMethod;)V
+#setResources([Lorg/springframework/core/io/Resource;)V
@1.2.0.RELEASE
-###org/springframework/boot/yaml/YamlProcessor

+###org/springframework/boot/yaml/YamlMapFactoryBean
@1.0.0.RELEASE
+#<init>()V
+#getObject()Ljava/util/Map;
+#getObjectType()Ljava/lang/Class;
+#setSingleton(Z)V
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@1.2.0.RELEASE
-###org/springframework/boot/yaml/YamlMapFactoryBean

+###org/springframework/boot/yaml/YamlProcessor$ResolutionMethod
@1.0.0.RELEASE
+#values()[Lorg/springframework/boot/yaml/YamlProcessor$ResolutionMethod;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/yaml/YamlProcessor$ResolutionMethod;
@1.2.0.RELEASE
-###org/springframework/boot/yaml/YamlProcessor$ResolutionMethod

+###org/springframework/boot/yaml/YamlPropertiesFactoryBean
@1.0.0.RELEASE
+#<init>()V
+#getObject()Ljava/util/Properties;
+#getObjectType()Ljava/lang/Class;
+#setSingleton(Z)V
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@1.2.0.RELEASE
-###org/springframework/boot/yaml/YamlPropertiesFactoryBean

+###org/springframework/boot/json/SimpleJsonParser
@1.0.0.RELEASE
+#<init>()V
+#parseMap(Ljava/lang/String;)Ljava/util/Map;
+#parseList(Ljava/lang/String;)Ljava/util/List;
@1.2.0.RELEASE
-#parseMap(Ljava/lang/String;)Ljava/util/Map;
-#parseList(Ljava/lang/String;)Ljava/util/List;
@1.3.0.RELEASE
-###org/springframework/boot/json/SimpleJsonParser

+###org/springframework/boot/orm/jpa/SpringNamingStrategy
@1.0.0.RELEASE
+#<init>()V
+#foreignKeyColumnName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.2.0.RELEASE
-#foreignKeyColumnName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.3.0.RELEASE
-###org/springframework/boot/orm/jpa/SpringNamingStrategy

+###org/springframework/boot/r2dbc/EmbeddedDatabaseConnection
@2.5.0
+#values()[Lorg/springframework/boot/r2dbc/EmbeddedDatabaseConnection;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/r2dbc/EmbeddedDatabaseConnection;
+#getDriverClassName()Ljava/lang/String;
+#getUrl(Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/ClassLoader;)Lorg/springframework/boot/r2dbc/EmbeddedDatabaseConnection;
@2.5.1
+#isEmbedded(Lio/r2dbc/spi/ConnectionFactory;)Z

+###org/springframework/boot/r2dbc/ConnectionFactoryBuilder
@2.5.0
+#withUrl(Ljava/lang/String;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;
+#withOptions(Lio/r2dbc/spi/ConnectionFactoryOptions$Builder;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;
+#derivefrom(Lio/r2dbc/spi/ConnectionFactory;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;
+#configure(Ljava/util/function/Consumer;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;
+#username(Ljava/lang/String;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;
+#password(Ljava/lang/CharSequence;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;
+#hostname(Ljava/lang/String;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;
+#port(I)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;
+#database(Ljava/lang/String;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;
+#build()Lio/r2dbc/spi/ConnectionFactory;
+#buildOptions()Lio/r2dbc/spi/ConnectionFactoryOptions;
@2.5.1
*#derivefrom(Lio/r2dbc/spi/ConnectionFactory;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;[deprecated]
+#derivedFrom(Lio/r2dbc/spi/ConnectionFactory;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;
@2.7.0
-#derivefrom(Lio/r2dbc/spi/ConnectionFactory;)Lorg/springframework/boot/r2dbc/ConnectionFactoryBuilder;[deprecated]

+###org/springframework/boot/r2dbc/init/R2dbcScriptDatabaseInitializer
@2.5.0
+#<init>(Lio/r2dbc/spi/ConnectionFactory;Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;)V

+###org/springframework/boot/r2dbc/OptionsCapableConnectionFactory
@2.5.0
+#<init>(Lio/r2dbc/spi/ConnectionFactoryOptions;Lio/r2dbc/spi/ConnectionFactory;)V
+#getOptions()Lio/r2dbc/spi/ConnectionFactoryOptions;
+#create()Lorg/reactivestreams/Publisher;
+#getMetadata()Lio/r2dbc/spi/ConnectionFactoryMetadata;
+#unwrap()Lio/r2dbc/spi/ConnectionFactory;
+#unwrap()Ljava/lang/Object;
@2.5.1
+#unwrapFrom(Lio/r2dbc/spi/ConnectionFactory;)Lorg/springframework/boot/r2dbc/OptionsCapableConnectionFactory;

+###org/springframework/boot/origin/OriginTrackedResource$OriginTrackedWritableResource
@2.4.0
+#getResource()Lorg/springframework/core/io/WritableResource;
+#getOutputStream()Ljava/io/OutputStream;
+#getResource()Lorg/springframework/core/io/Resource;

+###org/springframework/boot/origin/OriginTrackedResource
@2.4.0
+#getInputStream()Ljava/io/InputStream;
+#exists()Z
+#isReadable()Z
+#isOpen()Z
+#isFile()Z
+#getURL()Ljava/net/URL;
+#getURI()Ljava/net/URI;
+#getFile()Ljava/io/File;
+#readableChannel()Ljava/nio/channels/ReadableByteChannel;
+#contentLength()J
+#lastModified()J
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
+#getFilename()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#getResource()Lorg/springframework/core/io/Resource;
+#getOrigin()Lorg/springframework/boot/origin/Origin;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#of(Lorg/springframework/core/io/WritableResource;Lorg/springframework/boot/origin/Origin;)Lorg/springframework/boot/origin/OriginTrackedResource$OriginTrackedWritableResource;
+#of(Lorg/springframework/core/io/Resource;Lorg/springframework/boot/origin/Origin;)Lorg/springframework/boot/origin/OriginTrackedResource;

+###org/springframework/boot/util/Instantiator
@2.4.0
+#<init>(Ljava/lang/Class;Ljava/util/function/Consumer;)V
+#instantiate(Ljava/util/Collection;)Ljava/util/List;
@2.4.8
+#instantiate(Ljava/lang/ClassLoader;Ljava/util/Collection;)Ljava/util/List;
+#instantiateTypes(Ljava/util/Collection;)Ljava/util/List;
@2.5.0
-#instantiate(Ljava/lang/ClassLoader;Ljava/util/Collection;)Ljava/util/List;
-#instantiateTypes(Ljava/util/Collection;)Ljava/util/List;
@2.5.2
+#instantiate(Ljava/lang/ClassLoader;Ljava/util/Collection;)Ljava/util/List;
+#instantiateTypes(Ljava/util/Collection;)Ljava/util/List;
@2.7.0
+#<init>(Ljava/lang/Class;Ljava/util/function/Consumer;Lorg/springframework/boot/util/Instantiator$FailureHandler;)V

+###org/springframework/boot/util/LambdaSafe$LambdaSafeCallback
@2.2.0.RELEASE
+#withLogger(Ljava/lang/Class;)Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;
+#withLogger(Lorg/apache/commons/logging/Log;)Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;

+###org/springframework/boot/util/Instantiator$AvailableParameters
@2.4.0
+#add(Ljava/lang/Class;Ljava/lang/Object;)V
+#add(Ljava/lang/Class;Ljava/util/function/Function;)V

+###org/springframework/boot/DefaultBootstrapContext
@2.4.0
+#<init>()V
+#register(Ljava/lang/Class;Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;)V
+#registerIfAbsent(Ljava/lang/Class;Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;)V
+#isRegistered(Ljava/lang/Class;)Z
+#getRegisteredInstanceSupplier(Ljava/lang/Class;)Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;
+#addCloseListener(Lorg/springframework/context/ApplicationListener;)V
+#get(Ljava/lang/Class;)Ljava/lang/Object;
+#getOrElse(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getOrElseSupply(Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/lang/Object;
+#getOrElseThrow(Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/lang/Object;
+#close(Lorg/springframework/context/ConfigurableApplicationContext;)V

+###org/springframework/boot/info/JavaInfo$JavaVirtualMachineInfo
@2.6.0
+#<init>()V
+#getName()Ljava/lang/String;
+#getVendor()Ljava/lang/String;
+#getVersion()Ljava/lang/String;

+###org/springframework/boot/info/JavaInfo$JavaRuntimeEnvironmentInfo
@2.6.0
+#<init>()V
+#getName()Ljava/lang/String;
+#getVersion()Ljava/lang/String;

+###org/springframework/boot/info/JavaInfo
@2.6.0
+#<init>()V
+#getVendor()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getRuntime()Lorg/springframework/boot/info/JavaInfo$JavaRuntimeEnvironmentInfo;
+#getJvm()Lorg/springframework/boot/info/JavaInfo$JavaVirtualMachineInfo;
@2.7.0
+#getVendor()Lorg/springframework/boot/info/JavaInfo$JavaVendorInfo;
-#getVendor()Ljava/lang/String;

+###org/springframework/boot/ConfigurableBootstrapContext
@2.4.0

+###org/springframework/boot/jackson/JsonComponent$Scope
@2.2.0.RELEASE
+#values()[Lorg/springframework/boot/jackson/JsonComponent$Scope;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/jackson/JsonComponent$Scope;

+###org/springframework/boot/sql/init/DatabaseInitializationSettings
@2.5.0
+#<init>()V
+#getSchemaLocations()Ljava/util/List;
+#setSchemaLocations(Ljava/util/List;)V
+#getDataLocations()Ljava/util/List;
+#setDataLocations(Ljava/util/List;)V
+#isContinueOnError()Z
+#setContinueOnError(Z)V
+#getSeparator()Ljava/lang/String;
+#setSeparator(Ljava/lang/String;)V
+#getEncoding()Ljava/nio/charset/Charset;
+#setEncoding(Ljava/nio/charset/Charset;)V
@2.5.1
+#getMode()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
+#setMode(Lorg/springframework/boot/sql/init/DatabaseInitializationMode;)V

+###org/springframework/boot/sql/init/dependency/DependsOnDatabaseInitializationDetector
@2.5.0
+#detect(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Ljava/util/Set;

+###org/springframework/boot/sql/init/dependency/AbstractBeansOfTypeDatabaseInitializerDetector
@2.5.0
+#<init>()V
+#detect(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Ljava/util/Set;

+###org/springframework/boot/sql/init/dependency/DatabaseInitializationDependencyConfigurer
@2.5.0
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@2.5.9
+#<init>()V
@2.6.0
-#<init>()V
@2.6.3
+#<init>()V

+###org/springframework/boot/sql/init/dependency/AbstractBeansOfTypeDependsOnDatabaseInitializationDetector
@2.5.0
+#<init>()V
+#detect(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Ljava/util/Set;

+###org/springframework/boot/sql/init/dependency/DatabaseInitializerDetector
@2.5.0
+#detect(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Ljava/util/Set;
+#detectionComplete(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljava/util/Set;)V
@2.5.1
+#getOrder()I

+###org/springframework/boot/sql/init/dependency/DependsOnDatabaseInitialization
@2.5.0

+###org/springframework/boot/sql/init/DatabaseInitializationMode
@2.5.1
+#values()[Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/sql/init/DatabaseInitializationMode;

+###org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer
@2.5.0
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#afterPropertiesSet()V
+#initializeDatabase()Z

+###org/springframework/boot/task/TaskExecutorBuilder
@2.1.0.RELEASE
+#<init>()V
+#queueCapacity(I)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#corePoolSize(I)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#maxPoolSize(I)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#allowCoreThreadTimeOut(Z)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#keepAlive(Ljava/time/Duration;)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#threadNamePrefix(Ljava/lang/String;)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#taskDecorator(Lorg/springframework/core/task/TaskDecorator;)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#customizers([Lorg/springframework/boot/task/TaskExecutorCustomizer;)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#customizers(Ljava/lang/Iterable;)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#additionalCustomizers([Lorg/springframework/boot/task/TaskExecutorCustomizer;)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#additionalCustomizers(Ljava/lang/Iterable;)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#build()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
+#build(Ljava/lang/Class;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
+#configure(Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
@2.2.0.RELEASE
+#awaitTermination(Z)Lorg/springframework/boot/task/TaskExecutorBuilder;
+#awaitTerminationPeriod(Ljava/time/Duration;)Lorg/springframework/boot/task/TaskExecutorBuilder;

+###org/springframework/boot/task/TaskSchedulerBuilder
@2.1.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Set;)V
+#poolSize(I)Lorg/springframework/boot/task/TaskSchedulerBuilder;
+#threadNamePrefix(Ljava/lang/String;)Lorg/springframework/boot/task/TaskSchedulerBuilder;
+#customizers([Lorg/springframework/boot/task/TaskSchedulerCustomizer;)Lorg/springframework/boot/task/TaskSchedulerBuilder;
+#customizers(Ljava/lang/Iterable;)Lorg/springframework/boot/task/TaskSchedulerBuilder;
+#additionalCustomizers([Lorg/springframework/boot/task/TaskSchedulerCustomizer;)Lorg/springframework/boot/task/TaskSchedulerBuilder;
+#additionalCustomizers(Ljava/lang/Iterable;)Lorg/springframework/boot/task/TaskSchedulerBuilder;
+#build()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
+#configure(Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
@2.2.0.RELEASE
+#<init>(Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/time/Duration;Ljava/lang/String;Ljava/util/Set;)V
+#awaitTermination(Z)Lorg/springframework/boot/task/TaskSchedulerBuilder;
+#awaitTerminationPeriod(Ljava/time/Duration;)Lorg/springframework/boot/task/TaskSchedulerBuilder;
-#<init>(Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Set;)V

+###org/springframework/boot/task/TaskSchedulerCustomizer
@2.1.0.RELEASE
+#customize(Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;)V

+###org/springframework/boot/task/TaskExecutorCustomizer
@2.1.0.RELEASE
+#customize(Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;)V

+###org/springframework/boot/context/config/ConfigDataLocationResolverContext
@2.4.0
+#getBinder()Lorg/springframework/boot/context/properties/bind/Binder;
+#getParent()Lorg/springframework/boot/context/config/ConfigDataResource;
+#getBootstrapContext()Lorg/springframework/boot/ConfigurableBootstrapContext;

+###org/springframework/boot/context/config/ConfigDataNotFoundAction
@2.4.0
+#values()[Lorg/springframework/boot/context/config/ConfigDataNotFoundAction;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/context/config/ConfigDataNotFoundAction;

+###org/springframework/boot/context/config/StandardConfigDataLocationResolver
@2.4.0
+#<init>(Lorg/apache/commons/logging/Log;Lorg/springframework/boot/context/properties/bind/Binder;Lorg/springframework/core/io/ResourceLoader;)V
+#getOrder()I
+#isResolvable(Lorg/springframework/boot/context/config/ConfigDataLocationResolverContext;Lorg/springframework/boot/context/config/ConfigDataLocation;)Z
+#resolve(Lorg/springframework/boot/context/config/ConfigDataLocationResolverContext;Lorg/springframework/boot/context/config/ConfigDataLocation;)Ljava/util/List;
+#resolveProfileSpecific(Lorg/springframework/boot/context/config/ConfigDataLocationResolverContext;Lorg/springframework/boot/context/config/ConfigDataLocation;Lorg/springframework/boot/context/config/Profiles;)Ljava/util/List;
@3.0.0
+#<init>(Lorg/springframework/boot/logging/DeferredLogFactory;Lorg/springframework/boot/context/properties/bind/Binder;Lorg/springframework/core/io/ResourceLoader;)V
-#<init>(Lorg/apache/commons/logging/Log;Lorg/springframework/boot/context/properties/bind/Binder;Lorg/springframework/core/io/ResourceLoader;)V

+###org/springframework/boot/context/config/ConfigData$PropertySourceOptions
@2.4.5
+#get(Lorg/springframework/core/env/PropertySource;)Lorg/springframework/boot/context/config/ConfigData$Options;
+#always([Lorg/springframework/boot/context/config/ConfigData$Option;)Lorg/springframework/boot/context/config/ConfigData$PropertySourceOptions;
+#always(Lorg/springframework/boot/context/config/ConfigData$Options;)Lorg/springframework/boot/context/config/ConfigData$PropertySourceOptions;

+###org/springframework/boot/context/config/ConfigDataException
@2.4.0

+###org/springframework/boot/context/config/ConfigData$Option
@2.4.0
+#values()[Lorg/springframework/boot/context/config/ConfigData$Option;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/context/config/ConfigData$Option;

+###org/springframework/boot/context/config/ConfigData
@2.4.0
+#<init>(Ljava/util/Collection;[Lorg/springframework/boot/context/config/ConfigData$Option;)V
+#getPropertySources()Ljava/util/List;
+#getOptions()Ljava/util/Set;
@2.4.5
+#<init>(Ljava/util/Collection;Lorg/springframework/boot/context/config/ConfigData$PropertySourceOptions;)V
*#getOptions()Ljava/util/Set;[deprecated]
+#getOptions(Lorg/springframework/core/env/PropertySource;)Lorg/springframework/boot/context/config/ConfigData$Options;
@3.0.0
-#getOptions()Ljava/util/Set;[deprecated]

+###org/springframework/boot/context/config/ConfigDataLoaderContext
@2.4.0
+#getBootstrapContext()Lorg/springframework/boot/ConfigurableBootstrapContext;

+###org/springframework/boot/context/config/ConfigDataResourceNotFoundException
@2.4.0
+#<init>(Lorg/springframework/boot/context/config/ConfigDataResource;)V
+#<init>(Lorg/springframework/boot/context/config/ConfigDataResource;Ljava/lang/Throwable;)V
+#getResource()Lorg/springframework/boot/context/config/ConfigDataResource;
+#getLocation()Lorg/springframework/boot/context/config/ConfigDataLocation;
+#getOrigin()Lorg/springframework/boot/origin/Origin;
+#getReferenceDescription()Ljava/lang/String;
+#throwIfDoesNotExist(Lorg/springframework/boot/context/config/ConfigDataResource;Ljava/nio/file/Path;)V
+#throwIfDoesNotExist(Lorg/springframework/boot/context/config/ConfigDataResource;Ljava/io/File;)V
+#throwIfDoesNotExist(Lorg/springframework/boot/context/config/ConfigDataResource;Lorg/springframework/core/io/Resource;)V

+###org/springframework/boot/context/config/ConfigTreeConfigDataLoader
@2.4.0
+#<init>()V
+#load(Lorg/springframework/boot/context/config/ConfigDataLoaderContext;Lorg/springframework/boot/context/config/ConfigTreeConfigDataResource;)Lorg/springframework/boot/context/config/ConfigData;
+#load(Lorg/springframework/boot/context/config/ConfigDataLoaderContext;Lorg/springframework/boot/context/config/ConfigDataResource;)Lorg/springframework/boot/context/config/ConfigData;

+###org/springframework/boot/context/config/ConfigDataResource
@2.4.0
+#<init>()V

+###org/springframework/boot/context/config/ConfigTreeConfigDataLocationResolver
@2.4.0
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
+#isResolvable(Lorg/springframework/boot/context/config/ConfigDataLocationResolverContext;Lorg/springframework/boot/context/config/ConfigDataLocation;)Z
+#resolve(Lorg/springframework/boot/context/config/ConfigDataLocationResolverContext;Lorg/springframework/boot/context/config/ConfigDataLocation;)Ljava/util/List;

+###org/springframework/boot/context/config/StandardConfigDataLoader
@2.4.0
+#<init>()V
+#load(Lorg/springframework/boot/context/config/ConfigDataLoaderContext;Lorg/springframework/boot/context/config/StandardConfigDataResource;)Lorg/springframework/boot/context/config/ConfigData;
+#load(Lorg/springframework/boot/context/config/ConfigDataLoaderContext;Lorg/springframework/boot/context/config/ConfigDataResource;)Lorg/springframework/boot/context/config/ConfigData;

+###org/springframework/boot/context/config/InvalidConfigDataPropertyException
@2.4.0
+#getProperty()Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
+#getLocation()Lorg/springframework/boot/context/config/ConfigDataResource;
+#getReplacement()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;

+###org/springframework/boot/context/config/Profiles
@2.4.0
+#iterator()Ljava/util/Iterator;
+#getActive()Ljava/util/List;
+#getDefault()Ljava/util/List;
+#getAccepted()Ljava/util/List;
+#isAccepted(Ljava/lang/String;)Z
+#toString()Ljava/lang/String;

+###org/springframework/boot/context/config/ConfigDataEnvironmentPostProcessor
@2.4.0
+#<init>(Lorg/springframework/boot/logging/DeferredLogFactory;Lorg/springframework/boot/ConfigurableBootstrapContext;)V
+#getOrder()I
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V
+#applyTo(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#applyTo(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/ConfigurableBootstrapContext;[Ljava/lang/String;)V
+#applyTo(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/ConfigurableBootstrapContext;Ljava/util/Collection;)V
@2.4.2
+#<init>(Lorg/springframework/boot/logging/DeferredLogFactory;Lorg/springframework/boot/ConfigurableBootstrapContext;Lorg/springframework/boot/context/config/ConfigDataEnvironmentUpdateListener;)V
+#applyTo(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/ConfigurableBootstrapContext;Ljava/util/Collection;Lorg/springframework/boot/context/config/ConfigDataEnvironmentUpdateListener;)V
@3.0.0
-#<init>(Lorg/springframework/boot/logging/DeferredLogFactory;Lorg/springframework/boot/ConfigurableBootstrapContext;Lorg/springframework/boot/context/config/ConfigDataEnvironmentUpdateListener;)V

+###org/springframework/boot/context/config/ConfigData$Options
@2.4.5
+#contains(Lorg/springframework/boot/context/config/ConfigData$Option;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#of([Lorg/springframework/boot/context/config/ConfigData$Option;)Lorg/springframework/boot/context/config/ConfigData$Options;
@2.5.0
+#without(Lorg/springframework/boot/context/config/ConfigData$Option;)Lorg/springframework/boot/context/config/ConfigData$Options;
+#with(Lorg/springframework/boot/context/config/ConfigData$Option;)Lorg/springframework/boot/context/config/ConfigData$Options;

+###org/springframework/boot/context/config/ConfigDataLocationNotFoundException
@2.4.0
+#<init>(Lorg/springframework/boot/context/config/ConfigDataLocation;)V
+#<init>(Lorg/springframework/boot/context/config/ConfigDataLocation;Ljava/lang/Throwable;)V
+#getLocation()Lorg/springframework/boot/context/config/ConfigDataLocation;
+#getOrigin()Lorg/springframework/boot/origin/Origin;
+#getReferenceDescription()Ljava/lang/String;
@2.4.7
+#<init>(Lorg/springframework/boot/context/config/ConfigDataLocation;Ljava/lang/String;Ljava/lang/Throwable;)V
@2.5.0
-#<init>(Lorg/springframework/boot/context/config/ConfigDataLocation;Ljava/lang/String;Ljava/lang/Throwable;)V
@2.5.1
+#<init>(Lorg/springframework/boot/context/config/ConfigDataLocation;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/boot/context/config/ConfigDataNotFoundException
@2.4.0
+#getReferenceDescription()Ljava/lang/String;

+###org/springframework/boot/context/config/ConfigDataEnvironmentUpdateListener
@2.4.2
+#onPropertySourceAdded(Lorg/springframework/core/env/PropertySource;Lorg/springframework/boot/context/config/ConfigDataLocation;Lorg/springframework/boot/context/config/ConfigDataResource;)V
+#onSetProfiles(Lorg/springframework/boot/context/config/Profiles;)V

+###org/springframework/boot/context/config/InactiveConfigDataAccessException
@2.4.0
+#getPropertySource()Lorg/springframework/core/env/PropertySource;
+#getLocation()Lorg/springframework/boot/context/config/ConfigDataResource;
+#getPropertyName()Ljava/lang/String;
+#getOrigin()Lorg/springframework/boot/origin/Origin;

+###org/springframework/boot/context/config/ConfigDataLoader
@2.4.0
+#isLoadable(Lorg/springframework/boot/context/config/ConfigDataLoaderContext;Lorg/springframework/boot/context/config/ConfigDataResource;)Z
+#load(Lorg/springframework/boot/context/config/ConfigDataLoaderContext;Lorg/springframework/boot/context/config/ConfigDataResource;)Lorg/springframework/boot/context/config/ConfigData;

+###org/springframework/boot/context/config/ConfigDataLocation
@2.4.0
+#isOptional()Z
+#getValue()Ljava/lang/String;
+#hasPrefix(Ljava/lang/String;)Z
+#getNonPrefixedValue(Ljava/lang/String;)Ljava/lang/String;
+#getOrigin()Lorg/springframework/boot/origin/Origin;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#of(Ljava/lang/String;)Lorg/springframework/boot/context/config/ConfigDataLocation;
@2.4.7
+#split()[Lorg/springframework/boot/context/config/ConfigDataLocation;
+#split(Ljava/lang/String;)[Lorg/springframework/boot/context/config/ConfigDataLocation;
@2.5.0
-#split()[Lorg/springframework/boot/context/config/ConfigDataLocation;
-#split(Ljava/lang/String;)[Lorg/springframework/boot/context/config/ConfigDataLocation;
@2.5.1
+#split()[Lorg/springframework/boot/context/config/ConfigDataLocation;
+#split(Ljava/lang/String;)[Lorg/springframework/boot/context/config/ConfigDataLocation;

+###org/springframework/boot/context/config/ConfigTreeConfigDataResource
@2.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/boot/context/config/UnsupportedConfigDataLocationException
@2.4.0
+#getLocation()Lorg/springframework/boot/context/config/ConfigDataLocation;

+###org/springframework/boot/context/config/StandardConfigDataResource
@2.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.4.2
+#getResource()Lorg/springframework/core/io/Resource;
@2.4.6
+#getProfile()Ljava/lang/String;

+###org/springframework/boot/context/config/ConfigDataLocationResolver
@2.4.0
+#isResolvable(Lorg/springframework/boot/context/config/ConfigDataLocationResolverContext;Lorg/springframework/boot/context/config/ConfigDataLocation;)Z
+#resolve(Lorg/springframework/boot/context/config/ConfigDataLocationResolverContext;Lorg/springframework/boot/context/config/ConfigDataLocation;)Ljava/util/List;
+#resolveProfileSpecific(Lorg/springframework/boot/context/config/ConfigDataLocationResolverContext;Lorg/springframework/boot/context/config/ConfigDataLocation;Lorg/springframework/boot/context/config/Profiles;)Ljava/util/List;

+###org/springframework/boot/context/metrics/buffering/StartupTimeline$TimelineEvent
@2.4.0
+#getStartTime()Ljava/time/Instant;
+#getEndTime()Ljava/time/Instant;
+#getDuration()Ljava/time/Duration;
+#getStartupStep()Lorg/springframework/core/metrics/StartupStep;

+###org/springframework/boot/context/metrics/buffering/BufferingApplicationStartup
@2.4.0
+#<init>(I)V
+#startRecording()V
+#addFilter(Ljava/util/function/Predicate;)V
+#getBufferedTimeline()Lorg/springframework/boot/context/metrics/buffering/StartupTimeline;
+#drainBufferedTimeline()Lorg/springframework/boot/context/metrics/buffering/StartupTimeline;
+#start(Ljava/lang/String;)Lorg/springframework/core/metrics/StartupStep;

+###org/springframework/boot/context/metrics/buffering/StartupTimeline
@2.4.0
+#getStartTime()Ljava/time/Instant;
+#getEvents()Ljava/util/List;

+###org/springframework/boot/context/properties/ConstructorBinding
@2.2.0.RELEASE

+###org/springframework/boot/context/properties/BoundConfigurationProperties
@2.3.0.RELEASE
+#<init>()V
+#get(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
+#getAll()Ljava/util/Map;
+#get(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/context/properties/BoundConfigurationProperties;

+###org/springframework/boot/context/properties/ConfigurationPropertiesBean$BindMethod
@2.2.0.RELEASE
+#values()[Lorg/springframework/boot/context/properties/ConfigurationPropertiesBean$BindMethod;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/context/properties/ConfigurationPropertiesBean$BindMethod;

+###org/springframework/boot/context/properties/source/MutuallyExclusiveConfigurationPropertiesException
@2.6.0
+#<init>(Ljava/util/Collection;Ljava/util/Collection;)V
+#getConfiguredNames()Ljava/util/Set;
+#getMutuallyExclusiveNames()Ljava/util/Set;
+#throwIfMultipleNonNullValuesIn(Ljava/util/function/Consumer;)V

+###org/springframework/boot/context/properties/source/ConfigurationPropertyCaching
@2.3.0.RELEASE
+#enable()V
+#disable()V
+#setTimeToLive(Ljava/time/Duration;)V
+#clear()V
+#get(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyCaching;
+#get(Lorg/springframework/core/env/Environment;Ljava/lang/Object;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyCaching;
+#get(Ljava/lang/Iterable;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyCaching;
+#get(Ljava/lang/Iterable;Ljava/lang/Object;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyCaching;

+###org/springframework/boot/context/properties/ConfigurationPropertiesBindHandlerAdvisor
@2.1.0.RELEASE
+#apply(Lorg/springframework/boot/context/properties/bind/BindHandler;)Lorg/springframework/boot/context/properties/bind/BindHandler;

+###org/springframework/boot/context/properties/IncompatibleConfigurationException
@2.4.0
+#<init>([Ljava/lang/String;)V
+#getIncompatibleKeys()Ljava/util/Collection;

+###org/springframework/boot/context/properties/bind/DataObjectPropertyName
@2.2.3.RELEASE
+#toDashedForm(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/boot/context/properties/bind/BoundPropertiesTrackingBindHandler
@2.3.0.RELEASE
+#<init>(Ljava/util/function/Consumer;)V
+#onSuccess(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/boot/context/properties/bind/Name
@2.4.0
+#value()Ljava/lang/String;

+###org/springframework/boot/context/properties/bind/BindConstructorProvider
@2.2.1.RELEASE
+#getBindConstructor(Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/lang/reflect/Constructor;
@2.2.2.RELEASE
+#getBindConstructor(Lorg/springframework/boot/context/properties/bind/Bindable;Z)Ljava/lang/reflect/Constructor;
-#getBindConstructor(Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/lang/reflect/Constructor;
@3.0.0
+#getBindConstructor(Ljava/lang/Class;Z)Ljava/lang/reflect/Constructor;

+###org/springframework/boot/context/properties/bind/DefaultValue
@2.2.0.RELEASE
+#value()[Ljava/lang/String;

+###org/springframework/boot/context/properties/bind/Bindable$BindRestriction
@2.5.0
+#values()[Lorg/springframework/boot/context/properties/bind/Bindable$BindRestriction;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/context/properties/bind/Bindable$BindRestriction;

+###org/springframework/boot/context/properties/ConfigurationPropertiesScan
@2.2.0.RELEASE
+#value()[Ljava/lang/String;
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;

+###org/springframework/boot/context/properties/ConfigurationPropertiesBean
@2.2.0.RELEASE
+#getName()Ljava/lang/String;
+#getInstance()Ljava/lang/Object;
+#getBindMethod()Lorg/springframework/boot/context/properties/ConfigurationPropertiesBean$BindMethod;
+#getAnnotation()Lorg/springframework/boot/context/properties/ConfigurationProperties;
+#asBindTarget()Lorg/springframework/boot/context/properties/bind/Bindable;
+#getAll(Lorg/springframework/context/ApplicationContext;)Ljava/util/Map;
+#get(Lorg/springframework/context/ApplicationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/boot/context/properties/ConfigurationPropertiesBean;

+###org/springframework/boot/context/event/ApplicationContextInitializedEvent
@2.1.0.RELEASE
+#<init>(Lorg/springframework/boot/SpringApplication;[Ljava/lang/String;Lorg/springframework/context/ConfigurableApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ConfigurableApplicationContext;

+###org/springframework/boot/webservices/client/WebServiceTemplateCustomizer
@2.1.0.RELEASE
+#customize(Lorg/springframework/ws/client/core/WebServiceTemplate;)V

+###org/springframework/boot/webservices/client/WebServiceTemplateBuilder
@2.1.0.RELEASE
+#<init>([Lorg/springframework/boot/webservices/client/WebServiceTemplateCustomizer;)V
+#detectHttpMessageSender(Z)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#messageSenders([Lorg/springframework/ws/transport/WebServiceMessageSender;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#messageSenders(Ljava/util/Collection;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#additionalMessageSenders([Lorg/springframework/ws/transport/WebServiceMessageSender;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#additionalMessageSenders(Ljava/util/Collection;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#interceptors([Lorg/springframework/ws/client/support/interceptor/ClientInterceptor;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#interceptors(Ljava/util/Collection;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#additionalInterceptors([Lorg/springframework/ws/client/support/interceptor/ClientInterceptor;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#additionalInterceptors(Ljava/util/Collection;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#customizers([Lorg/springframework/boot/webservices/client/WebServiceTemplateCustomizer;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#customizers(Ljava/util/Collection;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#additionalCustomizers([Lorg/springframework/boot/webservices/client/WebServiceTemplateCustomizer;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#additionalCustomizers(Ljava/util/Collection;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#setCheckConnectionForFault(Z)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#setCheckConnectionForError(Z)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#setWebServiceMessageFactory(Lorg/springframework/ws/WebServiceMessageFactory;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#setUnmarshaller(Lorg/springframework/oxm/Unmarshaller;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#setMarshaller(Lorg/springframework/oxm/Marshaller;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#setFaultMessageResolver(Lorg/springframework/ws/client/core/FaultMessageResolver;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#setTransformerFactoryClass(Ljava/lang/Class;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#setDefaultUri(Ljava/lang/String;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#setDestinationProvider(Lorg/springframework/ws/client/support/destination/DestinationProvider;)Lorg/springframework/boot/webservices/client/WebServiceTemplateBuilder;
+#build()Lorg/springframework/ws/client/core/WebServiceTemplate;
+#build(Ljava/lang/Class;)Lorg/springframework/ws/client/core/WebServiceTemplate;
+#configure(Lorg/springframework/ws/client/core/WebServiceTemplate;)Lorg/springframework/ws/client/core/WebServiceTemplate;

+###org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder
@2.1.0.RELEASE
+#<init>()V
+#setConnectTimeout(Ljava/time/Duration;)Lorg/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder;
+#setReadTimeout(Ljava/time/Duration;)Lorg/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder;
+#requestFactory(Ljava/util/function/Supplier;)Lorg/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder;
+#build()Lorg/springframework/ws/transport/WebServiceMessageSender;
@3.0.0
+#requestFactory(Ljava/util/function/Function;)Lorg/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder;

+###org/springframework/boot/DefaultPropertiesPropertySource
@2.4.0
+#<init>(Ljava/util/Map;)V
+#hasMatchingName(Lorg/springframework/core/env/PropertySource;)Z
+#ifNotEmpty(Ljava/util/Map;Ljava/util/function/Consumer;)V
+#moveToEnd(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#moveToEnd(Lorg/springframework/core/env/MutablePropertySources;)V
@2.4.4
+#addOrMerge(Ljava/util/Map;Lorg/springframework/core/env/MutablePropertySources;)V

+###org/springframework/boot/LazyInitializationExcludeFilter
@2.2.0.RELEASE
+#isExcluded(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;Ljava/lang/Class;)Z
+#forBeanTypes([Ljava/lang/Class;)Lorg/springframework/boot/LazyInitializationExcludeFilter;

+###org/springframework/boot/jdbc/UnsupportedDataSourcePropertyException
@2.5.0

+###org/springframework/boot/jdbc/init/PlatformPlaceholderDatabaseDriverResolver
@2.6.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#withDriverPlatform(Lorg/springframework/boot/jdbc/DatabaseDriver;Ljava/lang/String;)Lorg/springframework/boot/jdbc/init/PlatformPlaceholderDatabaseDriverResolver;
+#resolveAll(Ljavax/sql/DataSource;[Ljava/lang/String;)Ljava/util/List;
@2.6.2
+#resolveAll(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;

+###org/springframework/boot/jdbc/init/DataSourceScriptDatabaseInitializer
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;)V

+###org/springframework/boot/jdbc/metadata/OracleUcpDataSourcePoolMetadata
@2.4.0
+#<init>(Loracle/ucp/jdbc/PoolDataSource;)V
+#getActive()Ljava/lang/Integer;
+#getIdle()Ljava/lang/Integer;
+#getMax()Ljava/lang/Integer;
+#getMin()Ljava/lang/Integer;
+#getValidationQuery()Ljava/lang/String;
+#getDefaultAutoCommit()Ljava/lang/Boolean;

+###org/springframework/boot/validation/beanvalidation/FilteredMethodValidationPostProcessor
@2.4.0
+#<init>(Ljava/util/stream/Stream;)V
+#<init>(Ljava/util/Collection;)V
+#afterPropertiesSet()V

+###org/springframework/boot/validation/beanvalidation/MethodValidationExcludeFilter
@2.4.0
+#isExcluded(Ljava/lang/Class;)Z
+#byAnnotation(Ljava/lang/Class;)Lorg/springframework/boot/validation/beanvalidation/MethodValidationExcludeFilter;
+#byAnnotation(Ljava/lang/Class;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;)Lorg/springframework/boot/validation/beanvalidation/MethodValidationExcludeFilter;

+###org/springframework/boot/availability/AvailabilityState
@2.3.0.RELEASE

+###org/springframework/boot/availability/ReadinessState
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/availability/ReadinessState;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/availability/ReadinessState;

+###org/springframework/boot/availability/ApplicationAvailabilityBean
@2.3.0.RELEASE
+#<init>()V
+#getState(Ljava/lang/Class;Lorg/springframework/boot/availability/AvailabilityState;)Lorg/springframework/boot/availability/AvailabilityState;
+#getState(Ljava/lang/Class;)Lorg/springframework/boot/availability/AvailabilityState;
+#getLastChangeEvent(Ljava/lang/Class;)Lorg/springframework/boot/availability/AvailabilityChangeEvent;
+#onApplicationEvent(Lorg/springframework/boot/availability/AvailabilityChangeEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/boot/availability/AvailabilityChangeEvent
@2.3.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/boot/availability/AvailabilityState;)V
+#getState()Lorg/springframework/boot/availability/AvailabilityState;
+#publish(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/availability/AvailabilityState;)V
+#publish(Lorg/springframework/context/ApplicationEventPublisher;Ljava/lang/Object;Lorg/springframework/boot/availability/AvailabilityState;)V
@2.3.2.RELEASE
+#getResolvableType()Lorg/springframework/core/ResolvableType;

+###org/springframework/boot/availability/ApplicationAvailability
@2.3.0.RELEASE
+#getLivenessState()Lorg/springframework/boot/availability/LivenessState;
+#getReadinessState()Lorg/springframework/boot/availability/ReadinessState;
+#getState(Ljava/lang/Class;Lorg/springframework/boot/availability/AvailabilityState;)Lorg/springframework/boot/availability/AvailabilityState;
+#getState(Ljava/lang/Class;)Lorg/springframework/boot/availability/AvailabilityState;
+#getLastChangeEvent(Ljava/lang/Class;)Lorg/springframework/boot/availability/AvailabilityChangeEvent;

+###org/springframework/boot/availability/LivenessState
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/availability/LivenessState;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/availability/LivenessState;

+###org/springframework/boot/convert/PeriodUnit
@2.3.0.RELEASE
+#value()Ljava/time/temporal/ChronoUnit;

+###org/springframework/boot/convert/DataSizeUnit
@2.1.0.RELEASE
+#value()Lorg/springframework/util/unit/DataUnit;

+###org/springframework/boot/convert/PeriodStyle
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/convert/PeriodStyle;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/convert/PeriodStyle;
+#parse(Ljava/lang/String;)Ljava/time/Period;
+#parse(Ljava/lang/String;Ljava/time/temporal/ChronoUnit;)Ljava/time/Period;
+#print(Ljava/time/Period;)Ljava/lang/String;
+#print(Ljava/time/Period;Ljava/time/temporal/ChronoUnit;)Ljava/lang/String;
+#detectAndParse(Ljava/lang/String;)Ljava/time/Period;
+#detectAndParse(Ljava/lang/String;Ljava/time/temporal/ChronoUnit;)Ljava/time/Period;
+#detect(Ljava/lang/String;)Lorg/springframework/boot/convert/PeriodStyle;

+###org/springframework/boot/convert/PeriodFormat
@2.3.0.RELEASE
+#value()Lorg/springframework/boot/convert/PeriodStyle;

+###org/springframework/boot/BootstrapRegistry
@2.4.0
+#register(Ljava/lang/Class;Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;)V
+#registerIfAbsent(Ljava/lang/Class;Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;)V
+#isRegistered(Ljava/lang/Class;)Z
+#getRegisteredInstanceSupplier(Ljava/lang/Class;)Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;
+#addCloseListener(Lorg/springframework/context/ApplicationListener;)V

+###org/springframework/boot/ApplicationContextFactory
@2.4.0
+#create(Lorg/springframework/boot/WebApplicationType;)Lorg/springframework/context/ConfigurableApplicationContext;
+#ofContextClass(Ljava/lang/Class;)Lorg/springframework/boot/ApplicationContextFactory;
+#of(Ljava/util/function/Supplier;)Lorg/springframework/boot/ApplicationContextFactory;
@2.6.14
+#getEnvironmentType(Lorg/springframework/boot/WebApplicationType;)Ljava/lang/Class;
+#createEnvironment(Lorg/springframework/boot/WebApplicationType;)Lorg/springframework/core/env/ConfigurableEnvironment;
@2.7.0
-#getEnvironmentType(Lorg/springframework/boot/WebApplicationType;)Ljava/lang/Class;
-#createEnvironment(Lorg/springframework/boot/WebApplicationType;)Lorg/springframework/core/env/ConfigurableEnvironment;
@2.7.6
+#getEnvironmentType(Lorg/springframework/boot/WebApplicationType;)Ljava/lang/Class;
+#createEnvironment(Lorg/springframework/boot/WebApplicationType;)Lorg/springframework/core/env/ConfigurableEnvironment;

+###org/springframework/boot/BootstrapRegistry$InstanceSupplier
@2.4.0
+#get(Lorg/springframework/boot/BootstrapContext;)Ljava/lang/Object;
+#of(Ljava/lang/Object;)Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;
+#from(Ljava/util/function/Supplier;)Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;
@2.4.2
+#getScope()Lorg/springframework/boot/BootstrapRegistry$Scope;
+#withScope(Lorg/springframework/boot/BootstrapRegistry$Scope;)Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;

+###org/springframework/boot/ansi/AnsiColors$BitDepth
@2.2.0.RELEASE
+#values()[Lorg/springframework/boot/ansi/AnsiColors$BitDepth;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/ansi/AnsiColors$BitDepth;
+#of(I)Lorg/springframework/boot/ansi/AnsiColors$BitDepth;
@3.0.0
-###org/springframework/boot/ansi/AnsiColors$BitDepth

+###org/springframework/boot/ansi/Ansi8BitColor
@2.2.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#foreground(I)Lorg/springframework/boot/ansi/Ansi8BitColor;
+#background(I)Lorg/springframework/boot/ansi/Ansi8BitColor;

+###org/springframework/boot/BootstrapContextClosedEvent
@2.4.0
+#getBootstrapContext()Lorg/springframework/boot/BootstrapContext;
+#getApplicationContext()Lorg/springframework/context/ConfigurableApplicationContext;

+###org/springframework/boot/BootstrapRegistryInitializer
@2.4.5
+#initialize(Lorg/springframework/boot/BootstrapRegistry;)V

+###org/springframework/boot/ImageBanner$PixelMode
@2.2.0.RELEASE
+#values()[Lorg/springframework/boot/ImageBanner$PixelMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/ImageBanner$PixelMode;
@3.0.0
-###org/springframework/boot/ImageBanner$PixelMode

+###org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer$ClassDescriptor
@2.3.1.RELEASE
+#<init>(Ljava/lang/String;Ljava/net/URL;)V
+#getName()Ljava/lang/String;
+#getLocation()Ljava/net/URL;

+###org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer$NoSuchMethodDescriptor
@2.1.7.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/net/URL;)V
+#getErrorMessage()Ljava/lang/String;
+#getClassName()Ljava/lang/String;
+#getCandidateLocations()Ljava/util/List;
+#getActualLocation()Ljava/net/URL;
@2.3.1.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
+#getTypeHierarchy()Ljava/util/List;
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/net/URL;)V
-#getActualLocation()Ljava/net/URL;

+###org/springframework/boot/SpringApplicationShutdownHandlers
@2.5.1
+#add(Ljava/lang/Runnable;)V
+#remove(Ljava/lang/Runnable;)V

+###org/springframework/boot/rsocket/messaging/RSocketStrategiesCustomizer
@2.2.0.RELEASE
+#customize(Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;)V

+###org/springframework/boot/rsocket/netty/NettyRSocketServerFactory
@2.2.0.RELEASE
+#<init>()V
+#setPort(I)V
+#setAddress(Ljava/net/InetAddress;)V
+#setTransport(Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;)V
+#setResourceFactory(Lorg/springframework/http/client/reactive/ReactorResourceFactory;)V
+#setSocketFactoryProcessors(Ljava/util/Collection;)V
+#addSocketFactoryProcessors([Lorg/springframework/boot/rsocket/server/ServerRSocketFactoryProcessor;)V
+#setLifecycleTimeout(Ljava/time/Duration;)V
+#create(Lio/rsocket/SocketAcceptor;)Lorg/springframework/boot/rsocket/netty/NettyRSocketServer;
+#create(Lio/rsocket/SocketAcceptor;)Lorg/springframework/boot/rsocket/server/RSocketServer;
@2.2.7.RELEASE
*#setSocketFactoryProcessors(Ljava/util/Collection;)V[deprecated]
*#addSocketFactoryProcessors([Lorg/springframework/boot/rsocket/server/ServerRSocketFactoryProcessor;)V[deprecated]
+#setRSocketServerCustomizers(Ljava/util/Collection;)V
+#addRSocketServerCustomizers([Lorg/springframework/boot/rsocket/server/RSocketServerCustomizer;)V
@2.4.0
+#setFragmentSize(Lorg/springframework/util/unit/DataSize;)V
+#setSsl(Lorg/springframework/boot/web/server/Ssl;)V
+#setSslStoreProvider(Lorg/springframework/boot/web/server/SslStoreProvider;)V
-#setSocketFactoryProcessors(Ljava/util/Collection;)V[deprecated]
-#addSocketFactoryProcessors([Lorg/springframework/boot/rsocket/server/ServerRSocketFactoryProcessor;)V[deprecated]

+###org/springframework/boot/rsocket/netty/NettyRSocketServer
@2.2.0.RELEASE
+#<init>(Lreactor/core/publisher/Mono;Ljava/time/Duration;)V
+#address()Ljava/net/InetSocketAddress;
+#start()V
+#stop()V

+###org/springframework/boot/rsocket/context/RSocketPortInfoApplicationContextInitializer
@2.2.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V

+###org/springframework/boot/rsocket/context/RSocketServerBootstrap
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/rsocket/server/RSocketServerFactory;Lio/rsocket/SocketAcceptor;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#start()V
+#stop()V
+#isRunning()Z

+###org/springframework/boot/rsocket/context/LocalRSocketServerPort
@2.2.0.RELEASE
@3.0.0
-###org/springframework/boot/rsocket/context/LocalRSocketServerPort

+###org/springframework/boot/rsocket/context/RSocketServerInitializedEvent
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/rsocket/server/RSocketServer;)V
+#getServer()Lorg/springframework/boot/rsocket/server/RSocketServer;
+#getSource()Lorg/springframework/boot/rsocket/server/RSocketServer;
+#getSource()Ljava/lang/Object;

+###org/springframework/boot/rsocket/server/RSocketServerFactory
@2.2.0.RELEASE
+#create(Lio/rsocket/SocketAcceptor;)Lorg/springframework/boot/rsocket/server/RSocketServer;

+###org/springframework/boot/rsocket/server/RSocketServerException
@2.2.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/boot/rsocket/server/RSocketServer$Transport
@2.2.0.RELEASE
+#values()[Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;

+###org/springframework/boot/rsocket/server/RSocketServerCustomizer
@2.2.7.RELEASE
+#customize(Lio/rsocket/core/RSocketServer;)V

+###org/springframework/boot/rsocket/server/ConfigurableRSocketServerFactory
@2.2.0.RELEASE
+#setPort(I)V
+#setAddress(Ljava/net/InetAddress;)V
+#setTransport(Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;)V
@2.4.0
+#setFragmentSize(Lorg/springframework/util/unit/DataSize;)V
+#setSsl(Lorg/springframework/boot/web/server/Ssl;)V
+#setSslStoreProvider(Lorg/springframework/boot/web/server/SslStoreProvider;)V

+###org/springframework/boot/rsocket/server/RSocketServer
@2.2.0.RELEASE
+#start()V
+#stop()V
+#address()Ljava/net/InetSocketAddress;

+###org/springframework/boot/env/RandomValuePropertySourceEnvironmentPostProcessor
@2.4.0
+#<init>(Lorg/apache/commons/logging/Log;)V
+#getOrder()I
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V
@3.0.0
+#<init>(Lorg/springframework/boot/logging/DeferredLogFactory;)V
-#<init>(Lorg/apache/commons/logging/Log;)V

+###org/springframework/boot/env/ConfigTreePropertySource$Value
@2.4.0

+###org/springframework/boot/env/EnvironmentPostProcessorApplicationListener
@2.4.0
+#<init>()V
+#<init>(Lorg/springframework/boot/env/EnvironmentPostProcessorsFactory;)V
+#supportsEventType(Ljava/lang/Class;)Z
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#getOrder()I
+#setOrder(I)V
@3.0.0
+#with(Lorg/springframework/boot/env/EnvironmentPostProcessorsFactory;)Lorg/springframework/boot/env/EnvironmentPostProcessorApplicationListener;
-#<init>(Lorg/springframework/boot/env/EnvironmentPostProcessorsFactory;)V

+###org/springframework/boot/env/ConfigTreePropertySource
@2.4.0
+#<init>(Ljava/lang/String;Ljava/nio/file/Path;)V
+#<init>(Ljava/lang/String;Ljava/nio/file/Path;[Lorg/springframework/boot/env/ConfigTreePropertySource$Option;)V
+#getPropertyNames()[Ljava/lang/String;
+#getProperty(Ljava/lang/String;)Lorg/springframework/boot/env/ConfigTreePropertySource$Value;
+#getOrigin(Ljava/lang/String;)Lorg/springframework/boot/origin/Origin;
+#isImmutable()Z
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#getOrigin(Ljava/lang/Object;)Lorg/springframework/boot/origin/Origin;

+###org/springframework/boot/env/ConfigTreePropertySource$Option
@2.4.0
+#values()[Lorg/springframework/boot/env/ConfigTreePropertySource$Option;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/env/ConfigTreePropertySource$Option;

+###org/springframework/boot/env/EnvironmentPostProcessorsFactory
@2.4.0
+#getEnvironmentPostProcessors(Lorg/springframework/boot/logging/DeferredLogFactory;Lorg/springframework/boot/ConfigurableBootstrapContext;)Ljava/util/List;
+#fromSpringFactories(Ljava/lang/ClassLoader;)Lorg/springframework/boot/env/EnvironmentPostProcessorsFactory;
+#of([Ljava/lang/Class;)Lorg/springframework/boot/env/EnvironmentPostProcessorsFactory;
+#of([Ljava/lang/String;)Lorg/springframework/boot/env/EnvironmentPostProcessorsFactory;
@2.4.8
+#of(Ljava/lang/ClassLoader;[Ljava/lang/String;)Lorg/springframework/boot/env/EnvironmentPostProcessorsFactory;
@2.5.0
-#of(Ljava/lang/ClassLoader;[Ljava/lang/String;)Lorg/springframework/boot/env/EnvironmentPostProcessorsFactory;
@2.5.2
+#of(Ljava/lang/ClassLoader;[Ljava/lang/String;)Lorg/springframework/boot/env/EnvironmentPostProcessorsFactory;

+###org/springframework/boot/logging/DeferredLogs
@2.4.0
+#<init>()V
+#getLog(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
+#getLog(Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;
+#getLog(Ljava/util/function/Supplier;)Lorg/apache/commons/logging/Log;
+#switchOverAll()V

+###org/springframework/boot/logging/LoggerGroups
@2.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#putAll(Ljava/util/Map;)V
+#get(Ljava/lang/String;)Lorg/springframework/boot/logging/LoggerGroup;
+#iterator()Ljava/util/Iterator;

+###org/springframework/boot/logging/logback/LogbackLoggingSystemProperties
@2.4.0
+#<init>(Lorg/springframework/core/env/Environment;)V
@2.4.3
+#<init>(Lorg/springframework/core/env/Environment;Ljava/util/function/BiConsumer;)V

+###org/springframework/boot/logging/logback/LogbackLoggingSystem$Factory
@2.4.0
+#<init>()V
+#getLoggingSystem(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;

+###org/springframework/boot/logging/DeferredLogFactory
@2.4.0
+#getLog(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
+#getLog(Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;
+#getLog(Ljava/util/function/Supplier;)Lorg/apache/commons/logging/Log;

+###org/springframework/boot/logging/java/JavaLoggingSystem$Factory
@2.4.0
+#<init>()V
+#getLoggingSystem(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;

+###org/springframework/boot/logging/LoggerGroup
@2.2.0.RELEASE
+#getName()Ljava/lang/String;
+#getMembers()Ljava/util/List;
+#hasMembers()Z
+#getConfiguredLevel()Lorg/springframework/boot/logging/LogLevel;
+#configureLogLevel(Lorg/springframework/boot/logging/LogLevel;Ljava/util/function/BiConsumer;)V

+###org/springframework/boot/logging/log4j2/SpringBootPropertySource
@2.5.2
+#<init>()V
+#forEach(Lorg/apache/logging/log4j/util/BiConsumer;)V
+#getNormalForm(Ljava/lang/Iterable;)Ljava/lang/CharSequence;
+#getPriority()I
@2.6.10
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#containsProperty(Ljava/lang/String;)Z
@2.7.0
-#getProperty(Ljava/lang/String;)Ljava/lang/String;
-#containsProperty(Ljava/lang/String;)Z
@2.7.2
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#containsProperty(Ljava/lang/String;)Z
@3.0.0
+#getPropertyNames()Ljava/util/Collection;

+###org/springframework/boot/logging/log4j2/Log4J2LoggingSystem$Factory
@2.4.0
+#<init>()V
+#getLoggingSystem(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;

+###org/springframework/boot/logging/LoggingSystemFactory
@2.4.0
+#getLoggingSystem(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
+#fromSpringFactories()Lorg/springframework/boot/logging/LoggingSystemFactory;

+###org/springframework/boot/LazyInitializationBeanFactoryPostProcessor
@2.2.0.RELEASE
+#<init>()V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#getOrder()I

+###org/springframework/boot/reactor/DebugAgentEnvironmentPostProcessor
@2.2.0.RELEASE
+#<init>()V
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V
+#getOrder()I

+###org/springframework/boot/BootstrapContext
@2.4.0
+#get(Ljava/lang/Class;)Ljava/lang/Object;
+#getOrElse(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getOrElseSupply(Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/lang/Object;
+#getOrElseThrow(Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/lang/Object;
+#isRegistered(Ljava/lang/Class;)Z

+###org/springframework/boot/BootstrapRegistry$Scope
@2.4.2
+#values()[Lorg/springframework/boot/BootstrapRegistry$Scope;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/BootstrapRegistry$Scope;

+###org/springframework/boot/web/client/RestTemplateRequestCustomizer
@2.2.0.RELEASE
+#customize(Lorg/springframework/http/client/ClientHttpRequest;)V

+###org/springframework/boot/web/client/ClientHttpRequestFactorySupplier
@2.1.0.RELEASE
+#<init>()V
+#get()Lorg/springframework/http/client/ClientHttpRequestFactory;
+#get()Ljava/lang/Object;

+###org/springframework/boot/web/servlet/WebListenerRegistry
@2.4.0
+#addWebListeners([Ljava/lang/String;)V

+###org/springframework/boot/web/servlet/WebListenerRegistrar
@2.4.0
+#register(Lorg/springframework/boot/web/servlet/WebListenerRegistry;)V

+###org/springframework/boot/web/servlet/context/AnnotationConfigServletWebApplicationContext
@2.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V
+#<init>([Ljava/lang/Class;)V
+#<init>([Ljava/lang/String;)V
+#setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V
+#setScopeMetadataResolver(Lorg/springframework/context/annotation/ScopeMetadataResolver;)V
+#register([Ljava/lang/Class;)V
+#scan([Ljava/lang/String;)V
+#registerBean(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Supplier;[Lorg/springframework/beans/factory/config/BeanDefinitionCustomizer;)V

+###org/springframework/boot/web/servlet/server/Encoding
@2.3.0.RELEASE
+#<init>()V
+#getCharset()Ljava/nio/charset/Charset;
+#setCharset(Ljava/nio/charset/Charset;)V
+#isForce()Z
+#setForce(Z)V
+#isForceRequest()Z
+#setForceRequest(Z)V
+#isForceResponse()Z
+#setForceResponse(Z)V
+#getMapping()Ljava/util/Map;
+#setMapping(Ljava/util/Map;)V
+#shouldForce(Lorg/springframework/boot/web/servlet/server/Encoding$Type;)Z

+###org/springframework/boot/web/servlet/server/Encoding$Type
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/web/servlet/server/Encoding$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/web/servlet/server/Encoding$Type;

+###org/springframework/boot/web/servlet/server/CookieSameSiteSupplier
@2.6.0
+#getSameSite(Ljavax/servlet/http/Cookie;)Lorg/springframework/boot/web/server/Cookie$SameSite;
+#whenHasName(Ljava/lang/String;)Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;
+#whenHasName(Ljava/util/function/Supplier;)Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;
+#whenHasNameMatching(Ljava/lang/String;)Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;
+#whenHasNameMatching(Ljava/util/regex/Pattern;)Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;
+#when(Ljava/util/function/Predicate;)Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;
+#ofNone()Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;
+#ofLax()Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;
+#ofStrict()Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;
+#of(Lorg/springframework/boot/web/server/Cookie$SameSite;)Lorg/springframework/boot/web/servlet/server/CookieSameSiteSupplier;
@3.0.0
+#getSameSite(Ljakarta/servlet/http/Cookie;)Lorg/springframework/boot/web/server/Cookie$SameSite;
-#getSameSite(Ljavax/servlet/http/Cookie;)Lorg/springframework/boot/web/server/Cookie$SameSite;

+###org/springframework/boot/web/servlet/ServletContextInitializerBeans$RegistrationBeanAdapter
@2.1.0.RELEASE
+#createRegistrationBean(Ljava/lang/String;Ljava/lang/Object;I)Lorg/springframework/boot/web/servlet/RegistrationBean;

+###org/springframework/boot/web/servlet/filter/OrderedFilter
@2.1.0.RELEASE

+###org/springframework/boot/web/servlet/filter/OrderedFormContentFilter
@2.1.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V

+###org/springframework/boot/web/servlet/filter/ErrorPageSecurityFilter
@2.6.0
+#<init>(Lorg/springframework/context/ApplicationContext;)V
+#doFilter(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
@2.6.1
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
@2.6.2
+#init(Ljavax/servlet/FilterConfig;)V
@2.6.4
+#destroy()V
@3.0.0
-###org/springframework/boot/web/servlet/filter/ErrorPageSecurityFilter

+###org/springframework/boot/web/context/WebServerGracefulShutdownLifecycle
@2.5.0
+#<init>(Lorg/springframework/boot/web/server/WebServer;)V
+#start()V
+#stop()V
+#stop(Ljava/lang/Runnable;)V
+#isRunning()Z
+#getPhase()I

+###org/springframework/boot/web/server/Cookie$SameSite
@2.6.0
+#values()[Lorg/springframework/boot/web/server/Cookie$SameSite;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/web/server/Cookie$SameSite;
+#attributeValue()Ljava/lang/String;

+###org/springframework/boot/web/server/SslConfigurationValidator
@2.1.13.RELEASE
+#validateKeyAlias(Ljava/security/KeyStore;Ljava/lang/String;)V
@2.2.0.RELEASE
-###org/springframework/boot/web/server/SslConfigurationValidator

+###org/springframework/boot/web/server/GracefulShutdownCallback
@2.3.0.RELEASE
+#shutdownComplete(Lorg/springframework/boot/web/server/GracefulShutdownResult;)V

+###org/springframework/boot/web/server/Shutdown
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/web/server/Shutdown;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/web/server/Shutdown;

+###org/springframework/boot/web/server/GracefulShutdownResult
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/web/server/GracefulShutdownResult;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/web/server/GracefulShutdownResult;

+###org/springframework/boot/web/server/Cookie
@2.6.0
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDomain()Ljava/lang/String;
+#setDomain(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getHttpOnly()Ljava/lang/Boolean;
+#setHttpOnly(Ljava/lang/Boolean;)V
+#getSecure()Ljava/lang/Boolean;
+#setSecure(Ljava/lang/Boolean;)V
+#getMaxAge()Ljava/time/Duration;
+#setMaxAge(Ljava/time/Duration;)V
+#getSameSite()Lorg/springframework/boot/web/server/Cookie$SameSite;
+#setSameSite(Lorg/springframework/boot/web/server/Cookie$SameSite;)V

+###org/springframework/boot/web/error/ErrorAttributeOptions$Include
@2.3.0.RELEASE
+#values()[Lorg/springframework/boot/web/error/ErrorAttributeOptions$Include;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/web/error/ErrorAttributeOptions$Include;

+###org/springframework/boot/web/error/ErrorAttributeOptions
@2.3.0.RELEASE
+#isIncluded(Lorg/springframework/boot/web/error/ErrorAttributeOptions$Include;)Z
+#getIncludes()Ljava/util/Set;
+#including([Lorg/springframework/boot/web/error/ErrorAttributeOptions$Include;)Lorg/springframework/boot/web/error/ErrorAttributeOptions;
+#excluding([Lorg/springframework/boot/web/error/ErrorAttributeOptions$Include;)Lorg/springframework/boot/web/error/ErrorAttributeOptions;
+#defaults()Lorg/springframework/boot/web/error/ErrorAttributeOptions;
+#of([Lorg/springframework/boot/web/error/ErrorAttributeOptions$Include;)Lorg/springframework/boot/web/error/ErrorAttributeOptions;
+#of(Ljava/util/Collection;)Lorg/springframework/boot/web/error/ErrorAttributeOptions;

+###org/springframework/boot/web/embedded/netty/NettyRouteProvider
@2.2.0.RELEASE

+###org/springframework/boot/web/embedded/tomcat/TomcatProtocolHandlerCustomizer
@2.2.0.RELEASE
+#customize(Lorg/apache/coyote/ProtocolHandler;)V

+###org/springframework/boot/web/embedded/undertow/HttpHandlerFactory
@2.3.0.RELEASE
+#getHandler(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpHandler;

+###org/springframework/boot/web/reactive/filter/OrderedWebFilter
@2.1.0.RELEASE

+###org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializer$ComponentScanDefaultPackageCheck
@1.2.0.RELEASE
+#getWarning(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Ljava/lang/String;
@1.3.1.RELEASE
-###org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializer$ComponentScanDefaultPackageCheck

+###org/springframework/boot/rsocket/server/ServerRSocketFactoryProcessor
@2.2.0.RELEASE
+#process(Lio/rsocket/RSocketFactory$ServerRSocketFactory;)Lio/rsocket/RSocketFactory$ServerRSocketFactory;
@2.4.0
-###org/springframework/boot/rsocket/server/ServerRSocketFactoryProcessor

+###org/springframework/boot/context/embedded/MultiPartConfigFactory
@1.0.0.RELEASE
+#<init>()V
+#setLocation(Ljava/lang/String;)V
+#setMaxFileSize(J)V
+#setMaxFileSize(Ljava/lang/String;)V
+#setMaxRequestSize(J)V
+#setMaxRequestSize(Ljava/lang/String;)V
+#setFileSizeThreshold(I)V
+#setFileSizeThreshold(Ljava/lang/String;)V
+#createMultipartConfig()Ljavax/servlet/MultipartConfigElement;
@1.1.0.RELEASE
-###org/springframework/boot/context/embedded/MultiPartConfigFactory

+###org/springframework/boot/Bootstrapper
@2.4.0
+#intitialize(Lorg/springframework/boot/BootstrapRegistry;)V
@2.4.4
+#initialize(Lorg/springframework/boot/BootstrapRegistry;)V
*#intitialize(Lorg/springframework/boot/BootstrapRegistry;)V[deprecated]
@2.6.0
-###org/springframework/boot/Bootstrapper

+###org/springframework/boot/bind/PropertySourcesBinder
@1.4.0.RELEASE
+#<init>(Lorg/springframework/core/env/PropertySources;)V
+#<init>(Lorg/springframework/core/env/PropertySource;)V
+#<init>(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#setPropertySources(Lorg/springframework/core/env/PropertySources;)V
+#getPropertySources()Lorg/springframework/core/env/PropertySources;
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#getConversionService()Lorg/springframework/core/convert/ConversionService;
+#extractAll(Ljava/lang/String;)Ljava/util/Map;
+#bindTo(Ljava/lang/String;Ljava/lang/Object;)V
@2.0.0.RELEASE
-###org/springframework/boot/bind/PropertySourcesBinder

+###org/springframework/boot/context/config/ResourceNotFoundException
@1.5.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/core/io/Resource;)V
+#getPropertyName()Ljava/lang/String;
+#getResource()Lorg/springframework/core/io/Resource;
@2.0.0.RELEASE
-###org/springframework/boot/context/config/ResourceNotFoundException

+###org/springframework/boot/context/embedded/LocalServerPort
@1.4.0.RELEASE
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/LocalServerPort

+###org/springframework/boot/context/embedded/PortInUseException
@1.4.0.RELEASE
+#<init>(I)V
+#getPort()I
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/PortInUseException

+###org/springframework/boot/context/embedded/SslStoreProvider
@1.4.0.RELEASE
+#getKeyStore()Ljava/security/KeyStore;
+#getTrustStore()Ljava/security/KeyStore;
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/SslStoreProvider

+###org/springframework/boot/context/embedded/ServerPortInfoApplicationContextInitializer
@1.4.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/ServerPortInfoApplicationContextInitializer

+###org/springframework/boot/context/embedded/tomcat/ConnectorStartFailedException
@1.4.1.RELEASE
+#<init>(I)V
+#getPort()I
@2.0.0.RELEASE
-###org/springframework/boot/context/embedded/tomcat/ConnectorStartFailedException

+###org/springframework/boot/web/support/SpringBootServletInitializer
@1.4.0.RELEASE
+#<init>()V
+#onStartup(Ljavax/servlet/ServletContext;)V
@2.0.0.RELEASE
-###org/springframework/boot/web/support/SpringBootServletInitializer

+###org/springframework/boot/web/support/ServletContextApplicationContextInitializer
@1.4.0.RELEASE
+#<init>(Ljavax/servlet/ServletContext;)V
+#<init>(Ljavax/servlet/ServletContext;Z)V
+#setOrder(I)V
+#getOrder()I
+#initialize(Lorg/springframework/web/context/ConfigurableWebApplicationContext;)V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@2.0.0.RELEASE
-###org/springframework/boot/web/support/ServletContextApplicationContextInitializer

+###org/springframework/boot/web/support/ErrorPageFilter
@1.4.0.RELEASE
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#addErrorPages([Lorg/springframework/boot/web/servlet/ErrorPage;)V
+#destroy()V
@2.0.0.RELEASE
-###org/springframework/boot/web/support/ErrorPageFilter

+###org/springframework/boot/web/filter/OrderedCharacterEncodingFilter
@1.4.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
@2.0.0.RELEASE
-###org/springframework/boot/web/filter/OrderedCharacterEncodingFilter

+###org/springframework/boot/web/filter/OrderedHttpPutFormContentFilter
@1.4.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
@2.0.0.RELEASE
-###org/springframework/boot/web/filter/OrderedHttpPutFormContentFilter

+###org/springframework/boot/web/filter/OrderedRequestContextFilter
@1.4.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
@2.0.0.RELEASE
-###org/springframework/boot/web/filter/OrderedRequestContextFilter

+###org/springframework/boot/web/filter/OrderedHiddenHttpMethodFilter
@1.4.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
@2.0.0.RELEASE
-###org/springframework/boot/web/filter/OrderedHiddenHttpMethodFilter

+###org/springframework/boot/web/filter/ApplicationContextHeaderFilter
@1.4.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
@2.0.0.RELEASE
-###org/springframework/boot/web/filter/ApplicationContextHeaderFilter

+###org/springframework/boot/web/servlet/ErrorPageRegistry
@1.4.0.RELEASE
+#addErrorPages([Lorg/springframework/boot/web/servlet/ErrorPage;)V
@2.0.0.RELEASE
-###org/springframework/boot/web/servlet/ErrorPageRegistry

+###org/springframework/boot/web/servlet/ErrorPageRegistrarBeanPostProcessor
@1.4.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@1.4.6.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@1.5.0.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@1.5.3.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@2.0.0.RELEASE
-###org/springframework/boot/web/servlet/ErrorPageRegistrarBeanPostProcessor

+###org/springframework/boot/web/servlet/ErrorPage
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#getException()Ljava/lang/Class;
+#getStatus()Lorg/springframework/http/HttpStatus;
+#getStatusCode()I
+#getExceptionName()Ljava/lang/String;
+#isGlobal()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.0.0.RELEASE
-###org/springframework/boot/web/servlet/ErrorPage

+###org/springframework/boot/web/servlet/ErrorPageRegistrar
@1.4.0.RELEASE
+#registerErrorPages(Lorg/springframework/boot/web/servlet/ErrorPageRegistry;)V
@2.0.0.RELEASE
-###org/springframework/boot/web/servlet/ErrorPageRegistrar

+###org/springframework/boot/diagnostics/FailureAnalyzers
@1.4.0.RELEASE
+#analyzeAndReport(Ljava/lang/Throwable;Ljava/lang/ClassLoader;Lorg/springframework/context/ConfigurableApplicationContext;)Z
@1.4.1.RELEASE
+#<init>(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#analyzeAndReport(Ljava/lang/Throwable;)Z
*#analyzeAndReport(Ljava/lang/Throwable;Ljava/lang/ClassLoader;Lorg/springframework/context/ConfigurableApplicationContext;)Z[deprecated]
@1.5.0.RELEASE
-#analyzeAndReport(Ljava/lang/Throwable;Ljava/lang/ClassLoader;Lorg/springframework/context/ConfigurableApplicationContext;)Z[deprecated]
@2.0.0.RELEASE
-###org/springframework/boot/diagnostics/FailureAnalyzers

+###org/springframework/boot/system/EmbeddedServerPortFileWriter
@1.4.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/io/File;)V
+#onApplicationEvent(Lorg/springframework/boot/context/embedded/EmbeddedServletContainerInitializedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.0.0.RELEASE
-###org/springframework/boot/system/EmbeddedServerPortFileWriter

+###org/springframework/boot/system/ApplicationPidFileWriter
@1.4.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/io/File;)V
+#setTriggerEventType(Ljava/lang/Class;)V
+#onApplicationEvent(Lorg/springframework/boot/context/event/SpringApplicationEvent;)V
+#setOrder(I)V
+#getOrder()I
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.0.0.RELEASE
-###org/springframework/boot/system/ApplicationPidFileWriter

+###org/springframework/boot/util/Instantiator$FailureHandler
@2.7.0
+#handleFailure(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/boot/info/OsInfo
@2.7.0
+#<init>()V
+#getName()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getArch()Ljava/lang/String;

+###org/springframework/boot/info/JavaInfo$JavaVendorInfo
@2.7.0
+#<init>()V
+#getName()Ljava/lang/String;
+#getVersion()Ljava/lang/String;

+###org/springframework/boot/jackson/JsonMixin
@2.7.0
+#value()[Ljava/lang/Class;
+#type()[Ljava/lang/Class;

+###org/springframework/boot/jackson/JsonMixinModule
@2.7.0
+#<init>(Lorg/springframework/context/ApplicationContext;Ljava/util/Collection;)V
+#afterPropertiesSet()V
@3.0.0
+#<init>()V
*#<init>(Lorg/springframework/context/ApplicationContext;Ljava/util/Collection;)V[deprecated]
+#registerEntries(Lorg/springframework/boot/jackson/JsonMixinModuleEntries;Ljava/lang/ClassLoader;)V
-#afterPropertiesSet()V

+###org/springframework/boot/context/annotation/ImportCandidates
@2.7.0
+#iterator()Ljava/util/Iterator;
+#load(Ljava/lang/Class;Ljava/lang/ClassLoader;)Lorg/springframework/boot/context/annotation/ImportCandidates;
@3.0.0
+#getCandidates()Ljava/util/List;

+###org/springframework/boot/web/context/MissingWebServerFactoryBeanException
@2.7.0
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/boot/WebApplicationType;)V
+#getWebApplicationType()Lorg/springframework/boot/WebApplicationType;

+###org/springframework/boot/web/server/CertificateFileSslStoreProvider
@2.7.0
+#getKeyStore()Ljava/security/KeyStore;
+#getTrustStore()Ljava/security/KeyStore;
+#from(Lorg/springframework/boot/web/server/Ssl;)Lorg/springframework/boot/web/server/SslStoreProvider;
@2.7.2
+#getKeyPassword()Ljava/lang/String;

+###org/springframework/boot/test/TestRestTemplate$HtppClientOption
@1.1.6.RELEASE
+#values()[Lorg/springframework/boot/test/TestRestTemplate$HtppClientOption;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/test/TestRestTemplate$HtppClientOption;
@1.1.9.RELEASE
-###org/springframework/boot/test/TestRestTemplate$HtppClientOption

+###org/springframework/boot/convert/StringToPeriodConverter
@2.3.0.RELEASE
+#<init>()V
+#getConvertibleTypes()Ljava/util/Set;
+#convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
@2.3.1.RELEASE
-###org/springframework/boot/convert/StringToPeriodConverter

+###org/springframework/boot/convert/PeriodToStringConverter
@2.3.0.RELEASE
+#<init>()V
+#getConvertibleTypes()Ljava/util/Set;
+#convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
@2.3.1.RELEASE
-###org/springframework/boot/convert/PeriodToStringConverter

+###org/springframework/boot/SpringApplicationAotProcessor
@3.0.0
+#<init>(Ljava/lang/Class;Lorg/springframework/context/aot/AbstractAotProcessor$Settings;[Ljava/lang/String;)V
+#main([Ljava/lang/String;)V

+###org/springframework/boot/jackson/JsonMixinModuleEntries$Builder
@3.0.0
+#and(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/boot/jackson/JsonMixinModuleEntries$Builder;
+#and(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/boot/jackson/JsonMixinModuleEntries$Builder;

+###org/springframework/boot/jackson/JsonMixinModuleEntries
@3.0.0
+#create(Ljava/util/function/Consumer;)Lorg/springframework/boot/jackson/JsonMixinModuleEntries;
+#scan(Lorg/springframework/context/ApplicationContext;Ljava/util/Collection;)Lorg/springframework/boot/jackson/JsonMixinModuleEntries;
+#doWithEntry(Ljava/lang/ClassLoader;Ljava/util/function/BiConsumer;)V

+###org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts
@3.0.0
+#<init>(Ljava/util/List;)V
+#iterator()Ljava/util/Iterator;
+#continueOnError(Z)Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts;
+#isContinueOnError()Z
+#separator(Ljava/lang/String;)Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts;
+#getSeparator()Ljava/lang/String;
+#encoding(Ljava/nio/charset/Charset;)Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts;
+#getEncoding()Ljava/nio/charset/Charset;

+###org/springframework/boot/SpringApplicationHook
@3.0.0
+#getRunListener(Lorg/springframework/boot/SpringApplication;)Lorg/springframework/boot/SpringApplicationRunListener;

+###org/springframework/boot/context/properties/ConstructorBound
@3.0.0
+#<init>()V
+#from(Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/boot/context/properties/bind/ConstructorBinding
@3.0.0

+###org/springframework/boot/context/properties/bind/Nested
@3.0.0

+###org/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar
@3.0.0
+#registerHints(Lorg/springframework/aot/hint/RuntimeHints;Ljava/lang/ClassLoader;)V
+#registerHints(Lorg/springframework/aot/hint/RuntimeHints;)V
+#forTypes(Ljava/lang/Iterable;)Lorg/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar;
+#forTypes([Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar;

+###org/springframework/boot/SpringApplication$AbandonedRunException
@3.0.0
+#<init>()V
+#<init>(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ConfigurableApplicationContext;

+###org/springframework/boot/web/client/ClientHttpRequestFactorySettings
@3.0.0
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/lang/Boolean;)V
+#withConnectTimeout(Ljava/time/Duration;)Lorg/springframework/boot/web/client/ClientHttpRequestFactorySettings;
+#withReadTimeout(Ljava/time/Duration;)Lorg/springframework/boot/web/client/ClientHttpRequestFactorySettings;
+#withBufferRequestBody(Ljava/lang/Boolean;)Lorg/springframework/boot/web/client/ClientHttpRequestFactorySettings;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#connectTimeout()Ljava/time/Duration;
+#readTimeout()Ljava/time/Duration;
+#bufferRequestBody()Ljava/lang/Boolean;

+###org/springframework/boot/web/client/ClientHttpRequestFactories
@3.0.0
+#get(Lorg/springframework/boot/web/client/ClientHttpRequestFactorySettings;)Lorg/springframework/http/client/ClientHttpRequestFactory;
+#get(Ljava/lang/Class;Lorg/springframework/boot/web/client/ClientHttpRequestFactorySettings;)Lorg/springframework/http/client/ClientHttpRequestFactory;
+#get(Ljava/util/function/Supplier;Lorg/springframework/boot/web/client/ClientHttpRequestFactorySettings;)Lorg/springframework/http/client/ClientHttpRequestFactory;
