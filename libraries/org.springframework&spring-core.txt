
+###org/springframework/core/ReactiveTypeDescriptor
@5.0.0.RELEASE
+#getReactiveType()Ljava/lang/Class;
+#getEmptyValue()Ljava/lang/Object;
+#isMultiValue()Z
+#supportsEmpty()Z
+#isNoValue()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#multiValue(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
+#singleOptionalValue(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
+#singleRequiredValue(Ljava/lang/Class;)Lorg/springframework/core/ReactiveTypeDescriptor;
+#noValue(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
@5.2.7.RELEASE
+#isDeferred()Z
+#nonDeferredAsyncValue(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;

+###org/springframework/core/io/ContextResource
@2.5
+#getPathWithinContext()Ljava/lang/String;

+###org/springframework/core/io/ResourceEditor
@1.0-rc1
+#<init>()V
+#setAsText(Ljava/lang/String;)V
@1.1-rc1
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
@2.0-m2
+#getAsText()Ljava/lang/String;
@3.0.0.RELEASE
+#setIgnoreUnresolvablePlaceholders(Z)V
@3.0.1.RELEASE
+#<init>(Lorg/springframework/core/io/ResourceLoader;Z)V
-#setIgnoreUnresolvablePlaceholders(Z)V
@3.1.0.RELEASE
*#<init>(Lorg/springframework/core/io/ResourceLoader;)V[deprecated]
+#<init>(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/core/env/PropertyResolver;)V
*#<init>(Lorg/springframework/core/io/ResourceLoader;Z)V[deprecated]
+#<init>(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/core/env/PropertyResolver;Z)V
@4.2.0.RELEASE
-#<init>(Lorg/springframework/core/io/ResourceLoader;)V[deprecated]
-#<init>(Lorg/springframework/core/io/ResourceLoader;Z)V[deprecated]

+###org/springframework/core/io/WritableResource
@3.1.0.RELEASE
+#isWritable()Z
+#getOutputStream()Ljava/io/OutputStream;
@5.0.0.RELEASE
+#writableChannel()Ljava/nio/channels/WritableByteChannel;

+###org/springframework/core/io/AbstractResource
@1.0-rc1
+#<init>()V
+#exists()Z
+#isOpen()Z
+#getFile()Ljava/io/File;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.0
+#getURL()Ljava/net/URL;
@1.1-rc2
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
+#getFilename()Ljava/lang/String;
@1.2-rc2
+#getDescription()Ljava/lang/String;
@2.5
+#getURI()Ljava/net/URI;
-#getDescription()Ljava/lang/String;
@2.5.2
+#isReadable()Z
@2.5.3
+#lastModified()J
@3.0.4.RELEASE
+#contentLength()J
@5.0.0.RELEASE
+#isFile()Z
+#readableChannel()Ljava/nio/channels/ReadableByteChannel;

+###org/springframework/core/io/ClassRelativeResourceLoader
@3.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V

+###org/springframework/core/io/ByteArrayResource
@1.2.3
+#<init>([B)V
+#<init>([BLjava/lang/String;)V
+#getByteArray()[B
+#exists()Z
+#getInputStream()Ljava/io/InputStream;
+#getDescription()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.7.RELEASE
+#contentLength()J
@6.0.5
+#getContentAsByteArray()[B
+#getContentAsString(Ljava/nio/charset/Charset;)Ljava/lang/String;

+###org/springframework/core/io/support/PropertiesLoaderSupport
@1.2.2
+#<init>()V
+#setProperties(Ljava/util/Properties;)V
+#setLocation(Lorg/springframework/core/io/Resource;)V
+#setLocations([Lorg/springframework/core/io/Resource;)V
+#setLocalOverride(Z)V
+#setIgnoreResourceNotFound(Z)V
+#setFileEncoding(Ljava/lang/String;)V
+#setPropertiesPersister(Lorg/springframework/util/PropertiesPersister;)V
@1.2.8
+#setPropertiesArray([Ljava/util/Properties;)V
@2.0-m1
-#setPropertiesArray([Ljava/util/Properties;)V
@2.0-m4
+#setPropertiesArray([Ljava/util/Properties;)V

+###org/springframework/core/io/support/PropertiesLoaderUtils
@2.0-m1
+#<init>()V
+#loadProperties(Lorg/springframework/core/io/Resource;)Ljava/util/Properties;
+#fillProperties(Ljava/util/Properties;Lorg/springframework/core/io/Resource;)V
+#loadAllProperties(Ljava/lang/String;)Ljava/util/Properties;
+#loadAllProperties(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Properties;
@3.2.1.RELEASE
+#loadProperties(Lorg/springframework/core/io/support/EncodedResource;)Ljava/util/Properties;
+#fillProperties(Ljava/util/Properties;Lorg/springframework/core/io/support/EncodedResource;)V

+###org/springframework/core/io/support/ResourcePatternResolver
@1.1-rc1
+#getResources(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;

+###org/springframework/core/io/support/ResourceArrayPropertyEditor
@1.1.2
+#<init>()V
+#<init>(Lorg/springframework/core/io/support/ResourcePatternResolver;)V
+#setAsText(Ljava/lang/String;)V
@1.2.7
+#setValue(Ljava/lang/Object;)V
@2.0-m1
-#setValue(Ljava/lang/Object;)V
@2.0-m2
+#setValue(Ljava/lang/Object;)V
@3.0.1.RELEASE
+#<init>(Lorg/springframework/core/io/support/ResourcePatternResolver;Z)V
@3.1.0.RELEASE
*#<init>(Lorg/springframework/core/io/support/ResourcePatternResolver;)V[deprecated]
+#<init>(Lorg/springframework/core/io/support/ResourcePatternResolver;Lorg/springframework/core/env/PropertyResolver;)V
*#<init>(Lorg/springframework/core/io/support/ResourcePatternResolver;Z)V[deprecated]
+#<init>(Lorg/springframework/core/io/support/ResourcePatternResolver;Lorg/springframework/core/env/PropertyResolver;Z)V
@4.2.0.RELEASE
-#<init>(Lorg/springframework/core/io/support/ResourcePatternResolver;)V[deprecated]
-#<init>(Lorg/springframework/core/io/support/ResourcePatternResolver;Z)V[deprecated]

+###org/springframework/core/io/support/EncodedResource
@1.2.6
+#<init>(Lorg/springframework/core/io/Resource;)V
+#<init>(Lorg/springframework/core/io/Resource;Ljava/lang/String;)V
+#getResource()Lorg/springframework/core/io/Resource;
+#getEncoding()Ljava/lang/String;
+#getReader()Ljava/io/Reader;
@2.5.1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.2.1.RELEASE
+#<init>(Lorg/springframework/core/io/Resource;Ljava/nio/charset/Charset;)V
+#getCharset()Ljava/nio/charset/Charset;
+#requiresReader()Z
+#getInputStream()Ljava/io/InputStream;
@6.0.5
+#getContentAsString()Ljava/lang/String;

+###org/springframework/core/io/support/PathMatchingResourcePatternResolver
@1.1-rc1
+#<init>()V
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
+#getResources(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;
@1.1.1
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Lorg/springframework/core/io/ResourceLoader;Ljava/lang/ClassLoader;)V
+#getResourceLoader()Lorg/springframework/core/io/ResourceLoader;
+#getClassLoader()Ljava/lang/ClassLoader;
@1.1.4
+#getResource(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
@1.2-rc2
+#setPathMatcher(Lorg/springframework/util/PathMatcher;)V
+#getPathMatcher()Lorg/springframework/util/PathMatcher;
@2.0-rc2
-#<init>(Lorg/springframework/core/io/ResourceLoader;Ljava/lang/ClassLoader;)V

+###org/springframework/core/io/support/ResourceRegion
@4.3.0.RELEASE
+#<init>(Lorg/springframework/core/io/Resource;JJ)V
+#getResource()Lorg/springframework/core/io/Resource;
+#getPosition()J
+#getCount()J

+###org/springframework/core/io/support/PropertySourceFactory
@4.3.0.RELEASE
+#createPropertySource(Ljava/lang/String;Lorg/springframework/core/io/support/EncodedResource;)Lorg/springframework/core/env/PropertySource;

+###org/springframework/core/io/support/ResourcePropertySource
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/core/io/Resource;)V
+#<init>(Lorg/springframework/core/io/Resource;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/String;)V
@3.2.1.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/core/io/support/EncodedResource;)V
+#<init>(Lorg/springframework/core/io/support/EncodedResource;)V
@4.0.4.RELEASE
+#withName(Ljava/lang/String;)Lorg/springframework/core/io/support/ResourcePropertySource;
@4.1.0.RELEASE
+#withResourceName()Lorg/springframework/core/io/support/ResourcePropertySource;

+###org/springframework/core/io/support/ResourcePatternUtils
@1.2.3
+#<init>()V
+#isUrl(Ljava/lang/String;)Z
@2.0-rc2
+#getResourcePatternResolver(Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/core/io/support/ResourcePatternResolver;

+###org/springframework/core/io/support/SpringFactoriesLoader
@3.2.0.RELEASE
+#<init>()V
+#loadFactories(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/List;
@3.2.7.RELEASE
+#loadFactoryNames(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/List;
@5.1.0.RELEASE
-#<init>()V
@6.0.0
+#load(Ljava/lang/Class;)Ljava/util/List;
+#load(Ljava/lang/Class;Lorg/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver;)Ljava/util/List;
+#load(Ljava/lang/Class;Lorg/springframework/core/io/support/SpringFactoriesLoader$FailureHandler;)Ljava/util/List;
+#load(Ljava/lang/Class;Lorg/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver;Lorg/springframework/core/io/support/SpringFactoriesLoader$FailureHandler;)Ljava/util/List;
*#loadFactoryNames(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/List;[deprecated]
+#forDefaultResourceLocation()Lorg/springframework/core/io/support/SpringFactoriesLoader;
+#forDefaultResourceLocation(Ljava/lang/ClassLoader;)Lorg/springframework/core/io/support/SpringFactoriesLoader;
+#forResourceLocation(Ljava/lang/String;)Lorg/springframework/core/io/support/SpringFactoriesLoader;
+#forResourceLocation(Ljava/lang/String;Ljava/lang/ClassLoader;)Lorg/springframework/core/io/support/SpringFactoriesLoader;

+###org/springframework/core/io/support/DefaultPropertySourceFactory
@4.3.0.RELEASE
+#<init>()V
+#createPropertySource(Ljava/lang/String;Lorg/springframework/core/io/support/EncodedResource;)Lorg/springframework/core/env/PropertySource;

+###org/springframework/core/io/support/LocalizedResourceHelper
@1.2.5
+#<init>()V
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
+#setSeparator(Ljava/lang/String;)V
+#findLocalizedResource(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/core/io/Resource;

+###org/springframework/core/io/buffer/PooledDataBuffer
@5.0.0.RELEASE
+#retain()Lorg/springframework/core/io/buffer/PooledDataBuffer;
+#release()Z
@5.1.0.RELEASE
+#isAllocated()Z
@5.3.2
+#touch(Ljava/lang/Object;)Lorg/springframework/core/io/buffer/PooledDataBuffer;
@6.0.0
+#touch(Ljava/lang/Object;)Lorg/springframework/core/io/buffer/TouchableDataBuffer;

+###org/springframework/core/io/buffer/DefaultDataBuffer
@5.0.0.RELEASE
+#getNativeBuffer()Ljava/nio/ByteBuffer;
+#factory()Lorg/springframework/core/io/buffer/DefaultDataBufferFactory;
+#indexOf(Ljava/util/function/IntPredicate;I)I
+#lastIndexOf(Ljava/util/function/IntPredicate;I)I
+#readableByteCount()I
+#read()B
+#read([B)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#read([BII)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#write(B)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#write([B)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#write([BII)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#write([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#slice(II)Lorg/springframework/core/io/buffer/DataBuffer;
+#asByteBuffer()Ljava/nio/ByteBuffer;
+#asInputStream()Ljava/io/InputStream;
+#asOutputStream()Ljava/io/OutputStream;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#write([Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([BII)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#write(B)Lorg/springframework/core/io/buffer/DataBuffer;
+#read([BII)Lorg/springframework/core/io/buffer/DataBuffer;
+#read([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#factory()Lorg/springframework/core/io/buffer/DataBufferFactory;
@5.0.1.RELEASE
+#writableByteCount()I
+#readPosition()I
+#readPosition(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#writePosition()I
+#writePosition(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#capacity()I
+#capacity(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#asByteBuffer(II)Ljava/nio/ByteBuffer;
@5.0.4.RELEASE
+#readPosition(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#writePosition(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#capacity(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#getByte(I)B
+#write([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#slice(II)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#asInputStream(Z)Ljava/io/InputStream;
@5.1.4.RELEASE
+#ensureCapacity(I)Lorg/springframework/core/io/buffer/DataBuffer;
@5.2.0.RELEASE
+#toString(IILjava/nio/charset/Charset;)Ljava/lang/String;
@6.0.0
*#capacity(I)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
+#ensureWritable(I)Lorg/springframework/core/io/buffer/DataBuffer;
*#slice(II)Lorg/springframework/core/io/buffer/DefaultDataBuffer;[deprecated]
+#split(I)Lorg/springframework/core/io/buffer/DataBuffer;
*#asByteBuffer()Ljava/nio/ByteBuffer;[deprecated]
*#asByteBuffer(II)Ljava/nio/ByteBuffer;[deprecated]
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
*#slice(II)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
-#capacity(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
-#ensureCapacity(I)Lorg/springframework/core/io/buffer/DataBuffer;
-#asInputStream()Ljava/io/InputStream;
-#asInputStream(Z)Ljava/io/InputStream;
-#asOutputStream()Ljava/io/OutputStream;
@6.0.5
*#toByteBuffer(II)Ljava/nio/ByteBuffer;[deprecated]
+#toByteBuffer(ILjava/nio/ByteBuffer;II)V
+#readableByteBuffers()Lorg/springframework/core/io/buffer/DataBuffer$ByteBufferIterator;
+#writableByteBuffers()Lorg/springframework/core/io/buffer/DataBuffer$ByteBufferIterator;

+###org/springframework/core/io/buffer/NettyDataBufferFactory
@5.0.0.RELEASE
+#<init>(Lio/netty/buffer/ByteBufAllocator;)V
+#getByteBufAllocator()Lio/netty/buffer/ByteBufAllocator;
+#allocateBuffer()Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#allocateBuffer(I)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#wrap(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#wrap([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#wrap(Lio/netty/buffer/ByteBuf;)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#toByteBuf(Lorg/springframework/core/io/buffer/DataBuffer;)Lio/netty/buffer/ByteBuf;
+#toString()Ljava/lang/String;
+#wrap(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#allocateBuffer(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#allocateBuffer()Lorg/springframework/core/io/buffer/DataBuffer;
@5.0.3.RELEASE
+#join(Ljava/util/List;)Lorg/springframework/core/io/buffer/DataBuffer;
@6.0.0
*#allocateBuffer()Lorg/springframework/core/io/buffer/NettyDataBuffer;[deprecated]
+#isDirect()Z
*#allocateBuffer()Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]

+###org/springframework/core/io/buffer/DataBufferUtils
@5.0.0.RELEASE
+#<init>()V
+#read(Ljava/io/InputStream;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
+#read(Ljava/nio/channels/ReadableByteChannel;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
+#read(Ljava/nio/channels/AsynchronousFileChannel;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
+#read(Ljava/nio/channels/AsynchronousFileChannel;JLorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
+#read(Lorg/springframework/core/io/Resource;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
+#read(Lorg/springframework/core/io/Resource;JLorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
+#write(Lorg/reactivestreams/Publisher;Ljava/io/OutputStream;)Lreactor/core/publisher/Flux;
+#write(Lorg/reactivestreams/Publisher;Ljava/nio/channels/WritableByteChannel;)Lreactor/core/publisher/Flux;
+#write(Lorg/reactivestreams/Publisher;Ljava/nio/channels/AsynchronousFileChannel;J)Lreactor/core/publisher/Flux;
+#takeUntilByteCount(Lorg/reactivestreams/Publisher;J)Lreactor/core/publisher/Flux;
+#skipUntilByteCount(Lorg/reactivestreams/Publisher;J)Lreactor/core/publisher/Flux;
+#retain(Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#release(Lorg/springframework/core/io/buffer/DataBuffer;)Z
+#releaseConsumer()Ljava/util/function/Consumer;
@5.0.3.RELEASE
*#read(Ljava/io/InputStream;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;[deprecated]
+#readInputStream(Ljava/util/concurrent/Callable;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
*#read(Ljava/nio/channels/ReadableByteChannel;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;[deprecated]
+#readByteChannel(Ljava/util/concurrent/Callable;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
*#read(Ljava/nio/channels/AsynchronousFileChannel;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;[deprecated]
*#read(Ljava/nio/channels/AsynchronousFileChannel;JLorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;[deprecated]
+#readAsynchronousFileChannel(Ljava/util/concurrent/Callable;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
+#readAsynchronousFileChannel(Ljava/util/concurrent/Callable;JLorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;
+#join(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
@5.0.10.RELEASE
+#write(Lorg/reactivestreams/Publisher;Ljava/nio/channels/AsynchronousFileChannel;)Lreactor/core/publisher/Flux;
@5.1.0.RELEASE
-#read(Ljava/io/InputStream;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;[deprecated]
-#read(Ljava/nio/channels/ReadableByteChannel;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;[deprecated]
-#read(Ljava/nio/channels/AsynchronousFileChannel;Lorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;[deprecated]
-#read(Ljava/nio/channels/AsynchronousFileChannel;JLorg/springframework/core/io/buffer/DataBufferFactory;I)Lreactor/core/publisher/Flux;[deprecated]
@5.1.11.RELEASE
+#join(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Mono;
@5.2.0.RELEASE
+#read(Ljava/nio/file/Path;Lorg/springframework/core/io/buffer/DataBufferFactory;I[Ljava/nio/file/OpenOption;)Lreactor/core/publisher/Flux;
+#write(Lorg/reactivestreams/Publisher;Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lreactor/core/publisher/Mono;
+#matcher([B)Lorg/springframework/core/io/buffer/DataBufferUtils$Matcher;
+#matcher([[B)Lorg/springframework/core/io/buffer/DataBufferUtils$Matcher;
-#join(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Mono;
@5.2.1.RELEASE
+#join(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Mono;
@5.3.2
+#touch(Lorg/springframework/core/io/buffer/DataBuffer;Ljava/lang/Object;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/core/io/buffer/DataBufferFactory
@5.0.0.RELEASE
+#allocateBuffer()Lorg/springframework/core/io/buffer/DataBuffer;
+#allocateBuffer(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#wrap(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#wrap([B)Lorg/springframework/core/io/buffer/DataBuffer;
@5.0.3.RELEASE
+#join(Ljava/util/List;)Lorg/springframework/core/io/buffer/DataBuffer;
@6.0.0
*#allocateBuffer()Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
+#isDirect()Z

+###org/springframework/core/io/buffer/DefaultDataBufferFactory
@5.0.0.RELEASE
+#<init>()V
+#<init>(Z)V
+#<init>(ZI)V
+#allocateBuffer()Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#allocateBuffer(I)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#wrap(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#wrap([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#toString()Ljava/lang/String;
+#wrap(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#allocateBuffer(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#allocateBuffer()Lorg/springframework/core/io/buffer/DataBuffer;
@5.0.3.RELEASE
+#join(Ljava/util/List;)Lorg/springframework/core/io/buffer/DataBuffer;
@5.1.3.RELEASE
+#wrap([B)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
+#join(Ljava/util/List;)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
@6.0.0
*#allocateBuffer()Lorg/springframework/core/io/buffer/DefaultDataBuffer;[deprecated]
+#isDirect()Z
*#allocateBuffer()Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]

+###org/springframework/core/io/buffer/DataBuffer
@5.0.0.RELEASE
+#factory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#indexOf(Ljava/util/function/IntPredicate;I)I
+#lastIndexOf(Ljava/util/function/IntPredicate;I)I
+#readableByteCount()I
+#read()B
+#read([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#read([BII)Lorg/springframework/core/io/buffer/DataBuffer;
+#write(B)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([BII)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#slice(II)Lorg/springframework/core/io/buffer/DataBuffer;
+#asByteBuffer()Ljava/nio/ByteBuffer;
+#asInputStream()Ljava/io/InputStream;
+#asOutputStream()Ljava/io/OutputStream;
@5.0.1.RELEASE
+#writableByteCount()I
+#capacity()I
+#capacity(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#readPosition()I
+#readPosition(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#writePosition()I
+#writePosition(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#asByteBuffer(II)Ljava/nio/ByteBuffer;
@5.0.4.RELEASE
+#getByte(I)B
+#asInputStream(Z)Ljava/io/InputStream;
@5.1.4.RELEASE
+#ensureCapacity(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#write(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/springframework/core/io/buffer/DataBuffer;
@5.2.0.RELEASE
+#retainedSlice(II)Lorg/springframework/core/io/buffer/DataBuffer;
+#toString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#toString(IILjava/nio/charset/Charset;)Ljava/lang/String;
@6.0.0
*#capacity(I)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
*#ensureCapacity(I)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
+#ensureWritable(I)Lorg/springframework/core/io/buffer/DataBuffer;
*#slice(II)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
*#retainedSlice(II)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
+#split(I)Lorg/springframework/core/io/buffer/DataBuffer;
*#asByteBuffer()Ljava/nio/ByteBuffer;[deprecated]
*#asByteBuffer(II)Ljava/nio/ByteBuffer;[deprecated]
+#toByteBuffer()Ljava/nio/ByteBuffer;
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
@6.0.5
*#toByteBuffer()Ljava/nio/ByteBuffer;[deprecated]
*#toByteBuffer(II)Ljava/nio/ByteBuffer;[deprecated]
+#toByteBuffer(Ljava/nio/ByteBuffer;)V
+#toByteBuffer(ILjava/nio/ByteBuffer;II)V
+#readableByteBuffers()Lorg/springframework/core/io/buffer/DataBuffer$ByteBufferIterator;
+#writableByteBuffers()Lorg/springframework/core/io/buffer/DataBuffer$ByteBufferIterator;

+###org/springframework/core/io/buffer/NettyDataBuffer
@5.0.0.RELEASE
+#getNativeBuffer()Lio/netty/buffer/ByteBuf;
+#factory()Lorg/springframework/core/io/buffer/NettyDataBufferFactory;
+#indexOf(Ljava/util/function/IntPredicate;I)I
+#lastIndexOf(Ljava/util/function/IntPredicate;I)I
+#readableByteCount()I
+#read()B
+#read([B)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#read([BII)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#write(B)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#write([B)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#write([BII)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#write([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#write([Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#write([Lio/netty/buffer/ByteBuf;)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#slice(II)Lorg/springframework/core/io/buffer/DataBuffer;
+#asByteBuffer()Ljava/nio/ByteBuffer;
+#asInputStream()Ljava/io/InputStream;
+#asOutputStream()Ljava/io/OutputStream;
+#retain()Lorg/springframework/core/io/buffer/PooledDataBuffer;
+#release()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#write([Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([BII)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#write(B)Lorg/springframework/core/io/buffer/DataBuffer;
+#read([BII)Lorg/springframework/core/io/buffer/DataBuffer;
+#read([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#factory()Lorg/springframework/core/io/buffer/DataBufferFactory;
@5.0.1.RELEASE
+#writableByteCount()I
+#readPosition()I
+#readPosition(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#writePosition()I
+#writePosition(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#capacity()I
+#capacity(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#asByteBuffer(II)Ljava/nio/ByteBuffer;
@5.0.4.RELEASE
+#readPosition(I)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#writePosition(I)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#getByte(I)B
+#capacity(I)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#slice(II)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#asInputStream(Z)Ljava/io/InputStream;
@5.1.0.RELEASE
+#isAllocated()Z
@5.1.4.RELEASE
+#ensureCapacity(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#write(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/springframework/core/io/buffer/DataBuffer;
@5.2.0.RELEASE
+#retainedSlice(II)Lorg/springframework/core/io/buffer/NettyDataBuffer;
+#toString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#toString(IILjava/nio/charset/Charset;)Ljava/lang/String;
+#retainedSlice(II)Lorg/springframework/core/io/buffer/DataBuffer;
@5.3.2
+#touch(Ljava/lang/Object;)Lorg/springframework/core/io/buffer/PooledDataBuffer;
@6.0.0
*#capacity(I)Lorg/springframework/core/io/buffer/NettyDataBuffer;[deprecated]
+#ensureWritable(I)Lorg/springframework/core/io/buffer/DataBuffer;
*#slice(II)Lorg/springframework/core/io/buffer/NettyDataBuffer;[deprecated]
*#retainedSlice(II)Lorg/springframework/core/io/buffer/NettyDataBuffer;[deprecated]
+#split(I)Lorg/springframework/core/io/buffer/NettyDataBuffer;
*#asByteBuffer()Ljava/nio/ByteBuffer;[deprecated]
*#asByteBuffer(II)Ljava/nio/ByteBuffer;[deprecated]
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
+#touch(Ljava/lang/Object;)Lorg/springframework/core/io/buffer/TouchableDataBuffer;
+#split(I)Lorg/springframework/core/io/buffer/DataBuffer;
*#retainedSlice(II)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
*#slice(II)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
*#capacity(I)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
-#ensureCapacity(I)Lorg/springframework/core/io/buffer/DataBuffer;
-#asInputStream()Ljava/io/InputStream;
-#asInputStream(Z)Ljava/io/InputStream;
-#asOutputStream()Ljava/io/OutputStream;
@6.0.5
*#toByteBuffer(II)Ljava/nio/ByteBuffer;[deprecated]
+#toByteBuffer(ILjava/nio/ByteBuffer;II)V
+#readableByteBuffers()Lorg/springframework/core/io/buffer/DataBuffer$ByteBufferIterator;
+#writableByteBuffers()Lorg/springframework/core/io/buffer/DataBuffer$ByteBufferIterator;

+###org/springframework/core/io/Resource
@1.0-rc1
+#exists()Z
+#isOpen()Z
+#getFile()Ljava/io/File;
+#getDescription()Ljava/lang/String;
@1.0
+#getURL()Ljava/net/URL;
@1.1-rc2
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
+#getFilename()Ljava/lang/String;
@2.5
+#getURI()Ljava/net/URI;
@2.5.2
+#isReadable()Z
@2.5.3
+#lastModified()J
@3.0.4.RELEASE
+#contentLength()J
@5.0.0.RELEASE
+#isFile()Z
+#readableChannel()Ljava/nio/channels/ReadableByteChannel;
@6.0.5
+#getContentAsByteArray()[B
+#getContentAsString(Ljava/nio/charset/Charset;)Ljava/lang/String;

+###org/springframework/core/io/VfsResource
@3.0.0.RELEASE
+#<init>(Lorg/jboss/virtual/VirtualFile;)V
+#exists()Z
+#isReadable()Z
+#lastModified()J
+#getInputStream()Ljava/io/InputStream;
+#getURL()Ljava/net/URL;
+#getURI()Ljava/net/URI;
+#getFile()Ljava/io/File;
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
+#getFilename()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.3.RELEASE
+#<init>(Ljava/lang/Object;)V
-#<init>(Lorg/jboss/virtual/VirtualFile;)V
@3.1.1.RELEASE
+#contentLength()J

+###org/springframework/core/io/ResourceLoader
@1.0
+#getResource(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
@2.0-rc2
+#getClassLoader()Ljava/lang/ClassLoader;

+###org/springframework/core/io/UrlResource
@1.0-rc1
+#<init>(Ljava/net/URL;)V
+#<init>(Ljava/lang/String;)V
+#getInputStream()Ljava/io/InputStream;
+#getFile()Ljava/io/File;
+#getDescription()Ljava/lang/String;
@1.1-rc1
+#getURL()Ljava/net/URL;
@1.1-rc2
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
+#getFilename()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.5
+#<init>(Ljava/net/URI;)V
+#getURI()Ljava/net/URI;
@3.2.3.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@5.0.0.RELEASE
+#isFile()Z
@6.0.0
+#from(Ljava/net/URI;)Lorg/springframework/core/io/UrlResource;
+#from(Ljava/lang/String;)Lorg/springframework/core/io/UrlResource;

+###org/springframework/core/io/FileUrlResource
@5.0.2.RELEASE
+#<init>(Ljava/net/URL;)V
+#<init>(Ljava/lang/String;)V
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
+#isWritable()Z
+#getOutputStream()Ljava/io/OutputStream;
+#writableChannel()Ljava/nio/channels/WritableByteChannel;
@5.0.3.RELEASE
+#getFile()Ljava/io/File;

+###org/springframework/core/io/AbstractFileResolvingResource
@3.0.0.RELEASE
+#<init>()V
+#getFile()Ljava/io/File;
@3.0.4.RELEASE
+#exists()Z
+#isReadable()Z
+#contentLength()J
+#lastModified()J
@5.0.0.RELEASE
+#isFile()Z
+#readableChannel()Ljava/nio/channels/ReadableByteChannel;

+###org/springframework/core/io/FileSystemResourceLoader
@1.1.3
+#<init>()V

+###org/springframework/core/io/DefaultResourceLoader
@1.0
+#<init>()V
+#getResource(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
@1.1.1
+#<init>(Ljava/lang/ClassLoader;)V
+#getClassLoader()Ljava/lang/ClassLoader;
@1.2.4
+#setClassLoader(Ljava/lang/ClassLoader;)V
@4.3.0.RELEASE
+#addProtocolResolver(Lorg/springframework/core/io/ProtocolResolver;)V
+#getProtocolResolvers()Ljava/util/Collection;
@5.0.0.RELEASE
+#getResourceCache(Ljava/lang/Class;)Ljava/util/Map;
+#clearResourceCaches()V

+###org/springframework/core/io/DefaultResourceLoader$ClassPathContextResource
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V
+#getPathWithinContext()Ljava/lang/String;
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;

+###org/springframework/core/io/ClassPathResource
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
+#getInputStream()Ljava/io/InputStream;
+#getDescription()Ljava/lang/String;
@1.0
+#getURL()Ljava/net/URL;
+#getFile()Ljava/io/File;
@1.1-rc2
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
+#getFilename()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.1
+#<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V
@1.2.3
+#getPath()Ljava/lang/String;
@2.5
+#getClassLoader()Ljava/lang/ClassLoader;
@3.0.0.RELEASE
-#getFile()Ljava/io/File;
@3.0.4.RELEASE
+#exists()Z
@5.2.18.RELEASE
+#isReadable()Z
@5.3.0
-#isReadable()Z
@5.3.11
+#isReadable()Z

+###org/springframework/core/io/VfsUtils
@3.0.3.RELEASE
+#<init>()V

+###org/springframework/core/io/DescriptiveResource
@1.2.6
+#<init>(Ljava/lang/String;)V
+#getInputStream()Ljava/io/InputStream;
+#getDescription()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.5.2
+#exists()Z
+#isReadable()Z

+###org/springframework/core/io/InputStreamSource
@1.0-rc1
+#getInputStream()Ljava/io/InputStream;

+###org/springframework/core/io/PathResource
@4.0.0.RELEASE
+#<init>(Ljava/nio/file/Path;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/net/URI;)V
+#getPath()Ljava/lang/String;
+#exists()Z
+#isReadable()Z
+#getInputStream()Ljava/io/InputStream;
+#getURL()Ljava/net/URL;
+#getURI()Ljava/net/URI;
+#getFile()Ljava/io/File;
+#contentLength()J
+#lastModified()J
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
+#getFilename()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#isWritable()Z
+#getOutputStream()Ljava/io/OutputStream;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0.RELEASE
+#isFile()Z
+#readableChannel()Ljava/nio/channels/ReadableByteChannel;
+#writableChannel()Ljava/nio/channels/WritableByteChannel;
@6.0.5
+#getContentAsByteArray()[B
+#getContentAsString(Ljava/nio/charset/Charset;)Ljava/lang/String;

+###org/springframework/core/io/InputStreamResource
@1.0-rc1
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#exists()Z
+#isOpen()Z
+#getInputStream()Ljava/io/InputStream;
+#getDescription()Ljava/lang/String;
@1.1.1
+#<init>(Ljava/io/InputStream;)V
@1.2.3
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/core/io/ProtocolResolver
@4.3.0.RELEASE
+#resolve(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/core/io/Resource;

+###org/springframework/core/io/FileSystemResource
@1.0-rc1
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/lang/String;)V
+#exists()Z
+#getInputStream()Ljava/io/InputStream;
+#getFile()Ljava/io/File;
+#getDescription()Ljava/lang/String;
@1.0
+#getURL()Ljava/net/URL;
@1.1-rc2
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
+#getFilename()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.2.3
+#getPath()Ljava/lang/String;
@2.5
+#getURI()Ljava/net/URI;
@2.5.2
+#isReadable()Z
@3.1.0.RELEASE
+#isWritable()Z
+#getOutputStream()Ljava/io/OutputStream;
@3.1.1.RELEASE
+#contentLength()J
@5.0.0.RELEASE
+#isFile()Z
+#readableChannel()Ljava/nio/channels/ReadableByteChannel;
+#writableChannel()Ljava/nio/channels/WritableByteChannel;
@5.1.0.RELEASE
+#<init>(Ljava/nio/file/Path;)V
@5.1.1.RELEASE
+#<init>(Ljava/nio/file/FileSystem;Ljava/lang/String;)V
+#lastModified()J
@6.0.5
+#getContentAsByteArray()[B
+#getContentAsString(Ljava/nio/charset/Charset;)Ljava/lang/String;

+###org/springframework/core/type/ClassMetadata
@2.5
+#getClassName()Ljava/lang/String;
+#isInterface()Z
+#isAbstract()Z
+#isConcrete()Z
+#hasSuperClass()Z
+#getSuperClassName()Ljava/lang/String;
+#getInterfaceNames()[Ljava/lang/String;
@2.5.1
+#isIndependent()Z
+#hasEnclosingClass()Z
+#getEnclosingClassName()Ljava/lang/String;
@3.0.0.RELEASE
+#isFinal()Z
@3.1.0.RELEASE
+#getMemberClassNames()[Ljava/lang/String;
@4.1.0.RELEASE
+#isAnnotation()Z

+###org/springframework/core/type/filter/AssignableTypeFilter
@2.5
+#<init>(Ljava/lang/Class;)V
@5.0.0.RELEASE
+#getTargetType()Ljava/lang/Class;

+###org/springframework/core/type/filter/AbstractTypeHierarchyTraversingFilter
@2.5
+#match(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z

+###org/springframework/core/type/filter/AbstractClassTestingTypeFilter
@2.5
+#<init>()V
+#match(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z

+###org/springframework/core/type/filter/RegexPatternTypeFilter
@2.5
+#<init>(Ljava/util/regex/Pattern;)V

+###org/springframework/core/type/filter/AnnotationTypeFilter
@2.5
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Z)V
@3.1.0.RELEASE
+#<init>(Ljava/lang/Class;ZZ)V
@5.0.0.RELEASE
+#getAnnotationType()Ljava/lang/Class;

+###org/springframework/core/type/filter/AspectJTypeFilter
@2.5
+#<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V
+#match(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z

+###org/springframework/core/type/filter/TypeFilter
@2.5
+#match(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z

+###org/springframework/core/type/classreading/SimpleMetadataReaderFactory
@2.5
+#<init>()V
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
+#<init>(Ljava/lang/ClassLoader;)V
+#getMetadataReader(Ljava/lang/String;)Lorg/springframework/core/type/classreading/MetadataReader;
+#getMetadataReader(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/type/classreading/MetadataReader;
@3.0.0.RELEASE
+#getResourceLoader()Lorg/springframework/core/io/ResourceLoader;

+###org/springframework/core/type/classreading/CachingMetadataReaderFactory
@2.5
+#<init>()V
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
+#<init>(Ljava/lang/ClassLoader;)V
+#getMetadataReader(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/type/classreading/MetadataReader;
@3.0.3.RELEASE
+#setCacheLimit(I)V
+#getCacheLimit()I
@3.2.0.RELEASE
+#clearCache()V

+###org/springframework/core/type/classreading/MetadataReader
@2.5
+#getClassMetadata()Lorg/springframework/core/type/ClassMetadata;
+#getAnnotationMetadata()Lorg/springframework/core/type/AnnotationMetadata;
@3.0.0.RELEASE
+#getResource()Lorg/springframework/core/io/Resource;

+###org/springframework/core/type/classreading/MetadataReaderFactory
@2.5
+#getMetadataReader(Ljava/lang/String;)Lorg/springframework/core/type/classreading/MetadataReader;
+#getMetadataReader(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/type/classreading/MetadataReader;

+###org/springframework/core/type/classreading/MethodMetadataReadingVisitor
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/ClassLoader;Lorg/springframework/util/MultiValueMap;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#getMethodName()Ljava/lang/String;
+#isStatic()Z
+#isFinal()Z
+#isOverridable()Z
+#isAnnotated(Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
+#getAnnotationAttributes(Ljava/lang/String;Z)Ljava/util/Map;
+#getAllAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
+#getAllAnnotationAttributes(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;
+#getDeclaringClassName()Ljava/lang/String;
@4.0.1.RELEASE
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/ClassLoader;Ljava/util/Set;)V
-#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/ClassLoader;Lorg/springframework/util/MultiValueMap;)V
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/Set;)V
+#isAbstract()Z
+#getReturnTypeName()Ljava/lang/String;
-#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/ClassLoader;Ljava/util/Set;)V
@4.2.1.RELEASE
+#getAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;
+#getAnnotationAttributes(Ljava/lang/String;Z)Lorg/springframework/core/annotation/AnnotationAttributes;
@5.2.0.RELEASE
+#getAnnotations()Lorg/springframework/core/annotation/MergedAnnotations;
-#getAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;
-#getAllAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
-#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
@6.0.0
-###org/springframework/core/type/classreading/MethodMetadataReadingVisitor

+###org/springframework/core/type/classreading/AnnotationMetadataReadingVisitor
@4.0.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#getAnnotationTypes()Ljava/util/Set;
+#getMetaAnnotationTypes(Ljava/lang/String;)Ljava/util/Set;
+#hasAnnotation(Ljava/lang/String;)Z
+#hasMetaAnnotation(Ljava/lang/String;)Z
+#isAnnotated(Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;
+#getAnnotationAttributes(Ljava/lang/String;Z)Lorg/springframework/core/annotation/AnnotationAttributes;
+#getAllAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
+#getAllAnnotationAttributes(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;
+#hasAnnotatedMethods(Ljava/lang/String;)Z
+#getAnnotatedMethods(Ljava/lang/String;)Ljava/util/Set;
+#getMemberClassNames()[Ljava/lang/String;
+#getInterfaceNames()[Ljava/lang/String;
+#getSuperClassName()Ljava/lang/String;
+#hasSuperClass()Z
+#getEnclosingClassName()Ljava/lang/String;
+#hasEnclosingClass()Z
+#isIndependent()Z
+#isFinal()Z
+#isConcrete()Z
+#isAbstract()Z
+#isInterface()Z
+#getClassName()Ljava/lang/String;
+#visitEnd()V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#getAnnotationAttributes(Ljava/lang/String;Z)Ljava/util/Map;
+#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
@4.1.0.RELEASE
+#isAnnotation()Z
@5.2.0.RELEASE
+#getAnnotations()Lorg/springframework/core/annotation/MergedAnnotations;
-#getAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;
-#getAllAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
-#hasSuperClass()Z
-#isConcrete()Z
-#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
@6.0.0
-###org/springframework/core/type/classreading/AnnotationMetadataReadingVisitor

+###org/springframework/core/type/StandardClassMetadata
@2.5
+#<init>(Ljava/lang/Class;)V
+#getIntrospectedClass()Ljava/lang/Class;
+#getClassName()Ljava/lang/String;
+#isInterface()Z
+#isAbstract()Z
+#isConcrete()Z
+#hasSuperClass()Z
+#getSuperClassName()Ljava/lang/String;
+#getInterfaceNames()[Ljava/lang/String;
@2.5.1
+#isIndependent()Z
+#hasEnclosingClass()Z
+#getEnclosingClassName()Ljava/lang/String;
@3.0.0.RELEASE
+#isFinal()Z
@3.1.0.RELEASE
+#getMemberClassNames()[Ljava/lang/String;
@4.1.0.RELEASE
+#isAnnotation()Z
@5.2.0.RELEASE
*#<init>(Ljava/lang/Class;)V[deprecated]
-#isConcrete()Z
-#hasEnclosingClass()Z
-#hasSuperClass()Z
@5.3.9
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/core/type/AnnotatedTypeMetadata
@4.0.0.RELEASE
+#isAnnotated(Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
+#getAnnotationAttributes(Ljava/lang/String;Z)Ljava/util/Map;
+#getAllAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
+#getAllAnnotationAttributes(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;
@5.2.0.RELEASE
+#getAnnotations()Lorg/springframework/core/annotation/MergedAnnotations;

+###org/springframework/core/type/AnnotationMetadata
@2.5
+#getAnnotationTypes()Ljava/util/Set;
+#hasAnnotation(Ljava/lang/String;)Z
+#getMetaAnnotationTypes(Ljava/lang/String;)Ljava/util/Set;
+#hasMetaAnnotation(Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
@3.0.0.RELEASE
+#isAnnotated(Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/String;Z)Ljava/util/Map;
+#hasAnnotatedMethods(Ljava/lang/String;)Z
+#getAnnotatedMethods(Ljava/lang/String;)Ljava/util/Set;
@4.0.0.RELEASE
-#isAnnotated(Ljava/lang/String;)Z
-#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
-#getAnnotationAttributes(Ljava/lang/String;Z)Ljava/util/Map;
@5.2.0.RELEASE
+#introspect(Ljava/lang/Class;)Lorg/springframework/core/type/AnnotationMetadata;
@6.0.0
+#getDeclaredMethods()Ljava/util/Set;

+###org/springframework/core/type/StandardMethodMetadata
@3.0.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;)V
+#getIntrospectedMethod()Ljava/lang/reflect/Method;
+#getMethodName()Ljava/lang/String;
+#isStatic()Z
+#isFinal()Z
+#isOverridable()Z
+#isAnnotated(Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
@3.0.1.RELEASE
+#getDeclaringClassName()Ljava/lang/String;
@3.1.1.RELEASE
+#<init>(Ljava/lang/reflect/Method;Z)V
@4.0.0.RELEASE
+#getAnnotationAttributes(Ljava/lang/String;Z)Ljava/util/Map;
+#getAllAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
+#getAllAnnotationAttributes(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;
@4.2.0.RELEASE
+#getReturnTypeName()Ljava/lang/String;
+#isAbstract()Z
@5.2.0.RELEASE
*#<init>(Ljava/lang/reflect/Method;)V[deprecated]
*#<init>(Ljava/lang/reflect/Method;Z)V[deprecated]
+#getAnnotations()Lorg/springframework/core/annotation/MergedAnnotations;
-#isAnnotated(Ljava/lang/String;)Z
-#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
-#getAllAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
@5.3.9
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@6.0.0
-#<init>(Ljava/lang/reflect/Method;Z)V[deprecated]

+###org/springframework/core/type/MethodMetadata
@3.0.0.RELEASE
+#getMethodName()Ljava/lang/String;
+#isStatic()Z
+#isFinal()Z
+#isOverridable()Z
+#isAnnotated(Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
@3.0.1.RELEASE
+#getDeclaringClassName()Ljava/lang/String;
@4.0.0.RELEASE
-#isAnnotated(Ljava/lang/String;)Z
-#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
@4.2.0.RELEASE
+#getReturnTypeName()Ljava/lang/String;
+#isAbstract()Z

+###org/springframework/core/type/StandardAnnotationMetadata
@2.5
+#<init>(Ljava/lang/Class;)V
+#getAnnotationTypes()Ljava/util/Set;
+#hasAnnotation(Ljava/lang/String;)Z
+#getMetaAnnotationTypes(Ljava/lang/String;)Ljava/util/Set;
+#hasMetaAnnotation(Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
@3.0.0.RELEASE
+#isAnnotated(Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/String;Z)Ljava/util/Map;
+#hasAnnotatedMethods(Ljava/lang/String;)Z
+#getAnnotatedMethods(Ljava/lang/String;)Ljava/util/Set;
@3.1.1.RELEASE
+#<init>(Ljava/lang/Class;Z)V
@4.0.0.RELEASE
+#getAllAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
+#getAllAnnotationAttributes(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;
@5.2.0.RELEASE
*#<init>(Ljava/lang/Class;)V[deprecated]
*#<init>(Ljava/lang/Class;Z)V[deprecated]
+#getAnnotations()Lorg/springframework/core/annotation/MergedAnnotations;
-#getMetaAnnotationTypes(Ljava/lang/String;)Ljava/util/Set;
-#hasAnnotation(Ljava/lang/String;)Z
-#hasMetaAnnotation(Ljava/lang/String;)Z
-#isAnnotated(Ljava/lang/String;)Z
-#getAnnotationAttributes(Ljava/lang/String;)Ljava/util/Map;
-#getAllAnnotationAttributes(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
@6.0.0
+#getDeclaredMethods()Ljava/util/Set;

+###org/springframework/core/DecoratingProxy
@4.3.0.RELEASE
+#getDecoratedClass()Ljava/lang/Class;

+###org/springframework/core/LocalVariableTableParameterNameDiscoverer
@2.0
+#<init>()V
+#getParameterNames(Ljava/lang/reflect/Method;)[Ljava/lang/String;
+#getParameterNames(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;

+###org/springframework/core/log/LogFormatUtils
@5.1.0.RELEASE
+#<init>()V
+#formatValue(Ljava/lang/Object;Z)Ljava/lang/String;
+#traceDebug(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
@5.2.18.RELEASE
+#formatValue(Ljava/lang/Object;IZ)Ljava/lang/String;
@5.3.0
-#formatValue(Ljava/lang/Object;IZ)Ljava/lang/String;
@5.3.11
+#formatValue(Ljava/lang/Object;IZ)Ljava/lang/String;

+###org/springframework/core/log/LogDelegateFactory
@5.1.0.RELEASE
+#getCompositeLog(Lorg/apache/commons/logging/Log;Lorg/apache/commons/logging/Log;[Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;
+#getHiddenLog(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
@5.3.5
+#getHiddenLog(Ljava/lang/String;)Lorg/apache/commons/logging/Log;

+###org/springframework/core/AttributeAccessor
@2.0-m4
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#removeAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#hasAttribute(Ljava/lang/String;)Z
+#attributeNames()[Ljava/lang/String;
@5.3.3
+#computeAttribute(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;

+###org/springframework/core/KotlinReflectionParameterNameDiscoverer
@5.0.0.RELEASE
+#<init>()V
+#getParameterNames(Ljava/lang/reflect/Method;)[Ljava/lang/String;
+#getParameterNames(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;

+###org/springframework/core/PriorityOrdered
@2.5

+###org/springframework/core/annotation/AnnotationAwareOrderComparator
@2.0.1
+#<init>()V
@3.2.1.RELEASE
+#sort(Ljava/util/List;)V
+#sort([Ljava/lang/Object;)V
@4.0.0.RELEASE
+#sortIfNecessary(Ljava/lang/Object;)V
@4.1.0.RELEASE
+#getPriority(Ljava/lang/Object;)Ljava/lang/Integer;

+###org/springframework/core/annotation/SynthesizedAnnotation
@4.2.0.RELEASE
@6.0.0
-###org/springframework/core/annotation/SynthesizedAnnotation

+###org/springframework/core/annotation/AnnotationAttributes
@3.1.1.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Map;)V
+#fromMap(Ljava/util/Map;)Lorg/springframework/core/annotation/AnnotationAttributes;
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getStringArray(Ljava/lang/String;)[Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z
+#getNumber(Ljava/lang/String;)Ljava/lang/Number;
+#getEnum(Ljava/lang/String;)Ljava/lang/Enum;
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
+#getClassArray(Ljava/lang/String;)[Ljava/lang/Class;
+#getAnnotation(Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;
+#getAnnotationArray(Ljava/lang/String;)[Lorg/springframework/core/annotation/AnnotationAttributes;
@3.2.0.RELEASE
+#toString()Ljava/lang/String;
@4.2.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#annotationType()Ljava/lang/Class;
+#getAliasedString(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/String;
+#getAliasedStringArray(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)[Ljava/lang/String;
+#getAliasedClassArray(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)[Ljava/lang/Class;
+#getAnnotation(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getAnnotationArray(Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;
+#putIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@4.3.2.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V
+#<init>(Lorg/springframework/core/annotation/AnnotationAttributes;)V
*#getAliasedString(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/String;[deprecated]
*#getAliasedStringArray(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)[Ljava/lang/String;[deprecated]
*#getAliasedClassArray(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)[Ljava/lang/Class;[deprecated]
@5.0.0.RELEASE
-#getAliasedString(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/String;[deprecated]
-#getAliasedStringArray(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)[Ljava/lang/String;[deprecated]
-#getAliasedClassArray(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)[Ljava/lang/Class;[deprecated]
@5.0.16.RELEASE
-#putIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@5.1.0.RELEASE
+#putIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@5.1.10.RELEASE
-#putIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/core/annotation/OrderUtils
@4.1.0.RELEASE
+#<init>()V
+#getOrder(Ljava/lang/Class;)Ljava/lang/Integer;
+#getOrder(Ljava/lang/Class;Ljava/lang/Integer;)Ljava/lang/Integer;
+#getPriority(Ljava/lang/Class;)Ljava/lang/Integer;
@5.0.0.RELEASE
+#getOrder(Ljava/lang/Class;I)I
@5.3.0
+#getOrder(Ljava/lang/reflect/AnnotatedElement;)Ljava/lang/Integer;

+###org/springframework/core/annotation/AliasFor
@4.2.0.RELEASE
+#value()Ljava/lang/String;
+#attribute()Ljava/lang/String;
+#annotation()Ljava/lang/Class;

+###org/springframework/core/annotation/AnnotatedElementUtils
@4.0.0.RELEASE
+#<init>()V
+#getMetaAnnotationTypes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Ljava/util/Set;
+#hasMetaAnnotationTypes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Z
+#isAnnotated(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;
+#getAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;
+#getAllAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;ZZ)Lorg/springframework/util/MultiValueMap;
@4.0.3.RELEASE
+#getAllAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
@4.2.0.RELEASE
+#getMetaAnnotationTypes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;
+#getMergedAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getMergedAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Lorg/springframework/core/annotation/AnnotationAttributes;
*#getAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;[deprecated]
+#getMergedAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;
*#getAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;[deprecated]
+#getMergedAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;
+#findMergedAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#findMergedAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Ljava/lang/annotation/Annotation;
+#findMergedAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;
@4.2.3.RELEASE
+#hasMetaAnnotationTypes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z
+#isAnnotated(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z
*#findMergedAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Ljava/lang/annotation/Annotation;[deprecated]
+#findMergedAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;
@4.3.0.RELEASE
+#forAnnotations([Ljava/lang/annotation/Annotation;)Ljava/lang/reflect/AnnotatedElement;
+#getAllMergedAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;
+#getMergedRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;
+#getMergedRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;
+#hasAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z
+#findAllMergedAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;
+#findMergedRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;
+#findMergedRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;
@5.0.0.RELEASE
-#getAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;[deprecated]
-#getAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;[deprecated]
-#findMergedAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Ljava/lang/annotation/Annotation;[deprecated]
@5.1.0.RELEASE
+#getAllMergedAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/util/Set;)Ljava/util/Set;
+#findAllMergedAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/util/Set;)Ljava/util/Set;

+###org/springframework/core/annotation/Order
@2.0-m2
+#value()I

+###org/springframework/core/annotation/AnnotationConfigurationException
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/core/annotation/AnnotationUtils
@2.0-m2
+#<init>()V
+#findMethodAnnotation(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
@2.0-m5
+#getAnnotations(Ljava/lang/reflect/Method;)[Ljava/lang/annotation/Annotation;
+#getAnnotation(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#findAnnotation(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
-#findMethodAnnotation(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
@2.5
+#findAnnotation(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#findAnnotationDeclaringClass(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
+#isAnnotationDeclaredLocally(Ljava/lang/Class;Ljava/lang/Class;)Z
+#isAnnotationInherited(Ljava/lang/Class;Ljava/lang/Class;)Z
+#getAnnotationAttributes(Ljava/lang/annotation/Annotation;)Ljava/util/Map;
+#getValue(Ljava/lang/annotation/Annotation;)Ljava/lang/Object;
+#getValue(Ljava/lang/annotation/Annotation;Ljava/lang/String;)Ljava/lang/Object;
+#getDefaultValue(Ljava/lang/annotation/Annotation;)Ljava/lang/Object;
+#getDefaultValue(Ljava/lang/annotation/Annotation;Ljava/lang/String;)Ljava/lang/Object;
+#getDefaultValue(Ljava/lang/Class;)Ljava/lang/Object;
+#getDefaultValue(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
@3.0.0.RELEASE
+#getAnnotationAttributes(Ljava/lang/annotation/Annotation;Z)Ljava/util/Map;
@3.1.0.RELEASE
+#getAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
@3.1.1.RELEASE
+#getAnnotationAttributes(Ljava/lang/annotation/Annotation;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;
@3.2.2.RELEASE
+#findAnnotationDeclaringClassForTypes(Ljava/util/List;Ljava/lang/Class;)Ljava/lang/Class;
@4.0.0.RELEASE
+#getAnnotation(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getRepeatableAnnotation(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;
+#getRepeatableAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;
@4.0.3.RELEASE
+#isInJavaLangAnnotationPackage(Ljava/lang/annotation/Annotation;)Z
@4.0.8.RELEASE
+#getAnnotations(Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/annotation/Annotation;
@4.1.0.RELEASE
-#getAnnotations(Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/annotation/Annotation;
@4.1.2.RELEASE
+#getAnnotations(Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/annotation/Annotation;
@4.2.0.RELEASE
*#getRepeatableAnnotation(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;[deprecated]
*#getRepeatableAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;[deprecated]
+#getRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;
+#getRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;
+#getDeclaredRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;
+#getDeclaredRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;
+#findAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#isInJavaLangAnnotationPackage(Ljava/lang/String;)Z
+#getAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/AnnotationAttributes;
+#getAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/annotation/Annotation;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;
+#synthesizeAnnotation(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/AnnotatedElement;)Ljava/lang/annotation/Annotation;
+#synthesizeAnnotation(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/reflect/AnnotatedElement;)Ljava/lang/annotation/Annotation;
+#synthesizeAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#synthesizeAnnotationArray([Ljava/lang/annotation/Annotation;Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/annotation/Annotation;
@4.2.1.RELEASE
+#isAnnotationMetaPresent(Ljava/lang/Class;Ljava/lang/Class;)Z
@4.3.2.RELEASE
+#registerDefaultValues(Lorg/springframework/core/annotation/AnnotationAttributes;)V
+#postProcessAnnotationAttributes(Ljava/lang/Object;Lorg/springframework/core/annotation/AnnotationAttributes;Z)V
-#synthesizeAnnotationArray([Ljava/lang/annotation/Annotation;Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/annotation/Annotation;
@4.3.15.RELEASE
+#validateAnnotation(Ljava/lang/annotation/Annotation;)V
+#clearCache()V
@5.0.0.RELEASE
-#getRepeatableAnnotation(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;[deprecated]
-#getRepeatableAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;[deprecated]
-#validateAnnotation(Ljava/lang/annotation/Annotation;)V
-#clearCache()V
@5.0.5.RELEASE
+#validateAnnotation(Ljava/lang/annotation/Annotation;)V
+#clearCache()V
@5.2.0.RELEASE
+#isCandidateClass(Ljava/lang/Class;Ljava/util/Collection;)Z
+#isCandidateClass(Ljava/lang/Class;Ljava/lang/Class;)Z
+#isCandidateClass(Ljava/lang/Class;Ljava/lang/String;)Z
*#getAnnotations(Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/annotation/Annotation;[deprecated]
*#getAnnotations(Ljava/lang/reflect/Method;)[Ljava/lang/annotation/Annotation;[deprecated]
*#getRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;[deprecated]
*#getRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;[deprecated]
*#getDeclaredRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;[deprecated]
*#getDeclaredRepeatableAnnotations(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;[deprecated]
*#findAnnotationDeclaringClass(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]
*#findAnnotationDeclaringClassForTypes(Ljava/util/List;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]
*#isAnnotationInherited(Ljava/lang/Class;Ljava/lang/Class;)Z[deprecated]
*#isAnnotationMetaPresent(Ljava/lang/Class;Ljava/lang/Class;)Z[deprecated]
@5.3.23
+#isSynthesizedAnnotation(Ljava/lang/annotation/Annotation;)Z

+###org/springframework/core/annotation/SynthesizingMethodParameter
@4.2.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;I)V
@4.3.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;II)V
+#<init>(Ljava/lang/reflect/Constructor;I)V
+#<init>(Ljava/lang/reflect/Constructor;II)V
+#clone()Lorg/springframework/core/annotation/SynthesizingMethodParameter;
+#clone()Lorg/springframework/core/MethodParameter;
+#clone()Ljava/lang/Object;
@5.0.0.RELEASE
+#forExecutable(Ljava/lang/reflect/Executable;I)Lorg/springframework/core/annotation/SynthesizingMethodParameter;
+#forParameter(Ljava/lang/reflect/Parameter;)Lorg/springframework/core/annotation/SynthesizingMethodParameter;

+###org/springframework/core/AttributeAccessorSupport
@2.0-m4
+#<init>()V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#removeAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#hasAttribute(Ljava/lang/String;)Z
+#attributeNames()[Ljava/lang/String;
@2.0-m5
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.3.3
+#computeAttribute(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;

+###org/springframework/core/ConfigurableObjectInputStream
@2.5.5
+#<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V
@3.0.6.RELEASE
+#<init>(Ljava/io/InputStream;Ljava/lang/ClassLoader;Z)V

+###org/springframework/core/NestedRuntimeException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getCause()Ljava/lang/Throwable;
+#getMessage()Ljava/lang/String;
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V
@1.1.3
+#contains(Ljava/lang/Class;)Z
@2.0-m3
+#getRootCause()Ljava/lang/Throwable;
@2.0.3
+#getMostSpecificCause()Ljava/lang/Throwable;
@2.5
-#getCause()Ljava/lang/Throwable;
-#printStackTrace(Ljava/io/PrintStream;)V
-#printStackTrace(Ljava/io/PrintWriter;)V
@6.0.0
-#getMessage()Ljava/lang/String;

+###org/springframework/core/NestedExceptionUtils
@2.0-rc2
+#<init>()V
+#buildMessage(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;
@4.3.9.RELEASE
+#getRootCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#getMostSpecificCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
@6.0.0
*#buildMessage(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;[deprecated]

+###org/springframework/core/Conventions
@2.0-m2
+#<init>()V
+#getVariableName(Ljava/lang/Object;)Ljava/lang/String;
@2.0-m4
+#attributeNameToPropertyName(Ljava/lang/String;)Ljava/lang/String;
+#getQualifiedAttributeName(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
@2.5.1
+#getVariableNameForParameter(Lorg/springframework/core/MethodParameter;)Ljava/lang/String;
+#getVariableNameForReturnType(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getVariableNameForReturnType(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/String;
@2.5.2
+#getVariableNameForReturnType(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/String;
@5.1.0.RELEASE
-#<init>()V

+###org/springframework/core/Ordered
@1.0-rc1
+#getOrder()I

+###org/springframework/core/codec/ResourceEncoder
@5.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
@5.0.5.RELEASE
+#getContentLength(Lorg/springframework/core/io/Resource;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
+#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
@5.0.7.RELEASE
-#getContentLength(Lorg/springframework/core/io/Resource;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
-#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;

+###org/springframework/core/codec/DataBufferEncoder
@5.0.0.RELEASE
+#<init>()V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.0.5.RELEASE
+#getContentLength(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
+#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
@5.0.7.RELEASE
-#getContentLength(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
-#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
@5.2.0.RELEASE
+#encodeValue(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/core/codec/AbstractEncoder
@5.0.0.RELEASE
+#getEncodableMimeTypes()Ljava/util/List;
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
@5.1.0.RELEASE
+#setLogger(Lorg/apache/commons/logging/Log;)V
+#getLogger()Lorg/apache/commons/logging/Log;

+###org/springframework/core/codec/AbstractDataBufferDecoder
@5.0.3.RELEASE
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.1.11.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
@5.2.0.RELEASE
-#setMaxInMemorySize(I)V
-#getMaxInMemorySize()I
@5.2.1.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I

+###org/springframework/core/codec/DataBufferDecoder
@5.0.0.RELEASE
+#<init>()V
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.2.0.RELEASE
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/core/codec/AbstractDecoder
@5.0.0.RELEASE
+#getDecodableMimeTypes()Ljava/util/List;
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#setLogger(Lorg/apache/commons/logging/Log;)V
+#getLogger()Lorg/apache/commons/logging/Log;

+###org/springframework/core/codec/CharSequenceEncoder
@5.0.0.RELEASE
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#textPlainOnly()Lorg/springframework/core/codec/CharSequenceEncoder;
+#allMimeTypes()Lorg/springframework/core/codec/CharSequenceEncoder;
@5.0.5.RELEASE
+#getContentLength(Ljava/lang/CharSequence;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
+#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
@5.0.7.RELEASE
-#getContentLength(Ljava/lang/CharSequence;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
-#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
@5.2.0.RELEASE
+#encodeValue(Ljava/lang/CharSequence;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/core/codec/CodecException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/core/codec/AbstractSingleValueEncoder
@5.0.0.RELEASE
+#<init>([Lorg/springframework/util/MimeType;)V
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;

+###org/springframework/core/codec/DecodingException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/core/codec/EncodingException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/core/codec/Encoder
@5.0.0.RELEASE
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#getEncodableMimeTypes()Ljava/util/List;
@5.0.5.RELEASE
+#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
@5.0.7.RELEASE
*#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;[deprecated]
@5.1.0.RELEASE
-#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;[deprecated]
@5.2.0.RELEASE
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
@5.3.4
+#getEncodableMimeTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;

+###org/springframework/core/codec/ByteBufferDecoder
@5.0.0.RELEASE
+#<init>()V
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.0.3.RELEASE
-#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.2.0.RELEASE
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/nio/ByteBuffer;
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/core/codec/ByteArrayDecoder
@5.0.0.RELEASE
+#<init>()V
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.0.3.RELEASE
-#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.2.0.RELEASE
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)[B
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/core/codec/ByteArrayEncoder
@5.0.0.RELEASE
+#<init>()V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.0.5.RELEASE
+#getContentLength([BLorg/springframework/util/MimeType;)Ljava/lang/Long;
+#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
@5.0.7.RELEASE
-#getContentLength([BLorg/springframework/util/MimeType;)Ljava/lang/Long;
-#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
@5.2.0.RELEASE
+#encodeValue([BLorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/core/codec/ResourceDecoder
@5.0.0.RELEASE
+#<init>()V
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.0.3.RELEASE
-#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.2.0.RELEASE
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/Resource;
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/core/codec/ResourceRegionEncoder
@5.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;

+###org/springframework/core/codec/Decoder
@5.0.0.RELEASE
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#getDecodableMimeTypes()Ljava/util/List;
@5.2.0.RELEASE
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;
@5.3.4
+#getDecodableMimeTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;

+###org/springframework/core/codec/ByteBufferEncoder
@5.0.0.RELEASE
+#<init>()V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.0.5.RELEASE
+#getContentLength(Ljava/nio/ByteBuffer;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
+#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
@5.0.7.RELEASE
-#getContentLength(Ljava/nio/ByteBuffer;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
-#getContentLength(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
@5.2.0.RELEASE
+#encodeValue(Ljava/nio/ByteBuffer;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/core/codec/Hints
@5.1.0.RELEASE
+#<init>()V
+#from(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Map;
+#none()Ljava/util/Map;
+#getRequiredHint(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;
+#getLogPrefix(Ljava/util/Map;)Ljava/lang/String;
+#isLoggingSuppressed(Ljava/util/Map;)Z
+#merge(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
+#merge(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Map;
@5.3.2
+#touchDataBuffer(Lorg/springframework/core/io/buffer/DataBuffer;Ljava/util/Map;Lorg/apache/commons/logging/Log;)V

+###org/springframework/core/codec/StringDecoder
@5.0.0.RELEASE
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#textPlainOnly(Z)Lorg/springframework/core/codec/StringDecoder;
+#allMimeTypes(Z)Lorg/springframework/core/codec/StringDecoder;
@5.0.3.RELEASE
-#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.0.4.RELEASE
*#textPlainOnly(Z)Lorg/springframework/core/codec/StringDecoder;[deprecated]
+#textPlainOnly()Lorg/springframework/core/codec/StringDecoder;
+#textPlainOnly(Ljava/util/List;Z)Lorg/springframework/core/codec/StringDecoder;
*#allMimeTypes(Z)Lorg/springframework/core/codec/StringDecoder;[deprecated]
+#allMimeTypes()Lorg/springframework/core/codec/StringDecoder;
+#allMimeTypes(Ljava/util/List;Z)Lorg/springframework/core/codec/StringDecoder;
@5.2.0.RELEASE
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/String;
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;
@5.2.9.RELEASE
+#setDefaultCharset(Ljava/nio/charset/Charset;)V
+#getDefaultCharset()Ljava/nio/charset/Charset;
@6.0.0
-#textPlainOnly(Z)Lorg/springframework/core/codec/StringDecoder;[deprecated]
-#allMimeTypes(Z)Lorg/springframework/core/codec/StringDecoder;[deprecated]

+###org/springframework/core/NamedThreadLocal
@2.5.2
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###org/springframework/core/NestedCheckedException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getCause()Ljava/lang/Throwable;
+#getMessage()Ljava/lang/String;
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V
@1.1.3
+#contains(Ljava/lang/Class;)Z
@2.0-m3
+#getRootCause()Ljava/lang/Throwable;
@2.0.3
+#getMostSpecificCause()Ljava/lang/Throwable;
@2.5
-#getCause()Ljava/lang/Throwable;
-#printStackTrace(Ljava/io/PrintStream;)V
-#printStackTrace(Ljava/io/PrintWriter;)V
@6.0.0
-#getMessage()Ljava/lang/String;

+###org/springframework/core/StandardReflectionParameterNameDiscoverer
@4.0.0.RELEASE
+#<init>()V
+#getParameterNames(Ljava/lang/reflect/Method;)[Ljava/lang/String;
+#getParameterNames(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;

+###org/springframework/core/task/support/ExecutorServiceAdapter
@3.0.0.RELEASE
+#<init>(Lorg/springframework/core/task/TaskExecutor;)V
+#execute(Ljava/lang/Runnable;)V
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#isShutdown()Z
+#isTerminated()Z
@6.0.5
+#close()V

+###org/springframework/core/task/support/ConcurrentExecutorAdapter
@2.5
+#<init>(Lorg/springframework/core/task/TaskExecutor;)V
+#execute(Ljava/lang/Runnable;)V

+###org/springframework/core/task/support/TaskExecutorAdapter
@3.0.0.RELEASE
+#<init>(Ljava/util/concurrent/Executor;)V
+#execute(Ljava/lang/Runnable;)V
+#execute(Ljava/lang/Runnable;J)V
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
@4.0.1.RELEASE
+#submitListenable(Ljava/lang/Runnable;)Lorg/springframework/util/concurrent/ListenableFuture;
+#submitListenable(Ljava/util/concurrent/Callable;)Lorg/springframework/util/concurrent/ListenableFuture;
@4.3.0.RELEASE
+#setTaskDecorator(Lorg/springframework/core/task/TaskDecorator;)V
@5.3.16
*#execute(Ljava/lang/Runnable;J)V[deprecated]

+###org/springframework/core/task/TaskExecutor
@2.0-m1
+#execute(Ljava/lang/Runnable;)V

+###org/springframework/core/task/TaskDecorator
@4.3.0.RELEASE
+#decorate(Ljava/lang/Runnable;)Ljava/lang/Runnable;

+###org/springframework/core/task/TaskTimeoutException
@2.0.3
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/core/task/SimpleAsyncTaskExecutor
@2.0-m1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setThreadNamePrefix(Ljava/lang/String;)V
+#setThreadPriority(I)V
+#setDaemon(Z)V
+#execute(Ljava/lang/Runnable;)V
@2.0.3
+#setConcurrencyLimit(I)V
+#getConcurrencyLimit()I
+#isThrottleActive()Z
+#execute(Ljava/lang/Runnable;J)V
-#setThreadNamePrefix(Ljava/lang/String;)V
-#setThreadPriority(I)V
-#setDaemon(Z)V
@3.0.0.RELEASE
+#<init>(Ljava/util/concurrent/ThreadFactory;)V
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)V
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
@4.0.0.RELEASE
+#submitListenable(Ljava/lang/Runnable;)Lorg/springframework/util/concurrent/ListenableFuture;
+#submitListenable(Ljava/util/concurrent/Callable;)Lorg/springframework/util/concurrent/ListenableFuture;
@4.3.0.RELEASE
+#setTaskDecorator(Lorg/springframework/core/task/TaskDecorator;)V
@5.3.16
*#execute(Ljava/lang/Runnable;J)V[deprecated]

+###org/springframework/core/task/AsyncListenableTaskExecutor
@4.0.0.RELEASE
+#submitListenable(Ljava/lang/Runnable;)Lorg/springframework/util/concurrent/ListenableFuture;
+#submitListenable(Ljava/util/concurrent/Callable;)Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
*#submitListenable(Ljava/lang/Runnable;)Lorg/springframework/util/concurrent/ListenableFuture;[deprecated]
*#submitListenable(Ljava/util/concurrent/Callable;)Lorg/springframework/util/concurrent/ListenableFuture;[deprecated]

+###org/springframework/core/task/AsyncTaskExecutor
@2.0.3
+#execute(Ljava/lang/Runnable;J)V
@3.0.0.RELEASE
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
@5.3.16
*#execute(Ljava/lang/Runnable;J)V[deprecated]
@6.0.0
+#submitCompletable(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
+#submitCompletable(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/CompletableFuture;

+###org/springframework/core/task/TaskRejectedException
@2.0.1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/core/task/SyncTaskExecutor
@2.0-m1
+#<init>()V
+#execute(Ljava/lang/Runnable;)V

+###org/springframework/core/OverridingClassLoader
@2.0.1
+#<init>(Ljava/lang/ClassLoader;)V
+#excludePackage(Ljava/lang/String;)V
+#excludeClass(Ljava/lang/String;)V
@2.5.2
-#excludePackage(Ljava/lang/String;)V
-#excludeClass(Ljava/lang/String;)V
@4.3.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)V
+#loadClass(Ljava/lang/String;)Ljava/lang/Class;

+###org/springframework/core/ReactiveAdapterRegistry
@5.0.0.RELEASE
+#<init>()V
+#hasAdapters()Z
+#registerReactiveType(Lorg/springframework/core/ReactiveTypeDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)V
+#getAdapter(Ljava/lang/Class;)Lorg/springframework/core/ReactiveAdapter;
+#getAdapter(Ljava/lang/Class;Ljava/lang/Object;)Lorg/springframework/core/ReactiveAdapter;
@5.0.2.RELEASE
+#getSharedInstance()Lorg/springframework/core/ReactiveAdapterRegistry;

+###org/springframework/core/OrderComparator$OrderSourceProvider
@4.1.0.RELEASE
+#getOrderSource(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/core/env/SystemEnvironmentPropertySource
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#containsProperty(Ljava/lang/String;)Z
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/core/env/PropertySource$StubPropertySource
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/core/env/MapPropertySource
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#getPropertyNames()[Ljava/lang/String;
@4.1.1.RELEASE
+#containsProperty(Ljava/lang/String;)Z

+###org/springframework/core/env/PropertySource
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getSource()Ljava/lang/Object;
+#containsProperty(Ljava/lang/String;)Z
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#named(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;

+###org/springframework/core/env/Environment
@3.1.0.RELEASE
+#getActiveProfiles()[Ljava/lang/String;
+#getDefaultProfiles()[Ljava/lang/String;
+#acceptsProfiles([Ljava/lang/String;)Z
@5.1.0.RELEASE
*#acceptsProfiles([Ljava/lang/String;)Z[deprecated]
+#acceptsProfiles(Lorg/springframework/core/env/Profiles;)Z

+###org/springframework/core/env/AbstractEnvironment
@3.1.0.RELEASE
+#<init>()V
+#getActiveProfiles()[Ljava/lang/String;
+#setActiveProfiles([Ljava/lang/String;)V
+#addActiveProfile(Ljava/lang/String;)V
+#getDefaultProfiles()[Ljava/lang/String;
+#setDefaultProfiles([Ljava/lang/String;)V
+#acceptsProfiles([Ljava/lang/String;)Z
+#getPropertySources()Lorg/springframework/core/env/MutablePropertySources;
+#getSystemEnvironment()Ljava/util/Map;
+#getSystemProperties()Ljava/util/Map;
+#containsProperty(Ljava/lang/String;)Z
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
+#getRequiredProperty(Ljava/lang/String;)Ljava/lang/String;
+#getRequiredProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#setRequiredProperties([Ljava/lang/String;)V
+#validateRequiredProperties()V
+#resolvePlaceholders(Ljava/lang/String;)Ljava/lang/String;
+#resolveRequiredPlaceholders(Ljava/lang/String;)Ljava/lang/String;
+#setConversionService(Lorg/springframework/core/convert/support/ConfigurableConversionService;)V
+#getConversionService()Lorg/springframework/core/convert/support/ConfigurableConversionService;
+#setPlaceholderPrefix(Ljava/lang/String;)V
+#setPlaceholderSuffix(Ljava/lang/String;)V
+#setValueSeparator(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@3.1.2.RELEASE
+#merge(Lorg/springframework/core/env/ConfigurableEnvironment;)V
@3.2.0.RELEASE
+#setIgnoreUnresolvableNestedPlaceholders(Z)V
@4.3.1.RELEASE
*#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]
@5.0.0.RELEASE
-#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]
@5.1.0.RELEASE
*#acceptsProfiles([Ljava/lang/String;)Z[deprecated]
+#acceptsProfiles(Lorg/springframework/core/env/Profiles;)Z

+###org/springframework/core/env/JOptCommandLinePropertySource
@3.1.0.RELEASE
+#<init>(Ljoptsimple/OptionSet;)V
+#<init>(Ljava/lang/String;Ljoptsimple/OptionSet;)V
+#getOptionValues(Ljava/lang/String;)Ljava/util/List;
@4.0.0.RELEASE
+#getPropertyNames()[Ljava/lang/String;

+###org/springframework/core/env/PropertySourcesPropertyResolver
@3.1.0.RELEASE
+#<init>(Lorg/springframework/core/env/PropertySources;)V
+#containsProperty(Ljava/lang/String;)Z
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
@4.3.1.RELEASE
*#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]
@5.0.0.RELEASE
-#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]

+###org/springframework/core/env/EnvironmentCapable
@3.1.0.RELEASE
+#getEnvironment()Lorg/springframework/core/env/Environment;

+###org/springframework/core/env/PropertyResolver
@3.1.0.RELEASE
+#containsProperty(Ljava/lang/String;)Z
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
+#getRequiredProperty(Ljava/lang/String;)Ljava/lang/String;
+#getRequiredProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#resolvePlaceholders(Ljava/lang/String;)Ljava/lang/String;
+#resolveRequiredPlaceholders(Ljava/lang/String;)Ljava/lang/String;
@4.3.1.RELEASE
*#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]
@5.0.0.RELEASE
-#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]

+###org/springframework/core/env/ConfigurableEnvironment
@3.1.0.RELEASE
+#setActiveProfiles([Ljava/lang/String;)V
+#addActiveProfile(Ljava/lang/String;)V
+#setDefaultProfiles([Ljava/lang/String;)V
+#getPropertySources()Lorg/springframework/core/env/MutablePropertySources;
+#getSystemEnvironment()Ljava/util/Map;
+#getSystemProperties()Ljava/util/Map;
@3.1.2.RELEASE
+#merge(Lorg/springframework/core/env/ConfigurableEnvironment;)V

+###org/springframework/core/env/CompositePropertySource
@3.1.1.RELEASE
+#<init>(Ljava/lang/String;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#addPropertySource(Lorg/springframework/core/env/PropertySource;)V
+#toString()Ljava/lang/String;
@4.1.0.RELEASE
+#addFirstPropertySource(Lorg/springframework/core/env/PropertySource;)V
@4.1.1.RELEASE
+#getPropertySources()Ljava/util/Collection;
@4.1.2.RELEASE
+#containsProperty(Ljava/lang/String;)Z
+#getPropertyNames()[Ljava/lang/String;

+###org/springframework/core/env/MissingRequiredPropertiesException
@3.1.0.RELEASE
+#<init>()V
+#getMissingRequiredProperties()Ljava/util/Set;
+#getMessage()Ljava/lang/String;

+###org/springframework/core/env/Profiles
@5.1.0.RELEASE
+#matches(Ljava/util/function/Predicate;)Z
+#of([Ljava/lang/String;)Lorg/springframework/core/env/Profiles;

+###org/springframework/core/env/SimpleCommandLinePropertySource
@3.1.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
@4.0.0.RELEASE
+#getPropertyNames()[Ljava/lang/String;

+###org/springframework/core/env/CommandLinePropertySource
@3.1.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#setNonOptionArgsPropertyName(Ljava/lang/String;)V
+#containsProperty(Ljava/lang/String;)Z
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/core/env/PropertySources
@3.1.0.RELEASE
+#contains(Ljava/lang/String;)Z
+#get(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
@5.1.0.RELEASE
+#stream()Ljava/util/stream/Stream;

+###org/springframework/core/env/ConfigurablePropertyResolver
@3.1.0.RELEASE
+#getConversionService()Lorg/springframework/core/convert/support/ConfigurableConversionService;
+#setConversionService(Lorg/springframework/core/convert/support/ConfigurableConversionService;)V
+#setPlaceholderPrefix(Ljava/lang/String;)V
+#setPlaceholderSuffix(Ljava/lang/String;)V
+#setValueSeparator(Ljava/lang/String;)V
+#setRequiredProperties([Ljava/lang/String;)V
+#validateRequiredProperties()V
@3.2.0.RELEASE
+#setIgnoreUnresolvableNestedPlaceholders(Z)V

+###org/springframework/core/env/EnumerablePropertySource
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#getPropertyNames()[Ljava/lang/String;
+#containsProperty(Ljava/lang/String;)Z

+###org/springframework/core/env/MutablePropertySources
@3.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/env/PropertySources;)V
+#contains(Ljava/lang/String;)Z
+#get(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
+#iterator()Ljava/util/Iterator;
+#addFirst(Lorg/springframework/core/env/PropertySource;)V
+#addLast(Lorg/springframework/core/env/PropertySource;)V
+#addBefore(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
+#addAfter(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
+#precedenceOf(Lorg/springframework/core/env/PropertySource;)I
+#remove(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
+#replace(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
+#size()I
+#toString()Ljava/lang/String;
@5.1.0.RELEASE
+#spliterator()Ljava/util/Spliterator;
+#stream()Ljava/util/stream/Stream;

+###org/springframework/core/env/AbstractPropertyResolver
@3.1.0.RELEASE
+#<init>()V
+#getConversionService()Lorg/springframework/core/convert/support/ConfigurableConversionService;
+#setConversionService(Lorg/springframework/core/convert/support/ConfigurableConversionService;)V
+#getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#setRequiredProperties([Ljava/lang/String;)V
+#validateRequiredProperties()V
+#getRequiredProperty(Ljava/lang/String;)Ljava/lang/String;
+#getRequiredProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#setPlaceholderPrefix(Ljava/lang/String;)V
+#setPlaceholderSuffix(Ljava/lang/String;)V
+#setValueSeparator(Ljava/lang/String;)V
+#resolvePlaceholders(Ljava/lang/String;)Ljava/lang/String;
+#resolveRequiredPlaceholders(Ljava/lang/String;)Ljava/lang/String;
@3.2.0.RELEASE
+#setIgnoreUnresolvableNestedPlaceholders(Z)V
@4.3.1.RELEASE
+#containsProperty(Ljava/lang/String;)Z
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]
@5.0.0.RELEASE
-#getPropertyAsClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]

+###org/springframework/core/env/StandardEnvironment
@3.1.0.RELEASE
+#<init>()V

+###org/springframework/core/env/PropertiesPropertySource
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Properties;)V
@5.0.15.RELEASE
+#getPropertyNames()[Ljava/lang/String;
@5.1.0.RELEASE
-#getPropertyNames()[Ljava/lang/String;
@5.1.8.RELEASE
+#getPropertyNames()[Ljava/lang/String;

+###org/springframework/core/MethodIntrospector
@4.2.3.RELEASE
+#<init>()V
+#selectMethods(Ljava/lang/Class;Lorg/springframework/core/MethodIntrospector$MetadataLookup;)Ljava/util/Map;
+#selectMethods(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodFilter;)Ljava/util/Set;
+#selectInvocableMethod(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;
@5.1.0.RELEASE
-#<init>()V

+###org/springframework/core/MethodParameter
@2.0-m2
+#<init>(Ljava/lang/reflect/Method;I)V
+#<init>(Ljava/lang/reflect/Constructor;I)V
+#getMethod()Ljava/lang/reflect/Method;
+#getConstructor()Ljava/lang/reflect/Constructor;
+#getParameterIndex()I
+#forMethodOrConstructor(Ljava/lang/Object;I)Lorg/springframework/core/MethodParameter;
@2.0.2
+#<init>(Ljava/lang/reflect/Method;II)V
+#<init>(Ljava/lang/reflect/Constructor;II)V
+#getNestingLevel()I
+#increaseNestingLevel()V
+#decreaseNestingLevel()V
@2.0.3
+#setTypeIndexForCurrentLevel(I)V
+#getTypeIndexForCurrentLevel()Ljava/lang/Integer;
+#getTypeIndexForLevel(I)Ljava/lang/Integer;
@2.5
+#getParameterType()Ljava/lang/Class;
+#getParameterAnnotations()[Ljava/lang/Object;
@2.5.2
+#<init>(Lorg/springframework/core/MethodParameter;)V
+#initParameterNameDiscovery(Lorg/springframework/core/ParameterNameDiscoverer;)V
+#getParameterName()Ljava/lang/String;
@3.0.0.RELEASE
+#getDeclaringClass()Ljava/lang/Class;
+#getGenericParameterType()Ljava/lang/reflect/Type;
+#getMethodAnnotations()[Ljava/lang/annotation/Annotation;
+#getMethodAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getParameterAnnotations()[Ljava/lang/annotation/Annotation;
+#getParameterAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
-#getParameterAnnotations()[Ljava/lang/Object;
@3.1.0.RELEASE
+#hasParameterAnnotations()Z
+#hasParameterAnnotation(Ljava/lang/Class;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.1.1.RELEASE
+#getNestedParameterType()Ljava/lang/Class;
@4.0.0.RELEASE
+#getMember()Ljava/lang/reflect/Member;
+#getAnnotatedElement()Ljava/lang/reflect/AnnotatedElement;
+#getContainingClass()Ljava/lang/Class;
@4.2.0.RELEASE
+#getNestedGenericParameterType()Ljava/lang/reflect/Type;
@4.3.0.RELEASE
+#nested()Lorg/springframework/core/MethodParameter;
+#isOptional()Z
+#nestedIfOptional()Lorg/springframework/core/MethodParameter;
+#hasMethodAnnotation(Ljava/lang/Class;)Z
+#toString()Ljava/lang/String;
+#clone()Lorg/springframework/core/MethodParameter;
+#clone()Ljava/lang/Object;
@5.0.0.RELEASE
+#getExecutable()Ljava/lang/reflect/Executable;
+#getParameter()Ljava/lang/reflect/Parameter;
*#forMethodOrConstructor(Ljava/lang/Object;I)Lorg/springframework/core/MethodParameter;[deprecated]
+#forExecutable(Ljava/lang/reflect/Executable;I)Lorg/springframework/core/MethodParameter;
+#forParameter(Ljava/lang/reflect/Parameter;)Lorg/springframework/core/MethodParameter;
@5.2.0.RELEASE
*#increaseNestingLevel()V[deprecated]
*#decreaseNestingLevel()V[deprecated]
+#withTypeIndex(I)Lorg/springframework/core/MethodParameter;
*#setTypeIndexForCurrentLevel(I)V[deprecated]
+#nested(Ljava/lang/Integer;)Lorg/springframework/core/MethodParameter;
+#withContainingClass(Ljava/lang/Class;)Lorg/springframework/core/MethodParameter;

+###org/springframework/core/SmartClassLoader
@2.5.1
+#isClassReloadable(Ljava/lang/Class;)Z
@5.3.4
+#publicDefineClass(Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
@5.3.5
+#getOriginalClassLoader()Ljava/lang/ClassLoader;

+###org/springframework/core/AliasRegistry
@2.5.2
+#registerAlias(Ljava/lang/String;Ljava/lang/String;)V
+#removeAlias(Ljava/lang/String;)V
+#isAlias(Ljava/lang/String;)Z
+#getAliases(Ljava/lang/String;)[Ljava/lang/String;

+###org/springframework/core/MethodClassKey
@4.3.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;Ljava/lang/Class;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#compareTo(Lorg/springframework/core/MethodClassKey;)I
+#compareTo(Ljava/lang/Object;)I

+###org/springframework/core/SimpleAliasRegistry
@2.5.2
+#<init>()V
+#registerAlias(Ljava/lang/String;Ljava/lang/String;)V
+#removeAlias(Ljava/lang/String;)V
+#isAlias(Ljava/lang/String;)Z
+#getAliases(Ljava/lang/String;)[Ljava/lang/String;
+#resolveAliases(Lorg/springframework/util/StringValueResolver;)V
+#canonicalName(Ljava/lang/String;)Ljava/lang/String;
@4.2.1.RELEASE
+#hasAlias(Ljava/lang/String;Ljava/lang/String;)Z

+###org/springframework/core/PrioritizedParameterNameDiscoverer
@2.0-m1
+#<init>()V
+#addDiscoverer(Lorg/springframework/core/ParameterNameDiscoverer;)V
+#getParameterNames(Ljava/lang/reflect/Method;Ljava/lang/Class;)[Ljava/lang/String;
+#getParameterNames(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;
@2.0-m5
+#getParameterNames(Ljava/lang/reflect/Method;)[Ljava/lang/String;
-#getParameterNames(Ljava/lang/reflect/Method;Ljava/lang/Class;)[Ljava/lang/String;

+###org/springframework/core/KotlinDetector
@5.0.0.RELEASE
+#<init>()V
+#isKotlinPresent()Z
+#isKotlinType(Ljava/lang/Class;)Z
@5.1.0.RELEASE
+#isKotlinReflectPresent()Z
@5.3.0
+#isSuspendingFunction(Ljava/lang/reflect/Method;)Z

+###org/springframework/core/ExceptionDepthComparator
@3.0.3.RELEASE
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Class;)V
+#compare(Ljava/lang/Class;Ljava/lang/Class;)I
+#findClosestMatch(Ljava/util/Collection;Ljava/lang/Throwable;)Ljava/lang/Class;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/springframework/core/NamedInheritableThreadLocal
@2.5.2
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###org/springframework/core/ReactiveAdapter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveTypeDescriptor;Ljava/util/function/Function;Ljava/util/function/Function;)V
+#getDescriptor()Lorg/springframework/core/ReactiveTypeDescriptor;
+#getReactiveType()Ljava/lang/Class;
+#isMultiValue()Z
+#supportsEmpty()Z
+#isNoValue()Z
+#toPublisher(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#fromPublisher(Lorg/reactivestreams/Publisher;)Ljava/lang/Object;

+###org/springframework/core/NestedIOException
@2.0-m2
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getCause()Ljava/lang/Throwable;
+#getMessage()Ljava/lang/String;
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V
@2.5
-#getCause()Ljava/lang/Throwable;
-#printStackTrace(Ljava/io/PrintStream;)V
-#printStackTrace(Ljava/io/PrintWriter;)V
@6.0.0
-###org/springframework/core/NestedIOException

+###org/springframework/core/DefaultParameterNameDiscoverer
@4.0.0.RELEASE
+#<init>()V

+###org/springframework/core/convert/support/GenericConversionService
@3.0.0.RELEASE
+#<init>()V
+#addConverter(Lorg/springframework/core/convert/converter/GenericConverter;)V
+#addConverter(Lorg/springframework/core/convert/converter/Converter;)V
+#addConverterFactory(Lorg/springframework/core/convert/converter/ConverterFactory;)V
+#removeConvertible(Ljava/lang/Class;Ljava/lang/Class;)V
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#canConvert(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
+#convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
@3.1.0.RELEASE
+#addConverter(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/core/convert/converter/Converter;)V
+#convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
@3.2.0.RELEASE
+#canBypassConvert(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z

+###org/springframework/core/convert/support/DefaultConversionService
@3.1.0.RELEASE
+#<init>()V
+#addDefaultConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V
@4.2.3.RELEASE
+#addCollectionConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V
@4.3.5.RELEASE
+#getSharedInstance()Lorg/springframework/core/convert/ConversionService;

+###org/springframework/core/convert/support/ConfigurableConversionService
@3.1.0.RELEASE

+###org/springframework/core/convert/support/ConversionServiceFactory
@3.0.0.RELEASE
+#<init>()V
+#createDefaultConversionService()Lorg/springframework/core/convert/support/GenericConversionService;
+#addDefaultConverters(Lorg/springframework/core/convert/support/GenericConversionService;)V
+#registerConverters(Ljava/util/Set;Lorg/springframework/core/convert/converter/ConverterRegistry;)V
@3.2.1.RELEASE
*#createDefaultConversionService()Lorg/springframework/core/convert/support/GenericConversionService;[deprecated]
*#addDefaultConverters(Lorg/springframework/core/convert/support/GenericConversionService;)V[deprecated]
@4.2.0.RELEASE
-#createDefaultConversionService()Lorg/springframework/core/convert/support/GenericConversionService;[deprecated]
-#addDefaultConverters(Lorg/springframework/core/convert/support/GenericConversionService;)V[deprecated]
@5.1.0.RELEASE
-#<init>()V

+###org/springframework/core/convert/support/ConvertingPropertyEditorAdapter
@3.0.0.RELEASE
+#<init>(Lorg/springframework/core/convert/ConversionService;Lorg/springframework/core/convert/TypeDescriptor;)V
+#setAsText(Ljava/lang/String;)V
+#getAsText()Ljava/lang/String;

+###org/springframework/core/convert/TypeDescriptor
@3.0.0.RELEASE
+#<init>(Lorg/springframework/core/MethodParameter;)V
+#<init>(Ljava/lang/reflect/Field;)V
+#getMethodParameter()Lorg/springframework/core/MethodParameter;
+#getField()Ljava/lang/reflect/Field;
+#getType()Ljava/lang/Class;
+#getObjectType()Ljava/lang/Class;
+#getName()Ljava/lang/String;
+#isPrimitive()Z
+#isArray()Z
+#isCollection()Z
+#getElementType()Ljava/lang/Class;
+#getElementTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;
+#isMap()Z
+#isMapEntryTypeKnown()Z
+#getMapKeyType()Ljava/lang/Class;
+#getMapValueType()Ljava/lang/Class;
+#getMapKeyTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;
+#getMapValueTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;
+#getAnnotations()[Ljava/lang/annotation/Annotation;
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#isAssignableTo(Lorg/springframework/core/convert/TypeDescriptor;)Z
+#asString()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#valueOf(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
+#forObject(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
@3.0.2.RELEASE
+#<init>(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)V
+#<init>(Ljava/lang/reflect/Field;Ljava/lang/Class;)V
+#forElementType(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
@3.0.3.RELEASE
+#getElementTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#getMapKeyTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#getMapValueTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.1.0.RELEASE
+#<init>(Lorg/springframework/core/convert/Property;)V
+#collection(Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
+#map(Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
+#nested(Lorg/springframework/core/MethodParameter;I)Lorg/springframework/core/convert/TypeDescriptor;
+#nested(Ljava/lang/reflect/Field;I)Lorg/springframework/core/convert/TypeDescriptor;
+#nested(Lorg/springframework/core/convert/Property;I)Lorg/springframework/core/convert/TypeDescriptor;
+#narrow(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#elementTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
*#getElementType()Ljava/lang/Class;[deprecated]
*#getMapKeyType()Ljava/lang/Class;[deprecated]
*#getMapValueType()Ljava/lang/Class;[deprecated]
-#<init>(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)V
-#<init>(Ljava/lang/reflect/Field;Ljava/lang/Class;)V
-#getMethodParameter()Lorg/springframework/core/MethodParameter;
-#getField()Ljava/lang/reflect/Field;
-#getElementTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
-#isMapEntryTypeKnown()Z
-#forElementType(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
-#asString()Ljava/lang/String;
@3.2.0.RELEASE
+#upcast(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
+#hasAnnotation(Ljava/lang/Class;)Z
@3.2.1.RELEASE
+#array(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
@4.0.0.RELEASE
+#getSource()Ljava/lang/Object;
@4.0.2.RELEASE
+#getResolvableType()Lorg/springframework/core/ResolvableType;
@4.2.0.RELEASE
-#getElementType()Ljava/lang/Class;[deprecated]
-#getMapKeyType()Ljava/lang/Class;[deprecated]
-#getMapValueType()Ljava/lang/Class;[deprecated]
@5.1.4.RELEASE
+#<init>(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V

+###org/springframework/core/convert/ConversionService
@3.0.0.RELEASE
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#canConvert(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
+#convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;

+###org/springframework/core/convert/Property
@3.1.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V
+#getObjectType()Ljava/lang/Class;
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/Class;
+#getReadMethod()Ljava/lang/reflect/Method;
+#getWriteMethod()Ljava/lang/reflect/Method;
@3.2.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/core/convert/ConversionFailedException
@3.0.0.RELEASE
+#<init>(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#getSourceType()Lorg/springframework/core/convert/TypeDescriptor;
+#getTargetType()Lorg/springframework/core/convert/TypeDescriptor;
@3.0.1.RELEASE
+#getValue()Ljava/lang/Object;

+###org/springframework/core/convert/ConversionException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/springframework/core/convert/ConverterNotFoundException
@3.0.0.RELEASE
+#<init>(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V
+#getSourceType()Lorg/springframework/core/convert/TypeDescriptor;
+#getTargetType()Lorg/springframework/core/convert/TypeDescriptor;

+###org/springframework/core/convert/converter/ConverterRegistry
@3.0.0.RELEASE
+#addConverter(Lorg/springframework/core/convert/converter/Converter;)V
+#addConverter(Lorg/springframework/core/convert/converter/GenericConverter;)V
+#addConverterFactory(Lorg/springframework/core/convert/converter/ConverterFactory;)V
+#removeConvertible(Ljava/lang/Class;Ljava/lang/Class;)V
@3.1.0.RELEASE
+#addConverter(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/core/convert/converter/Converter;)V

+###org/springframework/core/convert/converter/ConverterFactory
@3.0.0.RELEASE
+#getConverter(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;

+###org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
@3.0.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
@3.0.6.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.2.8.RELEASE
+#toString()Ljava/lang/String;
@4.0.0.RELEASE
-#toString()Ljava/lang/String;
@4.0.2.RELEASE
+#toString()Ljava/lang/String;

+###org/springframework/core/convert/converter/Converter
@3.0.0.RELEASE
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@5.3.0
+#andThen(Lorg/springframework/core/convert/converter/Converter;)Lorg/springframework/core/convert/converter/Converter;

+###org/springframework/core/convert/converter/GenericConverter
@3.0.0.RELEASE
+#getConvertibleTypes()Ljava/util/Set;
+#convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;

+###org/springframework/core/convert/converter/ConditionalConverter
@3.2.0.RELEASE
+#matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z

+###org/springframework/core/convert/converter/ConditionalGenericConverter
@3.0.0.RELEASE
+#matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
@3.2.0.RELEASE
-#matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z

+###org/springframework/core/convert/converter/ConvertingComparator
@3.2.0.RELEASE
+#<init>(Lorg/springframework/core/convert/converter/Converter;)V
+#<init>(Ljava/util/Comparator;Lorg/springframework/core/convert/converter/Converter;)V
+#<init>(Ljava/util/Comparator;Lorg/springframework/core/convert/ConversionService;Ljava/lang/Class;)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#mapEntryKeys(Ljava/util/Comparator;)Lorg/springframework/core/convert/converter/ConvertingComparator;
+#mapEntryValues(Ljava/util/Comparator;)Lorg/springframework/core/convert/converter/ConvertingComparator;

+###org/springframework/core/ResolvableTypeProvider
@4.2.0.RELEASE
+#getResolvableType()Lorg/springframework/core/ResolvableType;

+###org/springframework/core/SpringProperties
@3.2.7.RELEASE
+#<init>()V
+#setProperty(Ljava/lang/String;Ljava/lang/String;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#setFlag(Ljava/lang/String;)V
+#getFlag(Ljava/lang/String;)Z
@4.0.0.RELEASE
-###org/springframework/core/SpringProperties

+###org/springframework/core/ResolvableType
@4.0.0.RELEASE
+#getType()Ljava/lang/reflect/Type;
+#getRawClass()Ljava/lang/Class;
+#getSource()Ljava/lang/Object;
+#isAssignableFrom(Lorg/springframework/core/ResolvableType;)Z
+#isArray()Z
+#getComponentType()Lorg/springframework/core/ResolvableType;
+#asCollection()Lorg/springframework/core/ResolvableType;
+#asMap()Lorg/springframework/core/ResolvableType;
+#as(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
+#getSuperType()Lorg/springframework/core/ResolvableType;
+#getInterfaces()[Lorg/springframework/core/ResolvableType;
+#hasGenerics()Z
+#hasUnresolvableGenerics()Z
+#getNested(I)Lorg/springframework/core/ResolvableType;
+#getNested(ILjava/util/Map;)Lorg/springframework/core/ResolvableType;
+#getGeneric([I)Lorg/springframework/core/ResolvableType;
+#getGenerics()[Lorg/springframework/core/ResolvableType;
+#resolveGenerics()[Ljava/lang/Class;
+#resolveGenerics(Ljava/lang/Class;)[Ljava/lang/Class;
+#resolveGeneric([I)Ljava/lang/Class;
+#resolve()Ljava/lang/Class;
+#resolve(Ljava/lang/Class;)Ljava/lang/Class;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#forClass(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
+#forClass(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
+#forField(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
+#forField(Ljava/lang/reflect/Field;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
+#forField(Ljava/lang/reflect/Field;I)Lorg/springframework/core/ResolvableType;
+#forField(Ljava/lang/reflect/Field;ILjava/lang/Class;)Lorg/springframework/core/ResolvableType;
+#forConstructorParameter(Ljava/lang/reflect/Constructor;I)Lorg/springframework/core/ResolvableType;
+#forConstructorParameter(Ljava/lang/reflect/Constructor;ILjava/lang/Class;)Lorg/springframework/core/ResolvableType;
+#forMethodReturnType(Ljava/lang/reflect/Method;)Lorg/springframework/core/ResolvableType;
+#forMethodReturnType(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
+#forMethodParameter(Ljava/lang/reflect/Method;I)Lorg/springframework/core/ResolvableType;
+#forMethodParameter(Ljava/lang/reflect/Method;ILjava/lang/Class;)Lorg/springframework/core/ResolvableType;
+#forMethodParameter(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
+#forArrayComponent(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
+#forClassWithGenerics(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
+#forClassWithGenerics(Ljava/lang/Class;[Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
+#forType(Ljava/lang/reflect/Type;)Lorg/springframework/core/ResolvableType;
+#forType(Ljava/lang/reflect/Type;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
@4.0.1.RELEASE
+#forField(Ljava/lang/reflect/Field;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
+#forMethodParameter(Lorg/springframework/core/MethodParameter;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
+#forMethodParameter(Lorg/springframework/core/MethodParameter;Ljava/lang/reflect/Type;)Lorg/springframework/core/ResolvableType;
@4.2.0.RELEASE
+#isInstance(Ljava/lang/Object;)Z
+#isAssignableFrom(Ljava/lang/Class;)Z
+#forRawClass(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
+#forInstance(Ljava/lang/Object;)Lorg/springframework/core/ResolvableType;
+#clearCache()V
@4.3.12.RELEASE
+#forType(Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/core/ResolvableType;
@5.0.0.RELEASE
-#forType(Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/core/ResolvableType;
@5.0.1.RELEASE
+#forType(Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/core/ResolvableType;
@5.1.0.RELEASE
+#toClass()Ljava/lang/Class;

+###org/springframework/core/ParameterizedTypeReference
@3.2.0.RELEASE
+#getType()Ljava/lang/reflect/Type;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@4.3.12.RELEASE
+#forType(Ljava/lang/reflect/Type;)Lorg/springframework/core/ParameterizedTypeReference;
@5.0.0.RELEASE
-#forType(Ljava/lang/reflect/Type;)Lorg/springframework/core/ParameterizedTypeReference;
@5.0.1.RELEASE
+#forType(Ljava/lang/reflect/Type;)Lorg/springframework/core/ParameterizedTypeReference;

+###org/springframework/core/BridgeMethodResolver
@2.0-m5
+#<init>()V
+#findBridgedMethod(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
@3.0.7.RELEASE
+#isVisibilityBridgeMethodPair(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Z
@5.1.0.RELEASE
-#<init>()V

+###org/springframework/core/style/ToStringStyler
@1.2.2
+#styleStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
+#styleEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
+#styleField(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V
+#styleValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
+#styleFieldSeparator(Ljava/lang/StringBuffer;)V
@3.0.0.RELEASE
+#styleStart(Ljava/lang/StringBuilder;Ljava/lang/Object;)V
+#styleEnd(Ljava/lang/StringBuilder;Ljava/lang/Object;)V
+#styleField(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)V
+#styleValue(Ljava/lang/StringBuilder;Ljava/lang/Object;)V
+#styleFieldSeparator(Ljava/lang/StringBuilder;)V
-#styleStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
-#styleEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
-#styleField(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V
-#styleValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
-#styleFieldSeparator(Ljava/lang/StringBuffer;)V

+###org/springframework/core/style/ToStringCreator
@1.2.2
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/core/style/ValueStyler;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/core/style/ToStringStyler;)V
+#append(Ljava/lang/String;B)Lorg/springframework/core/style/ToStringCreator;
+#append(Ljava/lang/String;S)Lorg/springframework/core/style/ToStringCreator;
+#append(Ljava/lang/String;I)Lorg/springframework/core/style/ToStringCreator;
+#append(Ljava/lang/String;F)Lorg/springframework/core/style/ToStringCreator;
+#append(Ljava/lang/String;D)Lorg/springframework/core/style/ToStringCreator;
+#append(Ljava/lang/String;J)Lorg/springframework/core/style/ToStringCreator;
+#append(Ljava/lang/String;Z)Lorg/springframework/core/style/ToStringCreator;
+#append(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/core/style/ToStringCreator;
+#append(Ljava/lang/Object;)Lorg/springframework/core/style/ToStringCreator;
+#toString()Ljava/lang/String;

+###org/springframework/core/style/StylerUtils
@1.2.2
+#<init>()V
+#style(Ljava/lang/Object;)Ljava/lang/String;

+###org/springframework/core/style/DefaultToStringStyler
@1.2.2
+#<init>(Lorg/springframework/core/style/ValueStyler;)V
+#styleStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
+#styleEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
+#styleField(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V
+#styleValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
+#styleFieldSeparator(Ljava/lang/StringBuffer;)V
@3.0.0.RELEASE
+#styleStart(Ljava/lang/StringBuilder;Ljava/lang/Object;)V
+#styleEnd(Ljava/lang/StringBuilder;Ljava/lang/Object;)V
+#styleField(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)V
+#styleValue(Ljava/lang/StringBuilder;Ljava/lang/Object;)V
+#styleFieldSeparator(Ljava/lang/StringBuilder;)V
-#styleStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
-#styleEnd(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
-#styleField(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V
-#styleValue(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
-#styleFieldSeparator(Ljava/lang/StringBuffer;)V

+###org/springframework/core/style/ValueStyler
@1.2.2
+#style(Ljava/lang/Object;)Ljava/lang/String;

+###org/springframework/core/style/DefaultValueStyler
@1.2.2
+#<init>()V
+#style(Ljava/lang/Object;)Ljava/lang/String;

+###org/springframework/core/ParameterNameDiscoverer
@2.0-m1
+#getParameterNames(Ljava/lang/reflect/Method;Ljava/lang/Class;)[Ljava/lang/String;
+#getParameterNames(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;
@2.0-m5
+#getParameterNames(Ljava/lang/reflect/Method;)[Ljava/lang/String;
-#getParameterNames(Ljava/lang/reflect/Method;Ljava/lang/Class;)[Ljava/lang/String;

+###org/springframework/core/MethodIntrospector$MetadataLookup
@4.2.3.RELEASE
+#inspect(Ljava/lang/reflect/Method;)Ljava/lang/Object;

+###org/springframework/core/CollectionFactory
@1.1.1
+#<init>()V
+#createLinkedMapIfPossible(I)Ljava/util/Map;
+#createIdentityMapIfPossible(I)Ljava/util/Map;
@1.1.3
+#createLinkedSetIfPossible(I)Ljava/util/Set;
@1.2-rc1
+#createLinkedCaseInsensitiveMapIfPossible(I)Ljava/util/Map;
@2.0-m4
+#createApproximateCollection(Ljava/lang/Class;I)Ljava/util/Collection;
+#createApproximateMap(Ljava/lang/Class;I)Ljava/util/Map;
@2.0.2
+#createApproximateCollection(Ljava/lang/Object;I)Ljava/util/Collection;
+#createApproximateMap(Ljava/lang/Object;I)Ljava/util/Map;
-#createApproximateCollection(Ljava/lang/Class;I)Ljava/util/Collection;
-#createApproximateMap(Ljava/lang/Class;I)Ljava/util/Map;
@2.0.5
+#createConcurrentMapIfPossible(I)Ljava/util/Map;
@2.5
+#createCopyOnWriteSet()Ljava/util/Set;
+#createConcurrentMap(I)Lorg/springframework/core/ConcurrentMap;
+#isApproximableCollectionType(Ljava/lang/Class;)Z
+#isApproximableMapType(Ljava/lang/Class;)Z
@3.0.0.RELEASE
*#createLinkedSetIfPossible(I)Ljava/util/Set;[deprecated]
*#createCopyOnWriteSet()Ljava/util/Set;[deprecated]
*#createLinkedMapIfPossible(I)Ljava/util/Map;[deprecated]
*#createLinkedCaseInsensitiveMapIfPossible(I)Ljava/util/Map;[deprecated]
*#createIdentityMapIfPossible(I)Ljava/util/Map;[deprecated]
*#createConcurrentMapIfPossible(I)Ljava/util/Map;[deprecated]
*#createConcurrentMap(I)Lorg/springframework/core/ConcurrentMap;[deprecated]
+#createCollection(Ljava/lang/Class;I)Ljava/util/Collection;
+#createMap(Ljava/lang/Class;I)Ljava/util/Map;
@4.0.0.RELEASE
-#createLinkedSetIfPossible(I)Ljava/util/Set;[deprecated]
-#createCopyOnWriteSet()Ljava/util/Set;[deprecated]
-#createLinkedMapIfPossible(I)Ljava/util/Map;[deprecated]
-#createLinkedCaseInsensitiveMapIfPossible(I)Ljava/util/Map;[deprecated]
-#createIdentityMapIfPossible(I)Ljava/util/Map;[deprecated]
-#createConcurrentMapIfPossible(I)Ljava/util/Map;[deprecated]
-#createConcurrentMap(I)Lorg/springframework/core/ConcurrentMap;[deprecated]
@4.1.3.RELEASE
+#createCollection(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/util/Collection;
+#createMap(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/util/Map;
@4.3.4.RELEASE
+#createStringAdaptingProperties()Ljava/util/Properties;
@5.1.0.RELEASE
-#<init>()V
@5.2.0.RELEASE
+#createSortedProperties(Z)Ljava/util/Properties;
+#createSortedProperties(Ljava/util/Properties;Z)Ljava/util/Properties;

+###org/springframework/core/serializer/Deserializer
@3.0.5.RELEASE
+#deserialize(Ljava/io/InputStream;)Ljava/lang/Object;
@5.2.7.RELEASE
+#deserializeFromByteArray([B)Ljava/lang/Object;

+###org/springframework/core/serializer/support/SerializationFailedException
@3.0.5.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/core/serializer/support/SerializingConverter
@3.0.5.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/serializer/Serializer;)V
+#convert(Ljava/lang/Object;)[B
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/core/serializer/support/DeserializingConverter
@3.0.5.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/serializer/Deserializer;)V
+#convert([B)Ljava/lang/Object;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@4.2.1.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V

+###org/springframework/core/serializer/support/SerializationDelegate
@4.3.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Lorg/springframework/core/serializer/Serializer;Lorg/springframework/core/serializer/Deserializer;)V
+#serialize(Ljava/lang/Object;Ljava/io/OutputStream;)V
+#deserialize(Ljava/io/InputStream;)Ljava/lang/Object;

+###org/springframework/core/serializer/DefaultSerializer
@3.0.5.RELEASE
+#<init>()V
+#serialize(Ljava/lang/Object;Ljava/io/OutputStream;)V

+###org/springframework/core/serializer/DefaultDeserializer
@3.0.5.RELEASE
+#<init>()V
+#deserialize(Ljava/io/InputStream;)Ljava/lang/Object;
@4.2.1.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V

+###org/springframework/core/serializer/Serializer
@3.0.5.RELEASE
+#serialize(Ljava/lang/Object;Ljava/io/OutputStream;)V
@5.2.7.RELEASE
+#serializeToByteArray(Ljava/lang/Object;)[B

+###org/springframework/core/InfrastructureProxy
@2.5.4
+#getWrappedObject()Ljava/lang/Object;

+###org/springframework/core/SpringVersion
@1.1-rc1
+#<init>()V
+#getVersion()Ljava/lang/String;
@5.1.0.RELEASE
-#<init>()V

+###org/springframework/core/Constants
@1.0-rc1
+#<init>(Ljava/lang/Class;)V
+#getSize()I
+#asNumber(Ljava/lang/String;)Ljava/lang/Number;
+#asString(Ljava/lang/String;)Ljava/lang/String;
+#asObject(Ljava/lang/String;)Ljava/lang/Object;
+#getValues(Ljava/lang/String;)Ljava/util/Set;
+#getValuesForProperty(Ljava/lang/String;)Ljava/util/Set;
+#toCode(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#toCodeForProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#propertyToConstantNamePrefix(Ljava/lang/String;)Ljava/lang/String;
@1.2-rc2
+#getClassName()Ljava/lang/String;
@2.0.4
+#getNames(Ljava/lang/String;)Ljava/util/Set;
+#getNamesForProperty(Ljava/lang/String;)Ljava/util/Set;
+#getNamesForSuffix(Ljava/lang/String;)Ljava/util/Set;
+#getValuesForSuffix(Ljava/lang/String;)Ljava/util/Set;
@2.0.5
+#toCodeForSuffix(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/core/Constants$ConstantException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V

+###org/springframework/core/GenericTypeResolver
@2.5.2
+#<init>()V
+#getTargetType(Lorg/springframework/core/MethodParameter;)Ljava/lang/reflect/Type;
+#resolveParameterType(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Ljava/lang/Class;
+#resolveReturnType(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/Class;
@3.0.0.RELEASE
+#resolveTypeArgument(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
+#resolveTypeArguments(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/Class;
@3.0.7.RELEASE
+#resolveType(Ljava/lang/reflect/Type;Ljava/util/Map;)Ljava/lang/Class;
+#getTypeVariableMap(Ljava/lang/Class;)Ljava/util/Map;
@3.1.0.RELEASE
+#resolveReturnTypeArgument(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/Class;
@3.2.0.RELEASE
+#resolveReturnTypeForGenericMethod(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Class;
@3.2.5.RELEASE
*#resolveReturnTypeForGenericMethod(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Class;[deprecated]
@4.0.0.RELEASE
*#getTargetType(Lorg/springframework/core/MethodParameter;)Ljava/lang/reflect/Type;[deprecated]
+#resolveReturnTypeForGenericMethod(Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/lang/ClassLoader;)Ljava/lang/Class;
*#resolveType(Ljava/lang/reflect/Type;Ljava/util/Map;)Ljava/lang/Class;[deprecated]
*#getTypeVariableMap(Ljava/lang/Class;)Ljava/util/Map;[deprecated]
-#resolveReturnTypeForGenericMethod(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Class;[deprecated]
@4.3.8.RELEASE
*#resolveReturnTypeForGenericMethod(Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/lang/ClassLoader;)Ljava/lang/Class;[deprecated]
@5.0.0.RELEASE
+#resolveType(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;
-#getTargetType(Lorg/springframework/core/MethodParameter;)Ljava/lang/reflect/Type;[deprecated]
-#resolveReturnTypeForGenericMethod(Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/lang/ClassLoader;)Ljava/lang/Class;[deprecated]
@5.1.0.RELEASE
-#<init>()V
@5.2.0.RELEASE
*#resolveParameterType(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Ljava/lang/Class;[deprecated]

+###org/springframework/core/DecoratingClassLoader
@2.5.2
+#excludePackage(Ljava/lang/String;)V
+#excludeClass(Ljava/lang/String;)V
@2.5.3
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V

+###org/springframework/core/OrderComparator
@1.0-rc1
+#<init>()V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@3.0.0.RELEASE
+#sort(Ljava/util/List;)V
+#sort([Ljava/lang/Object;)V
@4.0.0.RELEASE
+#sortIfNecessary(Ljava/lang/Object;)V
@4.1.0.RELEASE
+#withSourceProvider(Lorg/springframework/core/OrderComparator$OrderSourceProvider;)Ljava/util/Comparator;
+#getPriority(Ljava/lang/Object;)Ljava/lang/Integer;

+###org/springframework/lang/NonNullFields
@5.0.0.RELEASE

+###org/springframework/lang/NonNullApi
@5.0.0.RELEASE

+###org/springframework/lang/NonNull
@5.0.0.RELEASE

+###org/springframework/lang/UsesSunMisc
@4.3.0.RELEASE
@6.0.0
-###org/springframework/lang/UsesSunMisc

+###org/springframework/lang/UsesJava8
@4.1.0.RELEASE
@6.0.0
-###org/springframework/lang/UsesJava8

+###org/springframework/lang/UsesJava7
@4.1.0.RELEASE
@6.0.0
-###org/springframework/lang/UsesJava7

+###org/springframework/lang/Nullable
@5.0.0.RELEASE

+###org/springframework/lang/UsesSunHttpServer
@4.1.0.RELEASE
@6.0.0
-###org/springframework/lang/UsesSunHttpServer

+###org/springframework/cglib/core/SpringNamingPolicy
@3.2.8.RELEASE
+#<init>()V
@4.0.0.RELEASE
-###org/springframework/cglib/core/SpringNamingPolicy

+###org/springframework/cglib/core/ReflectUtils
@3.2.0.RELEASE
+#getExceptionTypes(Ljava/lang/reflect/Member;)[Lorg/springframework/asm/Type;
+#getSignature(Ljava/lang/reflect/Member;)Lorg/springframework/cglib/core/Signature;
+#findConstructor(Ljava/lang/String;)Ljava/lang/reflect/Constructor;
+#findConstructor(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/reflect/Constructor;
+#findMethod(Ljava/lang/String;)Ljava/lang/reflect/Method;
+#findMethod(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/reflect/Method;
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#newInstance(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#getConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
+#getNames([Ljava/lang/Class;)[Ljava/lang/String;
+#getClasses([Ljava/lang/Object;)[Ljava/lang/Class;
+#findNewInstance(Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#getPropertyMethods([Ljava/beans/PropertyDescriptor;ZZ)[Ljava/lang/reflect/Method;
+#getBeanProperties(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
+#getBeanGetters(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
+#getBeanSetters(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
+#findDeclaredMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#addAllMethods(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;
+#addAllInterfaces(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;
+#findInterfaceMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#defineClass(Ljava/lang/String;[BLjava/lang/ClassLoader;)Ljava/lang/Class;
+#findPackageProtected([Ljava/lang/Class;)I
+#getMethodInfo(Ljava/lang/reflect/Member;I)Lorg/springframework/cglib/core/MethodInfo;
+#getMethodInfo(Ljava/lang/reflect/Member;)Lorg/springframework/cglib/core/MethodInfo;
+#getClassInfo(Ljava/lang/Class;)Lorg/springframework/cglib/core/ClassInfo;
+#findMethods([Ljava/lang/String;[Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Method;
@4.2.3.RELEASE
+#getProtectionDomain(Ljava/lang/Class;)Ljava/security/ProtectionDomain;
+#defineClass(Ljava/lang/String;[BLjava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;
@5.1.0.RELEASE
+#defineClass(Ljava/lang/String;[BLjava/lang/ClassLoader;Ljava/security/ProtectionDomain;Ljava/lang/Class;)Ljava/lang/Class;
@6.0.0
+#setGeneratedClassHandler(Ljava/util/function/BiConsumer;)V
+#setLoadedClassHandler(Ljava/util/function/Consumer;)V
+#loadClass(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;

+###org/springframework/cglib/core/KeyFactory$Generator
@3.2.0.RELEASE
+#<init>()V
+#setCustomizer(Lorg/springframework/cglib/core/Customizer;)V
+#setInterface(Ljava/lang/Class;)V
+#create()Lorg/springframework/cglib/core/KeyFactory;
+#setHashConstant(I)V
+#setHashMultiplier(I)V
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V
@4.2.6.RELEASE
*#setCustomizer(Lorg/springframework/cglib/core/Customizer;)V[deprecated]
+#addCustomizer(Lorg/springframework/cglib/core/KeyFactoryCustomizer;)V
+#getCustomizers(Ljava/lang/Class;)Ljava/util/List;

+###org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData
@4.2.6.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#allocateName(Ljava/lang/String;)Z
+#getUniqueNamePredicate()Lorg/springframework/cglib/core/Predicate;
+#get(Lorg/springframework/cglib/core/AbstractClassGenerator;)Ljava/lang/Object;
@4.2.7.RELEASE
+#reserveName(Ljava/lang/String;)V
+#get(Lorg/springframework/cglib/core/AbstractClassGenerator;Z)Ljava/lang/Object;
-#allocateName(Ljava/lang/String;)Z
-#get(Lorg/springframework/cglib/core/AbstractClassGenerator;)Ljava/lang/Object;
@4.3.0.RELEASE
+#allocateName(Ljava/lang/String;)Z
+#get(Lorg/springframework/cglib/core/AbstractClassGenerator;)Ljava/lang/Object;
-#reserveName(Ljava/lang/String;)V
-#get(Lorg/springframework/cglib/core/AbstractClassGenerator;Z)Ljava/lang/Object;
@4.3.1.RELEASE
+#reserveName(Ljava/lang/String;)V
+#get(Lorg/springframework/cglib/core/AbstractClassGenerator;Z)Ljava/lang/Object;
-#allocateName(Ljava/lang/String;)Z
-#get(Lorg/springframework/cglib/core/AbstractClassGenerator;)Ljava/lang/Object;

+###org/springframework/cglib/core/AbstractClassGenerator
@3.2.0.RELEASE
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#setNamingPolicy(Lorg/springframework/cglib/core/NamingPolicy;)V
+#getNamingPolicy()Lorg/springframework/cglib/core/NamingPolicy;
+#setUseCache(Z)V
+#getUseCache()Z
+#setAttemptLoad(Z)V
+#getAttemptLoad()Z
+#setStrategy(Lorg/springframework/cglib/core/GeneratorStrategy;)V
+#getStrategy()Lorg/springframework/cglib/core/GeneratorStrategy;
+#getCurrent()Lorg/springframework/cglib/core/AbstractClassGenerator;
+#getClassLoader()Ljava/lang/ClassLoader;
@5.1.0.RELEASE
+#setContextClass(Ljava/lang/Class;)V

+###org/springframework/cglib/core/KeyFactory
@3.2.0.RELEASE
+#create(Ljava/lang/Class;)Lorg/springframework/cglib/core/KeyFactory;
+#create(Ljava/lang/Class;Lorg/springframework/cglib/core/Customizer;)Lorg/springframework/cglib/core/KeyFactory;
+#create(Ljava/lang/ClassLoader;Ljava/lang/Class;Lorg/springframework/cglib/core/Customizer;)Lorg/springframework/cglib/core/KeyFactory;
@4.2.6.RELEASE
+#create(Ljava/lang/Class;Lorg/springframework/cglib/core/KeyFactoryCustomizer;Ljava/util/List;)Lorg/springframework/cglib/core/KeyFactory;
+#create(Ljava/lang/ClassLoader;Ljava/lang/Class;Lorg/springframework/cglib/core/KeyFactoryCustomizer;Ljava/util/List;)Lorg/springframework/cglib/core/KeyFactory;

+###org/springframework/cglib/core/AbstractClassGenerator$Source
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/cglib/proxy/Enhancer
@3.2.0.RELEASE
+#<init>()V
+#setSuperclass(Ljava/lang/Class;)V
+#setInterfaces([Ljava/lang/Class;)V
+#setCallbackFilter(Lorg/springframework/cglib/proxy/CallbackFilter;)V
+#setCallback(Lorg/springframework/cglib/proxy/Callback;)V
+#setCallbacks([Lorg/springframework/cglib/proxy/Callback;)V
+#setUseFactory(Z)V
+#setInterceptDuringConstruction(Z)V
+#setCallbackType(Ljava/lang/Class;)V
+#setCallbackTypes([Ljava/lang/Class;)V
+#create()Ljava/lang/Object;
+#create([Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#createClass()Ljava/lang/Class;
+#setSerialVersionUID(Ljava/lang/Long;)V
+#getMethods(Ljava/lang/Class;[Ljava/lang/Class;Ljava/util/List;)V
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V
+#registerCallbacks(Ljava/lang/Class;[Lorg/springframework/cglib/proxy/Callback;)V
+#registerStaticCallbacks(Ljava/lang/Class;[Lorg/springframework/cglib/proxy/Callback;)V
+#isEnhanced(Ljava/lang/Class;)Z
+#create(Ljava/lang/Class;Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;
+#create(Ljava/lang/Class;[Ljava/lang/Class;Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;
+#create(Ljava/lang/Class;[Ljava/lang/Class;Lorg/springframework/cglib/proxy/CallbackFilter;[Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;
@4.2.6.RELEASE
+#createFactory()Lorg/springframework/cglib/proxy/Factory;
@4.2.7.RELEASE
-#createFactory()Lorg/springframework/cglib/proxy/Factory;
@4.3.0.RELEASE
+#createFactory()Lorg/springframework/cglib/proxy/Factory;
@4.3.1.RELEASE
-#createFactory()Lorg/springframework/cglib/proxy/Factory;

+###org/springframework/cglib/proxy/MethodProxy
@3.2.0.RELEASE
+#create(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/cglib/proxy/MethodProxy;
+#getSignature()Lorg/springframework/cglib/core/Signature;
+#getSuperName()Ljava/lang/String;
+#getSuperIndex()I
+#find(Ljava/lang/Class;Lorg/springframework/cglib/core/Signature;)Lorg/springframework/cglib/proxy/MethodProxy;
+#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeSuper(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/proxy/Enhancer$EnhancerKey
@3.2.0.RELEASE
+#newInstance(Ljava/lang/String;[Ljava/lang/String;Lorg/springframework/cglib/proxy/CallbackFilter;[Lorg/springframework/asm/Type;ZZLjava/lang/Long;)Ljava/lang/Object;
@4.2.6.RELEASE
+#newInstance(Ljava/lang/String;[Ljava/lang/String;Lorg/springframework/cglib/core/WeakCacheKey;[Lorg/springframework/asm/Type;ZZLjava/lang/Long;)Ljava/lang/Object;
-#newInstance(Ljava/lang/String;[Ljava/lang/String;Lorg/springframework/cglib/proxy/CallbackFilter;[Lorg/springframework/asm/Type;ZZLjava/lang/Long;)Ljava/lang/Object;
@6.0.0
-###org/springframework/cglib/proxy/Enhancer$EnhancerKey

+###org/springframework/cglib/SpringCglibInfo
@3.2.0.RELEASE
+#<init>()V

+###org/springframework/asm/TypeReference
@3.2.9.RELEASE
+#<init>(I)V
+#newTypeReference(I)Lorg/springframework/asm/TypeReference;
+#newTypeParameterReference(II)Lorg/springframework/asm/TypeReference;
+#newTypeParameterBoundReference(III)Lorg/springframework/asm/TypeReference;
+#newSuperTypeReference(I)Lorg/springframework/asm/TypeReference;
+#newFormalParameterReference(I)Lorg/springframework/asm/TypeReference;
+#newExceptionReference(I)Lorg/springframework/asm/TypeReference;
+#newTryCatchReference(I)Lorg/springframework/asm/TypeReference;
+#newTypeArgumentReference(II)Lorg/springframework/asm/TypeReference;
+#getSort()I
+#getTypeParameterIndex()I
+#getTypeParameterBoundIndex()I
+#getSuperTypeIndex()I
+#getFormalParameterIndex()I
+#getExceptionIndex()I
+#getTryCatchBlockIndex()I
+#getTypeArgumentIndex()I
+#getValue()I
@4.0.0.RELEASE
-###org/springframework/asm/TypeReference

+###org/springframework/asm/AnnotationVisitor
@2.5
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;
+#visitEnd()V
@3.0.0.RELEASE
-###org/springframework/asm/AnnotationVisitor

+###org/springframework/asm/Type
@2.5
+#getType(Ljava/lang/String;)Lorg/springframework/asm/Type;
+#getType(Ljava/lang/Class;)Lorg/springframework/asm/Type;
+#getArgumentTypes(Ljava/lang/String;)[Lorg/springframework/asm/Type;
+#getArgumentTypes(Ljava/lang/reflect/Method;)[Lorg/springframework/asm/Type;
+#getReturnType(Ljava/lang/String;)Lorg/springframework/asm/Type;
+#getReturnType(Ljava/lang/reflect/Method;)Lorg/springframework/asm/Type;
+#getSort()I
+#getDimensions()I
+#getElementType()Lorg/springframework/asm/Type;
+#getClassName()Ljava/lang/String;
+#getInternalName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getMethodDescriptor(Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;)Ljava/lang/String;
+#getInternalName(Ljava/lang/Class;)Ljava/lang/String;
+#getDescriptor(Ljava/lang/Class;)Ljava/lang/String;
+#getMethodDescriptor(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getSize()I
+#getOpcode(I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RELEASE
-###org/springframework/asm/Type

+###org/springframework/asm/ConstantDynamic
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V
+#getName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getBootstrapMethod()Lorg/springframework/asm/Handle;
+#getBootstrapMethodArguments()[Ljava/lang/Object;
+#getSize()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@5.1.1.RELEASE
+#getBootstrapMethodArgumentCount()I
+#getBootstrapMethodArgument(I)Ljava/lang/Object;
-#getBootstrapMethodArguments()[Ljava/lang/Object;

+###org/springframework/asm/ClassTooLargeException
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;I)V
+#getClassName()Ljava/lang/String;
+#getConstantPoolCount()I

+###org/springframework/asm/Handle
@3.2.0.RELEASE
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getTag()I
+#getOwner()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getDesc()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@4.3.0.RELEASE
*#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#isInterface()Z

+###org/springframework/asm/ClassWriter
@2.5
+#<init>(Z)V
+#<init>(ZZ)V
+#<init>(Lorg/springframework/asm/ClassReader;Z)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#visitEnd()V
+#toByteArray()[B
+#newConst(Ljava/lang/Object;)I
+#newUTF8(Ljava/lang/String;)I
+#newClass(Ljava/lang/String;)I
+#newField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#newMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I
+#newNameType(Ljava/lang/String;Ljava/lang/String;)I
@3.0.0.RELEASE
-###org/springframework/asm/ClassWriter

+###org/springframework/asm/ClassVisitor
@2.5
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#visitEnd()V
@3.0.0.RELEASE
-###org/springframework/asm/ClassVisitor

+###org/springframework/asm/Label
@2.5
+#<init>()V
+#getOffset()I
+#toString()Ljava/lang/String;
@3.0.0.RELEASE
-###org/springframework/asm/Label

+###org/springframework/asm/MethodVisitor
@2.5
+#visitAnnotationDefault()Lorg/springframework/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitCode()V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILorg/springframework/asm/Label;)V
+#visitLabel(Lorg/springframework/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/lang/String;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V
+#visitLineNumber(ILorg/springframework/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@3.0.0.RELEASE
-###org/springframework/asm/MethodVisitor

+###org/springframework/asm/Attribute
@2.5
+#isUnknown()Z
+#isCodeAttribute()Z
@3.0.0.RELEASE
-###org/springframework/asm/Attribute

+###org/springframework/asm/ModuleVisitor
@4.3.14.RELEASE
+#<init>(I)V
+#<init>(ILorg/springframework/asm/ModuleVisitor;)V
+#visitMainClass(Ljava/lang/String;)V
+#visitPackage(Ljava/lang/String;)V
+#visitRequire(Ljava/lang/String;ILjava/lang/String;)V
+#visitExport(Ljava/lang/String;I[Ljava/lang/String;)V
+#visitOpen(Ljava/lang/String;I[Ljava/lang/String;)V
+#visitUse(Ljava/lang/String;)V
+#visitProvide(Ljava/lang/String;[Ljava/lang/String;)V
+#visitEnd()V
@5.3.20
-#<init>(I)V
-#<init>(ILorg/springframework/asm/ModuleVisitor;)V

+###org/springframework/asm/TypePath
@3.2.9.RELEASE
+#getLength()I
+#getStep(I)I
+#getStepArgument(I)I
+#fromString(Ljava/lang/String;)Lorg/springframework/asm/TypePath;
+#toString()Ljava/lang/String;
@4.0.0.RELEASE
-###org/springframework/asm/TypePath

+###org/springframework/asm/MethodTooLargeException
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#getClassName()Ljava/lang/String;
+#getMethodName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getCodeSize()I

+###org/springframework/asm/Opcodes
@2.5
@3.0.0.RELEASE
-###org/springframework/asm/Opcodes

+###org/springframework/asm/SpringAsmInfo
@3.2.0.RELEASE
+#<init>()V

+###org/springframework/asm/FieldVisitor
@2.5
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitEnd()V
@3.0.0.RELEASE
-###org/springframework/asm/FieldVisitor

+###org/springframework/asm/ClassReader
@2.5
+#<init>([B)V
+#<init>([BII)V
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/lang/String;)V
+#accept(Lorg/springframework/asm/ClassVisitor;Z)V
+#accept(Lorg/springframework/asm/ClassVisitor;[Lorg/springframework/asm/Attribute;Z)V
+#getItem(I)I
+#readByte(I)I
+#readUnsignedShort(I)I
+#readShort(I)S
+#readInt(I)I
+#readLong(I)J
+#readUTF8(I[C)Ljava/lang/String;
+#readClass(I[C)Ljava/lang/String;
+#readConst(I[C)Ljava/lang/Object;
@3.0.0.RELEASE
-###org/springframework/asm/ClassReader

+###org/springframework/asm/ByteVector
@2.5
+#<init>()V
+#<init>(I)V
+#putByte(I)Lorg/springframework/asm/ByteVector;
+#putShort(I)Lorg/springframework/asm/ByteVector;
+#putInt(I)Lorg/springframework/asm/ByteVector;
+#putLong(J)Lorg/springframework/asm/ByteVector;
+#putUTF8(Ljava/lang/String;)Lorg/springframework/asm/ByteVector;
+#putByteArray([BII)Lorg/springframework/asm/ByteVector;
@3.0.0.RELEASE
-###org/springframework/asm/ByteVector

+###org/springframework/objenesis/SpringObjenesis
@4.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/objenesis/strategy/InstantiatorStrategy;)V
+#isWorthTrying()Z
+#newInstance(Ljava/lang/Class;Z)Ljava/lang/Object;
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#getInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;

+###org/springframework/util/FastByteArrayOutputStream
@4.2.0.RELEASE
+#<init>()V
+#<init>(I)V
+#write(I)V
+#write([BII)V
+#close()V
+#toString()Ljava/lang/String;
+#size()I
+#toByteArrayUnsafe()[B
+#toByteArray()[B
+#reset()V
+#getInputStream()Ljava/io/InputStream;
+#writeTo(Ljava/io/OutputStream;)V
+#resize(I)V

+###org/springframework/util/ReflectionUtils$FieldFilter
@2.0-m1
+#matches(Ljava/lang/reflect/Field;)Z
@5.3.2
+#and(Lorg/springframework/util/ReflectionUtils$FieldFilter;)Lorg/springframework/util/ReflectionUtils$FieldFilter;

+###org/springframework/util/comparator/BooleanComparator
@1.2.2
+#<init>(Z)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RELEASE
+#compare(Ljava/lang/Boolean;Ljava/lang/Boolean;)I

+###org/springframework/util/comparator/InvertibleComparator
@1.2.2
+#<init>(Ljava/util/Comparator;)V
+#<init>(Ljava/util/Comparator;Z)V
+#setAscending(Z)V
+#isAscending()Z
+#invertOrder()V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@6.0.0
-###org/springframework/util/comparator/InvertibleComparator

+###org/springframework/util/comparator/CompoundComparator
@1.2.2
+#<init>()V
+#<init>([Ljava/util/Comparator;)V
+#addComparator(Ljava/util/Comparator;)V
+#addComparator(Ljava/util/Comparator;Z)V
+#setComparator(ILjava/util/Comparator;)V
+#setComparator(ILjava/util/Comparator;Z)V
+#invertOrder()V
+#invertOrder(I)V
+#setAscendingOrder(I)V
+#setDescendingOrder(I)V
+#getComparatorCount()I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@6.0.0
-###org/springframework/util/comparator/CompoundComparator

+###org/springframework/util/comparator/NullSafeComparator
@1.2.2
+#<init>(Ljava/util/Comparator;Z)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/util/comparator/Comparators
@5.0.0.RELEASE
+#<init>()V
+#comparable()Ljava/util/Comparator;
+#nullsLow()Ljava/util/Comparator;
+#nullsLow(Ljava/util/Comparator;)Ljava/util/Comparator;
+#nullsHigh()Ljava/util/Comparator;
+#nullsHigh(Ljava/util/Comparator;)Ljava/util/Comparator;

+###org/springframework/util/comparator/ComparableComparator
@1.2.2
+#<init>()V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@3.0.0.RELEASE
+#compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)I

+###org/springframework/util/comparator/InstanceComparator
@3.2.0.RELEASE
+#<init>([Ljava/lang/Class;)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/springframework/util/ResourceUtils
@1.1.5
+#<init>()V
+#isUrl(Ljava/lang/String;)Z
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#getFile(Ljava/lang/String;)Ljava/io/File;
+#getFile(Ljava/net/URL;)Ljava/io/File;
+#getFile(Ljava/net/URL;Ljava/lang/String;)Ljava/io/File;
@2.0
+#isJarURL(Ljava/net/URL;)Z
+#extractJarFileURL(Ljava/net/URL;)Ljava/net/URL;
@2.5
+#getFile(Ljava/net/URI;)Ljava/io/File;
+#getFile(Ljava/net/URI;Ljava/lang/String;)Ljava/io/File;
+#toURI(Ljava/net/URL;)Ljava/net/URI;
@2.5.4
+#toURI(Ljava/lang/String;)Ljava/net/URI;
@3.0.4.RELEASE
+#isFileURL(Ljava/net/URL;)Z
@3.1.1.RELEASE
+#useCachesIfNecessary(Ljava/net/URLConnection;)V
@4.1.0.RELEASE
+#isJarFileURL(Ljava/net/URL;)Z
@4.1.8.RELEASE
+#extractArchiveURL(Ljava/net/URL;)Ljava/net/URL;
@4.2.0.RELEASE
-#extractArchiveURL(Ljava/net/URL;)Ljava/net/URL;
@4.2.2.RELEASE
+#extractArchiveURL(Ljava/net/URL;)Ljava/net/URL;
@6.0.0
+#toURL(Ljava/lang/String;)Ljava/net/URL;
+#toRelativeURL(Ljava/net/URL;Ljava/lang/String;)Ljava/net/URL;

+###org/springframework/util/FileSystemUtils
@2.5.3
+#<init>()V
+#deleteRecursively(Ljava/io/File;)Z
+#copyRecursively(Ljava/io/File;Ljava/io/File;)V
@5.0.0.RELEASE
+#deleteRecursively(Ljava/nio/file/Path;)Z
+#copyRecursively(Ljava/nio/file/Path;Ljava/nio/file/Path;)V

+###org/springframework/util/ClassUtils
@1.1-rc1
+#<init>()V
+#forName(Ljava/lang/String;)Ljava/lang/Class;
+#getShortName(Ljava/lang/Class;)Ljava/lang/String;
+#getShortNameAsProperty(Ljava/lang/Class;)Ljava/lang/String;
+#getShortName(Ljava/lang/String;)Ljava/lang/String;
+#getStaticMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#addResourcePathToPackagePath(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
+#classPackageAsResourcePath(Ljava/lang/Class;)Ljava/lang/String;
@1.1-rc2
+#hasAtLeastOneMethodWithName(Ljava/lang/Class;Ljava/lang/String;)Z
@1.2-rc1
+#forName(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
@1.2-rc2
+#resolvePrimitiveClassName(Ljava/lang/String;)Ljava/lang/Class;
+#getQualifiedMethodName(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getMethodCountForName(Ljava/lang/Class;Ljava/lang/String;)I
@1.2
+#getAllInterfaces(Ljava/lang/Object;)[Ljava/lang/Class;
+#getAllInterfacesForClass(Ljava/lang/Class;)[Ljava/lang/Class;
+#getAllInterfacesAsSet(Ljava/lang/Object;)Ljava/util/Set;
+#getAllInterfacesForClassAsSet(Ljava/lang/Class;)Ljava/util/Set;
@1.2.1
+#hasMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Z
@1.2.6
+#getDefaultClassLoader()Ljava/lang/ClassLoader;
@1.2.7
+#getQualifiedName(Ljava/lang/Class;)Ljava/lang/String;
@1.2.9
+#getMethodIfAvailable(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
@2.0-m1
-#getQualifiedName(Ljava/lang/Class;)Ljava/lang/String;
-#getMethodIfAvailable(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
@2.0-m2
+#getQualifiedName(Ljava/lang/Class;)Ljava/lang/String;
@2.0-m4
+#isPresent(Ljava/lang/String;)Z
+#isPrimitiveWrapper(Ljava/lang/Class;)Z
+#isPrimitiveOrWrapper(Ljava/lang/Class;)Z
+#isPrimitiveArray(Ljava/lang/Class;)Z
+#isPrimitiveWrapperArray(Ljava/lang/Class;)Z
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;)Z
+#isAssignableValue(Ljava/lang/Class;Ljava/lang/Object;)Z
@2.0
+#resolveClassName(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#getMethodIfAvailable(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#classNamesToString(Ljava/util/Collection;)Ljava/lang/String;
@2.0.2
+#getClassFileName(Ljava/lang/Class;)Ljava/lang/String;
+#hasConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Z
+#getConstructorIfAvailable(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
@2.0.3
+#isPresent(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
+#getUserClass(Ljava/lang/Object;)Ljava/lang/Class;
+#getUserClass(Ljava/lang/Class;)Ljava/lang/Class;
+#classNamesToString([Ljava/lang/Class;)Ljava/lang/String;
+#createCompositeInterface([Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
@2.0.6
+#getMostSpecificMethod(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;
@2.0.7
+#getPackageName(Ljava/lang/Class;)Ljava/lang/String;
@2.5
+#convertResourcePathToClassName(Ljava/lang/String;)Ljava/lang/String;
+#convertClassNameToResourcePath(Ljava/lang/String;)Ljava/lang/String;
@2.5.2
+#getAllInterfacesForClass(Ljava/lang/Class;Ljava/lang/ClassLoader;)[Ljava/lang/Class;
+#getAllInterfacesForClassAsSet(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/Set;
@2.5.3
+#overrideThreadContextClassLoader(Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;
+#isCacheSafe(Ljava/lang/Class;Ljava/lang/ClassLoader;)Z
@2.5.5
+#getDescriptiveType(Ljava/lang/Object;)Ljava/lang/String;
+#isVisible(Ljava/lang/Class;Ljava/lang/ClassLoader;)Z
@3.0.0.RELEASE
*#forName(Ljava/lang/String;)Ljava/lang/Class;[deprecated]
*#isPresent(Ljava/lang/String;)Z[deprecated]
+#matchesTypeName(Ljava/lang/Class;Ljava/lang/String;)Z
+#resolvePrimitiveIfNecessary(Ljava/lang/Class;)Ljava/lang/Class;
@3.1.0.RELEASE
+#getMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#toClassArray(Ljava/util/Collection;)[Ljava/lang/Class;
+#isCglibProxy(Ljava/lang/Object;)Z
+#isCglibProxyClass(Ljava/lang/Class;)Z
+#isCglibProxyClassName(Ljava/lang/String;)Z
@3.1.3.RELEASE
+#getPackageName(Ljava/lang/String;)Ljava/lang/String;
@3.2.6.RELEASE
+#determineCommonAncestor(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
@4.0.0.RELEASE
+#isUserLevelMethod(Ljava/lang/reflect/Method;)Z
-#forName(Ljava/lang/String;)Ljava/lang/Class;[deprecated]
-#isPresent(Ljava/lang/String;)Z[deprecated]
@4.3.4.RELEASE
+#getQualifiedMethodName(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/String;
@5.0.3.RELEASE
+#isJavaLanguageInterface(Ljava/lang/Class;)Z
@5.0.5.RELEASE
+#isInnerClass(Ljava/lang/Class;)Z
@5.1.0.RELEASE
+#getInterfaceMethodIfPossible(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
@5.2.0.RELEASE
*#isCglibProxy(Ljava/lang/Object;)Z[deprecated]
*#isCglibProxyClass(Ljava/lang/Class;)Z[deprecated]
*#isCglibProxyClassName(Ljava/lang/String;)Z[deprecated]
@5.2.3.RELEASE
+#hasMethod(Ljava/lang/Class;Ljava/lang/reflect/Method;)Z
@5.3.16
*#getInterfaceMethodIfPossible(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;[deprecated]
+#getInterfaceMethodIfPossible(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;
@5.3.19
+#isLambdaClass(Ljava/lang/Class;)Z
@6.0.0
+#isStaticClass(Ljava/lang/Class;)Z

+###org/springframework/util/function/SingletonSupplier
@5.1.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/util/function/Supplier;)V
+#<init>(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V
+#get()Ljava/lang/Object;
+#obtain()Ljava/lang/Object;
+#of(Ljava/lang/Object;)Lorg/springframework/util/function/SingletonSupplier;
+#ofNullable(Ljava/lang/Object;)Lorg/springframework/util/function/SingletonSupplier;
+#of(Ljava/util/function/Supplier;)Lorg/springframework/util/function/SingletonSupplier;
+#ofNullable(Ljava/util/function/Supplier;)Lorg/springframework/util/function/SingletonSupplier;

+###org/springframework/util/function/SupplierUtils
@5.1.0.RELEASE
+#<init>()V
+#resolve(Ljava/util/function/Supplier;)Ljava/lang/Object;

+###org/springframework/util/FileCopyUtils
@1.0-rc1
+#<init>()V
+#copy(Ljava/io/Reader;Ljava/io/Writer;)V
+#copy(Ljava/io/InputStream;Ljava/io/OutputStream;)V
+#copy(Ljava/io/File;Ljava/io/File;)V
+#copy([BLjava/io/File;)V
+#copyToByteArray(Ljava/io/InputStream;)[B
+#copyToByteArray(Ljava/io/File;)[B
@1.1-rc1
+#copy([BLjava/io/OutputStream;)V
+#copy(Ljava/lang/String;Ljava/io/Writer;)V
+#copyToString(Ljava/io/Reader;)Ljava/lang/String;
@1.2-rc1
+#copy(Ljava/io/File;Ljava/io/File;)I
+#copy(Ljava/io/InputStream;Ljava/io/OutputStream;)I
+#copy(Ljava/io/Reader;Ljava/io/Writer;)I
-#copy(Ljava/io/File;Ljava/io/File;)V
-#copy(Ljava/io/InputStream;Ljava/io/OutputStream;)V
-#copy(Ljava/io/Reader;Ljava/io/Writer;)V

+###org/springframework/util/MethodInvoker
@1.0
+#<init>()V
+#setTargetClass(Ljava/lang/Class;)V
+#getTargetClass()Ljava/lang/Class;
+#setTargetObject(Ljava/lang/Object;)V
+#getTargetObject()Ljava/lang/Object;
+#setTargetMethod(Ljava/lang/String;)V
+#getTargetMethod()Ljava/lang/String;
+#setStaticMethod(Ljava/lang/String;)V
+#setArguments([Ljava/lang/Object;)V
+#getArguments()[Ljava/lang/Object;
+#prepare()V
+#getPreparedMethod()Ljava/lang/reflect/Method;
+#invoke()Ljava/lang/Object;
@2.0.5
+#isPrepared()Z
@2.5.1
+#getTypeDifferenceWeight([Ljava/lang/Class;[Ljava/lang/Object;)I

+###org/springframework/util/ConcurrentReferenceHashMap$Segment
@3.2.0.RELEASE
+#<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;I)V
+#getReference(Ljava/lang/Object;ILorg/springframework/util/ConcurrentReferenceHashMap$Restructure;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
+#doTask(ILjava/lang/Object;Lorg/springframework/util/ConcurrentReferenceHashMap$Task;)Ljava/lang/Object;
+#clear()V
+#getSize()I
+#getCount()I
@5.1.4.RELEASE
+#<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;II)V
-#<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;I)V

+###org/springframework/util/StringUtils
@1.0-rc1
+#<init>()V
+#countOccurrencesOf(Ljava/lang/String;Ljava/lang/String;)I
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#delete(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#deleteAny(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#tokenizeToStringArray(Ljava/lang/String;Ljava/lang/String;ZZ)[Ljava/lang/String;
+#delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#commaDelimitedListToStringArray(Ljava/lang/String;)[Ljava/lang/String;
+#commaDelimitedListToSet(Ljava/lang/String;)Ljava/util/Set;
+#arrayToDelimitedString([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
+#arrayToCommaDelimitedString([Ljava/lang/Object;)Ljava/lang/String;
+#collectionToCommaDelimitedString(Ljava/util/Collection;)Ljava/lang/String;
+#addStringToArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
@1.0
+#hasLength(Ljava/lang/String;)Z
+#hasText(Ljava/lang/String;)Z
+#unqualify(Ljava/lang/String;)Ljava/lang/String;
+#unqualify(Ljava/lang/String;C)Ljava/lang/String;
+#uncapitalize(Ljava/lang/String;)Ljava/lang/String;
@1.1-rc1
+#collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#capitalize(Ljava/lang/String;)Ljava/lang/String;
+#cleanPath(Ljava/lang/String;)Ljava/lang/String;
+#pathEquals(Ljava/lang/String;Ljava/lang/String;)Z
@1.1.1
+#getFilename(Ljava/lang/String;)Ljava/lang/String;
+#applyRelativePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.1.3
+#tokenizeToStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#parseLocaleString(Ljava/lang/String;)Ljava/util/Locale;
@1.1.4
+#trimLeadingWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#trimTrailingWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#sortStringArray([Ljava/lang/String;)[Ljava/lang/String;
@1.2-rc1
+#startsWithIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z
@1.2
+#split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#splitArrayElementsIntoProperties([Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;
+#splitArrayElementsIntoProperties([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;
@1.2.6
+#endsWithIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z
@1.2.7
+#trimWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#quote(Ljava/lang/String;)Ljava/lang/String;
+#quoteIfString(Ljava/lang/Object;)Ljava/lang/Object;
+#getFilenameExtension(Ljava/lang/String;)Ljava/lang/String;
+#stripFilenameExtension(Ljava/lang/String;)Ljava/lang/String;
+#toStringArray(Ljava/util/Collection;)[Ljava/lang/String;
+#removeDuplicateStrings([Ljava/lang/String;)[Ljava/lang/String;
@1.2.9
+#containsWhitespace(Ljava/lang/String;)Z
+#trimAllWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#concatenateStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#mergeStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
@2.0-m1
-#containsWhitespace(Ljava/lang/String;)Z
-#trimAllWhitespace(Ljava/lang/String;)Ljava/lang/String;
-#getFilenameExtension(Ljava/lang/String;)Ljava/lang/String;
-#stripFilenameExtension(Ljava/lang/String;)Ljava/lang/String;
-#concatenateStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
-#mergeStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
-#toStringArray(Ljava/util/Collection;)[Ljava/lang/String;
@2.0-m2
+#getFilenameExtension(Ljava/lang/String;)Ljava/lang/String;
+#stripFilenameExtension(Ljava/lang/String;)Ljava/lang/String;
@2.0-m3
+#toStringArray(Ljava/util/Collection;)[Ljava/lang/String;
@2.0
+#trimAllWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#concatenateStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#mergeStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
@2.0.1
+#containsWhitespace(Ljava/lang/String;)Z
@2.0.7
+#trimLeadingCharacter(Ljava/lang/String;C)Ljava/lang/String;
+#trimArrayElements([Ljava/lang/String;)[Ljava/lang/String;
+#delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
@2.5
+#trimTrailingCharacter(Ljava/lang/String;C)Ljava/lang/String;
+#toStringArray(Ljava/util/Enumeration;)[Ljava/lang/String;
@2.5.3
+#substringMatch(Ljava/lang/CharSequence;ILjava/lang/CharSequence;)Z
@2.5.5
+#hasLength(Ljava/lang/CharSequence;)Z
+#hasText(Ljava/lang/CharSequence;)Z
+#containsWhitespace(Ljava/lang/CharSequence;)Z
@2.5.6
+#toLanguageTag(Ljava/util/Locale;)Ljava/lang/String;
@3.2.1.RELEASE
+#isEmpty(Ljava/lang/Object;)Z
@4.0.0.RELEASE
+#parseTimeZoneString(Ljava/lang/String;)Ljava/util/TimeZone;
@4.3.15.RELEASE
*#mergeStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;[deprecated]
@5.0.0.RELEASE
+#uriDecode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
@5.0.4.RELEASE
+#parseLocale(Ljava/lang/String;)Ljava/util/Locale;
*#toLanguageTag(Ljava/util/Locale;)Ljava/lang/String;[deprecated]
@5.0.5.RELEASE
*#mergeStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;[deprecated]
@5.2.9.RELEASE
+#matchesCharacter(Ljava/lang/String;C)Z
@5.3.0
*#isEmpty(Ljava/lang/Object;)Z[deprecated]
@5.3.22
+#trimAllWhitespace(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
@6.0.0
*#trimWhitespace(Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#trimLeadingWhitespace(Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#trimTrailingWhitespace(Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#uncapitalizeAsProperty(Ljava/lang/String;)Ljava/lang/String;
-#toLanguageTag(Ljava/util/Locale;)Ljava/lang/String;[deprecated]
-#mergeStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;[deprecated]

+###org/springframework/util/SocketUtils
@4.0.0.RELEASE
+#<init>()V
+#findAvailableTcpPort()I
+#findAvailableTcpPort(I)I
+#findAvailableTcpPort(II)I
+#findAvailableTcpPorts(I)Ljava/util/SortedSet;
+#findAvailableTcpPorts(III)Ljava/util/SortedSet;
+#findAvailableUdpPort()I
+#findAvailableUdpPort(I)I
+#findAvailableUdpPort(II)I
+#findAvailableUdpPorts(I)Ljava/util/SortedSet;
+#findAvailableUdpPorts(III)Ljava/util/SortedSet;
@6.0.0
-###org/springframework/util/SocketUtils

+###org/springframework/util/InvalidMimeTypeException
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getMimeType()Ljava/lang/String;

+###org/springframework/util/SimpleIdGenerator
@4.1.5.RELEASE
+#<init>()V
+#generateId()Ljava/util/UUID;

+###org/springframework/util/AntPathMatcher$AntPathStringMatcher
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#matchStrings(Ljava/lang/String;Ljava/util/Map;)Z
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;Z)V

+###org/springframework/util/CustomizableThreadCreator
@2.0.3
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setThreadNamePrefix(Ljava/lang/String;)V
+#getThreadNamePrefix()Ljava/lang/String;
+#setThreadPriority(I)V
+#getThreadPriority()I
+#setDaemon(Z)V
+#isDaemon()Z
+#setThreadGroupName(Ljava/lang/String;)V
+#setThreadGroup(Ljava/lang/ThreadGroup;)V
+#getThreadGroup()Ljava/lang/ThreadGroup;
+#createThread(Ljava/lang/Runnable;)Ljava/lang/Thread;

+###org/springframework/util/PatternMatchUtils
@2.0-m5
+#<init>()V
+#simpleMatch(Ljava/lang/String;Ljava/lang/String;)Z
+#simpleMatch([Ljava/lang/String;Ljava/lang/String;)Z

+###org/springframework/util/TypeUtils
@2.0.7
+#<init>()V
+#isAssignable(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
@3.0.2.RELEASE
+#isAssignableBound(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z

+###org/springframework/util/StreamUtils
@3.2.2.RELEASE
+#<init>()V
+#copyToByteArray(Ljava/io/InputStream;)[B
+#copyToString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#copy([BLjava/io/OutputStream;)V
+#copy(Ljava/lang/String;Ljava/nio/charset/Charset;Ljava/io/OutputStream;)V
+#copy(Ljava/io/InputStream;Ljava/io/OutputStream;)I
+#nonClosing(Ljava/io/InputStream;)Ljava/io/InputStream;
+#nonClosing(Ljava/io/OutputStream;)Ljava/io/OutputStream;
@4.2.2.RELEASE
+#emptyInput()Ljava/io/InputStream;
@4.3.0.RELEASE
+#copyRange(Ljava/io/InputStream;Ljava/io/OutputStream;JJ)J
+#drain(Ljava/io/InputStream;)I
@5.2.6.RELEASE
+#copyToString(Ljava/io/ByteArrayOutputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;
@6.0.0
*#emptyInput()Ljava/io/InputStream;[deprecated]

+###org/springframework/util/DigestUtils
@3.0.0.RELEASE
+#<init>()V
+#md5Digest([B)[B
+#md5DigestAsHex([B)Ljava/lang/String;
+#appendMd5DigestAsHex([BLjava/lang/StringBuilder;)Ljava/lang/StringBuilder;
@4.2.0.RELEASE
+#md5Digest(Ljava/io/InputStream;)[B
+#md5DigestAsHex(Ljava/io/InputStream;)Ljava/lang/String;
+#appendMd5DigestAsHex(Ljava/io/InputStream;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;

+###org/springframework/util/LinkedCaseInsensitiveMap
@3.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Locale;)V
+#<init>(I)V
+#<init>(ILjava/util/Locale;)V
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.0.7.RELEASE
+#putAll(Ljava/util/Map;)V
@3.2.18.RELEASE
+#clone()Ljava/lang/Object;
@4.0.0.RELEASE
-#clone()Ljava/lang/Object;
@4.2.6.RELEASE
+#getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@4.2.8.RELEASE
+#clone()Ljava/lang/Object;
@4.3.0.RELEASE
-#clone()Ljava/lang/Object;
@4.3.2.RELEASE
+#clone()Ljava/lang/Object;
@4.3.6.RELEASE
+#size()I
+#isEmpty()Z
+#containsValue(Ljava/lang/Object;)Z
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#clone()Lorg/springframework/util/LinkedCaseInsensitiveMap;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@4.3.10.RELEASE
+#getLocale()Ljava/util/Locale;
@5.1.0.RELEASE
+#putIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#computeIfAbsent(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/util/AutoPopulatingList$ElementInstantiationException
@2.0
+#<init>(Ljava/lang/String;)V
@4.3.2.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/util/CommonsLogWriter
@2.5.1
+#<init>(Lorg/apache/commons/logging/Log;)V
+#write(C)V
+#write([CII)V
+#flush()V
+#close()V

+###org/springframework/util/CompositeIterator
@3.0.0.RELEASE
+#<init>()V
+#add(Ljava/util/Iterator;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/springframework/util/unit/DataSize
@5.1.0.RELEASE
+#ofBytes(J)Lorg/springframework/util/unit/DataSize;
+#ofKilobytes(J)Lorg/springframework/util/unit/DataSize;
+#ofMegabytes(J)Lorg/springframework/util/unit/DataSize;
+#ofGigabytes(J)Lorg/springframework/util/unit/DataSize;
+#ofTerabytes(J)Lorg/springframework/util/unit/DataSize;
+#of(JLorg/springframework/util/unit/DataUnit;)Lorg/springframework/util/unit/DataSize;
+#parse(Ljava/lang/CharSequence;)Lorg/springframework/util/unit/DataSize;
+#parse(Ljava/lang/CharSequence;Lorg/springframework/util/unit/DataUnit;)Lorg/springframework/util/unit/DataSize;
+#isNegative()Z
+#toBytes()J
+#toKilobytes()J
+#toMegabytes()J
+#toGigabytes()J
+#toTerabytes()J
+#compareTo(Lorg/springframework/util/unit/DataSize;)I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I

+###org/springframework/util/unit/DataUnit
@5.1.0.RELEASE
+#values()[Lorg/springframework/util/unit/DataUnit;
+#valueOf(Ljava/lang/String;)Lorg/springframework/util/unit/DataUnit;
+#fromSuffix(Ljava/lang/String;)Lorg/springframework/util/unit/DataUnit;

+###org/springframework/util/AntPathMatcher
@1.2-rc2
+#<init>()V
+#isPattern(Ljava/lang/String;)Z
+#match(Ljava/lang/String;Ljava/lang/String;)Z
@1.2.7
+#setPathSeparator(Ljava/lang/String;)V
@2.0-m5
+#extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@2.5
+#matchStart(Ljava/lang/String;Ljava/lang/String;)Z
@3.0.0.RELEASE
+#extractUriTemplateVariables(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#combine(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getPatternComparator(Ljava/lang/String;)Ljava/util/Comparator;
@3.2.1.RELEASE
+#setTrimTokens(Z)V
@4.0.0.RELEASE
+#setCachePatterns(Z)V
@4.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
@4.2.0.RELEASE
+#setCaseSensitive(Z)V

+###org/springframework/util/PropertyPlaceholderHelper$PlaceholderResolver
@3.0.0.RELEASE
+#resolvePlaceholder(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/util/ConcurrentReferenceHashMap$Reference
@3.2.0.RELEASE
+#get()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
+#getHash()I
+#getNext()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
+#release()V

+###org/springframework/util/ConcurrentReferenceHashMap$ReferenceType
@3.2.0.RELEASE
+#values()[Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;

+###org/springframework/util/concurrent/ListenableFutureCallbackRegistry
@4.0.0.RELEASE
+#<init>()V
+#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
+#success(Ljava/lang/Object;)V
+#failure(Ljava/lang/Throwable;)V
@4.1.0.RELEASE
+#addSuccessCallback(Lorg/springframework/util/concurrent/SuccessCallback;)V
+#addFailureCallback(Lorg/springframework/util/concurrent/FailureCallback;)V

+###org/springframework/util/concurrent/ListenableFutureCallback
@4.0.0.RELEASE
+#onSuccess(Ljava/lang/Object;)V
+#onFailure(Ljava/lang/Throwable;)V
@4.1.0.RELEASE
-#onSuccess(Ljava/lang/Object;)V
-#onFailure(Ljava/lang/Throwable;)V

+###org/springframework/util/concurrent/SuccessCallback
@4.1.0.RELEASE
+#onSuccess(Ljava/lang/Object;)V

+###org/springframework/util/concurrent/MonoToListenableFutureAdapter
@5.1.1.RELEASE
+#<init>(Lreactor/core/publisher/Mono;)V
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
+#addCallback(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V
@5.3.0
-#get()Ljava/lang/Object;
-#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
-#cancel(Z)Z
-#isCancelled()Z
-#isDone()Z
-#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
-#addCallback(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V

+###org/springframework/util/concurrent/ListenableFutureTask
@4.0.0.RELEASE
+#<init>(Ljava/util/concurrent/Callable;)V
+#<init>(Ljava/lang/Runnable;Ljava/lang/Object;)V
+#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
@4.1.0.RELEASE
+#addCallback(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V
@5.0.0.RELEASE
+#completable()Ljava/util/concurrent/CompletableFuture;

+###org/springframework/util/concurrent/ListenableFuture
@4.0.0.RELEASE
+#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
@4.1.0.RELEASE
+#addCallback(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V
@5.0.0.RELEASE
+#completable()Ljava/util/concurrent/CompletableFuture;
@6.0.0
*#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V[deprecated]
*#addCallback(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V[deprecated]

+###org/springframework/util/concurrent/FailureCallback
@4.1.0.RELEASE
+#onFailure(Ljava/lang/Throwable;)V

+###org/springframework/util/concurrent/CompletableToListenableFutureAdapter
@4.2.0.RELEASE
+#<init>(Ljava/util/concurrent/CompletableFuture;)V
+#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
+#addCallback(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@4.3.7.RELEASE
+#<init>(Ljava/util/concurrent/CompletionStage;)V
@5.0.0.RELEASE
+#completable()Ljava/util/concurrent/CompletableFuture;

+###org/springframework/util/concurrent/ListenableFutureAdapter
@4.0.0.RELEASE
+#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
@4.1.0.RELEASE
+#addCallback(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V

+###org/springframework/util/concurrent/SettableListenableFuture
@4.1.0.RELEASE
+#<init>()V
+#set(Ljava/lang/Object;)Z
+#setException(Ljava/lang/Throwable;)Z
+#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
+#addCallback(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@5.0.0.RELEASE
+#completable()Ljava/util/concurrent/CompletableFuture;

+###org/springframework/util/concurrent/FutureAdapter
@4.0.0.RELEASE
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;

+###org/springframework/util/ErrorHandler
@3.0.0.RELEASE
+#handleError(Ljava/lang/Throwable;)V

+###org/springframework/util/SerializationUtils
@3.0.5.RELEASE
+#<init>()V
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;
@6.0.0
*#deserialize([B)Ljava/lang/Object;[deprecated]
+#clone(Ljava/io/Serializable;)Ljava/io/Serializable;

+###org/springframework/util/Base64Utils
@4.1.0.RELEASE
+#<init>()V
+#encode([B)[B
+#encodeToString([B)Ljava/lang/String;
+#decode([B)[B
+#decodeFromString(Ljava/lang/String;)[B
@4.2.4.RELEASE
+#encodeUrlSafe([B)[B
+#decodeUrlSafe([B)[B
+#encodeToUrlSafeString([B)Ljava/lang/String;
+#decodeFromUrlSafeString(Ljava/lang/String;)[B

+###org/springframework/util/ConcurrencyThrottleSupport
@1.2.5
+#<init>()V
+#setConcurrencyLimit(I)V
+#getConcurrencyLimit()I
+#isThrottleActive()Z

+###org/springframework/util/Assert
@1.1.2
+#<init>()V
+#state(ZLjava/lang/String;)V
+#state(Z)V
+#isTrue(ZLjava/lang/String;)V
+#isTrue(Z)V
+#notNull(Ljava/lang/Object;Ljava/lang/String;)V
+#notNull(Ljava/lang/Object;)V
+#hasLength(Ljava/lang/String;Ljava/lang/String;)V
+#hasLength(Ljava/lang/String;)V
+#hasText(Ljava/lang/String;Ljava/lang/String;)V
+#hasText(Ljava/lang/String;)V
+#notEmpty([Ljava/lang/Object;Ljava/lang/String;)V
+#notEmpty([Ljava/lang/Object;)V
+#notEmpty(Ljava/util/Collection;Ljava/lang/String;)V
+#notEmpty(Ljava/util/Collection;)V
+#notEmpty(Ljava/util/Map;Ljava/lang/String;)V
+#notEmpty(Ljava/util/Map;)V
@1.1.3
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;)V
@1.1.4
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
@1.2
+#doesNotContain(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#doesNotContain(Ljava/lang/String;Ljava/lang/String;)V
@1.2.7
+#isNull(Ljava/lang/Object;Ljava/lang/String;)V
+#isNull(Ljava/lang/Object;)V
@2.0-m4
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;)V
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V
@2.5.1
+#noNullElements([Ljava/lang/Object;Ljava/lang/String;)V
+#noNullElements([Ljava/lang/Object;)V
@4.3.7.RELEASE
*#state(Z)V[deprecated]
*#isTrue(Z)V[deprecated]
*#isNull(Ljava/lang/Object;)V[deprecated]
*#notNull(Ljava/lang/Object;)V[deprecated]
*#hasLength(Ljava/lang/String;)V[deprecated]
*#hasText(Ljava/lang/String;)V[deprecated]
*#doesNotContain(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
*#notEmpty([Ljava/lang/Object;)V[deprecated]
*#noNullElements([Ljava/lang/Object;)V[deprecated]
*#notEmpty(Ljava/util/Collection;)V[deprecated]
*#notEmpty(Ljava/util/Map;)V[deprecated]
@5.0.0.RELEASE
+#state(ZLjava/util/function/Supplier;)V
+#isTrue(ZLjava/util/function/Supplier;)V
+#isNull(Ljava/lang/Object;Ljava/util/function/Supplier;)V
+#notNull(Ljava/lang/Object;Ljava/util/function/Supplier;)V
+#hasLength(Ljava/lang/String;Ljava/util/function/Supplier;)V
+#hasText(Ljava/lang/String;Ljava/util/function/Supplier;)V
+#doesNotContain(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)V
+#notEmpty([Ljava/lang/Object;Ljava/util/function/Supplier;)V
+#noNullElements([Ljava/lang/Object;Ljava/util/function/Supplier;)V
+#notEmpty(Ljava/util/Collection;Ljava/util/function/Supplier;)V
+#notEmpty(Ljava/util/Map;Ljava/util/function/Supplier;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;Ljava/util/function/Supplier;)V
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Supplier;)V
@5.2.0.RELEASE
+#noNullElements(Ljava/util/Collection;Ljava/lang/String;)V
+#noNullElements(Ljava/util/Collection;Ljava/util/function/Supplier;)V

+###org/springframework/util/backoff/BackOff
@4.1.0.RELEASE
+#start()Lorg/springframework/util/backoff/BackOffExecution;

+###org/springframework/util/backoff/FixedBackOff
@4.1.0.RELEASE
+#<init>()V
+#<init>(JJ)V
+#setInterval(J)V
+#getInterval()J
+#setMaxAttempts(J)V
+#getMaxAttempts()J
+#start()Lorg/springframework/util/backoff/BackOffExecution;

+###org/springframework/util/backoff/ExponentialBackOff
@4.1.0.RELEASE
+#<init>()V
+#<init>(JD)V
+#setInitialInterval(J)V
+#getInitialInterval()J
+#setMultiplier(D)V
+#getMultiplier()D
+#setMaxInterval(J)V
+#getMaxInterval()J
+#setMaxElapsedTime(J)V
+#getMaxElapsedTime()J
+#start()Lorg/springframework/util/backoff/BackOffExecution;

+###org/springframework/util/backoff/BackOffExecution
@4.1.0.RELEASE
+#nextBackOff()J

+###org/springframework/util/PropertiesPersister
@1.0
+#load(Ljava/util/Properties;Ljava/io/InputStream;)V
+#load(Ljava/util/Properties;Ljava/io/Reader;)V
+#store(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;)V
+#store(Ljava/util/Properties;Ljava/io/Writer;Ljava/lang/String;)V
@1.2.2
+#loadFromXml(Ljava/util/Properties;Ljava/io/InputStream;)V
+#storeToXml(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;)V
+#storeToXml(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/util/AlternativeJdkIdGenerator
@4.0.0.RELEASE
+#<init>()V
+#generateId()Ljava/util/UUID;

+###org/springframework/util/MimeType
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
+#<init>(Lorg/springframework/util/MimeType;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#isWildcardType()Z
+#isWildcardSubtype()Z
+#isConcrete()Z
+#getType()Ljava/lang/String;
+#getSubtype()Ljava/lang/String;
+#getCharSet()Ljava/nio/charset/Charset;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameters()Ljava/util/Map;
+#includes(Lorg/springframework/util/MimeType;)Z
+#isCompatibleWith(Lorg/springframework/util/MimeType;)Z
+#compareTo(Lorg/springframework/util/MimeType;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#valueOf(Ljava/lang/String;)Lorg/springframework/util/MimeType;
+#compareTo(Ljava/lang/Object;)I
@4.3.0.RELEASE
+#<init>(Lorg/springframework/util/MimeType;Ljava/nio/charset/Charset;)V
+#getCharset()Ljava/nio/charset/Charset;
*#getCharSet()Ljava/nio/charset/Charset;[deprecated]
@5.0.0.RELEASE
-#getCharSet()Ljava/nio/charset/Charset;[deprecated]
@5.1.4.RELEASE
+#equalsTypeAndSubtype(Lorg/springframework/util/MimeType;)Z
+#isPresentIn(Ljava/util/Collection;)Z
@5.3.0
+#getSubtypeSuffix()Ljava/lang/String;
@6.0.0
+#isMoreSpecific(Lorg/springframework/util/MimeType;)Z
+#isLessSpecific(Lorg/springframework/util/MimeType;)Z

+###org/springframework/util/MultiValueMap
@3.0.0.RELEASE
+#getFirst(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#setAll(Ljava/util/Map;)V
+#toSingleValueMap()Ljava/util/Map;
@5.0.0.RELEASE
+#addAll(Ljava/lang/Object;Ljava/util/List;)V
+#addAll(Lorg/springframework/util/MultiValueMap;)V
@5.2.0.RELEASE
+#addIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/springframework/util/SystemPropertyUtils
@1.2.5
+#<init>()V
+#resolvePlaceholders(Ljava/lang/String;)Ljava/lang/String;
@3.0.0.RELEASE
+#resolvePlaceholders(Ljava/lang/String;Z)Ljava/lang/String;

+###org/springframework/util/PropertyPlaceholderHelper
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#replacePlaceholders(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;
+#replacePlaceholders(Ljava/lang/String;Lorg/springframework/util/PropertyPlaceholderHelper$PlaceholderResolver;)Ljava/lang/String;

+###org/springframework/util/ReflectionUtils$FieldCallback
@2.0-m1
+#doWith(Ljava/lang/reflect/Field;)V

+###org/springframework/util/LinkedMultiValueMap
@3.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Map;)V
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#getFirst(Ljava/lang/Object;)Ljava/lang/Object;
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#setAll(Ljava/util/Map;)V
+#toSingleValueMap()Ljava/util/Map;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/util/List;
+#put(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
+#remove(Ljava/lang/Object;)Ljava/util/List;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@4.2.0.RELEASE
+#clone()Lorg/springframework/util/LinkedMultiValueMap;
+#deepCopy()Lorg/springframework/util/LinkedMultiValueMap;
+#clone()Ljava/lang/Object;
@5.0.0.RELEASE
+#addAll(Ljava/lang/Object;Ljava/util/List;)V
+#addAll(Lorg/springframework/util/MultiValueMap;)V
@5.0.18.RELEASE
-#remove(Ljava/lang/Object;)Ljava/lang/Object;
-#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#get(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.20.RELEASE
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@5.1.16.RELEASE
-#remove(Ljava/lang/Object;)Ljava/lang/Object;
-#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#get(Ljava/lang/Object;)Ljava/lang/Object;
@5.1.19.RELEASE
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@5.2.7.RELEASE
-#remove(Ljava/lang/Object;)Ljava/lang/Object;
-#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#get(Ljava/lang/Object;)Ljava/lang/Object;
@5.2.10.RELEASE
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@5.3.0
-#getFirst(Ljava/lang/Object;)Ljava/lang/Object;
-#add(Ljava/lang/Object;Ljava/lang/Object;)V
-#addAll(Ljava/lang/Object;Ljava/util/List;)V
-#addAll(Lorg/springframework/util/MultiValueMap;)V
-#set(Ljava/lang/Object;Ljava/lang/Object;)V
-#setAll(Ljava/util/Map;)V
-#toSingleValueMap()Ljava/util/Map;
-#size()I
-#isEmpty()Z
-#containsKey(Ljava/lang/Object;)Z
-#containsValue(Ljava/lang/Object;)Z
-#get(Ljava/lang/Object;)Ljava/util/List;
-#put(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
-#remove(Ljava/lang/Object;)Ljava/util/List;
-#putAll(Ljava/util/Map;)V
-#clear()V
-#keySet()Ljava/util/Set;
-#values()Ljava/util/Collection;
-#entrySet()Ljava/util/Set;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
-#remove(Ljava/lang/Object;)Ljava/lang/Object;
-#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#get(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/util/StopWatch
@1.0-rc1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setKeepTaskList(Z)V
+#getKeepTaskList()Z
+#start(Ljava/lang/String;)V
+#stop()V
+#getTotalTime()J
+#getLastInterval()J
+#getTotalTimeSecs()D
+#getTaskCount()I
+#getTaskInfo()[Lorg/springframework/util/StopWatch$TaskInfo;
+#isRunning()Z
+#shortSummary()Ljava/lang/String;
+#prettyPrint()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.1-rc1
+#getLastTaskTimeMillis()J
+#getTotalTimeMillis()J
+#getTotalTimeSeconds()D
@1.1.2
-#getKeepTaskList()Z
@1.2-rc1
-#getLastInterval()J
-#getTotalTime()J
-#getTotalTimeSecs()D
@2.0.2
+#start()V
@3.0.0.RELEASE
+#getLastTaskName()Ljava/lang/String;
@3.0.3.RELEASE
+#getLastTaskInfo()Lorg/springframework/util/StopWatch$TaskInfo;
@4.2.2.RELEASE
+#getId()Ljava/lang/String;
+#currentTaskName()Ljava/lang/String;
@5.2.0.RELEASE
+#getLastTaskTimeNanos()J
+#getTotalTimeNanos()J

+###org/springframework/util/InstanceFilter
@4.1.0.RELEASE
+#<init>(Ljava/util/Collection;Ljava/util/Collection;Z)V
+#match(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/util/ReflectionUtils$MethodCallback
@2.0-m1
+#doWith(Ljava/lang/reflect/Method;)V

+###org/springframework/util/ConcurrentReferenceHashMap$Restructure
@3.2.0.RELEASE
+#values()[Lorg/springframework/util/ConcurrentReferenceHashMap$Restructure;
+#valueOf(Ljava/lang/String;)Lorg/springframework/util/ConcurrentReferenceHashMap$Restructure;

+###org/springframework/util/ReflectionUtils$MethodFilter
@2.0-m1
+#matches(Ljava/lang/reflect/Method;)Z
@5.3.2
+#and(Lorg/springframework/util/ReflectionUtils$MethodFilter;)Lorg/springframework/util/ReflectionUtils$MethodFilter;

+###org/springframework/util/ReflectionUtils
@1.2.2
+#<init>()V
+#handleReflectionException(Ljava/lang/Exception;)V
+#handleInvocationTargetException(Ljava/lang/reflect/InvocationTargetException;)V
@1.2.9
+#findMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#invokeMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
+#invokeMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#isPublicStaticFinal(Ljava/lang/reflect/Field;)Z
+#makeAccessible(Ljava/lang/reflect/Field;)V
@2.0-m1
+#doWithFields(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;)V
+#doWithFields(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;Lorg/springframework/util/ReflectionUtils$FieldFilter;)V
+#doWithMethods(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;)V
+#doWithMethods(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;Lorg/springframework/util/ReflectionUtils$MethodFilter;)V
+#getAllDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;
+#shallowCopyFieldState(Ljava/lang/Object;Ljava/lang/Object;)V
-#findMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
-#isPublicStaticFinal(Ljava/lang/reflect/Field;)Z
-#makeAccessible(Ljava/lang/reflect/Field;)V
@2.0-m3
+#isPublicStaticFinal(Ljava/lang/reflect/Field;)Z
+#makeAccessible(Ljava/lang/reflect/Field;)V
@2.0-m5
+#invokeMethod(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
@2.0
+#findMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
-#invokeMethod(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
@2.0.6
+#declaresException(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z
@2.0.7
+#findMethod(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;
@2.0.8
+#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
+#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
@2.5
+#findField(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Field;
+#setField(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
+#rethrowException(Ljava/lang/Throwable;)V
+#makeAccessible(Ljava/lang/reflect/Method;)V
+#makeAccessible(Ljava/lang/reflect/Constructor;)V
-#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
-#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
@2.5.1
+#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
+#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#rethrowRuntimeException(Ljava/lang/Throwable;)V
@2.5.5
+#findField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
+#getField(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
@2.5.6
+#isEqualsMethod(Ljava/lang/reflect/Method;)Z
+#isHashCodeMethod(Ljava/lang/reflect/Method;)Z
+#isToStringMethod(Ljava/lang/reflect/Method;)Z
@3.1.0.RELEASE
+#isObjectMethod(Ljava/lang/reflect/Method;)Z
+#isCglibRenamedMethod(Ljava/lang/reflect/Method;)Z
+#getUniqueDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;
@4.2.0.RELEASE
+#doWithLocalMethods(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;)V
+#doWithLocalFields(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;)V
@4.2.4.RELEASE
+#clearCache()V
@5.0.0.RELEASE
+#accessibleConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
@5.0.11.RELEASE
*#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
@5.1.3.RELEASE
*#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
@5.2.0.RELEASE
+#getUniqueDeclaredMethods(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodFilter;)[Ljava/lang/reflect/Method;
+#getDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;
-#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
-#invokeJdbcMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;[deprecated]

+###org/springframework/util/MimeType$SpecificityComparator
@4.0.0.RELEASE
+#<init>()V
+#compare(Lorg/springframework/util/MimeType;Lorg/springframework/util/MimeType;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/springframework/util/AntPathMatcher$AntPatternComparator
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#compare(Ljava/lang/String;Ljava/lang/String;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/springframework/util/StopWatch$TaskInfo
@1.0-rc1
+#getTaskName()Ljava/lang/String;
+#getTime()J
+#getTimeSecs()D
@1.1-rc1
+#getTimeMillis()J
+#getTimeSeconds()D
@1.2-rc1
-#getTime()J
-#getTimeSecs()D
@5.2.0.RELEASE
+#getTimeNanos()J

+###org/springframework/util/ObjectUtils
@1.0
+#<init>()V
+#nullSafeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z
@1.0.1
+#getIdentityHexString(Ljava/lang/Object;)Ljava/lang/String;
@1.1-rc1
+#isCheckedException(Ljava/lang/Throwable;)Z
+#isCompatibleWithThrowsClause(Ljava/lang/Throwable;[Ljava/lang/Class;)Z
@1.1.2
+#toObjectArray(Ljava/lang/Object;)[Ljava/lang/Object;
@1.2.2
+#isEmpty([Ljava/lang/Object;)Z
@1.2.7
+#addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
@2.0-m1
-#addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
@2.0-m2
+#addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
@2.0-m3
+#nullSafeToString(Ljava/lang/Object;)Ljava/lang/String;
@2.0-m4
+#nullSafeHashCode(Ljava/lang/Object;)I
+#nullSafeHashCode([Ljava/lang/Object;)I
+#nullSafeHashCode([Z)I
+#nullSafeHashCode([B)I
+#nullSafeHashCode([C)I
+#nullSafeHashCode([D)I
+#nullSafeHashCode([F)I
+#nullSafeHashCode([I)I
+#nullSafeHashCode([J)I
+#nullSafeHashCode([S)I
+#hashCode(Z)I
+#hashCode(D)I
+#hashCode(F)I
+#hashCode(J)I
+#nullSafeToString([Ljava/lang/Object;)Ljava/lang/String;
+#nullSafeToString([Z)Ljava/lang/String;
+#nullSafeToString([B)Ljava/lang/String;
+#nullSafeToString([C)Ljava/lang/String;
+#nullSafeToString([D)Ljava/lang/String;
+#nullSafeToString([F)Ljava/lang/String;
+#nullSafeToString([I)Ljava/lang/String;
+#nullSafeToString([J)Ljava/lang/String;
+#nullSafeToString([S)Ljava/lang/String;
+#identityToString(Ljava/lang/Object;)Ljava/lang/String;
+#getDisplayString(Ljava/lang/Object;)Ljava/lang/String;
@2.0.3
+#nullSafeClassName(Ljava/lang/Object;)Ljava/lang/String;
@2.5
+#containsElement([Ljava/lang/Object;Ljava/lang/Object;)Z
@3.0.0.RELEASE
+#isArray(Ljava/lang/Object;)Z
@3.1.0.RELEASE
+#containsConstant([Ljava/lang/Enum;Ljava/lang/String;)Z
+#containsConstant([Ljava/lang/Enum;Ljava/lang/String;Z)Z
+#caseInsensitiveValueOf([Ljava/lang/Enum;Ljava/lang/String;)Ljava/lang/Enum;
@4.2.0.RELEASE
+#isEmpty(Ljava/lang/Object;)Z
@5.0.0.RELEASE
+#unwrapOptional(Ljava/lang/Object;)Ljava/lang/Object;
*#hashCode(Z)I[deprecated]
*#hashCode(D)I[deprecated]
*#hashCode(F)I[deprecated]
*#hashCode(J)I[deprecated]
@6.0.0
+#addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;I)[Ljava/lang/Object;
-#hashCode(Z)I[deprecated]
-#hashCode(D)I[deprecated]
-#hashCode(F)I[deprecated]
-#hashCode(J)I[deprecated]

+###org/springframework/util/CollectionUtils
@1.1.3
+#<init>()V
+#findValueOfType(Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object;
+#findValueOfType(Ljava/util/Collection;[Ljava/lang/Class;)Ljava/lang/Object;
@1.2.3
+#hasUniqueObject(Ljava/util/Collection;)Z
@1.2.4
+#isEmpty(Ljava/util/Collection;)Z
+#isEmpty(Ljava/util/Map;)Z
@1.2.9
+#containsInstance(Ljava/util/Collection;Ljava/lang/Object;)Z
+#contains(Ljava/util/Iterator;Ljava/lang/Object;)Z
+#contains(Ljava/util/Enumeration;Ljava/lang/Object;)Z
+#arrayToList(Ljava/lang/Object;)Ljava/util/List;
+#mergePropertiesIntoMap(Ljava/util/Properties;Ljava/util/Map;)V
+#containsAny(Ljava/util/Collection;Ljava/util/Collection;)Z
+#findFirstMatch(Ljava/util/Collection;Ljava/util/Collection;)Ljava/lang/Object;
@2.0-m1
-#containsInstance(Ljava/util/Collection;Ljava/lang/Object;)Z
-#contains(Ljava/util/Iterator;Ljava/lang/Object;)Z
-#contains(Ljava/util/Enumeration;Ljava/lang/Object;)Z
-#arrayToList(Ljava/lang/Object;)Ljava/util/List;
-#mergePropertiesIntoMap(Ljava/util/Properties;Ljava/util/Map;)V
-#containsAny(Ljava/util/Collection;Ljava/util/Collection;)Z
-#findFirstMatch(Ljava/util/Collection;Ljava/util/Collection;)Ljava/lang/Object;
@2.0-m2
+#contains(Ljava/util/Iterator;Ljava/lang/Object;)Z
+#contains(Ljava/util/Enumeration;Ljava/lang/Object;)Z
@2.0-m3
+#toList(Ljava/lang/Object;)Ljava/util/List;
@2.0-m4
+#arrayToList(Ljava/lang/Object;)Ljava/util/List;
-#toList(Ljava/lang/Object;)Ljava/util/List;
@2.0-rc2
+#mergePropertiesIntoMap(Ljava/util/Properties;Ljava/util/Map;)V
@2.0
+#containsInstance(Ljava/util/Collection;Ljava/lang/Object;)Z
+#containsAny(Ljava/util/Collection;Ljava/util/Collection;)Z
+#findFirstMatch(Ljava/util/Collection;Ljava/util/Collection;)Ljava/lang/Object;
@2.0.3
+#mergeArrayIntoCollection(Ljava/lang/Object;Ljava/util/Collection;)V
@3.0.0.RELEASE
+#toIterator(Ljava/util/Enumeration;)Ljava/util/Iterator;
@3.0.3.RELEASE
+#findCommonElementType(Ljava/util/Collection;)Ljava/lang/Class;
@3.1.0.RELEASE
+#toArray(Ljava/util/Enumeration;[Ljava/lang/Object;)[Ljava/lang/Object;
+#toMultiValueMap(Ljava/util/Map;)Lorg/springframework/util/MultiValueMap;
+#unmodifiableMultiValueMap(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;
@5.0.3.RELEASE
+#lastElement(Ljava/util/Set;)Ljava/lang/Object;
+#lastElement(Ljava/util/List;)Ljava/lang/Object;
@5.2.3.RELEASE
+#firstElement(Ljava/util/Set;)Ljava/lang/Object;
+#firstElement(Ljava/util/List;)Ljava/lang/Object;
@5.3.0
+#newHashMap(I)Ljava/util/HashMap;
+#newLinkedHashMap(I)Ljava/util/LinkedHashMap;

+###org/springframework/util/ConcurrentReferenceHashMap
@3.2.0.RELEASE
+#<init>()V
+#<init>(I)V
+#<init>(IF)V
+#<init>(II)V
+#<init>(IFI)V
+#<init>(IFILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#size()I
+#entrySet()Ljava/util/Set;
@3.2.8.RELEASE
+#<init>(ILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
+#purgeUnreferencedEntries()V
@4.0.0.RELEASE
-#<init>(ILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
-#purgeUnreferencedEntries()V
@4.0.2.RELEASE
+#<init>(ILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
+#purgeUnreferencedEntries()V
@4.3.15.RELEASE
+#getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@4.3.19.RELEASE
+#isEmpty()Z
@5.0.0.RELEASE
-#getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#isEmpty()Z
@5.0.5.RELEASE
+#getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@5.0.8.RELEASE
+#isEmpty()Z

+###org/springframework/util/AutoPopulatingList$ElementFactory
@2.0
+#createElement(I)Ljava/lang/Object;

+###org/springframework/util/ConcurrentReferenceHashMap$Entry
@3.2.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/util/ResizableByteArrayOutputStream
@4.0.3.RELEASE
+#<init>()V
+#<init>(I)V
+#resize(I)V
+#grow(I)V
+#capacity()I

+###org/springframework/util/xml/XmlValidationModeDetector
@2.0-rc2
+#<init>()V
+#detectValidationMode(Ljava/io/InputStream;)I

+###org/springframework/util/xml/DomUtils
@1.2-rc1
+#<init>()V
+#getChildElementsByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/util/List;
+#getTextValue(Lorg/w3c/dom/Element;)Ljava/lang/String;
@1.2.9
+#getChildElementByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/Element;
+#getChildElementValueByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/lang/String;
+#nodeNameEquals(Lorg/w3c/dom/Node;Ljava/lang/String;)Z
@2.0-m1
+#getChildElementsByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;Z)Ljava/util/List;
-#getChildElementByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/Element;
-#getChildElementValueByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/lang/String;
-#nodeNameEquals(Lorg/w3c/dom/Node;Ljava/lang/String;)Z
@2.0-m4
+#nodeNameEquals(Lorg/w3c/dom/Node;Ljava/lang/String;)Z
-#getChildElementsByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;Z)Ljava/util/List;
@2.0-rc2
+#getChildElementByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/Element;
+#getChildElementValueByTagName(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/lang/String;
@2.5.3
+#getChildElementsByTagName(Lorg/w3c/dom/Element;[Ljava/lang/String;)Ljava/util/List;
@3.0.0.RELEASE
+#createContentHandler(Lorg/w3c/dom/Node;)Lorg/xml/sax/ContentHandler;
@3.0.3.RELEASE
+#getChildElements(Lorg/w3c/dom/Element;)Ljava/util/List;

+###org/springframework/util/xml/SimpleSaxErrorHandler
@1.2-rc1
+#<init>(Lorg/apache/commons/logging/Log;)V
+#warning(Lorg/xml/sax/SAXParseException;)V
+#error(Lorg/xml/sax/SAXParseException;)V
+#fatalError(Lorg/xml/sax/SAXParseException;)V

+###org/springframework/util/xml/SimpleTransformErrorListener
@1.2-rc1
+#<init>(Lorg/apache/commons/logging/Log;)V
+#warning(Ljavax/xml/transform/TransformerException;)V
+#error(Ljavax/xml/transform/TransformerException;)V
+#fatalError(Ljavax/xml/transform/TransformerException;)V

+###org/springframework/util/xml/StaxUtils
@3.0.0.RELEASE
+#<init>()V
+#createStaxSource(Ljavax/xml/stream/XMLStreamReader;)Ljavax/xml/transform/Source;
+#createStaxSource(Ljavax/xml/stream/XMLEventReader;)Ljavax/xml/transform/Source;
+#isStaxSource(Ljavax/xml/transform/Source;)Z
+#createStaxResult(Ljavax/xml/stream/XMLStreamWriter;)Ljavax/xml/transform/Result;
+#createStaxResult(Ljavax/xml/stream/XMLEventWriter;)Ljavax/xml/transform/Result;
+#isStaxResult(Ljavax/xml/transform/Result;)Z
+#getXMLStreamReader(Ljavax/xml/transform/Source;)Ljavax/xml/stream/XMLStreamReader;
+#getXMLEventReader(Ljavax/xml/transform/Source;)Ljavax/xml/stream/XMLEventReader;
+#getXMLStreamWriter(Ljavax/xml/transform/Result;)Ljavax/xml/stream/XMLStreamWriter;
+#getXMLEventWriter(Ljavax/xml/transform/Result;)Ljavax/xml/stream/XMLEventWriter;
+#createContentHandler(Ljavax/xml/stream/XMLStreamWriter;)Lorg/xml/sax/ContentHandler;
+#createContentHandler(Ljavax/xml/stream/XMLEventWriter;)Lorg/xml/sax/ContentHandler;
+#createXMLReader(Ljavax/xml/stream/XMLStreamReader;)Lorg/xml/sax/XMLReader;
+#createXMLReader(Ljavax/xml/stream/XMLEventReader;)Lorg/xml/sax/XMLReader;
+#createEventStreamReader(Ljavax/xml/stream/XMLEventReader;)Ljavax/xml/stream/XMLStreamReader;
@3.0.5.RELEASE
+#createCustomStaxSource(Ljavax/xml/stream/XMLStreamReader;)Ljavax/xml/transform/Source;
+#createCustomStaxSource(Ljavax/xml/stream/XMLEventReader;)Ljavax/xml/transform/Source;
+#createCustomStaxResult(Ljavax/xml/stream/XMLStreamWriter;)Ljavax/xml/transform/Result;
+#createCustomStaxResult(Ljavax/xml/stream/XMLEventWriter;)Ljavax/xml/transform/Result;
+#createEventStreamWriter(Ljavax/xml/stream/XMLEventWriter;Ljavax/xml/stream/XMLEventFactory;)Ljavax/xml/stream/XMLStreamWriter;
@3.2.0.RELEASE
+#createEventStreamWriter(Ljavax/xml/stream/XMLEventWriter;)Ljavax/xml/stream/XMLStreamWriter;
@3.2.5.RELEASE
+#isStaxSourceClass(Ljava/lang/Class;)Z
@4.0.0.RELEASE
-#isStaxSourceClass(Ljava/lang/Class;)Z
@5.0.0.RELEASE
+#createDefensiveInputFactory()Ljavax/xml/stream/XMLInputFactory;
+#createXMLEventReader(Ljava/util/List;)Ljavax/xml/stream/XMLEventReader;
@5.1.4.RELEASE
+#createDefensiveInputFactory(Ljava/util/function/Supplier;)Ljavax/xml/stream/XMLInputFactory;

+###org/springframework/util/xml/SimpleNamespaceContext
@3.0.0.RELEASE
+#<init>()V
+#getNamespaceURI(Ljava/lang/String;)Ljava/lang/String;
+#getPrefix(Ljava/lang/String;)Ljava/lang/String;
+#getPrefixes(Ljava/lang/String;)Ljava/util/Iterator;
+#setBindings(Ljava/util/Map;)V
+#bindDefaultNamespaceUri(Ljava/lang/String;)V
+#bindNamespaceUri(Ljava/lang/String;Ljava/lang/String;)V
+#clear()V
+#getBoundPrefixes()Ljava/util/Iterator;
+#removeBinding(Ljava/lang/String;)V

+###org/springframework/util/xml/TransformerUtils
@2.5.6
+#<init>()V
+#enableIndenting(Ljavax/xml/transform/Transformer;)V
+#enableIndenting(Ljavax/xml/transform/Transformer;I)V
+#disableIndenting(Ljavax/xml/transform/Transformer;)V

+###org/springframework/util/PathMatcher
@1.0-rc1
+#<init>()V
+#match(Ljava/lang/String;Ljava/lang/String;)Z
@1.0.1
+#isPattern(Ljava/lang/String;)Z
+#retrieveMatchingFiles(Ljava/lang/String;Ljava/io/File;)Ljava/util/List;
@1.1-rc1
-#retrieveMatchingFiles(Ljava/lang/String;Ljava/io/File;)Ljava/util/List;
@1.2-rc2
-#<init>()V
@2.0-m5
+#extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@2.5
+#matchStart(Ljava/lang/String;Ljava/lang/String;)Z
@3.0.0.RELEASE
+#extractUriTemplateVariables(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#getPatternComparator(Ljava/lang/String;)Ljava/util/Comparator;
+#combine(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/util/StringValueResolver
@2.5
+#resolveStringValue(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/util/NumberUtils
@1.1.2
+#<init>()V
+#convertNumberToTargetClass(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/Number;
+#parseNumber(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Number;
+#parseNumber(Ljava/lang/String;Ljava/lang/Class;Ljava/text/NumberFormat;)Ljava/lang/Number;

+###org/springframework/util/IdGenerator
@4.0.0.RELEASE
+#generateId()Ljava/util/UUID;

+###org/springframework/util/JdkIdGenerator
@4.1.5.RELEASE
+#<init>()V
+#generateId()Ljava/util/UUID;

+###org/springframework/util/AutoPopulatingList
@2.0
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/util/List;Ljava/lang/Class;)V
+#<init>(Lorg/springframework/util/AutoPopulatingList$ElementFactory;)V
+#<init>(Ljava/util/List;Lorg/springframework/util/AutoPopulatingList$ElementFactory;)V
+#add(ILjava/lang/Object;)V
+#add(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#addAll(ILjava/util/Collection;)Z
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#equals(Ljava/lang/Object;)Z
+#get(I)Ljava/lang/Object;
+#hashCode()I
+#indexOf(Ljava/lang/Object;)I
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
+#lastIndexOf(Ljava/lang/Object;)I
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#remove(I)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#size()I
+#subList(II)Ljava/util/List;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;

+###org/springframework/util/MimeTypeUtils
@4.0.0.RELEASE
+#<init>()V
+#parseMimeType(Ljava/lang/String;)Lorg/springframework/util/MimeType;
+#parseMimeTypes(Ljava/lang/String;)Ljava/util/List;
+#toString(Ljava/util/Collection;)Ljava/lang/String;
+#sortBySpecificity(Ljava/util/List;)V
@4.2.0.RELEASE
+#generateMultipartBoundary()[B
+#generateMultipartBoundaryString()Ljava/lang/String;
@5.1.3.RELEASE
+#tokenize(Ljava/lang/String;)Ljava/util/List;

+###org/springframework/util/ExceptionTypeFilter
@4.1.0.RELEASE
+#<init>(Ljava/util/Collection;Ljava/util/Collection;Z)V

+###org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager
@3.2.0.RELEASE
+#createReference(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
+#pollForPurge()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;

+###org/springframework/util/DefaultPropertiesPersister
@1.0
+#<init>()V
+#load(Ljava/util/Properties;Ljava/io/InputStream;)V
+#load(Ljava/util/Properties;Ljava/io/Reader;)V
+#store(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;)V
+#store(Ljava/util/Properties;Ljava/io/Writer;Ljava/lang/String;)V
@1.2.2
+#loadFromXml(Ljava/util/Properties;Ljava/io/InputStream;)V
+#storeToXml(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;)V
+#storeToXml(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/core/env/PropertyResolverExtensionsKt
@5.0.0.RELEASE
+#get(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;)Ljava/lang/String;
@5.2.0.RELEASE
+#getProperty(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;)Ljava/lang/Object;
+#getRequiredProperty(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/cglib/beans/BeanCopier$Generator
@3.2.0.RELEASE
+#<init>()V
+#setSource(Ljava/lang/Class;)V
+#setTarget(Ljava/lang/Class;)V
+#setUseConverter(Z)V
+#create()Lorg/springframework/cglib/beans/BeanCopier;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/beans/BeanCopier
@3.2.0.RELEASE
+#<init>()V
+#create(Ljava/lang/Class;Ljava/lang/Class;Z)Lorg/springframework/cglib/beans/BeanCopier;
+#copy(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/cglib/core/Converter;)V

+###org/springframework/cglib/beans/BeanGenerator
@3.2.0.RELEASE
+#<init>()V
+#setSuperclass(Ljava/lang/Class;)V
+#addProperty(Ljava/lang/String;Ljava/lang/Class;)V
+#create()Ljava/lang/Object;
+#createClass()Ljava/lang/Object;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V
+#addProperties(Lorg/springframework/cglib/beans/BeanGenerator;Ljava/util/Map;)V
+#addProperties(Lorg/springframework/cglib/beans/BeanGenerator;Ljava/lang/Class;)V
+#addProperties(Lorg/springframework/cglib/beans/BeanGenerator;[Ljava/beans/PropertyDescriptor;)V

+###org/springframework/cglib/beans/BeanMap$Generator
@3.2.0.RELEASE
+#<init>()V
+#setBean(Ljava/lang/Object;)V
+#setBeanClass(Ljava/lang/Class;)V
+#setRequire(I)V
+#create()Lorg/springframework/cglib/beans/BeanMap;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/beans/BeanMap
@3.2.0.RELEASE
+#create(Ljava/lang/Object;)Lorg/springframework/cglib/beans/BeanMap;
+#newInstance(Ljava/lang/Object;)Lorg/springframework/cglib/beans/BeanMap;
+#getPropertyType(Ljava/lang/String;)Ljava/lang/Class;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#setBean(Ljava/lang/Object;)V
+#getBean()Ljava/lang/Object;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#size()I
+#isEmpty()Z
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#toString()Ljava/lang/String;

+###org/springframework/cglib/beans/BulkBean$Generator
@3.2.0.RELEASE
+#<init>()V
+#setTarget(Ljava/lang/Class;)V
+#setGetters([Ljava/lang/String;)V
+#setSetters([Ljava/lang/String;)V
+#setTypes([Ljava/lang/Class;)V
+#create()Lorg/springframework/cglib/beans/BulkBean;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/beans/BulkBean
@3.2.0.RELEASE
+#getPropertyValues(Ljava/lang/Object;[Ljava/lang/Object;)V
+#setPropertyValues(Ljava/lang/Object;[Ljava/lang/Object;)V
+#getPropertyValues(Ljava/lang/Object;)[Ljava/lang/Object;
+#getPropertyTypes()[Ljava/lang/Class;
+#getGetters()[Ljava/lang/String;
+#getSetters()[Ljava/lang/String;
+#create(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Class;)Lorg/springframework/cglib/beans/BulkBean;

+###org/springframework/cglib/beans/BulkBeanException
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/Throwable;I)V
+#getIndex()I
+#getCause()Ljava/lang/Throwable;

+###org/springframework/cglib/beans/FixedKeySet
@3.2.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#iterator()Ljava/util/Iterator;
+#size()I

+###org/springframework/cglib/beans/ImmutableBean$Generator
@3.2.0.RELEASE
+#<init>()V
+#setBean(Ljava/lang/Object;)V
+#create()Ljava/lang/Object;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/beans/ImmutableBean
@3.2.0.RELEASE
+#create(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/core/Block
@3.2.0.RELEASE
+#<init>(Lorg/springframework/cglib/core/CodeEmitter;)V
+#getCodeEmitter()Lorg/springframework/cglib/core/CodeEmitter;
+#end()V
+#getStart()Lorg/springframework/asm/Label;
+#getEnd()Lorg/springframework/asm/Label;

+###org/springframework/cglib/core/ClassEmitter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/ClassVisitor;)V
+#<init>()V
+#setTarget(Lorg/springframework/asm/ClassVisitor;)V
+#getClassInfo()Lorg/springframework/cglib/core/ClassInfo;
+#begin_class(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V
+#getStaticHook()Lorg/springframework/cglib/core/CodeEmitter;
+#getAccess()I
+#getClassType()Lorg/springframework/asm/Type;
+#getSuperType()Lorg/springframework/asm/Type;
+#end_class()V
+#begin_method(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;
+#begin_static()Lorg/springframework/cglib/core/CodeEmitter;
+#declare_field(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitEnd()V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;

+###org/springframework/cglib/core/ClassGenerator
@3.2.0.RELEASE
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/core/ClassInfo
@3.2.0.RELEASE
+#getType()Lorg/springframework/asm/Type;
+#getSuperType()Lorg/springframework/asm/Type;
+#getInterfaces()[Lorg/springframework/asm/Type;
+#getModifiers()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/cglib/core/ClassNameReader
@3.2.0.RELEASE
+#getClassName(Lorg/springframework/asm/ClassReader;)Ljava/lang/String;
+#getClassInfo(Lorg/springframework/asm/ClassReader;)[Ljava/lang/String;

+###org/springframework/cglib/core/ClassesKey
@3.2.0.RELEASE
+#create([Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/core/CodeEmitter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/cglib/core/CodeEmitter;)V
+#isStaticHook()Z
+#getSignature()Lorg/springframework/cglib/core/Signature;
+#getReturnType()Lorg/springframework/asm/Type;
+#getMethodInfo()Lorg/springframework/cglib/core/MethodInfo;
+#getClassEmitter()Lorg/springframework/cglib/core/ClassEmitter;
+#end_method()V
+#begin_block()Lorg/springframework/cglib/core/Block;
+#catch_exception(Lorg/springframework/cglib/core/Block;Lorg/springframework/asm/Type;)V
+#goTo(Lorg/springframework/asm/Label;)V
+#ifnull(Lorg/springframework/asm/Label;)V
+#ifnonnull(Lorg/springframework/asm/Label;)V
+#if_jump(ILorg/springframework/asm/Label;)V
+#if_icmp(ILorg/springframework/asm/Label;)V
+#if_cmp(Lorg/springframework/asm/Type;ILorg/springframework/asm/Label;)V
+#pop()V
+#pop2()V
+#dup()V
+#dup2()V
+#dup_x1()V
+#dup_x2()V
+#dup2_x1()V
+#dup2_x2()V
+#swap()V
+#aconst_null()V
+#swap(Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V
+#monitorenter()V
+#monitorexit()V
+#math(ILorg/springframework/asm/Type;)V
+#array_load(Lorg/springframework/asm/Type;)V
+#array_store(Lorg/springframework/asm/Type;)V
+#cast_numeric(Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V
+#push(I)V
+#push(J)V
+#push(F)V
+#push(D)V
+#push(Ljava/lang/String;)V
+#newarray()V
+#newarray(Lorg/springframework/asm/Type;)V
+#arraylength()V
+#load_this()V
+#load_args()V
+#load_arg(I)V
+#load_args(II)V
+#iinc(Lorg/springframework/cglib/core/Local;I)V
+#store_local(Lorg/springframework/cglib/core/Local;)V
+#load_local(Lorg/springframework/cglib/core/Local;)V
+#return_value()V
+#getfield(Ljava/lang/String;)V
+#putfield(Ljava/lang/String;)V
+#super_getfield(Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#super_putfield(Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#super_getstatic(Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#super_putstatic(Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#getfield(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#putfield(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#getstatic(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#putstatic(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#super_invoke()V
+#super_invoke(Lorg/springframework/cglib/core/Signature;)V
+#invoke_constructor(Lorg/springframework/asm/Type;)V
+#super_invoke_constructor()V
+#invoke_constructor_this()V
+#invoke_interface(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V
+#invoke_virtual(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V
+#invoke_static(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V
+#invoke_virtual_this(Lorg/springframework/cglib/core/Signature;)V
+#invoke_static_this(Lorg/springframework/cglib/core/Signature;)V
+#invoke_constructor(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V
+#invoke_constructor_this(Lorg/springframework/cglib/core/Signature;)V
+#super_invoke_constructor(Lorg/springframework/cglib/core/Signature;)V
+#new_instance_this()V
+#new_instance(Lorg/springframework/asm/Type;)V
+#aaload(I)V
+#aaload()V
+#aastore()V
+#athrow()V
+#make_label()Lorg/springframework/asm/Label;
+#make_local()Lorg/springframework/cglib/core/Local;
+#make_local(Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/Local;
+#checkcast_this()V
+#checkcast(Lorg/springframework/asm/Type;)V
+#instance_of(Lorg/springframework/asm/Type;)V
+#instance_of_this()V
+#process_switch([ILorg/springframework/cglib/core/ProcessSwitchCallback;)V
+#process_switch([ILorg/springframework/cglib/core/ProcessSwitchCallback;Z)V
+#mark(Lorg/springframework/asm/Label;)V
+#push(Z)V
+#not()V
+#throw_exception(Lorg/springframework/asm/Type;Ljava/lang/String;)V
+#box(Lorg/springframework/asm/Type;)V
+#unbox(Lorg/springframework/asm/Type;)V
+#create_arg_array()V
+#zero_or_null(Lorg/springframework/asm/Type;)V
+#unbox_or_zero(Lorg/springframework/asm/Type;)V
+#visitMaxs(II)V
+#invoke(Lorg/springframework/cglib/core/MethodInfo;Lorg/springframework/asm/Type;)V
+#invoke(Lorg/springframework/cglib/core/MethodInfo;)V
@5.2.0.RELEASE
*#invoke_static(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V[deprecated]
+#invoke_static(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;Z)V

+###org/springframework/cglib/core/CodeGenerationException
@3.2.0.RELEASE
+#<init>(Ljava/lang/Throwable;)V
+#getCause()Ljava/lang/Throwable;

+###org/springframework/cglib/core/CollectionUtils
@3.2.0.RELEASE
+#bucket(Ljava/util/Collection;Lorg/springframework/cglib/core/Transformer;)Ljava/util/Map;
+#reverse(Ljava/util/Map;Ljava/util/Map;)V
+#filter(Ljava/util/Collection;Lorg/springframework/cglib/core/Predicate;)Ljava/util/Collection;
+#transform(Ljava/util/Collection;Lorg/springframework/cglib/core/Transformer;)Ljava/util/List;
+#getIndexMap(Ljava/util/List;)Ljava/util/Map;

+###org/springframework/cglib/core/Constants
@3.2.0.RELEASE

+###org/springframework/cglib/core/Converter
@3.2.0.RELEASE
+#convert(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/core/Customizer
@3.2.0.RELEASE
+#customize(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)V

+###org/springframework/cglib/core/DebuggingClassWriter
@3.2.0.RELEASE
+#<init>(I)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#getClassName()Ljava/lang/String;
+#getSuperName()Ljava/lang/String;
+#toByteArray()[B

+###org/springframework/cglib/core/DefaultGeneratorStrategy
@3.2.0.RELEASE
+#<init>()V
+#generate(Lorg/springframework/cglib/core/ClassGenerator;)[B

+###org/springframework/cglib/core/DefaultNamingPolicy
@3.2.0.RELEASE
+#<init>()V
+#getClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/cglib/core/Predicate;)Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/cglib/core/DuplicatesPredicate
@3.2.0.RELEASE
+#<init>()V
+#evaluate(Ljava/lang/Object;)Z
@5.1.0.RELEASE
+#<init>(Ljava/util/List;)V

+###org/springframework/cglib/core/EmitUtils$ArrayDelimiters
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/cglib/core/EmitUtils
@3.2.0.RELEASE
+#factory_method(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/Signature;)V
+#null_constructor(Lorg/springframework/cglib/core/ClassEmitter;)V
+#process_array(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/ProcessArrayCallback;)V
+#process_arrays(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/ProcessArrayCallback;)V
+#string_switch(Lorg/springframework/cglib/core/CodeEmitter;[Ljava/lang/String;ILorg/springframework/cglib/core/ObjectSwitchCallback;)V
+#load_class_this(Lorg/springframework/cglib/core/CodeEmitter;)V
+#load_class(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)V
+#push_array(Lorg/springframework/cglib/core/CodeEmitter;[Ljava/lang/Object;)V
+#push_object(Lorg/springframework/cglib/core/CodeEmitter;Ljava/lang/Object;)V
+#hash_code(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;ILorg/springframework/cglib/core/Customizer;)V
+#not_equals(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/asm/Label;Lorg/springframework/cglib/core/Customizer;)V
+#append_string(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;Lorg/springframework/cglib/core/Customizer;)V
+#load_method(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/MethodInfo;)V
+#method_switch(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;)V
+#constructor_switch(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;)V
+#wrap_throwable(Lorg/springframework/cglib/core/Block;Lorg/springframework/asm/Type;)V
+#add_properties(Lorg/springframework/cglib/core/ClassEmitter;[Ljava/lang/String;[Lorg/springframework/asm/Type;)V
+#add_property(Lorg/springframework/cglib/core/ClassEmitter;Ljava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/String;)V
+#wrap_undeclared_throwable(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/Block;[Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V
+#begin_method(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/MethodInfo;)Lorg/springframework/cglib/core/CodeEmitter;
+#begin_method(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/MethodInfo;I)Lorg/springframework/cglib/core/CodeEmitter;
@4.2.6.RELEASE
*#hash_code(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;ILorg/springframework/cglib/core/Customizer;)V[deprecated]
+#hash_code(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;ILorg/springframework/cglib/core/internal/CustomizerRegistry;)V
*#not_equals(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/asm/Label;Lorg/springframework/cglib/core/Customizer;)V[deprecated]
+#not_equals(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/asm/Label;Lorg/springframework/cglib/core/internal/CustomizerRegistry;)V
*#append_string(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;Lorg/springframework/cglib/core/Customizer;)V[deprecated]
+#append_string(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;Lorg/springframework/cglib/core/internal/CustomizerRegistry;)V

+###org/springframework/cglib/core/FieldTypeCustomizer
@4.2.6.RELEASE
+#customize(Lorg/springframework/cglib/core/CodeEmitter;ILorg/springframework/asm/Type;)V
+#getOutType(ILorg/springframework/asm/Type;)Lorg/springframework/asm/Type;

+###org/springframework/cglib/core/GeneratorStrategy
@3.2.0.RELEASE
+#generate(Lorg/springframework/cglib/core/ClassGenerator;)[B
+#equals(Ljava/lang/Object;)Z

+###org/springframework/cglib/core/HashCodeCustomizer
@4.2.6.RELEASE
+#customize(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)Z

+###org/springframework/cglib/core/KeyFactoryCustomizer
@4.2.6.RELEASE

+###org/springframework/cglib/core/Local
@3.2.0.RELEASE
+#<init>(ILorg/springframework/asm/Type;)V
+#getIndex()I
+#getType()Lorg/springframework/asm/Type;

+###org/springframework/cglib/core/LocalVariablesSorter
@3.2.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/asm/MethodVisitor;)V
+#<init>(Lorg/springframework/cglib/core/LocalVariablesSorter;)V
+#visitVarInsn(II)V
+#visitIincInsn(II)V
+#visitMaxs(II)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V

+###org/springframework/cglib/core/MethodInfo
@3.2.0.RELEASE
+#getClassInfo()Lorg/springframework/cglib/core/ClassInfo;
+#getModifiers()I
+#getSignature()Lorg/springframework/cglib/core/Signature;
+#getExceptionTypes()[Lorg/springframework/asm/Type;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/cglib/core/MethodInfoTransformer
@3.2.0.RELEASE
+#<init>()V
+#getInstance()Lorg/springframework/cglib/core/MethodInfoTransformer;
+#transform(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/core/MethodWrapper$MethodWrapperKey
@3.2.0.RELEASE
+#newInstance(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
@6.0.0
-###org/springframework/cglib/core/MethodWrapper$MethodWrapperKey

+###org/springframework/cglib/core/MethodWrapper
@3.2.0.RELEASE
+#create(Ljava/lang/reflect/Method;)Ljava/lang/Object;
+#createSet(Ljava/util/Collection;)Ljava/util/Set;

+###org/springframework/cglib/core/NamingPolicy
@3.2.0.RELEASE
+#getClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/cglib/core/Predicate;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z

+###org/springframework/cglib/core/ObjectSwitchCallback
@3.2.0.RELEASE
+#processCase(Ljava/lang/Object;Lorg/springframework/asm/Label;)V
+#processDefault()V

+###org/springframework/cglib/core/Predicate
@3.2.0.RELEASE
+#evaluate(Ljava/lang/Object;)Z

+###org/springframework/cglib/core/ProcessArrayCallback
@3.2.0.RELEASE
+#processElement(Lorg/springframework/asm/Type;)V

+###org/springframework/cglib/core/ProcessSwitchCallback
@3.2.0.RELEASE
+#processCase(ILorg/springframework/asm/Label;)V
+#processDefault()V

+###org/springframework/cglib/core/RejectModifierPredicate
@3.2.0.RELEASE
+#<init>(I)V
+#evaluate(Ljava/lang/Object;)Z

+###org/springframework/cglib/core/Signature
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;)V
+#getName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getReturnType()Lorg/springframework/asm/Type;
+#getArgumentTypes()[Lorg/springframework/asm/Type;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/cglib/core/TinyBitSet
@3.2.0.RELEASE
+#<init>()V
+#length()I
+#cardinality()I
+#get(I)Z
+#set(I)V
+#clear(I)V

+###org/springframework/cglib/core/Transformer
@3.2.0.RELEASE
+#transform(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/core/TypeUtils
@3.2.0.RELEASE
+#getType(Ljava/lang/String;)Lorg/springframework/asm/Type;
+#isFinal(I)Z
+#isStatic(I)Z
+#isProtected(I)Z
+#isPublic(I)Z
+#isAbstract(I)Z
+#isInterface(I)Z
+#isPrivate(I)Z
+#isSynthetic(I)Z
+#isBridge(I)Z
+#getPackageName(Lorg/springframework/asm/Type;)Ljava/lang/String;
+#getPackageName(Ljava/lang/String;)Ljava/lang/String;
+#upperFirst(Ljava/lang/String;)Ljava/lang/String;
+#getClassName(Lorg/springframework/asm/Type;)Ljava/lang/String;
+#add([Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)[Lorg/springframework/asm/Type;
+#add([Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;)[Lorg/springframework/asm/Type;
+#fromInternalName(Ljava/lang/String;)Lorg/springframework/asm/Type;
+#fromInternalNames([Ljava/lang/String;)[Lorg/springframework/asm/Type;
+#getStackSize([Lorg/springframework/asm/Type;)I
+#toInternalNames([Lorg/springframework/asm/Type;)[Ljava/lang/String;
+#parseSignature(Ljava/lang/String;)Lorg/springframework/cglib/core/Signature;
+#parseType(Ljava/lang/String;)Lorg/springframework/asm/Type;
+#parseTypes(Ljava/lang/String;)[Lorg/springframework/asm/Type;
+#parseConstructor([Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/Signature;
+#parseConstructor(Ljava/lang/String;)Lorg/springframework/cglib/core/Signature;
+#getBoxedType(Lorg/springframework/asm/Type;)Lorg/springframework/asm/Type;
+#getUnboxedType(Lorg/springframework/asm/Type;)Lorg/springframework/asm/Type;
+#isArray(Lorg/springframework/asm/Type;)Z
+#getComponentType(Lorg/springframework/asm/Type;)Lorg/springframework/asm/Type;
+#isPrimitive(Lorg/springframework/asm/Type;)Z
+#emulateClassGetName(Lorg/springframework/asm/Type;)Ljava/lang/String;
+#isConstructor(Lorg/springframework/cglib/core/MethodInfo;)Z
+#getTypes([Ljava/lang/Class;)[Lorg/springframework/asm/Type;
+#ICONST(I)I
+#LCONST(J)I
+#FCONST(F)I
+#DCONST(D)I
+#NEWARRAY(Lorg/springframework/asm/Type;)I
+#escapeType(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/cglib/core/VisibilityPredicate
@3.2.0.RELEASE
+#<init>(Ljava/lang/Class;Z)V
+#evaluate(Ljava/lang/Object;)Z

+###org/springframework/cglib/core/WeakCacheKey
@4.2.6.RELEASE
+#<init>(Ljava/lang/Object;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/cglib/core/internal/CustomizerRegistry
@4.2.6.RELEASE
+#<init>([Ljava/lang/Class;)V
+#add(Lorg/springframework/cglib/core/KeyFactoryCustomizer;)V
+#get(Ljava/lang/Class;)Ljava/util/List;
+#singleton(Lorg/springframework/cglib/core/Customizer;)Lorg/springframework/cglib/core/internal/CustomizerRegistry;[deprecated]

+###org/springframework/cglib/core/internal/Function
@4.2.6.RELEASE
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/core/internal/LoadingCache
@4.2.6.RELEASE
+#<init>(Lorg/springframework/cglib/core/internal/Function;Lorg/springframework/cglib/core/internal/Function;)V
+#identity()Lorg/springframework/cglib/core/internal/Function;
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/proxy/Callback
@3.2.0.RELEASE

+###org/springframework/cglib/proxy/CallbackFilter
@3.2.0.RELEASE
+#accept(Ljava/lang/reflect/Method;)I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/cglib/proxy/CallbackGenerator$Context
@3.2.0.RELEASE
+#getClassLoader()Ljava/lang/ClassLoader;
+#beginMethod(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/MethodInfo;)Lorg/springframework/cglib/core/CodeEmitter;
+#getOriginalModifiers(Lorg/springframework/cglib/core/MethodInfo;)I
+#getIndex(Lorg/springframework/cglib/core/MethodInfo;)I
+#emitCallback(Lorg/springframework/cglib/core/CodeEmitter;I)V
+#getImplSignature(Lorg/springframework/cglib/core/MethodInfo;)Lorg/springframework/cglib/core/Signature;
+#emitInvoke(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/MethodInfo;)V
@4.3.8.RELEASE
+#emitLoadArgsAndInvoke(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/MethodInfo;)V
-#emitInvoke(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/MethodInfo;)V

+###org/springframework/cglib/proxy/CallbackHelper
@3.2.0.RELEASE
+#<init>(Ljava/lang/Class;[Ljava/lang/Class;)V
+#getCallbacks()[Lorg/springframework/cglib/proxy/Callback;
+#getCallbackTypes()[Ljava/lang/Class;
+#accept(Ljava/lang/reflect/Method;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/cglib/proxy/Dispatcher
@3.2.0.RELEASE
+#loadObject()Ljava/lang/Object;

+###org/springframework/cglib/proxy/Factory
@3.2.0.RELEASE
+#newInstance(Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;
+#newInstance([Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;
+#newInstance([Ljava/lang/Class;[Ljava/lang/Object;[Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;
+#getCallback(I)Lorg/springframework/cglib/proxy/Callback;
+#setCallback(ILorg/springframework/cglib/proxy/Callback;)V
+#setCallbacks([Lorg/springframework/cglib/proxy/Callback;)V
+#getCallbacks()[Lorg/springframework/cglib/proxy/Callback;

+###org/springframework/cglib/proxy/FixedValue
@3.2.0.RELEASE
+#loadObject()Ljava/lang/Object;

+###org/springframework/cglib/proxy/InterfaceMaker
@3.2.0.RELEASE
+#<init>()V
+#add(Lorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)V
+#add(Ljava/lang/reflect/Method;)V
+#add(Ljava/lang/Class;)V
+#create()Ljava/lang/Class;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/proxy/InvocationHandler
@3.2.0.RELEASE
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/proxy/LazyLoader
@3.2.0.RELEASE
+#loadObject()Ljava/lang/Object;

+###org/springframework/cglib/proxy/MethodInterceptor
@3.2.0.RELEASE
+#intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/springframework/cglib/proxy/MethodProxy;)Ljava/lang/Object;

+###org/springframework/cglib/proxy/Mixin$Generator
@3.2.0.RELEASE
+#<init>()V
+#setStyle(I)V
+#setClasses([Ljava/lang/Class;)V
+#setDelegates([Ljava/lang/Object;)V
+#create()Lorg/springframework/cglib/proxy/Mixin;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/proxy/Mixin
@3.2.0.RELEASE
+#<init>()V
+#newInstance([Ljava/lang/Object;)Lorg/springframework/cglib/proxy/Mixin;
+#create([Ljava/lang/Object;)Lorg/springframework/cglib/proxy/Mixin;
+#create([Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/cglib/proxy/Mixin;
+#createBean([Ljava/lang/Object;)Lorg/springframework/cglib/proxy/Mixin;
+#createBean(Ljava/lang/ClassLoader;[Ljava/lang/Object;)Lorg/springframework/cglib/proxy/Mixin;
+#getClasses([Ljava/lang/Object;)[Ljava/lang/Class;

+###org/springframework/cglib/proxy/NoOp
@3.2.0.RELEASE

+###org/springframework/cglib/proxy/Proxy
@3.2.0.RELEASE
+#getInvocationHandler(Ljava/lang/Object;)Lorg/springframework/cglib/proxy/InvocationHandler;
+#getProxyClass(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;
+#isProxyClass(Ljava/lang/Class;)Z
+#newProxyInstance(Ljava/lang/ClassLoader;[Ljava/lang/Class;Lorg/springframework/cglib/proxy/InvocationHandler;)Ljava/lang/Object;

+###org/springframework/cglib/proxy/ProxyRefDispatcher
@3.2.0.RELEASE
+#loadObject(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/proxy/UndeclaredThrowableException
@3.2.0.RELEASE
+#<init>(Ljava/lang/Throwable;)V
+#getUndeclaredThrowable()Ljava/lang/Throwable;

+###org/springframework/cglib/reflect/ConstructorDelegate$Generator
@3.2.0.RELEASE
+#<init>()V
+#setInterface(Ljava/lang/Class;)V
+#setTargetClass(Ljava/lang/Class;)V
+#create()Lorg/springframework/cglib/reflect/ConstructorDelegate;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/reflect/ConstructorDelegate
@3.2.0.RELEASE
+#create(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/cglib/reflect/ConstructorDelegate;

+###org/springframework/cglib/reflect/FastClass$Generator
@3.2.0.RELEASE
+#<init>()V
+#setType(Ljava/lang/Class;)V
+#create()Lorg/springframework/cglib/reflect/FastClass;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/reflect/FastClass
@3.2.0.RELEASE
+#create(Ljava/lang/Class;)Lorg/springframework/cglib/reflect/FastClass;
+#create(Ljava/lang/ClassLoader;Ljava/lang/Class;)Lorg/springframework/cglib/reflect/FastClass;
+#invoke(Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance()Ljava/lang/Object;
+#newInstance([Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#getMethod(Ljava/lang/reflect/Method;)Lorg/springframework/cglib/reflect/FastMethod;
+#getConstructor(Ljava/lang/reflect/Constructor;)Lorg/springframework/cglib/reflect/FastConstructor;
+#getMethod(Ljava/lang/String;[Ljava/lang/Class;)Lorg/springframework/cglib/reflect/FastMethod;
+#getConstructor([Ljava/lang/Class;)Lorg/springframework/cglib/reflect/FastConstructor;
+#getName()Ljava/lang/String;
+#getJavaClass()Ljava/lang/Class;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getIndex(Ljava/lang/String;[Ljava/lang/Class;)I
+#getIndex([Ljava/lang/Class;)I
+#invoke(ILjava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance(I[Ljava/lang/Object;)Ljava/lang/Object;
+#getIndex(Lorg/springframework/cglib/core/Signature;)I
+#getMaxIndex()I

+###org/springframework/cglib/reflect/FastConstructor
@3.2.0.RELEASE
+#getParameterTypes()[Ljava/lang/Class;
+#getExceptionTypes()[Ljava/lang/Class;
+#newInstance()Ljava/lang/Object;
+#newInstance([Ljava/lang/Object;)Ljava/lang/Object;
+#getJavaConstructor()Ljava/lang/reflect/Constructor;

+###org/springframework/cglib/reflect/FastMember
@3.2.0.RELEASE
+#getParameterTypes()[Ljava/lang/Class;
+#getExceptionTypes()[Ljava/lang/Class;
+#getIndex()I
+#getName()Ljava/lang/String;
+#getDeclaringClass()Ljava/lang/Class;
+#getModifiers()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/cglib/reflect/FastMethod
@3.2.0.RELEASE
+#getReturnType()Ljava/lang/Class;
+#getParameterTypes()[Ljava/lang/Class;
+#getExceptionTypes()[Ljava/lang/Class;
+#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#getJavaMethod()Ljava/lang/reflect/Method;

+###org/springframework/cglib/reflect/MethodDelegate$Generator
@3.2.0.RELEASE
+#<init>()V
+#setTarget(Ljava/lang/Object;)V
+#setTargetClass(Ljava/lang/Class;)V
+#setMethodName(Ljava/lang/String;)V
+#setInterface(Ljava/lang/Class;)V
+#create()Lorg/springframework/cglib/reflect/MethodDelegate;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/reflect/MethodDelegate
@3.2.0.RELEASE
+#<init>()V
+#createStatic(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/cglib/reflect/MethodDelegate;
+#create(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/cglib/reflect/MethodDelegate;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getTarget()Ljava/lang/Object;
+#newInstance(Ljava/lang/Object;)Lorg/springframework/cglib/reflect/MethodDelegate;

+###org/springframework/cglib/reflect/MulticastDelegate$Generator
@3.2.0.RELEASE
+#<init>()V
+#setInterface(Ljava/lang/Class;)V
+#create()Lorg/springframework/cglib/reflect/MulticastDelegate;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/reflect/MulticastDelegate
@3.2.0.RELEASE
+#getTargets()Ljava/util/List;
+#add(Ljava/lang/Object;)Lorg/springframework/cglib/reflect/MulticastDelegate;
+#remove(Ljava/lang/Object;)Lorg/springframework/cglib/reflect/MulticastDelegate;
+#newInstance()Lorg/springframework/cglib/reflect/MulticastDelegate;
+#create(Ljava/lang/Class;)Lorg/springframework/cglib/reflect/MulticastDelegate;

+###org/springframework/cglib/transform/AbstractClassFilterTransformer
@3.2.0.RELEASE
+#setTarget(Lorg/springframework/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#visitEnd()V

+###org/springframework/cglib/transform/AbstractClassLoader
@3.2.0.RELEASE
+#loadClass(Ljava/lang/String;)Ljava/lang/Class;

+###org/springframework/cglib/transform/AbstractClassTransformer
@3.2.0.RELEASE
+#setTarget(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/transform/AbstractProcessTask
@3.2.0.RELEASE
+#<init>()V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#execute()V
@6.0.0
-###org/springframework/cglib/transform/AbstractProcessTask

+###org/springframework/cglib/transform/AbstractTransformTask
@3.2.0.RELEASE
+#<init>()V
+#setVerbose(Z)V
@6.0.0
-###org/springframework/cglib/transform/AbstractTransformTask

+###org/springframework/cglib/transform/AnnotationVisitorTee
@3.2.0.RELEASE
+#getInstance(Lorg/springframework/asm/AnnotationVisitor;Lorg/springframework/asm/AnnotationVisitor;)Lorg/springframework/asm/AnnotationVisitor;
+#<init>(Lorg/springframework/asm/AnnotationVisitor;Lorg/springframework/asm/AnnotationVisitor;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;
+#visitEnd()V

+###org/springframework/cglib/transform/ClassEmitterTransformer
@3.2.0.RELEASE
+#<init>()V

+###org/springframework/cglib/transform/ClassFilter
@3.2.0.RELEASE
+#accept(Ljava/lang/String;)Z

+###org/springframework/cglib/transform/ClassFilterTransformer
@3.2.0.RELEASE
+#<init>(Lorg/springframework/cglib/transform/ClassFilter;Lorg/springframework/cglib/transform/ClassTransformer;)V
@6.0.0
+#<init>(Lorg/springframework/cglib/transform/ClassFilter;Lorg/springframework/cglib/core/ClassTransformer;)V
-#<init>(Lorg/springframework/cglib/transform/ClassFilter;Lorg/springframework/cglib/transform/ClassTransformer;)V

+###org/springframework/cglib/transform/ClassReaderGenerator
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/ClassReader;I)V
+#<init>(Lorg/springframework/asm/ClassReader;[Lorg/springframework/asm/Attribute;I)V
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/transform/ClassTransformer
@3.2.0.RELEASE
+#<init>()V
+#<init>(I)V
+#setTarget(Lorg/springframework/asm/ClassVisitor;)V
@6.0.0
-###org/springframework/cglib/transform/ClassTransformer

+###org/springframework/cglib/transform/ClassTransformerChain
@3.2.0.RELEASE
+#<init>([Lorg/springframework/cglib/transform/ClassTransformer;)V
+#setTarget(Lorg/springframework/asm/ClassVisitor;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#toString()Ljava/lang/String;
@6.0.0
+#<init>([Lorg/springframework/cglib/core/ClassTransformer;)V
-#<init>([Lorg/springframework/cglib/transform/ClassTransformer;)V

+###org/springframework/cglib/transform/ClassTransformerFactory
@3.2.0.RELEASE
+#newInstance()Lorg/springframework/cglib/transform/ClassTransformer;
@6.0.0
+#newInstance()Lorg/springframework/cglib/core/ClassTransformer;
-#newInstance()Lorg/springframework/cglib/transform/ClassTransformer;

+###org/springframework/cglib/transform/ClassTransformerTee
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/ClassVisitor;)V
+#setTarget(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/transform/ClassVisitorTee
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/ClassVisitor;Lorg/springframework/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitEnd()V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
@4.2.3.RELEASE
+#visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;

+###org/springframework/cglib/transform/FieldVisitorTee
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/FieldVisitor;Lorg/springframework/asm/FieldVisitor;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitEnd()V
@4.2.3.RELEASE
+#visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;

+###org/springframework/cglib/transform/MethodFilter
@3.2.0.RELEASE
+#accept(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Z

+###org/springframework/cglib/transform/MethodFilterTransformer
@3.2.0.RELEASE
+#<init>(Lorg/springframework/cglib/transform/MethodFilter;Lorg/springframework/cglib/transform/ClassTransformer;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#setTarget(Lorg/springframework/asm/ClassVisitor;)V
@6.0.0
+#<init>(Lorg/springframework/cglib/transform/MethodFilter;Lorg/springframework/cglib/core/ClassTransformer;)V
-#<init>(Lorg/springframework/cglib/transform/MethodFilter;Lorg/springframework/cglib/transform/ClassTransformer;)V

+###org/springframework/cglib/transform/MethodVisitorTee
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/asm/MethodVisitor;)V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitAnnotationDefault()Lorg/springframework/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitCode()V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILorg/springframework/asm/Label;)V
+#visitLabel(Lorg/springframework/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/lang/String;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V
+#visitLineNumber(ILorg/springframework/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@4.2.3.RELEASE
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitParameter(Ljava/lang/String;I)V
+#visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V
+#visitInsnAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitTryCatchAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitLocalVariableAnnotation(ILorg/springframework/asm/TypePath;[Lorg/springframework/asm/Label;[Lorg/springframework/asm/Label;[ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;

+###org/springframework/cglib/transform/TransformingClassGenerator
@3.2.0.RELEASE
+#<init>(Lorg/springframework/cglib/core/ClassGenerator;Lorg/springframework/cglib/transform/ClassTransformer;)V
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V
@6.0.0
+#<init>(Lorg/springframework/cglib/core/ClassGenerator;Lorg/springframework/cglib/core/ClassTransformer;)V
-#<init>(Lorg/springframework/cglib/core/ClassGenerator;Lorg/springframework/cglib/transform/ClassTransformer;)V

+###org/springframework/cglib/transform/TransformingClassLoader
@3.2.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;Lorg/springframework/cglib/transform/ClassFilter;Lorg/springframework/cglib/transform/ClassTransformerFactory;)V

+###org/springframework/cglib/transform/impl/AbstractInterceptFieldCallback
@3.2.0.RELEASE
+#<init>()V
+#writeInt(Ljava/lang/Object;Ljava/lang/String;II)I
+#writeChar(Ljava/lang/Object;Ljava/lang/String;CC)C
+#writeByte(Ljava/lang/Object;Ljava/lang/String;BB)B
+#writeBoolean(Ljava/lang/Object;Ljava/lang/String;ZZ)Z
+#writeShort(Ljava/lang/Object;Ljava/lang/String;SS)S
+#writeFloat(Ljava/lang/Object;Ljava/lang/String;FF)F
+#writeDouble(Ljava/lang/Object;Ljava/lang/String;DD)D
+#writeLong(Ljava/lang/Object;Ljava/lang/String;JJ)J
+#writeObject(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#readInt(Ljava/lang/Object;Ljava/lang/String;I)I
+#readChar(Ljava/lang/Object;Ljava/lang/String;C)C
+#readByte(Ljava/lang/Object;Ljava/lang/String;B)B
+#readBoolean(Ljava/lang/Object;Ljava/lang/String;Z)Z
+#readShort(Ljava/lang/Object;Ljava/lang/String;S)S
+#readFloat(Ljava/lang/Object;Ljava/lang/String;F)F
+#readDouble(Ljava/lang/Object;Ljava/lang/String;D)D
+#readLong(Ljava/lang/Object;Ljava/lang/String;J)J
+#readObject(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/transform/impl/AccessFieldTransformer$Callback
@3.2.0.RELEASE
+#getPropertyName(Lorg/springframework/asm/Type;Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/cglib/transform/impl/AccessFieldTransformer
@3.2.0.RELEASE
+#<init>(Lorg/springframework/cglib/transform/impl/AccessFieldTransformer$Callback;)V
+#declare_field(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V

+###org/springframework/cglib/transform/impl/AddDelegateTransformer
@3.2.0.RELEASE
+#<init>([Ljava/lang/Class;Ljava/lang/Class;)V
+#begin_class(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V
+#begin_method(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;

+###org/springframework/cglib/transform/impl/AddInitTransformer
@3.2.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;)V
+#begin_method(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;

+###org/springframework/cglib/transform/impl/AddPropertyTransformer
@3.2.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#<init>([Ljava/lang/String;[Lorg/springframework/asm/Type;)V
+#end_class()V

+###org/springframework/cglib/transform/impl/AddStaticInitTransformer
@3.2.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;)V

+###org/springframework/cglib/transform/impl/FieldProvider
@3.2.0.RELEASE
+#getFieldNames()[Ljava/lang/String;
+#getFieldTypes()[Ljava/lang/Class;
+#setField(ILjava/lang/Object;)V
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/String;Ljava/lang/Object;)V
+#getField(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/cglib/transform/impl/FieldProviderTransformer
@3.2.0.RELEASE
+#<init>()V
+#begin_class(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V
+#declare_field(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V
+#end_class()V

+###org/springframework/cglib/transform/impl/InterceptFieldCallback
@3.2.0.RELEASE
+#writeInt(Ljava/lang/Object;Ljava/lang/String;II)I
+#writeChar(Ljava/lang/Object;Ljava/lang/String;CC)C
+#writeByte(Ljava/lang/Object;Ljava/lang/String;BB)B
+#writeBoolean(Ljava/lang/Object;Ljava/lang/String;ZZ)Z
+#writeShort(Ljava/lang/Object;Ljava/lang/String;SS)S
+#writeFloat(Ljava/lang/Object;Ljava/lang/String;FF)F
+#writeDouble(Ljava/lang/Object;Ljava/lang/String;DD)D
+#writeLong(Ljava/lang/Object;Ljava/lang/String;JJ)J
+#writeObject(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#readInt(Ljava/lang/Object;Ljava/lang/String;I)I
+#readChar(Ljava/lang/Object;Ljava/lang/String;C)C
+#readByte(Ljava/lang/Object;Ljava/lang/String;B)B
+#readBoolean(Ljava/lang/Object;Ljava/lang/String;Z)Z
+#readShort(Ljava/lang/Object;Ljava/lang/String;S)S
+#readFloat(Ljava/lang/Object;Ljava/lang/String;F)F
+#readDouble(Ljava/lang/Object;Ljava/lang/String;D)D
+#readLong(Ljava/lang/Object;Ljava/lang/String;J)J
+#readObject(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/cglib/transform/impl/InterceptFieldEnabled
@3.2.0.RELEASE
+#setInterceptFieldCallback(Lorg/springframework/cglib/transform/impl/InterceptFieldCallback;)V
+#getInterceptFieldCallback()Lorg/springframework/cglib/transform/impl/InterceptFieldCallback;

+###org/springframework/cglib/transform/impl/InterceptFieldFilter
@3.2.0.RELEASE
+#acceptRead(Lorg/springframework/asm/Type;Ljava/lang/String;)Z
+#acceptWrite(Lorg/springframework/asm/Type;Ljava/lang/String;)Z

+###org/springframework/cglib/transform/impl/InterceptFieldTransformer
@3.2.0.RELEASE
+#<init>(Lorg/springframework/cglib/transform/impl/InterceptFieldFilter;)V
+#begin_class(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V
+#declare_field(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V
+#begin_method(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;

+###org/springframework/cglib/transform/impl/UndeclaredThrowableStrategy
@3.2.0.RELEASE
+#<init>(Ljava/lang/Class;)V

+###org/springframework/cglib/transform/impl/UndeclaredThrowableTransformer
@3.2.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#begin_method(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;

+###org/springframework/cglib/util/ParallelSorter$Generator
@3.2.0.RELEASE
+#<init>()V
+#setArrays([Ljava/lang/Object;)V
+#create()Lorg/springframework/cglib/util/ParallelSorter;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/util/ParallelSorter
@3.2.0.RELEASE
+#newInstance([Ljava/lang/Object;)Lorg/springframework/cglib/util/ParallelSorter;
+#create([Ljava/lang/Object;)Lorg/springframework/cglib/util/ParallelSorter;
+#quickSort(I)V
+#quickSort(III)V
+#quickSort(ILjava/util/Comparator;)V
+#quickSort(IIILjava/util/Comparator;)V
+#mergeSort(I)V
+#mergeSort(III)V
+#mergeSort(ILjava/util/Comparator;)V
+#mergeSort(IIILjava/util/Comparator;)V

+###org/springframework/cglib/util/StringSwitcher$Generator
@3.2.0.RELEASE
+#<init>()V
+#setStrings([Ljava/lang/String;)V
+#setInts([I)V
+#setFixedInput(Z)V
+#create()Lorg/springframework/cglib/util/StringSwitcher;
+#generateClass(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/cglib/util/StringSwitcher
@3.2.0.RELEASE
+#create([Ljava/lang/String;[IZ)Lorg/springframework/cglib/util/StringSwitcher;
+#intValue(Ljava/lang/String;)I

+###org/springframework/objenesis/Objenesis
@4.0.0.RELEASE
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#getInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;

+###org/springframework/objenesis/ObjenesisBase
@4.0.0.RELEASE
+#<init>(Lorg/springframework/objenesis/strategy/InstantiatorStrategy;)V
+#<init>(Lorg/springframework/objenesis/strategy/InstantiatorStrategy;Z)V
+#toString()Ljava/lang/String;
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#getInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;

+###org/springframework/objenesis/ObjenesisException
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/objenesis/ObjenesisHelper
@4.0.0.RELEASE
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#newSerializableInstance(Ljava/lang/Class;)Ljava/io/Serializable;
+#getInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;
+#getSerializableObjectInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;

+###org/springframework/objenesis/ObjenesisSerializer
@4.0.0.RELEASE
+#<init>()V
+#<init>(Z)V

+###org/springframework/objenesis/ObjenesisStd
@4.0.0.RELEASE
+#<init>()V
+#<init>(Z)V

+###org/springframework/objenesis/instantiator/ObjectInstantiator
@4.0.0.RELEASE
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/SerializationInstantiatorHelper
@4.0.0.RELEASE
+#<init>()V
+#getNonSerializableSuperClass(Ljava/lang/Class;)Ljava/lang/Class;

+###org/springframework/objenesis/instantiator/android/Android10Instantiator
@4.0.1.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/android/Android17Instantiator
@4.0.1.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/android/Android18Instantiator
@4.0.1.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/android/AndroidSerializationInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/annotations/Instantiator
@4.3.6.RELEASE
+#value()Lorg/springframework/objenesis/instantiator/annotations/Typology;

+###org/springframework/objenesis/instantiator/annotations/Typology
@4.3.6.RELEASE
+#values()[Lorg/springframework/objenesis/instantiator/annotations/Typology;
+#valueOf(Ljava/lang/String;)Lorg/springframework/objenesis/instantiator/annotations/Typology;

+###org/springframework/objenesis/instantiator/basic/AccessibleInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V

+###org/springframework/objenesis/instantiator/basic/ConstructorInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/basic/FailingInstantiator
@4.0.1.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/basic/NewInstanceInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/basic/NullInstantiator
@4.0.0.RELEASE
+#<init>()V
+#newInstance()Ljava/lang/Object;
@4.0.1.RELEASE
+#<init>(Ljava/lang/Class;)V
-#<init>()V

+###org/springframework/objenesis/instantiator/basic/ObjectInputStreamInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/basic/ObjectStreamClassInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/basic/ProxyingInstantiator
@4.2.1.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;
@5.3.6
-#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/gcj/GCJInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/gcj/GCJInstantiatorBase
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/gcj/GCJSerializationInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/perc/PercInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/perc/PercSerializationInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/sun/MagicInstantiator
@4.2.1.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;
@4.3.6.RELEASE
+#getInstantiator()Lorg/springframework/objenesis/instantiator/ObjectInstantiator;
@5.3.6
-#getInstantiator()Lorg/springframework/objenesis/instantiator/ObjectInstantiator;
-#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/sun/SunReflectionFactoryInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/sun/SunReflectionFactorySerializationInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/sun/UnsafeFactoryInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/util/ClassDefinitionUtils
@4.3.10.RELEASE
+#defineClass(Ljava/lang/String;[BLjava/lang/ClassLoader;)Ljava/lang/Class;
+#readClass(Ljava/lang/String;)[B
+#writeClass(Ljava/lang/String;[B)V
+#classNameToInternalClassName(Ljava/lang/String;)Ljava/lang/String;
+#classNameToResource(Ljava/lang/String;)Ljava/lang/String;
+#getExistingClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
@5.1.1.RELEASE
+#defineClass(Ljava/lang/String;[BLjava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
-#defineClass(Ljava/lang/String;[BLjava/lang/ClassLoader;)Ljava/lang/Class;
-#classNameToInternalClassName(Ljava/lang/String;)Ljava/lang/String;
-#classNameToResource(Ljava/lang/String;)Ljava/lang/String;
-#getExistingClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
@5.3.6
-###org/springframework/objenesis/instantiator/util/ClassDefinitionUtils

+###org/springframework/objenesis/instantiator/util/ClassUtils
@5.1.1.RELEASE
+#classNameToInternalClassName(Ljava/lang/String;)Ljava/lang/String;
+#classNameToResource(Ljava/lang/String;)Ljava/lang/String;
+#getExistingClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/util/DefineClassHelper
@5.1.1.RELEASE
+#defineClass(Ljava/lang/String;[BIILjava/lang/Class;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;
@5.3.6
-###org/springframework/objenesis/instantiator/util/DefineClassHelper

+###org/springframework/objenesis/instantiator/util/UnsafeUtils
@4.3.10.RELEASE
+#getUnsafe()Lsun/misc/Unsafe;

+###org/springframework/objenesis/strategy/BaseInstantiatorStrategy
@4.0.0.RELEASE
+#<init>()V

+###org/springframework/objenesis/strategy/InstantiatorStrategy
@4.0.0.RELEASE
+#newInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;

+###org/springframework/objenesis/strategy/PlatformDescription
@4.0.0.RELEASE
+#isThisJVM(Ljava/lang/String;)Z
@4.2.1.RELEASE
+#describePlatform()Ljava/lang/String;
+#isGoogleAppEngine()Z
@4.3.0.RELEASE
+#isAndroidOpenJDK()Z
@5.1.1.RELEASE
+#isAfterJigsaw()Z
+#isAfterJava11()Z

+###org/springframework/objenesis/strategy/SerializingInstantiatorStrategy
@4.0.0.RELEASE
+#<init>()V
+#newInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;

+###org/springframework/objenesis/strategy/SingleInstantiatorStrategy
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;

+###org/springframework/objenesis/strategy/StdInstantiatorStrategy
@4.0.0.RELEASE
+#<init>()V
+#newInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;

+###org/springframework/core/ConstantException
@1.0-rc1
+#<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V
@1.1-rc1
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
-#<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V
@5.0.0.RELEASE
-###org/springframework/core/ConstantException

+###org/springframework/core/ControlFlow
@1.0-rc1
+#under(Ljava/lang/Class;)Z
+#under(Ljava/lang/Class;Ljava/lang/String;)Z
+#underToken(Ljava/lang/String;)Z
@5.0.0.RELEASE
-###org/springframework/core/ControlFlow

+###org/springframework/core/ControlFlowFactory
@1.0-rc1
+#<init>()V
+#createControlFlow()Lorg/springframework/core/ControlFlow;
@5.0.0.RELEASE
-###org/springframework/core/ControlFlowFactory

+###org/springframework/core/ErrorCoded
@1.0-rc1
+#getErrorCode()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/core/ErrorCoded

+###org/springframework/core/GenericCollectionTypeResolver
@2.0-m5
+#<init>()V
+#getCollectionParameterType(Lorg/springframework/core/MethodParameter;)Ljava/lang/Class;
+#getMapKeyParameterType(Lorg/springframework/core/MethodParameter;)Ljava/lang/Class;
+#getMapValueParameterType(Lorg/springframework/core/MethodParameter;)Ljava/lang/Class;
+#getCollectionReturnType(Ljava/lang/reflect/Method;)Ljava/lang/Class;
+#getMapKeyReturnType(Ljava/lang/reflect/Method;)Ljava/lang/Class;
+#getMapValueReturnType(Ljava/lang/reflect/Method;)Ljava/lang/Class;
@2.0
+#getCollectionReturnType(Ljava/lang/reflect/Method;I)Ljava/lang/Class;
+#getMapKeyReturnType(Ljava/lang/reflect/Method;I)Ljava/lang/Class;
+#getMapValueReturnType(Ljava/lang/reflect/Method;I)Ljava/lang/Class;
@2.0.3
+#getCollectionType(Ljava/lang/Class;)Ljava/lang/Class;
+#getMapKeyType(Ljava/lang/Class;)Ljava/lang/Class;
+#getMapValueType(Ljava/lang/Class;)Ljava/lang/Class;
@2.5
+#getCollectionFieldType(Ljava/lang/reflect/Field;)Ljava/lang/Class;
+#getCollectionFieldType(Ljava/lang/reflect/Field;I)Ljava/lang/Class;
+#getMapKeyFieldType(Ljava/lang/reflect/Field;)Ljava/lang/Class;
+#getMapKeyFieldType(Ljava/lang/reflect/Field;I)Ljava/lang/Class;
+#getMapValueFieldType(Ljava/lang/reflect/Field;)Ljava/lang/Class;
+#getMapValueFieldType(Ljava/lang/reflect/Field;I)Ljava/lang/Class;
@3.1.0.RELEASE
+#getCollectionFieldType(Ljava/lang/reflect/Field;ILjava/util/Map;)Ljava/lang/Class;
+#getMapKeyFieldType(Ljava/lang/reflect/Field;ILjava/util/Map;)Ljava/lang/Class;
+#getMapValueFieldType(Ljava/lang/reflect/Field;ILjava/util/Map;)Ljava/lang/Class;
@4.0.0.RELEASE
*#getCollectionFieldType(Ljava/lang/reflect/Field;ILjava/util/Map;)Ljava/lang/Class;[deprecated]
*#getMapKeyFieldType(Ljava/lang/reflect/Field;ILjava/util/Map;)Ljava/lang/Class;[deprecated]
*#getMapValueFieldType(Ljava/lang/reflect/Field;ILjava/util/Map;)Ljava/lang/Class;[deprecated]
@5.0.0.RELEASE
-###org/springframework/core/GenericCollectionTypeResolver

+###org/springframework/core/JdkVersion
@1.0-rc1
+#<init>()V
+#getMajorJavaVersion()I
@1.1-rc1
+#getJavaVersion()Ljava/lang/String;
@2.0
+#isAtLeastJava14()Z
+#isAtLeastJava15()Z
@2.0.7
+#isAtLeastJava16()Z
@3.0.0.RELEASE
*#isAtLeastJava14()Z[deprecated]
*#isAtLeastJava15()Z[deprecated]
*#isAtLeastJava16()Z[deprecated]
@4.0.0.RELEASE
-#isAtLeastJava14()Z[deprecated]
-#isAtLeastJava15()Z[deprecated]
-#isAtLeastJava16()Z[deprecated]
@5.0.0.RELEASE
-###org/springframework/core/JdkVersion

+###org/springframework/core/ReflectiveVisitorHelper
@1.2.2
+#<init>()V
+#invokeVisit(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.RELEASE
-###org/springframework/core/ReflectiveVisitorHelper

+###org/springframework/core/enums/AbstractCachingLabeledEnumResolver
@1.2.2
+#<init>()V
+#getLabeledEnumSet(Ljava/lang/Class;)Ljava/util/Set;
+#getLabeledEnumMap(Ljava/lang/Class;)Ljava/util/Map;
+#getLabeledEnumByCode(Ljava/lang/Class;Ljava/lang/Comparable;)Lorg/springframework/core/enums/LabeledEnum;
+#getLabeledEnumByLabel(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/core/enums/LabeledEnum;
@4.0.0.RELEASE
-###org/springframework/core/enums/AbstractCachingLabeledEnumResolver

+###org/springframework/core/enums/AbstractGenericLabeledEnum
@1.2.6
+#getLabel()Ljava/lang/String;
@4.0.0.RELEASE
-###org/springframework/core/enums/AbstractGenericLabeledEnum

+###org/springframework/core/enums/AbstractLabeledEnum
@1.2.2
+#getType()Ljava/lang/Class;
+#getCode()Ljava/lang/Comparable;
+#getLabel()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5
-#getCode()Ljava/lang/Comparable;
-#getLabel()Ljava/lang/String;
@4.0.0.RELEASE
-###org/springframework/core/enums/AbstractLabeledEnum

+###org/springframework/core/enums/LabeledEnum
@1.2.2
+#getType()Ljava/lang/Class;
+#getCode()Ljava/lang/Comparable;
+#getLabel()Ljava/lang/String;
@4.0.0.RELEASE
-###org/springframework/core/enums/LabeledEnum

+###org/springframework/core/enums/LabeledEnumResolver
@1.2.2
+#getLabeledEnumSet(Ljava/lang/Class;)Ljava/util/Set;
+#getLabeledEnumMap(Ljava/lang/Class;)Ljava/util/Map;
+#getLabeledEnumByCode(Ljava/lang/Class;Ljava/lang/Comparable;)Lorg/springframework/core/enums/LabeledEnum;
+#getLabeledEnumByLabel(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/core/enums/LabeledEnum;
@4.0.0.RELEASE
-###org/springframework/core/enums/LabeledEnumResolver

+###org/springframework/core/enums/LetterCodedLabeledEnum
@1.2.2
+#<init>(CLjava/lang/String;)V
+#getCode()Ljava/lang/Comparable;
+#getLetterCode()C
@4.0.0.RELEASE
-###org/springframework/core/enums/LetterCodedLabeledEnum

+###org/springframework/core/enums/ShortCodedLabeledEnum
@1.2.2
+#<init>(ILjava/lang/String;)V
+#getCode()Ljava/lang/Comparable;
+#getShortCode()S
@4.0.0.RELEASE
-###org/springframework/core/enums/ShortCodedLabeledEnum

+###org/springframework/core/enums/StaticLabeledEnum
@1.2.6
+#getCode()Ljava/lang/Comparable;
+#getLabel()Ljava/lang/String;
+#shortValue()S
@4.0.0.RELEASE
-###org/springframework/core/enums/StaticLabeledEnum

+###org/springframework/core/enums/StaticLabeledEnumResolver
@1.2.2
+#<init>()V
@1.2.6
+#instance()Lorg/springframework/core/enums/StaticLabeledEnumResolver;
@4.0.0.RELEASE
-###org/springframework/core/enums/StaticLabeledEnumResolver

+###org/springframework/core/enums/StringCodedLabeledEnum
@1.2.2
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getCode()Ljava/lang/Comparable;
+#getStringCode()Ljava/lang/String;
@4.0.0.RELEASE
-###org/springframework/core/enums/StringCodedLabeledEnum

+###org/springframework/util/CachingMapDecorator
@1.2.2
+#<init>()V
+#<init>(Z)V
+#<init>(ZI)V
+#<init>(Ljava/util/Map;)V
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
@2.5.5
+#<init>(Ljava/util/Map;ZZ)V
@4.0.0.RELEASE
-###org/springframework/util/CachingMapDecorator

+###org/springframework/util/ClassLoaderUtils
@1.0-rc1
+#<init>()V
+#showClassLoaderHierarchy(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#showClassLoaderHierarchy(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
+#addResourcePathToPackagePath(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
+#classPackageAsResourcePath(Ljava/lang/Class;)Ljava/lang/String;
+#classNameWithoutPackagePrefix(Ljava/lang/Class;)Ljava/lang/String;
@1.0
-#addResourcePathToPackagePath(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
-#classPackageAsResourcePath(Ljava/lang/Class;)Ljava/lang/String;
-#classNameWithoutPackagePrefix(Ljava/lang/Class;)Ljava/lang/String;
@1.2.2
+#showClassLoaderHierarchy(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#showClassLoaderHierarchy(Ljava/lang/ClassLoader;)Ljava/lang/String;
+#showClassLoaderHierarchy(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#showClassLoaderHierarchy(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
@3.0.0.RELEASE
-###org/springframework/util/ClassLoaderUtils

+###org/springframework/util/Log4jConfigurer
@1.0-rc1
+#<init>()V
+#initLogging(Ljava/lang/String;)V
+#initLogging(Ljava/lang/String;J)V
+#shutdownLogging()V
+#setWorkingDirSystemProperty(Ljava/lang/String;)V
@5.0.0.RELEASE
-###org/springframework/util/Log4jConfigurer

+###org/springframework/util/ResponseTimeMonitor
@1.0-rc1
+#getAccessCount()I
+#getAverageResponseTimeMillis()I
+#getBestResponseTimeMillis()I
+#getWorstResponseTimeMillis()I
@3.0.0.RELEASE
-###org/springframework/util/ResponseTimeMonitor

+###org/springframework/util/ResponseTimeMonitorImpl
@1.0-rc1
+#<init>()V
+#getAccessCount()I
+#getUptime()J
+#getLoadDate()Ljava/util/Date;
+#getAverageResponseTimeMillis()I
+#getBestResponseTimeMillis()I
+#getWorstResponseTimeMillis()I
+#recordResponseTime(J)V
+#toString()Ljava/lang/String;
@1.1-rc1
+#getUptimeMillis()J
@1.2-rc1
-#getUptime()J
@3.0.0.RELEASE
-###org/springframework/util/ResponseTimeMonitorImpl

+###org/springframework/util/WeakReferenceMonitor$ReleaseListener
@1.2-rc1
+#released()V
@5.0.0.RELEASE
-###org/springframework/util/WeakReferenceMonitor$ReleaseListener

+###org/springframework/util/WeakReferenceMonitor
@1.2-rc1
+#<init>()V
+#monitor(Ljava/lang/Object;Lorg/springframework/util/WeakReferenceMonitor$ReleaseListener;)V
@5.0.0.RELEASE
-###org/springframework/util/WeakReferenceMonitor

+###org/springframework/core/ConcurrentMap
@2.5
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/core/ConcurrentMap

+###org/springframework/core/convert/support/PropertyTypeDescriptor
@3.0.2.RELEASE
+#<init>(Ljava/beans/PropertyDescriptor;Lorg/springframework/core/MethodParameter;)V
+#<init>(Ljava/beans/PropertyDescriptor;Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)V
+#getPropertyDescriptor()Ljava/beans/PropertyDescriptor;
+#getAnnotations()[Ljava/lang/annotation/Annotation;
@3.0.4.RELEASE
+#forElementType(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
@3.1.0.RELEASE
-###org/springframework/core/convert/support/PropertyTypeDescriptor

+###org/springframework/beans/BeanUtils
@1.0-rc1
+#<init>()V
+#instantiateClass(Ljava/lang/Class;)Ljava/lang/Object;
+#instantiateClass(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#isSimpleProperty(Ljava/lang/Class;)Z
+#isPrimitiveArray(Ljava/lang/Class;)Z
+#isPrimitiveWrapperArray(Ljava/lang/Class;)Z
+#copyProperties(Ljava/lang/Object;Ljava/lang/Object;)V
+#copyProperties(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/String;)V
@1.0
+#isAssignable(Ljava/lang/Class;Ljava/lang/Object;)Z
@1.1-rc1
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;)Z
+#isAtLeastOneMethodWithName(Ljava/lang/String;Ljava/lang/Class;)Z
@1.1-rc2
-#isAtLeastOneMethodWithName(Ljava/lang/String;Ljava/lang/Class;)Z
@1.1.1
+#findMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#findDeclaredMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#findMethodWithMinimalParameters(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;
+#findDeclaredMethodWithMinimalParameters(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;
@1.1.3
+#getPropertyDescriptors(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
@1.1.4
+#findPropertyForMethod(Ljava/lang/reflect/Method;)Ljava/beans/PropertyDescriptor;
@1.2-rc1
-###org/springframework/beans/BeanUtils

+###org/springframework/beans/BeanWrapper
@1.0-rc1
+#setWrappedInstance(Ljava/lang/Object;)V
+#getWrappedInstance()Ljava/lang/Object;
+#getWrappedClass()Ljava/lang/Class;
+#registerCustomEditor(Ljava/lang/Class;Ljava/beans/PropertyEditor;)V
+#registerCustomEditor(Ljava/lang/Class;Ljava/lang/String;Ljava/beans/PropertyEditor;)V
+#findCustomEditor(Ljava/lang/Class;Ljava/lang/String;)Ljava/beans/PropertyEditor;
+#getPropertyValue(Ljava/lang/String;)Ljava/lang/Object;
+#setPropertyValue(Ljava/lang/String;Ljava/lang/Object;)V
+#setPropertyValue(Lorg/springframework/beans/PropertyValue;)V
+#setPropertyValues(Ljava/util/Map;)V
+#setPropertyValues(Lorg/springframework/beans/PropertyValues;)V
+#setPropertyValues(Lorg/springframework/beans/PropertyValues;Z)V
+#getPropertyDescriptors()[Ljava/beans/PropertyDescriptor;
+#getPropertyDescriptor(Ljava/lang/String;)Ljava/beans/PropertyDescriptor;
+#isReadableProperty(Ljava/lang/String;)Z
+#isWritableProperty(Ljava/lang/String;)Z
+#invoke(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@1.0
-#invoke(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@1.0.1
+#getPropertyType(Ljava/lang/String;)Ljava/lang/Class;
@1.1-rc1
-#getPropertyValue(Ljava/lang/String;)Ljava/lang/Object;
-#setPropertyValue(Ljava/lang/String;Ljava/lang/Object;)V
-#setPropertyValue(Lorg/springframework/beans/PropertyValue;)V
-#setPropertyValues(Ljava/util/Map;)V
-#setPropertyValues(Lorg/springframework/beans/PropertyValues;)V
-#setPropertyValues(Lorg/springframework/beans/PropertyValues;Z)V
@1.2-rc1
-###org/springframework/beans/BeanWrapper

+###org/springframework/beans/BeanWrapperImpl
@1.0-rc1
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;)V
+#setWrappedInstance(Ljava/lang/Object;)V
+#getWrappedClass()Ljava/lang/Class;
+#getWrappedInstance()Ljava/lang/Object;
+#registerCustomEditor(Ljava/lang/Class;Ljava/beans/PropertyEditor;)V
+#registerCustomEditor(Ljava/lang/Class;Ljava/lang/String;Ljava/beans/PropertyEditor;)V
+#findCustomEditor(Ljava/lang/Class;Ljava/lang/String;)Ljava/beans/PropertyEditor;
+#getPropertyValue(Ljava/lang/String;)Ljava/lang/Object;
+#setPropertyValue(Ljava/lang/String;Ljava/lang/Object;)V
+#setPropertyValue(Lorg/springframework/beans/PropertyValue;)V
+#setPropertyValues(Ljava/util/Map;)V
+#setPropertyValues(Lorg/springframework/beans/PropertyValues;)V
+#setPropertyValues(Lorg/springframework/beans/PropertyValues;Z)V
+#doTypeConversionIfNecessary(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getPropertyDescriptors()[Ljava/beans/PropertyDescriptor;
+#getPropertyDescriptor(Ljava/lang/String;)Ljava/beans/PropertyDescriptor;
+#isReadableProperty(Ljava/lang/String;)Z
+#isWritableProperty(Ljava/lang/String;)Z
+#invoke(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
@1.0
-#invoke(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@1.0.1
+#getPropertyType(Ljava/lang/String;)Ljava/lang/Class;
@1.1-rc1
+#setWrappedInstance(Ljava/lang/Object;Ljava/lang/String;)V
@1.1.3
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
+#setWrappedInstance(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
+#getNestedPath()Ljava/lang/String;
+#getRootInstance()Ljava/lang/Object;
+#getRootClass()Ljava/lang/Class;
@1.2-rc1
-###org/springframework/beans/BeanWrapperImpl

+###org/springframework/beans/BeansException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.2-rc1
-###org/springframework/beans/BeansException

+###org/springframework/beans/FatalBeanException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.2-rc1
-###org/springframework/beans/FatalBeanException

+###org/springframework/beans/InvalidPropertyException
@1.1-rc1
+#<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getBeanClass()Ljava/lang/Class;
+#getPropertyName()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/InvalidPropertyException

+###org/springframework/beans/MethodInvocationException
@1.0-rc1
+#<init>(Ljava/lang/Throwable;Ljava/beans/PropertyChangeEvent;)V
+#<init>(Ljava/lang/Throwable;Ljava/lang/String;)V
+#getErrorCode()Ljava/lang/String;
@1.0
-#<init>(Ljava/lang/Throwable;Ljava/lang/String;)V
@1.1-rc1
+#<init>(Ljava/beans/PropertyChangeEvent;Ljava/lang/Throwable;)V
-#<init>(Ljava/lang/Throwable;Ljava/beans/PropertyChangeEvent;)V
@1.2-rc1
-###org/springframework/beans/MethodInvocationException

+###org/springframework/beans/MutablePropertyValues
@1.0-rc1
+#<init>()V
+#<init>(Lorg/springframework/beans/PropertyValues;)V
+#<init>(Ljava/util/Map;)V
+#addPropertyValue(Lorg/springframework/beans/PropertyValue;)V
+#addPropertyValue(Ljava/lang/String;Ljava/lang/Object;)V
+#setPropertyValueAt(Lorg/springframework/beans/PropertyValue;I)V
+#getPropertyValues()[Lorg/springframework/beans/PropertyValue;
+#getPropertyValue(Ljava/lang/String;)Lorg/springframework/beans/PropertyValue;
+#contains(Ljava/lang/String;)Z
+#changesSince(Lorg/springframework/beans/PropertyValues;)Lorg/springframework/beans/PropertyValues;
+#toString()Ljava/lang/String;
@1.0
+#removePropertyValue(Lorg/springframework/beans/PropertyValue;)V
+#removePropertyValue(Ljava/lang/String;)V
@1.1-rc1
+#addPropertyValues(Lorg/springframework/beans/PropertyValues;)V
+#addPropertyValues(Ljava/util/Map;)V
@1.1.1
+#addPropertyValues(Lorg/springframework/beans/PropertyValues;)Lorg/springframework/beans/MutablePropertyValues;
+#addPropertyValues(Ljava/util/Map;)Lorg/springframework/beans/MutablePropertyValues;
+#addPropertyValue(Lorg/springframework/beans/PropertyValue;)Lorg/springframework/beans/MutablePropertyValues;
-#addPropertyValues(Lorg/springframework/beans/PropertyValues;)V
-#addPropertyValues(Ljava/util/Map;)V
-#addPropertyValue(Lorg/springframework/beans/PropertyValue;)V
@1.2-rc1
-###org/springframework/beans/MutablePropertyValues

+###org/springframework/beans/NotReadablePropertyException
@1.1-rc1
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/NotReadablePropertyException

+###org/springframework/beans/NotWritablePropertyException
@1.0-rc1
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
@1.0
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Throwable;)V
@1.1-rc1
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Ljava/lang/String;Ljava/lang/Class;)V
-#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Throwable;)V
@1.2-rc1
-###org/springframework/beans/NotWritablePropertyException

+###org/springframework/beans/NullValueInNestedPathException
@1.0-rc1
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#getPropertyName()Ljava/lang/String;
+#getBeanClass()Ljava/lang/Class;
@1.1-rc1
+#<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
-#getPropertyName()Ljava/lang/String;
-#getBeanClass()Ljava/lang/Class;
@1.2-rc1
-###org/springframework/beans/NullValueInNestedPathException

+###org/springframework/beans/PropertyAccessException
@1.0-rc1
+#<init>(Ljava/lang/String;Ljava/beans/PropertyChangeEvent;)V
+#<init>(Ljava/lang/String;Ljava/beans/PropertyChangeEvent;Ljava/lang/Throwable;)V
+#getPropertyChangeEvent()Ljava/beans/PropertyChangeEvent;
@1.1-rc1
+#<init>(Ljava/beans/PropertyChangeEvent;Ljava/lang/String;)V
+#<init>(Ljava/beans/PropertyChangeEvent;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Ljava/lang/String;Ljava/beans/PropertyChangeEvent;)V
-#<init>(Ljava/lang/String;Ljava/beans/PropertyChangeEvent;Ljava/lang/Throwable;)V
@1.2-rc1
-###org/springframework/beans/PropertyAccessException

+###org/springframework/beans/PropertyAccessExceptionsException
@1.0-rc1
+#getBeanWrapper()Lorg/springframework/beans/BeanWrapper;
+#getBindObject()Ljava/lang/Object;
+#getExceptionCount()I
+#getPropertyAccessExceptions()[Lorg/springframework/beans/PropertyAccessException;
+#getPropertyAccessException(Ljava/lang/String;)Lorg/springframework/beans/PropertyAccessException;
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V
+#toString()Ljava/lang/String;
@1.0
+#getMessage()Ljava/lang/String;
@1.1-rc1
+#<init>(Lorg/springframework/beans/BeanWrapper;[Lorg/springframework/beans/PropertyAccessException;)V
@1.2-rc1
-###org/springframework/beans/PropertyAccessExceptionsException

+###org/springframework/beans/PropertyAccessor
@1.1-rc1
+#getPropertyValue(Ljava/lang/String;)Ljava/lang/Object;
+#setPropertyValue(Ljava/lang/String;Ljava/lang/Object;)V
+#setPropertyValue(Lorg/springframework/beans/PropertyValue;)V
+#setPropertyValues(Ljava/util/Map;)V
+#setPropertyValues(Lorg/springframework/beans/PropertyValues;)V
+#setPropertyValues(Lorg/springframework/beans/PropertyValues;Z)V
@1.2-rc1
-###org/springframework/beans/PropertyAccessor

+###org/springframework/beans/PropertyValue
@1.0-rc1
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
@1.0
+#hashCode()I
@1.2-rc1
-###org/springframework/beans/PropertyValue

+###org/springframework/beans/PropertyValues
@1.0-rc1
+#getPropertyValues()[Lorg/springframework/beans/PropertyValue;
+#getPropertyValue(Ljava/lang/String;)Lorg/springframework/beans/PropertyValue;
+#contains(Ljava/lang/String;)Z
+#changesSince(Lorg/springframework/beans/PropertyValues;)Lorg/springframework/beans/PropertyValues;
@1.2-rc1
-###org/springframework/beans/PropertyValues

+###org/springframework/beans/PropertyValuesEditor
@1.0-rc1
+#<init>()V
+#setAsText(Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/PropertyValuesEditor

+###org/springframework/beans/TypeMismatchException
@1.0-rc1
+#<init>(Ljava/beans/PropertyChangeEvent;Ljava/lang/Class;)V
+#<init>(Ljava/beans/PropertyChangeEvent;Ljava/lang/Class;Ljava/lang/Throwable;)V
+#getErrorCode()Ljava/lang/String;
@1.1-rc1
+#getRequiredType()Ljava/lang/Class;
@1.2-rc1
-###org/springframework/beans/TypeMismatchException

+###org/springframework/beans/factory/BeanCreationException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
@1.1-rc1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
@1.1.4
+#getResourceDescription()Ljava/lang/String;
+#getBeanName()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/BeanCreationException

+###org/springframework/beans/factory/BeanCurrentlyInCreationException
@1.1-rc1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
@1.1.3
+#<init>(Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/factory/BeanCurrentlyInCreationException

+###org/springframework/beans/factory/BeanDefinitionStoreException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/core/io/Resource;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/springframework/core/io/Resource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
@1.1.4
+#getResourceDescription()Ljava/lang/String;
+#getBeanName()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/BeanDefinitionStoreException

+###org/springframework/beans/factory/BeanFactory
@1.0-rc1
+#getBean(Ljava/lang/String;)Ljava/lang/Object;
+#getBean(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#containsBean(Ljava/lang/String;)Z
+#isSingleton(Ljava/lang/String;)Z
+#getAliases(Ljava/lang/String;)[Ljava/lang/String;
@1.1.2
+#getType(Ljava/lang/String;)Ljava/lang/Class;
@1.2-rc1
-###org/springframework/beans/factory/BeanFactory

+###org/springframework/beans/factory/BeanFactoryAware
@1.0-rc1
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@1.2-rc1
-###org/springframework/beans/factory/BeanFactoryAware

+###org/springframework/beans/factory/BeanFactoryUtils
@1.0-rc1
+#<init>()V
+#countBeansIncludingAncestors(Lorg/springframework/beans/factory/ListableBeanFactory;)I
+#beanNamesIncludingAncestors(Lorg/springframework/beans/factory/ListableBeanFactory;)[Ljava/lang/String;
+#beanNamesIncludingAncestors(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)[Ljava/lang/String;
+#beansOfTypeIncludingAncestors(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;ZZ)Ljava/util/Map;
+#beanOfTypeIncludingAncestors(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;ZZ)Ljava/lang/Object;
+#beanOfType(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;ZZ)Ljava/lang/Object;
+#beanOfType(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)Ljava/lang/Object;
@1.1.2
+#isFactoryDereference(Ljava/lang/String;)Z
+#transformedBeanName(Ljava/lang/String;)Ljava/lang/String;
+#beansOfTypeIncludingAncestors(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)Ljava/util/Map;
+#beanOfTypeIncludingAncestors(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)Ljava/lang/Object;
@1.1.5
+#beanNamesForTypeIncludingAncestors(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)[Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/BeanFactoryUtils

+###org/springframework/beans/factory/BeanInitializationException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.2-rc1
-###org/springframework/beans/factory/BeanInitializationException

+###org/springframework/beans/factory/BeanIsAbstractException
@1.1
+#<init>(Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/factory/BeanIsAbstractException

+###org/springframework/beans/factory/BeanIsNotAFactoryException
@1.0-rc1
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
@1.1.2
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
-#<init>(Ljava/lang/String;Ljava/lang/Object;)V
@1.2-rc1
-###org/springframework/beans/factory/BeanIsNotAFactoryException

+###org/springframework/beans/factory/BeanNameAware
@1.0-rc1
+#setBeanName(Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/factory/BeanNameAware

+###org/springframework/beans/factory/BeanNotOfRequiredTypeException
@1.0-rc1
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
+#getBeanName()Ljava/lang/String;
+#getRequiredType()Ljava/lang/Class;
+#getActualType()Ljava/lang/Class;
+#getActualInstance()Ljava/lang/Object;
@1.1.2
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
-#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
-#getActualInstance()Ljava/lang/Object;
@1.2-rc1
-###org/springframework/beans/factory/BeanNotOfRequiredTypeException

+###org/springframework/beans/factory/DisposableBean
@1.0-rc1
+#destroy()V
@1.2-rc1
-###org/springframework/beans/factory/DisposableBean

+###org/springframework/beans/factory/FactoryBean
@1.0-rc1
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.2-rc1
-###org/springframework/beans/factory/FactoryBean

+###org/springframework/beans/factory/FactoryBeanCircularReferenceException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
@1.1-rc1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/factory/FactoryBeanCircularReferenceException

+###org/springframework/beans/factory/HierarchicalBeanFactory
@1.0-rc1
+#getParentBeanFactory()Lorg/springframework/beans/factory/BeanFactory;
@1.2-rc1
-###org/springframework/beans/factory/HierarchicalBeanFactory

+###org/springframework/beans/factory/InitializingBean
@1.0-rc1
+#afterPropertiesSet()V
@1.2-rc1
-###org/springframework/beans/factory/InitializingBean

+###org/springframework/beans/factory/ListableBeanFactory
@1.0-rc1
+#getBeanDefinitionCount()I
+#getBeanDefinitionNames()[Ljava/lang/String;
+#getBeanDefinitionNames(Ljava/lang/Class;)[Ljava/lang/String;
+#containsBeanDefinition(Ljava/lang/String;)Z
+#getBeansOfType(Ljava/lang/Class;ZZ)Ljava/util/Map;
@1.1.2
+#getBeansOfType(Ljava/lang/Class;)Ljava/util/Map;
@1.1.5
+#getBeanNamesForType(Ljava/lang/Class;)[Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/ListableBeanFactory

+###org/springframework/beans/factory/NoSuchBeanDefinitionException
@1.0-rc1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#getBeanName()Ljava/lang/String;
+#getBeanType()Ljava/lang/Class;
@1.2-rc1
-###org/springframework/beans/factory/NoSuchBeanDefinitionException

+###org/springframework/beans/factory/ObjectFactory
@1.1-rc1
+#getObject()Ljava/lang/Object;
@1.2-rc1
-###org/springframework/beans/factory/ObjectFactory

+###org/springframework/beans/factory/UnsatisfiedDependencyException
@1.0-rc1
+#<init>(Ljava/lang/String;ILjava/lang/Class;)V
+#<init>(Ljava/lang/String;ILjava/lang/Class;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@1.0
-#<init>(Ljava/lang/String;ILjava/lang/Class;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
@1.1-rc1
+#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Class;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;ILjava/lang/Class;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/factory/UnsatisfiedDependencyException

+###org/springframework/beans/factory/access/BeanFactoryBootstrap
@1.0-rc1
+#getInstance()Lorg/springframework/beans/factory/access/BeanFactoryBootstrap;
+#getBeanFactory()Lorg/springframework/beans/factory/BeanFactory;
@1.2-rc1
-###org/springframework/beans/factory/access/BeanFactoryBootstrap

+###org/springframework/beans/factory/access/BeanFactoryLocator
@1.0-rc1
+#useFactory(Ljava/lang/String;)Lorg/springframework/beans/factory/access/BeanFactoryReference;
@1.0
+#useBeanFactory(Ljava/lang/String;)Lorg/springframework/beans/factory/access/BeanFactoryReference;
-#useFactory(Ljava/lang/String;)Lorg/springframework/beans/factory/access/BeanFactoryReference;
@1.2-rc1
-###org/springframework/beans/factory/access/BeanFactoryLocator

+###org/springframework/beans/factory/access/BeanFactoryReference
@1.0-rc1
+#getFactory()Lorg/springframework/beans/factory/BeanFactory;
+#release()V
@1.2-rc1
-###org/springframework/beans/factory/access/BeanFactoryReference

+###org/springframework/beans/factory/access/BootstrapException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.2-rc1
-###org/springframework/beans/factory/access/BootstrapException

+###org/springframework/beans/factory/access/DefaultBeanFactoryReference
@1.0
+#<init>(Lorg/springframework/beans/factory/BeanFactory;)V
+#getFactory()Lorg/springframework/beans/factory/BeanFactory;
+#release()V
@1.2-rc1
-###org/springframework/beans/factory/access/DefaultBeanFactoryReference

+###org/springframework/beans/factory/access/JndiBeanFactoryLocator
@1.0
+#<init>()V
+#useBeanFactory(Ljava/lang/String;)Lorg/springframework/beans/factory/access/BeanFactoryReference;
@1.2-rc1
-###org/springframework/beans/factory/access/JndiBeanFactoryLocator

+###org/springframework/beans/factory/access/SingletonBeanFactoryLocator
@1.0-rc1
+#getInstance()Lorg/springframework/beans/factory/access/BeanFactoryLocator;
+#getInstance(Ljava/lang/String;)Lorg/springframework/beans/factory/access/BeanFactoryLocator;
+#useFactory(Ljava/lang/String;)Lorg/springframework/beans/factory/access/BeanFactoryReference;
@1.0
+#useBeanFactory(Ljava/lang/String;)Lorg/springframework/beans/factory/access/BeanFactoryReference;
-#useFactory(Ljava/lang/String;)Lorg/springframework/beans/factory/access/BeanFactoryReference;
@1.2-rc1
-###org/springframework/beans/factory/access/SingletonBeanFactoryLocator

+###org/springframework/beans/factory/config/AbstractFactoryBean
@1.1-rc1
+#<init>()V
+#setSingleton(Z)V
+#isSingleton()Z
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
@1.2-rc1
-###org/springframework/beans/factory/config/AbstractFactoryBean

+###org/springframework/beans/factory/config/AutowireCapableBeanFactory
@1.0-rc1
+#autowire(Ljava/lang/Class;IZ)Ljava/lang/Object;
+#autowireBeanProperties(Ljava/lang/Object;IZ)V
+#applyBeanPostProcessorsBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#applyBeanPostProcessorsAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@1.1
+#applyBeanPropertyValues(Ljava/lang/Object;Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/factory/config/AutowireCapableBeanFactory

+###org/springframework/beans/factory/config/BeanDefinition
@1.0
+#getPropertyValues()Lorg/springframework/beans/MutablePropertyValues;
+#getConstructorArgumentValues()Lorg/springframework/beans/factory/config/ConstructorArgumentValues;
+#getResourceDescription()Ljava/lang/String;
@1.1-rc1
+#getMethodOverrides()Lorg/springframework/beans/factory/support/MethodOverrides;
@1.1-rc2
-#getMethodOverrides()Lorg/springframework/beans/factory/support/MethodOverrides;
@1.1
+#getBeanClass()Ljava/lang/Class;
+#isAbstract()Z
+#isSingleton()Z
+#isLazyInit()Z
@1.2-rc1
-###org/springframework/beans/factory/config/BeanDefinition

+###org/springframework/beans/factory/config/BeanDefinitionHolder
@1.1-rc2
+#<init>(Lorg/springframework/beans/factory/config/BeanDefinition;Ljava/lang/String;)V
+#<init>(Lorg/springframework/beans/factory/config/BeanDefinition;Ljava/lang/String;[Ljava/lang/String;)V
+#getBeanDefinition()Lorg/springframework/beans/factory/config/BeanDefinition;
+#getBeanName()Ljava/lang/String;
+#getAliases()[Ljava/lang/String;
@1.1.2
+#toString()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/config/BeanDefinitionHolder

+###org/springframework/beans/factory/config/BeanFactoryPostProcessor
@1.0-rc1
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@1.2-rc1
-###org/springframework/beans/factory/config/BeanFactoryPostProcessor

+###org/springframework/beans/factory/config/BeanPostProcessor
@1.0-rc1
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@1.2-rc1
-###org/springframework/beans/factory/config/BeanPostProcessor

+###org/springframework/beans/factory/config/CommonsLogFactoryBean
@1.0-rc1
+#<init>()V
+#setLogName(Ljava/lang/String;)V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.2-rc1
-###org/springframework/beans/factory/config/CommonsLogFactoryBean

+###org/springframework/beans/factory/config/ConfigurableBeanFactory
@1.0-rc1
+#setParentBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#registerCustomEditor(Ljava/lang/Class;Ljava/beans/PropertyEditor;)V
+#addBeanPostProcessor(Lorg/springframework/beans/factory/config/BeanPostProcessor;)V
+#ignoreDependencyType(Ljava/lang/Class;)V
+#getPropertyValues(Ljava/lang/String;)Lorg/springframework/beans/MutablePropertyValues;
+#getConstructorArgumentValues(Ljava/lang/String;)Lorg/springframework/beans/factory/config/ConstructorArgumentValues;
+#registerAlias(Ljava/lang/String;Ljava/lang/String;)V
+#registerSingleton(Ljava/lang/String;Ljava/lang/Object;)V
+#destroySingletons()V
@1.0
+#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
-#getPropertyValues(Ljava/lang/String;)Lorg/springframework/beans/MutablePropertyValues;
-#getConstructorArgumentValues(Ljava/lang/String;)Lorg/springframework/beans/factory/config/ConstructorArgumentValues;
@1.1
-#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
@1.1.3
-#ignoreDependencyType(Ljava/lang/Class;)V
@1.1.4
+#containsSingleton(Ljava/lang/String;)Z
@1.2-rc1
-###org/springframework/beans/factory/config/ConfigurableBeanFactory

+###org/springframework/beans/factory/config/ConfigurableListableBeanFactory
@1.0-rc1
+#preInstantiateSingletons()V
@1.1
+#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
@1.1.3
+#ignoreDependencyType(Ljava/lang/Class;)V
@1.2-rc1
-###org/springframework/beans/factory/config/ConfigurableListableBeanFactory

+###org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder
@1.0
+#setValue(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
+#getType()Ljava/lang/String;
@1.1-rc2
+#setType(Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder

+###org/springframework/beans/factory/config/ConstructorArgumentValues
@1.0-rc1
+#<init>()V
+#addIndexedArgumentValue(ILjava/lang/Object;)V
+#getIndexedArgumentValue(I)Ljava/lang/Object;
+#getIndexedArgumentValues()Ljava/util/Map;
+#addGenericArgumentValue(Ljava/lang/Object;)V
+#getGenericArgumentValue(Ljava/lang/Class;)Ljava/lang/Object;
+#getGenericArgumentValues()Ljava/util/Set;
+#getArgumentValue(ILjava/lang/Class;)Ljava/lang/Object;
+#getNrOfArguments()I
+#isEmpty()Z
@1.0
+#addIndexedArgumentValue(ILjava/lang/Object;Ljava/lang/String;)V
+#getIndexedArgumentValue(ILjava/lang/Class;)Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;
+#addGenericArgumentValue(Ljava/lang/Object;Ljava/lang/String;)V
+#getGenericArgumentValue(Ljava/lang/Class;)Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;
+#getArgumentValue(ILjava/lang/Class;)Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;
-#getIndexedArgumentValue(I)Ljava/lang/Object;
-#getGenericArgumentValue(Ljava/lang/Class;)Ljava/lang/Object;
-#getArgumentValue(ILjava/lang/Class;)Ljava/lang/Object;
@1.1-rc1
+#<init>(Lorg/springframework/beans/factory/config/ConstructorArgumentValues;)V
+#addArgumentValues(Lorg/springframework/beans/factory/config/ConstructorArgumentValues;)V
@1.1
+#getArgumentCount()I
@1.2-rc1
-###org/springframework/beans/factory/config/ConstructorArgumentValues

+###org/springframework/beans/factory/config/CustomEditorConfigurer
@1.0
+#<init>()V
+#setOrder(I)V
+#getOrder()I
+#setCustomEditors(Ljava/util/Map;)V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@1.2-rc1
-###org/springframework/beans/factory/config/CustomEditorConfigurer

+###org/springframework/beans/factory/config/DestructionAwareBeanPostProcessor
@1.0.1
+#postProcessBeforeDestruction(Ljava/lang/Object;Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/factory/config/DestructionAwareBeanPostProcessor

+###org/springframework/beans/factory/config/FieldRetrievingFactoryBean
@1.1-rc2
+#<init>()V
+#setTargetClass(Ljava/lang/Class;)V
+#getTargetClass()Ljava/lang/Class;
+#setTargetObject(Ljava/lang/Object;)V
+#getTargetObject()Ljava/lang/Object;
+#setTargetField(Ljava/lang/String;)V
+#getTargetField()Ljava/lang/String;
+#setStaticField(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.1.2
+#setBeanName(Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/factory/config/FieldRetrievingFactoryBean

+###org/springframework/beans/factory/config/ListFactoryBean
@1.0-rc1
+#<init>()V
+#setSourceList(Ljava/util/List;)V
+#setTargetListClass(Ljava/lang/Class;)V
+#setSingleton(Z)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.1-rc1
-#setSingleton(Z)V
-#afterPropertiesSet()V
-#getObject()Ljava/lang/Object;
-#isSingleton()Z
@1.2-rc1
-###org/springframework/beans/factory/config/ListFactoryBean

+###org/springframework/beans/factory/config/MapFactoryBean
@1.0-rc1
+#<init>()V
+#setSourceMap(Ljava/util/Map;)V
+#setTargetMapClass(Ljava/lang/Class;)V
+#setSingleton(Z)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.1-rc1
-#setSingleton(Z)V
-#afterPropertiesSet()V
-#getObject()Ljava/lang/Object;
-#isSingleton()Z
@1.2-rc1
-###org/springframework/beans/factory/config/MapFactoryBean

+###org/springframework/beans/factory/config/MethodInvokingFactoryBean
@1.0-rc1
+#<init>()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#afterPropertiesSet()V
+#setSingleton(Z)V
+#getStaticMethod()Ljava/lang/String;
+#setStaticMethod(Ljava/lang/String;)V
+#getTarget()Ljava/lang/Object;
+#setTarget(Ljava/lang/Object;)V
+#getTargetMethod()Ljava/lang/String;
+#setTargetMethod(Ljava/lang/String;)V
+#getArgs()[Ljava/lang/Object;
+#setArgs([Ljava/lang/Object;)V
@1.0
-#getStaticMethod()Ljava/lang/String;
-#setStaticMethod(Ljava/lang/String;)V
-#getTarget()Ljava/lang/Object;
-#setTarget(Ljava/lang/Object;)V
-#getTargetMethod()Ljava/lang/String;
-#setTargetMethod(Ljava/lang/String;)V
-#getArgs()[Ljava/lang/Object;
-#setArgs([Ljava/lang/Object;)V
@1.2-rc1
-###org/springframework/beans/factory/config/MethodInvokingFactoryBean

+###org/springframework/beans/factory/config/ObjectFactoryCreatingFactoryBean
@1.1-rc1
+#<init>()V
+#setTargetBeanName(Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#getObjectType()Ljava/lang/Class;
@1.2-rc1
-###org/springframework/beans/factory/config/ObjectFactoryCreatingFactoryBean

+###org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer
@1.0
+#<init>()V
+#setSystemTreePath(Ljava/lang/String;)V
+#setUserTreePath(Ljava/lang/String;)V
+#afterPropertiesSet()V
@1.2-rc1
-###org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer

+###org/springframework/beans/factory/config/PropertiesFactoryBean
@1.0-rc1
+#<init>()V
+#setProperties(Ljava/util/Properties;)V
+#setLocation(Lorg/springframework/core/io/Resource;)V
+#setLocations([Lorg/springframework/core/io/Resource;)V
+#setSingleton(Z)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.0
+#setCharset(Ljava/lang/String;)V
+#setPropertiesPersister(Lorg/springframework/util/PropertiesPersister;)V
@1.1-rc1
+#setFileEncoding(Ljava/lang/String;)V
-#setCharset(Ljava/lang/String;)V
-#setSingleton(Z)V
-#afterPropertiesSet()V
-#getObject()Ljava/lang/Object;
-#isSingleton()Z
@1.2-rc1
-###org/springframework/beans/factory/config/PropertiesFactoryBean

+###org/springframework/beans/factory/config/PropertyOverrideConfigurer
@1.0-rc1
+#<init>()V
@1.1-rc2
+#hasPropertyOverridesFor(Ljava/lang/String;)Z
@1.1.4
+#setIgnoreInvalidKeys(Z)V
@1.2-rc1
-###org/springframework/beans/factory/config/PropertyOverrideConfigurer

+###org/springframework/beans/factory/config/PropertyPlaceholderConfigurer
@1.0-rc1
+#<init>()V
+#setPlaceholderPrefix(Ljava/lang/String;)V
+#setPlaceholderSuffix(Ljava/lang/String;)V
+#setCheckSystemProperties(Z)V
@1.0
+#setSystemPropertiesMode(I)V
+#setSystemPropertiesModeName(Ljava/lang/String;)V
+#setIgnoreUnresolvablePlaceholders(Z)V
-#setCheckSystemProperties(Z)V
@1.1.2
+#setBeanName(Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@1.2-rc1
-###org/springframework/beans/factory/config/PropertyPlaceholderConfigurer

+###org/springframework/beans/factory/config/PropertyResourceConfigurer
@1.0-rc1
+#<init>()V
+#setOrder(I)V
+#getOrder()I
+#setProperties(Ljava/util/Properties;)V
+#setLocation(Lorg/springframework/core/io/Resource;)V
+#setLocations([Lorg/springframework/core/io/Resource;)V
+#setIgnoreResourceNotFound(Z)V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@1.1.3
+#setFileEncoding(Ljava/lang/String;)V
+#setPropertiesPersister(Lorg/springframework/util/PropertiesPersister;)V
@1.2-rc1
-###org/springframework/beans/factory/config/PropertyResourceConfigurer

+###org/springframework/beans/factory/config/ResourceFactoryBean
@1.0-rc1
+#<init>()V
+#setLocation(Lorg/springframework/core/io/Resource;)V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.2-rc1
-###org/springframework/beans/factory/config/ResourceFactoryBean

+###org/springframework/beans/factory/config/RuntimeBeanReference
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#getBeanName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.1-rc1
+#<init>(Ljava/lang/String;Z)V
+#isToParent()Z
@1.2-rc1
-###org/springframework/beans/factory/config/RuntimeBeanReference

+###org/springframework/beans/factory/config/SetFactoryBean
@1.0-rc1
+#<init>()V
+#setSourceSet(Ljava/util/Set;)V
+#setTargetSetClass(Ljava/lang/Class;)V
+#setSingleton(Z)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.1-rc1
-#setSingleton(Z)V
-#afterPropertiesSet()V
-#getObject()Ljava/lang/Object;
-#isSingleton()Z
@1.2-rc1
-###org/springframework/beans/factory/config/SetFactoryBean

+###org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory
@1.0
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/BeanFactory;)V
+#autowire(Ljava/lang/Class;IZ)Ljava/lang/Object;
+#autowireBeanProperties(Ljava/lang/Object;IZ)V
+#applyBeanPostProcessorsBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#applyBeanPostProcessorsAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#destroySingletons()V
@1.1
+#applyBeanPropertyValues(Ljava/lang/Object;Ljava/lang/String;)V
@1.1.2
-#destroySingletons()V
@1.1.3
+#setInstantiationStrategy(Lorg/springframework/beans/factory/support/InstantiationStrategy;)V
+#ignoreDependencyType(Ljava/lang/Class;)V
+#getIgnoredDependencyTypes()Ljava/util/Set;
@1.1.4
+#applyBeanPostProcessorsBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Ljava/lang/Object;
+#applyBeanPostProcessorsAfterInitialization(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Ljava/lang/Object;
@1.2-rc1
-###org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory

+###org/springframework/beans/factory/support/AbstractBeanDefinition
@1.0-rc1
+#getPropertyValues()Lorg/springframework/beans/MutablePropertyValues;
+#setSingleton(Z)V
+#isSingleton()Z
+#setLazyInit(Z)V
+#isLazyInit()Z
+#setResourceDescription(Ljava/lang/String;)V
+#getResourceDescription()Ljava/lang/String;
+#validate()V
@1.0
+#getConstructorArgumentValues()Lorg/springframework/beans/factory/config/ConstructorArgumentValues;
@1.1-rc1
+#overrideFrom(Lorg/springframework/beans/factory/support/AbstractBeanDefinition;)V
+#hasBeanClass()Z
+#setBeanClass(Ljava/lang/Class;)V
+#getBeanClass()Ljava/lang/Class;
+#setBeanClassName(Ljava/lang/String;)V
+#getBeanClassName()Ljava/lang/String;
+#setConstructorArgumentValues(Lorg/springframework/beans/factory/config/ConstructorArgumentValues;)V
+#hasConstructorArgumentValues()Z
+#setPropertyValues(Lorg/springframework/beans/MutablePropertyValues;)V
+#setMethodOverrides(Lorg/springframework/beans/factory/support/MethodOverrides;)V
+#getMethodOverrides()Lorg/springframework/beans/factory/support/MethodOverrides;
+#setInitMethodName(Ljava/lang/String;)V
+#getInitMethodName()Ljava/lang/String;
+#setDestroyMethodName(Ljava/lang/String;)V
+#getDestroyMethodName()Ljava/lang/String;
+#setStaticFactoryMethodName(Ljava/lang/String;)V
+#getStaticFactoryMethodName()Ljava/lang/String;
+#setAutowireMode(I)V
+#getAutowireMode()I
+#getResolvedAutowireMode()I
+#setDependencyCheck(I)V
+#getDependencyCheck()I
+#setDependsOn([Ljava/lang/String;)V
+#getDependsOn()[Ljava/lang/String;
@1.1-rc2
+#setFactoryMethodName(Ljava/lang/String;)V
+#getFactoryMethodName()Ljava/lang/String;
+#getFactoryBeanName()Ljava/lang/String;
+#setFactoryBeanName(Ljava/lang/String;)V
-#setStaticFactoryMethodName(Ljava/lang/String;)V
-#getStaticFactoryMethodName()Ljava/lang/String;
@1.1
+#setAbstract(Z)V
+#isAbstract()Z
@1.2-rc1
-###org/springframework/beans/factory/support/AbstractBeanDefinition

+###org/springframework/beans/factory/support/AbstractBeanDefinitionReader
@1.0-rc1
+#getBeanFactory()Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#getBeanClassLoader()Ljava/lang/ClassLoader;
@1.1.3
+#loadBeanDefinitions([Lorg/springframework/core/io/Resource;)I
@1.1.5
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#getResourceLoader()Lorg/springframework/core/io/ResourceLoader;
@1.2-rc1
-###org/springframework/beans/factory/support/AbstractBeanDefinitionReader

+###org/springframework/beans/factory/support/AbstractBeanFactory
@1.0-rc1
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/BeanFactory;)V
+#getBean(Ljava/lang/String;)Ljava/lang/Object;
+#getBean(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#containsBean(Ljava/lang/String;)Z
+#isSingleton(Ljava/lang/String;)Z
+#getAliases(Ljava/lang/String;)[Ljava/lang/String;
+#getParentBeanFactory()Lorg/springframework/beans/factory/BeanFactory;
+#autowire(Ljava/lang/Class;IZ)Ljava/lang/Object;
+#autowireBeanProperties(Ljava/lang/Object;IZ)V
+#applyBeanPostProcessorsBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#applyBeanPostProcessorsAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#setParentBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#registerCustomEditor(Ljava/lang/Class;Ljava/beans/PropertyEditor;)V
+#getCustomEditors()Ljava/util/Map;
+#addBeanPostProcessor(Lorg/springframework/beans/factory/config/BeanPostProcessor;)V
+#getBeanPostProcessors()Ljava/util/List;
+#ignoreDependencyType(Ljava/lang/Class;)V
+#getIgnoredDependencyTypes()Ljava/util/Set;
+#getPropertyValues(Ljava/lang/String;)Lorg/springframework/beans/MutablePropertyValues;
+#getConstructorArgumentValues(Ljava/lang/String;)Lorg/springframework/beans/factory/config/ConstructorArgumentValues;
+#registerAlias(Ljava/lang/String;Ljava/lang/String;)V
+#registerSingleton(Ljava/lang/String;Ljava/lang/Object;)V
+#destroySingletons()V
+#getSingletonNames(Ljava/lang/Class;)[Ljava/lang/String;
+#getMergedBeanDefinition(Ljava/lang/String;Z)Lorg/springframework/beans/factory/support/RootBeanDefinition;
+#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
@1.0
+#containsBeanDefinition(Ljava/lang/String;)Z
+#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
-#autowire(Ljava/lang/Class;IZ)Ljava/lang/Object;
-#autowireBeanProperties(Ljava/lang/Object;IZ)V
-#applyBeanPostProcessorsBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
-#applyBeanPostProcessorsAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
-#getPropertyValues(Ljava/lang/String;)Lorg/springframework/beans/MutablePropertyValues;
-#getConstructorArgumentValues(Ljava/lang/String;)Lorg/springframework/beans/factory/config/ConstructorArgumentValues;
-#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
@1.1-rc1
+#getBean(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@1.1
-#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
@1.1.2
+#getBean(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#getType(Ljava/lang/String;)Ljava/lang/Class;
+#getSingletonNames()[Ljava/lang/String;
-#getSingletonNames(Ljava/lang/Class;)[Ljava/lang/String;
-#getMergedBeanDefinition(Ljava/lang/String;Z)Lorg/springframework/beans/factory/support/RootBeanDefinition;
-#containsBeanDefinition(Ljava/lang/String;)Z
@1.1.3
+#isFactoryBean(Ljava/lang/String;)Z
-#ignoreDependencyType(Ljava/lang/Class;)V
-#getIgnoredDependencyTypes()Ljava/util/Set;
@1.1.4
+#getSingletonCount()I
+#containsSingleton(Ljava/lang/String;)Z
@1.2-rc1
-###org/springframework/beans/factory/support/AbstractBeanFactory

+###org/springframework/beans/factory/support/BeanDefinitionReader
@1.1-rc2
+#getBeanFactory()Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
+#getBeanClassLoader()Ljava/lang/ClassLoader;
+#loadBeanDefinitions(Lorg/springframework/core/io/Resource;)I
@1.1.5
+#getResourceLoader()Lorg/springframework/core/io/ResourceLoader;
+#loadBeanDefinitions([Lorg/springframework/core/io/Resource;)I
@1.2-rc1
-###org/springframework/beans/factory/support/BeanDefinitionReader

+###org/springframework/beans/factory/support/BeanDefinitionReaderUtils
@1.1-rc1
+#<init>()V
+#createBeanDefinition(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/config/ConstructorArgumentValues;Lorg/springframework/beans/MutablePropertyValues;Ljava/lang/ClassLoader;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
@1.1.2
+#generateBeanName(Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Ljava/lang/String;
+#registerBeanDefinition(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@1.2-rc1
-###org/springframework/beans/factory/support/BeanDefinitionReaderUtils

+###org/springframework/beans/factory/support/BeanDefinitionRegistry
@1.0-rc1
+#getBeanDefinitionCount()I
+#getBeanDefinitionNames()[Ljava/lang/String;
+#containsBeanDefinition(Ljava/lang/String;)Z
+#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
+#registerBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;)V
+#getAliases(Ljava/lang/String;)[Ljava/lang/String;
+#registerAlias(Ljava/lang/String;Ljava/lang/String;)V
@1.0
+#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
+#registerBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
-#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
-#registerBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;)V
@1.2-rc1
-###org/springframework/beans/factory/support/BeanDefinitionRegistry

+###org/springframework/beans/factory/support/BeanDefinitionValidationException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.2-rc1
-###org/springframework/beans/factory/support/BeanDefinitionValidationException

+###org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy
@1.1-rc1
+#<init>()V
@1.2-rc1
-###org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy

+###org/springframework/beans/factory/support/ChildBeanDefinition
@1.0-rc1
+#<init>(Ljava/lang/String;Lorg/springframework/beans/MutablePropertyValues;)V
+#getParentName()Ljava/lang/String;
+#validate()V
+#toString()Ljava/lang/String;
@1.1-rc1
+#<init>(Ljava/lang/String;Lorg/springframework/beans/factory/config/ConstructorArgumentValues;Lorg/springframework/beans/MutablePropertyValues;)V
+#<init>(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/beans/factory/config/ConstructorArgumentValues;Lorg/springframework/beans/MutablePropertyValues;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/config/ConstructorArgumentValues;Lorg/springframework/beans/MutablePropertyValues;)V
@1.2-rc1
-###org/springframework/beans/factory/support/ChildBeanDefinition

+###org/springframework/beans/factory/support/DefaultListableBeanFactory
@1.0-rc1
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/BeanFactory;)V
+#setAllowBeanDefinitionOverriding(Z)V
+#getBeanDefinitionCount()I
+#getBeanDefinitionNames()[Ljava/lang/String;
+#getBeanDefinitionNames(Ljava/lang/Class;)[Ljava/lang/String;
+#containsBeanDefinition(Ljava/lang/String;)Z
+#getBeansOfType(Ljava/lang/Class;ZZ)Ljava/util/Map;
+#preInstantiateSingletons()V
+#registerBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;)V
+#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
+#toString()Ljava/lang/String;
@1.0
+#registerBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
+#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
-#registerBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;)V
-#getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
@1.1.2
+#getBeansOfType(Ljava/lang/Class;)Ljava/util/Map;
@1.1.5
+#getBeanNamesForType(Ljava/lang/Class;)[Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/support/DefaultListableBeanFactory

+###org/springframework/beans/factory/support/InstantiationStrategy
@1.1-rc1
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
@1.1-rc2
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
-#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;
-#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
-#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
@1.1.4
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
-#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
@1.2-rc1
-###org/springframework/beans/factory/support/InstantiationStrategy

+###org/springframework/beans/factory/support/LookupOverride
@1.1-rc1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getBeanName()Ljava/lang/String;
+#matches(Ljava/lang/reflect/Method;Lorg/springframework/beans/factory/support/MethodOverrides;)Z
+#toString()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/support/LookupOverride

+###org/springframework/beans/factory/support/ManagedList
@1.0-rc1
+#<init>()V
@1.1-rc1
+#<init>(I)V
@1.2-rc1
-###org/springframework/beans/factory/support/ManagedList

+###org/springframework/beans/factory/support/ManagedMap
@1.0-rc1
+#<init>()V
@1.1-rc1
+#<init>(I)V
@1.1.1
+#<init>(Ljava/util/Map;)V
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
@1.1.2
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/support/ManagedMap

+###org/springframework/beans/factory/support/ManagedSet
@1.0-rc1
+#<init>()V
@1.1-rc1
+#<init>(I)V
@1.1.3
+#<init>(Ljava/util/Set;)V
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#clear()V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/support/ManagedSet

+###org/springframework/beans/factory/support/MethodOverride
@1.1-rc1
+#getMethodName()Ljava/lang/String;
+#matches(Ljava/lang/reflect/Method;Lorg/springframework/beans/factory/support/MethodOverrides;)Z
@1.2-rc1
-###org/springframework/beans/factory/support/MethodOverride

+###org/springframework/beans/factory/support/MethodOverrides
@1.1-rc1
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/support/MethodOverrides;)V
+#addOverrides(Lorg/springframework/beans/factory/support/MethodOverrides;)V
+#addOverride(Lorg/springframework/beans/factory/support/MethodOverride;)V
+#getOverrides()Ljava/util/Set;
+#addOverloadedMethodName(Ljava/lang/String;)V
+#isOverloadedMethodName(Ljava/lang/String;)Z
+#isEmpty()Z
+#getOverride(Ljava/lang/reflect/Method;)Lorg/springframework/beans/factory/support/MethodOverride;
@1.2-rc1
-###org/springframework/beans/factory/support/MethodOverrides

+###org/springframework/beans/factory/support/MethodReplacer
@1.1-rc1
+#reimplement(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
@1.2-rc1
-###org/springframework/beans/factory/support/MethodReplacer

+###org/springframework/beans/factory/support/PropertiesBeanDefinitionReader
@1.0-rc1
+#<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
+#setDefaultParentBean(Ljava/lang/String;)V
+#getDefaultParentBean()Ljava/lang/String;
+#loadBeanDefinitions(Lorg/springframework/core/io/Resource;)I
+#loadBeanDefinitions(Lorg/springframework/core/io/Resource;Ljava/lang/String;)I
+#registerBeanDefinitions(Ljava/util/ResourceBundle;)I
+#registerBeanDefinitions(Ljava/util/ResourceBundle;Ljava/lang/String;)I
+#registerBeanDefinitions(Ljava/util/Map;)I
+#registerBeanDefinitions(Ljava/util/Map;Ljava/lang/String;)I
+#registerBeanDefinitions(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)I
@1.2-rc1
-###org/springframework/beans/factory/support/PropertiesBeanDefinitionReader

+###org/springframework/beans/factory/support/ReplaceOverride
@1.1-rc1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#addTypeIdentifier(Ljava/lang/String;)V
+#matches(Ljava/lang/reflect/Method;Lorg/springframework/beans/factory/support/MethodOverrides;)Z
+#getMethodReplacerBeanName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/support/ReplaceOverride

+###org/springframework/beans/factory/support/RootBeanDefinition
@1.0-rc1
+#<init>(Ljava/lang/Class;I)V
+#<init>(Ljava/lang/Class;IZ)V
+#<init>(Ljava/lang/Class;Lorg/springframework/beans/MutablePropertyValues;)V
+#<init>(Ljava/lang/Class;Lorg/springframework/beans/MutablePropertyValues;Z)V
+#<init>(Ljava/lang/Class;Lorg/springframework/beans/factory/config/ConstructorArgumentValues;Lorg/springframework/beans/MutablePropertyValues;)V
+#<init>(Ljava/lang/String;Lorg/springframework/beans/factory/config/ConstructorArgumentValues;Lorg/springframework/beans/MutablePropertyValues;)V
+#<init>(Lorg/springframework/beans/factory/support/RootBeanDefinition;)V
+#getBeanClass()Ljava/lang/Class;
+#getBeanClassName()Ljava/lang/String;
+#getConstructorArgumentValues()Lorg/springframework/beans/factory/config/ConstructorArgumentValues;
+#hasConstructorArgumentValues()Z
+#setAutowireMode(I)V
+#getAutowireMode()I
+#getResolvedAutowireMode()I
+#setDependencyCheck(I)V
+#getDependencyCheck()I
+#setDependsOn([Ljava/lang/String;)V
+#getDependsOn()[Ljava/lang/String;
+#setInitMethodName(Ljava/lang/String;)V
+#getInitMethodName()Ljava/lang/String;
+#setDestroyMethodName(Ljava/lang/String;)V
+#getDestroyMethodName()Ljava/lang/String;
+#validate()V
+#toString()Ljava/lang/String;
@1.1-rc1
-#getConstructorArgumentValues()Lorg/springframework/beans/factory/config/ConstructorArgumentValues;
-#hasConstructorArgumentValues()Z
-#getBeanClass()Ljava/lang/Class;
-#getBeanClassName()Ljava/lang/String;
-#setAutowireMode(I)V
-#getAutowireMode()I
-#getResolvedAutowireMode()I
-#setDependencyCheck(I)V
-#getDependencyCheck()I
-#setDependsOn([Ljava/lang/String;)V
-#getDependsOn()[Ljava/lang/String;
-#setInitMethodName(Ljava/lang/String;)V
-#getInitMethodName()Ljava/lang/String;
-#setDestroyMethodName(Ljava/lang/String;)V
-#getDestroyMethodName()Ljava/lang/String;
@1.1.5
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Z)V
@1.2-rc1
-###org/springframework/beans/factory/support/RootBeanDefinition

+###org/springframework/beans/factory/support/SimpleInstantiationStrategy
@1.1-rc1
+#<init>()V
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
@1.1-rc2
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
-#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;
-#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
-#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
@1.1.4
+#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
-#instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
@1.2-rc1
-###org/springframework/beans/factory/support/SimpleInstantiationStrategy

+###org/springframework/beans/factory/support/StaticListableBeanFactory
@1.0-rc1
+#<init>()V
+#getBean(Ljava/lang/String;)Ljava/lang/Object;
+#getBean(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#containsBean(Ljava/lang/String;)Z
+#isSingleton(Ljava/lang/String;)Z
+#getAliases(Ljava/lang/String;)[Ljava/lang/String;
+#getBeanDefinitionCount()I
+#getBeanDefinitionNames()[Ljava/lang/String;
+#getBeanDefinitionNames(Ljava/lang/Class;)[Ljava/lang/String;
+#containsBeanDefinition(Ljava/lang/String;)Z
+#getBeansOfType(Ljava/lang/Class;ZZ)Ljava/util/Map;
+#addBean(Ljava/lang/String;Ljava/lang/Object;)V
@1.1.2
+#getType(Ljava/lang/String;)Ljava/lang/Class;
+#getBeansOfType(Ljava/lang/Class;)Ljava/util/Map;
@1.1.5
+#getBeanNamesForType(Ljava/lang/Class;)[Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/factory/support/StaticListableBeanFactory

+###org/springframework/beans/factory/xml/BeansDtdResolver
@1.0-rc1
+#<init>()V
+#resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;
@1.2-rc1
-###org/springframework/beans/factory/xml/BeansDtdResolver

+###org/springframework/beans/factory/xml/DefaultXmlBeanDefinitionParser
@1.0-rc1
+#<init>()V
+#registerBeanDefinitions(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/ClassLoader;Lorg/w3c/dom/Document;Lorg/springframework/core/io/Resource;)V
@1.1-rc2
+#registerBeanDefinitions(Lorg/springframework/beans/factory/support/BeanDefinitionReader;Lorg/w3c/dom/Document;Lorg/springframework/core/io/Resource;)I
-#registerBeanDefinitions(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/ClassLoader;Lorg/w3c/dom/Document;Lorg/springframework/core/io/Resource;)V
@1.2-rc1
-###org/springframework/beans/factory/xml/DefaultXmlBeanDefinitionParser

+###org/springframework/beans/factory/xml/XmlBeanDefinitionParser
@1.0-rc1
+#registerBeanDefinitions(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/ClassLoader;Lorg/w3c/dom/Document;Lorg/springframework/core/io/Resource;)V
@1.1-rc2
+#registerBeanDefinitions(Lorg/springframework/beans/factory/support/BeanDefinitionReader;Lorg/w3c/dom/Document;Lorg/springframework/core/io/Resource;)I
-#registerBeanDefinitions(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/ClassLoader;Lorg/w3c/dom/Document;Lorg/springframework/core/io/Resource;)V
@1.2-rc1
-###org/springframework/beans/factory/xml/XmlBeanDefinitionParser

+###org/springframework/beans/factory/xml/XmlBeanDefinitionReader
@1.0-rc1
+#<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
+#setValidating(Z)V
+#setEntityResolver(Lorg/xml/sax/EntityResolver;)V
+#setParserClass(Ljava/lang/Class;)V
+#loadBeanDefinitions(Lorg/springframework/core/io/Resource;)V
+#registerBeanDefinitions(Lorg/w3c/dom/Document;Lorg/springframework/core/io/Resource;)V
@1.1-rc2
+#loadBeanDefinitions(Lorg/springframework/core/io/Resource;)I
+#registerBeanDefinitions(Lorg/w3c/dom/Document;Lorg/springframework/core/io/Resource;)I
-#loadBeanDefinitions(Lorg/springframework/core/io/Resource;)V
-#registerBeanDefinitions(Lorg/w3c/dom/Document;Lorg/springframework/core/io/Resource;)V
@1.2-rc1
-###org/springframework/beans/factory/xml/XmlBeanDefinitionReader

+###org/springframework/beans/factory/xml/XmlBeanFactory
@1.0-rc1
+#<init>(Lorg/springframework/core/io/Resource;)V
+#<init>(Ljava/io/InputStream;)V
+#<init>(Lorg/springframework/core/io/Resource;Lorg/springframework/beans/factory/BeanFactory;)V
@1.2-rc1
-###org/springframework/beans/factory/xml/XmlBeanFactory

+###org/springframework/beans/propertyeditors/ByteArrayPropertyEditor
@1.0.1
+#<init>()V
+#setAsText(Ljava/lang/String;)V
+#getAsText()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/propertyeditors/ByteArrayPropertyEditor

+###org/springframework/beans/propertyeditors/ClassEditor
@1.0-rc1
+#<init>()V
+#setAsText(Ljava/lang/String;)V
+#getAsText()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/propertyeditors/ClassEditor

+###org/springframework/beans/propertyeditors/CustomBooleanEditor
@1.0-rc1
+#<init>(Z)V
+#setAsText(Ljava/lang/String;)V
@1.1-rc1
+#getAsText()Ljava/lang/String;
@1.1.4
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
@1.2-rc1
-###org/springframework/beans/propertyeditors/CustomBooleanEditor

+###org/springframework/beans/propertyeditors/CustomDateEditor
@1.0-rc1
+#<init>(Ljava/text/DateFormat;Z)V
+#setAsText(Ljava/lang/String;)V
+#getAsText()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/propertyeditors/CustomDateEditor

+###org/springframework/beans/propertyeditors/CustomNumberEditor
@1.0-rc1
+#<init>(Ljava/lang/Class;Ljava/text/NumberFormat;Z)V
+#setAsText(Ljava/lang/String;)V
+#getAsText()Ljava/lang/String;
@1.1-rc1
+#<init>(Ljava/lang/Class;Z)V
@1.2-rc1
-###org/springframework/beans/propertyeditors/CustomNumberEditor

+###org/springframework/beans/propertyeditors/FileEditor
@1.0-rc1
+#<init>()V
+#setAsText(Ljava/lang/String;)V
+#getAsText()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/propertyeditors/FileEditor

+###org/springframework/beans/propertyeditors/InputStreamEditor
@1.0.1
+#<init>()V
+#<init>(Lorg/springframework/core/io/ResourceEditor;)V
+#setAsText(Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/propertyeditors/InputStreamEditor

+###org/springframework/beans/propertyeditors/LocaleEditor
@1.0-rc1
+#<init>()V
+#setAsText(Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/propertyeditors/LocaleEditor

+###org/springframework/beans/propertyeditors/PropertiesEditor
@1.0-rc1
+#<init>()V
+#setAsText(Ljava/lang/String;)V
@1.1-rc1
+#setValue(Ljava/lang/Object;)V
@1.2-rc1
-###org/springframework/beans/propertyeditors/PropertiesEditor

+###org/springframework/beans/propertyeditors/StringArrayPropertyEditor
@1.0-rc1
+#<init>()V
+#setAsText(Ljava/lang/String;)V
+#getAsText()Ljava/lang/String;
@1.2-rc1
-###org/springframework/beans/propertyeditors/StringArrayPropertyEditor

+###org/springframework/beans/propertyeditors/StringTrimmerEditor
@1.0-rc1
+#<init>(Z)V
+#setAsText(Ljava/lang/String;)V
@1.1
+#getAsText()Ljava/lang/String;
@1.1.5
+#<init>(Ljava/lang/String;Z)V
@1.2-rc1
-###org/springframework/beans/propertyeditors/StringTrimmerEditor

+###org/springframework/beans/propertyeditors/URLEditor
@1.0-rc1
+#<init>()V
+#setAsText(Ljava/lang/String;)V
+#getAsText()Ljava/lang/String;
@1.1.2
+#<init>(Lorg/springframework/core/io/ResourceEditor;)V
@1.2-rc1
-###org/springframework/beans/propertyeditors/URLEditor

+###org/springframework/beans/support/ArgumentConvertingMethodInvoker
@1.1-rc1
+#<init>()V
+#registerCustomEditor(Ljava/lang/Class;Ljava/beans/PropertyEditor;)V
+#prepare()V
@1.2-rc1
-###org/springframework/beans/support/ArgumentConvertingMethodInvoker

+###org/springframework/beans/support/MutableSortDefinition
@1.0-rc1
+#<init>()V
+#<init>(Lorg/springframework/beans/support/SortDefinition;)V
+#<init>(Ljava/lang/String;ZZ)V
+#<init>(Z)V
+#setProperty(Ljava/lang/String;)V
+#getProperty()Ljava/lang/String;
+#setIgnoreCase(Z)V
+#isIgnoreCase()Z
+#setAscending(Z)V
+#isAscending()Z
+#setToggleAscendingOnProperty(Z)V
+#isToggleAscendingOnProperty()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.2-rc1
-###org/springframework/beans/support/MutableSortDefinition

+###org/springframework/beans/support/PagedListHolder
@1.0-rc1
+#<init>()V
+#<init>(Ljava/util/List;)V
+#setSource(Ljava/util/List;)V
+#getSource()Ljava/util/List;
+#getRefreshDate()Ljava/util/Date;
+#setSort(Lorg/springframework/beans/support/SortDefinition;)V
+#getSort()Lorg/springframework/beans/support/SortDefinition;
+#setPageSize(I)V
+#getPageSize()I
+#setPage(I)V
+#getPage()I
+#setMaxLinkedPages(I)V
+#getMaxLinkedPages()I
+#getNrOfPages()I
+#isFirstPage()Z
+#isLastPage()Z
+#previousPage()V
+#nextPage()V
+#getNrOfElements()I
+#getFirstElementOnPage()I
+#getLastElementOnPage()I
+#getPageList()Ljava/util/List;
+#getFirstLinkedPage()I
+#getLastLinkedPage()I
+#resort()V
@1.1
+#getPageCount()I
@1.2-rc1
-###org/springframework/beans/support/PagedListHolder

+###org/springframework/beans/support/PagedListSourceProvider
@1.0-rc1
+#loadList(Ljava/util/Locale;Ljava/lang/Object;)Ljava/util/List;
@1.2-rc1
-###org/springframework/beans/support/PagedListSourceProvider

+###org/springframework/beans/support/PropertyComparator
@1.0-rc1
+#<init>(Lorg/springframework/beans/support/SortDefinition;)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#sort(Ljava/util/List;Lorg/springframework/beans/support/SortDefinition;)V
+#sort([Ljava/lang/Object;Lorg/springframework/beans/support/SortDefinition;)V
@1.2-rc1
-###org/springframework/beans/support/PropertyComparator

+###org/springframework/beans/support/RefreshablePagedListHolder
@1.0-rc1
+#<init>()V
+#<init>(Lorg/springframework/beans/support/PagedListSourceProvider;)V
+#setSourceProvider(Lorg/springframework/beans/support/PagedListSourceProvider;)V
+#getSourceProvider()Lorg/springframework/beans/support/PagedListSourceProvider;
+#setLocale(Ljava/util/Locale;)V
+#getLocale()Ljava/util/Locale;
+#setFilter(Ljava/lang/Object;)V
+#getFilter()Ljava/lang/Object;
+#refresh(Z)V
@1.2-rc1
-###org/springframework/beans/support/RefreshablePagedListHolder

+###org/springframework/beans/support/SortDefinition
@1.0-rc1
+#getProperty()Ljava/lang/String;
+#isIgnoreCase()Z
+#isAscending()Z
@1.2-rc1
-###org/springframework/beans/support/SortDefinition

+###org/springframework/util/MethodInvoker$VoidType
@1.0
+#<init>()V
@2.0-rc2
-###org/springframework/util/MethodInvoker$VoidType

+###org/springframework/core/io/buffer/DataBufferLimitException
@5.1.11.RELEASE
+#<init>(Ljava/lang/String;)V
@5.2.0.RELEASE
-###org/springframework/core/io/buffer/DataBufferLimitException

+###org/springframework/core/io/buffer/LimitedDataBufferList
@5.1.11.RELEASE
+#<init>(I)V
+#add(Lorg/springframework/core/io/buffer/DataBuffer;)Z
+#add(ILorg/springframework/core/io/buffer/DataBuffer;)V
+#addAll(Ljava/util/Collection;)Z
+#addAll(ILjava/util/Collection;)Z
+#remove(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#removeIf(Ljava/util/function/Predicate;)Z
+#set(ILorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#clear()V
+#releaseAndClear()V
+#remove(I)Ljava/lang/Object;
+#add(ILjava/lang/Object;)V
+#add(Ljava/lang/Object;)Z
+#set(ILjava/lang/Object;)Ljava/lang/Object;
@5.2.0.RELEASE
-###org/springframework/core/io/buffer/LimitedDataBufferList

+###org/springframework/beans/factory/FactoryBeanNotInitializedException
@1.1.5
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
@1.2-rc1
-###org/springframework/beans/factory/FactoryBeanNotInitializedException

+###org/springframework/beans/factory/config/PropertyPathFactoryBean
@1.1.2
+#<init>()V
+#setTargetObject(Ljava/lang/Object;)V
+#setTargetBeanName(Ljava/lang/String;)V
+#setPropertyPath(Ljava/lang/String;)V
+#setResultType(Ljava/lang/Class;)V
+#setBeanName(Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.2-rc1
-###org/springframework/beans/factory/config/PropertyPathFactoryBean

+###org/springframework/beans/factory/config/ServiceLocatorFactoryBean
@1.1.4
+#<init>()V
+#setServiceLocatorInterface(Ljava/lang/Class;)V
+#setServiceMappings(Ljava/util/Properties;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.2-rc1
-###org/springframework/beans/factory/config/ServiceLocatorFactoryBean

+###org/springframework/beans/factory/support/AutowireUtils
@1.1.2
+#<init>()V
+#sortConstructors([Ljava/lang/reflect/Constructor;)V
+#getTypeDifferenceWeight([Ljava/lang/Class;[Ljava/lang/Object;)I
@1.2-rc1
-###org/springframework/beans/factory/support/AutowireUtils

+###org/springframework/beans/propertyeditors/CustomCollectionEditor
@1.1.3
+#<init>(Ljava/lang/Class;)V
+#setAsText(Ljava/lang/String;)V
+#setValue(Ljava/lang/Object;)V
@1.2-rc1
-###org/springframework/beans/propertyeditors/CustomCollectionEditor

+###org/springframework/core/io/AbstractPathResolvingPropertyEditor
@1.1.2
+#<init>()V
@1.2.5
-###org/springframework/core/io/AbstractPathResolvingPropertyEditor

+###org/springframework/asm/util/TraceClassVisitor
@3.2.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/io/PrintWriter;)V
@4.0.3.RELEASE
-###org/springframework/asm/util/TraceClassVisitor

+###org/springframework/cglib/transform/impl/MemorySafeUndeclaredThrowableStrategy
@3.2.4.RELEASE
+#<init>(Ljava/lang/Class;)V
@4.0.2.RELEASE
-###org/springframework/cglib/transform/impl/MemorySafeUndeclaredThrowableStrategy

+###org/springframework/asm/commons/AdviceAdapter
@2.5
+#<init>(Lorg/springframework/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;)V
+#visitLabel(Lorg/springframework/asm/Label;)V
+#visitInsn(I)V
+#visitVarInsn(II)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitIntInsn(II)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILorg/springframework/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V
+#visitTableSwitchInsn(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V
@3.0.0.RELEASE
-###org/springframework/asm/commons/AdviceAdapter

+###org/springframework/asm/commons/AnalyzerAdapter
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/springframework/asm/MethodVisitor;)V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/springframework/asm/Label;)V
+#visitLabel(Lorg/springframework/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitMaxs(II)V
@3.2.9.RELEASE
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
@4.0.0.RELEASE
-###org/springframework/asm/commons/AnalyzerAdapter

+###org/springframework/asm/commons/CodeSizeEvaluator
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/MethodVisitor;)V
+#getMinSize()I
+#getMaxSize()I
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/springframework/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
@3.2.9.RELEASE
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
@4.0.0.RELEASE
-###org/springframework/asm/commons/CodeSizeEvaluator

+###org/springframework/asm/commons/GeneratorAdapter
@2.5
+#<init>(Lorg/springframework/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;)V
+#<init>(ILorg/springframework/asm/commons/Method;Lorg/springframework/asm/MethodVisitor;)V
+#<init>(ILorg/springframework/asm/commons/Method;Ljava/lang/String;[Lorg/springframework/asm/Type;Lorg/springframework/asm/ClassVisitor;)V
+#push(Z)V
+#push(I)V
+#push(J)V
+#push(F)V
+#push(D)V
+#push(Ljava/lang/String;)V
+#push(Lorg/springframework/asm/Type;)V
+#loadThis()V
+#loadArg(I)V
+#loadArgs(II)V
+#loadArgs()V
+#loadArgArray()V
+#storeArg(I)V
+#newLocal(Lorg/springframework/asm/Type;)I
+#getLocalType(I)Lorg/springframework/asm/Type;
+#loadLocal(I)V
+#loadLocal(ILorg/springframework/asm/Type;)V
+#storeLocal(I)V
+#storeLocal(ILorg/springframework/asm/Type;)V
+#arrayLoad(Lorg/springframework/asm/Type;)V
+#arrayStore(Lorg/springframework/asm/Type;)V
+#pop()V
+#pop2()V
+#dup()V
+#dup2()V
+#dupX1()V
+#dupX2()V
+#dup2X1()V
+#dup2X2()V
+#swap()V
+#swap(Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V
+#math(ILorg/springframework/asm/Type;)V
+#not()V
+#iinc(II)V
+#cast(Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V
+#box(Lorg/springframework/asm/Type;)V
+#unbox(Lorg/springframework/asm/Type;)V
+#newLabel()Lorg/springframework/asm/Label;
+#mark(Lorg/springframework/asm/Label;)V
+#mark()Lorg/springframework/asm/Label;
+#ifCmp(Lorg/springframework/asm/Type;ILorg/springframework/asm/Label;)V
+#ifICmp(ILorg/springframework/asm/Label;)V
+#ifZCmp(ILorg/springframework/asm/Label;)V
+#ifNull(Lorg/springframework/asm/Label;)V
+#ifNonNull(Lorg/springframework/asm/Label;)V
+#goTo(Lorg/springframework/asm/Label;)V
+#ret(I)V
+#tableSwitch([ILorg/springframework/asm/commons/TableSwitchGenerator;)V
+#tableSwitch([ILorg/springframework/asm/commons/TableSwitchGenerator;Z)V
+#returnValue()V
+#getStatic(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#putStatic(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#getField(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#putField(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V
+#invokeVirtual(Lorg/springframework/asm/Type;Lorg/springframework/asm/commons/Method;)V
+#invokeConstructor(Lorg/springframework/asm/Type;Lorg/springframework/asm/commons/Method;)V
+#invokeStatic(Lorg/springframework/asm/Type;Lorg/springframework/asm/commons/Method;)V
+#invokeInterface(Lorg/springframework/asm/Type;Lorg/springframework/asm/commons/Method;)V
+#newInstance(Lorg/springframework/asm/Type;)V
+#newArray(Lorg/springframework/asm/Type;)V
+#arrayLength()V
+#throwException()V
+#throwException(Lorg/springframework/asm/Type;Ljava/lang/String;)V
+#checkCast(Lorg/springframework/asm/Type;)V
+#instanceOf(Lorg/springframework/asm/Type;)V
+#monitorEnter()V
+#monitorExit()V
+#endMethod()V
+#catchException(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Type;)V
@3.0.0.RELEASE
-###org/springframework/asm/commons/GeneratorAdapter

+###org/springframework/asm/commons/InstructionAdapter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/MethodVisitor;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/springframework/asm/Label;)V
+#visitLabel(Lorg/springframework/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#nop()V
+#aconst(Ljava/lang/Object;)V
+#iconst(I)V
+#lconst(J)V
+#fconst(F)V
+#dconst(D)V
+#tconst(Lorg/springframework/asm/Type;)V
+#hconst(Lorg/springframework/asm/Handle;)V
+#load(ILorg/springframework/asm/Type;)V
+#aload(Lorg/springframework/asm/Type;)V
+#store(ILorg/springframework/asm/Type;)V
+#astore(Lorg/springframework/asm/Type;)V
+#pop()V
+#pop2()V
+#dup()V
+#dup2()V
+#dupX1()V
+#dupX2()V
+#dup2X1()V
+#dup2X2()V
+#swap()V
+#add(Lorg/springframework/asm/Type;)V
+#sub(Lorg/springframework/asm/Type;)V
+#mul(Lorg/springframework/asm/Type;)V
+#div(Lorg/springframework/asm/Type;)V
+#rem(Lorg/springframework/asm/Type;)V
+#neg(Lorg/springframework/asm/Type;)V
+#shl(Lorg/springframework/asm/Type;)V
+#shr(Lorg/springframework/asm/Type;)V
+#ushr(Lorg/springframework/asm/Type;)V
+#and(Lorg/springframework/asm/Type;)V
+#or(Lorg/springframework/asm/Type;)V
+#xor(Lorg/springframework/asm/Type;)V
+#iinc(II)V
+#cast(Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V
+#lcmp()V
+#cmpl(Lorg/springframework/asm/Type;)V
+#cmpg(Lorg/springframework/asm/Type;)V
+#ifeq(Lorg/springframework/asm/Label;)V
+#ifne(Lorg/springframework/asm/Label;)V
+#iflt(Lorg/springframework/asm/Label;)V
+#ifge(Lorg/springframework/asm/Label;)V
+#ifgt(Lorg/springframework/asm/Label;)V
+#ifle(Lorg/springframework/asm/Label;)V
+#ificmpeq(Lorg/springframework/asm/Label;)V
+#ificmpne(Lorg/springframework/asm/Label;)V
+#ificmplt(Lorg/springframework/asm/Label;)V
+#ificmpge(Lorg/springframework/asm/Label;)V
+#ificmpgt(Lorg/springframework/asm/Label;)V
+#ificmple(Lorg/springframework/asm/Label;)V
+#ifacmpeq(Lorg/springframework/asm/Label;)V
+#ifacmpne(Lorg/springframework/asm/Label;)V
+#goTo(Lorg/springframework/asm/Label;)V
+#jsr(Lorg/springframework/asm/Label;)V
+#ret(I)V
+#tableswitch(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V
+#lookupswitch(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V
+#areturn(Lorg/springframework/asm/Type;)V
+#getstatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#putstatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getfield(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#putfield(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokevirtual(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokespecial(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokestatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokeinterface(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#invokedynamic(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V
+#anew(Lorg/springframework/asm/Type;)V
+#newarray(Lorg/springframework/asm/Type;)V
+#arraylength()V
+#athrow()V
+#checkcast(Lorg/springframework/asm/Type;)V
+#instanceOf(Lorg/springframework/asm/Type;)V
+#monitorenter()V
+#monitorexit()V
+#multianewarray(Ljava/lang/String;I)V
+#ifnull(Lorg/springframework/asm/Label;)V
+#ifnonnull(Lorg/springframework/asm/Label;)V
+#mark(Lorg/springframework/asm/Label;)V
@3.2.9.RELEASE
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#invokevirtual(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#invokespecial(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#invokestatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
@4.0.0.RELEASE
-###org/springframework/asm/commons/InstructionAdapter

+###org/springframework/asm/commons/JSRInlinerAdapter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitJumpInsn(ILorg/springframework/asm/Label;)V
+#visitEnd()V
@4.0.0.RELEASE
-###org/springframework/asm/commons/JSRInlinerAdapter

+###org/springframework/asm/commons/LocalVariablesSorter
@2.5
+#<init>(ILjava/lang/String;Lorg/springframework/asm/MethodVisitor;)V
+#visitVarInsn(II)V
+#visitIincInsn(II)V
+#visitMaxs(II)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V
@3.0.0.RELEASE
-###org/springframework/asm/commons/LocalVariablesSorter

+###org/springframework/asm/commons/Method
@2.5
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;)V
+#getMethod(Ljava/lang/String;)Lorg/springframework/asm/commons/Method;
+#getName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getReturnType()Lorg/springframework/asm/Type;
+#getArgumentTypes()[Lorg/springframework/asm/Type;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.RELEASE
-###org/springframework/asm/commons/Method

+###org/springframework/asm/commons/Remapper
@3.2.0.RELEASE
+#<init>()V
+#mapDesc(Ljava/lang/String;)Ljava/lang/String;
+#mapType(Ljava/lang/String;)Ljava/lang/String;
+#mapTypes([Ljava/lang/String;)[Ljava/lang/String;
+#mapMethodDesc(Ljava/lang/String;)Ljava/lang/String;
+#mapValue(Ljava/lang/Object;)Ljava/lang/Object;
+#mapSignature(Ljava/lang/String;Z)Ljava/lang/String;
+#mapMethodName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapInvokeDynamicMethodName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapFieldName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#map(Ljava/lang/String;)Ljava/lang/String;
@4.0.0.RELEASE
-###org/springframework/asm/commons/Remapper

+###org/springframework/asm/commons/RemappingAnnotationAdapter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/AnnotationVisitor;Lorg/springframework/asm/commons/Remapper;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;
@4.0.0.RELEASE
-###org/springframework/asm/commons/RemappingAnnotationAdapter

+###org/springframework/asm/commons/RemappingClassAdapter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/ClassVisitor;Lorg/springframework/asm/commons/Remapper;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@3.2.9.RELEASE
+#visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
@4.0.0.RELEASE
-###org/springframework/asm/commons/RemappingClassAdapter

+###org/springframework/asm/commons/RemappingFieldAdapter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/FieldVisitor;Lorg/springframework/asm/commons/Remapper;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
@3.2.9.RELEASE
+#visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
@4.0.0.RELEASE
-###org/springframework/asm/commons/RemappingFieldAdapter

+###org/springframework/asm/commons/RemappingMethodAdapter
@3.2.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/asm/MethodVisitor;Lorg/springframework/asm/commons/Remapper;)V
+#visitAnnotationDefault()Lorg/springframework/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/lang/String;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V
@3.2.9.RELEASE
+#visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInsnAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitTryCatchAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitLocalVariableAnnotation(ILorg/springframework/asm/TypePath;[Lorg/springframework/asm/Label;[Lorg/springframework/asm/Label;[ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
@4.0.0.RELEASE
-###org/springframework/asm/commons/RemappingMethodAdapter

+###org/springframework/asm/commons/RemappingSignatureAdapter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/signature/SignatureVisitor;Lorg/springframework/asm/commons/Remapper;)V
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitClassBound()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/springframework/asm/signature/SignatureVisitor;
+#visitEnd()V
@4.0.0.RELEASE
-###org/springframework/asm/commons/RemappingSignatureAdapter

+###org/springframework/asm/commons/SerialVersionUIDAdder
@2.5
+#<init>(Lorg/springframework/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
+#visitEnd()V
@3.0.0.RELEASE
-###org/springframework/asm/commons/SerialVersionUIDAdder

+###org/springframework/asm/commons/SimpleRemapper
@3.2.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#mapMethodName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapFieldName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#map(Ljava/lang/String;)Ljava/lang/String;
@3.2.14.RELEASE
+#mapInvokeDynamicMethodName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@4.0.0.RELEASE
-###org/springframework/asm/commons/SimpleRemapper

+###org/springframework/asm/commons/StaticInitMerger
@2.5
+#<init>(Ljava/lang/String;Lorg/springframework/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#visitEnd()V
@3.0.0.RELEASE
-###org/springframework/asm/commons/StaticInitMerger

+###org/springframework/asm/commons/TableSwitchGenerator
@2.5
+#generateCase(ILorg/springframework/asm/Label;)V
+#generateDefault()V
@3.0.0.RELEASE
-###org/springframework/asm/commons/TableSwitchGenerator

+###org/springframework/asm/commons/TryCatchBlockSorter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/asm/MethodVisitor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitEnd()V
@4.0.0.RELEASE
-###org/springframework/asm/commons/TryCatchBlockSorter

+###org/springframework/asm/signature/SignatureReader
@2.5
+#<init>(Ljava/lang/String;)V
+#accept(Lorg/springframework/asm/signature/SignatureVisitor;)V
+#acceptType(Lorg/springframework/asm/signature/SignatureVisitor;)V
@3.0.0.RELEASE
-###org/springframework/asm/signature/SignatureReader

+###org/springframework/asm/signature/SignatureVisitor
@2.5
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/springframework/asm/signature/SignatureVisitor;
+#visitEnd()V
@3.0.0.RELEASE
-###org/springframework/asm/signature/SignatureVisitor

+###org/springframework/asm/signature/SignatureWriter
@2.5
+#<init>()V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/springframework/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/springframework/asm/signature/SignatureVisitor;
+#visitEnd()V
+#toString()Ljava/lang/String;
@3.0.0.RELEASE
-###org/springframework/asm/signature/SignatureWriter

+###org/springframework/core/io/buffer/DataBufferUtils$Matcher
@5.2.0.RELEASE
+#match(Lorg/springframework/core/io/buffer/DataBuffer;)I
+#delimiter()[B
+#reset()V

+###org/springframework/core/io/buffer/DataBufferWrapper
@5.2.0.RELEASE
+#<init>(Lorg/springframework/core/io/buffer/DataBuffer;)V
+#dataBuffer()Lorg/springframework/core/io/buffer/DataBuffer;
+#factory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#indexOf(Ljava/util/function/IntPredicate;I)I
+#lastIndexOf(Ljava/util/function/IntPredicate;I)I
+#readableByteCount()I
+#writableByteCount()I
+#capacity()I
+#capacity(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#ensureCapacity(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#readPosition()I
+#readPosition(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#writePosition()I
+#writePosition(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#getByte(I)B
+#read()B
+#read([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#read([BII)Lorg/springframework/core/io/buffer/DataBuffer;
+#write(B)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([BII)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#write(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/springframework/core/io/buffer/DataBuffer;
+#slice(II)Lorg/springframework/core/io/buffer/DataBuffer;
+#retainedSlice(II)Lorg/springframework/core/io/buffer/DataBuffer;
+#asByteBuffer()Ljava/nio/ByteBuffer;
+#asByteBuffer(II)Ljava/nio/ByteBuffer;
+#asInputStream()Ljava/io/InputStream;
+#asInputStream(Z)Ljava/io/InputStream;
+#asOutputStream()Ljava/io/OutputStream;
+#toString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#toString(IILjava/nio/charset/Charset;)Ljava/lang/String;
@6.0.0
*#capacity(I)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
*#ensureCapacity(I)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
+#ensureWritable(I)Lorg/springframework/core/io/buffer/DataBuffer;
*#slice(II)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
*#retainedSlice(II)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
+#split(I)Lorg/springframework/core/io/buffer/DataBuffer;
*#asByteBuffer()Ljava/nio/ByteBuffer;[deprecated]
*#asByteBuffer(II)Ljava/nio/ByteBuffer;[deprecated]
+#toByteBuffer()Ljava/nio/ByteBuffer;
+#toByteBuffer(II)Ljava/nio/ByteBuffer;
@6.0.5
*#toByteBuffer()Ljava/nio/ByteBuffer;[deprecated]
*#toByteBuffer(II)Ljava/nio/ByteBuffer;[deprecated]
+#toByteBuffer(Ljava/nio/ByteBuffer;)V
+#toByteBuffer(ILjava/nio/ByteBuffer;II)V
+#readableByteBuffers()Lorg/springframework/core/io/buffer/DataBuffer$ByteBufferIterator;
+#writableByteBuffers()Lorg/springframework/core/io/buffer/DataBuffer$ByteBufferIterator;

+###org/springframework/core/log/LogMessage
@5.2.0.RELEASE
+#<init>()V
+#length()I
+#charAt(I)C
+#subSequence(II)Ljava/lang/CharSequence;
+#toString()Ljava/lang/String;
+#of(Ljava/util/function/Supplier;)Lorg/springframework/core/log/LogMessage;
+#format(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/core/log/LogMessage;
+#format(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/core/log/LogMessage;
+#format(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/core/log/LogMessage;
+#format(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/core/log/LogMessage;
+#format(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/core/log/LogMessage;

+###org/springframework/core/log/LogAccessor
@5.2.0.RELEASE
+#<init>(Lorg/apache/commons/logging/Log;)V
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;)V
+#getLog()Lorg/apache/commons/logging/Log;
+#isFatalEnabled()Z
+#isErrorEnabled()Z
+#isWarnEnabled()Z
+#isInfoEnabled()Z
+#isDebugEnabled()Z
+#isTraceEnabled()Z
+#fatal(Ljava/lang/CharSequence;)V
+#fatal(Ljava/lang/Throwable;Ljava/lang/CharSequence;)V
+#error(Ljava/lang/CharSequence;)V
+#error(Ljava/lang/Throwable;Ljava/lang/CharSequence;)V
+#warn(Ljava/lang/CharSequence;)V
+#warn(Ljava/lang/Throwable;Ljava/lang/CharSequence;)V
+#info(Ljava/lang/CharSequence;)V
+#info(Ljava/lang/Throwable;Ljava/lang/CharSequence;)V
+#debug(Ljava/lang/CharSequence;)V
+#debug(Ljava/lang/Throwable;Ljava/lang/CharSequence;)V
+#trace(Ljava/lang/CharSequence;)V
+#trace(Ljava/lang/Throwable;Ljava/lang/CharSequence;)V
+#fatal(Ljava/util/function/Supplier;)V
+#fatal(Ljava/lang/Throwable;Ljava/util/function/Supplier;)V
+#error(Ljava/util/function/Supplier;)V
+#error(Ljava/lang/Throwable;Ljava/util/function/Supplier;)V
+#warn(Ljava/util/function/Supplier;)V
+#warn(Ljava/lang/Throwable;Ljava/util/function/Supplier;)V
+#info(Ljava/util/function/Supplier;)V
+#info(Ljava/lang/Throwable;Ljava/util/function/Supplier;)V
+#debug(Ljava/util/function/Supplier;)V
+#debug(Ljava/lang/Throwable;Ljava/util/function/Supplier;)V
+#trace(Ljava/util/function/Supplier;)V
+#trace(Ljava/lang/Throwable;Ljava/util/function/Supplier;)V

+###org/springframework/core/annotation/MergedAnnotationCollectors
@5.2.0.RELEASE
+#toAnnotationSet()Ljava/util/stream/Collector;
+#toAnnotationArray()Ljava/util/stream/Collector;
+#toAnnotationArray(Ljava/util/function/IntFunction;)Ljava/util/stream/Collector;
+#toMultiValueMap([Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/util/stream/Collector;
+#toMultiValueMap(Ljava/util/function/Function;[Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/util/stream/Collector;

+###org/springframework/core/annotation/MergedAnnotations$SearchStrategy
@5.2.0.RELEASE
+#values()[Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;

+###org/springframework/core/annotation/MergedAnnotationPredicates
@5.2.0.RELEASE
+#typeIn([Ljava/lang/String;)Ljava/util/function/Predicate;
+#typeIn([Ljava/lang/Class;)Ljava/util/function/Predicate;
+#typeIn(Ljava/util/Collection;)Ljava/util/function/Predicate;
+#firstRunOf(Ljava/util/function/Function;)Ljava/util/function/Predicate;
+#unique(Ljava/util/function/Function;)Ljava/util/function/Predicate;

+###org/springframework/core/annotation/MergedAnnotations
@5.2.0.RELEASE
+#isPresent(Ljava/lang/Class;)Z
+#isPresent(Ljava/lang/String;)Z
+#isDirectlyPresent(Ljava/lang/Class;)Z
+#isDirectlyPresent(Ljava/lang/String;)Z
+#get(Ljava/lang/Class;)Lorg/springframework/core/annotation/MergedAnnotation;
+#get(Ljava/lang/Class;Ljava/util/function/Predicate;)Lorg/springframework/core/annotation/MergedAnnotation;
+#get(Ljava/lang/Class;Ljava/util/function/Predicate;Lorg/springframework/core/annotation/MergedAnnotationSelector;)Lorg/springframework/core/annotation/MergedAnnotation;
+#get(Ljava/lang/String;)Lorg/springframework/core/annotation/MergedAnnotation;
+#get(Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/springframework/core/annotation/MergedAnnotation;
+#get(Ljava/lang/String;Ljava/util/function/Predicate;Lorg/springframework/core/annotation/MergedAnnotationSelector;)Lorg/springframework/core/annotation/MergedAnnotation;
+#stream(Ljava/lang/Class;)Ljava/util/stream/Stream;
+#stream(Ljava/lang/String;)Ljava/util/stream/Stream;
+#stream()Ljava/util/stream/Stream;
+#from(Ljava/lang/reflect/AnnotatedElement;)Lorg/springframework/core/annotation/MergedAnnotations;
+#from(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;)Lorg/springframework/core/annotation/MergedAnnotations;
+#from(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/RepeatableContainers;)Lorg/springframework/core/annotation/MergedAnnotations;
+#from(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/MergedAnnotations;
+#from([Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/MergedAnnotations;
+#from(Ljava/lang/Object;[Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/MergedAnnotations;
+#from(Ljava/lang/Object;[Ljava/lang/annotation/Annotation;Lorg/springframework/core/annotation/RepeatableContainers;)Lorg/springframework/core/annotation/MergedAnnotations;
+#from(Ljava/lang/Object;[Ljava/lang/annotation/Annotation;Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/MergedAnnotations;
+#of(Ljava/util/Collection;)Lorg/springframework/core/annotation/MergedAnnotations;
@6.0.0
+#search(Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;)Lorg/springframework/core/annotation/MergedAnnotations$Search;

+###org/springframework/core/annotation/RepeatableContainers
@5.2.0.RELEASE
+#and(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/core/annotation/RepeatableContainers;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#standardRepeatables()Lorg/springframework/core/annotation/RepeatableContainers;
+#of(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/core/annotation/RepeatableContainers;
+#none()Lorg/springframework/core/annotation/RepeatableContainers;

+###org/springframework/core/annotation/MergedAnnotationSelector
@5.2.0.RELEASE
+#isBestCandidate(Lorg/springframework/core/annotation/MergedAnnotation;)Z
+#select(Lorg/springframework/core/annotation/MergedAnnotation;Lorg/springframework/core/annotation/MergedAnnotation;)Lorg/springframework/core/annotation/MergedAnnotation;

+###org/springframework/core/annotation/MergedAnnotation
@5.2.0.RELEASE
+#getType()Ljava/lang/Class;
+#isPresent()Z
+#isDirectlyPresent()Z
+#isMetaPresent()Z
+#getDistance()I
+#getAggregateIndex()I
+#getSource()Ljava/lang/Object;
+#getMetaSource()Lorg/springframework/core/annotation/MergedAnnotation;
+#getRoot()Lorg/springframework/core/annotation/MergedAnnotation;
+#getMetaTypes()Ljava/util/List;
+#hasNonDefaultValue(Ljava/lang/String;)Z
+#hasDefaultValue(Ljava/lang/String;)Z
+#getByte(Ljava/lang/String;)B
+#getByteArray(Ljava/lang/String;)[B
+#getBoolean(Ljava/lang/String;)Z
+#getBooleanArray(Ljava/lang/String;)[Z
+#getChar(Ljava/lang/String;)C
+#getCharArray(Ljava/lang/String;)[C
+#getShort(Ljava/lang/String;)S
+#getShortArray(Ljava/lang/String;)[S
+#getInt(Ljava/lang/String;)I
+#getIntArray(Ljava/lang/String;)[I
+#getLong(Ljava/lang/String;)J
+#getLongArray(Ljava/lang/String;)[J
+#getDouble(Ljava/lang/String;)D
+#getDoubleArray(Ljava/lang/String;)[D
+#getFloat(Ljava/lang/String;)F
+#getFloatArray(Ljava/lang/String;)[F
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getStringArray(Ljava/lang/String;)[Ljava/lang/String;
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
+#getClassArray(Ljava/lang/String;)[Ljava/lang/Class;
+#getEnum(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Enum;
+#getEnumArray(Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/Enum;
+#getAnnotation(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/core/annotation/MergedAnnotation;
+#getAnnotationArray(Ljava/lang/String;Ljava/lang/Class;)[Lorg/springframework/core/annotation/MergedAnnotation;
+#getValue(Ljava/lang/String;)Ljava/util/Optional;
+#getValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;
+#getDefaultValue(Ljava/lang/String;)Ljava/util/Optional;
+#getDefaultValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;
+#filterDefaultValues()Lorg/springframework/core/annotation/MergedAnnotation;
+#filterAttributes(Ljava/util/function/Predicate;)Lorg/springframework/core/annotation/MergedAnnotation;
+#withNonMergedAttributes()Lorg/springframework/core/annotation/MergedAnnotation;
+#asAnnotationAttributes([Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Lorg/springframework/core/annotation/AnnotationAttributes;
+#asMap([Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/util/Map;
+#asMap(Ljava/util/function/Function;[Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/util/Map;
+#synthesize()Ljava/lang/annotation/Annotation;
+#synthesize(Ljava/util/function/Predicate;)Ljava/util/Optional;
+#missing()Lorg/springframework/core/annotation/MergedAnnotation;
+#from(Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/MergedAnnotation;
+#from(Ljava/lang/Object;Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/MergedAnnotation;
+#of(Ljava/lang/Class;)Lorg/springframework/core/annotation/MergedAnnotation;
+#of(Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/core/annotation/MergedAnnotation;
+#of(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/core/annotation/MergedAnnotation;
+#of(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/core/annotation/MergedAnnotation;

+###org/springframework/core/annotation/MergedAnnotationSelectors
@5.2.0.RELEASE
+#nearest()Lorg/springframework/core/annotation/MergedAnnotationSelector;
+#firstDirectlyDeclared()Lorg/springframework/core/annotation/MergedAnnotationSelector;

+###org/springframework/core/annotation/MergedAnnotation$Adapt
@5.2.0.RELEASE
+#values()[Lorg/springframework/core/annotation/MergedAnnotation$Adapt;
+#valueOf(Ljava/lang/String;)Lorg/springframework/core/annotation/MergedAnnotation$Adapt;
+#values(ZZ)[Lorg/springframework/core/annotation/MergedAnnotation$Adapt;

+###org/springframework/core/annotation/AnnotationFilter
@5.2.0.RELEASE
+#matches(Ljava/lang/annotation/Annotation;)Z
+#matches(Ljava/lang/Class;)Z
+#matches(Ljava/lang/String;)Z
+#packages([Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationFilter;

+###org/springframework/core/ReactiveAdapterRegistry$SpringCoreBlockHoundIntegration
@5.2.4.RELEASE
+#<init>()V
+#applyTo(Lreactor/blockhound/BlockHound$Builder;)V

+###org/springframework/cglib/core/ClassLoaderAwareGeneratorStrategy
@5.2.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#generate(Lorg/springframework/cglib/core/ClassGenerator;)[B

+###org/springframework/asm/RecordComponentVisitor
@5.2.4.RELEASE
+#<init>(I)V[deprecated]
+#<init>(ILorg/springframework/asm/RecordComponentVisitor;)V[deprecated]
+#getDelegateExperimental()Lorg/springframework/asm/RecordComponentVisitor;[deprecated]
+#visitAnnotationExperimental(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;[deprecated]
+#visitTypeAnnotationExperimental(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;[deprecated]
+#visitAttributeExperimental(Lorg/springframework/asm/Attribute;)V[deprecated]
+#visitEndExperimental()V[deprecated]
@5.3.0
+#getDelegate()Lorg/springframework/asm/RecordComponentVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitEnd()V
-#getDelegateExperimental()Lorg/springframework/asm/RecordComponentVisitor;[deprecated]
-#visitAnnotationExperimental(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;[deprecated]
-#visitTypeAnnotationExperimental(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;[deprecated]
-#visitAttributeExperimental(Lorg/springframework/asm/Attribute;)V[deprecated]
-#visitEndExperimental()V[deprecated]
@5.3.20
-#<init>(I)V
-#<init>(ILorg/springframework/asm/RecordComponentVisitor;)V

+###org/springframework/util/SimpleRouteMatcher
@5.2.0.RELEASE
+#<init>(Lorg/springframework/util/PathMatcher;)V
+#getPathMatcher()Lorg/springframework/util/PathMatcher;
+#parseRoute(Ljava/lang/String;)Lorg/springframework/util/RouteMatcher$Route;
+#isPattern(Ljava/lang/String;)Z
+#combine(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#match(Ljava/lang/String;Lorg/springframework/util/RouteMatcher$Route;)Z
+#matchAndExtract(Ljava/lang/String;Lorg/springframework/util/RouteMatcher$Route;)Ljava/util/Map;
+#getPatternComparator(Lorg/springframework/util/RouteMatcher$Route;)Ljava/util/Comparator;

+###org/springframework/util/RouteMatcher
@5.2.0.RELEASE
+#parseRoute(Ljava/lang/String;)Lorg/springframework/util/RouteMatcher$Route;
+#isPattern(Ljava/lang/String;)Z
+#combine(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#match(Ljava/lang/String;Lorg/springframework/util/RouteMatcher$Route;)Z
+#matchAndExtract(Ljava/lang/String;Lorg/springframework/util/RouteMatcher$Route;)Ljava/util/Map;
+#getPatternComparator(Lorg/springframework/util/RouteMatcher$Route;)Ljava/util/Comparator;

+###org/springframework/util/RouteMatcher$Route
@5.2.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/core/CoroutinesUtils
@5.2.0.RELEASE
+#deferredToMono(Lkotlinx/coroutines/Deferred;)Lreactor/core/publisher/Mono;
+#monoToDeferred(Lreactor/core/publisher/Mono;)Lkotlinx/coroutines/Deferred;
+#invokeSuspendingFunction(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
@5.2.2.RELEASE
+#isSuspendingFunction(Ljava/lang/reflect/Method;)Z
+#invokeSuspendingFunction(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
-#invokeSuspendingFunction(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
@5.3.0
-#isSuspendingFunction(Ljava/lang/reflect/Method;)Z
@5.3.10
+#<init>()V
@6.0.0
+#invokeSuspendingFunction(Lkotlin/coroutines/CoroutineContext;Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/reactivestreams/Publisher;

+###org/springframework/core/NativeDetector
@5.3.4
+#<init>()V
+#inNativeImage()Z

+###org/springframework/core/codec/NettyByteBufDecoder
@5.3.0
+#<init>()V
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lio/netty/buffer/ByteBuf;
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/core/codec/NettyByteBufEncoder
@5.3.0
+#<init>()V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#encodeValue(Lio/netty/buffer/ByteBuf;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/core/io/support/ResourcePropertiesPersister
@5.3.0
+#<init>()V
+#loadFromXml(Ljava/util/Properties;Ljava/io/InputStream;)V
+#storeToXml(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;)V
+#storeToXml(Ljava/util/Properties;Ljava/io/OutputStream;Ljava/lang/String;Ljava/lang/String;)V
@6.0.0
-###org/springframework/core/io/support/ResourcePropertiesPersister

+###org/springframework/core/metrics/ApplicationStartup
@5.3.0
+#start(Ljava/lang/String;)Lorg/springframework/core/metrics/StartupStep;

+###org/springframework/core/metrics/StartupStep$Tag
@5.3.0
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;

+###org/springframework/core/metrics/StartupStep$Tags
@5.3.0

+###org/springframework/core/metrics/StartupStep
@5.3.0
+#getName()Ljava/lang/String;
+#getId()J
+#getParentId()Ljava/lang/Long;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/core/metrics/StartupStep;
+#tag(Ljava/lang/String;Ljava/util/function/Supplier;)Lorg/springframework/core/metrics/StartupStep;
+#getTags()Lorg/springframework/core/metrics/StartupStep$Tags;
+#end()V

+###org/springframework/core/metrics/jfr/FlightRecorderApplicationStartup
@5.3.0
+#<init>()V
+#start(Ljava/lang/String;)Lorg/springframework/core/metrics/StartupStep;

+###org/springframework/util/ConcurrentLruCache
@5.3.0
+#<init>(ILjava/util/function/Function;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#clear()V
+#size()I
+#sizeLimit()I
@6.0.0
+#capacity()I
*#sizeLimit()I[deprecated]

+###org/springframework/util/MultiValueMapAdapter
@5.3.0
+#<init>(Ljava/util/Map;)V
+#getFirst(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#addAll(Ljava/lang/Object;Ljava/util/List;)V
+#addAll(Lorg/springframework/util/MultiValueMap;)V
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#setAll(Ljava/util/Map;)V
+#toSingleValueMap()Ljava/util/Map;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/util/List;
+#put(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
+#remove(Ljava/lang/Object;)Ljava/util/List;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/objenesis/instantiator/basic/DelegatingToExoticInstantiator
@5.3.6
+#newInstance()Ljava/lang/Object;

+###org/springframework/beans/factory/support/ManagedLinkedMap
@1.1-rc1
+#<init>()V
+#<init>(I)V
@1.1.1
-###org/springframework/beans/factory/support/ManagedLinkedMap

+###org/springframework/objenesis/instantiator/basic/ClassDefinitionUtils
@4.2.1.RELEASE
+#defineClass(Ljava/lang/String;[BLjava/lang/ClassLoader;)Ljava/lang/Class;
+#readClass(Ljava/lang/String;)[B
+#writeClass(Ljava/lang/String;[B)V
+#classNameToInternalClassName(Ljava/lang/String;)Ljava/lang/String;
+#classNameToResource(Ljava/lang/String;)Ljava/lang/String;
+#getExistingClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
@4.3.10.RELEASE
-###org/springframework/objenesis/instantiator/basic/ClassDefinitionUtils

+###org/springframework/objenesis/instantiator/jrockit/JRockitLegacyInstantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;
@4.3.0.RELEASE
-###org/springframework/objenesis/instantiator/jrockit/JRockitLegacyInstantiator

+###org/springframework/core/convert/support/StreamConverter
@4.2.0.RELEASE
+#<init>(Lorg/springframework/core/convert/ConversionService;)V
+#getConvertibleTypes()Ljava/util/Set;
+#matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
+#matchesFromStream(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
+#matchesToStream(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
+#convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
@4.2.3.RELEASE
-###org/springframework/core/convert/support/StreamConverter

+###org/springframework/core/convert/support/StringToCharsetConverter
@4.2.0.RELEASE
+#<init>()V
+#convert(Ljava/lang/String;)Ljava/nio/charset/Charset;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@4.2.3.RELEASE
-###org/springframework/core/convert/support/StringToCharsetConverter

+###org/springframework/core/GenericsHelper
@2.0-m2
+#<init>()V
+#getCollectionParameterType(Lorg/springframework/core/MethodParameter;)Ljava/lang/Class;
+#getMapKeyParameterType(Lorg/springframework/core/MethodParameter;)Ljava/lang/Class;
+#getMapValueParameterType(Lorg/springframework/core/MethodParameter;)Ljava/lang/Class;
+#getCollectionReturnType(Ljava/lang/reflect/Method;)Ljava/lang/Class;
+#getMapKeyReturnType(Ljava/lang/reflect/Method;)Ljava/lang/Class;
+#getMapValueReturnType(Ljava/lang/reflect/Method;)Ljava/lang/Class;
@2.0-m5
-###org/springframework/core/GenericsHelper

+###org/springframework/core/LocalVariableTableParameterNameDiscover
@2.0-m2
+#<init>()V
+#getParameterNames(Ljava/lang/reflect/Method;Ljava/lang/Class;)[Ljava/lang/String;
+#getParameterNames(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;
@2.0-m5
+#getParameterNames(Ljava/lang/reflect/Method;)[Ljava/lang/String;
-#getParameterNames(Ljava/lang/reflect/Method;Ljava/lang/Class;)[Ljava/lang/String;
@2.0
-###org/springframework/core/LocalVariableTableParameterNameDiscover

+###org/springframework/asm/ClassAdapter
@2.5
+#<init>(Lorg/springframework/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#visitEnd()V
@3.0.0.RELEASE
-###org/springframework/asm/ClassAdapter

+###org/springframework/asm/MethodAdapter
@2.5
+#<init>(Lorg/springframework/asm/MethodVisitor;)V
+#visitAnnotationDefault()Lorg/springframework/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitCode()V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILorg/springframework/asm/Label;)V
+#visitLabel(Lorg/springframework/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/lang/String;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V
+#visitLineNumber(ILorg/springframework/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@3.0.0.RELEASE
-###org/springframework/asm/MethodAdapter

+###org/springframework/asm/commons/EmptyVisitor
@2.5
+#<init>()V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitAttribute(Lorg/springframework/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;
+#visitEnd()V
+#visitAnnotationDefault()Lorg/springframework/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;
+#visitCode()V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILorg/springframework/asm/Label;)V
+#visitLabel(Lorg/springframework/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/lang/String;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V
+#visitLineNumber(ILorg/springframework/asm/Label;)V
+#visitMaxs(II)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;
@3.0.0.RELEASE
-###org/springframework/asm/commons/EmptyVisitor

+###org/springframework/metadata/Attributes
@2.5
+#getAttributes(Ljava/lang/Class;)Ljava/util/Collection;
+#getAttributes(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Collection;
+#getAttributes(Ljava/lang/reflect/Method;)Ljava/util/Collection;
+#getAttributes(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/Collection;
+#getAttributes(Ljava/lang/reflect/Field;)Ljava/util/Collection;
+#getAttributes(Ljava/lang/reflect/Field;Ljava/lang/Class;)Ljava/util/Collection;
@3.0.0.RELEASE
-###org/springframework/metadata/Attributes

+###org/springframework/metadata/commons/CommonsAttributes
@2.5
+#<init>()V
+#getAttributes(Ljava/lang/Class;)Ljava/util/Collection;
+#getAttributes(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Collection;
+#getAttributes(Ljava/lang/reflect/Method;)Ljava/util/Collection;
+#getAttributes(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/Collection;
+#getAttributes(Ljava/lang/reflect/Field;)Ljava/util/Collection;
+#getAttributes(Ljava/lang/reflect/Field;Ljava/lang/Class;)Ljava/util/Collection;
@3.0.0.RELEASE
-###org/springframework/metadata/commons/CommonsAttributes

+###org/springframework/beans/factory/support/BeanDefinitionHolder
@1.1-rc1
+#<init>(Lorg/springframework/beans/factory/config/BeanDefinition;Ljava/lang/String;)V
+#<init>(Lorg/springframework/beans/factory/config/BeanDefinition;Ljava/lang/String;[Ljava/lang/String;)V
+#getBeanDefinition()Lorg/springframework/beans/factory/config/BeanDefinition;
+#getBeanName()Ljava/lang/String;
+#getAliases()[Ljava/lang/String;
@1.1-rc2
-###org/springframework/beans/factory/support/BeanDefinitionHolder

+###org/springframework/beans/factory/config/MethodInvokingFactoryBean$VoidType
@1.0-rc1
+#<init>()V
@1.0
-###org/springframework/beans/factory/config/MethodInvokingFactoryBean$VoidType

+###org/springframework/beans/factory/access/SimpleJndiBeanFactoryLocator
@1.0-rc1
+#<init>()V
+#useFactory(Ljava/lang/String;)Lorg/springframework/beans/factory/access/BeanFactoryReference;
@1.0
-###org/springframework/beans/factory/access/SimpleJndiBeanFactoryLocator

+###org/springframework/cglib/proxy/Enhancer$EnhancerFactoryKey
@4.2.6.RELEASE
+#newInstance(Lorg/springframework/cglib/proxy/Enhancer$EnhancerKey;)Ljava/lang/Object;
@4.2.7.RELEASE
-###org/springframework/cglib/proxy/Enhancer$EnhancerFactoryKey

+###org/springframework/aot/AotDetector
@6.0.0
+#<init>()V
+#useGeneratedArtifacts()Z

+###org/springframework/aot/generate/AccessControl$Visibility
@6.0.0
+#values()[Lorg/springframework/aot/generate/AccessControl$Visibility;
+#valueOf(Ljava/lang/String;)Lorg/springframework/aot/generate/AccessControl$Visibility;

+###org/springframework/aot/generate/AccessControl
@6.0.0
+#forMember(Ljava/lang/reflect/Member;)Lorg/springframework/aot/generate/AccessControl;
+#forResolvableType(Lorg/springframework/core/ResolvableType;)Lorg/springframework/aot/generate/AccessControl;
+#forClass(Ljava/lang/Class;)Lorg/springframework/aot/generate/AccessControl;
+#lowest([Lorg/springframework/aot/generate/AccessControl;)Lorg/springframework/aot/generate/AccessControl;
+#getVisibility()Lorg/springframework/aot/generate/AccessControl$Visibility;
+#isPublic()Z
+#isAccessibleFrom(Lorg/springframework/javapoet/ClassName;)Z

+###org/springframework/aot/generate/ClassNameGenerator
@6.0.0
+#<init>(Lorg/springframework/javapoet/ClassName;)V
+#<init>(Lorg/springframework/javapoet/ClassName;Ljava/lang/String;)V
+#generateClassName(Ljava/lang/String;Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/ClassName;

+###org/springframework/aot/generate/DefaultGenerationContext
@6.0.0
+#<init>(Lorg/springframework/aot/generate/ClassNameGenerator;Lorg/springframework/aot/generate/GeneratedFiles;)V
+#<init>(Lorg/springframework/aot/generate/ClassNameGenerator;Lorg/springframework/aot/generate/GeneratedFiles;Lorg/springframework/aot/hint/RuntimeHints;)V
+#getGeneratedClasses()Lorg/springframework/aot/generate/GeneratedClasses;
+#getGeneratedFiles()Lorg/springframework/aot/generate/GeneratedFiles;
+#getRuntimeHints()Lorg/springframework/aot/hint/RuntimeHints;
+#withName(Ljava/lang/String;)Lorg/springframework/aot/generate/DefaultGenerationContext;
+#writeGeneratedContent()V
+#withName(Ljava/lang/String;)Lorg/springframework/aot/generate/GenerationContext;

+###org/springframework/aot/generate/DefaultMethodReference
@6.0.0
+#<init>(Lorg/springframework/javapoet/MethodSpec;Lorg/springframework/javapoet/ClassName;)V
+#toCodeBlock()Lorg/springframework/javapoet/CodeBlock;
+#toInvokeCodeBlock(Lorg/springframework/aot/generate/MethodReference$ArgumentCodeGenerator;Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/CodeBlock;
+#toString()Ljava/lang/String;

+###org/springframework/aot/generate/FileSystemGeneratedFiles
@6.0.0
+#<init>(Ljava/nio/file/Path;)V
+#<init>(Ljava/util/function/Function;)V
+#addFile(Lorg/springframework/aot/generate/GeneratedFiles$Kind;Ljava/lang/String;Lorg/springframework/core/io/InputStreamSource;)V

+###org/springframework/aot/generate/GeneratedClass
@6.0.0
+#reserveMethodNames([Ljava/lang/String;)V
+#getEnclosingClass()Lorg/springframework/aot/generate/GeneratedClass;
+#getName()Lorg/springframework/javapoet/ClassName;
+#getMethods()Lorg/springframework/aot/generate/GeneratedMethods;
+#getOrAdd(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/generate/GeneratedClass;

+###org/springframework/aot/generate/GeneratedClasses
@6.0.0
+#getOrAddForFeature(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/generate/GeneratedClass;
+#getOrAddForFeatureComponent(Ljava/lang/String;Lorg/springframework/javapoet/ClassName;Ljava/util/function/Consumer;)Lorg/springframework/aot/generate/GeneratedClass;
+#getOrAddForFeatureComponent(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/aot/generate/GeneratedClass;
+#addForFeature(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/generate/GeneratedClass;
+#addForFeatureComponent(Ljava/lang/String;Lorg/springframework/javapoet/ClassName;Ljava/util/function/Consumer;)Lorg/springframework/aot/generate/GeneratedClass;
+#addForFeatureComponent(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/aot/generate/GeneratedClass;

+###org/springframework/aot/generate/GeneratedFiles$Kind
@6.0.0
+#values()[Lorg/springframework/aot/generate/GeneratedFiles$Kind;
+#valueOf(Ljava/lang/String;)Lorg/springframework/aot/generate/GeneratedFiles$Kind;

+###org/springframework/aot/generate/GeneratedFiles
@6.0.0
+#addSourceFile(Lorg/springframework/javapoet/JavaFile;)V
+#addSourceFile(Ljava/lang/String;Ljava/lang/CharSequence;)V
+#addSourceFile(Ljava/lang/String;Lorg/springframework/util/function/ThrowingConsumer;)V
+#addSourceFile(Ljava/lang/String;Lorg/springframework/core/io/InputStreamSource;)V
+#addResourceFile(Ljava/lang/String;Ljava/lang/CharSequence;)V
+#addResourceFile(Ljava/lang/String;Lorg/springframework/util/function/ThrowingConsumer;)V
+#addResourceFile(Ljava/lang/String;Lorg/springframework/core/io/InputStreamSource;)V
+#addClassFile(Ljava/lang/String;Lorg/springframework/core/io/InputStreamSource;)V
+#addFile(Lorg/springframework/aot/generate/GeneratedFiles$Kind;Ljava/lang/String;Ljava/lang/CharSequence;)V
+#addFile(Lorg/springframework/aot/generate/GeneratedFiles$Kind;Ljava/lang/String;Lorg/springframework/util/function/ThrowingConsumer;)V
+#addFile(Lorg/springframework/aot/generate/GeneratedFiles$Kind;Ljava/lang/String;Lorg/springframework/core/io/InputStreamSource;)V

+###org/springframework/aot/generate/GeneratedMethod
@6.0.0
+#getName()Ljava/lang/String;
+#toMethodReference()Lorg/springframework/aot/generate/MethodReference;
+#toString()Ljava/lang/String;

+###org/springframework/aot/generate/GeneratedMethods
@6.0.0
+#add(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/generate/GeneratedMethod;
+#add([Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/generate/GeneratedMethod;
+#withPrefix(Ljava/lang/String;)Lorg/springframework/aot/generate/GeneratedMethods;

+###org/springframework/aot/generate/GeneratedTypeReference
@6.0.0
+#of(Lorg/springframework/javapoet/ClassName;)Lorg/springframework/aot/generate/GeneratedTypeReference;
+#getCanonicalName()Ljava/lang/String;

+###org/springframework/aot/generate/GenerationContext
@6.0.0
+#getGeneratedClasses()Lorg/springframework/aot/generate/GeneratedClasses;
+#getGeneratedFiles()Lorg/springframework/aot/generate/GeneratedFiles;
+#getRuntimeHints()Lorg/springframework/aot/hint/RuntimeHints;
+#withName(Ljava/lang/String;)Lorg/springframework/aot/generate/GenerationContext;

+###org/springframework/aot/generate/InMemoryGeneratedFiles
@6.0.0
+#<init>()V
+#addFile(Lorg/springframework/aot/generate/GeneratedFiles$Kind;Ljava/lang/String;Lorg/springframework/core/io/InputStreamSource;)V
+#getGeneratedFiles(Lorg/springframework/aot/generate/GeneratedFiles$Kind;)Ljava/util/Map;
+#getGeneratedFileContent(Lorg/springframework/aot/generate/GeneratedFiles$Kind;Ljava/lang/String;)Ljava/lang/String;
+#getGeneratedFile(Lorg/springframework/aot/generate/GeneratedFiles$Kind;Ljava/lang/String;)Lorg/springframework/core/io/InputStreamSource;

+###org/springframework/aot/generate/MethodReference$ArgumentCodeGenerator
@6.0.0
+#generateCode(Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/CodeBlock;
+#none()Lorg/springframework/aot/generate/MethodReference$ArgumentCodeGenerator;
+#of(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/aot/generate/MethodReference$ArgumentCodeGenerator;
+#from(Ljava/util/function/Function;)Lorg/springframework/aot/generate/MethodReference$ArgumentCodeGenerator;
+#and(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/aot/generate/MethodReference$ArgumentCodeGenerator;
+#and(Lorg/springframework/aot/generate/MethodReference$ArgumentCodeGenerator;)Lorg/springframework/aot/generate/MethodReference$ArgumentCodeGenerator;

+###org/springframework/aot/generate/MethodReference
@6.0.0
+#toCodeBlock()Lorg/springframework/javapoet/CodeBlock;
+#toInvokeCodeBlock(Lorg/springframework/aot/generate/MethodReference$ArgumentCodeGenerator;)Lorg/springframework/javapoet/CodeBlock;
+#toInvokeCodeBlock(Lorg/springframework/aot/generate/MethodReference$ArgumentCodeGenerator;Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/CodeBlock;

+###org/springframework/aot/hint/AbstractTypeReference
@6.0.0
+#getName()Ljava/lang/String;
+#getPackageName()Ljava/lang/String;
+#getSimpleName()Ljava/lang/String;
+#getEnclosingType()Lorg/springframework/aot/hint/TypeReference;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/aot/hint/BindingReflectionHintsRegistrar
@6.0.0
+#<init>()V
+#registerReflectionHints(Lorg/springframework/aot/hint/ReflectionHints;[Ljava/lang/reflect/Type;)V

+###org/springframework/aot/hint/ConditionalHint
@6.0.0
+#getReachableType()Lorg/springframework/aot/hint/TypeReference;
+#conditionMatches(Ljava/lang/ClassLoader;)Z

+###org/springframework/aot/hint/ExecutableHint$Builder
@6.0.0
+#withMode(Lorg/springframework/aot/hint/ExecutableMode;)Lorg/springframework/aot/hint/ExecutableHint$Builder;

+###org/springframework/aot/hint/ExecutableHint
@6.0.0
+#getParameterTypes()Ljava/util/List;
+#getMode()Lorg/springframework/aot/hint/ExecutableMode;
+#builtWith(Lorg/springframework/aot/hint/ExecutableMode;)Ljava/util/function/Consumer;

+###org/springframework/aot/hint/ExecutableMode
@6.0.0
+#values()[Lorg/springframework/aot/hint/ExecutableMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/aot/hint/ExecutableMode;

+###org/springframework/aot/hint/FieldHint
@6.0.0

+###org/springframework/aot/hint/JavaSerializationHint$Builder
@6.0.0
+#onReachableType(Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/JavaSerializationHint$Builder;

+###org/springframework/aot/hint/JavaSerializationHint
@6.0.0
+#getType()Lorg/springframework/aot/hint/TypeReference;
+#getReachableType()Lorg/springframework/aot/hint/TypeReference;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/aot/hint/JdkProxyHint$Builder
@6.0.0
+#proxiedInterfaces([Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/JdkProxyHint$Builder;
+#proxiedInterfaces([Ljava/lang/Class;)Lorg/springframework/aot/hint/JdkProxyHint$Builder;
+#onReachableType(Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/JdkProxyHint$Builder;

+###org/springframework/aot/hint/JdkProxyHint
@6.0.0
+#of([Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/JdkProxyHint$Builder;
+#of([Ljava/lang/Class;)Lorg/springframework/aot/hint/JdkProxyHint$Builder;
+#getProxiedInterfaces()Ljava/util/List;
+#getReachableType()Lorg/springframework/aot/hint/TypeReference;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/aot/hint/MemberCategory
@6.0.0
+#values()[Lorg/springframework/aot/hint/MemberCategory;
+#valueOf(Ljava/lang/String;)Lorg/springframework/aot/hint/MemberCategory;

+###org/springframework/aot/hint/MemberHint
@6.0.0
+#getName()Ljava/lang/String;

+###org/springframework/aot/hint/ProxyHints
@6.0.0
+#<init>()V
+#jdkProxyHints()Ljava/util/stream/Stream;
+#registerJdkProxy(Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ProxyHints;
+#registerJdkProxy([Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/ProxyHints;
+#registerJdkProxy([Ljava/lang/Class;)Lorg/springframework/aot/hint/ProxyHints;

+###org/springframework/aot/hint/ReflectionHints
@6.0.0
+#<init>()V
+#typeHints()Ljava/util/stream/Stream;
+#getTypeHint(Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/TypeHint;
+#getTypeHint(Ljava/lang/Class;)Lorg/springframework/aot/hint/TypeHint;
+#registerType(Lorg/springframework/aot/hint/TypeReference;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ReflectionHints;
+#registerType(Lorg/springframework/aot/hint/TypeReference;[Lorg/springframework/aot/hint/MemberCategory;)Lorg/springframework/aot/hint/ReflectionHints;
+#registerType(Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ReflectionHints;
+#registerType(Ljava/lang/Class;[Lorg/springframework/aot/hint/MemberCategory;)Lorg/springframework/aot/hint/ReflectionHints;
+#registerTypeIfPresent(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ReflectionHints;
+#registerTypeIfPresent(Ljava/lang/ClassLoader;Ljava/lang/String;[Lorg/springframework/aot/hint/MemberCategory;)Lorg/springframework/aot/hint/ReflectionHints;
+#registerTypes(Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ReflectionHints;
+#registerField(Ljava/lang/reflect/Field;)Lorg/springframework/aot/hint/ReflectionHints;
+#registerConstructor(Ljava/lang/reflect/Constructor;Lorg/springframework/aot/hint/ExecutableMode;)Lorg/springframework/aot/hint/ReflectionHints;
+#registerMethod(Ljava/lang/reflect/Method;Lorg/springframework/aot/hint/ExecutableMode;)Lorg/springframework/aot/hint/ReflectionHints;

+###org/springframework/aot/hint/ResourceBundleHint$Builder
@6.0.0
+#onReachableType(Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/ResourceBundleHint$Builder;
+#baseName(Ljava/lang/String;)Lorg/springframework/aot/hint/ResourceBundleHint$Builder;

+###org/springframework/aot/hint/ResourceBundleHint
@6.0.0
+#getBaseName()Ljava/lang/String;
+#getReachableType()Lorg/springframework/aot/hint/TypeReference;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/aot/hint/ResourceHints
@6.0.0
+#<init>()V
+#resourcePatternHints()Ljava/util/stream/Stream;
+#resourceBundleHints()Ljava/util/stream/Stream;
+#registerPatternIfPresent(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ResourceHints;
+#registerPattern(Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ResourceHints;
+#registerPattern(Ljava/lang/String;)Lorg/springframework/aot/hint/ResourceHints;
+#registerResource(Lorg/springframework/core/io/Resource;)V
+#registerType(Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/ResourceHints;
+#registerType(Ljava/lang/Class;)Lorg/springframework/aot/hint/ResourceHints;
+#registerResourceBundle(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ResourceHints;
+#registerResourceBundle(Ljava/lang/String;)Lorg/springframework/aot/hint/ResourceHints;

+###org/springframework/aot/hint/ResourcePatternHint
@6.0.0
+#getPattern()Ljava/lang/String;
+#toRegex()Ljava/util/regex/Pattern;
+#getReachableType()Lorg/springframework/aot/hint/TypeReference;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/aot/hint/ResourcePatternHints$Builder
@6.0.0
+#includes(Lorg/springframework/aot/hint/TypeReference;[Ljava/lang/String;)Lorg/springframework/aot/hint/ResourcePatternHints$Builder;
+#includes([Ljava/lang/String;)Lorg/springframework/aot/hint/ResourcePatternHints$Builder;
+#excludes(Lorg/springframework/aot/hint/TypeReference;[Ljava/lang/String;)Lorg/springframework/aot/hint/ResourcePatternHints$Builder;
+#excludes([Ljava/lang/String;)Lorg/springframework/aot/hint/ResourcePatternHints$Builder;

+###org/springframework/aot/hint/ResourcePatternHints
@6.0.0
+#getIncludes()Ljava/util/List;
+#getExcludes()Ljava/util/List;

+###org/springframework/aot/hint/RuntimeHints
@6.0.0
+#<init>()V
+#reflection()Lorg/springframework/aot/hint/ReflectionHints;
+#resources()Lorg/springframework/aot/hint/ResourceHints;
+#serialization()Lorg/springframework/aot/hint/SerializationHints;
+#proxies()Lorg/springframework/aot/hint/ProxyHints;
+#jni()Lorg/springframework/aot/hint/ReflectionHints;

+###org/springframework/aot/hint/RuntimeHintsRegistrar
@6.0.0
+#registerHints(Lorg/springframework/aot/hint/RuntimeHints;Ljava/lang/ClassLoader;)V

+###org/springframework/aot/hint/SerializationHints
@6.0.0
+#<init>()V
+#javaSerializationHints()Ljava/util/stream/Stream;
+#registerType(Lorg/springframework/aot/hint/TypeReference;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/SerializationHints;
+#registerType(Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/SerializationHints;
+#registerType(Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/SerializationHints;
+#registerType(Ljava/lang/Class;)Lorg/springframework/aot/hint/SerializationHints;

+###org/springframework/aot/hint/TypeHint$Builder
@6.0.0
+#onReachableType(Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/TypeHint$Builder;
+#onReachableType(Ljava/lang/Class;)Lorg/springframework/aot/hint/TypeHint$Builder;
+#withField(Ljava/lang/String;)Lorg/springframework/aot/hint/TypeHint$Builder;
+#withConstructor(Ljava/util/List;Lorg/springframework/aot/hint/ExecutableMode;)Lorg/springframework/aot/hint/TypeHint$Builder;
+#withMethod(Ljava/lang/String;Ljava/util/List;Lorg/springframework/aot/hint/ExecutableMode;)Lorg/springframework/aot/hint/TypeHint$Builder;
+#withMembers([Lorg/springframework/aot/hint/MemberCategory;)Lorg/springframework/aot/hint/TypeHint$Builder;

+###org/springframework/aot/hint/TypeHint
@6.0.0
+#getType()Lorg/springframework/aot/hint/TypeReference;
+#getReachableType()Lorg/springframework/aot/hint/TypeReference;
+#fields()Ljava/util/stream/Stream;
+#constructors()Ljava/util/stream/Stream;
+#methods()Ljava/util/stream/Stream;
+#getMemberCategories()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#builtWith([Lorg/springframework/aot/hint/MemberCategory;)Ljava/util/function/Consumer;

+###org/springframework/aot/hint/TypeReference
@6.0.0
+#getName()Ljava/lang/String;
+#getCanonicalName()Ljava/lang/String;
+#getPackageName()Ljava/lang/String;
+#getSimpleName()Ljava/lang/String;
+#getEnclosingType()Lorg/springframework/aot/hint/TypeReference;
+#of(Ljava/lang/Class;)Lorg/springframework/aot/hint/TypeReference;
+#of(Ljava/lang/String;)Lorg/springframework/aot/hint/TypeReference;
+#listOf([Ljava/lang/Class;)Ljava/util/List;

+###org/springframework/aot/hint/annotation/Reflective
@6.0.0
+#value()[Ljava/lang/Class;
+#processors()[Ljava/lang/Class;

+###org/springframework/aot/hint/annotation/ReflectiveProcessor
@6.0.0
+#registerReflectionHints(Lorg/springframework/aot/hint/ReflectionHints;Ljava/lang/reflect/AnnotatedElement;)V

+###org/springframework/aot/hint/annotation/ReflectiveRuntimeHintsRegistrar
@6.0.0
+#<init>()V
+#registerRuntimeHints(Lorg/springframework/aot/hint/RuntimeHints;[Ljava/lang/Class;)V

+###org/springframework/aot/hint/annotation/RegisterReflectionForBinding
@6.0.0
+#value()[Ljava/lang/Class;
+#classes()[Ljava/lang/Class;

+###org/springframework/aot/hint/annotation/RegisterReflectionForBindingProcessor
@6.0.0
+#<init>()V
+#registerReflectionHints(Lorg/springframework/aot/hint/ReflectionHints;Ljava/lang/reflect/AnnotatedElement;)V

+###org/springframework/aot/hint/annotation/SimpleReflectiveProcessor
@6.0.0
+#<init>()V
+#registerReflectionHints(Lorg/springframework/aot/hint/ReflectionHints;Ljava/lang/reflect/AnnotatedElement;)V

+###org/springframework/aot/hint/predicate/ProxyHintsPredicates
@6.0.0
+#forInterfaces([Ljava/lang/Class;)Ljava/util/function/Predicate;
+#forInterfaces([Lorg/springframework/aot/hint/TypeReference;)Ljava/util/function/Predicate;

+###org/springframework/aot/hint/predicate/ReflectionHintsPredicates$ConstructorHintPredicate
@6.0.0

+###org/springframework/aot/hint/predicate/ReflectionHintsPredicates$ExecutableHintPredicate
@6.0.0
+#introspect()Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$ExecutableHintPredicate;
+#invoke()Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$ExecutableHintPredicate;
+#test(Lorg/springframework/aot/hint/RuntimeHints;)Z
+#test(Ljava/lang/Object;)Z

+###org/springframework/aot/hint/predicate/ReflectionHintsPredicates$FieldHintPredicate
@6.0.0
+#test(Lorg/springframework/aot/hint/RuntimeHints;)Z
+#test(Ljava/lang/Object;)Z

+###org/springframework/aot/hint/predicate/ReflectionHintsPredicates$MethodHintPredicate
@6.0.0

+###org/springframework/aot/hint/predicate/ReflectionHintsPredicates$TypeHintPredicate
@6.0.0
+#test(Lorg/springframework/aot/hint/RuntimeHints;)Z
+#withMemberCategory(Lorg/springframework/aot/hint/MemberCategory;)Ljava/util/function/Predicate;
+#withMemberCategories([Lorg/springframework/aot/hint/MemberCategory;)Ljava/util/function/Predicate;
+#withAnyMemberCategory([Lorg/springframework/aot/hint/MemberCategory;)Ljava/util/function/Predicate;
+#test(Ljava/lang/Object;)Z

+###org/springframework/aot/hint/predicate/ReflectionHintsPredicates
@6.0.0
+#onType(Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$TypeHintPredicate;
+#onType(Ljava/lang/Class;)Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$TypeHintPredicate;
+#onConstructor(Ljava/lang/reflect/Constructor;)Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$ConstructorHintPredicate;
+#onMethod(Ljava/lang/reflect/Method;)Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$MethodHintPredicate;
+#onMethod(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$MethodHintPredicate;
+#onMethod(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$MethodHintPredicate;
+#onField(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$FieldHintPredicate;
+#onField(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$FieldHintPredicate;
+#onField(Ljava/lang/reflect/Field;)Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates$FieldHintPredicate;

+###org/springframework/aot/hint/predicate/ResourceHintsPredicates
@6.0.0
+#forBundle(Ljava/lang/String;)Ljava/util/function/Predicate;
+#forResource(Lorg/springframework/aot/hint/TypeReference;Ljava/lang/String;)Ljava/util/function/Predicate;
+#forResource(Ljava/lang/String;)Ljava/util/function/Predicate;

+###org/springframework/aot/hint/predicate/RuntimeHintsPredicates
@6.0.0
+#reflection()Lorg/springframework/aot/hint/predicate/ReflectionHintsPredicates;
+#resource()Lorg/springframework/aot/hint/predicate/ResourceHintsPredicates;
+#serialization()Lorg/springframework/aot/hint/predicate/SerializationHintsPredicates;
+#proxies()Lorg/springframework/aot/hint/predicate/ProxyHintsPredicates;

+###org/springframework/aot/hint/predicate/SerializationHintsPredicates
@6.0.0
+#onType(Ljava/lang/Class;)Ljava/util/function/Predicate;
+#onType(Lorg/springframework/aot/hint/TypeReference;)Ljava/util/function/Predicate;

+###org/springframework/aot/hint/support/ClassHintUtils
@6.0.3
+#<init>()V
+#registerProxyIfNecessary(Ljava/lang/Class;Lorg/springframework/aot/hint/RuntimeHints;)V

+###org/springframework/aot/hint/support/FilePatternResourceHintsRegistrar
@6.0.0
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#registerHints(Lorg/springframework/aot/hint/ResourceHints;Ljava/lang/ClassLoader;)V

+###org/springframework/aot/nativex/FileNativeConfigurationWriter
@6.0.0
+#<init>(Ljava/nio/file/Path;)V
+#<init>(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/aot/nativex/NativeConfigurationWriter
@6.0.0
+#<init>()V
+#write(Lorg/springframework/aot/hint/RuntimeHints;)V

+###org/springframework/cglib/core/ClassTransformer
@6.0.0
+#<init>()V
+#<init>(I)V
+#setTarget(Lorg/springframework/asm/ClassVisitor;)V

+###org/springframework/core/annotation/MergedAnnotations$Search
@6.0.0
+#withEnclosingClasses(Ljava/util/function/Predicate;)Lorg/springframework/core/annotation/MergedAnnotations$Search;
+#withRepeatableContainers(Lorg/springframework/core/annotation/RepeatableContainers;)Lorg/springframework/core/annotation/MergedAnnotations$Search;
+#withAnnotationFilter(Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/MergedAnnotations$Search;
+#from(Ljava/lang/reflect/AnnotatedElement;)Lorg/springframework/core/annotation/MergedAnnotations;

+###org/springframework/core/codec/Netty5BufferDecoder
@6.0.0
+#<init>()V
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lio/netty5/buffer/Buffer;
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/core/codec/Netty5BufferEncoder
@6.0.0
+#<init>()V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#encodeValue(Lio/netty5/buffer/Buffer;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/core/io/buffer/CloseableDataBuffer
@6.0.0
+#close()V

+###org/springframework/core/io/buffer/DataBuffer$ByteBufferIterator
@6.0.5
+#close()V

+###org/springframework/core/io/buffer/Netty5DataBuffer
@6.0.0
+#getNativeBuffer()Lio/netty5/buffer/Buffer;
+#factory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#indexOf(Ljava/util/function/IntPredicate;I)I
+#lastIndexOf(Ljava/util/function/IntPredicate;I)I
+#readableByteCount()I
+#writableByteCount()I
+#readPosition()I
+#readPosition(I)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#writePosition()I
+#writePosition(I)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#getByte(I)B
+#capacity()I
+#capacity(I)Lorg/springframework/core/io/buffer/Netty5DataBuffer;[deprecated]
+#ensureWritable(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#read()B
+#read([B)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#read([BII)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#write(B)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#write([B)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#write([BII)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#write([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#write([Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#write([Lio/netty5/buffer/Buffer;)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#write(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/springframework/core/io/buffer/DataBuffer;
+#slice(II)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
+#split(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#asByteBuffer()Ljava/nio/ByteBuffer;[deprecated]
+#asByteBuffer(II)Ljava/nio/ByteBuffer;[deprecated]
+#toByteBuffer(II)Ljava/nio/ByteBuffer;[deprecated]
+#toString(Ljava/nio/charset/Charset;)Ljava/lang/String;
+#toString(IILjava/nio/charset/Charset;)Ljava/lang/String;
+#touch(Ljava/lang/Object;)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#write([Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([BII)Lorg/springframework/core/io/buffer/DataBuffer;
+#write([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#write(B)Lorg/springframework/core/io/buffer/DataBuffer;
+#read([BII)Lorg/springframework/core/io/buffer/DataBuffer;
+#read([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#writePosition(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#readPosition(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#capacity(I)Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]
+#touch(Ljava/lang/Object;)Lorg/springframework/core/io/buffer/TouchableDataBuffer;
@6.0.5
+#toByteBuffer(ILjava/nio/ByteBuffer;II)V
+#readableByteBuffers()Lorg/springframework/core/io/buffer/DataBuffer$ByteBufferIterator;
+#writableByteBuffers()Lorg/springframework/core/io/buffer/DataBuffer$ByteBufferIterator;

+###org/springframework/core/io/buffer/Netty5DataBufferFactory
@6.0.0
+#<init>(Lio/netty5/buffer/BufferAllocator;)V
+#getBufferAllocator()Lio/netty5/buffer/BufferAllocator;
+#allocateBuffer()Lorg/springframework/core/io/buffer/Netty5DataBuffer;[deprecated]
+#allocateBuffer(I)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#wrap(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#wrap([B)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#wrap(Lio/netty5/buffer/Buffer;)Lorg/springframework/core/io/buffer/Netty5DataBuffer;
+#join(Ljava/util/List;)Lorg/springframework/core/io/buffer/DataBuffer;
+#isDirect()Z
+#toBuffer(Lorg/springframework/core/io/buffer/DataBuffer;)Lio/netty5/buffer/Buffer;
+#toString()Ljava/lang/String;
+#wrap([B)Lorg/springframework/core/io/buffer/DataBuffer;
+#wrap(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
+#allocateBuffer(I)Lorg/springframework/core/io/buffer/DataBuffer;
+#allocateBuffer()Lorg/springframework/core/io/buffer/DataBuffer;[deprecated]

+###org/springframework/core/io/buffer/TouchableDataBuffer
@6.0.0
+#touch(Ljava/lang/Object;)Lorg/springframework/core/io/buffer/TouchableDataBuffer;

+###org/springframework/core/io/support/PropertySourceDescriptor
@6.0.0
+#<init>([Ljava/lang/String;)V
+#<init>(Ljava/util/List;ZLjava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#locations()Ljava/util/List;
+#ignoreResourceNotFound()Z
+#name()Ljava/lang/String;
+#propertySourceFactory()Ljava/lang/Class;
+#encoding()Ljava/lang/String;

+###org/springframework/core/io/support/PropertySourceProcessor
@6.0.0
+#<init>(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/core/io/ResourceLoader;)V
+#processPropertySource(Lorg/springframework/core/io/support/PropertySourceDescriptor;)V

+###org/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver
@6.0.0
+#resolve(Ljava/lang/Class;)Ljava/lang/Object;
+#and(Ljava/lang/Class;Ljava/lang/Object;)Lorg/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver;
+#andSupplied(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver;
+#and(Lorg/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver;)Lorg/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver;
+#none()Lorg/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver;
+#of(Ljava/lang/Class;Ljava/lang/Object;)Lorg/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver;
+#ofSupplied(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver;
+#from(Ljava/util/function/Function;)Lorg/springframework/core/io/support/SpringFactoriesLoader$ArgumentResolver;

+###org/springframework/core/io/support/SpringFactoriesLoader$FailureHandler
@6.0.0
+#handleFailure(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V
+#throwing()Lorg/springframework/core/io/support/SpringFactoriesLoader$FailureHandler;
+#throwing(Ljava/util/function/BiFunction;)Lorg/springframework/core/io/support/SpringFactoriesLoader$FailureHandler;
+#logging(Lorg/apache/commons/logging/Log;)Lorg/springframework/core/io/support/SpringFactoriesLoader$FailureHandler;
+#handleMessage(Ljava/util/function/BiConsumer;)Lorg/springframework/core/io/support/SpringFactoriesLoader$FailureHandler;

+###org/springframework/core/style/SimpleValueStyler
@6.0.0
+#<init>()V
+#<init>(Ljava/util/function/Function;Ljava/util/function/Function;)V

+###org/springframework/util/concurrent/FutureUtils
@6.0.0
+#<init>()V
+#callAsync(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/CompletableFuture;
+#callAsync(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;

+###org/springframework/util/function/ThrowingBiFunction
@6.0.0
+#applyWithException(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#throwing(Ljava/util/function/BiFunction;)Lorg/springframework/util/function/ThrowingBiFunction;
+#of(Lorg/springframework/util/function/ThrowingBiFunction;)Lorg/springframework/util/function/ThrowingBiFunction;
+#of(Lorg/springframework/util/function/ThrowingBiFunction;Ljava/util/function/BiFunction;)Lorg/springframework/util/function/ThrowingBiFunction;

+###org/springframework/util/function/ThrowingConsumer
@6.0.0
+#acceptWithException(Ljava/lang/Object;)V
+#accept(Ljava/lang/Object;)V
+#accept(Ljava/lang/Object;Ljava/util/function/BiFunction;)V
+#throwing(Ljava/util/function/BiFunction;)Lorg/springframework/util/function/ThrowingConsumer;
+#of(Lorg/springframework/util/function/ThrowingConsumer;)Lorg/springframework/util/function/ThrowingConsumer;
+#of(Lorg/springframework/util/function/ThrowingConsumer;Ljava/util/function/BiFunction;)Lorg/springframework/util/function/ThrowingConsumer;

+###org/springframework/util/function/ThrowingFunction
@6.0.0
+#applyWithException(Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#throwing(Ljava/util/function/BiFunction;)Lorg/springframework/util/function/ThrowingFunction;
+#of(Lorg/springframework/util/function/ThrowingFunction;)Lorg/springframework/util/function/ThrowingFunction;
+#of(Lorg/springframework/util/function/ThrowingFunction;Ljava/util/function/BiFunction;)Lorg/springframework/util/function/ThrowingFunction;

+###org/springframework/util/function/ThrowingSupplier
@6.0.0
+#getWithException()Ljava/lang/Object;
+#get()Ljava/lang/Object;
+#get(Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#throwing(Ljava/util/function/BiFunction;)Lorg/springframework/util/function/ThrowingSupplier;
+#of(Lorg/springframework/util/function/ThrowingSupplier;)Lorg/springframework/util/function/ThrowingSupplier;
+#of(Lorg/springframework/util/function/ThrowingSupplier;Ljava/util/function/BiFunction;)Lorg/springframework/util/function/ThrowingSupplier;

+###org/springframework/aot/hint/JdkProxyHintExtensionsKt
@6.0.5
+#proxiedInterfaces(Lorg/springframework/aot/hint/JdkProxyHint$Builder;[Lkotlin/reflect/KClass;)Lorg/springframework/aot/hint/JdkProxyHint$Builder;

+###org/springframework/aot/hint/ProxyHintsExtensionsKt
@6.0.5
+#registerJdkProxy(Lorg/springframework/aot/hint/ProxyHints;[Lkotlin/reflect/KClass;)Lorg/springframework/aot/hint/ProxyHints;

+###org/springframework/aot/hint/ReflectionHintsExtensionsKt$registerType$1
@6.0.5
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#accept(Lorg/springframework/aot/hint/TypeHint$Builder;)V
+#accept(Ljava/lang/Object;)V

+###org/springframework/aot/hint/ReflectionHintsExtensionsKt
@6.0.5
+#getTypeHint(Lorg/springframework/aot/hint/ReflectionHints;)Lorg/springframework/aot/hint/TypeHint;
+#registerType(Lorg/springframework/aot/hint/ReflectionHints;Lkotlin/jvm/functions/Function1;)Lorg/springframework/aot/hint/ReflectionHints;
+#registerType(Lorg/springframework/aot/hint/ReflectionHints;[Lorg/springframework/aot/hint/MemberCategory;)Lorg/springframework/aot/hint/ReflectionHints;

+###org/springframework/aot/hint/ResourceHintsExtensionsKt
@6.0.5
+#registerType(Lorg/springframework/aot/hint/ResourceHints;)Lorg/springframework/aot/hint/ResourceHints;

+###org/springframework/aot/hint/SerializationHintsExtensionsKt$registerType$1
@6.0.5
+#<init>()V
+#invoke(Lorg/springframework/aot/hint/JavaSerializationHint$Builder;)V
+#invoke(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/aot/hint/SerializationHintsExtensionsKt$registerType$2
@6.0.5
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#accept(Lorg/springframework/aot/hint/JavaSerializationHint$Builder;)V
+#accept(Ljava/lang/Object;)V

+###org/springframework/aot/hint/SerializationHintsExtensionsKt
@6.0.5
+#registerType(Lorg/springframework/aot/hint/SerializationHints;Lkotlin/jvm/functions/Function1;)Lorg/springframework/aot/hint/SerializationHints;
+#registerType$default(Lorg/springframework/aot/hint/SerializationHints;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/aot/hint/SerializationHints;

+###org/springframework/aot/hint/TypeHintExtensionsKt
@6.0.5
+#onReachableType(Lorg/springframework/aot/hint/TypeHint$Builder;)Lorg/springframework/aot/hint/TypeHint$Builder;

+###org/springframework/javapoet/AnnotationSpec$Builder
@6.0.0
+#addMember(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/AnnotationSpec$Builder;
+#addMember(Ljava/lang/String;Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/AnnotationSpec$Builder;
+#build()Lorg/springframework/javapoet/AnnotationSpec;

+###org/springframework/javapoet/AnnotationSpec
@6.0.0
+#get(Ljava/lang/annotation/Annotation;)Lorg/springframework/javapoet/AnnotationSpec;
+#get(Ljava/lang/annotation/Annotation;Z)Lorg/springframework/javapoet/AnnotationSpec;
+#get(Ljavax/lang/model/element/AnnotationMirror;)Lorg/springframework/javapoet/AnnotationSpec;
+#builder(Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/AnnotationSpec$Builder;
+#builder(Ljava/lang/Class;)Lorg/springframework/javapoet/AnnotationSpec$Builder;
+#toBuilder()Lorg/springframework/javapoet/AnnotationSpec$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/javapoet/ArrayTypeName
@6.0.0
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/ArrayTypeName;
+#withoutAnnotations()Lorg/springframework/javapoet/TypeName;
+#of(Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/ArrayTypeName;
+#of(Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/ArrayTypeName;
+#get(Ljavax/lang/model/type/ArrayType;)Lorg/springframework/javapoet/ArrayTypeName;
+#get(Ljava/lang/reflect/GenericArrayType;)Lorg/springframework/javapoet/ArrayTypeName;
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/TypeName;

+###org/springframework/javapoet/ClassName
@6.0.0
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/ClassName;
+#withoutAnnotations()Lorg/springframework/javapoet/ClassName;
+#isAnnotated()Z
+#packageName()Ljava/lang/String;
+#enclosingClassName()Lorg/springframework/javapoet/ClassName;
+#topLevelClassName()Lorg/springframework/javapoet/ClassName;
+#reflectionName()Ljava/lang/String;
+#simpleNames()Ljava/util/List;
+#peerClass(Ljava/lang/String;)Lorg/springframework/javapoet/ClassName;
+#nestedClass(Ljava/lang/String;)Lorg/springframework/javapoet/ClassName;
+#simpleName()Ljava/lang/String;
+#canonicalName()Ljava/lang/String;
+#get(Ljava/lang/Class;)Lorg/springframework/javapoet/ClassName;
+#bestGuess(Ljava/lang/String;)Lorg/springframework/javapoet/ClassName;
+#get(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/javapoet/ClassName;
+#get(Ljavax/lang/model/element/TypeElement;)Lorg/springframework/javapoet/ClassName;
+#compareTo(Lorg/springframework/javapoet/ClassName;)I
+#withoutAnnotations()Lorg/springframework/javapoet/TypeName;
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/TypeName;
+#compareTo(Ljava/lang/Object;)I

+###org/springframework/javapoet/CodeBlock$Builder
@6.0.0
+#isEmpty()Z
+#addNamed(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/javapoet/CodeBlock$Builder;
+#add(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/CodeBlock$Builder;
+#beginControlFlow(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/CodeBlock$Builder;
+#nextControlFlow(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/CodeBlock$Builder;
+#endControlFlow()Lorg/springframework/javapoet/CodeBlock$Builder;
+#endControlFlow(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/CodeBlock$Builder;
+#addStatement(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/CodeBlock$Builder;
+#addStatement(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/CodeBlock$Builder;
+#add(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/CodeBlock$Builder;
+#indent()Lorg/springframework/javapoet/CodeBlock$Builder;
+#unindent()Lorg/springframework/javapoet/CodeBlock$Builder;
+#clear()Lorg/springframework/javapoet/CodeBlock$Builder;
+#build()Lorg/springframework/javapoet/CodeBlock;

+###org/springframework/javapoet/CodeBlock
@6.0.0
+#isEmpty()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#of(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/CodeBlock;
+#join(Ljava/lang/Iterable;Ljava/lang/String;)Lorg/springframework/javapoet/CodeBlock;
+#joining(Ljava/lang/String;)Ljava/util/stream/Collector;
+#joining(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Collector;
+#builder()Lorg/springframework/javapoet/CodeBlock$Builder;
+#toBuilder()Lorg/springframework/javapoet/CodeBlock$Builder;

+###org/springframework/javapoet/FieldSpec$Builder
@6.0.0
+#addJavadoc(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#addJavadoc(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#addAnnotations(Ljava/lang/Iterable;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#addAnnotation(Lorg/springframework/javapoet/AnnotationSpec;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#addAnnotation(Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#addAnnotation(Ljava/lang/Class;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#addModifiers([Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#initializer(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#initializer(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#build()Lorg/springframework/javapoet/FieldSpec;

+###org/springframework/javapoet/FieldSpec
@6.0.0
+#hasModifier(Ljavax/lang/model/element/Modifier;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#builder(Lorg/springframework/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#builder(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/FieldSpec$Builder;
+#toBuilder()Lorg/springframework/javapoet/FieldSpec$Builder;

+###org/springframework/javapoet/JavaFile$Builder
@6.0.0
+#addFileComment(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/JavaFile$Builder;
+#addStaticImport(Ljava/lang/Enum;)Lorg/springframework/javapoet/JavaFile$Builder;
+#addStaticImport(Ljava/lang/Class;[Ljava/lang/String;)Lorg/springframework/javapoet/JavaFile$Builder;
+#addStaticImport(Lorg/springframework/javapoet/ClassName;[Ljava/lang/String;)Lorg/springframework/javapoet/JavaFile$Builder;
+#skipJavaLangImports(Z)Lorg/springframework/javapoet/JavaFile$Builder;
+#indent(Ljava/lang/String;)Lorg/springframework/javapoet/JavaFile$Builder;
+#build()Lorg/springframework/javapoet/JavaFile;

+###org/springframework/javapoet/JavaFile
@6.0.0
+#writeTo(Ljava/lang/Appendable;)V
+#writeTo(Ljava/nio/file/Path;)V
+#writeTo(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V
+#writeToPath(Ljava/nio/file/Path;)Ljava/nio/file/Path;
+#writeToPath(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/nio/file/Path;
+#writeTo(Ljava/io/File;)V
+#writeToFile(Ljava/io/File;)Ljava/io/File;
+#writeTo(Ljavax/annotation/processing/Filer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toJavaFileObject()Ljavax/tools/JavaFileObject;
+#builder(Ljava/lang/String;Lorg/springframework/javapoet/TypeSpec;)Lorg/springframework/javapoet/JavaFile$Builder;
+#toBuilder()Lorg/springframework/javapoet/JavaFile$Builder;

+###org/springframework/javapoet/MethodSpec$Builder
@6.0.0
+#setName(Ljava/lang/String;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addJavadoc(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addJavadoc(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addAnnotations(Ljava/lang/Iterable;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addAnnotation(Lorg/springframework/javapoet/AnnotationSpec;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addAnnotation(Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addAnnotation(Ljava/lang/Class;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addModifiers([Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addModifiers(Ljava/lang/Iterable;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addTypeVariables(Ljava/lang/Iterable;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addTypeVariable(Lorg/springframework/javapoet/TypeVariableName;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#returns(Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#returns(Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addParameters(Ljava/lang/Iterable;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addParameter(Lorg/springframework/javapoet/ParameterSpec;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addParameter(Lorg/springframework/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addParameter(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#varargs()Lorg/springframework/javapoet/MethodSpec$Builder;
+#varargs(Z)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addExceptions(Ljava/lang/Iterable;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addException(Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addException(Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addCode(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addNamedCode(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addCode(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addComment(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#defaultValue(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#defaultValue(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#beginControlFlow(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#beginControlFlow(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#nextControlFlow(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#nextControlFlow(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#endControlFlow()Lorg/springframework/javapoet/MethodSpec$Builder;
+#endControlFlow(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#endControlFlow(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addStatement(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#addStatement(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#build()Lorg/springframework/javapoet/MethodSpec;

+###org/springframework/javapoet/MethodSpec
@6.0.0
+#hasModifier(Ljavax/lang/model/element/Modifier;)Z
+#isConstructor()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#methodBuilder(Ljava/lang/String;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#constructorBuilder()Lorg/springframework/javapoet/MethodSpec$Builder;
+#overriding(Ljavax/lang/model/element/ExecutableElement;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#overriding(Ljavax/lang/model/element/ExecutableElement;Ljavax/lang/model/type/DeclaredType;Ljavax/lang/model/util/Types;)Lorg/springframework/javapoet/MethodSpec$Builder;
+#toBuilder()Lorg/springframework/javapoet/MethodSpec$Builder;

+###org/springframework/javapoet/NameAllocator
@6.0.0
+#<init>()V
+#newName(Ljava/lang/String;)Ljava/lang/String;
+#newName(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
+#toJavaIdentifier(Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/Object;)Ljava/lang/String;
+#clone()Lorg/springframework/javapoet/NameAllocator;
+#clone()Ljava/lang/Object;

+###org/springframework/javapoet/ParameterSpec$Builder
@6.0.0
+#addJavadoc(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/ParameterSpec$Builder;
+#addJavadoc(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/ParameterSpec$Builder;
+#addAnnotations(Ljava/lang/Iterable;)Lorg/springframework/javapoet/ParameterSpec$Builder;
+#addAnnotation(Lorg/springframework/javapoet/AnnotationSpec;)Lorg/springframework/javapoet/ParameterSpec$Builder;
+#addAnnotation(Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/ParameterSpec$Builder;
+#addAnnotation(Ljava/lang/Class;)Lorg/springframework/javapoet/ParameterSpec$Builder;
+#addModifiers([Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/ParameterSpec$Builder;
+#addModifiers(Ljava/lang/Iterable;)Lorg/springframework/javapoet/ParameterSpec$Builder;
+#build()Lorg/springframework/javapoet/ParameterSpec;

+###org/springframework/javapoet/ParameterSpec
@6.0.0
+#hasModifier(Ljavax/lang/model/element/Modifier;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#get(Ljavax/lang/model/element/VariableElement;)Lorg/springframework/javapoet/ParameterSpec;
+#builder(Lorg/springframework/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/ParameterSpec$Builder;
+#builder(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/ParameterSpec$Builder;
+#toBuilder()Lorg/springframework/javapoet/ParameterSpec$Builder;

+###org/springframework/javapoet/ParameterizedTypeName
@6.0.0
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/ParameterizedTypeName;
+#withoutAnnotations()Lorg/springframework/javapoet/TypeName;
+#nestedClass(Ljava/lang/String;)Lorg/springframework/javapoet/ParameterizedTypeName;
+#nestedClass(Ljava/lang/String;Ljava/util/List;)Lorg/springframework/javapoet/ParameterizedTypeName;
+#get(Lorg/springframework/javapoet/ClassName;[Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/ParameterizedTypeName;
+#get(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/ParameterizedTypeName;
+#get(Ljava/lang/reflect/ParameterizedType;)Lorg/springframework/javapoet/ParameterizedTypeName;
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/TypeName;

+###org/springframework/javapoet/TypeName
@6.0.0
+#annotated([Lorg/springframework/javapoet/AnnotationSpec;)Lorg/springframework/javapoet/TypeName;
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/TypeName;
+#withoutAnnotations()Lorg/springframework/javapoet/TypeName;
+#isAnnotated()Z
+#isPrimitive()Z
+#isBoxedPrimitive()Z
+#box()Lorg/springframework/javapoet/TypeName;
+#unbox()Lorg/springframework/javapoet/TypeName;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#get(Ljavax/lang/model/type/TypeMirror;)Lorg/springframework/javapoet/TypeName;
+#get(Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/TypeName;

+###org/springframework/javapoet/TypeSpec$Builder
@6.0.0
+#addJavadoc(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addJavadoc(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addAnnotations(Ljava/lang/Iterable;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addAnnotation(Lorg/springframework/javapoet/AnnotationSpec;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addAnnotation(Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addAnnotation(Ljava/lang/Class;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addModifiers([Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addTypeVariables(Ljava/lang/Iterable;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addTypeVariable(Lorg/springframework/javapoet/TypeVariableName;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#superclass(Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#superclass(Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#superclass(Ljava/lang/reflect/Type;Z)Lorg/springframework/javapoet/TypeSpec$Builder;
+#superclass(Ljavax/lang/model/type/TypeMirror;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#superclass(Ljavax/lang/model/type/TypeMirror;Z)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addSuperinterfaces(Ljava/lang/Iterable;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addSuperinterface(Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addSuperinterface(Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addSuperinterface(Ljava/lang/reflect/Type;Z)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addSuperinterface(Ljavax/lang/model/type/TypeMirror;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addSuperinterface(Ljavax/lang/model/type/TypeMirror;Z)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addEnumConstant(Ljava/lang/String;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addEnumConstant(Ljava/lang/String;Lorg/springframework/javapoet/TypeSpec;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addFields(Ljava/lang/Iterable;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addField(Lorg/springframework/javapoet/FieldSpec;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addField(Lorg/springframework/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addField(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addStaticBlock(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addInitializerBlock(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addMethods(Ljava/lang/Iterable;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addMethod(Lorg/springframework/javapoet/MethodSpec;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addTypes(Ljava/lang/Iterable;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addType(Lorg/springframework/javapoet/TypeSpec;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#addOriginatingElement(Ljavax/lang/model/element/Element;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#alwaysQualify([Ljava/lang/String;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#avoidClashesWithNestedClasses(Ljavax/lang/model/element/TypeElement;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#avoidClashesWithNestedClasses(Ljava/lang/Class;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#build()Lorg/springframework/javapoet/TypeSpec;

+###org/springframework/javapoet/TypeSpec$Kind
@6.0.0
+#values()[Lorg/springframework/javapoet/TypeSpec$Kind;
+#valueOf(Ljava/lang/String;)Lorg/springframework/javapoet/TypeSpec$Kind;

+###org/springframework/javapoet/TypeSpec
@6.0.0
+#hasModifier(Ljavax/lang/model/element/Modifier;)Z
+#classBuilder(Ljava/lang/String;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#classBuilder(Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#interfaceBuilder(Ljava/lang/String;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#interfaceBuilder(Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#enumBuilder(Ljava/lang/String;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#enumBuilder(Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#anonymousClassBuilder(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#anonymousClassBuilder(Lorg/springframework/javapoet/CodeBlock;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#annotationBuilder(Ljava/lang/String;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#annotationBuilder(Lorg/springframework/javapoet/ClassName;)Lorg/springframework/javapoet/TypeSpec$Builder;
+#toBuilder()Lorg/springframework/javapoet/TypeSpec$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/javapoet/TypeVariableName
@6.0.0
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/TypeVariableName;
+#withoutAnnotations()Lorg/springframework/javapoet/TypeName;
+#withBounds([Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/TypeVariableName;
+#withBounds([Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/TypeVariableName;
+#withBounds(Ljava/util/List;)Lorg/springframework/javapoet/TypeVariableName;
+#get(Ljava/lang/String;)Lorg/springframework/javapoet/TypeVariableName;
+#get(Ljava/lang/String;[Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/TypeVariableName;
+#get(Ljava/lang/String;[Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/TypeVariableName;
+#get(Ljavax/lang/model/type/TypeVariable;)Lorg/springframework/javapoet/TypeVariableName;
+#get(Ljavax/lang/model/element/TypeParameterElement;)Lorg/springframework/javapoet/TypeVariableName;
+#get(Ljava/lang/reflect/TypeVariable;)Lorg/springframework/javapoet/TypeVariableName;
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/TypeName;

+###org/springframework/javapoet/WildcardTypeName
@6.0.0
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/WildcardTypeName;
+#withoutAnnotations()Lorg/springframework/javapoet/TypeName;
+#subtypeOf(Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/WildcardTypeName;
+#subtypeOf(Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/WildcardTypeName;
+#supertypeOf(Lorg/springframework/javapoet/TypeName;)Lorg/springframework/javapoet/WildcardTypeName;
+#supertypeOf(Ljava/lang/reflect/Type;)Lorg/springframework/javapoet/WildcardTypeName;
+#get(Ljavax/lang/model/type/WildcardType;)Lorg/springframework/javapoet/TypeName;
+#get(Ljava/lang/reflect/WildcardType;)Lorg/springframework/javapoet/TypeName;
+#annotated(Ljava/util/List;)Lorg/springframework/javapoet/TypeName;

+###org/springframework/objenesis/instantiator/android/Android23Instantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;
@4.0.1.RELEASE
-###org/springframework/objenesis/instantiator/android/Android23Instantiator

+###org/springframework/objenesis/instantiator/android/Android30Instantiator
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#newInstance()Ljava/lang/Object;
@4.0.1.RELEASE
-###org/springframework/objenesis/instantiator/android/Android30Instantiator
