
+###org/springframework/security/oauth2/jose/jws/JwsAlgorithms
@5.0.0.RELEASE

+###org/springframework/security/oauth2/jwt/Jwt
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;)V
+#getHeaders()Ljava/util/Map;
+#getClaims()Ljava/util/Map;
@5.2.0.RELEASE
+#withTokenValue(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;

+###org/springframework/security/oauth2/jwt/JwtClaimNames
@5.0.0.RELEASE

+###org/springframework/security/oauth2/jwt/JwtException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/oauth2/jwt/JwtClaimAccessor
@5.0.0.RELEASE
+#getIssuer()Ljava/net/URL;
+#getSubject()Ljava/lang/String;
+#getAudience()Ljava/util/List;
+#getExpiresAt()Ljava/time/Instant;
+#getNotBefore()Ljava/time/Instant;
+#getIssuedAt()Ljava/time/Instant;
+#getId()Ljava/lang/String;

+###org/springframework/security/oauth2/jwt/JwtDecoder
@5.0.0.RELEASE
+#decode(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/Jwt;

+###org/springframework/security/oauth2/jwt/NimbusJwtDecoderJwkSupport
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#decode(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/Jwt;
@5.1.0.RELEASE
+#setJwtValidator(Lorg/springframework/security/oauth2/core/OAuth2TokenValidator;)V
+#setClaimSetConverter(Lorg/springframework/core/convert/converter/Converter;)V
+#setRestOperations(Lorg/springframework/web/client/RestOperations;)V
@6.0.0
-###org/springframework/security/oauth2/jwt/NimbusJwtDecoderJwkSupport

+###org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$SecretKeyReactiveJwtDecoderBuilder
@5.2.0.RELEASE
+#macAlgorithm(Lorg/springframework/security/oauth2/jose/jws/MacAlgorithm;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$SecretKeyReactiveJwtDecoderBuilder;
+#build()Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder;
@5.4.0
+#jwtProcessorCustomizer(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$SecretKeyReactiveJwtDecoderBuilder;

+###org/springframework/security/oauth2/jwt/NimbusJwtDecoder$JwkSetUriJwtDecoderBuilder
@5.2.0.RELEASE
+#jwsAlgorithm(Lorg/springframework/security/oauth2/jose/jws/SignatureAlgorithm;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$JwkSetUriJwtDecoderBuilder;
+#jwsAlgorithms(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$JwkSetUriJwtDecoderBuilder;
+#restOperations(Lorg/springframework/web/client/RestOperations;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$JwkSetUriJwtDecoderBuilder;
+#build()Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder;
@5.4.0
+#cache(Lorg/springframework/cache/Cache;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$JwkSetUriJwtDecoderBuilder;
+#jwtProcessorCustomizer(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$JwkSetUriJwtDecoderBuilder;

+###org/springframework/security/oauth2/jwt/NimbusJwtDecoder$PublicKeyJwtDecoderBuilder
@5.2.0.RELEASE
+#signatureAlgorithm(Lorg/springframework/security/oauth2/jose/jws/SignatureAlgorithm;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$PublicKeyJwtDecoderBuilder;
+#build()Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder;
@5.4.0
+#jwtProcessorCustomizer(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$PublicKeyJwtDecoderBuilder;

+###org/springframework/security/oauth2/jwt/ReactiveJwtDecoder
@5.1.0.RELEASE
+#decode(Ljava/lang/String;)Lreactor/core/publisher/Mono;

+###org/springframework/security/oauth2/jwt/JwtValidationException
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
+#getErrors()Ljava/util/Collection;

+###org/springframework/security/oauth2/jwt/JwtDecoderFactory
@5.2.0.RELEASE
+#createDecoder(Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/JwtDecoder;

+###org/springframework/security/oauth2/jwt/MappedJwtClaimSetConverter
@5.1.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#withDefaults(Ljava/util/Map;)Lorg/springframework/security/oauth2/jwt/MappedJwtClaimSetConverter;
+#convert(Ljava/util/Map;)Ljava/util/Map;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/security/oauth2/jwt/ReactiveJwtDecoders
@5.1.0.RELEASE
+#fromOidcIssuerLocation(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
@5.2.0.RELEASE
+#fromIssuerLocation(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;

+###org/springframework/security/oauth2/jwt/JwtDecoders
@5.1.0.RELEASE
+#fromOidcIssuerLocation(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JwtDecoder;
@5.2.0.RELEASE
+#fromIssuerLocation(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JwtDecoder;

+###org/springframework/security/oauth2/jwt/JwtIssuerValidator
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#validate(Lorg/springframework/security/oauth2/jwt/Jwt;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;
+#validate(Lorg/springframework/security/oauth2/core/AbstractOAuth2Token;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;
@6.0.0
+#validate(Lorg/springframework/security/oauth2/core/OAuth2Token;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;
-#validate(Lorg/springframework/security/oauth2/core/AbstractOAuth2Token;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;

+###org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder
@5.2.0.RELEASE
+#jwsAlgorithm(Lorg/springframework/security/oauth2/jose/jws/SignatureAlgorithm;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder;
+#jwsAlgorithms(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder;
+#webClient(Lorg/springframework/web/reactive/function/client/WebClient;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder;
+#build()Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder;
@5.4.0
+#jwtProcessorCustomizer(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder;

+###org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$PublicKeyReactiveJwtDecoderBuilder
@5.2.0.RELEASE
+#signatureAlgorithm(Lorg/springframework/security/oauth2/jose/jws/SignatureAlgorithm;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$PublicKeyReactiveJwtDecoderBuilder;
+#build()Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder;
@5.4.0
+#jwtProcessorCustomizer(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$PublicKeyReactiveJwtDecoderBuilder;

+###org/springframework/security/oauth2/jwt/ReactiveJwtDecoderFactory
@5.2.0.RELEASE
+#createDecoder(Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;

+###org/springframework/security/oauth2/jwt/JwtClaimValidator
@5.3.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/function/Predicate;)V
+#validate(Lorg/springframework/security/oauth2/jwt/Jwt;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;
+#validate(Lorg/springframework/security/oauth2/core/AbstractOAuth2Token;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;
@6.0.0
+#validate(Lorg/springframework/security/oauth2/core/OAuth2Token;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;
-#validate(Lorg/springframework/security/oauth2/core/AbstractOAuth2Token;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;

+###org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSourceReactiveJwtDecoderBuilder
@5.2.0.RELEASE
+#jwsAlgorithm(Lorg/springframework/security/oauth2/jose/jws/JwsAlgorithm;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSourceReactiveJwtDecoderBuilder;
+#build()Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder;
@5.4.0
+#jwtProcessorCustomizer(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSourceReactiveJwtDecoderBuilder;

+###org/springframework/security/oauth2/jwt/JwtValidators
@5.1.0.RELEASE
+#createDefaultWithIssuer(Ljava/lang/String;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidator;
+#createDefault()Lorg/springframework/security/oauth2/core/OAuth2TokenValidator;

+###org/springframework/security/oauth2/jwt/NimbusJwtDecoder
@5.2.0.RELEASE
+#<init>(Lcom/nimbusds/jwt/proc/JWTProcessor;)V
+#setJwtValidator(Lorg/springframework/security/oauth2/core/OAuth2TokenValidator;)V
+#setClaimSetConverter(Lorg/springframework/core/convert/converter/Converter;)V
+#decode(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/Jwt;
+#withJwkSetUri(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$JwkSetUriJwtDecoderBuilder;
+#withPublicKey(Ljava/security/interfaces/RSAPublicKey;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$PublicKeyJwtDecoderBuilder;
+#withSecretKey(Ljavax/crypto/SecretKey;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$SecretKeyJwtDecoderBuilder;

+###org/springframework/security/oauth2/jwt/NimbusJwtDecoder$SecretKeyJwtDecoderBuilder
@5.2.0.RELEASE
+#macAlgorithm(Lorg/springframework/security/oauth2/jose/jws/MacAlgorithm;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$SecretKeyJwtDecoderBuilder;
+#build()Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder;
@5.4.0
+#jwtProcessorCustomizer(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/NimbusJwtDecoder$SecretKeyJwtDecoderBuilder;

+###org/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder
@5.1.0.RELEASE
+#<init>(Ljava/security/interfaces/RSAPublicKey;)V
+#<init>(Ljava/lang/String;)V
+#setJwtValidator(Lorg/springframework/security/oauth2/core/OAuth2TokenValidator;)V
+#decode(Ljava/lang/String;)Lreactor/core/publisher/Mono;
@5.2.0.RELEASE
+#<init>(Lorg/springframework/core/convert/converter/Converter;)V
+#setClaimSetConverter(Lorg/springframework/core/convert/converter/Converter;)V
+#withJwkSetUri(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder;
+#withPublicKey(Ljava/security/interfaces/RSAPublicKey;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$PublicKeyReactiveJwtDecoderBuilder;
+#withSecretKey(Ljavax/crypto/SecretKey;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$SecretKeyReactiveJwtDecoderBuilder;
+#withJwkSource(Ljava/util/function/Function;)Lorg/springframework/security/oauth2/jwt/NimbusReactiveJwtDecoder$JwkSourceReactiveJwtDecoderBuilder;

+###org/springframework/security/oauth2/jwt/Jwt$Builder
@5.2.0.RELEASE
+#tokenValue(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#claim(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#claims(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#header(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#audience(Ljava/util/Collection;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#expiresAt(Ljava/time/Instant;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#jti(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#issuedAt(Ljava/time/Instant;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#issuer(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#notBefore(Ljava/time/Instant;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#subject(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/Jwt$Builder;
+#build()Lorg/springframework/security/oauth2/jwt/Jwt;

+###org/springframework/security/oauth2/jwt/BadJwtException
@5.3.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/oauth2/jwt/JwtTimestampValidator
@5.1.0.RELEASE
+#<init>()V
+#<init>(Ljava/time/Duration;)V
+#validate(Lorg/springframework/security/oauth2/jwt/Jwt;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;
+#setClock(Ljava/time/Clock;)V
+#validate(Lorg/springframework/security/oauth2/core/AbstractOAuth2Token;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;
@6.0.0
+#validate(Lorg/springframework/security/oauth2/core/OAuth2Token;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;
-#validate(Lorg/springframework/security/oauth2/core/AbstractOAuth2Token;)Lorg/springframework/security/oauth2/core/OAuth2TokenValidatorResult;

+###org/springframework/security/oauth2/jose/jws/JwsAlgorithm
@5.2.0.RELEASE
+#getName()Ljava/lang/String;
@5.5.0
-#getName()Ljava/lang/String;

+###org/springframework/security/oauth2/jose/jws/SignatureAlgorithm
@5.2.0.RELEASE
+#values()[Lorg/springframework/security/oauth2/jose/jws/SignatureAlgorithm;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/oauth2/jose/jws/SignatureAlgorithm;
+#from(Ljava/lang/String;)Lorg/springframework/security/oauth2/jose/jws/SignatureAlgorithm;
+#getName()Ljava/lang/String;

+###org/springframework/security/oauth2/jose/jws/MacAlgorithm
@5.2.0.RELEASE
+#values()[Lorg/springframework/security/oauth2/jose/jws/MacAlgorithm;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/oauth2/jose/jws/MacAlgorithm;
+#from(Ljava/lang/String;)Lorg/springframework/security/oauth2/jose/jws/MacAlgorithm;
+#getName()Ljava/lang/String;

+###org/springframework/security/oauth2/jose/JwaAlgorithm
@5.5.0
+#getName()Ljava/lang/String;

+###org/springframework/security/oauth2/jwt/JwtDecoderInitializationException
@5.6.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/oauth2/jwt/JwtEncodingException
@5.6.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/oauth2/jwt/JoseHeaderNames
@5.6.0

+###org/springframework/security/oauth2/jwt/SupplierJwtDecoder
@5.6.0
+#<init>(Ljava/util/function/Supplier;)V
+#decode(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/Jwt;

+###org/springframework/security/oauth2/jwt/JwtEncoder
@5.6.0
+#encode(Lorg/springframework/security/oauth2/jwt/JwtEncoderParameters;)Lorg/springframework/security/oauth2/jwt/Jwt;

+###org/springframework/security/oauth2/jwt/JwtClaimsSet
@5.6.0
+#getClaims()Ljava/util/Map;
+#builder()Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
+#from(Lorg/springframework/security/oauth2/jwt/JwtClaimsSet;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;

+###org/springframework/security/oauth2/jwt/JwtEncoderParameters
@5.6.0
+#from(Lorg/springframework/security/oauth2/jwt/JwtClaimsSet;)Lorg/springframework/security/oauth2/jwt/JwtEncoderParameters;
+#from(Lorg/springframework/security/oauth2/jwt/JwsHeader;Lorg/springframework/security/oauth2/jwt/JwtClaimsSet;)Lorg/springframework/security/oauth2/jwt/JwtEncoderParameters;
+#getJwsHeader()Lorg/springframework/security/oauth2/jwt/JwsHeader;
+#getClaims()Lorg/springframework/security/oauth2/jwt/JwtClaimsSet;

+###org/springframework/security/oauth2/jwt/JwsHeader$Builder
@5.6.0
+#build()Lorg/springframework/security/oauth2/jwt/JwsHeader;
+#build()Lorg/springframework/security/oauth2/jwt/JoseHeader;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#header(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#criticalHeader(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#contentType(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#type(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#x509SHA256Thumbprint(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#x509SHA1Thumbprint(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#x509CertificateChain(Ljava/util/List;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#x509Url(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#keyId(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#jwk(Ljava/util/Map;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#jwkSetUrl(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#algorithm(Lorg/springframework/security/oauth2/jose/JwaAlgorithm;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
@5.8.0
-#headers(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#header(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#criticalHeader(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#contentType(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#type(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#x509SHA256Thumbprint(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#x509SHA1Thumbprint(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#x509CertificateChain(Ljava/util/List;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#x509Url(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#keyId(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#jwk(Ljava/util/Map;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#jwkSetUrl(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
-#algorithm(Lorg/springframework/security/oauth2/jose/JwaAlgorithm;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
@6.0.0
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#header(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#criticalHeader(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#contentType(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#type(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#x509SHA256Thumbprint(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#x509SHA1Thumbprint(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#x509CertificateChain(Ljava/util/List;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#x509Url(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#keyId(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#jwk(Ljava/util/Map;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#jwkSetUrl(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;
+#algorithm(Lorg/springframework/security/oauth2/jose/JwaAlgorithm;)Lorg/springframework/security/oauth2/jwt/JoseHeader$AbstractBuilder;

+###org/springframework/security/oauth2/jwt/JwsHeader
@5.6.0
+#getAlgorithm()Lorg/springframework/security/oauth2/jose/jws/JwsAlgorithm;
+#with(Lorg/springframework/security/oauth2/jose/jws/JwsAlgorithm;)Lorg/springframework/security/oauth2/jwt/JwsHeader$Builder;
+#from(Lorg/springframework/security/oauth2/jwt/JwsHeader;)Lorg/springframework/security/oauth2/jwt/JwsHeader$Builder;
+#getHeader(Ljava/lang/String;)Ljava/lang/Object;
+#getHeaders()Ljava/util/Map;
+#getCritical()Ljava/util/Set;
+#getContentType()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getX509SHA256Thumbprint()Ljava/lang/String;
+#getX509SHA1Thumbprint()Ljava/lang/String;
+#getX509CertificateChain()Ljava/util/List;
+#getX509Url()Ljava/net/URL;
+#getKeyId()Ljava/lang/String;
+#getJwk()Ljava/util/Map;
+#getJwkSetUrl()Ljava/net/URL;
+#getAlgorithm()Lorg/springframework/security/oauth2/jose/JwaAlgorithm;

+###org/springframework/security/oauth2/jwt/JwtClaimsSet$Builder
@5.6.0
+#issuer(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
+#subject(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
+#audience(Ljava/util/List;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
+#expiresAt(Ljava/time/Instant;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
+#notBefore(Ljava/time/Instant;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
+#issuedAt(Ljava/time/Instant;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
+#id(Ljava/lang/String;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
+#claim(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
+#claims(Ljava/util/function/Consumer;)Lorg/springframework/security/oauth2/jwt/JwtClaimsSet$Builder;
+#build()Lorg/springframework/security/oauth2/jwt/JwtClaimsSet;

+###org/springframework/security/oauth2/jwt/NimbusJwtEncoder
@5.6.0
+#<init>(Lcom/nimbusds/jose/jwk/source/JWKSource;)V
+#encode(Lorg/springframework/security/oauth2/jwt/JwtEncoderParameters;)Lorg/springframework/security/oauth2/jwt/Jwt;

+###org/springframework/security/oauth2/jwt/SupplierReactiveJwtDecoder
@5.6.0
+#<init>(Ljava/util/function/Supplier;)V
+#decode(Ljava/lang/String;)Lreactor/core/publisher/Mono;
