
+###io/protostuff/runtime/ArraySchemas$DoubleArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/MappedSchema$Field
@1.1.0
+#<init>(Lio/protostuff/WireFormat$FieldType;ILjava/lang/String;ZLio/protostuff/Tag;)V
+#<init>(Lio/protostuff/WireFormat$FieldType;ILjava/lang/String;Lio/protostuff/Tag;)V
@1.3.3
-###io/protostuff/runtime/MappedSchema$Field

+###io/protostuff/runtime/RuntimeUnsafeFieldFactory
@1.1.0

+###io/protostuff/runtime/PolymorphicEnumSchema
@1.1.0
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/HasSchema
@1.1.0
+#<init>()V
+#getSchema()Lio/protostuff/Schema;
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#newSchema(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;Lio/protostuff/runtime/PolymorphicSchema$Handler;)Lio/protostuff/runtime/PolymorphicSchema;
@1.4.3
-#<init>()V

+###io/protostuff/runtime/ArraySchemas$DateArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/ArraySchemas$BigDecimalArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/DerivativeSchema
@1.1.0
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#isInitialized(Ljava/lang/Object;)Z
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#newMessage()Ljava/lang/Object;
+#typeClass()Ljava/lang/Class;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/ArraySchemas$BoolArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/ArraySchemas$Int64Array
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/ArraySchemas
@1.1.0

+###io/protostuff/runtime/ClassSchema
@1.1.0
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/PolymorphicSchema
@1.1.0
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#isInitialized(Ljava/lang/Object;)Z
+#newMessage()Ljava/lang/Object;
+#typeClass()Ljava/lang/Class;
+#getPipeSchema()Lio/protostuff/Pipe$Schema;

+###io/protostuff/runtime/MappedSchema
@1.1.0
+#<init>(Ljava/lang/Class;[Lio/protostuff/runtime/MappedSchema$Field;I)V
+#<init>(Ljava/lang/Class;Ljava/util/Collection;I)V
+#<init>(Ljava/lang/Class;Ljava/util/Map;I)V
+#getFieldCount()I
+#typeClass()Ljava/lang/Class;
+#messageName()Ljava/lang/String;
+#messageFullName()Ljava/lang/String;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
@1.3.3
-###io/protostuff/runtime/MappedSchema

+###io/protostuff/runtime/ArraySchemas$CharArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/IdStrategy$UnknownTypeException
@1.1.0
+#<init>(Ljava/lang/String;)V

+###io/protostuff/runtime/ArraySchemas$ByteStringArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/EnumIO
@1.1.0
+#writeTo(Lio/protostuff/Output;IZLjava/lang/Enum;)V
+#transfer(Lio/protostuff/Pipe;Lio/protostuff/Input;Lio/protostuff/Output;IZ)V
+#<init>(Ljava/lang/Class;)V
+#newSchema(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;Lio/protostuff/runtime/PolymorphicSchema$Handler;)Lio/protostuff/runtime/PolymorphicSchema;
+#getEnumSetFactory()Lio/protostuff/CollectionSchema$MessageFactory;
+#getEnumMapFactory()Lio/protostuff/MapSchema$MessageFactory;
+#newEnumSet()Ljava/util/EnumSet;
+#newEnumMap()Ljava/util/EnumMap;
+#readFrom(Lio/protostuff/Input;)Ljava/lang/Enum;
@1.2.0
+#getTag(Ljava/lang/Enum;)I
+#getAlias(Ljava/lang/Enum;)Ljava/lang/String;
+#getByTag(I)Ljava/lang/Enum;
+#getByAlias(Ljava/lang/String;)Ljava/lang/Enum;
@1.4.3
+#transfer(Lio/protostuff/Pipe;Lio/protostuff/Input;Lio/protostuff/Output;IZLio/protostuff/runtime/IdStrategy;)V
+#<init>(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;)V
-#transfer(Lio/protostuff/Pipe;Lio/protostuff/Input;Lio/protostuff/Output;IZ)V
-#<init>(Ljava/lang/Class;)V

+###io/protostuff/runtime/ArraySchemas$EnumArray
@1.1.0
+#<init>(Lio/protostuff/runtime/PolymorphicSchema$Handler;Lio/protostuff/runtime/EnumIO;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V
@1.4.3
+#<init>(Lio/protostuff/runtime/IdStrategy;Lio/protostuff/runtime/PolymorphicSchema$Handler;Lio/protostuff/runtime/EnumIO;)V
-#<init>(Lio/protostuff/runtime/PolymorphicSchema$Handler;Lio/protostuff/runtime/EnumIO;)V

+###io/protostuff/runtime/ArraySchemas$ByteArrayArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/Delegate
@1.1.0
+#getFieldType()Lio/protostuff/WireFormat$FieldType;
+#readFrom(Lio/protostuff/Input;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;ILjava/lang/Object;Z)V
+#transfer(Lio/protostuff/Pipe;Lio/protostuff/Input;Lio/protostuff/Output;IZ)V
+#typeClass()Ljava/lang/Class;

+###io/protostuff/runtime/EnumIO$ByNumber
@1.1.0
+#<init>(Ljava/lang/Class;)V
+#readFrom(Lio/protostuff/Input;)Ljava/lang/Enum;
@1.4.3
+#<init>(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;)V
-#<init>(Ljava/lang/Class;)V

+###io/protostuff/runtime/ArraySchemas$FloatArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/ArraySchemas$DelegateArray
@1.1.0
+#<init>(Lio/protostuff/runtime/PolymorphicSchema$Handler;Lio/protostuff/runtime/Delegate;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V
@1.4.3
+#<init>(Lio/protostuff/runtime/IdStrategy;Lio/protostuff/runtime/PolymorphicSchema$Handler;Lio/protostuff/runtime/Delegate;)V
-#<init>(Lio/protostuff/runtime/PolymorphicSchema$Handler;Lio/protostuff/runtime/Delegate;)V

+###io/protostuff/runtime/EnumIO$ByName
@1.1.0
+#<init>(Ljava/lang/Class;)V
+#readFrom(Lio/protostuff/Input;)Ljava/lang/Enum;
@1.4.3
+#<init>(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;)V
-#<init>(Ljava/lang/Class;)V

+###io/protostuff/runtime/DefaultIdStrategy
@1.1.0
+#<init>()V
+#<init>(Lio/protostuff/runtime/IdStrategy;I)V
+#registerPojo(Ljava/lang/Class;Lio/protostuff/Schema;)Z
+#registerEnum(Ljava/lang/Class;)Z
+#registerDelegate(Lio/protostuff/runtime/Delegate;)Z
+#registerCollection(Lio/protostuff/CollectionSchema$MessageFactory;)Z
+#registerMap(Lio/protostuff/MapSchema$MessageFactory;)Z
+#map(Ljava/lang/Class;Ljava/lang/Class;)Z
+#isDelegateRegistered(Ljava/lang/Class;)Z
+#getDelegateWrapper(Ljava/lang/Class;)Lio/protostuff/runtime/HasDelegate;
+#getDelegate(Ljava/lang/Class;)Lio/protostuff/runtime/Delegate;
+#isRegistered(Ljava/lang/Class;)Z
+#getSchemaWrapper(Ljava/lang/Class;Z)Lio/protostuff/runtime/HasSchema;
@1.4.3
+#<init>(ILio/protostuff/runtime/IdStrategy;I)V
+#registerPojo(Ljava/lang/Class;)Z
@1.6.1
+#registerDelegate(Ljava/lang/String;Lio/protostuff/runtime/Delegate;)Z
@1.6.2
+#<init>(I)V

+###io/protostuff/runtime/ArraySchemas$StringArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/ObjectSchema
@1.1.0
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/PolymorphicSchema$Handler
@1.1.0
+#setValue(Ljava/lang/Object;Ljava/lang/Object;)V

+###io/protostuff/runtime/ArraySchemas$BigIntegerArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/PolymorphicSchemaFactories
@1.1.0
+#values()[Lio/protostuff/runtime/PolymorphicSchemaFactories;
+#valueOf(Ljava/lang/String;)Lio/protostuff/runtime/PolymorphicSchemaFactories;
+#getFactoryFromField(Ljava/lang/Class;)Lio/protostuff/runtime/PolymorphicSchema$Factory;
+#getFactoryFromRepeatedValueGenericType(Ljava/lang/Class;)Lio/protostuff/runtime/PolymorphicSchema$Factory;
+#getSchemaFromCollectionOrMapGenericType(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/runtime/PolymorphicSchema;
@1.4.3
+#getFactoryFromField(Ljava/lang/reflect/Field;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/runtime/PolymorphicSchema$Factory;
-#getFactoryFromField(Ljava/lang/Class;)Lio/protostuff/runtime/PolymorphicSchema$Factory;

+###io/protostuff/runtime/PolymorphicThrowableSchema
@1.1.0
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/PolymorphicMapSchema
@1.1.0
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/RuntimePipeSchema
@1.1.0
+#<init>(Lio/protostuff/Schema;[Lio/protostuff/runtime/MappedSchema$Field;)V
@1.3.3
+#<init>(Lio/protostuff/Schema;Lio/protostuff/runtime/FieldMap;)V
-#<init>(Lio/protostuff/Schema;[Lio/protostuff/runtime/MappedSchema$Field;)V

+###io/protostuff/runtime/PolymorphicSchema$Factory
@1.1.0
+#newSchema(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;Lio/protostuff/runtime/PolymorphicSchema$Handler;)Lio/protostuff/runtime/PolymorphicSchema;

+###io/protostuff/runtime/ArraySchemas$ShortArray
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/RuntimeSchema
@1.1.0
+#map(Ljava/lang/Class;Ljava/lang/Class;)Z
+#register(Ljava/lang/Class;Lio/protostuff/Schema;)Z
+#isRegistered(Ljava/lang/Class;)Z
+#isRegistered(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;)Z
+#getSchema(Ljava/lang/Class;)Lio/protostuff/Schema;
+#getSchema(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/Schema;
+#createFrom(Ljava/lang/Class;)Lio/protostuff/runtime/RuntimeSchema;
+#createFrom(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/runtime/RuntimeSchema;
+#createFrom(Ljava/lang/Class;[Ljava/lang/String;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/runtime/RuntimeSchema;
+#createFrom(Ljava/lang/Class;Ljava/util/Set;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/runtime/RuntimeSchema;
+#createFrom(Ljava/lang/Class;Ljava/util/Map;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/runtime/RuntimeSchema;
+#<init>(Ljava/lang/Class;Ljava/util/Collection;ILjava/lang/reflect/Constructor;)V
+#<init>(Ljava/lang/Class;Ljava/util/Collection;ILio/protostuff/runtime/RuntimeEnv$Instantiator;)V
+#isInitialized(Ljava/lang/Object;)Z
+#newMessage()Ljava/lang/Object;
@1.3.3
+#<init>(Ljava/lang/Class;Ljava/util/Collection;Ljava/lang/reflect/Constructor;)V
+#<init>(Ljava/lang/Class;Ljava/util/Collection;Lio/protostuff/runtime/RuntimeEnv$Instantiator;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldByNumber(I)Lio/protostuff/runtime/Field;
+#getFieldByName(Ljava/lang/String;)Lio/protostuff/runtime/Field;
+#getFieldCount()I
+#getFields()Ljava/util/List;
+#typeClass()Ljava/lang/Class;
+#messageName()Ljava/lang/String;
+#messageFullName()Ljava/lang/String;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V
-#<init>(Ljava/lang/Class;Ljava/util/Collection;ILjava/lang/reflect/Constructor;)V
-#<init>(Ljava/lang/Class;Ljava/util/Collection;ILio/protostuff/runtime/RuntimeEnv$Instantiator;)V
@1.4.3
+#register(Ljava/lang/Class;)Z

+###io/protostuff/runtime/RuntimeReflectionFieldFactory
@1.1.0

+###io/protostuff/runtime/ArraySchemas$Base
@1.1.0
+#<init>(Lio/protostuff/runtime/PolymorphicSchema$Handler;)V
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
@1.4.3
+#<init>(Lio/protostuff/runtime/IdStrategy;Lio/protostuff/runtime/PolymorphicSchema$Handler;)V
-#<init>(Lio/protostuff/runtime/PolymorphicSchema$Handler;)V

+###io/protostuff/runtime/ArraySchemas$PojoArray
@1.1.0
+#<init>(Lio/protostuff/runtime/PolymorphicSchema$Handler;Lio/protostuff/runtime/HasSchema;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V
@1.4.3
+#<init>(Lio/protostuff/runtime/IdStrategy;Lio/protostuff/runtime/PolymorphicSchema$Handler;Lio/protostuff/runtime/HasSchema;)V
-#<init>(Lio/protostuff/runtime/PolymorphicSchema$Handler;Lio/protostuff/runtime/HasSchema;)V

+###io/protostuff/runtime/HasDelegate
@1.1.0
+#<init>(Lio/protostuff/runtime/Delegate;)V
+#getDelegate()Lio/protostuff/runtime/Delegate;
+#newSchema(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;Lio/protostuff/runtime/PolymorphicSchema$Handler;)Lio/protostuff/runtime/PolymorphicSchema;
@1.4.3
+#<init>(Lio/protostuff/runtime/Delegate;Lio/protostuff/runtime/IdStrategy;)V
-#<init>(Lio/protostuff/runtime/Delegate;)V

+###io/protostuff/runtime/RuntimeEnv
@1.1.0
+#newInstantiator(Ljava/lang/Class;)Lio/protostuff/runtime/RuntimeEnv$Instantiator;

+###io/protostuff/runtime/IdStrategy
@1.1.0
+#isDelegateRegistered(Ljava/lang/Class;)Z
+#getDelegateWrapper(Ljava/lang/Class;)Lio/protostuff/runtime/HasDelegate;
+#getDelegate(Ljava/lang/Class;)Lio/protostuff/runtime/Delegate;
+#isRegistered(Ljava/lang/Class;)Z
+#getSchemaWrapper(Ljava/lang/Class;Z)Lio/protostuff/runtime/HasSchema;

+###io/protostuff/runtime/ArraySchema
@1.1.0
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/RuntimeEnv$Instantiator
@1.1.0
+#<init>()V
+#newInstance()Ljava/lang/Object;

+###io/protostuff/runtime/IdStrategy$Factory
@1.1.0
+#create()Lio/protostuff/runtime/IdStrategy;
+#postCreate()V

+###io/protostuff/runtime/NumberSchema
@1.1.0
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/RuntimeFieldFactory
@1.1.0
+#getFieldFactory(Ljava/lang/Class;)Lio/protostuff/runtime/RuntimeFieldFactory;
+#getFieldFactory(Ljava/lang/Class;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/runtime/RuntimeFieldFactory;
+#getInline(Ljava/lang/Class;)Lio/protostuff/runtime/RuntimeFieldFactory;
+#<init>(I)V
+#create(ILjava/lang/String;Ljava/lang/reflect/Field;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/runtime/MappedSchema$Field;
@1.3.3
+#create(ILjava/lang/String;Ljava/lang/reflect/Field;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/runtime/Field;
-#create(ILjava/lang/String;Ljava/lang/reflect/Field;Lio/protostuff/runtime/IdStrategy;)Lio/protostuff/runtime/MappedSchema$Field;

+###io/protostuff/runtime/PolymorphicCollectionSchema
@1.1.0
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/ArraySchemas$Int32Array
@1.1.0
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#readFrom(Lio/protostuff/Input;Ljava/lang/Object;)Ljava/lang/Object;
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/Field
@1.3.3
+#<init>(Lio/protostuff/WireFormat$FieldType;ILjava/lang/String;ZLio/protostuff/Tag;)V
+#<init>(Lio/protostuff/WireFormat$FieldType;ILjava/lang/String;Lio/protostuff/Tag;)V

+###io/protostuff/runtime/ReflectAccessor
@1.5.2
+#<init>(Ljava/lang/reflect/Field;)V
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###io/protostuff/runtime/Accessor
@1.5.2
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###io/protostuff/runtime/Accessor$Factory
@1.5.2
+#create(Ljava/lang/reflect/Field;)Lio/protostuff/runtime/Accessor;

+###io/protostuff/runtime/PolymorphicPojoMapSchema
@1.4.3
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#isInitialized(Ljava/lang/Object;)Z
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#newMessage()Ljava/lang/Object;
+#typeClass()Ljava/lang/Class;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/PolymorphicPojoSchema
@1.4.3
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#isInitialized(Ljava/lang/Object;)Z
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#newMessage()Ljava/lang/Object;
+#typeClass()Ljava/lang/Class;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V

+###io/protostuff/runtime/UnsafeAccessor
@1.5.2
+#<init>(Ljava/lang/reflect/Field;)V
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###io/protostuff/runtime/PolymorphicPojoCollectionSchema
@1.4.3
+#<init>(Lio/protostuff/runtime/IdStrategy;)V
+#getPipeSchema()Lio/protostuff/Pipe$Schema;
+#getFieldName(I)Ljava/lang/String;
+#getFieldNumber(Ljava/lang/String;)I
+#isInitialized(Ljava/lang/Object;)Z
+#messageFullName()Ljava/lang/String;
+#messageName()Ljava/lang/String;
+#newMessage()Ljava/lang/Object;
+#typeClass()Ljava/lang/Class;
+#mergeFrom(Lio/protostuff/Input;Ljava/lang/Object;)V
+#writeTo(Lio/protostuff/Output;Ljava/lang/Object;)V
