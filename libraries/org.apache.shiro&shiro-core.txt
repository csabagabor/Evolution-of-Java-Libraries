
+###org/apache/shiro/SecurityUtils
@1.0.0-incubating
+#<init>()V
+#getSubject()Lorg/apache/shiro/subject/Subject;
+#setSecurityManager(Lorg/apache/shiro/mgt/SecurityManager;)V
+#getSecurityManager()Lorg/apache/shiro/mgt/SecurityManager;

+###org/apache/shiro/ShiroException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/shiro/ShiroException

+###org/apache/shiro/UnavailableSecurityManagerException
@1.0.0-incubating
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.4.0-RC2
*#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V[deprecated]

+###org/apache/shiro/aop/AnnotationHandler
@1.0.0-incubating
+#<init>(Ljava/lang/Class;)V
+#getAnnotationClass()Ljava/lang/Class;

+###org/apache/shiro/aop/AnnotationMethodInterceptor
@1.0.0-incubating
+#<init>(Lorg/apache/shiro/aop/AnnotationHandler;)V
+#getHandler()Lorg/apache/shiro/aop/AnnotationHandler;
+#setHandler(Lorg/apache/shiro/aop/AnnotationHandler;)V
+#supports(Lorg/apache/shiro/aop/MethodInvocation;)Z
@1.1.0
+#<init>(Lorg/apache/shiro/aop/AnnotationHandler;Lorg/apache/shiro/aop/AnnotationResolver;)V
+#getResolver()Lorg/apache/shiro/aop/AnnotationResolver;
+#setResolver(Lorg/apache/shiro/aop/AnnotationResolver;)V

+###org/apache/shiro/aop/AnnotationResolver
@1.1.0
+#getAnnotation(Lorg/apache/shiro/aop/MethodInvocation;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;

+###org/apache/shiro/aop/DefaultAnnotationResolver
@1.1.0
+#<init>()V
+#getAnnotation(Lorg/apache/shiro/aop/MethodInvocation;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;

+###org/apache/shiro/aop/MethodInterceptor
@1.0.0-incubating
+#invoke(Lorg/apache/shiro/aop/MethodInvocation;)Ljava/lang/Object;

+###org/apache/shiro/aop/MethodInterceptorSupport
@1.0.0-incubating
+#<init>()V

+###org/apache/shiro/aop/MethodInvocation
@1.0.0-incubating
+#proceed()Ljava/lang/Object;
+#getMethod()Ljava/lang/reflect/Method;
+#getArguments()[Ljava/lang/Object;
+#getThis()Ljava/lang/Object;

+###org/apache/shiro/authc/AbstractAuthenticator
@1.0.0-incubating
+#<init>()V
+#setAuthenticationListeners(Ljava/util/Collection;)V
+#getAuthenticationListeners()Ljava/util/Collection;
+#onLogout(Lorg/apache/shiro/subject/PrincipalCollection;)V
+#authenticate(Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/authc/AuthenticationInfo;

+###org/apache/shiro/authc/Account
@1.0.0-incubating

+###org/apache/shiro/authc/AccountException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/AuthenticationException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/AuthenticationInfo
@1.0.0-incubating
+#getPrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#getCredentials()Ljava/lang/Object;

+###org/apache/shiro/authc/AuthenticationListener
@1.0.0-incubating
+#onSuccess(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)V
+#onFailure(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationException;)V
+#onLogout(Lorg/apache/shiro/subject/PrincipalCollection;)V

+###org/apache/shiro/authc/AuthenticationToken
@1.0.0-incubating
+#getPrincipal()Ljava/lang/Object;
+#getCredentials()Ljava/lang/Object;

+###org/apache/shiro/authc/Authenticator
@1.0.0-incubating
+#authenticate(Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/authc/AuthenticationInfo;

+###org/apache/shiro/authc/BearerToken
@1.5.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getHost()Ljava/lang/String;
+#getPrincipal()Ljava/lang/Object;
+#getCredentials()Ljava/lang/Object;
+#getToken()Ljava/lang/String;

+###org/apache/shiro/authc/ConcurrentAccessException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/CredentialsException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/DisabledAccountException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/ExcessiveAttemptsException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/ExpiredCredentialsException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/HostAuthenticationToken
@1.0.0-incubating
+#getHost()Ljava/lang/String;

+###org/apache/shiro/authc/IncorrectCredentialsException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/LockedAccountException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/LogoutAware
@1.0.0-incubating
+#onLogout(Lorg/apache/shiro/subject/PrincipalCollection;)V

+###org/apache/shiro/authc/MergableAuthenticationInfo
@1.0.0-incubating
+#merge(Lorg/apache/shiro/authc/AuthenticationInfo;)V

+###org/apache/shiro/authc/RememberMeAuthenticationToken
@1.0.0-incubating
+#isRememberMe()Z

+###org/apache/shiro/authc/SaltedAuthenticationInfo
@1.1.0
+#getCredentialsSalt()Lorg/apache/shiro/util/ByteSource;
@2.0.0-alpha-1
+#getCredentialsSalt()Lorg/apache/shiro/lang/util/ByteSource;
-#getCredentialsSalt()Lorg/apache/shiro/util/ByteSource;

+###org/apache/shiro/authc/SimpleAccount
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/util/Collection;Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/Object;)V
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/Object;Ljava/util/Set;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)V
+#<init>(Ljava/util/Collection;Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)V
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/Object;Ljava/util/Set;Ljava/util/Set;)V
+#getPrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#setPrincipals(Lorg/apache/shiro/subject/PrincipalCollection;)V
+#getCredentials()Ljava/lang/Object;
+#setCredentials(Ljava/lang/Object;)V
+#getRoles()Ljava/util/Collection;
+#setRoles(Ljava/util/Set;)V
+#addRole(Ljava/lang/String;)V
+#addRole(Ljava/util/Collection;)V
+#getStringPermissions()Ljava/util/Collection;
+#setStringPermissions(Ljava/util/Set;)V
+#addStringPermission(Ljava/lang/String;)V
+#addStringPermissions(Ljava/util/Collection;)V
+#getObjectPermissions()Ljava/util/Collection;
+#setObjectPermissions(Ljava/util/Set;)V
+#addObjectPermission(Lorg/apache/shiro/authz/Permission;)V
+#addObjectPermissions(Ljava/util/Collection;)V
+#isLocked()Z
+#setLocked(Z)V
+#isCredentialsExpired()Z
+#setCredentialsExpired(Z)V
+#merge(Lorg/apache/shiro/authc/AuthenticationInfo;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.1.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/shiro/util/ByteSource;Ljava/lang/String;)V
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/Object;Lorg/apache/shiro/util/ByteSource;)V
+#getCredentialsSalt()Lorg/apache/shiro/util/ByteSource;
+#setCredentialsSalt(Lorg/apache/shiro/util/ByteSource;)V
@2.0.0-alpha-1
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/shiro/lang/util/ByteSource;Ljava/lang/String;)V
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/Object;Lorg/apache/shiro/lang/util/ByteSource;)V
+#getCredentialsSalt()Lorg/apache/shiro/lang/util/ByteSource;
+#setCredentialsSalt(Lorg/apache/shiro/lang/util/ByteSource;)V
-#<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/shiro/util/ByteSource;Ljava/lang/String;)V
-#<init>(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/Object;Lorg/apache/shiro/util/ByteSource;)V
-#getCredentialsSalt()Lorg/apache/shiro/util/ByteSource;
-#setCredentialsSalt(Lorg/apache/shiro/util/ByteSource;)V

+###org/apache/shiro/authc/SimpleAuthenticationInfo
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/Object;)V
+#getPrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#setPrincipals(Lorg/apache/shiro/subject/PrincipalCollection;)V
+#getCredentials()Ljava/lang/Object;
+#setCredentials(Ljava/lang/Object;)V
+#merge(Lorg/apache/shiro/authc/AuthenticationInfo;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/shiro/util/ByteSource;Ljava/lang/String;)V
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/Object;Lorg/apache/shiro/util/ByteSource;)V
+#getCredentialsSalt()Lorg/apache/shiro/util/ByteSource;
+#setCredentialsSalt(Lorg/apache/shiro/util/ByteSource;)V
@2.0.0-alpha-1
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/shiro/lang/util/ByteSource;Ljava/lang/String;)V
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/Object;Lorg/apache/shiro/lang/util/ByteSource;)V
+#getCredentialsSalt()Lorg/apache/shiro/lang/util/ByteSource;
+#setCredentialsSalt(Lorg/apache/shiro/lang/util/ByteSource;)V
-#<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/shiro/util/ByteSource;Ljava/lang/String;)V
-#<init>(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/Object;Lorg/apache/shiro/util/ByteSource;)V
-#getCredentialsSalt()Lorg/apache/shiro/util/ByteSource;
-#setCredentialsSalt(Lorg/apache/shiro/util/ByteSource;)V

+###org/apache/shiro/authc/UnknownAccountException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/UsernamePasswordToken
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;[C)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[CLjava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[CZ)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;[CZLjava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()[C
+#setPassword([C)V
+#getPrincipal()Ljava/lang/Object;
+#getCredentials()Ljava/lang/Object;
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#isRememberMe()Z
+#setRememberMe(Z)V
+#clear()V
+#toString()Ljava/lang/String;

+###org/apache/shiro/authc/credential/AllowAllCredentialsMatcher
@1.0.0-incubating
+#<init>()V
+#doCredentialsMatch(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Z

+###org/apache/shiro/authc/credential/CredentialsMatcher
@1.0.0-incubating
+#doCredentialsMatch(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Z

+###org/apache/shiro/authc/credential/DefaultPasswordService
@1.2.0
+#<init>()V
+#encryptPassword(Ljava/lang/Object;)Ljava/lang/String;
+#hashPassword(Ljava/lang/Object;)Lorg/apache/shiro/crypto/hash/Hash;
+#passwordsMatch(Ljava/lang/Object;Lorg/apache/shiro/crypto/hash/Hash;)Z
+#passwordsMatch(Ljava/lang/Object;Ljava/lang/String;)Z
+#getHashService()Lorg/apache/shiro/crypto/hash/HashService;
+#setHashService(Lorg/apache/shiro/crypto/hash/HashService;)V
+#getHashFormat()Lorg/apache/shiro/crypto/hash/format/HashFormat;
+#setHashFormat(Lorg/apache/shiro/crypto/hash/format/HashFormat;)V
+#getHashFormatFactory()Lorg/apache/shiro/crypto/hash/format/HashFormatFactory;
+#setHashFormatFactory(Lorg/apache/shiro/crypto/hash/format/HashFormatFactory;)V

+###org/apache/shiro/authc/credential/HashedCredentialsMatcher
@1.0.0-incubating
+#<init>()V
+#isStoredCredentialsHexEncoded()Z
+#setStoredCredentialsHexEncoded(Z)V
+#isHashSalted()Z
+#setHashSalted(Z)V
+#getHashIterations()I
+#setHashIterations(I)V
@1.1.0
+#<init>(Ljava/lang/String;)V
+#getHashAlgorithmName()Ljava/lang/String;
+#setHashAlgorithmName(Ljava/lang/String;)V
*#isHashSalted()Z[deprecated]
*#setHashSalted(Z)V[deprecated]
+#doCredentialsMatch(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Z

+###org/apache/shiro/authc/credential/HashingPasswordService
@1.2.0
+#hashPassword(Ljava/lang/Object;)Lorg/apache/shiro/crypto/hash/Hash;
+#passwordsMatch(Ljava/lang/Object;Lorg/apache/shiro/crypto/hash/Hash;)Z

+###org/apache/shiro/authc/credential/Md2CredentialsMatcher
@1.0.0-incubating
+#<init>()V
@2.0.0-alpha-1
-###org/apache/shiro/authc/credential/Md2CredentialsMatcher

+###org/apache/shiro/authc/credential/Md5CredentialsMatcher
@1.0.0-incubating
+#<init>()V
@2.0.0-alpha-1
-###org/apache/shiro/authc/credential/Md5CredentialsMatcher

+###org/apache/shiro/authc/credential/PasswordMatcher
@1.2.0
+#<init>()V
+#doCredentialsMatch(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Z
+#getPasswordService()Lorg/apache/shiro/authc/credential/PasswordService;
+#setPasswordService(Lorg/apache/shiro/authc/credential/PasswordService;)V

+###org/apache/shiro/authc/credential/PasswordService
@1.2.0
+#encryptPassword(Ljava/lang/Object;)Ljava/lang/String;
+#passwordsMatch(Ljava/lang/Object;Ljava/lang/String;)Z

+###org/apache/shiro/authc/credential/Sha1CredentialsMatcher
@1.0.0-incubating
+#<init>()V
@2.0.0-alpha-1
-###org/apache/shiro/authc/credential/Sha1CredentialsMatcher

+###org/apache/shiro/authc/credential/Sha256CredentialsMatcher
@1.0.0-incubating
+#<init>()V

+###org/apache/shiro/authc/credential/Sha384CredentialsMatcher
@1.0.0-incubating
+#<init>()V

+###org/apache/shiro/authc/credential/Sha512CredentialsMatcher
@1.0.0-incubating
+#<init>()V

+###org/apache/shiro/authc/credential/SimpleCredentialsMatcher
@1.0.0-incubating
+#<init>()V
+#doCredentialsMatch(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Z

+###org/apache/shiro/authc/pam/AbstractAuthenticationStrategy
@1.0.0-incubating
+#<init>()V
+#beforeAllAttempts(Ljava/util/Collection;Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/authc/AuthenticationInfo;
+#beforeAttempt(Lorg/apache/shiro/realm/Realm;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Lorg/apache/shiro/authc/AuthenticationInfo;
+#afterAttempt(Lorg/apache/shiro/realm/Realm;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;Lorg/apache/shiro/authc/AuthenticationInfo;Ljava/lang/Throwable;)Lorg/apache/shiro/authc/AuthenticationInfo;
+#afterAllAttempts(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Lorg/apache/shiro/authc/AuthenticationInfo;

+###org/apache/shiro/authc/pam/AllSuccessfulStrategy
@1.0.0-incubating
+#<init>()V
+#beforeAttempt(Lorg/apache/shiro/realm/Realm;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Lorg/apache/shiro/authc/AuthenticationInfo;
+#afterAttempt(Lorg/apache/shiro/realm/Realm;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;Lorg/apache/shiro/authc/AuthenticationInfo;Ljava/lang/Throwable;)Lorg/apache/shiro/authc/AuthenticationInfo;

+###org/apache/shiro/authc/pam/AtLeastOneSuccessfulStrategy
@1.0.0-incubating
+#<init>()V
+#afterAllAttempts(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Lorg/apache/shiro/authc/AuthenticationInfo;

+###org/apache/shiro/authc/pam/AuthenticationStrategy
@1.0.0-incubating
+#beforeAllAttempts(Ljava/util/Collection;Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/authc/AuthenticationInfo;
+#beforeAttempt(Lorg/apache/shiro/realm/Realm;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Lorg/apache/shiro/authc/AuthenticationInfo;
+#afterAttempt(Lorg/apache/shiro/realm/Realm;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;Lorg/apache/shiro/authc/AuthenticationInfo;Ljava/lang/Throwable;)Lorg/apache/shiro/authc/AuthenticationInfo;
+#afterAllAttempts(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Lorg/apache/shiro/authc/AuthenticationInfo;

+###org/apache/shiro/authc/pam/FirstSuccessfulStrategy
@1.0.0-incubating
+#<init>()V
+#beforeAllAttempts(Ljava/util/Collection;Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/authc/AuthenticationInfo;
@1.5.0
+#setStopAfterFirstSuccess(Z)V
+#getStopAfterFirstSuccess()Z
+#beforeAttempt(Lorg/apache/shiro/realm/Realm;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Lorg/apache/shiro/authc/AuthenticationInfo;

+###org/apache/shiro/authc/pam/ModularRealmAuthenticator
@1.0.0-incubating
+#<init>()V
+#setRealms(Ljava/util/Collection;)V
+#getAuthenticationStrategy()Lorg/apache/shiro/authc/pam/AuthenticationStrategy;
+#setAuthenticationStrategy(Lorg/apache/shiro/authc/pam/AuthenticationStrategy;)V
+#onLogout(Lorg/apache/shiro/subject/PrincipalCollection;)V

+###org/apache/shiro/authc/pam/ShortCircuitIterationException
@1.5.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authc/pam/UnsupportedTokenException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authz/AuthorizationException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authz/AuthorizationInfo
@1.0.0-incubating
+#getRoles()Ljava/util/Collection;
+#getStringPermissions()Ljava/util/Collection;
+#getObjectPermissions()Ljava/util/Collection;

+###org/apache/shiro/authz/Authorizer
@1.0.0-incubating
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Lorg/apache/shiro/authz/Permission;)Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)[Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/List;)[Z
+#isPermittedAll(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)Z
+#isPermittedAll(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)Z
+#checkPermission(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)V
+#checkPermission(Lorg/apache/shiro/subject/PrincipalCollection;Lorg/apache/shiro/authz/Permission;)V
+#checkPermissions(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)V
+#checkPermissions(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)V
+#hasRole(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)Z
+#hasRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/List;)[Z
+#hasAllRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)Z
+#checkRole(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)V
+#checkRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)V
@1.1.0
+#checkRoles(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)V

+###org/apache/shiro/authz/HostUnauthorizedException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getHost()Ljava/lang/String;
+#setHostAddress(Ljava/lang/String;)V

+###org/apache/shiro/authz/ModularRealmAuthorizer
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#getRealms()Ljava/util/Collection;
+#setRealms(Ljava/util/Collection;)V
+#getPermissionResolver()Lorg/apache/shiro/authz/permission/PermissionResolver;
+#setPermissionResolver(Lorg/apache/shiro/authz/permission/PermissionResolver;)V
+#getRolePermissionResolver()Lorg/apache/shiro/authz/permission/RolePermissionResolver;
+#setRolePermissionResolver(Lorg/apache/shiro/authz/permission/RolePermissionResolver;)V
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Lorg/apache/shiro/authz/Permission;)Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)[Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/List;)[Z
+#isPermittedAll(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)Z
+#isPermittedAll(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)Z
+#checkPermission(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)V
+#checkPermission(Lorg/apache/shiro/subject/PrincipalCollection;Lorg/apache/shiro/authz/Permission;)V
+#checkPermissions(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)V
+#checkPermissions(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)V
+#hasRole(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)Z
+#hasRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/List;)[Z
+#hasAllRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)Z
+#checkRole(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)V
+#checkRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)V
@1.1.0
+#checkRoles(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)V

+###org/apache/shiro/authz/Permission
@1.0.0-incubating
+#implies(Lorg/apache/shiro/authz/Permission;)Z

+###org/apache/shiro/authz/SimpleAuthorizationInfo
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/util/Set;)V
+#getRoles()Ljava/util/Set;
+#setRoles(Ljava/util/Set;)V
+#addRole(Ljava/lang/String;)V
+#addRoles(Ljava/util/Collection;)V
+#getStringPermissions()Ljava/util/Set;
+#setStringPermissions(Ljava/util/Set;)V
+#addStringPermission(Ljava/lang/String;)V
+#addStringPermissions(Ljava/util/Collection;)V
+#getObjectPermissions()Ljava/util/Set;
+#setObjectPermissions(Ljava/util/Set;)V
+#addObjectPermission(Lorg/apache/shiro/authz/Permission;)V
+#addObjectPermissions(Ljava/util/Collection;)V
+#getObjectPermissions()Ljava/util/Collection;
+#getStringPermissions()Ljava/util/Collection;
+#getRoles()Ljava/util/Collection;

+###org/apache/shiro/authz/SimpleRole
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getPermissions()Ljava/util/Set;
+#setPermissions(Ljava/util/Set;)V
+#add(Lorg/apache/shiro/authz/Permission;)V
+#addAll(Ljava/util/Collection;)V
+#isPermitted(Lorg/apache/shiro/authz/Permission;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/shiro/authz/UnauthenticatedException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authz/UnauthorizedException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/authz/annotation/Logical
@1.1.0
+#values()[Lorg/apache/shiro/authz/annotation/Logical;
+#valueOf(Ljava/lang/String;)Lorg/apache/shiro/authz/annotation/Logical;

+###org/apache/shiro/authz/annotation/RequiresAuthentication
@1.0.0-incubating

+###org/apache/shiro/authz/annotation/RequiresGuest
@1.0.0-incubating

+###org/apache/shiro/authz/annotation/RequiresPermissions
@1.0.0-incubating
+#value()Ljava/lang/String;
@1.1.0
+#value()[Ljava/lang/String;
+#logical()Lorg/apache/shiro/authz/annotation/Logical;
-#value()Ljava/lang/String;

+###org/apache/shiro/authz/annotation/RequiresRoles
@1.0.0-incubating
+#value()Ljava/lang/String;
@1.1.0
+#value()[Ljava/lang/String;
+#logical()Lorg/apache/shiro/authz/annotation/Logical;
-#value()Ljava/lang/String;

+###org/apache/shiro/authz/annotation/RequiresUser
@1.0.0-incubating

+###org/apache/shiro/authz/aop/AnnotationsAuthorizingMethodInterceptor
@1.0.0-incubating
+#<init>()V
+#getMethodInterceptors()Ljava/util/Collection;
+#setMethodInterceptors(Ljava/util/Collection;)V

+###org/apache/shiro/authz/aop/AuthenticatedAnnotationHandler
@1.0.0-incubating
+#<init>()V
+#assertAuthorized(Ljava/lang/annotation/Annotation;)V

+###org/apache/shiro/authz/aop/AuthenticatedAnnotationMethodInterceptor
@1.0.0-incubating
+#<init>()V
@1.1.0
+#<init>(Lorg/apache/shiro/aop/AnnotationResolver;)V

+###org/apache/shiro/authz/aop/AuthorizingAnnotationHandler
@1.0.0-incubating
+#<init>(Ljava/lang/Class;)V
+#assertAuthorized(Ljava/lang/annotation/Annotation;)V

+###org/apache/shiro/authz/aop/AuthorizingAnnotationMethodInterceptor
@1.0.0-incubating
+#<init>(Lorg/apache/shiro/authz/aop/AuthorizingAnnotationHandler;)V
+#invoke(Lorg/apache/shiro/aop/MethodInvocation;)Ljava/lang/Object;
+#assertAuthorized(Lorg/apache/shiro/aop/MethodInvocation;)V
@1.1.0
+#<init>(Lorg/apache/shiro/authz/aop/AuthorizingAnnotationHandler;Lorg/apache/shiro/aop/AnnotationResolver;)V

+###org/apache/shiro/authz/aop/AuthorizingMethodInterceptor
@1.0.0-incubating
+#<init>()V
+#invoke(Lorg/apache/shiro/aop/MethodInvocation;)Ljava/lang/Object;

+###org/apache/shiro/authz/aop/GuestAnnotationHandler
@1.0.0-incubating
+#<init>()V
+#assertAuthorized(Ljava/lang/annotation/Annotation;)V

+###org/apache/shiro/authz/aop/GuestAnnotationMethodInterceptor
@1.0.0-incubating
+#<init>()V
@1.1.0
+#<init>(Lorg/apache/shiro/aop/AnnotationResolver;)V

+###org/apache/shiro/authz/aop/PermissionAnnotationHandler
@1.0.0-incubating
+#<init>()V
+#assertAuthorized(Ljava/lang/annotation/Annotation;)V

+###org/apache/shiro/authz/aop/PermissionAnnotationMethodInterceptor
@1.0.0-incubating
+#<init>()V
@1.1.0
+#<init>(Lorg/apache/shiro/aop/AnnotationResolver;)V

+###org/apache/shiro/authz/aop/RoleAnnotationHandler
@1.0.0-incubating
+#<init>()V
+#assertAuthorized(Ljava/lang/annotation/Annotation;)V

+###org/apache/shiro/authz/aop/RoleAnnotationMethodInterceptor
@1.0.0-incubating
+#<init>()V
@1.1.0
+#<init>(Lorg/apache/shiro/aop/AnnotationResolver;)V

+###org/apache/shiro/authz/aop/UserAnnotationHandler
@1.0.0-incubating
+#<init>()V
+#assertAuthorized(Ljava/lang/annotation/Annotation;)V

+###org/apache/shiro/authz/aop/UserAnnotationMethodInterceptor
@1.0.0-incubating
+#<init>()V
@1.1.0
+#<init>(Lorg/apache/shiro/aop/AnnotationResolver;)V

+###org/apache/shiro/authz/permission/AllPermission
@1.0.0-incubating
+#<init>()V
+#implies(Lorg/apache/shiro/authz/Permission;)Z

+###org/apache/shiro/authz/permission/DomainPermission
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getDomain()Ljava/lang/String;
+#getActions()Ljava/lang/String;
+#getTargets()Ljava/lang/String;
@1.2.0
+#getActions()Ljava/util/Set;
+#getTargets()Ljava/util/Set;
-#getActions()Ljava/lang/String;
-#getTargets()Ljava/lang/String;

+###org/apache/shiro/authz/permission/InvalidPermissionStringException
@1.0.0-incubating
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getPermissionString()Ljava/lang/String;

+###org/apache/shiro/authz/permission/PermissionResolver
@1.0.0-incubating
+#resolvePermission(Ljava/lang/String;)Lorg/apache/shiro/authz/Permission;

+###org/apache/shiro/authz/permission/PermissionResolverAware
@1.0.0-incubating
+#setPermissionResolver(Lorg/apache/shiro/authz/permission/PermissionResolver;)V

+###org/apache/shiro/authz/permission/RolePermissionResolver
@1.0.0-incubating
+#resolvePermissionsInRole(Ljava/lang/String;)Ljava/util/Collection;

+###org/apache/shiro/authz/permission/RolePermissionResolverAware
@1.0.0-incubating
+#setRolePermissionResolver(Lorg/apache/shiro/authz/permission/RolePermissionResolver;)V

+###org/apache/shiro/authz/permission/WildcardPermission
@1.0.0-incubating
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#implies(Lorg/apache/shiro/authz/Permission;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/shiro/authz/permission/WildcardPermissionResolver
@1.0.0-incubating
+#<init>()V
+#resolvePermission(Ljava/lang/String;)Lorg/apache/shiro/authz/Permission;
@1.4.1
+#<init>(Z)V
+#setCaseSensitive(Z)V
+#isCaseSensitive()Z

+###org/apache/shiro/cache/AbstractCacheManager
@1.0.0-incubating
+#<init>()V
+#getCache(Ljava/lang/String;)Lorg/apache/shiro/cache/Cache;
+#destroy()V
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/cache/AbstractCacheManager

+###org/apache/shiro/cache/Cache
@1.0.0-incubating
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#size()I
+#keys()Ljava/util/Set;
+#values()Ljava/util/Collection;
@2.0.0-alpha-1
-###org/apache/shiro/cache/Cache

+###org/apache/shiro/cache/CacheException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/shiro/cache/CacheException

+###org/apache/shiro/cache/CacheManager
@1.0.0-incubating
+#getCache(Ljava/lang/String;)Lorg/apache/shiro/cache/Cache;
@2.0.0-alpha-1
-###org/apache/shiro/cache/CacheManager

+###org/apache/shiro/cache/CacheManagerAware
@1.0.0-incubating
+#setCacheManager(Lorg/apache/shiro/cache/CacheManager;)V
@2.0.0-alpha-1
-###org/apache/shiro/cache/CacheManagerAware

+###org/apache/shiro/cache/MapCache
@1.0.0-incubating
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#size()I
+#keys()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/cache/MapCache

+###org/apache/shiro/cache/MemoryConstrainedCacheManager
@1.0.0-incubating
+#<init>()V
@2.0.0-alpha-1
-###org/apache/shiro/cache/MemoryConstrainedCacheManager

+###org/apache/shiro/codec/Base64
@1.0.0-incubating
+#<init>()V
+#isBase64([B)Z
+#encodeToString([B)Ljava/lang/String;
+#encodeChunked([B)[B
+#encode([B)[B
+#encode([BZ)[B
+#decodeToString(Ljava/lang/String;)Ljava/lang/String;
+#decodeToString([B)Ljava/lang/String;
+#decode(Ljava/lang/String;)[B
+#decode([B)[B
@2.0.0-alpha-1
-###org/apache/shiro/codec/Base64

+###org/apache/shiro/codec/CodecException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/shiro/codec/CodecException

+###org/apache/shiro/codec/CodecSupport
@1.0.0-incubating
+#<init>()V
+#toBytes([C)[B
+#toBytes([CLjava/lang/String;)[B
+#toBytes(Ljava/lang/String;)[B
+#toBytes(Ljava/lang/String;Ljava/lang/String;)[B
+#toString([B)Ljava/lang/String;
+#toString([BLjava/lang/String;)Ljava/lang/String;
+#toChars([B)[C
+#toChars([BLjava/lang/String;)[C
@2.0.0-alpha-1
-###org/apache/shiro/codec/CodecSupport

+###org/apache/shiro/codec/H64
@1.2.0
+#<init>()V
+#encodeToString([B)Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/codec/H64

+###org/apache/shiro/codec/Hex
@1.0.0-incubating
+#<init>()V
+#encodeToString([B)Ljava/lang/String;
+#encode([B)[C
+#decode([B)[B
+#decode(Ljava/lang/String;)[B
+#decode([C)[B
@2.0.0-alpha-1
-###org/apache/shiro/codec/Hex

+###org/apache/shiro/concurrent/SubjectAwareExecutor
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/util/concurrent/Executor;)V
+#getTargetExecutor()Ljava/util/concurrent/Executor;
+#setTargetExecutor(Ljava/util/concurrent/Executor;)V
+#execute(Ljava/lang/Runnable;)V

+###org/apache/shiro/concurrent/SubjectAwareExecutorService
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#getTargetExecutorService()Ljava/util/concurrent/ExecutorService;
+#setTargetExecutorService(Ljava/util/concurrent/ExecutorService;)V
+#setTargetExecutor(Ljava/util/concurrent/Executor;)V
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#isShutdown()Z
+#isTerminated()Z
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
+#invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
+#invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;

+###org/apache/shiro/concurrent/SubjectAwareScheduledExecutorService
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;)V
+#getTargetScheduledExecutorService()Ljava/util/concurrent/ScheduledExecutorService;
+#setTargetScheduledExecutorService(Ljava/util/concurrent/ScheduledExecutorService;)V
+#setTargetExecutor(Ljava/util/concurrent/Executor;)V
+#setTargetExecutorService(Ljava/util/concurrent/ExecutorService;)V
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;

+###org/apache/shiro/config/CommonsInterpolator
@1.4.0-RC2
+#<init>()V
+#interpolate(Ljava/lang/String;)Ljava/lang/String;
+#getConfigurationInterpolator()Lorg/apache/commons/configuration2/interpol/ConfigurationInterpolator;
@2.0.0-alpha-1
-###org/apache/shiro/config/CommonsInterpolator

+###org/apache/shiro/config/ConfigurationException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/ConfigurationException

+###org/apache/shiro/config/DefaultInterpolator
@1.4.0-RC2
+#<init>()V
+#interpolate(Ljava/lang/String;)Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/config/DefaultInterpolator

+###org/apache/shiro/config/Ini$Section
@1.0.0-incubating
+#getName()Ljava/lang/String;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/lang/String;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#put(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/String;
+#size()I
+#values()Ljava/util/Collection;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/shiro/config/Ini$Section

+###org/apache/shiro/config/Ini
@1.0.0-incubating
+#<init>()V
+#<init>(Lorg/apache/shiro/config/Ini;)V
+#isEmpty()Z
+#getSectionNames()Ljava/util/Set;
+#getSections()Ljava/util/Collection;
+#getSection(Ljava/lang/String;)Lorg/apache/shiro/config/Ini$Section;
+#addSection(Ljava/lang/String;)Lorg/apache/shiro/config/Ini$Section;
+#removeSection(Ljava/lang/String;)Lorg/apache/shiro/config/Ini$Section;
+#setSectionProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getSectionProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getSectionProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#fromResourcePath(Ljava/lang/String;)Lorg/apache/shiro/config/Ini;
+#loadFromPath(Ljava/lang/String;)V
+#load(Ljava/lang/String;)V
+#load(Ljava/io/InputStream;)V
+#load(Ljava/io/Reader;)V
+#load(Ljava/util/Scanner;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Lorg/apache/shiro/config/Ini$Section;
+#put(Ljava/lang/String;Lorg/apache/shiro/config/Ini$Section;)Lorg/apache/shiro/config/Ini$Section;
+#remove(Ljava/lang/Object;)Lorg/apache/shiro/config/Ini$Section;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@1.4.0-RC2
+#merge(Ljava/util/Map;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/Ini

+###org/apache/shiro/config/IniFactorySupport
@1.0.0-incubating
+#getIni()Lorg/apache/shiro/config/Ini;
+#setIni(Lorg/apache/shiro/config/Ini;)V
+#loadDefaultClassPathIni()Lorg/apache/shiro/config/Ini;
+#createInstance()Ljava/lang/Object;
@1.4.0-RC2
+#setDefaults(Ljava/util/Map;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/IniFactorySupport

+###org/apache/shiro/config/IniSecurityManagerFactory
@1.0.0-incubating
+#<init>()V
+#<init>(Lorg/apache/shiro/config/Ini;)V
+#<init>(Ljava/lang/String;)V
+#getBeans()Ljava/util/Map;
@1.3.0
+#destroy()V
@1.4.0-RC2
+#getReflectionBuilder()Lorg/apache/shiro/config/ReflectionBuilder;
+#setReflectionBuilder(Lorg/apache/shiro/config/ReflectionBuilder;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/IniSecurityManagerFactory

+###org/apache/shiro/config/Interpolator
@1.4.0-RC2
+#interpolate(Ljava/lang/String;)Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/config/Interpolator

+###org/apache/shiro/config/ReflectionBuilder
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#getObjects()Ljava/util/Map;
+#setObjects(Ljava/util/Map;)V
+#getBean(Ljava/lang/String;)Ljava/lang/Object;
+#getBean(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#buildObjects(Ljava/util/Map;)Ljava/util/Map;
@1.3.0
+#destroy()V
@1.4.0-RC2
+#setInterpolator(Lorg/apache/shiro/config/Interpolator;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/ReflectionBuilder

+###org/apache/shiro/config/ResourceConfigurable
@1.2.0
+#setConfigLocations(Ljava/lang/String;)V
+#setConfigLocations([Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/ResourceConfigurable

+###org/apache/shiro/config/UnresolveableReferenceException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/UnresolveableReferenceException

+###org/apache/shiro/config/event/BeanEvent
@1.3.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
+#getBeanName()Ljava/lang/String;
+#getBean()Ljava/lang/Object;
+#getBeanContext()Ljava/util/Map;
@2.0.0-alpha-1
-###org/apache/shiro/config/event/BeanEvent

+###org/apache/shiro/config/event/ConfiguredBeanEvent
@1.3.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/event/ConfiguredBeanEvent

+###org/apache/shiro/config/event/DestroyedBeanEvent
@1.3.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/event/DestroyedBeanEvent

+###org/apache/shiro/config/event/InitializedBeanEvent
@1.3.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/event/InitializedBeanEvent

+###org/apache/shiro/config/event/InstantiatedBeanEvent
@1.3.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/event/InstantiatedBeanEvent

+###org/apache/shiro/config/event/LoggingBeanEventListener
@1.3.0
+#<init>()V
+#onEvent(Lorg/apache/shiro/config/event/BeanEvent;)V
@2.0.0-alpha-1
-###org/apache/shiro/config/event/LoggingBeanEventListener

+###org/apache/shiro/crypto/AbstractSymmetricCipherService
@1.0.0-incubating
+#generateNewKey()Ljava/security/Key;
+#generateNewKey(I)Ljava/security/Key;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/AbstractSymmetricCipherService

+###org/apache/shiro/crypto/AesCipherService
@1.0.0-incubating
+#<init>()V
@2.0.0-alpha-1
-###org/apache/shiro/crypto/AesCipherService

+###org/apache/shiro/crypto/BlowfishCipherService
@1.0.0-incubating
+#<init>()V
@2.0.0-alpha-1
-###org/apache/shiro/crypto/BlowfishCipherService

+###org/apache/shiro/crypto/CipherService
@1.0.0-incubating
+#decrypt([B[B)Lorg/apache/shiro/util/ByteSource;
+#decrypt(Ljava/io/InputStream;Ljava/io/OutputStream;[B)V
+#encrypt([B[B)Lorg/apache/shiro/util/ByteSource;
+#encrypt(Ljava/io/InputStream;Ljava/io/OutputStream;[B)V
@2.0.0-alpha-1
-###org/apache/shiro/crypto/CipherService

+###org/apache/shiro/crypto/CryptoException
@1.0.0-incubating
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/shiro/crypto/CryptoException

+###org/apache/shiro/crypto/DefaultBlockCipherService
@1.0.0-incubating
+#<init>(Ljava/lang/String;)V
+#getModeName()Ljava/lang/String;
+#setModeName(Ljava/lang/String;)V
+#setMode(Lorg/apache/shiro/crypto/OperationMode;)V
+#getPaddingSchemeName()Ljava/lang/String;
+#setPaddingSchemeName(Ljava/lang/String;)V
+#setPaddingScheme(Lorg/apache/shiro/crypto/PaddingScheme;)V
+#getBlockSize()I
+#setBlockSize(I)V
+#getStreamingModeName()Ljava/lang/String;
+#setStreamingModeName(Ljava/lang/String;)V
+#setStreamingMode(Lorg/apache/shiro/crypto/OperationMode;)V
+#getStreamingPaddingSchemeName()Ljava/lang/String;
+#setStreamingPaddingSchemeName(Ljava/lang/String;)V
+#setStreamingPaddingScheme(Lorg/apache/shiro/crypto/PaddingScheme;)V
+#getStreamingBlockSize()I
+#setStreamingBlockSize(I)V
@2.0.0-alpha-1
-###org/apache/shiro/crypto/DefaultBlockCipherService

+###org/apache/shiro/crypto/JcaCipherService
@1.0.0-incubating
+#getAlgorithmName()Ljava/lang/String;
+#getKeySize()I
+#setKeySize(I)V
+#isGenerateInitializationVectors()Z
+#setGenerateInitializationVectors(Z)V
+#getInitializationVectorSize()I
+#setInitializationVectorSize(I)V
+#getStreamingBufferSize()I
+#setStreamingBufferSize(I)V
+#getSecureRandom()Ljava/security/SecureRandom;
+#setSecureRandom(Ljava/security/SecureRandom;)V
+#encrypt([B[B)Lorg/apache/shiro/util/ByteSource;
+#decrypt([B[B)Lorg/apache/shiro/util/ByteSource;
+#encrypt(Ljava/io/InputStream;Ljava/io/OutputStream;[B)V
+#decrypt(Ljava/io/InputStream;Ljava/io/OutputStream;[B)V
@2.0.0-alpha-1
-###org/apache/shiro/crypto/JcaCipherService

+###org/apache/shiro/crypto/OperationMode
@1.0.0-incubating
+#values()[Lorg/apache/shiro/crypto/OperationMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/shiro/crypto/OperationMode;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/OperationMode

+###org/apache/shiro/crypto/PaddingScheme
@1.0.0-incubating
+#values()[Lorg/apache/shiro/crypto/PaddingScheme;
+#valueOf(Ljava/lang/String;)Lorg/apache/shiro/crypto/PaddingScheme;
+#getTransformationName()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/PaddingScheme

+###org/apache/shiro/crypto/RandomNumberGenerator
@1.1.0
+#nextBytes()Lorg/apache/shiro/util/ByteSource;
+#nextBytes(I)Lorg/apache/shiro/util/ByteSource;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/RandomNumberGenerator

+###org/apache/shiro/crypto/SecureRandomNumberGenerator
@1.1.0
+#<init>()V
+#setSeed([B)V
+#getSecureRandom()Ljava/security/SecureRandom;
+#setSecureRandom(Ljava/security/SecureRandom;)V
+#getDefaultNextBytesSize()I
+#setDefaultNextBytesSize(I)V
+#nextBytes()Lorg/apache/shiro/util/ByteSource;
+#nextBytes(I)Lorg/apache/shiro/util/ByteSource;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/SecureRandomNumberGenerator

+###org/apache/shiro/crypto/UnknownAlgorithmException
@1.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/shiro/crypto/UnknownAlgorithmException

+###org/apache/shiro/crypto/hash/AbstractHash
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;I)V
+#getBytes()[B
+#setBytes([B)V
+#toHex()Ljava/lang/String;
+#toBase64()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
+#getAlgorithmName()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/AbstractHash

+###org/apache/shiro/crypto/hash/ConfigurableHashService
@1.2.0
+#setPrivateSalt(Lorg/apache/shiro/util/ByteSource;)V
+#setHashIterations(I)V
+#setHashAlgorithmName(Ljava/lang/String;)V
+#setRandomNumberGenerator(Lorg/apache/shiro/crypto/RandomNumberGenerator;)V
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/ConfigurableHashService

+###org/apache/shiro/crypto/hash/DefaultHashService
@1.2.0
+#<init>()V
+#computeHash(Lorg/apache/shiro/crypto/hash/HashRequest;)Lorg/apache/shiro/crypto/hash/Hash;
+#setHashAlgorithmName(Ljava/lang/String;)V
+#getHashAlgorithmName()Ljava/lang/String;
+#setPrivateSalt(Lorg/apache/shiro/util/ByteSource;)V
+#getPrivateSalt()Lorg/apache/shiro/util/ByteSource;
+#setHashIterations(I)V
+#getHashIterations()I
+#setRandomNumberGenerator(Lorg/apache/shiro/crypto/RandomNumberGenerator;)V
+#getRandomNumberGenerator()Lorg/apache/shiro/crypto/RandomNumberGenerator;
+#isGeneratePublicSalt()Z
+#setGeneratePublicSalt(Z)V
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/DefaultHashService

+###org/apache/shiro/crypto/hash/Hash
@1.0.0-incubating
+#getBytes()[B
+#toHex()Ljava/lang/String;
+#toBase64()Ljava/lang/String;
@1.1.0
+#getAlgorithmName()Ljava/lang/String;
-#getBytes()[B
-#toHex()Ljava/lang/String;
-#toBase64()Ljava/lang/String;
@1.2.0
+#getSalt()Lorg/apache/shiro/util/ByteSource;
+#getIterations()I
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/Hash

+###org/apache/shiro/crypto/hash/HashRequest$Builder
@1.2.0
+#<init>()V
+#setSource(Lorg/apache/shiro/util/ByteSource;)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
+#setSource(Ljava/lang/Object;)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
+#setSalt(Lorg/apache/shiro/util/ByteSource;)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
+#setSalt(Ljava/lang/Object;)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
+#setIterations(I)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
+#setAlgorithmName(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
+#build()Lorg/apache/shiro/crypto/hash/HashRequest;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/HashRequest$Builder

+###org/apache/shiro/crypto/hash/HashRequest
@1.2.0
+#getSource()Lorg/apache/shiro/util/ByteSource;
+#getSalt()Lorg/apache/shiro/util/ByteSource;
+#getIterations()I
+#getAlgorithmName()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/HashRequest

+###org/apache/shiro/crypto/hash/HashService
@1.2.0
+#computeHash(Lorg/apache/shiro/crypto/hash/HashRequest;)Lorg/apache/shiro/crypto/hash/Hash;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/HashService

+###org/apache/shiro/crypto/hash/Md2Hash
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;I)V
+#fromHexString(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Md2Hash;
+#fromBase64String(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Md2Hash;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/Md2Hash

+###org/apache/shiro/crypto/hash/Md5Hash
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;I)V
+#fromHexString(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Md5Hash;
+#fromBase64String(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Md5Hash;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/Md5Hash

+###org/apache/shiro/crypto/hash/Sha1Hash
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;I)V
+#fromHexString(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Sha1Hash;
+#fromBase64String(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Sha1Hash;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/Sha1Hash

+###org/apache/shiro/crypto/hash/Sha256Hash
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;I)V
+#fromHexString(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Sha256Hash;
+#fromBase64String(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Sha256Hash;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/Sha256Hash

+###org/apache/shiro/crypto/hash/Sha384Hash
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;I)V
+#fromHexString(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Sha384Hash;
+#fromBase64String(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Sha384Hash;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/Sha384Hash

+###org/apache/shiro/crypto/hash/Sha512Hash
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;I)V
+#fromHexString(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Sha512Hash;
+#fromBase64String(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Sha512Hash;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/Sha512Hash

+###org/apache/shiro/crypto/hash/SimpleHash
@1.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)V
+#getAlgorithmName()Ljava/lang/String;
+#getBytes()[B
+#setBytes([B)V
+#toHex()Ljava/lang/String;
+#toBase64()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.2.0
+#getSalt()Lorg/apache/shiro/util/ByteSource;
+#getIterations()I
+#setIterations(I)V
+#setSalt(Lorg/apache/shiro/util/ByteSource;)V
+#isEmpty()Z
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/SimpleHash

+###org/apache/shiro/crypto/hash/SimpleHashRequest
@1.2.0
+#<init>(Ljava/lang/String;Lorg/apache/shiro/util/ByteSource;Lorg/apache/shiro/util/ByteSource;I)V
+#getSource()Lorg/apache/shiro/util/ByteSource;
+#getSalt()Lorg/apache/shiro/util/ByteSource;
+#getIterations()I
+#getAlgorithmName()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/SimpleHashRequest

+###org/apache/shiro/crypto/hash/format/Base64Format
@1.2.0
+#<init>()V
+#format(Lorg/apache/shiro/crypto/hash/Hash;)Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/format/Base64Format

+###org/apache/shiro/crypto/hash/format/DefaultHashFormatFactory
@1.2.0
+#<init>()V
+#getFormatClassNames()Ljava/util/Map;
+#setFormatClassNames(Ljava/util/Map;)V
+#getSearchPackages()Ljava/util/Set;
+#setSearchPackages(Ljava/util/Set;)V
+#getInstance(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/format/HashFormat;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/format/DefaultHashFormatFactory

+###org/apache/shiro/crypto/hash/format/HashFormat
@1.2.0
+#format(Lorg/apache/shiro/crypto/hash/Hash;)Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/format/HashFormat

+###org/apache/shiro/crypto/hash/format/HashFormatFactory
@1.2.0
+#getInstance(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/format/HashFormat;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/format/HashFormatFactory

+###org/apache/shiro/crypto/hash/format/HexFormat
@1.2.0
+#<init>()V
+#format(Lorg/apache/shiro/crypto/hash/Hash;)Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/format/HexFormat

+###org/apache/shiro/crypto/hash/format/ModularCryptFormat
@1.2.0
+#getId()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/format/ModularCryptFormat

+###org/apache/shiro/crypto/hash/format/ParsableHashFormat
@1.2.0
+#parse(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Hash;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/format/ParsableHashFormat

+###org/apache/shiro/crypto/hash/format/ProvidedHashFormat
@1.2.0
+#values()[Lorg/apache/shiro/crypto/hash/format/ProvidedHashFormat;
+#valueOf(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/format/ProvidedHashFormat;
+#byId(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/format/ProvidedHashFormat;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/format/ProvidedHashFormat

+###org/apache/shiro/crypto/hash/format/Shiro1CryptFormat
@1.2.0
+#<init>()V
+#getId()Ljava/lang/String;
+#format(Lorg/apache/shiro/crypto/hash/Hash;)Ljava/lang/String;
+#parse(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Hash;
@2.0.0-alpha-1
-###org/apache/shiro/crypto/hash/format/Shiro1CryptFormat

+###org/apache/shiro/dao/DataAccessException
@1.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/dao/InvalidResourceUsageException
@1.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/env/BasicIniEnvironment
@1.5.0
+#<init>(Lorg/apache/shiro/config/Ini;)V
+#<init>(Ljava/lang/String;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/shiro/config/Ini;Ljava/util/function/Function;)V
+#<init>(Ljava/lang/String;Ljava/util/function/Function;)V

+###org/apache/shiro/env/DefaultEnvironment
@1.2.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#getSecurityManager()Lorg/apache/shiro/mgt/SecurityManager;
+#setSecurityManager(Lorg/apache/shiro/mgt/SecurityManager;)V
+#getSecurityManagerName()Ljava/lang/String;
+#setSecurityManagerName(Ljava/lang/String;)V
+#getObjects()Ljava/util/Map;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#setObject(Ljava/lang/String;Ljava/lang/Object;)V
+#destroy()V

+###org/apache/shiro/env/Environment
@1.2.0
+#getSecurityManager()Lorg/apache/shiro/mgt/SecurityManager;

+###org/apache/shiro/env/EnvironmentException
@1.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/env/NamedObjectEnvironment
@1.2.0
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###org/apache/shiro/env/RequiredTypeException
@1.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/event/Event
@1.3.0
+#<init>(Ljava/lang/Object;)V
+#getTimestamp()J
@2.0.0-alpha-1
-###org/apache/shiro/event/Event

+###org/apache/shiro/event/EventBus
@1.3.0
+#publish(Ljava/lang/Object;)V
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
@2.0.0-alpha-1
-###org/apache/shiro/event/EventBus

+###org/apache/shiro/event/EventBusAware
@1.3.0
+#setEventBus(Lorg/apache/shiro/event/EventBus;)V
@2.0.0-alpha-1
-###org/apache/shiro/event/EventBusAware

+###org/apache/shiro/event/Subscribe
@1.3.0
@2.0.0-alpha-1
-###org/apache/shiro/event/Subscribe

+###org/apache/shiro/event/support/AnnotationEventListenerResolver
@1.3.0
+#<init>()V
+#getEventListeners(Ljava/lang/Object;)Ljava/util/List;
+#getAnnotationClass()Ljava/lang/Class;
+#setAnnotationClass(Ljava/lang/Class;)V
@2.0.0-alpha-1
-###org/apache/shiro/event/support/AnnotationEventListenerResolver

+###org/apache/shiro/event/support/DefaultEventBus
@1.3.0
+#<init>()V
+#getEventListenerResolver()Lorg/apache/shiro/event/support/EventListenerResolver;
+#setEventListenerResolver(Lorg/apache/shiro/event/support/EventListenerResolver;)V
+#publish(Ljava/lang/Object;)V
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
@2.0.0-alpha-1
-###org/apache/shiro/event/support/DefaultEventBus

+###org/apache/shiro/event/support/EventClassComparator
@1.3.0
+#<init>()V
+#compare(Ljava/lang/Class;Ljava/lang/Class;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.0.0-alpha-1
-###org/apache/shiro/event/support/EventClassComparator

+###org/apache/shiro/event/support/EventListener
@1.3.0
+#accepts(Ljava/lang/Object;)Z
+#onEvent(Ljava/lang/Object;)V
@2.0.0-alpha-1
-###org/apache/shiro/event/support/EventListener

+###org/apache/shiro/event/support/EventListenerComparator
@1.3.0
+#<init>()V
+#compare(Lorg/apache/shiro/event/support/EventListener;Lorg/apache/shiro/event/support/EventListener;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.0.0-alpha-1
-###org/apache/shiro/event/support/EventListenerComparator

+###org/apache/shiro/event/support/EventListenerResolver
@1.3.0
+#getEventListeners(Ljava/lang/Object;)Ljava/util/List;
@2.0.0-alpha-1
-###org/apache/shiro/event/support/EventListenerResolver

+###org/apache/shiro/event/support/SingleArgumentMethodEventListener
@1.3.0
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#getTarget()Ljava/lang/Object;
+#getMethod()Ljava/lang/reflect/Method;
+#accepts(Ljava/lang/Object;)Z
+#getEventType()Ljava/lang/Class;
+#onEvent(Ljava/lang/Object;)V
@2.0.0-alpha-1
-###org/apache/shiro/event/support/SingleArgumentMethodEventListener

+###org/apache/shiro/event/support/TypedEventListener
@1.3.0
+#getEventType()Ljava/lang/Class;
@2.0.0-alpha-1
-###org/apache/shiro/event/support/TypedEventListener

+###org/apache/shiro/io/ClassResolvingObjectInputStream
@1.2.0
+#<init>(Ljava/io/InputStream;)V
@2.0.0-alpha-1
-###org/apache/shiro/io/ClassResolvingObjectInputStream

+###org/apache/shiro/io/DefaultSerializer
@1.0.0-incubating
+#<init>()V
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/shiro/io/DefaultSerializer

+###org/apache/shiro/io/ResourceUtils
@1.0.0-incubating
+#hasResourcePrefix(Ljava/lang/String;)Z
+#resourceExists(Ljava/lang/String;)Z
+#getInputStreamForPath(Ljava/lang/String;)Ljava/io/InputStream;
+#close(Ljava/io/InputStream;)V
@2.0.0-alpha-1
-###org/apache/shiro/io/ResourceUtils

+###org/apache/shiro/io/SerializationException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/shiro/io/SerializationException

+###org/apache/shiro/io/Serializer
@1.0.0-incubating
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/shiro/io/Serializer

+###org/apache/shiro/io/XmlSerializer
@1.0.0-incubating
+#<init>()V
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/shiro/io/XmlSerializer

+###org/apache/shiro/jndi/JndiCallback
@1.0.0-incubating
+#doInContext(Ljavax/naming/Context;)Ljava/lang/Object;

+###org/apache/shiro/jndi/JndiLocator
@1.0.0-incubating
+#<init>()V
+#setJndiTemplate(Lorg/apache/shiro/jndi/JndiTemplate;)V
+#getJndiTemplate()Lorg/apache/shiro/jndi/JndiTemplate;
+#setJndiEnvironment(Ljava/util/Properties;)V
+#getJndiEnvironment()Ljava/util/Properties;
+#setResourceRef(Z)V
+#isResourceRef()Z

+###org/apache/shiro/jndi/JndiObjectFactory
@1.2.0
+#<init>()V
+#getInstance()Ljava/lang/Object;
+#getResourceName()Ljava/lang/String;
+#setResourceName(Ljava/lang/String;)V
+#getRequiredType()Ljava/lang/Class;
+#setRequiredType(Ljava/lang/Class;)V

+###org/apache/shiro/jndi/JndiTemplate
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/util/Properties;)V
+#setEnvironment(Ljava/util/Properties;)V
+#getEnvironment()Ljava/util/Properties;
+#execute(Lorg/apache/shiro/jndi/JndiCallback;)Ljava/lang/Object;
+#lookup(Ljava/lang/String;)Ljava/lang/Object;
+#lookup(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#bind(Ljava/lang/String;Ljava/lang/Object;)V
+#rebind(Ljava/lang/String;Ljava/lang/Object;)V
+#unbind(Ljava/lang/String;)V

+###org/apache/shiro/ldap/UnsupportedAuthenticationMechanismException
@1.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/mgt/AbstractRememberMeManager
@1.0.0-incubating
+#<init>()V
+#getSerializer()Lorg/apache/shiro/io/Serializer;
+#setSerializer(Lorg/apache/shiro/io/Serializer;)V
+#getCipherService()Lorg/apache/shiro/crypto/CipherService;
+#setCipherService(Lorg/apache/shiro/crypto/CipherService;)V
+#getEncryptionCipherKey()[B
+#setEncryptionCipherKey([B)V
+#getDecryptionCipherKey()[B
+#setDecryptionCipherKey([B)V
+#getCipherKey()[B
+#setCipherKey([B)V
+#onSuccessfulLogin(Lorg/apache/shiro/subject/Subject;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)V
+#rememberIdentity(Lorg/apache/shiro/subject/Subject;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)V
+#getRememberedPrincipals(Lorg/apache/shiro/subject/SubjectContext;)Lorg/apache/shiro/subject/PrincipalCollection;
+#onFailedLogin(Lorg/apache/shiro/subject/Subject;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationException;)V
+#onLogout(Lorg/apache/shiro/subject/Subject;)V
@2.0.0-alpha-1
+#<init>(Ljava/util/function/Supplier;)V
+#getSerializer()Lorg/apache/shiro/lang/io/Serializer;
+#setSerializer(Lorg/apache/shiro/lang/io/Serializer;)V
+#getCipherService()Lorg/apache/shiro/crypto/cipher/CipherService;
+#setCipherService(Lorg/apache/shiro/crypto/cipher/CipherService;)V
-#getSerializer()Lorg/apache/shiro/io/Serializer;
-#setSerializer(Lorg/apache/shiro/io/Serializer;)V
-#getCipherService()Lorg/apache/shiro/crypto/CipherService;
-#setCipherService(Lorg/apache/shiro/crypto/CipherService;)V

+###org/apache/shiro/mgt/AuthenticatingSecurityManager
@1.0.0-incubating
+#<init>()V
+#getAuthenticator()Lorg/apache/shiro/authc/Authenticator;
+#setAuthenticator(Lorg/apache/shiro/authc/Authenticator;)V
+#authenticate(Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/authc/AuthenticationInfo;
+#destroy()V

+###org/apache/shiro/mgt/AuthorizingSecurityManager
@1.0.0-incubating
+#<init>()V
+#getAuthorizer()Lorg/apache/shiro/authz/Authorizer;
+#setAuthorizer(Lorg/apache/shiro/authz/Authorizer;)V
+#destroy()V
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Lorg/apache/shiro/authz/Permission;)Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)[Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/List;)[Z
+#isPermittedAll(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)Z
+#isPermittedAll(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)Z
+#checkPermission(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)V
+#checkPermission(Lorg/apache/shiro/subject/PrincipalCollection;Lorg/apache/shiro/authz/Permission;)V
+#checkPermissions(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)V
+#checkPermissions(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)V
+#hasRole(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)Z
+#hasRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/List;)[Z
+#hasAllRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)Z
+#checkRole(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)V
+#checkRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)V
@1.1.0
+#checkRoles(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)V

+###org/apache/shiro/mgt/CachingSecurityManager
@1.0.0-incubating
+#<init>()V
+#getCacheManager()Lorg/apache/shiro/cache/CacheManager;
+#setCacheManager(Lorg/apache/shiro/cache/CacheManager;)V
+#destroy()V
@1.3.0
+#getEventBus()Lorg/apache/shiro/event/EventBus;
+#setEventBus(Lorg/apache/shiro/event/EventBus;)V

+###org/apache/shiro/mgt/DefaultSecurityManager
@1.0.0-incubating
+#<init>()V
+#<init>(Lorg/apache/shiro/realm/Realm;)V
+#<init>(Ljava/util/Collection;)V
+#getSubjectFactory()Lorg/apache/shiro/mgt/SubjectFactory;
+#setSubjectFactory(Lorg/apache/shiro/mgt/SubjectFactory;)V
+#getRememberMeManager()Lorg/apache/shiro/mgt/RememberMeManager;
+#setRememberMeManager(Lorg/apache/shiro/mgt/RememberMeManager;)V
+#login(Lorg/apache/shiro/subject/Subject;Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/subject/Subject;
+#createSubject(Lorg/apache/shiro/subject/SubjectContext;)Lorg/apache/shiro/subject/Subject;
+#logout(Lorg/apache/shiro/subject/Subject;)V
@1.2.0
+#getSubjectDAO()Lorg/apache/shiro/mgt/SubjectDAO;
+#setSubjectDAO(Lorg/apache/shiro/mgt/SubjectDAO;)V

+###org/apache/shiro/mgt/DefaultSessionStorageEvaluator
@1.2.0
+#<init>()V
+#isSessionStorageEnabled(Lorg/apache/shiro/subject/Subject;)Z
+#isSessionStorageEnabled()Z
+#setSessionStorageEnabled(Z)V

+###org/apache/shiro/mgt/DefaultSubjectDAO
@1.2.0
+#<init>()V
+#getSessionStorageEvaluator()Lorg/apache/shiro/mgt/SessionStorageEvaluator;
+#setSessionStorageEvaluator(Lorg/apache/shiro/mgt/SessionStorageEvaluator;)V
+#save(Lorg/apache/shiro/subject/Subject;)Lorg/apache/shiro/subject/Subject;
+#delete(Lorg/apache/shiro/subject/Subject;)V

+###org/apache/shiro/mgt/DefaultSubjectFactory
@1.0.0-incubating
+#<init>()V
+#createSubject(Lorg/apache/shiro/subject/SubjectContext;)Lorg/apache/shiro/subject/Subject;

+###org/apache/shiro/mgt/RealmSecurityManager
@1.0.0-incubating
+#<init>()V
+#setRealm(Lorg/apache/shiro/realm/Realm;)V
+#setRealms(Ljava/util/Collection;)V
+#getRealms()Ljava/util/Collection;
+#destroy()V

+###org/apache/shiro/mgt/RememberMeManager
@1.0.0-incubating
+#getRememberedPrincipals(Lorg/apache/shiro/subject/SubjectContext;)Lorg/apache/shiro/subject/PrincipalCollection;
+#forgetIdentity(Lorg/apache/shiro/subject/SubjectContext;)V
+#onSuccessfulLogin(Lorg/apache/shiro/subject/Subject;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)V
+#onFailedLogin(Lorg/apache/shiro/subject/Subject;Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationException;)V
+#onLogout(Lorg/apache/shiro/subject/Subject;)V

+###org/apache/shiro/mgt/SecurityManager
@1.0.0-incubating
+#login(Lorg/apache/shiro/subject/Subject;Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/subject/Subject;
+#logout(Lorg/apache/shiro/subject/Subject;)V
+#createSubject(Lorg/apache/shiro/subject/SubjectContext;)Lorg/apache/shiro/subject/Subject;

+###org/apache/shiro/mgt/SessionStorageEvaluator
@1.2.0
+#isSessionStorageEnabled(Lorg/apache/shiro/subject/Subject;)Z

+###org/apache/shiro/mgt/SessionsSecurityManager
@1.0.0-incubating
+#<init>()V
+#setSessionManager(Lorg/apache/shiro/session/mgt/SessionManager;)V
+#getSessionManager()Lorg/apache/shiro/session/mgt/SessionManager;
+#start(Lorg/apache/shiro/session/mgt/SessionContext;)Lorg/apache/shiro/session/Session;
+#getSession(Lorg/apache/shiro/session/mgt/SessionKey;)Lorg/apache/shiro/session/Session;
+#destroy()V

+###org/apache/shiro/mgt/SubjectDAO
@1.2.0
+#save(Lorg/apache/shiro/subject/Subject;)Lorg/apache/shiro/subject/Subject;
+#delete(Lorg/apache/shiro/subject/Subject;)V

+###org/apache/shiro/mgt/SubjectFactory
@1.0.0-incubating
+#createSubject(Lorg/apache/shiro/subject/SubjectContext;)Lorg/apache/shiro/subject/Subject;

+###org/apache/shiro/realm/AuthenticatingRealm
@1.0.0-incubating
+#<init>()V
+#<init>(Lorg/apache/shiro/cache/CacheManager;)V
+#<init>(Lorg/apache/shiro/authc/credential/CredentialsMatcher;)V
+#<init>(Lorg/apache/shiro/cache/CacheManager;Lorg/apache/shiro/authc/credential/CredentialsMatcher;)V
+#getCredentialsMatcher()Lorg/apache/shiro/authc/credential/CredentialsMatcher;
+#setCredentialsMatcher(Lorg/apache/shiro/authc/credential/CredentialsMatcher;)V
+#getAuthenticationTokenClass()Ljava/lang/Class;
+#setAuthenticationTokenClass(Ljava/lang/Class;)V
+#supports(Lorg/apache/shiro/authc/AuthenticationToken;)Z
+#getAuthenticationInfo(Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/authc/AuthenticationInfo;
+#onLogout(Lorg/apache/shiro/subject/PrincipalCollection;)V
@1.2.0
+#setAuthenticationCache(Lorg/apache/shiro/cache/Cache;)V
+#getAuthenticationCache()Lorg/apache/shiro/cache/Cache;
+#getAuthenticationCacheName()Ljava/lang/String;
+#setAuthenticationCacheName(Ljava/lang/String;)V
+#isAuthenticationCachingEnabled()Z
+#setAuthenticationCachingEnabled(Z)V
+#setName(Ljava/lang/String;)V
+#init()V
-#onLogout(Lorg/apache/shiro/subject/PrincipalCollection;)V

+###org/apache/shiro/realm/AuthorizingRealm
@1.0.0-incubating
+#<init>()V
+#<init>(Lorg/apache/shiro/cache/CacheManager;)V
+#<init>(Lorg/apache/shiro/authc/credential/CredentialsMatcher;)V
+#<init>(Lorg/apache/shiro/cache/CacheManager;Lorg/apache/shiro/authc/credential/CredentialsMatcher;)V
+#setName(Ljava/lang/String;)V
+#setAuthorizationCache(Lorg/apache/shiro/cache/Cache;)V
+#getAuthorizationCache()Lorg/apache/shiro/cache/Cache;
+#getAuthorizationCacheName()Ljava/lang/String;
+#setAuthorizationCacheName(Ljava/lang/String;)V
+#isAuthorizationCachingEnabled()Z
+#setAuthorizationCachingEnabled(Z)V
+#getPermissionResolver()Lorg/apache/shiro/authz/permission/PermissionResolver;
+#setPermissionResolver(Lorg/apache/shiro/authz/permission/PermissionResolver;)V
+#getRolePermissionResolver()Lorg/apache/shiro/authz/permission/RolePermissionResolver;
+#setRolePermissionResolver(Lorg/apache/shiro/authz/permission/RolePermissionResolver;)V
+#init()V
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Lorg/apache/shiro/authz/Permission;)Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)[Z
+#isPermitted(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/List;)[Z
+#isPermittedAll(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)Z
+#isPermittedAll(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)Z
+#checkPermission(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)V
+#checkPermission(Lorg/apache/shiro/subject/PrincipalCollection;Lorg/apache/shiro/authz/Permission;)V
+#checkPermissions(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)V
+#checkPermissions(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)V
+#hasRole(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)Z
+#hasRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/List;)[Z
+#hasAllRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)Z
+#checkRole(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)V
+#checkRoles(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)V
+#onLogout(Lorg/apache/shiro/subject/PrincipalCollection;)V
@1.1.0
+#checkRoles(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)V
@1.2.0
-#init()V
-#onLogout(Lorg/apache/shiro/subject/PrincipalCollection;)V

+###org/apache/shiro/realm/CachingRealm
@1.0.0-incubating
+#<init>()V
+#getCacheManager()Lorg/apache/shiro/cache/CacheManager;
+#setCacheManager(Lorg/apache/shiro/cache/CacheManager;)V
+#isCachingEnabled()Z
+#setCachingEnabled(Z)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
@1.2.0
+#onLogout(Lorg/apache/shiro/subject/PrincipalCollection;)V

+###org/apache/shiro/realm/Realm
@1.0.0-incubating
+#getName()Ljava/lang/String;
+#supports(Lorg/apache/shiro/authc/AuthenticationToken;)Z
+#getAuthenticationInfo(Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/authc/AuthenticationInfo;

+###org/apache/shiro/realm/RealmFactory
@1.0.0-incubating
+#getRealms()Ljava/util/Collection;

+###org/apache/shiro/realm/SimpleAccountRealm
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#accountExists(Ljava/lang/String;)Z
+#addAccount(Ljava/lang/String;Ljava/lang/String;)V
+#addAccount(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#roleExists(Ljava/lang/String;)Z
+#addRole(Ljava/lang/String;)V

+###org/apache/shiro/realm/activedirectory/ActiveDirectoryRealm
@1.0.0-incubating
+#<init>()V
+#setGroupRolesMap(Ljava/util/Map;)V

+###org/apache/shiro/realm/jdbc/JdbcRealm$SaltStyle
@1.2.0
+#values()[Lorg/apache/shiro/realm/jdbc/JdbcRealm$SaltStyle;
+#valueOf(Ljava/lang/String;)Lorg/apache/shiro/realm/jdbc/JdbcRealm$SaltStyle;

+###org/apache/shiro/realm/jdbc/JdbcRealm
@1.0.0-incubating
+#<init>()V
+#setDataSource(Ljavax/sql/DataSource;)V
+#setAuthenticationQuery(Ljava/lang/String;)V
+#setUserRolesQuery(Ljava/lang/String;)V
+#setPermissionsQuery(Ljava/lang/String;)V
+#setPermissionsLookupEnabled(Z)V
@1.2.0
+#setSaltStyle(Lorg/apache/shiro/realm/jdbc/JdbcRealm$SaltStyle;)V
@1.5.0
+#setSaltIsBase64Encoded(Z)V

+###org/apache/shiro/realm/jndi/JndiRealmFactory
@1.0.0-incubating
+#<init>()V
+#getJndiNames()Ljava/util/Collection;
+#setJndiNames(Ljava/util/Collection;)V
+#setJndiNames(Ljava/lang/String;)V
+#getRealms()Ljava/util/Collection;

+###org/apache/shiro/realm/ldap/AbstractLdapRealm
@1.0.0-incubating
+#<init>()V
+#setPrincipalSuffix(Ljava/lang/String;)V
+#setSearchBase(Ljava/lang/String;)V
+#setUrl(Ljava/lang/String;)V
+#setSystemUsername(Ljava/lang/String;)V
+#setSystemPassword(Ljava/lang/String;)V
+#setLdapContextFactory(Lorg/apache/shiro/realm/ldap/LdapContextFactory;)V
@1.4.0-RC2
+#setSearchFilter(Ljava/lang/String;)V
@2.0.0-alpha-1
-#setPrincipalSuffix(Ljava/lang/String;)V

+###org/apache/shiro/realm/ldap/DefaultLdapContextFactory
@1.0.0-incubating
+#<init>()V
+#setAuthentication(Ljava/lang/String;)V
+#setPrincipalSuffix(Ljava/lang/String;)V
+#setSearchBase(Ljava/lang/String;)V
+#setContextFactoryClassName(Ljava/lang/String;)V
+#setUrl(Ljava/lang/String;)V
+#setReferral(Ljava/lang/String;)V
+#setSystemUsername(Ljava/lang/String;)V
+#setSystemPassword(Ljava/lang/String;)V
+#setUsePooling(Z)V
+#setAdditionalEnvironment(Ljava/util/Map;)V
+#getSystemLdapContext()Ljavax/naming/ldap/LdapContext;
+#getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;
@1.1.0
*#setSearchBase(Ljava/lang/String;)V[deprecated]
*#getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;[deprecated]
+#getLdapContext(Ljava/lang/Object;Ljava/lang/Object;)Ljavax/naming/ldap/LdapContext;
@2.0.0-alpha-1
-###org/apache/shiro/realm/ldap/DefaultLdapContextFactory

+###org/apache/shiro/realm/ldap/DefaultLdapRealm
@1.3.0
+#<init>()V
+#setUserDnTemplate(Ljava/lang/String;)V
+#getUserDnTemplate()Ljava/lang/String;
+#setContextFactory(Lorg/apache/shiro/realm/ldap/LdapContextFactory;)V
+#getContextFactory()Lorg/apache/shiro/realm/ldap/LdapContextFactory;

+###org/apache/shiro/realm/ldap/JndiLdapContextFactory
@1.1.0
+#<init>()V
+#setAuthenticationMechanism(Ljava/lang/String;)V
+#getAuthenticationMechanism()Ljava/lang/String;
+#setContextFactoryClassName(Ljava/lang/String;)V
+#getContextFactoryClassName()Ljava/lang/String;
+#getEnvironment()Ljava/util/Map;
+#setEnvironment(Ljava/util/Map;)V
+#isPoolingEnabled()Z
+#setPoolingEnabled(Z)V
+#setReferral(Ljava/lang/String;)V
+#getReferral()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#getUrl()Ljava/lang/String;
+#setSystemPassword(Ljava/lang/String;)V
+#getSystemPassword()Ljava/lang/String;
+#setSystemUsername(Ljava/lang/String;)V
+#getSystemUsername()Ljava/lang/String;
+#getSystemLdapContext()Ljavax/naming/ldap/LdapContext;
+#getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;[deprecated]
+#getLdapContext(Ljava/lang/Object;Ljava/lang/Object;)Ljavax/naming/ldap/LdapContext;
@2.0.0-alpha-1
-#getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;[deprecated]

+###org/apache/shiro/realm/ldap/JndiLdapRealm
@1.1.0
+#<init>()V
+#setUserDnTemplate(Ljava/lang/String;)V
+#getUserDnTemplate()Ljava/lang/String;
+#setContextFactory(Lorg/apache/shiro/realm/ldap/LdapContextFactory;)V
+#getContextFactory()Lorg/apache/shiro/realm/ldap/LdapContextFactory;
@1.3.0
-#setUserDnTemplate(Ljava/lang/String;)V
-#getUserDnTemplate()Ljava/lang/String;
-#setContextFactory(Lorg/apache/shiro/realm/ldap/LdapContextFactory;)V
-#getContextFactory()Lorg/apache/shiro/realm/ldap/LdapContextFactory;

+###org/apache/shiro/realm/ldap/LdapContextFactory
@1.0.0-incubating
+#getSystemLdapContext()Ljavax/naming/ldap/LdapContext;
+#getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;
@1.1.0
*#getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;[deprecated]
+#getLdapContext(Ljava/lang/Object;Ljava/lang/Object;)Ljavax/naming/ldap/LdapContext;
@2.0.0-alpha-1
-#getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;[deprecated]

+###org/apache/shiro/realm/ldap/LdapUtils
@1.0.0-incubating
+#closeContext(Ljavax/naming/ldap/LdapContext;)V
+#getAllAttributeValues(Ljavax/naming/directory/Attribute;)Ljava/util/Collection;
@1.1.0
+#<init>()V
+#closeEnumeration(Ljavax/naming/NamingEnumeration;)V

+###org/apache/shiro/realm/text/IniRealm
@1.0.0-incubating
+#<init>()V
+#<init>(Lorg/apache/shiro/config/Ini;)V
+#<init>(Ljava/lang/String;)V
+#getResourcePath()Ljava/lang/String;
+#setResourcePath(Ljava/lang/String;)V
@1.2.0
+#getIni()Lorg/apache/shiro/config/Ini;
+#setIni(Lorg/apache/shiro/config/Ini;)V

+###org/apache/shiro/realm/text/PropertiesRealm
@1.0.0-incubating
+#<init>()V
+#setUseXmlFormat(Z)V
+#setResourcePath(Ljava/lang/String;)V
+#setReloadIntervalSeconds(I)V
+#onInit()V
+#destroy()V
+#run()V

+###org/apache/shiro/realm/text/TextConfigurationRealm
@1.0.0-incubating
+#<init>()V
+#getUserDefinitions()Ljava/lang/String;
+#setUserDefinitions(Ljava/lang/String;)V
+#getRoleDefinitions()Ljava/lang/String;
+#setRoleDefinitions(Ljava/lang/String;)V

+###org/apache/shiro/session/ExpiredSessionException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/session/InvalidSessionException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/session/ProxiedSession
@1.0.0-incubating
+#<init>(Lorg/apache/shiro/session/Session;)V
+#getId()Ljava/io/Serializable;
+#getStartTimestamp()Ljava/util/Date;
+#getLastAccessTime()Ljava/util/Date;
+#getTimeout()J
+#setTimeout(J)V
+#getHost()Ljava/lang/String;
+#touch()V
+#stop()V
+#getAttributeKeys()Ljava/util/Collection;
+#getAttribute(Ljava/lang/Object;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/Object;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/shiro/session/Session
@1.0.0-incubating
+#getId()Ljava/io/Serializable;
+#getStartTimestamp()Ljava/util/Date;
+#getLastAccessTime()Ljava/util/Date;
+#getTimeout()J
+#setTimeout(J)V
+#getHost()Ljava/lang/String;
+#touch()V
+#stop()V
+#getAttributeKeys()Ljava/util/Collection;
+#getAttribute(Ljava/lang/Object;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/Object;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/shiro/session/SessionException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/session/SessionListener
@1.0.0-incubating
+#onStart(Lorg/apache/shiro/session/Session;)V
+#onStop(Lorg/apache/shiro/session/Session;)V
+#onExpiration(Lorg/apache/shiro/session/Session;)V

+###org/apache/shiro/session/SessionListenerAdapter
@1.0.0-incubating
+#<init>()V
+#onStart(Lorg/apache/shiro/session/Session;)V
+#onStop(Lorg/apache/shiro/session/Session;)V
+#onExpiration(Lorg/apache/shiro/session/Session;)V

+###org/apache/shiro/session/StoppedSessionException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/session/UnknownSessionException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/session/mgt/AbstractNativeSessionManager
@1.0.0-incubating
+#<init>()V
+#setSessionListeners(Ljava/util/Collection;)V
+#getSessionListeners()Ljava/util/Collection;
+#start(Lorg/apache/shiro/session/mgt/SessionContext;)Lorg/apache/shiro/session/Session;
+#getSession(Lorg/apache/shiro/session/mgt/SessionKey;)Lorg/apache/shiro/session/Session;
+#getStartTimestamp(Lorg/apache/shiro/session/mgt/SessionKey;)Ljava/util/Date;
+#getLastAccessTime(Lorg/apache/shiro/session/mgt/SessionKey;)Ljava/util/Date;
+#getTimeout(Lorg/apache/shiro/session/mgt/SessionKey;)J
+#setTimeout(Lorg/apache/shiro/session/mgt/SessionKey;J)V
+#touch(Lorg/apache/shiro/session/mgt/SessionKey;)V
+#getHost(Lorg/apache/shiro/session/mgt/SessionKey;)Ljava/lang/String;
+#getAttributeKeys(Lorg/apache/shiro/session/mgt/SessionKey;)Ljava/util/Collection;
+#getAttribute(Lorg/apache/shiro/session/mgt/SessionKey;Ljava/lang/Object;)Ljava/lang/Object;
+#setAttribute(Lorg/apache/shiro/session/mgt/SessionKey;Ljava/lang/Object;Ljava/lang/Object;)V
+#removeAttribute(Lorg/apache/shiro/session/mgt/SessionKey;Ljava/lang/Object;)Ljava/lang/Object;
+#isValid(Lorg/apache/shiro/session/mgt/SessionKey;)Z
+#stop(Lorg/apache/shiro/session/mgt/SessionKey;)V
+#checkValid(Lorg/apache/shiro/session/mgt/SessionKey;)V
@1.3.0
+#setEventBus(Lorg/apache/shiro/event/EventBus;)V

+###org/apache/shiro/session/mgt/AbstractSessionManager
@1.0.0-incubating
+#<init>()V
+#getGlobalSessionTimeout()J
+#setGlobalSessionTimeout(J)V

+###org/apache/shiro/session/mgt/AbstractValidatingSessionManager
@1.0.0-incubating
+#<init>()V
+#isSessionValidationSchedulerEnabled()Z
+#setSessionValidationSchedulerEnabled(Z)V
+#setSessionValidationScheduler(Lorg/apache/shiro/session/mgt/SessionValidationScheduler;)V
+#getSessionValidationScheduler()Lorg/apache/shiro/session/mgt/SessionValidationScheduler;
+#setSessionValidationInterval(J)V
+#getSessionValidationInterval()J
+#destroy()V
+#validateSessions()V

+###org/apache/shiro/session/mgt/DefaultSessionContext
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getSessionId()Ljava/io/Serializable;
+#setSessionId(Ljava/io/Serializable;)V

+###org/apache/shiro/session/mgt/DefaultSessionKey
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/io/Serializable;)V
+#setSessionId(Ljava/io/Serializable;)V
+#getSessionId()Ljava/io/Serializable;

+###org/apache/shiro/session/mgt/DefaultSessionManager
@1.0.0-incubating
+#<init>()V
+#setSessionDAO(Lorg/apache/shiro/session/mgt/eis/SessionDAO;)V
+#getSessionDAO()Lorg/apache/shiro/session/mgt/eis/SessionDAO;
+#getSessionFactory()Lorg/apache/shiro/session/mgt/SessionFactory;
+#setSessionFactory(Lorg/apache/shiro/session/mgt/SessionFactory;)V
+#isDeleteInvalidSessions()Z
+#setDeleteInvalidSessions(Z)V
+#setCacheManager(Lorg/apache/shiro/cache/CacheManager;)V

+###org/apache/shiro/session/mgt/DelegatingSession
@1.0.0-incubating
+#<init>(Lorg/apache/shiro/session/mgt/NativeSessionManager;Lorg/apache/shiro/session/mgt/SessionKey;)V
+#getId()Ljava/io/Serializable;
+#getStartTimestamp()Ljava/util/Date;
+#getLastAccessTime()Ljava/util/Date;
+#getTimeout()J
+#setTimeout(J)V
+#getHost()Ljava/lang/String;
+#touch()V
+#stop()V
+#getAttributeKeys()Ljava/util/Collection;
+#getAttribute(Ljava/lang/Object;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/Object;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/shiro/session/mgt/ExecutorServiceSessionValidationScheduler
@1.0.0-incubating
+#<init>()V
+#<init>(Lorg/apache/shiro/session/mgt/ValidatingSessionManager;)V
+#getSessionManager()Lorg/apache/shiro/session/mgt/ValidatingSessionManager;
+#setSessionManager(Lorg/apache/shiro/session/mgt/ValidatingSessionManager;)V
+#getInterval()J
+#setInterval(J)V
+#isEnabled()Z
+#enableSessionValidation()V
+#run()V
+#disableSessionValidation()V
@1.3.0
+#setThreadNamePrefix(Ljava/lang/String;)V
+#getThreadNamePrefix()Ljava/lang/String;
@2.0.0-alpha-1
+#getSessionValidationInterval()J
+#setSessionValidationInterval(J)V
-#getInterval()J
-#setInterval(J)V

+###org/apache/shiro/session/mgt/ImmutableProxiedSession
@1.0.0-incubating
+#<init>(Lorg/apache/shiro/session/Session;)V
+#setTimeout(J)V
+#touch()V
+#stop()V
+#setAttribute(Ljava/lang/Object;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/shiro/session/mgt/NativeSessionManager
@1.0.0-incubating
+#getStartTimestamp(Lorg/apache/shiro/session/mgt/SessionKey;)Ljava/util/Date;
+#getLastAccessTime(Lorg/apache/shiro/session/mgt/SessionKey;)Ljava/util/Date;
+#isValid(Lorg/apache/shiro/session/mgt/SessionKey;)Z
+#checkValid(Lorg/apache/shiro/session/mgt/SessionKey;)V
+#getTimeout(Lorg/apache/shiro/session/mgt/SessionKey;)J
+#setTimeout(Lorg/apache/shiro/session/mgt/SessionKey;J)V
+#touch(Lorg/apache/shiro/session/mgt/SessionKey;)V
+#getHost(Lorg/apache/shiro/session/mgt/SessionKey;)Ljava/lang/String;
+#stop(Lorg/apache/shiro/session/mgt/SessionKey;)V
+#getAttributeKeys(Lorg/apache/shiro/session/mgt/SessionKey;)Ljava/util/Collection;
+#getAttribute(Lorg/apache/shiro/session/mgt/SessionKey;Ljava/lang/Object;)Ljava/lang/Object;
+#setAttribute(Lorg/apache/shiro/session/mgt/SessionKey;Ljava/lang/Object;Ljava/lang/Object;)V
+#removeAttribute(Lorg/apache/shiro/session/mgt/SessionKey;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/shiro/session/mgt/SessionContext
@1.0.0-incubating
+#setHost(Ljava/lang/String;)V
+#getHost()Ljava/lang/String;
+#getSessionId()Ljava/io/Serializable;
+#setSessionId(Ljava/io/Serializable;)V

+###org/apache/shiro/session/mgt/SessionFactory
@1.0.0-incubating
+#createSession(Lorg/apache/shiro/session/mgt/SessionContext;)Lorg/apache/shiro/session/Session;

+###org/apache/shiro/session/mgt/SessionKey
@1.0.0-incubating
+#getSessionId()Ljava/io/Serializable;

+###org/apache/shiro/session/mgt/SessionManager
@1.0.0-incubating
+#start(Lorg/apache/shiro/session/mgt/SessionContext;)Lorg/apache/shiro/session/Session;
+#getSession(Lorg/apache/shiro/session/mgt/SessionKey;)Lorg/apache/shiro/session/Session;

+###org/apache/shiro/session/mgt/SessionValidationScheduler
@1.0.0-incubating
+#isEnabled()Z
+#enableSessionValidation()V
+#disableSessionValidation()V

+###org/apache/shiro/session/mgt/SimpleSession
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getId()Ljava/io/Serializable;
+#setId(Ljava/io/Serializable;)V
+#getStartTimestamp()Ljava/util/Date;
+#setStartTimestamp(Ljava/util/Date;)V
+#getStopTimestamp()Ljava/util/Date;
+#setStopTimestamp(Ljava/util/Date;)V
+#getLastAccessTime()Ljava/util/Date;
+#setLastAccessTime(Ljava/util/Date;)V
+#isExpired()Z
+#setExpired(Z)V
+#getTimeout()J
+#setTimeout(J)V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)V
+#touch()V
+#stop()V
+#isValid()Z
+#validate()V
+#getAttributeKeys()Ljava/util/Collection;
+#getAttribute(Ljava/lang/Object;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/Object;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/shiro/session/mgt/SimpleSessionFactory
@1.0.0-incubating
+#<init>()V
+#createSession(Lorg/apache/shiro/session/mgt/SessionContext;)Lorg/apache/shiro/session/Session;

+###org/apache/shiro/session/mgt/ValidatingSession
@1.0.0-incubating
+#isValid()Z
+#validate()V

+###org/apache/shiro/session/mgt/ValidatingSessionManager
@1.0.0-incubating
+#validateSessions()V

+###org/apache/shiro/session/mgt/eis/AbstractSessionDAO
@1.0.0-incubating
+#<init>()V
+#getSessionIdGenerator()Lorg/apache/shiro/session/mgt/eis/SessionIdGenerator;
+#setSessionIdGenerator(Lorg/apache/shiro/session/mgt/eis/SessionIdGenerator;)V
+#create(Lorg/apache/shiro/session/Session;)Ljava/io/Serializable;
+#readSession(Ljava/io/Serializable;)Lorg/apache/shiro/session/Session;

+###org/apache/shiro/session/mgt/eis/CachingSessionDAO
@1.0.0-incubating
+#<init>()V
+#setCacheManager(Lorg/apache/shiro/cache/CacheManager;)V
+#getCacheManager()Lorg/apache/shiro/cache/CacheManager;
+#getActiveSessionsCacheName()Ljava/lang/String;
+#setActiveSessionsCacheName(Ljava/lang/String;)V
+#getActiveSessionsCache()Lorg/apache/shiro/cache/Cache;
+#setActiveSessionsCache(Lorg/apache/shiro/cache/Cache;)V
+#create(Lorg/apache/shiro/session/Session;)Ljava/io/Serializable;
+#readSession(Ljava/io/Serializable;)Lorg/apache/shiro/session/Session;
+#update(Lorg/apache/shiro/session/Session;)V
+#delete(Lorg/apache/shiro/session/Session;)V
+#getActiveSessions()Ljava/util/Collection;

+###org/apache/shiro/session/mgt/eis/EnterpriseCacheSessionDAO
@1.0.0-incubating
+#<init>()V

+###org/apache/shiro/session/mgt/eis/JavaUuidSessionIdGenerator
@1.0.0-incubating
+#<init>()V
+#generateId(Lorg/apache/shiro/session/Session;)Ljava/io/Serializable;

+###org/apache/shiro/session/mgt/eis/MemorySessionDAO
@1.0.0-incubating
+#<init>()V
+#update(Lorg/apache/shiro/session/Session;)V
+#delete(Lorg/apache/shiro/session/Session;)V
+#getActiveSessions()Ljava/util/Collection;

+###org/apache/shiro/session/mgt/eis/RandomSessionIdGenerator
@1.0.0-incubating
+#<init>()V
+#getRandom()Ljava/util/Random;
+#setRandom(Ljava/util/Random;)V
+#generateId(Lorg/apache/shiro/session/Session;)Ljava/io/Serializable;

+###org/apache/shiro/session/mgt/eis/SessionDAO
@1.0.0-incubating
+#create(Lorg/apache/shiro/session/Session;)Ljava/io/Serializable;
+#readSession(Ljava/io/Serializable;)Lorg/apache/shiro/session/Session;
+#update(Lorg/apache/shiro/session/Session;)V
+#delete(Lorg/apache/shiro/session/Session;)V
+#getActiveSessions()Ljava/util/Collection;

+###org/apache/shiro/session/mgt/eis/SessionIdGenerator
@1.0.0-incubating
+#generateId(Lorg/apache/shiro/session/Session;)Ljava/io/Serializable;

+###org/apache/shiro/subject/ExecutionException
@1.0.0-incubating
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/shiro/subject/MutablePrincipalCollection
@1.0.0-incubating
+#add(Ljava/lang/Object;Ljava/lang/String;)V
+#addAll(Ljava/util/Collection;Ljava/lang/String;)V
+#addAll(Lorg/apache/shiro/subject/PrincipalCollection;)V
+#clear()V

+###org/apache/shiro/subject/PrincipalCollection
@1.0.0-incubating
+#getPrimaryPrincipal()Ljava/lang/Object;
+#oneByType(Ljava/lang/Class;)Ljava/lang/Object;
+#byType(Ljava/lang/Class;)Ljava/util/Collection;
+#asList()Ljava/util/List;
+#asSet()Ljava/util/Set;
+#fromRealm(Ljava/lang/String;)Ljava/util/Collection;
+#getRealmNames()Ljava/util/Set;
+#isEmpty()Z

+###org/apache/shiro/subject/PrincipalMap
@1.2.0
+#getRealmPrincipals(Ljava/lang/String;)Ljava/util/Map;
+#setRealmPrincipals(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;
+#setRealmPrincipal(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#getRealmPrincipal(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#removeRealmPrincipal(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/shiro/subject/SimplePrincipalCollection
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/util/Collection;Ljava/lang/String;)V
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;)V
+#getPrimaryPrincipal()Ljava/lang/Object;
+#add(Ljava/lang/Object;Ljava/lang/String;)V
+#addAll(Ljava/util/Collection;Ljava/lang/String;)V
+#addAll(Lorg/apache/shiro/subject/PrincipalCollection;)V
+#oneByType(Ljava/lang/Class;)Ljava/lang/Object;
+#byType(Ljava/lang/Class;)Ljava/util/Collection;
+#asList()Ljava/util/List;
+#asSet()Ljava/util/Set;
+#fromRealm(Ljava/lang/String;)Ljava/util/Collection;
+#getRealmNames()Ljava/util/Set;
+#isEmpty()Z
+#clear()V
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/shiro/subject/SimplePrincipalMap
@1.2.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#clear()V
+#getPrimaryPrincipal()Ljava/lang/Object;
+#oneByType(Ljava/lang/Class;)Ljava/lang/Object;
+#byType(Ljava/lang/Class;)Ljava/util/Collection;
+#asList()Ljava/util/List;
+#asSet()Ljava/util/Set;
+#fromRealm(Ljava/lang/String;)Ljava/util/Collection;
+#getRealmNames()Ljava/util/Set;
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
+#getRealmPrincipals(Ljava/lang/String;)Ljava/util/Map;
+#setRealmPrincipals(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;
+#setRealmPrincipal(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#getRealmPrincipal(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#removeRealmPrincipal(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/shiro/subject/Subject$Builder
@1.0.0-incubating
+#<init>()V
+#<init>(Lorg/apache/shiro/mgt/SecurityManager;)V
+#sessionId(Ljava/io/Serializable;)Lorg/apache/shiro/subject/Subject$Builder;
+#host(Ljava/lang/String;)Lorg/apache/shiro/subject/Subject$Builder;
+#session(Lorg/apache/shiro/session/Session;)Lorg/apache/shiro/subject/Subject$Builder;
+#principals(Lorg/apache/shiro/subject/PrincipalCollection;)Lorg/apache/shiro/subject/Subject$Builder;
+#authenticated(Z)Lorg/apache/shiro/subject/Subject$Builder;
+#contextAttribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/shiro/subject/Subject$Builder;
+#buildSubject()Lorg/apache/shiro/subject/Subject;
@1.2.0
+#sessionCreationEnabled(Z)Lorg/apache/shiro/subject/Subject$Builder;

+###org/apache/shiro/subject/Subject
@1.0.0-incubating
+#getPrincipal()Ljava/lang/Object;
+#getPrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#isPermitted(Ljava/lang/String;)Z
+#isPermitted(Lorg/apache/shiro/authz/Permission;)Z
+#isPermitted([Ljava/lang/String;)[Z
+#isPermitted(Ljava/util/List;)[Z
+#isPermittedAll([Ljava/lang/String;)Z
+#isPermittedAll(Ljava/util/Collection;)Z
+#checkPermission(Ljava/lang/String;)V
+#checkPermission(Lorg/apache/shiro/authz/Permission;)V
+#checkPermissions([Ljava/lang/String;)V
+#checkPermissions(Ljava/util/Collection;)V
+#hasRole(Ljava/lang/String;)Z
+#hasRoles(Ljava/util/List;)[Z
+#hasAllRoles(Ljava/util/Collection;)Z
+#checkRole(Ljava/lang/String;)V
+#checkRoles(Ljava/util/Collection;)V
+#login(Lorg/apache/shiro/authc/AuthenticationToken;)V
+#isAuthenticated()Z
+#isRemembered()Z
+#getSession()Lorg/apache/shiro/session/Session;
+#getSession(Z)Lorg/apache/shiro/session/Session;
+#logout()V
+#execute(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#execute(Ljava/lang/Runnable;)V
+#associateWith(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
+#associateWith(Ljava/lang/Runnable;)Ljava/lang/Runnable;
+#runAs(Lorg/apache/shiro/subject/PrincipalCollection;)V
+#isRunAs()Z
+#getPreviousPrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#releaseRunAs()Lorg/apache/shiro/subject/PrincipalCollection;
@1.1.0
+#checkRoles([Ljava/lang/String;)V

+###org/apache/shiro/subject/SubjectContext
@1.0.0-incubating
+#getSecurityManager()Lorg/apache/shiro/mgt/SecurityManager;
+#setSecurityManager(Lorg/apache/shiro/mgt/SecurityManager;)V
+#resolveSecurityManager()Lorg/apache/shiro/mgt/SecurityManager;
+#getSessionId()Ljava/io/Serializable;
+#setSessionId(Ljava/io/Serializable;)V
+#getSubject()Lorg/apache/shiro/subject/Subject;
+#setSubject(Lorg/apache/shiro/subject/Subject;)V
+#getPrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#resolvePrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#setPrincipals(Lorg/apache/shiro/subject/PrincipalCollection;)V
+#getSession()Lorg/apache/shiro/session/Session;
+#setSession(Lorg/apache/shiro/session/Session;)V
+#resolveSession()Lorg/apache/shiro/session/Session;
+#isAuthenticated()Z
+#setAuthenticated(Z)V
+#resolveAuthenticated()Z
+#getAuthenticationInfo()Lorg/apache/shiro/authc/AuthenticationInfo;
+#setAuthenticationInfo(Lorg/apache/shiro/authc/AuthenticationInfo;)V
+#getAuthenticationToken()Lorg/apache/shiro/authc/AuthenticationToken;
+#setAuthenticationToken(Lorg/apache/shiro/authc/AuthenticationToken;)V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#resolveHost()Ljava/lang/String;
@1.2.0
+#isSessionCreationEnabled()Z
+#setSessionCreationEnabled(Z)V

+###org/apache/shiro/subject/support/DefaultSubjectContext
@1.0.0-incubating
+#<init>()V
+#<init>(Lorg/apache/shiro/subject/SubjectContext;)V
+#getSecurityManager()Lorg/apache/shiro/mgt/SecurityManager;
+#setSecurityManager(Lorg/apache/shiro/mgt/SecurityManager;)V
+#resolveSecurityManager()Lorg/apache/shiro/mgt/SecurityManager;
+#getSessionId()Ljava/io/Serializable;
+#setSessionId(Ljava/io/Serializable;)V
+#getSubject()Lorg/apache/shiro/subject/Subject;
+#setSubject(Lorg/apache/shiro/subject/Subject;)V
+#getPrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#setPrincipals(Lorg/apache/shiro/subject/PrincipalCollection;)V
+#resolvePrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#getSession()Lorg/apache/shiro/session/Session;
+#setSession(Lorg/apache/shiro/session/Session;)V
+#resolveSession()Lorg/apache/shiro/session/Session;
+#isAuthenticated()Z
+#setAuthenticated(Z)V
+#resolveAuthenticated()Z
+#getAuthenticationInfo()Lorg/apache/shiro/authc/AuthenticationInfo;
+#setAuthenticationInfo(Lorg/apache/shiro/authc/AuthenticationInfo;)V
+#getAuthenticationToken()Lorg/apache/shiro/authc/AuthenticationToken;
+#setAuthenticationToken(Lorg/apache/shiro/authc/AuthenticationToken;)V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#resolveHost()Ljava/lang/String;
@1.2.0
+#isSessionCreationEnabled()Z
+#setSessionCreationEnabled(Z)V

+###org/apache/shiro/subject/support/DelegatingSubject
@1.0.0-incubating
+#<init>(Lorg/apache/shiro/mgt/SecurityManager;)V
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;ZLjava/lang/String;Lorg/apache/shiro/session/Session;Lorg/apache/shiro/mgt/SecurityManager;)V
+#getSecurityManager()Lorg/apache/shiro/mgt/SecurityManager;
+#getHost()Ljava/lang/String;
+#getPrincipal()Ljava/lang/Object;
+#getPrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#isPermitted(Ljava/lang/String;)Z
+#isPermitted(Lorg/apache/shiro/authz/Permission;)Z
+#isPermitted([Ljava/lang/String;)[Z
+#isPermitted(Ljava/util/List;)[Z
+#isPermittedAll([Ljava/lang/String;)Z
+#isPermittedAll(Ljava/util/Collection;)Z
+#checkPermission(Ljava/lang/String;)V
+#checkPermission(Lorg/apache/shiro/authz/Permission;)V
+#checkPermissions([Ljava/lang/String;)V
+#checkPermissions(Ljava/util/Collection;)V
+#hasRole(Ljava/lang/String;)Z
+#hasRoles(Ljava/util/List;)[Z
+#hasAllRoles(Ljava/util/Collection;)Z
+#checkRole(Ljava/lang/String;)V
+#checkRoles(Ljava/util/Collection;)V
+#login(Lorg/apache/shiro/authc/AuthenticationToken;)V
+#isAuthenticated()Z
+#isRemembered()Z
+#getSession()Lorg/apache/shiro/session/Session;
+#getSession(Z)Lorg/apache/shiro/session/Session;
+#logout()V
+#execute(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#execute(Ljava/lang/Runnable;)V
+#associateWith(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
+#associateWith(Ljava/lang/Runnable;)Ljava/lang/Runnable;
+#runAs(Lorg/apache/shiro/subject/PrincipalCollection;)V
+#isRunAs()Z
+#getPreviousPrincipals()Lorg/apache/shiro/subject/PrincipalCollection;
+#releaseRunAs()Lorg/apache/shiro/subject/PrincipalCollection;
@1.1.0
+#checkRoles([Ljava/lang/String;)V
@1.2.0
+#<init>(Lorg/apache/shiro/subject/PrincipalCollection;ZLjava/lang/String;Lorg/apache/shiro/session/Session;ZLorg/apache/shiro/mgt/SecurityManager;)V
@2.0.0-alpha-1
+#toString()Ljava/lang/String;

+###org/apache/shiro/subject/support/DisabledSessionException
@1.2.0
+#<init>(Ljava/lang/String;)V

+###org/apache/shiro/subject/support/SubjectCallable
@1.0.0-incubating
+#<init>(Lorg/apache/shiro/subject/Subject;Ljava/util/concurrent/Callable;)V
+#call()Ljava/lang/Object;

+###org/apache/shiro/subject/support/SubjectRunnable
@1.0.0-incubating
+#<init>(Lorg/apache/shiro/subject/Subject;Ljava/lang/Runnable;)V
+#run()V

+###org/apache/shiro/subject/support/SubjectThreadState
@1.0.0-incubating
+#<init>(Lorg/apache/shiro/subject/Subject;)V
+#bind()V
+#restore()V
+#clear()V

+###org/apache/shiro/util/AbstractFactory
@1.0.0-incubating
+#<init>()V
+#isSingleton()Z
+#setSingleton(Z)V
+#getInstance()Ljava/lang/Object;

+###org/apache/shiro/util/AntPathMatcher
@1.0.0-incubating
+#<init>()V
+#setPathSeparator(Ljava/lang/String;)V
+#isPattern(Ljava/lang/String;)Z
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#match(Ljava/lang/String;Ljava/lang/String;)Z
+#matchStart(Ljava/lang/String;Ljava/lang/String;)Z
+#extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/shiro/util/Assert
@1.3.0
+#<init>()V
+#isTrue(ZLjava/lang/String;)V
+#isTrue(Z)V
+#isNull(Ljava/lang/Object;Ljava/lang/String;)V
+#isNull(Ljava/lang/Object;)V
+#notNull(Ljava/lang/Object;Ljava/lang/String;)V
+#notNull(Ljava/lang/Object;)V
+#hasLength(Ljava/lang/String;Ljava/lang/String;)V
+#hasLength(Ljava/lang/String;)V
+#hasText(Ljava/lang/String;Ljava/lang/String;)V
+#hasText(Ljava/lang/String;)V
+#doesNotContain(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#doesNotContain(Ljava/lang/String;Ljava/lang/String;)V
+#notEmpty([Ljava/lang/Object;Ljava/lang/String;)V
+#notEmpty([Ljava/lang/Object;)V
+#noNullElements([Ljava/lang/Object;Ljava/lang/String;)V
+#noNullElements([Ljava/lang/Object;)V
+#notEmpty(Ljava/util/Collection;Ljava/lang/String;)V
+#notEmpty(Ljava/util/Collection;)V
+#notEmpty(Ljava/util/Map;Ljava/lang/String;)V
+#notEmpty(Ljava/util/Map;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;)V
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V
+#state(ZLjava/lang/String;)V
+#state(Z)V
@2.0.0-alpha-1
-###org/apache/shiro/util/Assert

+###org/apache/shiro/util/ByteSource$Util
@1.2.0
+#<init>()V
+#bytes([B)Lorg/apache/shiro/util/ByteSource;
+#bytes([C)Lorg/apache/shiro/util/ByteSource;
+#bytes(Ljava/lang/String;)Lorg/apache/shiro/util/ByteSource;
+#bytes(Lorg/apache/shiro/util/ByteSource;)Lorg/apache/shiro/util/ByteSource;
+#bytes(Ljava/io/File;)Lorg/apache/shiro/util/ByteSource;
+#bytes(Ljava/io/InputStream;)Lorg/apache/shiro/util/ByteSource;
+#isCompatible(Ljava/lang/Object;)Z
+#bytes(Ljava/lang/Object;)Lorg/apache/shiro/util/ByteSource;
@2.0.0-alpha-1
-###org/apache/shiro/util/ByteSource$Util

+###org/apache/shiro/util/ByteSource
@1.0.0-incubating
+#getBytes()[B
+#toHex()Ljava/lang/String;
+#toBase64()Ljava/lang/String;
@1.2.0
+#isEmpty()Z
@2.0.0-alpha-1
-###org/apache/shiro/util/ByteSource

+###org/apache/shiro/util/ClassUtils
@1.0.0-incubating
+#<init>()V
+#getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
+#forName(Ljava/lang/String;)Ljava/lang/Class;
+#isAvailable(Ljava/lang/String;)Z
+#newInstance(Ljava/lang/String;)Ljava/lang/Object;
+#newInstance(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#newInstance(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#getConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
+#instantiate(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
@1.3.0
+#getAnnotatedMethods(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
@2.0.0-alpha-1
-###org/apache/shiro/util/ClassUtils

+###org/apache/shiro/util/CollectionUtils
@1.0.0-incubating
+#<init>()V
+#asSet([Ljava/lang/Object;)Ljava/util/Set;
+#isEmpty(Ljava/util/Collection;)Z
+#isEmpty(Ljava/util/Map;)Z
+#isEmpty(Lorg/apache/shiro/subject/PrincipalCollection;)Z
+#asList([Ljava/lang/Object;)Ljava/util/List;
@1.2.0
+#size(Ljava/util/Collection;)I
+#size(Ljava/util/Map;)I
@1.4.0-RC2
*#isEmpty(Lorg/apache/shiro/subject/PrincipalCollection;)Z[deprecated]

+###org/apache/shiro/util/Destroyable
@1.0.0-incubating
+#destroy()V
@2.0.0-alpha-1
-###org/apache/shiro/util/Destroyable

+###org/apache/shiro/util/Factory
@1.0.0-incubating
+#getInstance()Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/shiro/util/Factory

+###org/apache/shiro/util/Initializable
@1.0.0-incubating
+#init()V
@2.0.0-alpha-1
-###org/apache/shiro/util/Initializable

+###org/apache/shiro/util/InstantiationException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/shiro/util/InstantiationException

+###org/apache/shiro/util/JavaEnvironment
@1.0.0-incubating
+#<init>()V
+#getVersion()Ljava/lang/String;
+#getMajorVersion()I
+#isAtLeastVersion14()Z
+#isAtLeastVersion15()Z
@1.2.0
+#isAtLeastVersion16()Z

+###org/apache/shiro/util/JdbcUtils
@1.0.0-incubating
+#closeConnection(Ljava/sql/Connection;)V
+#closeStatement(Ljava/sql/Statement;)V
+#closeResultSet(Ljava/sql/ResultSet;)V

+###org/apache/shiro/util/LifecycleUtils
@1.0.0-incubating
+#<init>()V
+#init(Ljava/lang/Object;)V
+#init(Lorg/apache/shiro/util/Initializable;)V
+#init(Ljava/util/Collection;)V
+#destroy(Ljava/lang/Object;)V
+#destroy(Lorg/apache/shiro/util/Destroyable;)V
+#destroy(Ljava/util/Collection;)V
@2.0.0-alpha-1
-###org/apache/shiro/util/LifecycleUtils

+###org/apache/shiro/util/MapContext
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/shiro/util/Nameable
@1.0.0-incubating
+#setName(Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/shiro/util/Nameable

+###org/apache/shiro/util/PatternMatcher
@1.0.0-incubating
+#matches(Ljava/lang/String;Ljava/lang/String;)Z

+###org/apache/shiro/util/PermissionUtils
@1.0.0-incubating
+#<init>()V
+#resolveDelimitedPermissions(Ljava/lang/String;Lorg/apache/shiro/authz/permission/PermissionResolver;)Ljava/util/Set;
+#toPermissionStrings(Ljava/lang/String;)Ljava/util/Set;
+#resolvePermissions(Ljava/util/Collection;Lorg/apache/shiro/authz/permission/PermissionResolver;)Ljava/util/Set;

+###org/apache/shiro/util/RegExPatternMatcher
@1.0.0-incubating
+#<init>()V
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
@1.9.1
+#isCaseInsensitive()Z
+#setCaseInsensitive(Z)V

+###org/apache/shiro/util/SimpleByteSource
@1.0.0-incubating
+#<init>([B)V
+#getBytes()[B
+#toHex()Ljava/lang/String;
+#toBase64()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.1.0
+#<init>([C)V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/shiro/util/ByteSource;)V
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/InputStream;)V
@1.2.0
+#isCompatible(Ljava/lang/Object;)Z
+#isEmpty()Z
@2.0.0-alpha-1
-###org/apache/shiro/util/SimpleByteSource

+###org/apache/shiro/util/SoftHashMap
@1.0.0-incubating
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;I)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#putAll(Ljava/util/Map;)V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#size()I
+#entrySet()Ljava/util/Set;
@2.0.0-alpha-1
-###org/apache/shiro/util/SoftHashMap

+###org/apache/shiro/util/StringUtils
@1.0.0-incubating
+#<init>()V
+#hasText(Ljava/lang/String;)Z
+#hasLength(Ljava/lang/String;)Z
+#startsWithIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z
+#clean(Ljava/lang/String;)Ljava/lang/String;
+#toString([Ljava/lang/Object;)Ljava/lang/String;
+#toDelimitedString([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#tokenizeToStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#tokenizeToStringArray(Ljava/lang/String;Ljava/lang/String;ZZ)[Ljava/lang/String;
+#toStringArray(Ljava/util/Collection;)[Ljava/lang/String;
+#splitKeyValue(Ljava/lang/String;)[Ljava/lang/String;
+#split(Ljava/lang/String;)[Ljava/lang/String;
+#split(Ljava/lang/String;C)[Ljava/lang/String;
+#split(Ljava/lang/String;CC)[Ljava/lang/String;
+#split(Ljava/lang/String;CCC)[Ljava/lang/String;
+#split(Ljava/lang/String;CCCZZ)[Ljava/lang/String;
@1.2.0
+#toDelimitedString(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
+#join(Ljava/util/Iterator;Ljava/lang/String;)Ljava/lang/String;
+#splitToSet(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#uppercaseFirstChar(Ljava/lang/String;)Ljava/lang/String;
@1.10.0
+#clean(Ljava/lang/String;Z)Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/shiro/util/StringUtils

+###org/apache/shiro/util/ThreadContext
@1.0.0-incubating
+#getResources()Ljava/util/Map;
+#setResources(Ljava/util/Map;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#remove()V
+#getSecurityManager()Lorg/apache/shiro/mgt/SecurityManager;
+#bind(Lorg/apache/shiro/mgt/SecurityManager;)V
+#unbindSecurityManager()Lorg/apache/shiro/mgt/SecurityManager;
+#getSubject()Lorg/apache/shiro/subject/Subject;
+#bind(Lorg/apache/shiro/subject/Subject;)V
+#unbindSubject()Lorg/apache/shiro/subject/Subject;

+###org/apache/shiro/util/ThreadState
@1.0.0-incubating
+#bind()V
+#restore()V
+#clear()V

+###org/apache/shiro/util/UnknownClassException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/shiro/util/UnknownClassException

+###org/apache/shiro/functor/Translator
@1.2.0
+#translate(Ljava/lang/Object;)Ljava/lang/Object;
@1.4.0-RC2
-###org/apache/shiro/functor/Translator

+###org/apache/shiro/util/UnavailableConstructorException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.4.0-RC2
-###org/apache/shiro/util/UnavailableConstructorException

+###org/apache/shiro/config/event/BeanListener
@1.3.0
+#onBeanEvent(Lorg/apache/shiro/config/event/BeanEvent;)V
@1.4.0-RC2
-###org/apache/shiro/config/event/BeanListener

+###org/apache/shiro/config/event/BeanListenerSupport
@1.3.0
+#<init>()V
+#onBeanEvent(Lorg/apache/shiro/config/event/BeanEvent;)V
@1.4.0-RC2
-###org/apache/shiro/config/event/BeanListenerSupport

+###org/apache/shiro/authz/aop/DenyAllAnnotationHandler
@2.0.0-alpha-1
+#<init>()V
+#assertAuthorized(Ljava/lang/annotation/Annotation;)V

+###org/apache/shiro/authz/aop/PermitAllAnnotationHandler
@2.0.0-alpha-1
+#<init>()V
+#assertAuthorized(Ljava/lang/annotation/Annotation;)V

+###org/apache/shiro/authz/aop/RolesAllowedAnnotationHandler
@2.0.0-alpha-1
+#<init>()V
+#assertAuthorized(Ljava/lang/annotation/Annotation;)V

+###org/apache/shiro/ini/IniFactorySupport
@2.0.0-alpha-1
+#getIni()Lorg/apache/shiro/config/Ini;
+#setIni(Lorg/apache/shiro/config/Ini;)V
+#setDefaults(Ljava/util/Map;)V
+#loadDefaultClassPathIni()Lorg/apache/shiro/config/Ini;
+#createInstance()Ljava/lang/Object;

+###org/apache/shiro/ini/IniSecurityManagerFactory
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/shiro/config/Ini;)V
+#<init>(Ljava/lang/String;)V
+#getBeans()Ljava/util/Map;
+#destroy()V
+#getReflectionBuilder()Lorg/apache/shiro/config/ogdl/ReflectionBuilder;
+#setReflectionBuilder(Lorg/apache/shiro/config/ogdl/ReflectionBuilder;)V
