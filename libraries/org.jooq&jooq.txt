
+###org/jooq/AggregateFunction
@2.0.0-RC1
+#over()Lorg/jooq/WindowPartitionByStep;
@2.3.0
+#keepDenseRankFirstOrderBy([Lorg/jooq/Field;)Lorg/jooq/WindowBeforeOverStep;
+#keepDenseRankFirstOrderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowBeforeOverStep;
+#keepDenseRankFirstOrderBy(Ljava/util/Collection;)Lorg/jooq/WindowBeforeOverStep;
+#keepDenseRankLastOrderBy([Lorg/jooq/Field;)Lorg/jooq/WindowBeforeOverStep;
+#keepDenseRankLastOrderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowBeforeOverStep;
+#keepDenseRankLastOrderBy(Ljava/util/Collection;)Lorg/jooq/WindowBeforeOverStep;
@3.2.0
-#keepDenseRankFirstOrderBy([Lorg/jooq/Field;)Lorg/jooq/WindowBeforeOverStep;
-#keepDenseRankFirstOrderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowBeforeOverStep;
-#keepDenseRankFirstOrderBy(Ljava/util/Collection;)Lorg/jooq/WindowBeforeOverStep;
-#keepDenseRankLastOrderBy([Lorg/jooq/Field;)Lorg/jooq/WindowBeforeOverStep;
-#keepDenseRankLastOrderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowBeforeOverStep;
-#keepDenseRankLastOrderBy(Ljava/util/Collection;)Lorg/jooq/WindowBeforeOverStep;
@3.3.0
+#over(Lorg/jooq/Name;)Lorg/jooq/WindowFinalStep;
+#over(Ljava/lang/String;)Lorg/jooq/WindowFinalStep;
+#over(Lorg/jooq/WindowSpecification;)Lorg/jooq/WindowFinalStep;
+#over(Lorg/jooq/WindowDefinition;)Lorg/jooq/WindowFinalStep;
@3.6.0
-#over()Lorg/jooq/WindowPartitionByStep;
-#over(Lorg/jooq/Name;)Lorg/jooq/WindowFinalStep;
-#over(Ljava/lang/String;)Lorg/jooq/WindowFinalStep;
-#over(Lorg/jooq/WindowSpecification;)Lorg/jooq/WindowFinalStep;
-#over(Lorg/jooq/WindowDefinition;)Lorg/jooq/WindowFinalStep;
@3.16.0
+#$filterWhere()Lorg/jooq/Condition;

+###org/jooq/ArrayRecord
@1.5.7
+#get()[Ljava/lang/Object;
+#getList()Ljava/util/List;
+#set(Ljava/sql/Array;)V
+#set([Ljava/lang/Object;)V
+#setList(Ljava/util/List;)V
+#size()I
+#getName()Ljava/lang/String;
+#getDataType()Lorg/jooq/DataType;
+#createArray()Ljava/sql/Array;
@2.5.0
*#createArray()Ljava/sql/Array;[deprecated]
@3.0.0-RC1
-#createArray()Ljava/sql/Array;[deprecated]
@3.2.0
-###org/jooq/ArrayRecord

+###org/jooq/Attachable
@1.5.7
+#attach(Lorg/jooq/Configuration;)V
+#getConfiguration()Lorg/jooq/Configuration;[deprecated]
@1.6.1
-#getConfiguration()Lorg/jooq/Configuration;[deprecated]
@3.2.0
+#detach()V
@3.10.0
+#configuration()Lorg/jooq/Configuration;

+###org/jooq/AttachableInternal
@1.5.7
+#getAttachables()Ljava/util/List;
+#getConfiguration()Lorg/jooq/Configuration;
@2.5.0
*#getAttachables()Ljava/util/List;[deprecated]
@3.0.0-RC1
-#getAttachables()Ljava/util/List;[deprecated]
@3.0.0-RC3
+#configuration()Lorg/jooq/Configuration;
-#getConfiguration()Lorg/jooq/Configuration;
@3.10.0
-###org/jooq/AttachableInternal

+###org/jooq/Batch
@1.6.9
+#execute()[I
@3.0.0-RC1
+#size()I
@3.13.0
+#executeAsync()Ljava/util/concurrent/CompletionStage;
+#executeAsync(Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;

+###org/jooq/BatchBindStep
@1.6.9
+#bind([Ljava/lang/Object;)Lorg/jooq/BatchBindStep;
@3.0.0-RC1
+#bind([[Ljava/lang/Object;)Lorg/jooq/BatchBindStep;
@3.6.0
+#bind(Ljava/util/Map;)Lorg/jooq/BatchBindStep;
+#bind([Ljava/util/Map;)Lorg/jooq/BatchBindStep;

+###org/jooq/BetweenAndStep
@2.6.0
+#and(Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Field;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep1
@3.0.0-RC1
+#and(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record1;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep10
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record10;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep11
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record11;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep12
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record12;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep13
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record13;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep14
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record14;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep15
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record15;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep16
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record16;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep17
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record17;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep18
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record18;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep19
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record19;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep2
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record2;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep20
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record20;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep21
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record21;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep22
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record22;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep3
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record3;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep4
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record4;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep5
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record5;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep6
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record6;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep7
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record7;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep8
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record8;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStep9
@3.0.0-RC1
+#and(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record9;)Lorg/jooq/Condition;

+###org/jooq/BetweenAndStepN
@3.0.0-RC1
+#and([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#and([Ljava/lang/Object;)Lorg/jooq/Condition;
+#and(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#and(Lorg/jooq/Record;)Lorg/jooq/Condition;

+###org/jooq/BindContext
@1.6.4
+#statement()Ljava/sql/PreparedStatement;
+#nextIndex()I
+#peekIndex()I
+#bind(Lorg/jooq/QueryPart;)Lorg/jooq/BindContext;
+#bind(Ljava/util/Collection;)Lorg/jooq/BindContext;
+#bind([Lorg/jooq/QueryPart;)Lorg/jooq/BindContext;
+#bindValue(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/BindContext;
+#bindValues([Ljava/lang/Object;)Lorg/jooq/BindContext;
@2.0.1
-#nextIndex()I
-#peekIndex()I
@3.2.0-alpha-01
*#bind(Lorg/jooq/QueryPart;)Lorg/jooq/BindContext;[deprecated]
*#bind(Ljava/util/Collection;)Lorg/jooq/BindContext;[deprecated]
*#bind([Lorg/jooq/QueryPart;)Lorg/jooq/BindContext;[deprecated]
@3.3.2
*#bindValue(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/BindContext;[deprecated]
*#bindValues([Ljava/lang/Object;)Lorg/jooq/BindContext;[deprecated]
+#bindValue(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/BindContext;
@3.14.0
-#statement()Ljava/sql/PreparedStatement;
-#bindValue(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/BindContext;
@3.15.0
-#bind(Lorg/jooq/QueryPart;)Lorg/jooq/BindContext;[deprecated]
-#bind(Ljava/util/Collection;)Lorg/jooq/BindContext;[deprecated]
-#bind([Lorg/jooq/QueryPart;)Lorg/jooq/BindContext;[deprecated]
-#bindValue(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/BindContext;[deprecated]
-#bindValues([Ljava/lang/Object;)Lorg/jooq/BindContext;[deprecated]

+###org/jooq/Case
@1.5.7
+#value(Ljava/lang/Object;)Lorg/jooq/CaseValueStep;
+#value(Lorg/jooq/Field;)Lorg/jooq/CaseValueStep;
+#when(Lorg/jooq/Condition;Ljava/lang/Object;)Lorg/jooq/CaseConditionStep;
+#when(Lorg/jooq/Condition;Lorg/jooq/Field;)Lorg/jooq/CaseConditionStep;
@3.5.0
+#when(Lorg/jooq/Condition;Lorg/jooq/Select;)Lorg/jooq/CaseConditionStep;
@3.14.0
+#when(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/CaseConditionStep;
+#when(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CaseConditionStep;
+#when(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/CaseConditionStep;

+###org/jooq/CaseConditionStep
@1.5.7
+#when(Lorg/jooq/Condition;Ljava/lang/Object;)Lorg/jooq/CaseConditionStep;
+#when(Lorg/jooq/Condition;Lorg/jooq/Field;)Lorg/jooq/CaseConditionStep;
+#otherwise(Ljava/lang/Object;)Lorg/jooq/Field;
+#otherwise(Lorg/jooq/Field;)Lorg/jooq/Field;
@3.5.0
+#when(Lorg/jooq/Condition;Lorg/jooq/Select;)Lorg/jooq/CaseConditionStep;
+#otherwise(Lorg/jooq/Select;)Lorg/jooq/Field;
@3.12.0
+#else_(Ljava/lang/Object;)Lorg/jooq/Field;
+#else_(Lorg/jooq/Field;)Lorg/jooq/Field;
+#else_(Lorg/jooq/Select;)Lorg/jooq/Field;
@3.14.0
+#when(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/CaseConditionStep;
+#when(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CaseConditionStep;
+#when(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/CaseConditionStep;

+###org/jooq/CaseValueStep
@1.5.7
+#when(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/CaseWhenStep;
+#when(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/CaseWhenStep;
+#when(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/CaseWhenStep;
+#when(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CaseWhenStep;
@3.5.0
+#when(Ljava/lang/Object;Lorg/jooq/Select;)Lorg/jooq/CaseWhenStep;
+#when(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/CaseWhenStep;
@3.8.0
+#mapValues(Ljava/util/Map;)Lorg/jooq/CaseWhenStep;
+#mapFields(Ljava/util/Map;)Lorg/jooq/CaseWhenStep;

+###org/jooq/CaseWhenStep
@1.5.7
+#when(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/CaseWhenStep;
+#when(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/CaseWhenStep;
+#when(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/CaseWhenStep;
+#when(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CaseWhenStep;
+#otherwise(Ljava/lang/Object;)Lorg/jooq/Field;
+#otherwise(Lorg/jooq/Field;)Lorg/jooq/Field;
@3.8.0
+#mapValues(Ljava/util/Map;)Lorg/jooq/CaseWhenStep;
+#mapFields(Ljava/util/Map;)Lorg/jooq/CaseWhenStep;
@3.12.0
+#else_(Ljava/lang/Object;)Lorg/jooq/Field;
+#else_(Lorg/jooq/Field;)Lorg/jooq/Field;

+###org/jooq/Catalog
@3.0.0-RC1
+#getName()Ljava/lang/String;
+#getSchemas()Ljava/util/List;
+#getSchema(Ljava/lang/String;)Lorg/jooq/Schema;
@3.9.0
+#schemaStream()Ljava/util/stream/Stream;
@3.10.0
+#getQualifiedName()Lorg/jooq/Name;
+#getUnqualifiedName()Lorg/jooq/Name;
@3.11.0
-#getName()Ljava/lang/String;
-#getQualifiedName()Lorg/jooq/Name;
-#getUnqualifiedName()Lorg/jooq/Name;
@3.14.0
+#getSchema(Lorg/jooq/Name;)Lorg/jooq/Schema;

+###org/jooq/Comparator
@1.5.7
+#values()[Lorg/jooq/Comparator;
+#valueOf(Ljava/lang/String;)Lorg/jooq/Comparator;
+#toSQL()Ljava/lang/String;
@3.1.0
+#supportsQuantifier()Z
+#supportsSubselect()Z
@3.10.0
+#toKeyword()Lorg/jooq/Keyword;
@3.14.0
+#inverse()Lorg/jooq/Comparator;
+#mirror()Lorg/jooq/Comparator;
*#supportsQuantifier()Z[deprecated]
*#supportsSubselect()Z[deprecated]
@3.15.0
+#supportsNulls()Z[deprecated]

+###org/jooq/Condition
@1.5.7
+#and(Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#and(Ljava/lang/String;)Lorg/jooq/Condition;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Condition;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#or(Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#or(Ljava/lang/String;)Lorg/jooq/Condition;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Condition;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#not()Lorg/jooq/Condition;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Condition;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Condition;
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#or(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/Condition;
+#and(Lorg/jooq/SQL;)Lorg/jooq/Condition;
+#andNot(Ljava/lang/Boolean;)Lorg/jooq/Condition;
+#or(Ljava/lang/Boolean;)Lorg/jooq/Condition;
+#or(Lorg/jooq/SQL;)Lorg/jooq/Condition;
+#orNot(Ljava/lang/Boolean;)Lorg/jooq/Condition;
@3.7.2
*#and(Ljava/lang/Boolean;)Lorg/jooq/Condition;[deprecated]
*#andNot(Ljava/lang/Boolean;)Lorg/jooq/Condition;[deprecated]
*#or(Ljava/lang/Boolean;)Lorg/jooq/Condition;[deprecated]
*#orNot(Ljava/lang/Boolean;)Lorg/jooq/Condition;[deprecated]
@3.15.0
-#and(Ljava/lang/Boolean;)Lorg/jooq/Condition;[deprecated]
-#andNot(Ljava/lang/Boolean;)Lorg/jooq/Condition;[deprecated]
-#or(Ljava/lang/Boolean;)Lorg/jooq/Condition;[deprecated]
-#orNot(Ljava/lang/Boolean;)Lorg/jooq/Condition;[deprecated]

+###org/jooq/ConditionProvider
@1.5.7
+#addConditions([Lorg/jooq/Condition;)V
+#addConditions(Ljava/util/Collection;)V
+#addConditions(Lorg/jooq/Operator;[Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Ljava/util/Collection;)V
+#addCompareCondition(Lorg/jooq/Field;Ljava/lang/Object;)V[deprecated]
+#addCompareCondition(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Comparator;)V[deprecated]
+#addNullCondition(Lorg/jooq/Field;)V[deprecated]
+#addNotNullCondition(Lorg/jooq/Field;)V[deprecated]
+#addInCondition(Lorg/jooq/Field;Ljava/util/Collection;)V[deprecated]
+#addInCondition(Lorg/jooq/Field;[Ljava/lang/Object;)V[deprecated]
+#addBetweenCondition(Lorg/jooq/Field;Ljava/lang/Object;Ljava/lang/Object;)V[deprecated]
@1.6.0
-#addCompareCondition(Lorg/jooq/Field;Ljava/lang/Object;)V[deprecated]
-#addCompareCondition(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Comparator;)V[deprecated]
-#addNullCondition(Lorg/jooq/Field;)V[deprecated]
-#addNotNullCondition(Lorg/jooq/Field;)V[deprecated]
-#addInCondition(Lorg/jooq/Field;Ljava/util/Collection;)V[deprecated]
-#addInCondition(Lorg/jooq/Field;[Ljava/lang/Object;)V[deprecated]
-#addBetweenCondition(Lorg/jooq/Field;Ljava/lang/Object;Ljava/lang/Object;)V[deprecated]
@3.11.0
+#addConditions(Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Lorg/jooq/Condition;)V

+###org/jooq/conf/MappedSchema
@2.0.5
+#<init>()V
+#getInput()Ljava/lang/String;
+#setInput(Ljava/lang/String;)V
+#getOutput()Ljava/lang/String;
+#setOutput(Ljava/lang/String;)V
+#getTables()Ljava/util/List;
+#withInput(Ljava/lang/String;)Lorg/jooq/conf/MappedSchema;
+#withOutput(Ljava/lang/String;)Lorg/jooq/conf/MappedSchema;
+#withTables([Lorg/jooq/conf/MappedTable;)Lorg/jooq/conf/MappedSchema;
+#withTables(Ljava/util/Collection;)Lorg/jooq/conf/MappedSchema;
@2.3.0
+#setTables(Ljava/util/List;)V
+#withTables(Ljava/util/List;)Lorg/jooq/conf/MappedSchema;
@2.6.0
+#clone()Ljava/lang/Object;
@3.8.0
+#getInputExpression()Ljava/util/regex/Pattern;
+#setInputExpression(Ljava/util/regex/Pattern;)V
+#withInputExpression(Ljava/util/regex/Pattern;)Lorg/jooq/conf/MappedSchema;
@3.11.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/conf/MappedTable
@2.0.5
+#<init>()V
+#getInput()Ljava/lang/String;
+#setInput(Ljava/lang/String;)V
+#getOutput()Ljava/lang/String;
+#setOutput(Ljava/lang/String;)V
+#withInput(Ljava/lang/String;)Lorg/jooq/conf/MappedTable;
+#withOutput(Ljava/lang/String;)Lorg/jooq/conf/MappedTable;
@2.6.0
+#clone()Ljava/lang/Object;
@3.8.0
+#getInputExpression()Ljava/util/regex/Pattern;
+#setInputExpression(Ljava/util/regex/Pattern;)V
+#withInputExpression(Ljava/util/regex/Pattern;)Lorg/jooq/conf/MappedTable;
@3.11.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/conf/ObjectFactory
@2.3.0
+#<init>()V
+#createSettings()Lorg/jooq/conf/Settings;
+#createMappedTable()Lorg/jooq/conf/MappedTable;
+#createMappedSchema()Lorg/jooq/conf/MappedSchema;
+#createRenderMapping()Lorg/jooq/conf/RenderMapping;
+#createSettings(Lorg/jooq/conf/Settings;)Ljavax/xml/bind/JAXBElement;
@3.10.0
+#createRenderFormatting()Lorg/jooq/conf/RenderFormatting;
@3.12.0
+#createParseSearchSchema()Lorg/jooq/conf/ParseSearchSchema;
@3.13.0
+#createInterpreterSearchSchema()Lorg/jooq/conf/InterpreterSearchSchema;
+#createMappedCatalog()Lorg/jooq/conf/MappedCatalog;
@3.15.0
+#createMigrationSchema()Lorg/jooq/conf/MigrationSchema;
@3.16.0
+#createSettings(Lorg/jooq/conf/Settings;)Ljakarta/xml/bind/JAXBElement;
-#createSettings(Lorg/jooq/conf/Settings;)Ljavax/xml/bind/JAXBElement;

+###org/jooq/conf/RenderKeywordStyle
@2.1.0
+#values()[Lorg/jooq/conf/RenderKeywordStyle;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/RenderKeywordStyle;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/RenderKeywordStyle;

+###org/jooq/conf/RenderMapping
@2.0.5
+#<init>()V
+#getDefaultSchema()Ljava/lang/String;
+#setDefaultSchema(Ljava/lang/String;)V
+#getSchemata()Ljava/util/List;
+#withDefaultSchema(Ljava/lang/String;)Lorg/jooq/conf/RenderMapping;
+#withSchemata([Lorg/jooq/conf/MappedSchema;)Lorg/jooq/conf/RenderMapping;
+#withSchemata(Ljava/util/Collection;)Lorg/jooq/conf/RenderMapping;
@2.3.0
+#setSchemata(Ljava/util/List;)V
+#withSchemata(Ljava/util/List;)Lorg/jooq/conf/RenderMapping;
@2.6.0
+#clone()Ljava/lang/Object;
@3.11.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
@3.13.0
+#getDefaultCatalog()Ljava/lang/String;
+#setDefaultCatalog(Ljava/lang/String;)V
+#getCatalogs()Ljava/util/List;
+#setCatalogs(Ljava/util/List;)V
+#withDefaultCatalog(Ljava/lang/String;)Lorg/jooq/conf/RenderMapping;
+#withCatalogs([Lorg/jooq/conf/MappedCatalog;)Lorg/jooq/conf/RenderMapping;
+#withCatalogs(Ljava/util/Collection;)Lorg/jooq/conf/RenderMapping;
+#withCatalogs(Ljava/util/List;)Lorg/jooq/conf/RenderMapping;

+###org/jooq/conf/RenderNameStyle
@2.1.0
+#values()[Lorg/jooq/conf/RenderNameStyle;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/RenderNameStyle;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/RenderNameStyle;

+###org/jooq/conf/Settings
@2.0.5
+#<init>()V
+#getRenderMapping()Lorg/jooq/conf/RenderMapping;
+#setRenderMapping(Lorg/jooq/conf/RenderMapping;)V
+#getStatementType()Lorg/jooq/conf/StatementType;
+#setStatementType(Lorg/jooq/conf/StatementType;)V
+#isExecuteLogging()Ljava/lang/Boolean;
+#setExecuteLogging(Ljava/lang/Boolean;)V
+#getExecuteListeners()Ljava/util/List;
+#withRenderMapping(Lorg/jooq/conf/RenderMapping;)Lorg/jooq/conf/Settings;
+#withStatementType(Lorg/jooq/conf/StatementType;)Lorg/jooq/conf/Settings;
+#withExecuteLogging(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withExecuteListeners([Ljava/lang/String;)Lorg/jooq/conf/Settings;
+#withExecuteListeners(Ljava/util/Collection;)Lorg/jooq/conf/Settings;
@2.1.0
+#getRenderNameStyle()Lorg/jooq/conf/RenderNameStyle;
+#setRenderNameStyle(Lorg/jooq/conf/RenderNameStyle;)V
+#getRenderKeywordStyle()Lorg/jooq/conf/RenderKeywordStyle;
+#setRenderKeywordStyle(Lorg/jooq/conf/RenderKeywordStyle;)V
+#isRenderFormatted()Ljava/lang/Boolean;
+#setRenderFormatted(Ljava/lang/Boolean;)V
+#withRenderNameStyle(Lorg/jooq/conf/RenderNameStyle;)Lorg/jooq/conf/Settings;
+#withRenderKeywordStyle(Lorg/jooq/conf/RenderKeywordStyle;)Lorg/jooq/conf/Settings;
+#withRenderFormatted(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@2.3.0
+#isRenderSchema()Ljava/lang/Boolean;
+#setRenderSchema(Ljava/lang/Boolean;)V
+#setExecuteListeners(Ljava/util/List;)V
+#withRenderSchema(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withExecuteListeners(Ljava/util/List;)Lorg/jooq/conf/Settings;
@2.5.0
+#isExecuteWithOptimisticLocking()Ljava/lang/Boolean;
+#setExecuteWithOptimisticLocking(Ljava/lang/Boolean;)V
+#isAttachRecords()Ljava/lang/Boolean;
+#setAttachRecords(Ljava/lang/Boolean;)V
+#withExecuteWithOptimisticLocking(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withAttachRecords(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@2.6.0
+#clone()Ljava/lang/Object;
@3.0.0-RC1
-#getExecuteListeners()Ljava/util/List;
-#setExecuteListeners(Ljava/util/List;)V
-#withExecuteListeners([Ljava/lang/String;)Lorg/jooq/conf/Settings;
-#withExecuteListeners(Ljava/util/Collection;)Lorg/jooq/conf/Settings;
-#withExecuteListeners(Ljava/util/List;)Lorg/jooq/conf/Settings;
@3.1.0
+#getParamType()Lorg/jooq/conf/ParamType;
+#setParamType(Lorg/jooq/conf/ParamType;)V
+#withParamType(Lorg/jooq/conf/ParamType;)Lorg/jooq/conf/Settings;
@3.2.0
+#isUpdatablePrimaryKeys()Ljava/lang/Boolean;
+#setUpdatablePrimaryKeys(Ljava/lang/Boolean;)V
+#withUpdatablePrimaryKeys(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.3.0
+#isReflectionCaching()Ljava/lang/Boolean;
+#setReflectionCaching(Ljava/lang/Boolean;)V
+#withReflectionCaching(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.5.0
+#isRenderScalarSubqueriesForStoredFunctions()Ljava/lang/Boolean;
+#setRenderScalarSubqueriesForStoredFunctions(Ljava/lang/Boolean;)V
+#getBackslashEscaping()Lorg/jooq/conf/BackslashEscaping;
+#setBackslashEscaping(Lorg/jooq/conf/BackslashEscaping;)V
+#isFetchWarnings()Ljava/lang/Boolean;
+#setFetchWarnings(Ljava/lang/Boolean;)V
+#withRenderScalarSubqueriesForStoredFunctions(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withBackslashEscaping(Lorg/jooq/conf/BackslashEscaping;)Lorg/jooq/conf/Settings;
+#withFetchWarnings(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.7.0
+#isMapJPAAnnotations()Ljava/lang/Boolean;
+#setMapJPAAnnotations(Ljava/lang/Boolean;)V
+#withMapJPAAnnotations(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.8.0
+#isRenderCatalog()Ljava/lang/Boolean;
+#setRenderCatalog(Ljava/lang/Boolean;)V
+#isReturnAllOnUpdatableRecord()Ljava/lang/Boolean;
+#setReturnAllOnUpdatableRecord(Ljava/lang/Boolean;)V
+#getQueryTimeout()Ljava/lang/Integer;
+#setQueryTimeout(Ljava/lang/Integer;)V
+#getMaxRows()Ljava/lang/Integer;
+#setMaxRows(Ljava/lang/Integer;)V
+#getFetchSize()Ljava/lang/Integer;
+#setFetchSize(Ljava/lang/Integer;)V
+#withRenderCatalog(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withReturnAllOnUpdatableRecord(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withQueryTimeout(Ljava/lang/Integer;)Lorg/jooq/conf/Settings;
+#withMaxRows(Ljava/lang/Integer;)Lorg/jooq/conf/Settings;
+#withFetchSize(Ljava/lang/Integer;)Lorg/jooq/conf/Settings;
@3.9.0
+#isExecuteWithOptimisticLockingExcludeUnversioned()Ljava/lang/Boolean;
+#setExecuteWithOptimisticLockingExcludeUnversioned(Ljava/lang/Boolean;)V
+#isDebugInfoOnStackTrace()Ljava/lang/Boolean;
+#setDebugInfoOnStackTrace(Ljava/lang/Boolean;)V
+#isInListPadding()Ljava/lang/Boolean;
+#setInListPadding(Ljava/lang/Boolean;)V
+#withExecuteWithOptimisticLockingExcludeUnversioned(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withDebugInfoOnStackTrace(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withInListPadding(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.10.0
+#getRenderFormatting()Lorg/jooq/conf/RenderFormatting;
+#setRenderFormatting(Lorg/jooq/conf/RenderFormatting;)V
+#getParamCastMode()Lorg/jooq/conf/ParamCastMode;
+#setParamCastMode(Lorg/jooq/conf/ParamCastMode;)V
+#getThrowExceptions()Lorg/jooq/conf/ThrowExceptions;
+#setThrowExceptions(Lorg/jooq/conf/ThrowExceptions;)V
+#isReturnRecordToPojo()Ljava/lang/Boolean;
+#setReturnRecordToPojo(Ljava/lang/Boolean;)V
+#getDelimiter()Ljava/lang/String;
+#setDelimiter(Ljava/lang/String;)V
+#withRenderFormatting(Lorg/jooq/conf/RenderFormatting;)Lorg/jooq/conf/Settings;
+#withParamCastMode(Lorg/jooq/conf/ParamCastMode;)Lorg/jooq/conf/Settings;
+#withThrowExceptions(Lorg/jooq/conf/ThrowExceptions;)Lorg/jooq/conf/Settings;
+#withReturnRecordToPojo(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withDelimiter(Ljava/lang/String;)Lorg/jooq/conf/Settings;
@3.10.8
+#isRenderOrderByRownumberForEmulatedPagination()Ljava/lang/Boolean;
+#setRenderOrderByRownumberForEmulatedPagination(Ljava/lang/Boolean;)V
+#withRenderOrderByRownumberForEmulatedPagination(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.11.0
+#isCacheRecordMappers()Ljava/lang/Boolean;
+#setCacheRecordMappers(Ljava/lang/Boolean;)V
+#getFetchServerOutputSize()Ljava/lang/Integer;
+#setFetchServerOutputSize(Ljava/lang/Integer;)V
+#isMapConstructorParameterNames()Ljava/lang/Boolean;
+#setMapConstructorParameterNames(Ljava/lang/Boolean;)V
+#getInListPadBase()Ljava/lang/Integer;
+#setInListPadBase(Ljava/lang/Integer;)V
+#isEmulateOnDuplicateKeyUpdateOnPrimaryKeyOnly()Ljava/lang/Boolean;
+#setEmulateOnDuplicateKeyUpdateOnPrimaryKeyOnly(Ljava/lang/Boolean;)V
+#getExecuteUpdateWithoutWhere()Lorg/jooq/conf/ExecuteWithoutWhere;
+#setExecuteUpdateWithoutWhere(Lorg/jooq/conf/ExecuteWithoutWhere;)V
+#getExecuteDeleteWithoutWhere()Lorg/jooq/conf/ExecuteWithoutWhere;
+#setExecuteDeleteWithoutWhere(Lorg/jooq/conf/ExecuteWithoutWhere;)V
+#getParseWithMetaLookups()Lorg/jooq/conf/ParseWithMetaLookups;
+#setParseWithMetaLookups(Lorg/jooq/conf/ParseWithMetaLookups;)V
+#getParseUnsupportedSyntax()Lorg/jooq/conf/ParseUnsupportedSyntax;
+#setParseUnsupportedSyntax(Lorg/jooq/conf/ParseUnsupportedSyntax;)V
+#getParseUnknownFunctions()Lorg/jooq/conf/ParseUnknownFunctions;
+#setParseUnknownFunctions(Lorg/jooq/conf/ParseUnknownFunctions;)V
+#withCacheRecordMappers(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withFetchServerOutputSize(Ljava/lang/Integer;)Lorg/jooq/conf/Settings;
+#withMapConstructorParameterNames(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withInListPadBase(Ljava/lang/Integer;)Lorg/jooq/conf/Settings;
+#withEmulateOnDuplicateKeyUpdateOnPrimaryKeyOnly(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withExecuteUpdateWithoutWhere(Lorg/jooq/conf/ExecuteWithoutWhere;)Lorg/jooq/conf/Settings;
+#withExecuteDeleteWithoutWhere(Lorg/jooq/conf/ExecuteWithoutWhere;)Lorg/jooq/conf/Settings;
+#withParseWithMetaLookups(Lorg/jooq/conf/ParseWithMetaLookups;)Lorg/jooq/conf/Settings;
+#withParseUnsupportedSyntax(Lorg/jooq/conf/ParseUnsupportedSyntax;)Lorg/jooq/conf/Settings;
+#withParseUnknownFunctions(Lorg/jooq/conf/ParseUnknownFunctions;)Lorg/jooq/conf/Settings;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#isRenderOrderByRownumberForEmulatedPagination()Ljava/lang/Boolean;
-#setRenderOrderByRownumberForEmulatedPagination(Ljava/lang/Boolean;)V
-#withRenderOrderByRownumberForEmulatedPagination(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.11.2
+#isRenderOrderByRownumberForEmulatedPagination()Ljava/lang/Boolean;
+#setRenderOrderByRownumberForEmulatedPagination(Ljava/lang/Boolean;)V
+#withRenderOrderByRownumberForEmulatedPagination(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.12.0
+#getRenderQuotedNames()Lorg/jooq/conf/RenderQuotedNames;
+#setRenderQuotedNames(Lorg/jooq/conf/RenderQuotedNames;)V
+#getRenderNameCase()Lorg/jooq/conf/RenderNameCase;
+#setRenderNameCase(Lorg/jooq/conf/RenderNameCase;)V
+#getRenderNamedParamPrefix()Ljava/lang/String;
+#setRenderNamedParamPrefix(Ljava/lang/String;)V
+#getRenderKeywordCase()Lorg/jooq/conf/RenderKeywordCase;
+#setRenderKeywordCase(Lorg/jooq/conf/RenderKeywordCase;)V
+#getRenderLocale()Ljava/util/Locale;
+#setRenderLocale(Ljava/util/Locale;)V
+#isRenderOutputForSQLServerReturningClause()Ljava/lang/Boolean;
+#setRenderOutputForSQLServerReturningClause(Ljava/lang/Boolean;)V
+#isFetchTriggerValuesAfterSQLServerOutput()Ljava/lang/Boolean;
+#setFetchTriggerValuesAfterSQLServerOutput(Ljava/lang/Boolean;)V
+#isTransformTableListsToAnsiJoin()Ljava/lang/Boolean;
+#setTransformTableListsToAnsiJoin(Ljava/lang/Boolean;)V
+#getInlineThreshold()Ljava/lang/Integer;
+#setInlineThreshold(Ljava/lang/Integer;)V
+#getTransactionListenerStartInvocationOrder()Lorg/jooq/conf/InvocationOrder;
+#setTransactionListenerStartInvocationOrder(Lorg/jooq/conf/InvocationOrder;)V
+#getTransactionListenerEndInvocationOrder()Lorg/jooq/conf/InvocationOrder;
+#setTransactionListenerEndInvocationOrder(Lorg/jooq/conf/InvocationOrder;)V
+#getVisitListenerStartInvocationOrder()Lorg/jooq/conf/InvocationOrder;
+#setVisitListenerStartInvocationOrder(Lorg/jooq/conf/InvocationOrder;)V
+#getVisitListenerEndInvocationOrder()Lorg/jooq/conf/InvocationOrder;
+#setVisitListenerEndInvocationOrder(Lorg/jooq/conf/InvocationOrder;)V
+#getRecordListenerStartInvocationOrder()Lorg/jooq/conf/InvocationOrder;
+#setRecordListenerStartInvocationOrder(Lorg/jooq/conf/InvocationOrder;)V
+#getRecordListenerEndInvocationOrder()Lorg/jooq/conf/InvocationOrder;
+#setRecordListenerEndInvocationOrder(Lorg/jooq/conf/InvocationOrder;)V
+#getExecuteListenerStartInvocationOrder()Lorg/jooq/conf/InvocationOrder;
+#setExecuteListenerStartInvocationOrder(Lorg/jooq/conf/InvocationOrder;)V
+#getExecuteListenerEndInvocationOrder()Lorg/jooq/conf/InvocationOrder;
+#setExecuteListenerEndInvocationOrder(Lorg/jooq/conf/InvocationOrder;)V
+#isUpdateRecordVersion()Ljava/lang/Boolean;
+#setUpdateRecordVersion(Ljava/lang/Boolean;)V
+#isUpdateRecordTimestamp()Ljava/lang/Boolean;
+#setUpdateRecordTimestamp(Ljava/lang/Boolean;)V
+#isReturnIdentityOnUpdatableRecord()Ljava/lang/Boolean;
+#setReturnIdentityOnUpdatableRecord(Ljava/lang/Boolean;)V
+#isMapConstructorParameterNamesInKotlin()Ljava/lang/Boolean;
+#setMapConstructorParameterNamesInKotlin(Ljava/lang/Boolean;)V
+#getQueryPoolable()Lorg/jooq/conf/QueryPoolable;
+#setQueryPoolable(Lorg/jooq/conf/QueryPoolable;)V
+#getParseDialect()Lorg/jooq/SQLDialect;
+#setParseDialect(Lorg/jooq/SQLDialect;)V
+#isParseIgnoreComments()Ljava/lang/Boolean;
+#setParseIgnoreComments(Ljava/lang/Boolean;)V
+#getParseIgnoreCommentStart()Ljava/lang/String;
+#setParseIgnoreCommentStart(Ljava/lang/String;)V
+#getParseIgnoreCommentStop()Ljava/lang/String;
+#setParseIgnoreCommentStop(Ljava/lang/String;)V
+#getParseSearchPath()Ljava/util/List;
+#setParseSearchPath(Ljava/util/List;)V
+#withRenderQuotedNames(Lorg/jooq/conf/RenderQuotedNames;)Lorg/jooq/conf/Settings;
+#withRenderNameCase(Lorg/jooq/conf/RenderNameCase;)Lorg/jooq/conf/Settings;
+#withRenderNamedParamPrefix(Ljava/lang/String;)Lorg/jooq/conf/Settings;
+#withRenderKeywordCase(Lorg/jooq/conf/RenderKeywordCase;)Lorg/jooq/conf/Settings;
+#withRenderLocale(Ljava/util/Locale;)Lorg/jooq/conf/Settings;
+#withRenderOutputForSQLServerReturningClause(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withFetchTriggerValuesAfterSQLServerOutput(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformTableListsToAnsiJoin(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withInlineThreshold(Ljava/lang/Integer;)Lorg/jooq/conf/Settings;
+#withTransactionListenerStartInvocationOrder(Lorg/jooq/conf/InvocationOrder;)Lorg/jooq/conf/Settings;
+#withTransactionListenerEndInvocationOrder(Lorg/jooq/conf/InvocationOrder;)Lorg/jooq/conf/Settings;
+#withVisitListenerStartInvocationOrder(Lorg/jooq/conf/InvocationOrder;)Lorg/jooq/conf/Settings;
+#withVisitListenerEndInvocationOrder(Lorg/jooq/conf/InvocationOrder;)Lorg/jooq/conf/Settings;
+#withRecordListenerStartInvocationOrder(Lorg/jooq/conf/InvocationOrder;)Lorg/jooq/conf/Settings;
+#withRecordListenerEndInvocationOrder(Lorg/jooq/conf/InvocationOrder;)Lorg/jooq/conf/Settings;
+#withExecuteListenerStartInvocationOrder(Lorg/jooq/conf/InvocationOrder;)Lorg/jooq/conf/Settings;
+#withExecuteListenerEndInvocationOrder(Lorg/jooq/conf/InvocationOrder;)Lorg/jooq/conf/Settings;
+#withUpdateRecordVersion(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withUpdateRecordTimestamp(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withReturnIdentityOnUpdatableRecord(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withMapConstructorParameterNamesInKotlin(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withQueryPoolable(Lorg/jooq/conf/QueryPoolable;)Lorg/jooq/conf/Settings;
+#withParseDialect(Lorg/jooq/SQLDialect;)Lorg/jooq/conf/Settings;
+#withParseIgnoreComments(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withParseIgnoreCommentStart(Ljava/lang/String;)Lorg/jooq/conf/Settings;
+#withParseIgnoreCommentStop(Ljava/lang/String;)Lorg/jooq/conf/Settings;
+#withParseSearchPath([Lorg/jooq/conf/ParseSearchSchema;)Lorg/jooq/conf/Settings;
+#withParseSearchPath(Ljava/util/Collection;)Lorg/jooq/conf/Settings;
+#withParseSearchPath(Ljava/util/List;)Lorg/jooq/conf/Settings;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
@3.12.4
+#isRenderParenthesisAroundSetOperationQueries()Ljava/lang/Boolean;
+#setRenderParenthesisAroundSetOperationQueries(Ljava/lang/Boolean;)V
+#withRenderParenthesisAroundSetOperationQueries(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.13.0
*#getRenderNameStyle()Lorg/jooq/conf/RenderNameStyle;[deprecated]
*#setRenderNameStyle(Lorg/jooq/conf/RenderNameStyle;)V[deprecated]
*#getRenderKeywordStyle()Lorg/jooq/conf/RenderKeywordStyle;[deprecated]
*#setRenderKeywordStyle(Lorg/jooq/conf/RenderKeywordStyle;)V[deprecated]
+#getRenderOptionalAsKeywordForTableAliases()Lorg/jooq/conf/RenderOptionalKeyword;
+#setRenderOptionalAsKeywordForTableAliases(Lorg/jooq/conf/RenderOptionalKeyword;)V
+#getRenderOptionalAsKeywordForFieldAliases()Lorg/jooq/conf/RenderOptionalKeyword;
+#setRenderOptionalAsKeywordForFieldAliases(Lorg/jooq/conf/RenderOptionalKeyword;)V
+#getRenderOptionalInnerKeyword()Lorg/jooq/conf/RenderOptionalKeyword;
+#setRenderOptionalInnerKeyword(Lorg/jooq/conf/RenderOptionalKeyword;)V
+#getRenderOptionalOuterKeyword()Lorg/jooq/conf/RenderOptionalKeyword;
+#setRenderOptionalOuterKeyword(Lorg/jooq/conf/RenderOptionalKeyword;)V
+#isTransformAnsiJoinToTableLists()Ljava/lang/Boolean;
+#setTransformAnsiJoinToTableLists(Ljava/lang/Boolean;)V
+#getMigrationListenerStartInvocationOrder()Lorg/jooq/conf/InvocationOrder;
+#setMigrationListenerStartInvocationOrder(Lorg/jooq/conf/InvocationOrder;)V
+#getMigrationListenerEndInvocationOrder()Lorg/jooq/conf/InvocationOrder;
+#setMigrationListenerEndInvocationOrder(Lorg/jooq/conf/InvocationOrder;)V
+#getInterpreterDialect()Lorg/jooq/SQLDialect;
+#setInterpreterDialect(Lorg/jooq/SQLDialect;)V
+#getInterpreterNameLookupCaseSensitivity()Lorg/jooq/conf/InterpreterNameLookupCaseSensitivity;
+#setInterpreterNameLookupCaseSensitivity(Lorg/jooq/conf/InterpreterNameLookupCaseSensitivity;)V
+#getInterpreterLocale()Ljava/util/Locale;
+#setInterpreterLocale(Ljava/util/Locale;)V
+#isInterpreterDelayForeignKeyDeclarations()Ljava/lang/Boolean;
+#setInterpreterDelayForeignKeyDeclarations(Ljava/lang/Boolean;)V
+#isMigrationAllowsUndo()Ljava/lang/Boolean;
+#setMigrationAllowsUndo(Ljava/lang/Boolean;)V
+#isMigrationRevertUntracked()Ljava/lang/Boolean;
+#setMigrationRevertUntracked(Ljava/lang/Boolean;)V
+#isMigrationAutoValidation()Ljava/lang/Boolean;
+#setMigrationAutoValidation(Ljava/lang/Boolean;)V
+#getLocale()Ljava/util/Locale;
+#setLocale(Ljava/util/Locale;)V
+#getParseLocale()Ljava/util/Locale;
+#setParseLocale(Ljava/util/Locale;)V
+#getParseNameCase()Lorg/jooq/conf/ParseNameCase;
+#setParseNameCase(Lorg/jooq/conf/ParseNameCase;)V
+#isParseSetCommands()Ljava/lang/Boolean;
+#setParseSetCommands(Ljava/lang/Boolean;)V
+#isApplyWorkaroundFor7962()Ljava/lang/Boolean;
+#setApplyWorkaroundFor7962(Ljava/lang/Boolean;)V
+#getInterpreterSearchPath()Ljava/util/List;
+#setInterpreterSearchPath(Ljava/util/List;)V
*#withRenderNameStyle(Lorg/jooq/conf/RenderNameStyle;)Lorg/jooq/conf/Settings;[deprecated]
*#withRenderKeywordStyle(Lorg/jooq/conf/RenderKeywordStyle;)Lorg/jooq/conf/Settings;[deprecated]
+#withRenderOptionalAsKeywordForTableAliases(Lorg/jooq/conf/RenderOptionalKeyword;)Lorg/jooq/conf/Settings;
+#withRenderOptionalAsKeywordForFieldAliases(Lorg/jooq/conf/RenderOptionalKeyword;)Lorg/jooq/conf/Settings;
+#withRenderOptionalInnerKeyword(Lorg/jooq/conf/RenderOptionalKeyword;)Lorg/jooq/conf/Settings;
+#withRenderOptionalOuterKeyword(Lorg/jooq/conf/RenderOptionalKeyword;)Lorg/jooq/conf/Settings;
+#withTransformAnsiJoinToTableLists(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withMigrationListenerStartInvocationOrder(Lorg/jooq/conf/InvocationOrder;)Lorg/jooq/conf/Settings;
+#withMigrationListenerEndInvocationOrder(Lorg/jooq/conf/InvocationOrder;)Lorg/jooq/conf/Settings;
+#withInterpreterDialect(Lorg/jooq/SQLDialect;)Lorg/jooq/conf/Settings;
+#withInterpreterNameLookupCaseSensitivity(Lorg/jooq/conf/InterpreterNameLookupCaseSensitivity;)Lorg/jooq/conf/Settings;
+#withInterpreterLocale(Ljava/util/Locale;)Lorg/jooq/conf/Settings;
+#withInterpreterDelayForeignKeyDeclarations(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withMigrationAllowsUndo(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withMigrationRevertUntracked(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withMigrationAutoValidation(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withLocale(Ljava/util/Locale;)Lorg/jooq/conf/Settings;
+#withParseLocale(Ljava/util/Locale;)Lorg/jooq/conf/Settings;
+#withParseNameCase(Lorg/jooq/conf/ParseNameCase;)Lorg/jooq/conf/Settings;
+#withParseSetCommands(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withApplyWorkaroundFor7962(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withInterpreterSearchPath([Lorg/jooq/conf/InterpreterSearchSchema;)Lorg/jooq/conf/Settings;
+#withInterpreterSearchPath(Ljava/util/Collection;)Lorg/jooq/conf/Settings;
+#withInterpreterSearchPath(Ljava/util/List;)Lorg/jooq/conf/Settings;
@3.14.0
+#getRenderImplicitJoinType()Lorg/jooq/conf/RenderImplicitJoinType;
+#setRenderImplicitJoinType(Lorg/jooq/conf/RenderImplicitJoinType;)V
+#isBindOffsetDateTimeType()Ljava/lang/Boolean;
+#setBindOffsetDateTimeType(Ljava/lang/Boolean;)V
+#isBindOffsetTimeType()Ljava/lang/Boolean;
+#setBindOffsetTimeType(Ljava/lang/Boolean;)V
+#isTransformRownum()Ljava/lang/Boolean;
+#setTransformRownum(Ljava/lang/Boolean;)V
+#getTransformUnneededArithmeticExpressions()Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
+#setTransformUnneededArithmeticExpressions(Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)V
+#isInsertUnchangedRecords()Ljava/lang/Boolean;
+#setInsertUnchangedRecords(Ljava/lang/Boolean;)V
+#getUpdateUnchangedRecords()Lorg/jooq/conf/UpdateUnchangedRecords;
+#setUpdateUnchangedRecords(Lorg/jooq/conf/UpdateUnchangedRecords;)V
+#isCachePreparedStatementInLoader()Ljava/lang/Boolean;
+#setCachePreparedStatementInLoader(Ljava/lang/Boolean;)V
+#getBatchSize()Ljava/lang/Integer;
+#setBatchSize(Ljava/lang/Integer;)V
+#withRenderImplicitJoinType(Lorg/jooq/conf/RenderImplicitJoinType;)Lorg/jooq/conf/Settings;
+#withBindOffsetDateTimeType(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withBindOffsetTimeType(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformRownum(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformUnneededArithmeticExpressions(Lorg/jooq/conf/TransformUnneededArithmeticExpressions;)Lorg/jooq/conf/Settings;
+#withInsertUnchangedRecords(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withUpdateUnchangedRecords(Lorg/jooq/conf/UpdateUnchangedRecords;)Lorg/jooq/conf/Settings;
+#withCachePreparedStatementInLoader(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withBatchSize(Ljava/lang/Integer;)Lorg/jooq/conf/Settings;
@3.14.9
+#isForceIntegerTypesOnZeroScaleDecimals()Ljava/lang/Boolean;
+#setForceIntegerTypesOnZeroScaleDecimals(Ljava/lang/Boolean;)V
+#withForceIntegerTypesOnZeroScaleDecimals(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.15.0
+#getRenderImplicitWindowRange()Lorg/jooq/conf/RenderImplicitWindowRange;
+#setRenderImplicitWindowRange(Lorg/jooq/conf/RenderImplicitWindowRange;)V
+#getRenderDefaultNullability()Lorg/jooq/conf/RenderDefaultNullability;
+#setRenderDefaultNullability(Lorg/jooq/conf/RenderDefaultNullability;)V
+#isRenderCoalesceToEmptyStringInConcat()Ljava/lang/Boolean;
+#setRenderCoalesceToEmptyStringInConcat(Ljava/lang/Boolean;)V
+#isRenderGroupConcatMaxLenSessionVariable()Ljava/lang/Boolean;
+#setRenderGroupConcatMaxLenSessionVariable(Ljava/lang/Boolean;)V
+#getNamePathSeparator()Ljava/lang/String;
+#setNamePathSeparator(Ljava/lang/String;)V
+#getFetchIntermediateResult()Lorg/jooq/conf/FetchIntermediateResult;
+#setFetchIntermediateResult(Lorg/jooq/conf/FetchIntermediateResult;)V
+#getTransformInConditionSubqueryWithLimitToDerivedTable()Lorg/jooq/conf/Transformation;
+#setTransformInConditionSubqueryWithLimitToDerivedTable(Lorg/jooq/conf/Transformation;)V
+#getTransformQualify()Lorg/jooq/conf/Transformation;
+#setTransformQualify(Lorg/jooq/conf/Transformation;)V
+#getTransformRownum()Lorg/jooq/conf/Transformation;
+#setTransformRownum(Lorg/jooq/conf/Transformation;)V
+#isCacheParsingConnection()Ljava/lang/Boolean;
+#setCacheParsingConnection(Ljava/lang/Boolean;)V
+#getCacheParsingConnectionLRUCacheSize()Ljava/lang/Integer;
+#setCacheParsingConnectionLRUCacheSize(Ljava/lang/Integer;)V
+#isMapRecordComponentParameterNames()Ljava/lang/Boolean;
+#setMapRecordComponentParameterNames(Ljava/lang/Boolean;)V
+#isMapConstructorPropertiesParameterNames()Ljava/lang/Boolean;
+#setMapConstructorPropertiesParameterNames(Ljava/lang/Boolean;)V
+#getEmulateMultiset()Lorg/jooq/conf/NestedCollectionEmulation;
+#setEmulateMultiset(Lorg/jooq/conf/NestedCollectionEmulation;)V
+#isMetaIncludeSystemIndexes()Ljava/lang/Boolean;
+#setMetaIncludeSystemIndexes(Ljava/lang/Boolean;)V
+#isMetaIncludeSystemSequences()Ljava/lang/Boolean;
+#setMetaIncludeSystemSequences(Ljava/lang/Boolean;)V
+#isMigrationAutoBaseline()Ljava/lang/Boolean;
+#setMigrationAutoBaseline(Ljava/lang/Boolean;)V
+#isMigrationIgnoreDefaultTimestampPrecisionDiffs()Ljava/lang/Boolean;
+#setMigrationIgnoreDefaultTimestampPrecisionDiffs(Ljava/lang/Boolean;)V
+#getParseDateFormat()Ljava/lang/String;
+#setParseDateFormat(Ljava/lang/String;)V
+#getParseTimestampFormat()Ljava/lang/String;
+#setParseTimestampFormat(Ljava/lang/String;)V
+#getParseNamedParamPrefix()Ljava/lang/String;
+#setParseNamedParamPrefix(Ljava/lang/String;)V
+#getParseAppendMissingTableReferences()Lorg/jooq/conf/Transformation;
+#setParseAppendMissingTableReferences(Lorg/jooq/conf/Transformation;)V
+#isParseMetaDefaultExpressions()Ljava/lang/Boolean;
+#setParseMetaDefaultExpressions(Ljava/lang/Boolean;)V
+#getMigrationSchemata()Ljava/util/List;
+#setMigrationSchemata(Ljava/util/List;)V
+#withRenderImplicitWindowRange(Lorg/jooq/conf/RenderImplicitWindowRange;)Lorg/jooq/conf/Settings;
+#withRenderDefaultNullability(Lorg/jooq/conf/RenderDefaultNullability;)Lorg/jooq/conf/Settings;
+#withRenderCoalesceToEmptyStringInConcat(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withRenderGroupConcatMaxLenSessionVariable(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withNamePathSeparator(Ljava/lang/String;)Lorg/jooq/conf/Settings;
+#withFetchIntermediateResult(Lorg/jooq/conf/FetchIntermediateResult;)Lorg/jooq/conf/Settings;
+#withTransformInConditionSubqueryWithLimitToDerivedTable(Lorg/jooq/conf/Transformation;)Lorg/jooq/conf/Settings;
+#withTransformQualify(Lorg/jooq/conf/Transformation;)Lorg/jooq/conf/Settings;
+#withTransformRownum(Lorg/jooq/conf/Transformation;)Lorg/jooq/conf/Settings;
+#withCacheParsingConnection(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withCacheParsingConnectionLRUCacheSize(Ljava/lang/Integer;)Lorg/jooq/conf/Settings;
+#withMapRecordComponentParameterNames(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withMapConstructorPropertiesParameterNames(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withEmulateMultiset(Lorg/jooq/conf/NestedCollectionEmulation;)Lorg/jooq/conf/Settings;
+#withMetaIncludeSystemIndexes(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withMetaIncludeSystemSequences(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withMigrationAutoBaseline(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withMigrationIgnoreDefaultTimestampPrecisionDiffs(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withParseDateFormat(Ljava/lang/String;)Lorg/jooq/conf/Settings;
+#withParseTimestampFormat(Ljava/lang/String;)Lorg/jooq/conf/Settings;
+#withParseNamedParamPrefix(Ljava/lang/String;)Lorg/jooq/conf/Settings;
+#withParseAppendMissingTableReferences(Lorg/jooq/conf/Transformation;)Lorg/jooq/conf/Settings;
+#withParseMetaDefaultExpressions(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withMigrationSchemata([Lorg/jooq/conf/MigrationSchema;)Lorg/jooq/conf/Settings;
+#withMigrationSchemata(Ljava/util/Collection;)Lorg/jooq/conf/Settings;
+#withMigrationSchemata(Ljava/util/List;)Lorg/jooq/conf/Settings;
-#isTransformRownum()Ljava/lang/Boolean;
-#setTransformRownum(Ljava/lang/Boolean;)V
-#withTransformRownum(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
@3.16.0
+#isParseRetainCommentsBetweenQueries()Ljava/lang/Boolean;
+#setParseRetainCommentsBetweenQueries(Ljava/lang/Boolean;)V
+#getReadonlyTableRecordInsert()Lorg/jooq/conf/WriteIfReadonly;
+#setReadonlyTableRecordInsert(Lorg/jooq/conf/WriteIfReadonly;)V
+#getReadonlyUpdatableRecordUpdate()Lorg/jooq/conf/WriteIfReadonly;
+#setReadonlyUpdatableRecordUpdate(Lorg/jooq/conf/WriteIfReadonly;)V
+#getReadonlyInsert()Lorg/jooq/conf/WriteIfReadonly;
+#setReadonlyInsert(Lorg/jooq/conf/WriteIfReadonly;)V
+#getReadonlyUpdate()Lorg/jooq/conf/WriteIfReadonly;
+#setReadonlyUpdate(Lorg/jooq/conf/WriteIfReadonly;)V
+#withParseRetainCommentsBetweenQueries(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withReadonlyTableRecordInsert(Lorg/jooq/conf/WriteIfReadonly;)Lorg/jooq/conf/Settings;
+#withReadonlyUpdatableRecordUpdate(Lorg/jooq/conf/WriteIfReadonly;)Lorg/jooq/conf/Settings;
+#withReadonlyInsert(Lorg/jooq/conf/WriteIfReadonly;)Lorg/jooq/conf/Settings;
+#withReadonlyUpdate(Lorg/jooq/conf/WriteIfReadonly;)Lorg/jooq/conf/Settings;
@3.17.0
+#getRenderOptionalAssociativityParentheses()Lorg/jooq/conf/RenderOptionalKeyword;
+#setRenderOptionalAssociativityParentheses(Lorg/jooq/conf/RenderOptionalKeyword;)V
+#isTransformPatterns()Ljava/lang/Boolean;
+#setTransformPatterns(Ljava/lang/Boolean;)V
+#isTransformPatternsLogging()Ljava/lang/Boolean;
+#setTransformPatternsLogging(Ljava/lang/Boolean;)V
+#isTransformPatternsTrim()Ljava/lang/Boolean;
+#setTransformPatternsTrim(Ljava/lang/Boolean;)V
+#isTransformPatternsNotNot()Ljava/lang/Boolean;
+#setTransformPatternsNotNot(Ljava/lang/Boolean;)V
+#isTransformPatternsNotComparison()Ljava/lang/Boolean;
+#setTransformPatternsNotComparison(Ljava/lang/Boolean;)V
+#isTransformPatternsNotNotDistinct()Ljava/lang/Boolean;
+#setTransformPatternsNotNotDistinct(Ljava/lang/Boolean;)V
+#isTransformPatternsNormaliseAssociativeOps()Ljava/lang/Boolean;
+#setTransformPatternsNormaliseAssociativeOps(Ljava/lang/Boolean;)V
+#isTransformPatternsNormaliseInListSingleElementToComparison()Ljava/lang/Boolean;
+#setTransformPatternsNormaliseInListSingleElementToComparison(Ljava/lang/Boolean;)V
+#isTransformPatternsNormaliseFieldCompareValue()Ljava/lang/Boolean;
+#setTransformPatternsNormaliseFieldCompareValue(Ljava/lang/Boolean;)V
+#isTransformPatternsOrEqToIn()Ljava/lang/Boolean;
+#setTransformPatternsOrEqToIn(Ljava/lang/Boolean;)V
+#isTransformPatternsAndNeToNotIn()Ljava/lang/Boolean;
+#setTransformPatternsAndNeToNotIn(Ljava/lang/Boolean;)V
+#isTransformPatternsMergeOrComparison()Ljava/lang/Boolean;
+#setTransformPatternsMergeOrComparison(Ljava/lang/Boolean;)V
+#isTransformPatternsMergeAndComparison()Ljava/lang/Boolean;
+#setTransformPatternsMergeAndComparison(Ljava/lang/Boolean;)V
+#isTransformPatternsMergeInLists()Ljava/lang/Boolean;
+#setTransformPatternsMergeInLists(Ljava/lang/Boolean;)V
+#isTransformPatternsMergeRangePredicates()Ljava/lang/Boolean;
+#setTransformPatternsMergeRangePredicates(Ljava/lang/Boolean;)V
+#isTransformPatternsMergeBetweenSymmetricPredicates()Ljava/lang/Boolean;
+#setTransformPatternsMergeBetweenSymmetricPredicates(Ljava/lang/Boolean;)V
+#isTransformPatternsTrivialCaseAbbreviation()Ljava/lang/Boolean;
+#setTransformPatternsTrivialCaseAbbreviation(Ljava/lang/Boolean;)V
+#isTransformPatternsTrivialPredicates()Ljava/lang/Boolean;
+#setTransformPatternsTrivialPredicates(Ljava/lang/Boolean;)V
+#isTransformPatternsScalarSubqueryCountAsteriskGtZero()Ljava/lang/Boolean;
+#setTransformPatternsScalarSubqueryCountAsteriskGtZero(Ljava/lang/Boolean;)V
+#isTransformPatternsScalarSubqueryCountExpressionGtZero()Ljava/lang/Boolean;
+#setTransformPatternsScalarSubqueryCountExpressionGtZero(Ljava/lang/Boolean;)V
+#isTransformPatternsEmptyScalarSubquery()Ljava/lang/Boolean;
+#setTransformPatternsEmptyScalarSubquery(Ljava/lang/Boolean;)V
+#isTransformPatternsNegNeg()Ljava/lang/Boolean;
+#setTransformPatternsNegNeg(Ljava/lang/Boolean;)V
+#isTransformPatternsBitNotBitNot()Ljava/lang/Boolean;
+#setTransformPatternsBitNotBitNot(Ljava/lang/Boolean;)V
+#isTransformPatternsBitNotBitNand()Ljava/lang/Boolean;
+#setTransformPatternsBitNotBitNand(Ljava/lang/Boolean;)V
+#isTransformPatternsBitNotBitNor()Ljava/lang/Boolean;
+#setTransformPatternsBitNotBitNor(Ljava/lang/Boolean;)V
+#isTransformPatternsBitNotBitXNor()Ljava/lang/Boolean;
+#setTransformPatternsBitNotBitXNor(Ljava/lang/Boolean;)V
+#isTransformPatternsIdempotentFunctionRepetition()Ljava/lang/Boolean;
+#setTransformPatternsIdempotentFunctionRepetition(Ljava/lang/Boolean;)V
+#isTransformPatternsArithmeticExpressions()Ljava/lang/Boolean;
+#setTransformPatternsArithmeticExpressions(Ljava/lang/Boolean;)V
+#isTransformPatternsTrigonometricFunctions()Ljava/lang/Boolean;
+#setTransformPatternsTrigonometricFunctions(Ljava/lang/Boolean;)V
+#isTransformPatternsLogarithmicFunctions()Ljava/lang/Boolean;
+#setTransformPatternsLogarithmicFunctions(Ljava/lang/Boolean;)V
+#isTransformPatternsHyperbolicFunctions()Ljava/lang/Boolean;
+#setTransformPatternsHyperbolicFunctions(Ljava/lang/Boolean;)V
+#isTransformPatternsInverseHyperbolicFunctions()Ljava/lang/Boolean;
+#setTransformPatternsInverseHyperbolicFunctions(Ljava/lang/Boolean;)V
+#isTransformInlineBindValuesForFieldComparisons()Ljava/lang/Boolean;
+#setTransformInlineBindValuesForFieldComparisons(Ljava/lang/Boolean;)V
+#isParseIgnoreCommercialOnlyFeatures()Ljava/lang/Boolean;
+#setParseIgnoreCommercialOnlyFeatures(Ljava/lang/Boolean;)V
+#withRenderOptionalAssociativityParentheses(Lorg/jooq/conf/RenderOptionalKeyword;)Lorg/jooq/conf/Settings;
+#withTransformPatterns(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsLogging(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsTrim(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsNotNot(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsNotComparison(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsNotNotDistinct(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsNormaliseAssociativeOps(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsNormaliseInListSingleElementToComparison(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsNormaliseFieldCompareValue(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsOrEqToIn(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsAndNeToNotIn(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsMergeOrComparison(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsMergeAndComparison(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsMergeInLists(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsMergeRangePredicates(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsMergeBetweenSymmetricPredicates(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsTrivialCaseAbbreviation(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsTrivialPredicates(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsScalarSubqueryCountAsteriskGtZero(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsScalarSubqueryCountExpressionGtZero(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsEmptyScalarSubquery(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsNegNeg(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsBitNotBitNot(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsBitNotBitNand(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsBitNotBitNor(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsBitNotBitXNor(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsIdempotentFunctionRepetition(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsArithmeticExpressions(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsTrigonometricFunctions(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsLogarithmicFunctions(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsHyperbolicFunctions(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformPatternsInverseHyperbolicFunctions(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withTransformInlineBindValuesForFieldComparisons(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;
+#withParseIgnoreCommercialOnlyFeatures(Ljava/lang/Boolean;)Lorg/jooq/conf/Settings;

+###org/jooq/conf/SettingsTools
@2.0.5
+#<init>()V
+#getStatementType(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/StatementType;
+#executePreparedStatements(Lorg/jooq/conf/Settings;)Z
+#executeStaticStatements(Lorg/jooq/conf/Settings;)Z
+#getRenderMapping(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/RenderMapping;
@2.1.0
+#defaultSettings()Lorg/jooq/conf/Settings;
@2.3.0
+#clone(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/Settings;
@3.1.0
+#getParamType(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/ParamType;
@3.2.0
+#updatablePrimaryKeys(Lorg/jooq/conf/Settings;)Z
@3.3.0
+#reflectionCaching(Lorg/jooq/conf/Settings;)Z
@3.5.0
+#getBackslashEscaping(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/BackslashEscaping;
@3.8.0
+#getQueryTimeout(ILorg/jooq/conf/Settings;)I
+#getMaxRows(ILorg/jooq/conf/Settings;)I
+#getFetchSize(ILorg/jooq/conf/Settings;)I
@3.11.0
+#getExecuteUpdateWithoutWhere(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/ExecuteWithoutWhere;
+#getExecuteDeleteWithoutWhere(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/ExecuteWithoutWhere;
+#getFetchServerOutputSize(ILorg/jooq/conf/Settings;)I
@3.12.0
+#renderLocale(Lorg/jooq/conf/Settings;)Ljava/util/Locale;
+#getRenderKeywordCase(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/RenderKeywordCase;
+#getRenderNameCase(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/RenderNameCase;
+#getRenderQuotedNames(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/RenderQuotedNames;
+#getQueryPoolable(Lorg/jooq/conf/QueryPoolable;Lorg/jooq/conf/Settings;)Lorg/jooq/conf/QueryPoolable;
@3.13.0
+#locale(Lorg/jooq/conf/Settings;)Ljava/util/Locale;
+#parseLocale(Lorg/jooq/conf/Settings;)Ljava/util/Locale;
+#interpreterLocale(Lorg/jooq/conf/Settings;)Ljava/util/Locale;
@3.14.0
+#getTransformUnneededArithmeticExpressions(Lorg/jooq/conf/Settings;)Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
+#getBatchSize(Lorg/jooq/conf/Settings;)I
@3.15.0
+#recordMapperCaching(Lorg/jooq/conf/Settings;)Z
+#parsingConnectionCaching(Lorg/jooq/conf/Settings;)Z
+#fetchIntermediateResult(Lorg/jooq/Configuration;)Z

+###org/jooq/conf/StatementType
@2.0.5
+#values()[Lorg/jooq/conf/StatementType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/StatementType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/StatementType;

+###org/jooq/Configuration
@1.5.7
+#getDialect()Lorg/jooq/SQLDialect;
+#getConnection()Ljava/sql/Connection;
+#getSchemaMapping()Lorg/jooq/SchemaMapping;
@2.0.5
*#getSchemaMapping()Lorg/jooq/SchemaMapping;[deprecated]
+#getSettings()Lorg/jooq/conf/Settings;
+#getData()Ljava/util/Map;
+#getData(Ljava/lang/String;)Ljava/lang/Object;
+#setData(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
@2.1.0
+#setConnection(Ljava/sql/Connection;)V
@2.4.0
+#getDataSource()Ljavax/sql/DataSource;
+#setDataSource(Ljavax/sql/DataSource;)V
@3.0.0-RC1
+#getConnectionProvider()Lorg/jooq/ConnectionProvider;
+#getExecuteListeners()Ljava/util/List;
+#setExecuteListeners(Ljava/util/List;)V
-#getDataSource()Ljavax/sql/DataSource;
-#setDataSource(Ljavax/sql/DataSource;)V
-#getConnection()Ljava/sql/Connection;
-#setConnection(Ljava/sql/Connection;)V
@3.0.0-RC3
+#dialect()Lorg/jooq/SQLDialect;
+#connectionProvider()Lorg/jooq/ConnectionProvider;
+#schemaMapping()Lorg/jooq/SchemaMapping;[deprecated]
+#settings()Lorg/jooq/conf/Settings;
+#data()Ljava/util/Map;
+#data(Ljava/lang/Object;)Ljava/lang/Object;
+#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#executeListenerProviders()[Lorg/jooq/ExecuteListenerProvider;
+#derive()Lorg/jooq/Configuration;
+#derive(Lorg/jooq/SQLDialect;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/ConnectionProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/conf/Settings;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/ExecuteListenerProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/SQLDialect;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/ConnectionProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/conf/Settings;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/ExecuteListenerProvider;)Lorg/jooq/Configuration;
-#getDialect()Lorg/jooq/SQLDialect;
-#getConnectionProvider()Lorg/jooq/ConnectionProvider;
-#getSchemaMapping()Lorg/jooq/SchemaMapping;[deprecated]
-#getSettings()Lorg/jooq/conf/Settings;
-#getData()Ljava/util/Map;
-#getData(Ljava/lang/String;)Ljava/lang/Object;
-#setData(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
-#getExecuteListeners()Ljava/util/List;
-#setExecuteListeners(Ljava/util/List;)V
@3.1.0
+#recordMapperProvider()Lorg/jooq/RecordMapperProvider;
+#set(Lorg/jooq/RecordMapperProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/RecordMapperProvider;)Lorg/jooq/Configuration;
@3.2.0-alpha-01
+#recordListenerProviders()[Lorg/jooq/RecordListenerProvider;
+#visitListenerProviders()[Lorg/jooq/VisitListenerProvider;
+#set([Lorg/jooq/RecordListenerProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/VisitListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/RecordListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/VisitListenerProvider;)Lorg/jooq/Configuration;
@3.4.0
+#transactionProvider()Lorg/jooq/TransactionProvider;
+#set(Lorg/jooq/TransactionProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/TransactionProvider;)Lorg/jooq/Configuration;
@3.5.0
+#family()Lorg/jooq/SQLDialect;
@3.6.0
+#converterProvider()Lorg/jooq/ConverterProvider;[deprecated]
+#set(Ljava/sql/Connection;)Lorg/jooq/Configuration;
+#set(Ljavax/sql/DataSource;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/ConverterProvider;)Lorg/jooq/Configuration;[deprecated]
+#derive(Ljava/sql/Connection;)Lorg/jooq/Configuration;
+#derive(Ljavax/sql/DataSource;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/ConverterProvider;)Lorg/jooq/Configuration;[deprecated]
@3.8.0
+#executorProvider()Lorg/jooq/ExecutorProvider;
+#set(Lorg/jooq/ExecutorProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/ExecutorProvider;)Lorg/jooq/Configuration;
@3.9.0
+#transactionListenerProviders()[Lorg/jooq/TransactionListenerProvider;
+#set(Ljava/util/concurrent/Executor;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordMapper;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/TransactionListenerProvider;)Lorg/jooq/Configuration;
+#derive(Ljava/util/concurrent/Executor;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/RecordMapper;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/TransactionListenerProvider;)Lorg/jooq/Configuration;
@3.10.0
+#dsl()Lorg/jooq/DSLContext;
+#clock()Ljava/time/Clock;
+#recordUnmapperProvider()Lorg/jooq/RecordUnmapperProvider;
+#set(Ljava/time/Clock;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordUnmapper;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordUnmapperProvider;)Lorg/jooq/Configuration;
+#derive(Ljava/time/Clock;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/RecordUnmapper;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/RecordUnmapperProvider;)Lorg/jooq/Configuration;
@3.11.0
+#metaProvider()Lorg/jooq/MetaProvider;
+#diagnosticsListenerProviders()[Lorg/jooq/DiagnosticsListenerProvider;
+#set(Lorg/jooq/MetaProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/DiagnosticsListenerProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/MetaProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/DiagnosticsListenerProvider;)Lorg/jooq/Configuration;
@3.12.0
+#unwrapperProvider()Lorg/jooq/UnwrapperProvider;
+#set(Lorg/jooq/Unwrapper;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/UnwrapperProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/Unwrapper;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/UnwrapperProvider;)Lorg/jooq/Configuration;
@3.13.0
+#interpreterConnectionProvider()Lorg/jooq/ConnectionProvider;
+#systemConnectionProvider()Lorg/jooq/ConnectionProvider;
+#versionProvider()Lorg/jooq/VersionProvider;
+#migrationListenerProviders()[Lorg/jooq/MigrationListenerProvider;
+#set(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/MigrationListenerProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/MigrationListenerProvider;)Lorg/jooq/Configuration;
@3.14.0
+#charsetProvider()Lorg/jooq/CharsetProvider;
+#set(Lorg/jooq/CharsetProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/CharsetProvider;)Lorg/jooq/Configuration;
@3.15.0
+#connectionFactory()Lio/r2dbc/spi/ConnectionFactory;
+#commitProvider()Lorg/jooq/CommitProvider;
+#cacheProvider()Lorg/jooq/CacheProvider;
+#set(Lorg/jooq/CommitProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/CacheProvider;)Lorg/jooq/Configuration;
+#set(Lio/r2dbc/spi/ConnectionFactory;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/RecordListenerProvider;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/ExecuteListenerProvider;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/MigrationListenerProvider;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/VisitListenerProvider;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/TransactionListenerProvider;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/DiagnosticsListenerProvider;)Lorg/jooq/Configuration;
+#derive(Lio/r2dbc/spi/ConnectionFactory;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/CommitProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/CacheProvider;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/RecordListenerProvider;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/ExecuteListenerProvider;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/MigrationListenerProvider;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/VisitListenerProvider;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/TransactionListenerProvider;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/DiagnosticsListenerProvider;)Lorg/jooq/Configuration;
+#deriveSettings(Ljava/util/function/Function;)Lorg/jooq/Configuration;
+#commercial()Z
+#commercial(Ljava/util/function/Supplier;)Z
+#requireCommercial(Ljava/util/function/Supplier;)Z
-#versionProvider()Lorg/jooq/VersionProvider;
-#set(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
-#derive(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
@3.16.0
+#formattingProvider()Lorg/jooq/FormattingProvider;
+#set(Lorg/jooq/FormattingProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/FormattingProvider;)Lorg/jooq/Configuration;

+###org/jooq/ConnectionProvider
@3.0.0-RC1
+#acquire()Ljava/sql/Connection;
+#release(Ljava/sql/Connection;)V

+###org/jooq/Constants
@2.0.2

+###org/jooq/Context
@1.6.4
+#declareFields()Z
+#declareFields(Z)Lorg/jooq/Context;
+#declareTables()Z
+#declareTables(Z)Lorg/jooq/Context;
+#subquery()Z
+#subquery(Z)Lorg/jooq/Context;
@2.0.1
+#nextIndex()I
+#peekIndex()I
@3.0.0-RC3
+#configuration()Lorg/jooq/Configuration;
+#data()Ljava/util/Map;
+#data(Ljava/lang/Object;)Ljava/lang/Object;
+#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.2.0-alpha-01
+#visit(Lorg/jooq/QueryPart;)Lorg/jooq/Context;
+#start(Lorg/jooq/Clause;)Lorg/jooq/Context;
+#end(Lorg/jooq/Clause;)Lorg/jooq/Context;
@3.3.0
+#declareWindows()Z
+#declareWindows(Z)Lorg/jooq/Context;
@3.4.0
+#declareCTE()Z
+#declareCTE(Z)Lorg/jooq/Context;
+#statement()Ljava/sql/PreparedStatement;
+#bindValue(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/BindContext;
+#peekAlias()Ljava/lang/String;
+#nextAlias()Ljava/lang/String;
+#render()Ljava/lang/String;
+#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#keyword(Ljava/lang/String;)Lorg/jooq/Context;
+#sql(Ljava/lang/String;)Lorg/jooq/Context;
+#sql(Ljava/lang/String;Z)Lorg/jooq/Context;
+#sql(C)Lorg/jooq/Context;
+#sql(I)Lorg/jooq/Context;
+#format(Z)Lorg/jooq/Context;
+#format()Z
+#formatNewLine()Lorg/jooq/Context;
+#formatNewLineAfterPrintMargin()Lorg/jooq/Context;
+#formatSeparator()Lorg/jooq/Context;
+#formatIndentStart()Lorg/jooq/Context;
+#formatIndentStart(I)Lorg/jooq/Context;
+#formatIndentLockStart()Lorg/jooq/Context;
+#formatIndentEnd()Lorg/jooq/Context;
+#formatIndentEnd(I)Lorg/jooq/Context;
+#formatIndentLockEnd()Lorg/jooq/Context;
+#formatPrintMargin(I)Lorg/jooq/Context;
+#literal(Ljava/lang/String;)Lorg/jooq/Context;
+#qualify()Z
+#qualify(Z)Lorg/jooq/Context;
+#paramType()Lorg/jooq/conf/ParamType;
+#paramType(Lorg/jooq/conf/ParamType;)Lorg/jooq/Context;
+#castMode()Lorg/jooq/RenderContext$CastMode;
+#castMode(Lorg/jooq/RenderContext$CastMode;)Lorg/jooq/Context;
+#cast()Ljava/lang/Boolean;
+#castModeSome([Lorg/jooq/SQLDialect;)Lorg/jooq/Context;
@3.5.0
*#cast()Ljava/lang/Boolean;[deprecated]
*#castModeSome([Lorg/jooq/SQLDialect;)Lorg/jooq/Context;[deprecated]
-#configuration()Lorg/jooq/Configuration;
-#data()Ljava/util/Map;
-#data(Ljava/lang/Object;)Ljava/lang/Object;
-#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.8.0
+#declareAliases()Z
+#declareAliases(Z)Lorg/jooq/Context;
+#stringLiteral()Z
+#stringLiteral(Z)Lorg/jooq/Context;
+#qualifySchema()Z
+#qualifySchema(Z)Lorg/jooq/Context;
+#qualifyCatalog()Z
+#qualifyCatalog(Z)Lorg/jooq/Context;
@3.10.0
*#keyword(Ljava/lang/String;)Lorg/jooq/Context;[deprecated]
*#literal(Ljava/lang/String;)Lorg/jooq/Context;[deprecated]
+#quote()Z
+#quote(Z)Lorg/jooq/Context;
@3.11.0
+#scopeStart()Lorg/jooq/Context;
+#scopeMarkStart(Lorg/jooq/QueryPart;)Lorg/jooq/Context;
+#scopeRegister(Lorg/jooq/QueryPart;)Lorg/jooq/Context;
+#scopeMarkEnd(Lorg/jooq/QueryPart;)Lorg/jooq/Context;
+#scopeEnd()Lorg/jooq/Context;
@3.12.0
+#subqueryLevel()I
+#sql(J)Lorg/jooq/Context;
+#sql(F)Lorg/jooq/Context;
+#sql(D)Lorg/jooq/Context;
@3.14.0
+#separatorRequired(Z)Lorg/jooq/Context;
+#separatorRequired()Z
*#formatIndentLockStart()Lorg/jooq/Context;[deprecated]
*#formatIndentLockEnd()Lorg/jooq/Context;[deprecated]
+#paramTypeIf(Lorg/jooq/conf/ParamType;Z)Lorg/jooq/Context;
+#castModeIf(Lorg/jooq/RenderContext$CastMode;Z)Lorg/jooq/Context;
@3.14.4
+#scopeRegister(Lorg/jooq/QueryPart;Z)Lorg/jooq/Context;
@3.15.0
+#data(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/jooq/Context;
+#declareFields(ZLjava/util/function/Consumer;)Lorg/jooq/Context;
+#declareTables(ZLjava/util/function/Consumer;)Lorg/jooq/Context;
+#declareAliases(ZLjava/util/function/Consumer;)Lorg/jooq/Context;
+#declareWindows(ZLjava/util/function/Consumer;)Lorg/jooq/Context;
+#declareCTE(ZLjava/util/function/Consumer;)Lorg/jooq/Context;
+#scopeLevel()I
+#scopeRegisterAndMark(Lorg/jooq/QueryPart;Z)Lorg/jooq/Context;
+#scopeRegister(Lorg/jooq/QueryPart;ZLorg/jooq/QueryPart;)Lorg/jooq/Context;
+#scopeMapping(Lorg/jooq/QueryPart;)Lorg/jooq/QueryPart;
+#skipUpdateCount()Lorg/jooq/Context;
+#skipUpdateCounts(I)Lorg/jooq/Context;
+#skipUpdateCounts()I
+#sqlIndentStart(Ljava/lang/String;)Lorg/jooq/Context;
+#sqlIndentEnd(Ljava/lang/String;)Lorg/jooq/Context;
+#sqlIndentStart()Lorg/jooq/Context;
+#sqlIndentEnd()Lorg/jooq/Context;
+#sqlIndentStart(C)Lorg/jooq/Context;
+#sqlIndentEnd(C)Lorg/jooq/Context;
+#floatFormat()Ljava/text/DecimalFormat;
+#doubleFormat()Ljava/text/DecimalFormat;
+#quote(ZLjava/util/function/Consumer;)Lorg/jooq/Context;
+#qualify(ZLjava/util/function/Consumer;)Lorg/jooq/Context;
+#qualifySchema(ZLjava/util/function/Consumer;)Lorg/jooq/Context;
+#qualifyCatalog(ZLjava/util/function/Consumer;)Lorg/jooq/Context;
+#visit(Lorg/jooq/QueryPart;Lorg/jooq/conf/ParamType;)Lorg/jooq/Context;
+#paramType(Lorg/jooq/conf/ParamType;Ljava/util/function/Consumer;)Lorg/jooq/Context;
+#paramTypeIf(Lorg/jooq/conf/ParamType;ZLjava/util/function/Consumer;)Lorg/jooq/Context;
+#languageContext()Lorg/jooq/LanguageContext;
+#languageContext(Lorg/jooq/LanguageContext;)Lorg/jooq/Context;
+#languageContext(Lorg/jooq/LanguageContext;Ljava/util/function/Consumer;)Lorg/jooq/Context;
+#languageContextIf(Lorg/jooq/LanguageContext;Z)Lorg/jooq/Context;
+#castMode(Lorg/jooq/RenderContext$CastMode;Ljava/util/function/Consumer;)Lorg/jooq/Context;
-#cast()Ljava/lang/Boolean;[deprecated]
-#castModeSome([Lorg/jooq/SQLDialect;)Lorg/jooq/Context;[deprecated]
@3.16.0
+#visitSubquery(Lorg/jooq/QueryPart;)Lorg/jooq/Context;
@3.17.0
+#visit(Lorg/jooq/Condition;)Lorg/jooq/Context;
+#visit(Lorg/jooq/Field;)Lorg/jooq/Context;
+#topLevel()Lorg/jooq/QueryPart;
+#topLevel(Lorg/jooq/QueryPart;)Lorg/jooq/Context;
+#topLevelForLanguageContext()Lorg/jooq/QueryPart;
+#topLevelForLanguageContext(Lorg/jooq/QueryPart;)Lorg/jooq/Context;
+#derivedTableSubquery()Z
+#derivedTableSubquery(Z)Lorg/jooq/Context;
+#setOperationSubquery()Z
+#setOperationSubquery(Z)Lorg/jooq/Context;
+#predicandSubquery()Z
+#predicandSubquery(Z)Lorg/jooq/Context;
+#languageContext(Lorg/jooq/LanguageContext;Lorg/jooq/QueryPart;Ljava/util/function/Consumer;)Lorg/jooq/Context;

+###org/jooq/Converter
@2.1.0
+#from(Ljava/lang/Object;)Ljava/lang/Object;
+#to(Ljava/lang/Object;)Ljava/lang/Object;
+#fromType()Ljava/lang/Class;
+#toType()Ljava/lang/Class;
@3.9.0
+#inverse()Lorg/jooq/Converter;
+#andThen(Lorg/jooq/Converter;)Lorg/jooq/Converter;
+#of(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Function;)Lorg/jooq/Converter;
+#ofNullable(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Function;)Lorg/jooq/Converter;
@3.14.0
+#forArrays()Lorg/jooq/Converter;
@3.15.0
+#from(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/Converter;
+#to(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/Converter;
+#fromNullable(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/Converter;
+#toNullable(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/Converter;

+###org/jooq/Cursor
@1.5.7
+#hasNext()Z
+#fetch()Lorg/jooq/Record;
+#close()V
@1.6.2
*#fetch()Lorg/jooq/Record;[deprecated]
+#fetch(I)Lorg/jooq/Result;
+#fetchOne()Lorg/jooq/Record;
+#fetchResult()Lorg/jooq/Result;
+#fetchResult(I)Lorg/jooq/Result;
+#isClosed()Z
@1.6.4
+#fetchInto(Lorg/jooq/RecordHandler;)Lorg/jooq/RecordHandler;
@1.6.8
+#fetch()Lorg/jooq/Result;
*#fetchResult()Lorg/jooq/Result;[deprecated]
*#fetchResult(I)Lorg/jooq/Result;[deprecated]
-#fetch()Lorg/jooq/Record;[deprecated]
@1.6.9
+#fetchInto(Ljava/lang/Class;)Ljava/util/List;
@2.0.0-RC1
+#fetchOneInto(Lorg/jooq/RecordHandler;)Lorg/jooq/RecordHandler;
+#fetchOneInto(Ljava/lang/Class;)Ljava/lang/Object;
+#fetchOneInto(Lorg/jooq/Table;)Lorg/jooq/TableRecord;
+#fetchInto(Lorg/jooq/Table;)Ljava/util/List;
-#fetchResult()Lorg/jooq/Result;[deprecated]
-#fetchResult(I)Lorg/jooq/Result;[deprecated]
@2.0.1
+#fetchOneInto(Lorg/jooq/Table;)Lorg/jooq/Record;
-#fetchOneInto(Lorg/jooq/Table;)Lorg/jooq/TableRecord;
@2.0.5
+#resultSet()Ljava/sql/ResultSet;
@2.5.0
+#fetchInto(Lorg/jooq/Table;)Lorg/jooq/Result;
-#fetchInto(Lorg/jooq/Table;)Ljava/util/List;
@2.6.0
+#fetchOne(Lorg/jooq/RecordMapper;)Ljava/lang/Object;
+#fetch(Lorg/jooq/RecordMapper;)Ljava/util/List;
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row;
+#field(Lorg/jooq/Field;)Lorg/jooq/Field;
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(I)Lorg/jooq/Field;
+#fields()[Lorg/jooq/Field;
@3.1.0
+#recordType()Lorg/jooq/RecordType;
@3.7.0
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
+#fields([Ljava/lang/String;)[Lorg/jooq/Field;
+#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
+#fields([I)[Lorg/jooq/Field;
+#fetchOptional()Ljava/util/Optional;
+#fetchOptionalInto(Ljava/lang/Class;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/RecordMapper;)Ljava/util/Optional;
+#fetchOptionalInto(Lorg/jooq/Table;)Ljava/util/Optional;
+#stream()Ljava/util/stream/Stream;
@3.10.0
*#fetch(I)Lorg/jooq/Result;[deprecated]
+#fetchNext(I)Lorg/jooq/Result;
*#fetchOne()Lorg/jooq/Record;[deprecated]
*#fetchOneInto(Lorg/jooq/RecordHandler;)Lorg/jooq/RecordHandler;[deprecated]
*#fetchOne(Lorg/jooq/RecordMapper;)Ljava/lang/Object;[deprecated]
*#fetchOneInto(Lorg/jooq/Table;)Lorg/jooq/Record;[deprecated]
+#fetchNext()Lorg/jooq/Record;
+#fetchNextInto(Lorg/jooq/RecordHandler;)Lorg/jooq/RecordHandler;
*#fetchOneInto(Ljava/lang/Class;)Ljava/lang/Object;[deprecated]
+#fetchNextInto(Ljava/lang/Class;)Ljava/lang/Object;
+#fetchNext(Lorg/jooq/RecordMapper;)Ljava/lang/Object;
+#fetchNextInto(Lorg/jooq/Table;)Lorg/jooq/Record;
*#fetchOptional()Ljava/util/Optional;[deprecated]
*#fetchOptionalInto(Ljava/lang/Class;)Ljava/util/Optional;[deprecated]
*#fetchOptional(Lorg/jooq/RecordMapper;)Ljava/util/Optional;[deprecated]
*#fetchOptionalInto(Lorg/jooq/Table;)Ljava/util/Optional;[deprecated]
+#fetchNextOptional()Ljava/util/Optional;
+#fetchNextOptionalInto(Ljava/lang/Class;)Ljava/util/Optional;
+#fetchNextOptional(Lorg/jooq/RecordMapper;)Ljava/util/Optional;
+#fetchNextOptionalInto(Lorg/jooq/Table;)Ljava/util/Optional;
@3.11.0
+#collect(Ljava/util/stream/Collector;)Ljava/lang/Object;
@3.12.0
+#indexOf(Lorg/jooq/Field;)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Lorg/jooq/Name;)I
@3.15.0
*#fetchInto(Lorg/jooq/RecordHandler;)Lorg/jooq/RecordHandler;[deprecated]
*#fetchNextInto(Lorg/jooq/RecordHandler;)Lorg/jooq/RecordHandler;[deprecated]
-#fieldsRow()Lorg/jooq/Row;
-#field(Lorg/jooq/Field;)Lorg/jooq/Field;
-#field(Ljava/lang/String;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;)Lorg/jooq/Field;
-#field(I)Lorg/jooq/Field;
-#fields()[Lorg/jooq/Field;
-#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
-#fields([Ljava/lang/String;)[Lorg/jooq/Field;
-#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
-#fields([I)[Lorg/jooq/Field;
-#indexOf(Lorg/jooq/Field;)I
-#indexOf(Ljava/lang/String;)I
-#indexOf(Lorg/jooq/Name;)I

+###org/jooq/DAO
@2.4.0
+#insert(Ljava/lang/Object;)V
+#insert([Ljava/lang/Object;)V
+#insert(Ljava/util/Collection;)V
+#update(Ljava/lang/Object;)V
+#update([Ljava/lang/Object;)V
+#update(Ljava/util/Collection;)V
+#delete([Ljava/lang/Object;)V
+#delete(Ljava/util/Collection;)V
+#deleteById([Ljava/lang/Object;)V
+#deleteById(Ljava/util/Collection;)V
+#exists(Ljava/lang/Object;)Z
+#existsById(Ljava/lang/Object;)Z
+#count()J
+#findAll()Ljava/util/List;
+#findById(Ljava/lang/Object;)Ljava/lang/Object;
+#getTable()Lorg/jooq/Table;
+#getType()Ljava/lang/Class;
@2.5.0
+#fetch(Lorg/jooq/Field;[Ljava/lang/Object;)Ljava/util/List;
+#fetchOne(Lorg/jooq/Field;Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0-RC3
+#configuration()Lorg/jooq/Configuration;
@3.2.0-alpha-01
+#mapper()Lorg/jooq/RecordMapper;
@3.5.0
+#settings()Lorg/jooq/conf/Settings;
+#dialect()Lorg/jooq/SQLDialect;
+#family()Lorg/jooq/SQLDialect;
@3.7.0
+#fetchOptional(Lorg/jooq/Field;Ljava/lang/Object;)Ljava/util/Optional;
@3.9.0
+#delete(Ljava/lang/Object;)V
@3.12.0
+#fetchRange(Lorg/jooq/Field;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/List;
+#getId(Ljava/lang/Object;)Ljava/lang/Object;
@3.14.0
+#merge(Ljava/lang/Object;)V
+#merge([Ljava/lang/Object;)V
+#merge(Ljava/util/Collection;)V
@3.15.0
+#fetch(Lorg/jooq/Field;Ljava/util/Collection;)Ljava/util/List;
@3.16.0
+#findOptionalById(Ljava/lang/Object;)Ljava/util/Optional;
@3.17.0
+#deleteById(Ljava/lang/Object;)V

+###org/jooq/DataType
@1.5.7
+#getSQLType()I
+#getType()Ljava/lang/Class;
+#getType(II)Ljava/lang/Class;
+#getArrayType()Ljava/lang/Class;
+#getArrayDataType()Lorg/jooq/DataType;
+#asArrayDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#asMasterDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#asEnumDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#asNumberDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getTypeName()Ljava/lang/String;
+#getCastTypeName()Ljava/lang/String;
+#getArrayTypeName()Ljava/lang/String;
+#getDialect()Lorg/jooq/SQLDialect;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.6.1
+#getSQLDataType()Lorg/jooq/impl/SQLDataType;
+#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
+#getTypeName(Lorg/jooq/Configuration;)Ljava/lang/String;
+#getCastTypeName(Lorg/jooq/Configuration;)Ljava/lang/String;
-#asNumberDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getArrayTypeName()Ljava/lang/String;
@1.6.3
+#isNumeric()Z
+#isString()Z
+#isTemporal()Z
+#isBinary()Z
@1.6.6
+#getCastTypeName(Lorg/jooq/Configuration;II)Ljava/lang/String;
@2.0.5
+#isArray()Z
@2.1.0
+#asConvertedDataType(Lorg/jooq/Converter;)Lorg/jooq/DataType;
@2.2.0
+#isDateTime()Z
+#isInterval()Z
@2.3.0
+#isLob()Z
@2.4.0
+#convert([Ljava/lang/Object;)[Ljava/lang/Object;
+#convert(Ljava/util/Collection;)Ljava/util/List;
@2.5.0
*#asMasterDataType(Ljava/lang/Class;)Lorg/jooq/DataType;[deprecated]
+#getCastTypeName(Lorg/jooq/Configuration;I)Ljava/lang/String;
@3.0.0-RC1
+#getSQLDataType()Lorg/jooq/DataType;
+#precision(I)Lorg/jooq/DataType;
+#precision(II)Lorg/jooq/DataType;
+#precision()I
+#hasPrecision()Z
+#scale(I)Lorg/jooq/DataType;
+#scale()I
+#hasScale()Z
+#length(I)Lorg/jooq/DataType;
+#length()I
+#hasLength()Z
-#getSQLDataType()Lorg/jooq/impl/SQLDataType;
-#getType(II)Ljava/lang/Class;
-#asMasterDataType(Ljava/lang/Class;)Lorg/jooq/DataType;[deprecated]
-#getCastTypeName(Lorg/jooq/Configuration;I)Ljava/lang/String;
-#getCastTypeName(Lorg/jooq/Configuration;II)Ljava/lang/String;
@3.2.0-alpha-01
+#nullable(Z)Lorg/jooq/DataType;
+#nullable()Z
+#defaulted(Z)Lorg/jooq/DataType;
+#defaulted()Z
@3.2.0
-#asArrayDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
@3.5.0
+#asConvertedDataType(Lorg/jooq/Binding;)Lorg/jooq/DataType;
@3.6.0
+#getBinding()Lorg/jooq/Binding;
+#getConverter()Lorg/jooq/Converter;
@3.8.0
+#defaultValue(Ljava/lang/Object;)Lorg/jooq/DataType;
+#defaultValue(Lorg/jooq/Field;)Lorg/jooq/DataType;
+#defaultValue()Lorg/jooq/Field;
*#defaulted(Z)Lorg/jooq/DataType;[deprecated]
@3.9.0
+#identity(Z)Lorg/jooq/DataType;
+#identity()Z
+#isUDT()Z
@3.9.3
+#getSQLType(Lorg/jooq/Configuration;)I
@3.10.0
+#nullability(Lorg/jooq/Nullability;)Lorg/jooq/DataType;
+#nullability()Lorg/jooq/Nullability;
@3.11.0
+#collation(Lorg/jooq/Collation;)Lorg/jooq/DataType;
+#collation()Lorg/jooq/Collation;
+#isEnum()Z
@3.12.0
+#characterSet(Lorg/jooq/CharacterSet;)Lorg/jooq/DataType;
+#characterSet()Lorg/jooq/CharacterSet;
+#default_(Ljava/lang/Object;)Lorg/jooq/DataType;
+#default_(Lorg/jooq/Field;)Lorg/jooq/DataType;
+#default_()Lorg/jooq/Field;
+#isDate()Z
+#isTimestamp()Z
+#isTime()Z
@3.13.0
+#isInteger()Z
@3.14.0
+#getDomain()Lorg/jooq/Domain;
+#getArrayComponentType()Ljava/lang/Class;
+#getArrayComponentDataType()Lorg/jooq/DataType;
+#asConvertedDataType(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Function;)Lorg/jooq/DataType;
+#precisionDefined()Z
+#scaleDefined()Z
+#lengthDefined()Z
+#isNString()Z
+#isEmbeddable()Z
+#isJSON()Z
+#isXML()Z
@3.15.0
+#getRow()Lorg/jooq/Row;
+#asConvertedDataTypeFrom(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/DataType;
+#asConvertedDataTypeFrom(Ljava/util/function/Function;)Lorg/jooq/DataType;
+#asConvertedDataTypeTo(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/DataType;
+#asConvertedDataTypeTo(Ljava/util/function/Function;)Lorg/jooq/DataType;
+#null_()Lorg/jooq/DataType;
+#notNull()Lorg/jooq/DataType;
+#isRecord()Z
+#isMultiset()Z
@3.15.1
+#getRecordType()Ljava/lang/Class;
@3.16.0
+#readonly(Z)Lorg/jooq/DataType;
+#readonly()Z
+#computed()Z
+#generatedAlwaysAs(Ljava/lang/Object;)Lorg/jooq/DataType;
+#generatedAlwaysAs(Lorg/jooq/Field;)Lorg/jooq/DataType;
+#generatedAlwaysAs()Lorg/jooq/Field;
+#stored()Lorg/jooq/DataType;
+#virtual()Lorg/jooq/DataType;
+#generationOption(Lorg/jooq/impl/QOM$GenerationOption;)Lorg/jooq/DataType;
+#generationOption()Lorg/jooq/impl/QOM$GenerationOption;
+#isAssociativeArray()Z
@3.16.5
+#isSpatial()Z
@3.17.0
+#readonlyInternal()Z
+#computedOnServer()Z
+#computedOnClient()Z
+#computedOnClientStored()Z
+#computedOnClientStoredOn(Lorg/jooq/GeneratorStatementType;)Z
+#computedOnClientVirtual()Z
+#generatedAlwaysAs(Lorg/jooq/Generator;)Lorg/jooq/DataType;
+#generatedAlwaysAsGenerator()Lorg/jooq/Generator;
+#generationLocation(Lorg/jooq/impl/QOM$GenerationLocation;)Lorg/jooq/DataType;
+#generationLocation()Lorg/jooq/impl/QOM$GenerationLocation;

+###org/jooq/DatePart
@1.5.7
+#values()[Lorg/jooq/DatePart;
+#valueOf(Ljava/lang/String;)Lorg/jooq/DatePart;
+#toSQL()Ljava/lang/String;
@3.11.0
+#toKeyword()Lorg/jooq/Keyword;
@3.14.0
+#toName()Lorg/jooq/Name;

+###org/jooq/Delete
@1.5.9

+###org/jooq/DeleteConditionStep
@1.5.9
+#and(Lorg/jooq/Condition;)Lorg/jooq/DeleteConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/DeleteConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/DeleteConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/DeleteConditionStep;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/DeleteConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/DeleteConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/DeleteConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/DeleteConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/DeleteConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/DeleteConditionStep;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/DeleteConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/DeleteConditionStep;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/DeleteConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/DeleteConditionStep;
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/DeleteConditionStep;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/DeleteConditionStep;
+#or(Lorg/jooq/Field;)Lorg/jooq/DeleteConditionStep;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/DeleteConditionStep;
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;
+#and(Lorg/jooq/SQL;)Lorg/jooq/DeleteConditionStep;
+#andNot(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;
+#or(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;
+#or(Lorg/jooq/SQL;)Lorg/jooq/DeleteConditionStep;
+#orNot(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;
@3.7.2
*#and(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;[deprecated]
*#andNot(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;[deprecated]
*#or(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;[deprecated]
*#orNot(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;[deprecated]
@3.15.0
-#and(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;[deprecated]
-#andNot(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;[deprecated]
-#or(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;[deprecated]
-#orNot(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;[deprecated]

+###org/jooq/DeleteFinalStep
@1.5.9

+###org/jooq/DeleteQuery
@1.5.7
@2.6.0
+#addConditions([Lorg/jooq/Condition;)V
+#addConditions(Ljava/util/Collection;)V
+#addConditions(Lorg/jooq/Operator;[Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Ljava/util/Collection;)V
@3.6.0
+#setReturning()V
+#setReturning([Lorg/jooq/Field;)V
+#setReturning(Ljava/util/Collection;)V
+#getReturnedRecord()Lorg/jooq/Record;
+#getReturnedRecords()Lorg/jooq/Result;
@3.11.0
+#addConditions(Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Lorg/jooq/Condition;)V
+#setReturning([Lorg/jooq/SelectFieldOrAsterisk;)V
-#setReturning([Lorg/jooq/Field;)V
@3.12.0
+#addOrderBy([Lorg/jooq/OrderField;)V
+#addOrderBy(Ljava/util/Collection;)V
+#addLimit(Ljava/lang/Number;)V
+#addLimit(Lorg/jooq/Param;)V
@3.13.0
+#addUsing(Lorg/jooq/TableLike;)V
+#addUsing([Lorg/jooq/TableLike;)V
+#addUsing(Ljava/util/Collection;)V
@3.17.0
+#addLimit(Lorg/jooq/Field;)V
-#addLimit(Lorg/jooq/Param;)V

+###org/jooq/DeleteWhereStep
@1.5.9
+#where([Lorg/jooq/Condition;)Lorg/jooq/DeleteConditionStep;
+#where(Ljava/util/Collection;)Lorg/jooq/DeleteConditionStep;
+#where(Ljava/lang/String;)Lorg/jooq/DeleteConditionStep;
+#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/DeleteConditionStep;
+#whereExists(Lorg/jooq/Select;)Lorg/jooq/DeleteConditionStep;
+#whereNotExists(Lorg/jooq/Select;)Lorg/jooq/DeleteConditionStep;
@2.5.0
+#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/DeleteConditionStep;
@3.1.0
+#where(Lorg/jooq/Field;)Lorg/jooq/DeleteConditionStep;
@3.7.0
+#where(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;
+#where(Lorg/jooq/SQL;)Lorg/jooq/DeleteConditionStep;
@3.7.2
*#where(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;[deprecated]
@3.11.0
+#where(Lorg/jooq/Condition;)Lorg/jooq/DeleteConditionStep;
@3.15.0
-#where(Ljava/lang/Boolean;)Lorg/jooq/DeleteConditionStep;[deprecated]

+###org/jooq/DivideByOnConditionStep
@2.1.0
+#and(Lorg/jooq/Condition;)Lorg/jooq/DivideByOnConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/DivideByOnConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/DivideByOnConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/DivideByOnConditionStep;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/DivideByOnConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/DivideByOnConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/DivideByOnConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/DivideByOnConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/DivideByOnConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/DivideByOnConditionStep;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/DivideByOnConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/DivideByOnConditionStep;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/DivideByOnConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/DivideByOnConditionStep;
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/DivideByOnConditionStep;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/DivideByOnConditionStep;
+#or(Lorg/jooq/Field;)Lorg/jooq/DivideByOnConditionStep;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/DivideByOnConditionStep;
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;
+#and(Lorg/jooq/SQL;)Lorg/jooq/DivideByOnConditionStep;
+#andNot(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;
+#or(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;
+#or(Lorg/jooq/SQL;)Lorg/jooq/DivideByOnConditionStep;
+#orNot(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;
@3.7.2
*#and(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;[deprecated]
*#andNot(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;[deprecated]
*#or(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;[deprecated]
*#orNot(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;[deprecated]
@3.15.0
-#and(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;[deprecated]
-#andNot(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;[deprecated]
-#or(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;[deprecated]
-#orNot(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;[deprecated]

+###org/jooq/DivideByOnStep
@2.1.0
+#on([Lorg/jooq/Condition;)Lorg/jooq/DivideByOnConditionStep;
+#on(Ljava/lang/String;)Lorg/jooq/DivideByOnConditionStep;
+#on(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/DivideByOnConditionStep;
@2.5.0
+#on(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/DivideByOnConditionStep;
@3.1.0
+#on(Lorg/jooq/Field;)Lorg/jooq/DivideByOnConditionStep;
@3.7.0
+#on(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;
+#on(Lorg/jooq/SQL;)Lorg/jooq/DivideByOnConditionStep;
@3.7.2
*#on(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;[deprecated]
@3.11.0
+#on(Lorg/jooq/Condition;)Lorg/jooq/DivideByOnConditionStep;
@3.15.0
-#on(Ljava/lang/Boolean;)Lorg/jooq/DivideByOnConditionStep;[deprecated]

+###org/jooq/DivideByReturningStep
@2.1.0
+#returning([Lorg/jooq/Field;)Lorg/jooq/Table;
+#returning(Ljava/util/Collection;)Lorg/jooq/Table;

+###org/jooq/DSLContext
@3.0.0-RC3
+#configuration()Lorg/jooq/Configuration;
+#map(Lorg/jooq/Schema;)Lorg/jooq/Schema;
+#map(Lorg/jooq/Table;)Lorg/jooq/Table;
+#meta()Lorg/jooq/Meta;
+#renderContext()Lorg/jooq/RenderContext;
+#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderNamedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderInlined(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#extractBindValues(Lorg/jooq/QueryPart;)Ljava/util/List;
+#extractParams(Lorg/jooq/QueryPart;)Ljava/util/Map;
+#extractParam(Lorg/jooq/QueryPart;Ljava/lang/String;)Lorg/jooq/Param;
+#bindContext(Ljava/sql/PreparedStatement;)Lorg/jooq/BindContext;
+#bind(Lorg/jooq/QueryPart;Ljava/sql/PreparedStatement;)I
+#attach([Lorg/jooq/Attachable;)V
+#attach(Ljava/util/Collection;)V
+#loadInto(Lorg/jooq/Table;)Lorg/jooq/LoaderOptionsStep;
+#query(Ljava/lang/String;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
+#fetch(Ljava/lang/String;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Result;
+#fetchLazy(Ljava/lang/String;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Cursor;
+#fetchMany(Ljava/lang/String;)Ljava/util/List;
+#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
+#fetchOne(Ljava/lang/String;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
+#execute(Ljava/lang/String;)I
+#execute(Ljava/lang/String;[Ljava/lang/Object;)I
+#execute(Ljava/lang/String;[Lorg/jooq/QueryPart;)I
+#resultQuery(Ljava/lang/String;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/ResultQuery;
+#fetch(Ljava/sql/ResultSet;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Result;
+#fetchOne(Ljava/sql/ResultSet;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Record;
+#fetchLazy(Ljava/sql/ResultSet;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Cursor;
+#fetchFromTXT(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromTXT(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;C)Lorg/jooq/Result;
+#fetchFromStringData([[Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromStringData(Ljava/util/List;)Lorg/jooq/Result;
+#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectZero()Lorg/jooq/SelectSelectStep;
+#selectOne()Lorg/jooq/SelectSelectStep;
+#selectCount()Lorg/jooq/SelectSelectStep;
+#selectQuery()Lorg/jooq/SelectQuery;
+#selectQuery(Lorg/jooq/TableLike;)Lorg/jooq/SelectQuery;
+#insertQuery(Lorg/jooq/Table;)Lorg/jooq/InsertQuery;
+#insertInto(Lorg/jooq/Table;)Lorg/jooq/InsertSetStep;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep1;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep2;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep3;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep4;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep5;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep6;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep7;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep8;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep9;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep10;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep11;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep12;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep13;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep14;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep15;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep16;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep17;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep18;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep19;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep20;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep21;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep22;
+#insertInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/InsertValuesStepN;
+#insertInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;
+#updateQuery(Lorg/jooq/Table;)Lorg/jooq/UpdateQuery;
+#update(Lorg/jooq/Table;)Lorg/jooq/UpdateSetFirstStep;
+#mergeInto(Lorg/jooq/Table;)Lorg/jooq/MergeUsingStep;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;
+#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStepN;
+#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStepN;
+#deleteQuery(Lorg/jooq/Table;)Lorg/jooq/DeleteQuery;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#batch([Lorg/jooq/Query;)Lorg/jooq/Batch;
+#batch(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batch(Lorg/jooq/Query;)Lorg/jooq/BatchBindStep;
+#batchStore([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchStore(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchInsert([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchInsert(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchUpdate([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchUpdate(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchDelete([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchDelete(Ljava/util/Collection;)Lorg/jooq/Batch;
+#truncate(Lorg/jooq/Table;)Lorg/jooq/Truncate;
+#lastID()Ljava/math/BigInteger;
+#nextval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#currval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#newRecord(Lorg/jooq/UDT;)Lorg/jooq/UDTRecord;
+#newRecord(Lorg/jooq/Table;)Lorg/jooq/Record;
+#newRecord(Lorg/jooq/Table;Ljava/lang/Object;)Lorg/jooq/Record;
+#newResult(Lorg/jooq/Table;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/ResultQuery;)Lorg/jooq/Result;
+#fetchLazy(Lorg/jooq/ResultQuery;)Lorg/jooq/Cursor;
+#fetchMany(Lorg/jooq/ResultQuery;)Ljava/util/List;
+#fetchOne(Lorg/jooq/ResultQuery;)Lorg/jooq/Record;
+#fetchCount(Lorg/jooq/Select;)I
+#execute(Lorg/jooq/Query;)I
+#fetch(Lorg/jooq/Table;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Result;
+#fetchOne(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchLazy(Lorg/jooq/Table;)Lorg/jooq/Cursor;
+#fetchLazy(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Cursor;
+#executeInsert(Lorg/jooq/TableRecord;)I
+#executeUpdate(Lorg/jooq/UpdatableRecord;)I
+#executeUpdate(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeDelete(Lorg/jooq/UpdatableRecord;)I
+#executeDelete(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
@3.1.0
+#batch([Ljava/lang/String;)Lorg/jooq/Batch;
+#batch(Ljava/lang/String;)Lorg/jooq/BatchBindStep;
+#batch(Lorg/jooq/Query;[[Ljava/lang/Object;)Lorg/jooq/Batch;
+#batch(Ljava/lang/String;[[Ljava/lang/Object;)Lorg/jooq/Batch;
+#truncate(Lorg/jooq/Table;)Lorg/jooq/TruncateIdentityStep;
+#fetchAny(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
-#truncate(Lorg/jooq/Table;)Lorg/jooq/Truncate;
@3.2.0-alpha-01
*#bind(Lorg/jooq/QueryPart;Ljava/sql/PreparedStatement;)I[deprecated]
@3.2.0
+#newRecord([Lorg/jooq/Field;)Lorg/jooq/Record;
+#newRecord(Lorg/jooq/Field;)Lorg/jooq/Record1;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record2;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record3;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record4;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record5;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record6;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record7;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record8;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record9;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record10;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record11;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record12;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record13;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record14;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record15;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record16;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record17;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record18;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record19;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record20;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record21;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record22;
@3.3.0
+#fetchValue(Ljava/lang/String;)Ljava/lang/Object;
+#fetchValue(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#fetchValue(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;Lorg/jooq/Field;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;Lorg/jooq/DataType;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchFromJSON(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchValue(Lorg/jooq/ResultQuery;)Ljava/lang/Object;
+#fetchCount(Lorg/jooq/Table;)I
+#fetchCount(Lorg/jooq/Table;Lorg/jooq/Condition;)I
@3.4.0
+#transactionResult(Lorg/jooq/TransactionalCallable;)Ljava/lang/Object;
+#transaction(Lorg/jooq/TransactionalRunnable;)V
+#with(Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#with([Lorg/jooq/CommonTableExpression;)Lorg/jooq/WithStep;
+#withRecursive(Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#withRecursive([Lorg/jooq/CommonTableExpression;)Lorg/jooq/WithStep;
+#batchInsert([Lorg/jooq/TableRecord;)Lorg/jooq/Batch;
+#alterSequence(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceRestartStep;
+#alterSequence(Ljava/lang/String;)Lorg/jooq/AlterSequenceRestartStep;
+#alterTable(Lorg/jooq/Table;)Lorg/jooq/AlterTableStep;
+#alterTable(Ljava/lang/String;)Lorg/jooq/AlterTableStep;
+#dropTable(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#dropTable(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#newResult([Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
-#batchInsert([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
@3.5.0
+#renderNamedOrInlinedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#fetchValues(Ljava/lang/String;)Ljava/util/List;
+#fetchValues(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#fetchValues(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;Lorg/jooq/Field;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;Lorg/jooq/DataType;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;Ljava/lang/Class;)Ljava/util/List;
+#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createView(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createIndex(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createSequence(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
+#createSequence(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
+#dropView(Lorg/jooq/Table;)Lorg/jooq/DropViewFinalStep;
+#dropView(Ljava/lang/String;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Lorg/jooq/Table;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Ljava/lang/String;)Lorg/jooq/DropViewFinalStep;
+#dropTableIfExists(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#dropTableIfExists(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropIndex(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
+#dropIndexIfExists(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
+#dropSequence(Lorg/jooq/Sequence;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequence(Ljava/lang/String;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Lorg/jooq/Sequence;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Ljava/lang/String;)Lorg/jooq/DropSequenceFinalStep;
+#nextval(Ljava/lang/String;)Ljava/math/BigInteger;
+#currval(Ljava/lang/String;)Ljava/math/BigInteger;
+#fetchValues(Lorg/jooq/ResultQuery;)Ljava/util/List;
+#fetchExists(Lorg/jooq/Select;)Z
+#fetchExists(Lorg/jooq/Table;)Z
+#fetchExists(Lorg/jooq/Table;Lorg/jooq/Condition;)Z
-#configuration()Lorg/jooq/Configuration;
@3.6.0
+#mockResult(Lorg/jooq/tools/jdbc/MockDataProvider;Lorg/jooq/tools/jdbc/MockCallable;)Ljava/lang/Object;
+#mock(Lorg/jooq/tools/jdbc/MockDataProvider;Lorg/jooq/tools/jdbc/MockRunnable;)V
+#select([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#deleteFrom(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createView(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createIndex(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createSequence(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
+#alterSequence(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceRestartStep;
+#alterTable(Lorg/jooq/Name;)Lorg/jooq/AlterTableStep;
+#dropView(Lorg/jooq/Name;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Lorg/jooq/Name;)Lorg/jooq/DropViewFinalStep;
+#dropTable(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTableIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropIndex(Ljava/lang/String;)Lorg/jooq/DropIndexOnStep;
+#dropIndex(Lorg/jooq/Name;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Ljava/lang/String;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/DropIndexOnStep;
+#dropSequence(Lorg/jooq/Name;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Lorg/jooq/Name;)Lorg/jooq/DropSequenceFinalStep;
+#truncate(Ljava/lang/String;)Lorg/jooq/TruncateIdentityStep;
+#truncate(Lorg/jooq/Name;)Lorg/jooq/TruncateIdentityStep;
+#fetchValues(Lorg/jooq/TableField;)Ljava/util/List;
-#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#dropIndex(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
-#dropIndexIfExists(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
@3.7.0
+#close()V
+#connectionResult(Lorg/jooq/ConnectionCallable;)Ljava/lang/Object;
+#connection(Lorg/jooq/ConnectionRunnable;)V
+#query(Lorg/jooq/SQL;)Lorg/jooq/Query;
+#fetch(Lorg/jooq/SQL;)Lorg/jooq/Result;
+#fetchLazy(Lorg/jooq/SQL;)Lorg/jooq/Cursor;
+#fetchStream(Lorg/jooq/SQL;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/lang/String;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/stream/Stream;
+#fetchMany(Lorg/jooq/SQL;)Lorg/jooq/Results;
+#fetchMany(Ljava/lang/String;)Lorg/jooq/Results;
+#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Results;
+#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Results;
+#fetchOne(Lorg/jooq/SQL;)Lorg/jooq/Record;
+#fetchOptional(Lorg/jooq/SQL;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/Optional;
+#fetchValue(Lorg/jooq/SQL;)Ljava/lang/Object;
+#fetchOptionalValue(Lorg/jooq/SQL;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/lang/String;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/Optional;
+#fetchValues(Lorg/jooq/SQL;)Ljava/util/List;
+#execute(Lorg/jooq/SQL;)I
+#resultQuery(Lorg/jooq/SQL;)Lorg/jooq/ResultQuery;
+#fetchOptional(Ljava/sql/ResultSet;)Ljava/util/Optional;
+#fetchOptional(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/Optional;
+#fetchOptional(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/Optional;
+#fetchOptional(Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;Lorg/jooq/Field;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;Lorg/jooq/DataType;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;Ljava/lang/Class;)Ljava/util/Optional;
+#fetchStream(Ljava/sql/ResultSet;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/stream/Stream;
+#fetchFromCSV(Ljava/lang/String;Z)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;ZC)Lorg/jooq/Result;
+#fetchFromStringData(Ljava/util/List;Z)Lorg/jooq/Result;
+#fetchStream(Lorg/jooq/ResultQuery;)Ljava/util/stream/Stream;
+#fetchMany(Lorg/jooq/ResultQuery;)Lorg/jooq/Results;
+#fetchOptional(Lorg/jooq/ResultQuery;)Ljava/util/Optional;
+#fetchValue(Lorg/jooq/TableField;)Ljava/lang/Object;
+#fetchOptionalValue(Lorg/jooq/ResultQuery;)Ljava/util/Optional;
+#fetchOptionalValue(Lorg/jooq/TableField;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Table;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/Optional;
+#fetchStream(Lorg/jooq/Table;)Ljava/util/stream/Stream;
+#fetchStream(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/stream/Stream;
-#fetchMany(Ljava/lang/String;)Ljava/util/List;
-#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
-#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
-#fetchMany(Lorg/jooq/ResultQuery;)Ljava/util/List;
@3.8.0
+#transactionResultAsync(Lorg/jooq/TransactionalCallable;)Ljava/util/concurrent/CompletionStage;
+#transactionAsync(Lorg/jooq/TransactionalRunnable;)Ljava/util/concurrent/CompletionStage;
+#transactionResultAsync(Ljava/util/concurrent/Executor;Lorg/jooq/TransactionalCallable;)Ljava/util/concurrent/CompletionStage;
+#transactionAsync(Ljava/util/concurrent/Executor;Lorg/jooq/TransactionalRunnable;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/SQL;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/lang/String;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/SQL;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/lang/String;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/concurrent/CompletionStage;
+#fetchFromHTML(Ljava/lang/String;)Lorg/jooq/Result;
+#with(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep1;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep2;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep3;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep4;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep5;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep6;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep7;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep8;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep9;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep10;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep11;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep12;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep13;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep14;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep15;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep16;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep17;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep18;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep19;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep20;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep21;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep22;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep1;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep2;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep3;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep4;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep5;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep6;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep7;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep8;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep9;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep10;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep11;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep12;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep13;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep14;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep15;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep16;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep17;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep18;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep19;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep20;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep21;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep22;
+#batch(Lorg/jooq/Queries;)Lorg/jooq/Batch;
+#ddl(Lorg/jooq/Schema;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Schema;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Table;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Table;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createViewIfNotExists(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createIndexIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createIndexIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createSequenceIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
+#createSequenceIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
+#createSequenceIfNotExists(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
+#fetchAsync(Lorg/jooq/ResultQuery;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/ResultQuery;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/Table;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
@3.9.0
+#parser()Lorg/jooq/Parser;[deprecated]
+#meta(Lorg/jooq/util/xml/jaxb/InformationSchema;)Lorg/jooq/Meta;
+#informationSchema(Lorg/jooq/Catalog;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema([Lorg/jooq/Catalog;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema(Lorg/jooq/Schema;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema([Lorg/jooq/Schema;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema(Lorg/jooq/Table;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema([Lorg/jooq/Table;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#transactionResult(Lorg/jooq/ContextTransactionalCallable;)Ljava/lang/Object;
+#transaction(Lorg/jooq/ContextTransactionalRunnable;)V
+#with(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/WithAsStep;
+#ddl(Lorg/jooq/Catalog;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Catalog;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#createSchema(Ljava/lang/String;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchema(Lorg/jooq/Name;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchema(Lorg/jooq/Schema;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Lorg/jooq/Schema;)Lorg/jooq/CreateSchemaFinalStep;
+#createView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#alterSequence(Ljava/lang/String;)Lorg/jooq/AlterSequenceStep;
+#alterSequence(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceStep;
+#alterSequence(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Ljava/lang/String;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceStep;
+#alterTableIfExists(Ljava/lang/String;)Lorg/jooq/AlterTableStep;
+#alterTableIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterTableStep;
+#alterTableIfExists(Lorg/jooq/Table;)Lorg/jooq/AlterTableStep;
+#alterSchema(Ljava/lang/String;)Lorg/jooq/AlterSchemaStep;
+#alterSchema(Lorg/jooq/Name;)Lorg/jooq/AlterSchemaStep;
+#alterSchema(Lorg/jooq/Schema;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Ljava/lang/String;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Lorg/jooq/Schema;)Lorg/jooq/AlterSchemaStep;
+#alterView(Ljava/lang/String;)Lorg/jooq/AlterViewStep;
+#alterView(Lorg/jooq/Name;)Lorg/jooq/AlterViewStep;
+#alterView(Lorg/jooq/Table;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Ljava/lang/String;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Lorg/jooq/Table;)Lorg/jooq/AlterViewStep;
+#alterIndex(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
+#alterIndex(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
+#dropSchema(Ljava/lang/String;)Lorg/jooq/DropSchemaStep;
+#dropSchema(Lorg/jooq/Name;)Lorg/jooq/DropSchemaStep;
+#dropSchema(Lorg/jooq/Schema;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Ljava/lang/String;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Lorg/jooq/Name;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Lorg/jooq/Schema;)Lorg/jooq/DropSchemaStep;
-#alterSequence(Ljava/lang/String;)Lorg/jooq/AlterSequenceRestartStep;
-#alterSequence(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceRestartStep;
-#alterSequence(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceRestartStep;
@3.10.0
+#parsingConnection()Ljava/sql/Connection;
*#renderContext()Lorg/jooq/RenderContext;[deprecated]
*#bindContext(Ljava/sql/PreparedStatement;)Lorg/jooq/BindContext;[deprecated]
+#queries([Lorg/jooq/Query;)Lorg/jooq/Queries;
+#queries(Ljava/util/Collection;)Lorg/jooq/Queries;
+#fetchSingle(Lorg/jooq/SQL;)Lorg/jooq/Record;
+#fetchSingle(Ljava/lang/String;)Lorg/jooq/Record;
+#fetchSingle(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
+#fetchSingle(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Record;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep1;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep2;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep3;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep4;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep5;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep6;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep7;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep8;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep9;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep10;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep11;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep12;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep13;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep14;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep15;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep16;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep17;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep18;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep19;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep20;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep21;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep22;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep1;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep2;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep3;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep4;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep5;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep6;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep7;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep8;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep9;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep10;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep11;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep12;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep13;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep14;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep15;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep16;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep17;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep18;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep19;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep20;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep21;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep22;
+#createIndex(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createIndexIfNotExists(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#alterIndex(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
+#dropIndex(Lorg/jooq/Index;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/DropIndexOnStep;
+#nextval(Lorg/jooq/Name;)Ljava/math/BigInteger;
+#currval(Lorg/jooq/Name;)Ljava/math/BigInteger;
+#fetchSingle(Lorg/jooq/ResultQuery;)Lorg/jooq/Record;
+#fetchByExample(Lorg/jooq/TableRecord;)Lorg/jooq/Result;
+#fetchSingle(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
@3.10.5
+#setCatalog(Ljava/lang/String;)Lorg/jooq/Query;
+#setCatalog(Lorg/jooq/Name;)Lorg/jooq/Query;
+#setCatalog(Lorg/jooq/Catalog;)Lorg/jooq/Query;
+#setSchema(Ljava/lang/String;)Lorg/jooq/Query;
+#setSchema(Lorg/jooq/Name;)Lorg/jooq/Query;
+#setSchema(Lorg/jooq/Schema;)Lorg/jooq/Query;
@3.10.6
+#with(Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
@3.11.0
+#parsingDataSource()Ljavax/sql/DataSource;
+#diagnosticsConnection()Ljava/sql/Connection;
+#diagnosticsDataSource()Ljavax/sql/DataSource;
+#meta(Ljava/sql/DatabaseMetaData;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Catalog;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Schema;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Table;)Lorg/jooq/Meta;
+#explain(Lorg/jooq/Query;)Lorg/jooq/Explain;
+#begin([Lorg/jooq/Statement;)Lorg/jooq/Block;
+#begin(Ljava/util/Collection;)Lorg/jooq/Block;
+#selectFrom(Lorg/jooq/Name;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Lorg/jooq/SQL;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectWhereStep;
+#select([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
+#ddl([Lorg/jooq/Table;)Lorg/jooq/Queries;
+#ddl([Lorg/jooq/Table;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#ddl(Ljava/util/Collection;)Lorg/jooq/Queries;
+#ddl(Ljava/util/Collection;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#commentOnTable(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#commentOnTable(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnTable(Lorg/jooq/Table;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Lorg/jooq/Table;)Lorg/jooq/CommentOnIsStep;
+#commentOnColumn(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnColumn(Lorg/jooq/Field;)Lorg/jooq/CommentOnIsStep;
+#createOrReplaceView(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createIndex()Lorg/jooq/CreateIndexStep;
+#createUniqueIndex()Lorg/jooq/CreateIndexStep;
+#alterIndex(Ljava/lang/String;)Lorg/jooq/AlterIndexOnStep;
+#alterIndex(Lorg/jooq/Name;)Lorg/jooq/AlterIndexOnStep;
+#alterIndex(Lorg/jooq/Index;)Lorg/jooq/AlterIndexOnStep;
+#dropTemporaryTable(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#grant(Lorg/jooq/Privilege;)Lorg/jooq/GrantOnStep;
+#grant([Lorg/jooq/Privilege;)Lorg/jooq/GrantOnStep;
+#grant(Ljava/util/Collection;)Lorg/jooq/GrantOnStep;
+#revoke(Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revoke([Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revoke(Ljava/util/Collection;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor(Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor([Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor(Ljava/util/Collection;)Lorg/jooq/RevokeOnStep;
+#newRecord(Ljava/util/Collection;)Lorg/jooq/Record;
+#newResult(Ljava/util/Collection;)Lorg/jooq/Result;
+#fetchValue(Lorg/jooq/Table;)Ljava/lang/Object;
+#fetchValue(Lorg/jooq/Field;)Ljava/lang/Object;
+#fetchValues(Lorg/jooq/Table;)Ljava/util/List;
-#select([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
-#selectDistinct([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
-#alterIndex(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
-#alterIndex(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
-#alterIndex(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
@3.12.0
+#meta([Lorg/jooq/Source;)Lorg/jooq/Meta;
+#query(Lorg/jooq/SQL;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/RowCountQuery;
+#fetchFromXML(Ljava/lang/String;)Lorg/jooq/Result;
+#ddl(Lorg/jooq/Catalog;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Schema;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Table;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl([Lorg/jooq/Table;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl(Ljava/util/Collection;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#setCatalog(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#setCatalog(Lorg/jooq/Name;)Lorg/jooq/RowCountQuery;
+#setCatalog(Lorg/jooq/Catalog;)Lorg/jooq/RowCountQuery;
+#setSchema(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#setSchema(Lorg/jooq/Name;)Lorg/jooq/RowCountQuery;
+#setSchema(Lorg/jooq/Schema;)Lorg/jooq/RowCountQuery;
+#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createType(Ljava/lang/String;)Lorg/jooq/CreateTypeStep;
+#createType(Lorg/jooq/Name;)Lorg/jooq/CreateTypeStep;
+#dropType(Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropType(Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropType([Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropType([Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropType(Ljava/util/Collection;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists([Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists([Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Ljava/util/Collection;)Lorg/jooq/DropTypeStep;
+#createSequence(Ljava/lang/String;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequence(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequence(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFlagsStep;
+#truncateTable(Ljava/lang/String;)Lorg/jooq/TruncateIdentityStep;
+#truncateTable(Lorg/jooq/Name;)Lorg/jooq/TruncateIdentityStep;
+#truncateTable(Lorg/jooq/Table;)Lorg/jooq/TruncateIdentityStep;
+#fetchCount(Lorg/jooq/Table;[Lorg/jooq/Condition;)I
+#fetchCount(Lorg/jooq/Table;Ljava/util/Collection;)I
+#fetchExists(Lorg/jooq/Table;[Lorg/jooq/Condition;)Z
+#fetchExists(Lorg/jooq/Table;Ljava/util/Collection;)Z
+#fetch(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Result;
+#fetchOne(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchSingle([Lorg/jooq/SelectField;)Lorg/jooq/Record;
+#fetchSingle(Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/SelectField;)Lorg/jooq/Record1;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record2;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record3;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record4;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record5;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record6;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record7;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record8;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record9;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record10;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record11;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record12;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record13;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record14;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record15;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record16;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record17;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record18;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record19;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record20;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record21;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record22;
+#fetchOptional(Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/Optional;
+#fetchAny(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchLazy(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Cursor;
+#fetchLazy(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Cursor;
+#fetchAsync(Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/concurrent/CompletionStage;
+#fetchStream(Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/stream/Stream;
+#fetchStream(Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/stream/Stream;
-#query(Lorg/jooq/SQL;)Lorg/jooq/Query;
-#query(Ljava/lang/String;)Lorg/jooq/Query;
-#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
-#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
-#setCatalog(Ljava/lang/String;)Lorg/jooq/Query;
-#setCatalog(Lorg/jooq/Name;)Lorg/jooq/Query;
-#setCatalog(Lorg/jooq/Catalog;)Lorg/jooq/Query;
-#setSchema(Ljava/lang/String;)Lorg/jooq/Query;
-#setSchema(Lorg/jooq/Name;)Lorg/jooq/Query;
-#setSchema(Lorg/jooq/Schema;)Lorg/jooq/Query;
-#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createSequence(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequence(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequence(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequenceIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequenceIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequenceIfNotExists(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
@3.13.0
+#version(Ljava/lang/String;)Lorg/jooq/Version;
+#migrateTo(Lorg/jooq/Version;)Lorg/jooq/Migration;
+#meta([Ljava/lang/String;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Query;)Lorg/jooq/Meta;
+#deleteFrom(Lorg/jooq/Table;)Lorg/jooq/DeleteUsingStep;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteUsingStep;
+#set(Lorg/jooq/Name;Lorg/jooq/Param;)Lorg/jooq/RowCountQuery;
+#createTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#alterType(Ljava/lang/String;)Lorg/jooq/AlterTypeStep;
+#alterType(Lorg/jooq/Name;)Lorg/jooq/AlterTypeStep;
+#dropTemporaryTableIfExists(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropTemporaryTableIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTemporaryTableIfExists(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
-#deleteFrom(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
-#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
@3.14.0
+#with(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
*#with(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;[deprecated]
*#with(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/WithAsStep;[deprecated]
+#with(Ljava/util/Collection;)Lorg/jooq/WithStep;
+#withRecursive(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
*#withRecursive(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;[deprecated]
*#withRecursive(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/WithAsStep;[deprecated]
+#withRecursive(Ljava/util/Collection;)Lorg/jooq/WithStep;
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;[deprecated]
*#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStepN;[deprecated]
*#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStepN;[deprecated]
+#batched(Lorg/jooq/BatchedRunnable;)V
+#batchedResult(Lorg/jooq/BatchedCallable;)Ljava/lang/Object;
+#batchMerge([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchMerge(Ljava/util/Collection;)Lorg/jooq/Batch;
+#createDatabase(Ljava/lang/String;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabase(Lorg/jooq/Name;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabase(Lorg/jooq/Catalog;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabaseIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabaseIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabaseIfNotExists(Lorg/jooq/Catalog;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDomain(Ljava/lang/String;)Lorg/jooq/CreateDomainAsStep;
+#createDomain(Lorg/jooq/Name;)Lorg/jooq/CreateDomainAsStep;
+#createDomain(Lorg/jooq/Domain;)Lorg/jooq/CreateDomainAsStep;
+#createDomainIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateDomainAsStep;
+#createDomainIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateDomainAsStep;
+#createDomainIfNotExists(Lorg/jooq/Domain;)Lorg/jooq/CreateDomainAsStep;
+#alterDatabase(Ljava/lang/String;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabase(Lorg/jooq/Name;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabase(Lorg/jooq/Catalog;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabaseIfExists(Ljava/lang/String;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabaseIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabaseIfExists(Lorg/jooq/Catalog;)Lorg/jooq/AlterDatabaseStep;
+#alterDomain(Ljava/lang/String;)Lorg/jooq/AlterDomainStep;
+#alterDomain(Lorg/jooq/Name;)Lorg/jooq/AlterDomainStep;
+#alterDomain(Lorg/jooq/Domain;)Lorg/jooq/AlterDomainStep;
+#alterDomainIfExists(Ljava/lang/String;)Lorg/jooq/AlterDomainStep;
+#alterDomainIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterDomainStep;
+#alterDomainIfExists(Lorg/jooq/Domain;)Lorg/jooq/AlterDomainStep;
+#dropDatabase(Ljava/lang/String;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabase(Lorg/jooq/Name;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabase(Lorg/jooq/Catalog;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabaseIfExists(Ljava/lang/String;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabaseIfExists(Lorg/jooq/Name;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabaseIfExists(Lorg/jooq/Catalog;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDomain(Ljava/lang/String;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomain(Lorg/jooq/Name;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomain(Lorg/jooq/Domain;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomainIfExists(Ljava/lang/String;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomainIfExists(Lorg/jooq/Name;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomainIfExists(Lorg/jooq/Domain;)Lorg/jooq/DropDomainCascadeStep;
*#createView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createView(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createView(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createView(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createOrReplaceView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createOrReplaceView(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createOrReplaceView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createOrReplaceView(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createOrReplaceView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createOrReplaceView(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createViewIfNotExists(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createViewIfNotExists(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createViewIfNotExists(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createViewIfNotExists(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createViewIfNotExists(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createViewIfNotExists(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;[deprecated]
+#nextvals(Lorg/jooq/Sequence;I)Ljava/util/List;
-#close()V
@3.15.0
+#parsingConnectionFactory()Lio/r2dbc/spi/ConnectionFactory;
+#versions()Lorg/jooq/Versions;
+#commit(Ljava/lang/String;)Lorg/jooq/Commit;
+#commits()Lorg/jooq/Commits;
+#migrateTo(Lorg/jooq/Commit;)Lorg/jooq/Migration;
+#alterIndexIfExists(Ljava/lang/String;)Lorg/jooq/AlterIndexOnStep;
+#alterIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterIndexOnStep;
+#alterIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/AlterIndexOnStep;
+#commentOnColumn(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#createIndexIfNotExists()Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists()Lorg/jooq/CreateIndexStep;
+#setLocal(Lorg/jooq/Name;Lorg/jooq/Param;)Lorg/jooq/RowCountQuery;
+#fetchValue(Lorg/jooq/SelectField;)Ljava/lang/Object;
-#migrateTo(Lorg/jooq/Version;)Lorg/jooq/Migration;
-#bind(Lorg/jooq/QueryPart;Ljava/sql/PreparedStatement;)I[deprecated]
-#alterIndexIfExists(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
-#alterIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
-#alterIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
-#fetchValue(Lorg/jooq/Field;)Ljava/lang/Object;
@3.16.0
+#fetchMap(Lorg/jooq/ResultQuery;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/ResultQuery;)Ljava/util/Map;
@3.17.0
+#transactionPublisher(Lorg/jooq/TransactionalPublishable;)Lorg/jooq/Publisher;
+#selectFrom(Lorg/jooq/TableLike;)Lorg/jooq/SelectWhereStep;
+#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
-#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;
-#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
@3.17.1
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;

+###org/jooq/EnumType
@1.5.7
+#getLiteral()Ljava/lang/String;
+#getName()Ljava/lang/String;
@3.1.0
+#getSchema()Lorg/jooq/Schema;
@3.9.0
+#getCatalog()Lorg/jooq/Catalog;
@3.16.0
+#lookupLiteral(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;

+###org/jooq/exception/DataAccessException
@2.0.0-RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.8.0
+#sqlState()Ljava/lang/String;
+#sqlStateClass()Lorg/jooq/exception/SQLStateClass;
+#sqlStateSubclass()Lorg/jooq/exception/SQLStateSubclass;
@3.9.0
+#getStackTrace()[Ljava/lang/StackTraceElement;
@3.10.4
+#getCause(Ljava/lang/Class;)Ljava/lang/Throwable;

+###org/jooq/exception/DataChangedException
@2.5.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/jooq/exception/DataTypeException
@2.0.0-RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/jooq/exception/DetachedException
@1.5.7
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@2.0.0-RC1
-#<init>()V
-#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Ljava/lang/Throwable;)V

+###org/jooq/exception/InvalidResultException
@2.0.0-RC1
+#<init>(Ljava/lang/String;)V

+###org/jooq/exception/MappingException
@2.0.0-RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/jooq/exception/SQLDialectNotSupportedException
@2.0.0-RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V

+###org/jooq/ExecuteContext
@2.0.5
+#configuration()Lorg/jooq/Configuration;
+#type()Lorg/jooq/ExecuteType;
+#query()Lorg/jooq/Query;
+#batchQueries()[Lorg/jooq/Query;
+#routine()Lorg/jooq/Routine;
+#sql()Ljava/lang/String;
+#sql(Ljava/lang/String;)V
+#batchSQL()[Ljava/lang/String;
+#statement()Ljava/sql/PreparedStatement;
+#statement(Ljava/sql/PreparedStatement;)V
+#resultSet()Ljava/sql/ResultSet;
+#resultSet(Ljava/sql/ResultSet;)V
+#record()Lorg/jooq/Record;
+#record(Lorg/jooq/Record;)V
+#result()Lorg/jooq/Result;
+#result(Lorg/jooq/Result;)V
@2.1.0
+#getConnection()Ljava/sql/Connection;
+#setConnection(Ljava/sql/Connection;)V
@2.3.0
+#exception()Ljava/lang/RuntimeException;
+#exception(Ljava/lang/RuntimeException;)V
+#sqlException()Ljava/sql/SQLException;
+#sqlException(Ljava/sql/SQLException;)V
@3.0.0-RC1
+#connection()Ljava/sql/Connection;
+#connectionProvider(Lorg/jooq/ConnectionProvider;)V
-#getConnection()Ljava/sql/Connection;
-#setConnection(Ljava/sql/Connection;)V
@3.0.0-RC3
+#data()Ljava/util/Map;
+#data(Ljava/lang/Object;)Ljava/lang/Object;
+#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.2.0
+#rows()I
+#rows(I)V
+#batchRows()[I
@3.4.0
+#sqlWarning()Ljava/sql/SQLWarning;
+#sqlWarning(Ljava/sql/SQLWarning;)V
@3.5.0
-#data()Ljava/util/Map;
-#data(Ljava/lang/Object;)Ljava/lang/Object;
-#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#configuration()Lorg/jooq/Configuration;
@3.11.0
+#statementExecutionCount()I
+#serverOutput()[Ljava/lang/String;
+#serverOutput([Ljava/lang/String;)V
@3.16.0
+#recordLevel()I
+#resultLevel()I

+###org/jooq/ExecuteListener
@2.0.5
+#start(Lorg/jooq/ExecuteContext;)V
+#renderStart(Lorg/jooq/ExecuteContext;)V
+#renderEnd(Lorg/jooq/ExecuteContext;)V
+#prepareStart(Lorg/jooq/ExecuteContext;)V
+#prepareEnd(Lorg/jooq/ExecuteContext;)V
+#bindStart(Lorg/jooq/ExecuteContext;)V
+#bindEnd(Lorg/jooq/ExecuteContext;)V
+#executeStart(Lorg/jooq/ExecuteContext;)V
+#executeEnd(Lorg/jooq/ExecuteContext;)V
+#fetchStart(Lorg/jooq/ExecuteContext;)V
+#resultStart(Lorg/jooq/ExecuteContext;)V
+#recordStart(Lorg/jooq/ExecuteContext;)V
+#recordEnd(Lorg/jooq/ExecuteContext;)V
+#resultEnd(Lorg/jooq/ExecuteContext;)V
+#fetchEnd(Lorg/jooq/ExecuteContext;)V
+#end(Lorg/jooq/ExecuteContext;)V
@2.3.0
+#exception(Lorg/jooq/ExecuteContext;)V
@3.4.0
+#warning(Lorg/jooq/ExecuteContext;)V
@3.6.0
+#outStart(Lorg/jooq/ExecuteContext;)V
+#outEnd(Lorg/jooq/ExecuteContext;)V
@3.15.0
+#onStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onRenderStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onRenderEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onPrepareStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onPrepareEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onBindStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onBindEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onExecuteStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onExecuteEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onOutStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onOutEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onFetchStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onFetchEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onResultStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onResultEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onRecordStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onRecordEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onException(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onWarning(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;

+###org/jooq/ExecuteListenerProvider
@3.0.0-RC3
+#provide()Lorg/jooq/ExecuteListener;

+###org/jooq/ExecuteType
@2.0.5
+#values()[Lorg/jooq/ExecuteType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/ExecuteType;

+###org/jooq/Field
@1.5.7
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/Class;
+#as(Ljava/lang/String;)Lorg/jooq/Field;
+#equals(Ljava/lang/Object;)Z
+#isNullLiteral()Z
+#cast(Lorg/jooq/Field;)Lorg/jooq/Field;
+#cast(Lorg/jooq/DataType;)Lorg/jooq/Field;
+#cast(Ljava/lang/Class;)Lorg/jooq/Field;
+#ascending()Lorg/jooq/SortField;
+#descending()Lorg/jooq/SortField;
+#add(Ljava/lang/Number;)Lorg/jooq/Field;
+#add(Lorg/jooq/Field;)Lorg/jooq/Field;
+#subtract(Ljava/lang/Number;)Lorg/jooq/Field;
+#subtract(Lorg/jooq/Field;)Lorg/jooq/Field;
+#multiply(Ljava/lang/Number;)Lorg/jooq/Field;
+#multiply(Lorg/jooq/Field;)Lorg/jooq/Field;
+#divide(Ljava/lang/Number;)Lorg/jooq/Field;
+#divide(Lorg/jooq/Field;)Lorg/jooq/Field;
+#count()Lorg/jooq/Field;
+#countDistinct()Lorg/jooq/Field;
+#max()Lorg/jooq/Field;
+#min()Lorg/jooq/Field;
+#sum()Lorg/jooq/Field;
+#avg()Lorg/jooq/Field;
+#abs()Lorg/jooq/Field;
+#round()Lorg/jooq/Field;
+#upper()Lorg/jooq/Field;
+#lower()Lorg/jooq/Field;
+#trim()Lorg/jooq/Field;
+#rtrim()Lorg/jooq/Field;
+#ltrim()Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rpad(I)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#rpad(IC)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;)Lorg/jooq/Field;
+#lpad(I)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#lpad(IC)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;)Lorg/jooq/Field;
+#replace(Ljava/lang/String;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#replace(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#position(Ljava/lang/String;)Lorg/jooq/Field;
+#position(Lorg/jooq/Field;)Lorg/jooq/Field;
+#ascii()Lorg/jooq/Field;
+#concatenate(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#concatenate(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/Field;
+#substring(I)Lorg/jooq/Field;
+#substring(II)Lorg/jooq/Field;
+#charLength()Lorg/jooq/Field;
+#bitLength()Lorg/jooq/Field;
+#octetLength()Lorg/jooq/Field;
+#extract(Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#nvl(Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl(Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl2(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl2(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nullif(Ljava/lang/Object;)Lorg/jooq/Field;
+#nullif(Lorg/jooq/Field;)Lorg/jooq/Field;
+#decode(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#decode(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#coalesce(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#coalesce(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#isNull()Lorg/jooq/Condition;
+#isNotNull()Lorg/jooq/Condition;
+#like(Ljava/lang/Object;)Lorg/jooq/Condition;
+#notLike(Ljava/lang/Object;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Ljava/lang/Object;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Ljava/lang/Object;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#equalAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#equalSome(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#equalAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqualAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqualSome(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqualAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThanAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThanSome(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThanAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqualToAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqualToSome(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqualToAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThanAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThanSome(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThanAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqualAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqualSome(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqualAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
@1.5.8
+#asc()Lorg/jooq/SortField;
+#desc()Lorg/jooq/SortField;
*#ascending()Lorg/jooq/SortField;[deprecated]
*#descending()Lorg/jooq/SortField;[deprecated]
+#sub(Ljava/lang/Number;)Lorg/jooq/Field;
+#sub(Lorg/jooq/Field;)Lorg/jooq/Field;
*#subtract(Ljava/lang/Number;)Lorg/jooq/Field;[deprecated]
*#subtract(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
+#mul(Ljava/lang/Number;)Lorg/jooq/Field;
+#mul(Lorg/jooq/Field;)Lorg/jooq/Field;
*#multiply(Ljava/lang/Number;)Lorg/jooq/Field;[deprecated]
*#multiply(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
+#div(Ljava/lang/Number;)Lorg/jooq/Field;
+#div(Lorg/jooq/Field;)Lorg/jooq/Field;
*#divide(Ljava/lang/Number;)Lorg/jooq/Field;[deprecated]
*#divide(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
+#mod(Ljava/lang/Number;)Lorg/jooq/Field;
+#mod(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sqrt()Lorg/jooq/Field;
+#exp()Lorg/jooq/Field;
+#ln()Lorg/jooq/Field;
+#log(I)Lorg/jooq/Field;
+#power(Ljava/lang/Number;)Lorg/jooq/Field;
+#round(I)Lorg/jooq/Field;
+#floor()Lorg/jooq/Field;
+#ceil()Lorg/jooq/Field;
+#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
+#concat([Ljava/lang/String;)Lorg/jooq/Field;
*#concatenate(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#concatenate(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
@1.5.9
+#sign()Lorg/jooq/Field;
+#acos()Lorg/jooq/Field;
+#asin()Lorg/jooq/Field;
+#atan()Lorg/jooq/Field;
+#cos()Lorg/jooq/Field;
+#sin()Lorg/jooq/Field;
+#tan()Lorg/jooq/Field;
+#cot()Lorg/jooq/Field;
+#sinh()Lorg/jooq/Field;
+#cosh()Lorg/jooq/Field;
+#tanh()Lorg/jooq/Field;
+#coth()Lorg/jooq/Field;
+#deg()Lorg/jooq/Field;
+#rad()Lorg/jooq/Field;
+#countOver()Lorg/jooq/WindowPartitionByStep;
+#maxOver()Lorg/jooq/WindowPartitionByStep;
+#minOver()Lorg/jooq/WindowPartitionByStep;
+#sumOver()Lorg/jooq/WindowPartitionByStep;
+#avgOver()Lorg/jooq/WindowPartitionByStep;
+#firstValue()Lorg/jooq/WindowIgnoreNullsStep;
+#lastValue()Lorg/jooq/WindowIgnoreNullsStep;
+#greatest([Ljava/lang/Object;)Lorg/jooq/Field;
+#greatest([Lorg/jooq/Field;)Lorg/jooq/Field;
+#least([Ljava/lang/Object;)Lorg/jooq/Field;
+#least([Lorg/jooq/Field;)Lorg/jooq/Field;
@1.6.0
+#sortAsc(Ljava/util/List;)Lorg/jooq/SortField;
+#sortAsc([Ljava/lang/Object;)Lorg/jooq/SortField;
+#sortDesc(Ljava/util/List;)Lorg/jooq/SortField;
+#sortDesc([Ljava/lang/Object;)Lorg/jooq/SortField;
+#sort(Ljava/util/Map;)Lorg/jooq/SortField;
+#neg()Lorg/jooq/Field;
+#atan2(Ljava/lang/Number;)Lorg/jooq/Field;
+#atan2(Lorg/jooq/Field;)Lorg/jooq/Field;
@1.6.1
+#lead()Lorg/jooq/WindowIgnoreNullsStep;
+#lead(I)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag()Lorg/jooq/WindowIgnoreNullsStep;
+#lag(I)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
@1.6.2
+#repeat(Ljava/lang/Number;)Lorg/jooq/Field;
+#repeat(Lorg/jooq/Field;)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#length()Lorg/jooq/Field;
@1.6.3
+#lessOrEqualAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqualSome(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqualAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
*#lessOrEqualToAny(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
*#lessOrEqualToSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
*#lessOrEqualToAll(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
@1.6.4
-#ascending()Lorg/jooq/SortField;[deprecated]
-#descending()Lorg/jooq/SortField;[deprecated]
-#subtract(Ljava/lang/Number;)Lorg/jooq/Field;[deprecated]
-#subtract(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
-#multiply(Ljava/lang/Number;)Lorg/jooq/Field;[deprecated]
-#multiply(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
-#divide(Ljava/lang/Number;)Lorg/jooq/Field;[deprecated]
-#divide(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
-#concatenate(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
-#concatenate(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
@1.6.8
+#sortAsc(Ljava/util/Collection;)Lorg/jooq/SortField;
+#sortDesc(Ljava/util/Collection;)Lorg/jooq/SortField;
+#median()Lorg/jooq/Field;
+#stddevPop()Lorg/jooq/Field;
+#stddevSamp()Lorg/jooq/Field;
+#varPop()Lorg/jooq/Field;
+#varSamp()Lorg/jooq/Field;
+#stddevPopOver()Lorg/jooq/WindowPartitionByStep;
+#stddevSampOver()Lorg/jooq/WindowPartitionByStep;
+#varPopOver()Lorg/jooq/WindowPartitionByStep;
+#varSampOver()Lorg/jooq/WindowPartitionByStep;
+#isTrue()Lorg/jooq/Condition;
+#isFalse()Lorg/jooq/Condition;
-#sortAsc(Ljava/util/List;)Lorg/jooq/SortField;
-#sortDesc(Ljava/util/List;)Lorg/jooq/SortField;
@2.0.0-RC1
+#like(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notLike(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#sign()Lorg/jooq/Field;
-#abs()Lorg/jooq/Field;
-#round()Lorg/jooq/Field;
-#round(I)Lorg/jooq/Field;
-#floor()Lorg/jooq/Field;
-#ceil()Lorg/jooq/Field;
-#sqrt()Lorg/jooq/Field;
-#exp()Lorg/jooq/Field;
-#ln()Lorg/jooq/Field;
-#log(I)Lorg/jooq/Field;
-#power(Ljava/lang/Number;)Lorg/jooq/Field;
-#acos()Lorg/jooq/Field;
-#asin()Lorg/jooq/Field;
-#atan()Lorg/jooq/Field;
-#atan2(Ljava/lang/Number;)Lorg/jooq/Field;
-#atan2(Lorg/jooq/Field;)Lorg/jooq/Field;
-#cos()Lorg/jooq/Field;
-#sin()Lorg/jooq/Field;
-#tan()Lorg/jooq/Field;
-#cot()Lorg/jooq/Field;
-#sinh()Lorg/jooq/Field;
-#cosh()Lorg/jooq/Field;
-#tanh()Lorg/jooq/Field;
-#coth()Lorg/jooq/Field;
-#deg()Lorg/jooq/Field;
-#rad()Lorg/jooq/Field;
-#count()Lorg/jooq/Field;
-#countDistinct()Lorg/jooq/Field;
-#max()Lorg/jooq/Field;
-#min()Lorg/jooq/Field;
-#sum()Lorg/jooq/Field;
-#avg()Lorg/jooq/Field;
-#median()Lorg/jooq/Field;
-#stddevPop()Lorg/jooq/Field;
-#stddevSamp()Lorg/jooq/Field;
-#varPop()Lorg/jooq/Field;
-#varSamp()Lorg/jooq/Field;
-#countOver()Lorg/jooq/WindowPartitionByStep;
-#maxOver()Lorg/jooq/WindowPartitionByStep;
-#minOver()Lorg/jooq/WindowPartitionByStep;
-#sumOver()Lorg/jooq/WindowPartitionByStep;
-#avgOver()Lorg/jooq/WindowPartitionByStep;
-#firstValue()Lorg/jooq/WindowIgnoreNullsStep;
-#lastValue()Lorg/jooq/WindowIgnoreNullsStep;
-#lead()Lorg/jooq/WindowIgnoreNullsStep;
-#lead(I)Lorg/jooq/WindowIgnoreNullsStep;
-#lead(ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
-#lead(ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
-#lag()Lorg/jooq/WindowIgnoreNullsStep;
-#lag(I)Lorg/jooq/WindowIgnoreNullsStep;
-#lag(ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
-#lag(ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
-#stddevPopOver()Lorg/jooq/WindowPartitionByStep;
-#stddevSampOver()Lorg/jooq/WindowPartitionByStep;
-#varPopOver()Lorg/jooq/WindowPartitionByStep;
-#varSampOver()Lorg/jooq/WindowPartitionByStep;
-#upper()Lorg/jooq/Field;
-#lower()Lorg/jooq/Field;
-#trim()Lorg/jooq/Field;
-#rtrim()Lorg/jooq/Field;
-#ltrim()Lorg/jooq/Field;
-#rpad(Lorg/jooq/Field;)Lorg/jooq/Field;
-#rpad(I)Lorg/jooq/Field;
-#rpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
-#rpad(IC)Lorg/jooq/Field;
-#lpad(Lorg/jooq/Field;)Lorg/jooq/Field;
-#lpad(I)Lorg/jooq/Field;
-#lpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
-#lpad(IC)Lorg/jooq/Field;
-#repeat(Ljava/lang/Number;)Lorg/jooq/Field;
-#repeat(Lorg/jooq/Field;)Lorg/jooq/Field;
-#replace(Lorg/jooq/Field;)Lorg/jooq/Field;
-#replace(Ljava/lang/String;)Lorg/jooq/Field;
-#replace(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
-#replace(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
-#position(Ljava/lang/String;)Lorg/jooq/Field;
-#position(Lorg/jooq/Field;)Lorg/jooq/Field;
-#ascii()Lorg/jooq/Field;
-#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
-#concat([Ljava/lang/String;)Lorg/jooq/Field;
-#substring(I)Lorg/jooq/Field;
-#substring(Lorg/jooq/Field;)Lorg/jooq/Field;
-#substring(II)Lorg/jooq/Field;
-#substring(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
-#length()Lorg/jooq/Field;
-#charLength()Lorg/jooq/Field;
-#bitLength()Lorg/jooq/Field;
-#octetLength()Lorg/jooq/Field;
-#extract(Lorg/jooq/DatePart;)Lorg/jooq/Field;
-#greatest([Ljava/lang/Object;)Lorg/jooq/Field;
-#greatest([Lorg/jooq/Field;)Lorg/jooq/Field;
-#least([Ljava/lang/Object;)Lorg/jooq/Field;
-#least([Lorg/jooq/Field;)Lorg/jooq/Field;
-#nvl(Ljava/lang/Object;)Lorg/jooq/Field;
-#nvl(Lorg/jooq/Field;)Lorg/jooq/Field;
-#nvl2(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
-#nvl2(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
-#nullif(Ljava/lang/Object;)Lorg/jooq/Field;
-#nullif(Lorg/jooq/Field;)Lorg/jooq/Field;
-#decode(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
-#decode(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
-#decode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
-#decode(Lorg/jooq/Field;Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
-#coalesce(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
-#coalesce(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
-#lessOrEqualToAny(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
-#lessOrEqualToSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
-#lessOrEqualToAll(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
@2.0.0
+#sign()Lorg/jooq/Field;
+#abs()Lorg/jooq/Field;
+#round()Lorg/jooq/Field;
+#round(I)Lorg/jooq/Field;
+#floor()Lorg/jooq/Field;
+#ceil()Lorg/jooq/Field;
+#sqrt()Lorg/jooq/Field;
+#exp()Lorg/jooq/Field;
+#ln()Lorg/jooq/Field;
+#log(I)Lorg/jooq/Field;
+#power(Ljava/lang/Number;)Lorg/jooq/Field;
+#acos()Lorg/jooq/Field;
+#asin()Lorg/jooq/Field;
+#atan()Lorg/jooq/Field;
+#atan2(Ljava/lang/Number;)Lorg/jooq/Field;
+#atan2(Lorg/jooq/Field;)Lorg/jooq/Field;
+#cos()Lorg/jooq/Field;
+#sin()Lorg/jooq/Field;
+#tan()Lorg/jooq/Field;
+#cot()Lorg/jooq/Field;
+#sinh()Lorg/jooq/Field;
+#cosh()Lorg/jooq/Field;
+#tanh()Lorg/jooq/Field;
+#coth()Lorg/jooq/Field;
+#deg()Lorg/jooq/Field;
+#rad()Lorg/jooq/Field;
+#count()Lorg/jooq/Field;
+#countDistinct()Lorg/jooq/Field;
+#max()Lorg/jooq/Field;
+#min()Lorg/jooq/Field;
+#sum()Lorg/jooq/Field;
+#avg()Lorg/jooq/Field;
+#median()Lorg/jooq/Field;
+#stddevPop()Lorg/jooq/Field;
+#stddevSamp()Lorg/jooq/Field;
+#varPop()Lorg/jooq/Field;
+#varSamp()Lorg/jooq/Field;
+#countOver()Lorg/jooq/WindowPartitionByStep;
+#maxOver()Lorg/jooq/WindowPartitionByStep;
+#minOver()Lorg/jooq/WindowPartitionByStep;
+#sumOver()Lorg/jooq/WindowPartitionByStep;
+#avgOver()Lorg/jooq/WindowPartitionByStep;
+#firstValue()Lorg/jooq/WindowIgnoreNullsStep;
+#lastValue()Lorg/jooq/WindowIgnoreNullsStep;
+#lead()Lorg/jooq/WindowIgnoreNullsStep;
+#lead(I)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag()Lorg/jooq/WindowIgnoreNullsStep;
+#lag(I)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#stddevPopOver()Lorg/jooq/WindowPartitionByStep;
+#stddevSampOver()Lorg/jooq/WindowPartitionByStep;
+#varPopOver()Lorg/jooq/WindowPartitionByStep;
+#varSampOver()Lorg/jooq/WindowPartitionByStep;
+#upper()Lorg/jooq/Field;
+#lower()Lorg/jooq/Field;
+#trim()Lorg/jooq/Field;
+#rtrim()Lorg/jooq/Field;
+#ltrim()Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rpad(I)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#rpad(IC)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;)Lorg/jooq/Field;
+#lpad(I)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#lpad(IC)Lorg/jooq/Field;
+#repeat(Ljava/lang/Number;)Lorg/jooq/Field;
+#repeat(Lorg/jooq/Field;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;)Lorg/jooq/Field;
+#replace(Ljava/lang/String;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#replace(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#position(Ljava/lang/String;)Lorg/jooq/Field;
+#position(Lorg/jooq/Field;)Lorg/jooq/Field;
+#ascii()Lorg/jooq/Field;
+#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
+#concat([Ljava/lang/String;)Lorg/jooq/Field;
+#substring(I)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;)Lorg/jooq/Field;
+#substring(II)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#length()Lorg/jooq/Field;
+#charLength()Lorg/jooq/Field;
+#bitLength()Lorg/jooq/Field;
+#octetLength()Lorg/jooq/Field;
+#extract(Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#greatest([Ljava/lang/Object;)Lorg/jooq/Field;
+#greatest([Lorg/jooq/Field;)Lorg/jooq/Field;
+#least([Ljava/lang/Object;)Lorg/jooq/Field;
+#least([Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl(Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl(Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl2(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl2(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nullif(Ljava/lang/Object;)Lorg/jooq/Field;
+#nullif(Lorg/jooq/Field;)Lorg/jooq/Field;
+#decode(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#decode(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#coalesce(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#coalesce(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
@2.0.2
+#equalAny([Ljava/lang/Object;)Lorg/jooq/Condition;
+#equalAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
*#equalSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
+#equalAll([Ljava/lang/Object;)Lorg/jooq/Condition;
+#equalAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqualAny([Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqualAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
*#notEqualSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
+#notEqualAll([Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqualAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThanAny([Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThanAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
*#lessThanSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
+#lessThanAll([Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThanAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqualAny([Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqualAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
*#lessOrEqualSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
+#lessOrEqualAll([Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqualAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThanAny([Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThanAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
*#greaterThanSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
+#greaterThanAll([Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThanAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqualAny([Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqualAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
*#greaterOrEqualSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
+#greaterOrEqualAll([Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqualAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
@2.0.3
+#like(Lorg/jooq/Field;C)Lorg/jooq/Condition;
+#like(Ljava/lang/Object;C)Lorg/jooq/Condition;
+#notLike(Lorg/jooq/Field;C)Lorg/jooq/Condition;
+#notLike(Ljava/lang/Object;C)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@2.0.4
+#contains(Ljava/lang/Object;)Lorg/jooq/Condition;
+#contains(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#startsWith(Ljava/lang/Object;)Lorg/jooq/Condition;
+#startsWith(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#endsWith(Ljava/lang/Object;)Lorg/jooq/Condition;
+#endsWith(Lorg/jooq/Field;)Lorg/jooq/Condition;
@2.0.5
+#like(Ljava/lang/String;)Lorg/jooq/Condition;
+#like(Ljava/lang/String;C)Lorg/jooq/Condition;
+#notLike(Ljava/lang/String;)Lorg/jooq/Condition;
+#notLike(Ljava/lang/String;C)Lorg/jooq/Condition;
+#equalIgnoreCase(Ljava/lang/String;)Lorg/jooq/Condition;
+#equalIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqualIgnoreCase(Ljava/lang/String;)Lorg/jooq/Condition;
+#notEqualIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#like(Ljava/lang/Object;)Lorg/jooq/Condition;
-#like(Ljava/lang/Object;C)Lorg/jooq/Condition;
-#notLike(Ljava/lang/Object;)Lorg/jooq/Condition;
-#notLike(Ljava/lang/Object;C)Lorg/jooq/Condition;
@2.4.0
+#likeIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#likeIgnoreCase(Lorg/jooq/Field;C)Lorg/jooq/Condition;
+#likeIgnoreCase(Ljava/lang/String;)Lorg/jooq/Condition;
+#likeIgnoreCase(Ljava/lang/String;C)Lorg/jooq/Condition;
+#notLikeIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notLikeIgnoreCase(Lorg/jooq/Field;C)Lorg/jooq/Condition;
+#notLikeIgnoreCase(Ljava/lang/String;)Lorg/jooq/Condition;
+#notLikeIgnoreCase(Ljava/lang/String;C)Lorg/jooq/Condition;
@2.5.0
+#isDistinctFrom(Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#likeRegex(Ljava/lang/String;)Lorg/jooq/Condition;
+#likeRegex(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notLikeRegex(Ljava/lang/String;)Lorg/jooq/Condition;
+#notLikeRegex(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
@2.6.0
+#getDataType()Lorg/jooq/DataType;
+#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
+#sort(Lorg/jooq/SortOrder;)Lorg/jooq/SortField;
+#between(Ljava/lang/Object;)Lorg/jooq/BetweenAndStep;
+#between(Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep;
+#betweenSymmetric(Ljava/lang/Object;)Lorg/jooq/BetweenAndStep;
+#betweenSymmetric(Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep;
+#notBetween(Ljava/lang/Object;)Lorg/jooq/BetweenAndStep;
+#notBetween(Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep;
+#notBetweenSymmetric(Ljava/lang/Object;)Lorg/jooq/BetweenAndStep;
+#notBetweenSymmetric(Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.0.0-RC1
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
-#isNullLiteral()Z
-#equalAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#equalAny([Ljava/lang/Object;)Lorg/jooq/Condition;
-#equalAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#equalSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
-#equalAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#equalAll([Ljava/lang/Object;)Lorg/jooq/Condition;
-#equalAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#notEqualAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#notEqualAny([Ljava/lang/Object;)Lorg/jooq/Condition;
-#notEqualAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#notEqualSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
-#notEqualAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#notEqualAll([Ljava/lang/Object;)Lorg/jooq/Condition;
-#notEqualAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#lessThanAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#lessThanAny([Ljava/lang/Object;)Lorg/jooq/Condition;
-#lessThanAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#lessThanSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
-#lessThanAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#lessThanAll([Ljava/lang/Object;)Lorg/jooq/Condition;
-#lessThanAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#lessOrEqualAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#lessOrEqualAny([Ljava/lang/Object;)Lorg/jooq/Condition;
-#lessOrEqualAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#lessOrEqualSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
-#lessOrEqualAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#lessOrEqualAll([Ljava/lang/Object;)Lorg/jooq/Condition;
-#lessOrEqualAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#greaterThanAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#greaterThanAny([Ljava/lang/Object;)Lorg/jooq/Condition;
-#greaterThanAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#greaterThanSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
-#greaterThanAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#greaterThanAll([Ljava/lang/Object;)Lorg/jooq/Condition;
-#greaterThanAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#greaterOrEqualAny(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#greaterOrEqualAny([Ljava/lang/Object;)Lorg/jooq/Condition;
-#greaterOrEqualAny(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#greaterOrEqualSome(Lorg/jooq/Select;)Lorg/jooq/Condition;[deprecated]
-#greaterOrEqualAll(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#greaterOrEqualAll([Ljava/lang/Object;)Lorg/jooq/Condition;
-#greaterOrEqualAll(Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.0.0-RC3
+#plus(Ljava/lang/Number;)Lorg/jooq/Field;
+#plus(Lorg/jooq/Field;)Lorg/jooq/Field;
+#subtract(Ljava/lang/Number;)Lorg/jooq/Field;
+#subtract(Lorg/jooq/Field;)Lorg/jooq/Field;
+#minus(Ljava/lang/Number;)Lorg/jooq/Field;
+#minus(Lorg/jooq/Field;)Lorg/jooq/Field;
+#multiply(Ljava/lang/Number;)Lorg/jooq/Field;
+#multiply(Lorg/jooq/Field;)Lorg/jooq/Field;
+#divide(Ljava/lang/Number;)Lorg/jooq/Field;
+#divide(Lorg/jooq/Field;)Lorg/jooq/Field;
+#modulo(Ljava/lang/Number;)Lorg/jooq/Field;
+#modulo(Lorg/jooq/Field;)Lorg/jooq/Field;
+#pow(Ljava/lang/Number;)Lorg/jooq/Field;
@3.1.0
+#coerce(Lorg/jooq/Field;)Lorg/jooq/Field;
+#coerce(Lorg/jooq/DataType;)Lorg/jooq/Field;
+#coerce(Ljava/lang/Class;)Lorg/jooq/Field;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
@3.3.0
+#getComment()Ljava/lang/String;
+#bitNot()Lorg/jooq/Field;
+#bitAnd(Ljava/lang/Object;)Lorg/jooq/Field;
+#bitAnd(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNand(Ljava/lang/Object;)Lorg/jooq/Field;
+#bitNand(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitOr(Ljava/lang/Object;)Lorg/jooq/Field;
+#bitOr(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNor(Ljava/lang/Object;)Lorg/jooq/Field;
+#bitNor(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitXor(Ljava/lang/Object;)Lorg/jooq/Field;
+#bitXor(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitXNor(Ljava/lang/Object;)Lorg/jooq/Field;
+#bitXNor(Lorg/jooq/Field;)Lorg/jooq/Field;
+#shl(Ljava/lang/Object;)Lorg/jooq/Field;
+#shl(Lorg/jooq/Field;)Lorg/jooq/Field;
+#shr(Ljava/lang/Object;)Lorg/jooq/Field;
+#shr(Lorg/jooq/Field;)Lorg/jooq/Field;
@3.3.2
+#getConverter()Lorg/jooq/Converter;
@3.5.0
+#getBinding()Lorg/jooq/Binding;
+#as(Lorg/jooq/Field;)Lorg/jooq/Field;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.7.0
+#shl(Ljava/lang/Number;)Lorg/jooq/Field;
+#shr(Ljava/lang/Number;)Lorg/jooq/Field;
-#shl(Ljava/lang/Object;)Lorg/jooq/Field;
-#shr(Ljava/lang/Object;)Lorg/jooq/Field;
@3.9.0
+#as(Ljava/util/function/Function;)Lorg/jooq/Field;
+#like(Lorg/jooq/Field;)Lorg/jooq/LikeEscapeStep;
+#like(Ljava/lang/String;)Lorg/jooq/LikeEscapeStep;
+#likeIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/LikeEscapeStep;
+#likeIgnoreCase(Ljava/lang/String;)Lorg/jooq/LikeEscapeStep;
+#notLike(Lorg/jooq/Field;)Lorg/jooq/LikeEscapeStep;
+#notLike(Ljava/lang/String;)Lorg/jooq/LikeEscapeStep;
+#notLikeIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/LikeEscapeStep;
+#notLikeIgnoreCase(Ljava/lang/String;)Lorg/jooq/LikeEscapeStep;
+#field(Lorg/jooq/Record;)Lorg/jooq/Field;
+#get(Lorg/jooq/Record;)Ljava/lang/Object;
+#getValue(Lorg/jooq/Record;)Ljava/lang/Object;
+#original(Lorg/jooq/Record;)Ljava/lang/Object;
+#changed(Lorg/jooq/Record;)Z
+#reset(Lorg/jooq/Record;)V
+#from(Lorg/jooq/Record;)Lorg/jooq/Record1;
-#like(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#like(Ljava/lang/String;)Lorg/jooq/Condition;
-#likeIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#likeIgnoreCase(Ljava/lang/String;)Lorg/jooq/Condition;
-#notLike(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#notLike(Ljava/lang/String;)Lorg/jooq/Condition;
-#notLikeIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/Condition;
-#notLikeIgnoreCase(Ljava/lang/String;)Lorg/jooq/Condition;
@3.10.0
+#getQualifiedName()Lorg/jooq/Name;
+#getUnqualifiedName()Lorg/jooq/Name;
+#as(Lorg/jooq/Name;)Lorg/jooq/Field;
+#sortDefault()Lorg/jooq/SortField;
+#unaryMinus()Lorg/jooq/Field;
+#unaryPlus()Lorg/jooq/Field;
+#times(Ljava/lang/Number;)Lorg/jooq/Field;
+#times(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rem(Ljava/lang/Number;)Lorg/jooq/Field;
+#rem(Lorg/jooq/Field;)Lorg/jooq/Field;
+#pow(Lorg/jooq/Field;)Lorg/jooq/Field;
+#power(Lorg/jooq/Field;)Lorg/jooq/Field;
+#notContains(Ljava/lang/Object;)Lorg/jooq/Condition;
+#notContains(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#containsIgnoreCase(Ljava/lang/Object;)Lorg/jooq/Condition;
+#containsIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notContainsIgnoreCase(Ljava/lang/Object;)Lorg/jooq/Condition;
+#notContainsIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.11.0
*#sign()Lorg/jooq/Field;[deprecated]
*#abs()Lorg/jooq/Field;[deprecated]
*#round()Lorg/jooq/Field;[deprecated]
*#round(I)Lorg/jooq/Field;[deprecated]
*#floor()Lorg/jooq/Field;[deprecated]
*#ceil()Lorg/jooq/Field;[deprecated]
*#sqrt()Lorg/jooq/Field;[deprecated]
*#exp()Lorg/jooq/Field;[deprecated]
*#ln()Lorg/jooq/Field;[deprecated]
*#log(I)Lorg/jooq/Field;[deprecated]
*#acos()Lorg/jooq/Field;[deprecated]
*#asin()Lorg/jooq/Field;[deprecated]
*#atan()Lorg/jooq/Field;[deprecated]
*#atan2(Ljava/lang/Number;)Lorg/jooq/Field;[deprecated]
*#atan2(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#cos()Lorg/jooq/Field;[deprecated]
*#sin()Lorg/jooq/Field;[deprecated]
*#tan()Lorg/jooq/Field;[deprecated]
*#cot()Lorg/jooq/Field;[deprecated]
*#sinh()Lorg/jooq/Field;[deprecated]
*#cosh()Lorg/jooq/Field;[deprecated]
*#tanh()Lorg/jooq/Field;[deprecated]
*#coth()Lorg/jooq/Field;[deprecated]
*#deg()Lorg/jooq/Field;[deprecated]
*#rad()Lorg/jooq/Field;[deprecated]
*#count()Lorg/jooq/Field;[deprecated]
*#countDistinct()Lorg/jooq/Field;[deprecated]
*#max()Lorg/jooq/Field;[deprecated]
*#min()Lorg/jooq/Field;[deprecated]
*#sum()Lorg/jooq/Field;[deprecated]
*#avg()Lorg/jooq/Field;[deprecated]
*#median()Lorg/jooq/Field;[deprecated]
*#stddevPop()Lorg/jooq/Field;[deprecated]
*#stddevSamp()Lorg/jooq/Field;[deprecated]
*#varPop()Lorg/jooq/Field;[deprecated]
*#varSamp()Lorg/jooq/Field;[deprecated]
*#countOver()Lorg/jooq/WindowPartitionByStep;[deprecated]
*#maxOver()Lorg/jooq/WindowPartitionByStep;[deprecated]
*#minOver()Lorg/jooq/WindowPartitionByStep;[deprecated]
*#sumOver()Lorg/jooq/WindowPartitionByStep;[deprecated]
*#avgOver()Lorg/jooq/WindowPartitionByStep;[deprecated]
*#firstValue()Lorg/jooq/WindowIgnoreNullsStep;[deprecated]
*#lastValue()Lorg/jooq/WindowIgnoreNullsStep;[deprecated]
*#lead()Lorg/jooq/WindowIgnoreNullsStep;[deprecated]
*#lead(I)Lorg/jooq/WindowIgnoreNullsStep;[deprecated]
*#lead(ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;[deprecated]
*#lead(ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;[deprecated]
*#lag()Lorg/jooq/WindowIgnoreNullsStep;[deprecated]
*#lag(I)Lorg/jooq/WindowIgnoreNullsStep;[deprecated]
*#lag(ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;[deprecated]
*#lag(ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;[deprecated]
*#stddevPopOver()Lorg/jooq/WindowPartitionByStep;[deprecated]
*#stddevSampOver()Lorg/jooq/WindowPartitionByStep;[deprecated]
*#varPopOver()Lorg/jooq/WindowPartitionByStep;[deprecated]
*#varSampOver()Lorg/jooq/WindowPartitionByStep;[deprecated]
+#collate(Ljava/lang/String;)Lorg/jooq/Field;
+#collate(Lorg/jooq/Name;)Lorg/jooq/Field;
+#collate(Lorg/jooq/Collation;)Lorg/jooq/Field;
+#concat([C)Lorg/jooq/Field;
*#extract(Lorg/jooq/DatePart;)Lorg/jooq/Field;[deprecated]
*#greatest([Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#greatest([Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#least([Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#least([Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
-#getQualifiedName()Lorg/jooq/Name;
-#getUnqualifiedName()Lorg/jooq/Name;
@3.12.0
+#isJson()Lorg/jooq/Condition;
+#isNotJson()Lorg/jooq/Condition;
+#similarTo(Lorg/jooq/Field;)Lorg/jooq/LikeEscapeStep;
+#similarTo(Lorg/jooq/Field;C)Lorg/jooq/Condition;
+#similarTo(Ljava/lang/String;)Lorg/jooq/LikeEscapeStep;
+#similarTo(Ljava/lang/String;C)Lorg/jooq/Condition;
+#notSimilarTo(Lorg/jooq/Field;)Lorg/jooq/LikeEscapeStep;
+#notSimilarTo(Lorg/jooq/Field;C)Lorg/jooq/Condition;
+#notSimilarTo(Ljava/lang/String;)Lorg/jooq/LikeEscapeStep;
+#notSimilarTo(Ljava/lang/String;C)Lorg/jooq/Condition;
+#like(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/LikeEscapeStep;
+#notLike(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/LikeEscapeStep;
+#startsWithIgnoreCase(Ljava/lang/Object;)Lorg/jooq/Condition;
+#startsWithIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#endsWithIgnoreCase(Ljava/lang/Object;)Lorg/jooq/Condition;
+#endsWithIgnoreCase(Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.13.0
*#upper()Lorg/jooq/Field;[deprecated]
*#lower()Lorg/jooq/Field;[deprecated]
*#trim()Lorg/jooq/Field;[deprecated]
*#rtrim()Lorg/jooq/Field;[deprecated]
*#ltrim()Lorg/jooq/Field;[deprecated]
*#rpad(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#rpad(I)Lorg/jooq/Field;[deprecated]
*#rpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#rpad(IC)Lorg/jooq/Field;[deprecated]
*#lpad(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#lpad(I)Lorg/jooq/Field;[deprecated]
*#lpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#lpad(IC)Lorg/jooq/Field;[deprecated]
*#repeat(Ljava/lang/Number;)Lorg/jooq/Field;[deprecated]
*#repeat(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#replace(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#replace(Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#replace(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#replace(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#position(Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#position(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#ascii()Lorg/jooq/Field;[deprecated]
*#substring(I)Lorg/jooq/Field;[deprecated]
*#substring(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#substring(II)Lorg/jooq/Field;[deprecated]
*#substring(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#length()Lorg/jooq/Field;[deprecated]
*#charLength()Lorg/jooq/Field;[deprecated]
*#bitLength()Lorg/jooq/Field;[deprecated]
*#octetLength()Lorg/jooq/Field;[deprecated]
*#nvl(Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#nvl(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#nvl2(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#nvl2(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#nullif(Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#nullif(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#decode(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#decode(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#decode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#decode(Lorg/jooq/Field;Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#coalesce(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#coalesce(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
-#getConverter()Lorg/jooq/Converter;
-#getBinding()Lorg/jooq/Binding;
-#getType()Ljava/lang/Class;
-#getDataType()Lorg/jooq/DataType;
-#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
@3.14.0
*#as(Ljava/util/function/Function;)Lorg/jooq/Field;[deprecated]
+#isDocument()Lorg/jooq/Condition;
+#isNotDocument()Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#convert(Lorg/jooq/Binding;)Lorg/jooq/Field;
+#convert(Lorg/jooq/Converter;)Lorg/jooq/Field;
+#convert(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Function;)Lorg/jooq/Field;
+#convertFrom(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/Field;
+#convertFrom(Ljava/util/function/Function;)Lorg/jooq/Field;
+#convertTo(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/Field;
+#convertTo(Ljava/util/function/Function;)Lorg/jooq/Field;
-#as(Ljava/lang/String;)Lorg/jooq/Field;
-#as(Lorg/jooq/Name;)Lorg/jooq/Field;
-#as(Lorg/jooq/Field;)Lorg/jooq/Field;
@3.17.0
+#as(Ljava/lang/String;)Lorg/jooq/Field;
+#as(Lorg/jooq/Name;)Lorg/jooq/Field;
+#as(Lorg/jooq/Field;)Lorg/jooq/Field;
+#convertTo(Ljava/util/function/Function;)Lorg/jooq/SelectField;
+#convertTo(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/SelectField;
+#convertFrom(Ljava/util/function/Function;)Lorg/jooq/SelectField;
+#convertFrom(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/SelectField;
+#convert(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Function;)Lorg/jooq/SelectField;
+#convert(Lorg/jooq/Converter;)Lorg/jooq/SelectField;
+#convert(Lorg/jooq/Binding;)Lorg/jooq/SelectField;
+#as(Lorg/jooq/Field;)Lorg/jooq/SelectField;
+#as(Lorg/jooq/Name;)Lorg/jooq/SelectField;
+#as(Ljava/lang/String;)Lorg/jooq/SelectField;

+###org/jooq/FieldLike
@1.5.7
+#asField()Lorg/jooq/Field;
+#asField(Ljava/lang/String;)Lorg/jooq/Field;
@3.9.0
+#asField(Ljava/util/function/Function;)Lorg/jooq/Field;
@3.14.0
*#asField(Ljava/util/function/Function;)Lorg/jooq/Field;[deprecated]

+###org/jooq/ForeignKey
@1.5.9
+#getKey()Lorg/jooq/UniqueKey;
@3.0.0-RC1
+#fetchParent(Lorg/jooq/Record;)Lorg/jooq/Record;
+#fetchParents([Lorg/jooq/Record;)Lorg/jooq/Result;
+#fetchParents(Ljava/util/Collection;)Lorg/jooq/Result;
+#fetchChildren(Lorg/jooq/Record;)Lorg/jooq/Result;
+#fetchChildren([Lorg/jooq/Record;)Lorg/jooq/Result;
+#fetchChildren(Ljava/util/Collection;)Lorg/jooq/Result;
@3.14.0
+#getKeyFields()Ljava/util/List;
+#getKeyFieldsArray()[Lorg/jooq/TableField;
+#parent(Lorg/jooq/Record;)Lorg/jooq/Table;
+#parents([Lorg/jooq/Record;)Lorg/jooq/Table;
+#parents(Ljava/util/Collection;)Lorg/jooq/Table;
+#children(Lorg/jooq/Record;)Lorg/jooq/Table;
+#children([Lorg/jooq/Record;)Lorg/jooq/Table;
+#children(Ljava/util/Collection;)Lorg/jooq/Table;

+###org/jooq/FutureResult
@1.6.4
@3.15.0
-###org/jooq/FutureResult

+###org/jooq/GroupConcatOrderByStep
@2.2.0
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/GroupConcatSeparatorStep;
+#orderBy([Lorg/jooq/SortField;)Lorg/jooq/GroupConcatSeparatorStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/GroupConcatSeparatorStep;
@3.10.0
+#orderBy([Lorg/jooq/OrderField;)Lorg/jooq/GroupConcatSeparatorStep;
-#orderBy([Lorg/jooq/Field;)Lorg/jooq/GroupConcatSeparatorStep;
-#orderBy([Lorg/jooq/SortField;)Lorg/jooq/GroupConcatSeparatorStep;

+###org/jooq/GroupConcatSeparatorStep
@2.2.0
+#separator(Ljava/lang/String;)Lorg/jooq/AggregateFunction;

+###org/jooq/GroupField
@3.0.0-RC1

+###org/jooq/Identity
@1.5.9
+#getTable()Lorg/jooq/Table;
+#getField()Lorg/jooq/Field;
@2.0.1
+#getField()Lorg/jooq/TableField;
-#getField()Lorg/jooq/Field;

+###org/jooq/impl/AbstractKeys
@1.5.9
+#<init>()V
@3.10.5
+#createIndex(Ljava/lang/String;Lorg/jooq/Table;[Lorg/jooq/OrderField;Z)Lorg/jooq/Index;[deprecated]
+#createIdentity(Lorg/jooq/Table;Lorg/jooq/TableField;)Lorg/jooq/Identity;[deprecated]
+#createUniqueKey(Lorg/jooq/Table;[Lorg/jooq/TableField;)Lorg/jooq/UniqueKey;[deprecated]
+#createUniqueKey(Lorg/jooq/Table;Ljava/lang/String;[Lorg/jooq/TableField;)Lorg/jooq/UniqueKey;[deprecated]
+#createForeignKey(Lorg/jooq/UniqueKey;Lorg/jooq/Table;[Lorg/jooq/TableField;)Lorg/jooq/ForeignKey;[deprecated]
+#createForeignKey(Lorg/jooq/UniqueKey;Lorg/jooq/Table;Ljava/lang/String;[Lorg/jooq/TableField;)Lorg/jooq/ForeignKey;[deprecated]

+###org/jooq/impl/AbstractRoutine
@1.6.8
+#attach(Lorg/jooq/Configuration;)V
+#execute(Lorg/jooq/Configuration;)I
+#execute()I
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
+#getReturnValue()Ljava/lang/Object;
+#getOutParameters()Ljava/util/List;
+#getInParameters()Ljava/util/List;
+#getParameters()Ljava/util/List;
+#getPackage()Lorg/jooq/Package;
+#asField()Lorg/jooq/Field;
+#asField(Ljava/lang/String;)Lorg/jooq/Field;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#declaresTables()Z
+#declaresFields()Z
@2.5.0
+#getAttachables()Ljava/util/List;
+#getConfiguration()Lorg/jooq/Configuration;
+#asAggregateFunction()Lorg/jooq/AggregateFunction;
@3.0.0-RC1
+#getSchema()Lorg/jooq/Schema;
+#getName()Ljava/lang/String;
-#getAttachables()Ljava/util/List;
@3.0.0-RC3
+#configuration()Lorg/jooq/Configuration;
-#getConfiguration()Lorg/jooq/Configuration;
@3.2.0-alpha-01
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
@3.2.0
+#detach()V
@3.3.0
+#declaresWindows()Z
@3.4.0
+#accept(Lorg/jooq/Context;)V
+#declaresCTE()Z
@3.4.6
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.5.0
+#getResults()Ljava/util/List;
@3.5.2
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.6.0
+#setValue(Lorg/jooq/Parameter;Ljava/lang/Object;)V
+#getValue(Lorg/jooq/Parameter;)Ljava/lang/Object;
+#getReturnParameter()Lorg/jooq/Parameter;
@3.6.1
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.7.0
+#getResults()Lorg/jooq/Results;
+#generatesCast()Z
-#getResults()Ljava/util/List;
@3.8.0
+#set(Lorg/jooq/Parameter;Ljava/lang/Object;)V
+#get(Lorg/jooq/Parameter;)Ljava/lang/Object;
-#bind(Lorg/jooq/BindContext;)V[deprecated]
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.9.0
+#getCatalog()Lorg/jooq/Catalog;
@3.11.0
-#getPackage()Lorg/jooq/Package;
-#getName()Ljava/lang/String;
@3.12.3
+#getQualifiedName()Lorg/jooq/Name;
@3.14.0
+#getInValue(Lorg/jooq/Parameter;)Ljava/lang/Object;
+#rendersContent(Lorg/jooq/Context;)Z
@3.16.0
+#$schema()Lorg/jooq/Schema;

+###org/jooq/impl/ArrayRecordImpl
@1.5.7
+#getAttachables()Ljava/util/List;
+#getValue(I)Ljava/lang/Object;
+#get()[Ljava/lang/Object;
+#getList()Ljava/util/List;
+#set([Ljava/lang/Object;)V
+#set(Ljava/sql/Array;)V
+#setList(Ljava/util/List;)V
+#size()I
+#getName()Ljava/lang/String;
+#getDataType()Lorg/jooq/DataType;
+#createArray()Ljava/sql/Array;
+#toString()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
@1.6.2
+#hashCode()I
@1.6.7
+#equals(Ljava/lang/Object;)Z
@2.5.0
*#createArray()Ljava/sql/Array;[deprecated]
@3.0.0-RC1
-#getAttachables()Ljava/util/List;
-#getValue(I)Ljava/lang/Object;
-#createArray()Ljava/sql/Array;[deprecated]
@3.2.0
-###org/jooq/impl/ArrayRecordImpl

+###org/jooq/impl/CatalogImpl
@3.0.0-RC1
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
+#getSchema(Ljava/lang/String;)Lorg/jooq/Schema;
+#getSchemas()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#declaresTables()Z
+#declaresFields()Z
@3.2.0-alpha-01
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
@3.3.0
+#declaresWindows()Z
@3.4.0
+#accept(Lorg/jooq/Context;)V
+#declaresCTE()Z
@3.4.6
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.5.2
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.6.1
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.7.0
+#generatesCast()Z
@3.8.0
-#bind(Lorg/jooq/BindContext;)V[deprecated]
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.9.0
+#schemaStream()Ljava/util/stream/Stream;
@3.10.0
+#<init>(Lorg/jooq/Name;)V
+#getQualifiedName()Lorg/jooq/Name;
+#getUnqualifiedName()Lorg/jooq/Name;
@3.11.0
+#<init>(Lorg/jooq/Name;Lorg/jooq/Comment;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
-#getName()Ljava/lang/String;
-#getQualifiedName()Lorg/jooq/Name;
-#getUnqualifiedName()Lorg/jooq/Name;
@3.12.3
+#getQualifiedName()Lorg/jooq/Name;
@3.14.0
+#getSchema(Lorg/jooq/Name;)Lorg/jooq/Schema;
+#rendersContent(Lorg/jooq/Context;)Z

+###org/jooq/impl/CustomCondition
@1.5.7
+#getAttachables()Ljava/util/List;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.0
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
+#attach(Lorg/jooq/Configuration;)V
@1.6.4
+#declaresTables()Z
+#declaresFields()Z
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.0.0-RC1
+#toSQL(Lorg/jooq/RenderContext;)V
+#bind(Lorg/jooq/BindContext;)V
@2.5.0
*#attach(Lorg/jooq/Configuration;)V[deprecated]
-#getAttachables()Ljava/util/List;
@3.0.0-RC1
-#attach(Lorg/jooq/Configuration;)V[deprecated]
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.2.0-alpha-01
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
@3.3.0
+#declaresWindows()Z
@3.4.0
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
+#accept(Lorg/jooq/Context;)V
*#bind(Lorg/jooq/BindContext;)V[deprecated]
+#declaresCTE()Z
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/Condition;
+#generatesCast()Z
@3.8.0
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
-#bind(Lorg/jooq/BindContext;)V[deprecated]
@3.14.0
+#not()Lorg/jooq/Condition;
+#rendersContent(Lorg/jooq/Context;)Z
@3.15.0
+#of(Ljava/util/function/Consumer;)Lorg/jooq/impl/CustomCondition;
-#and(Ljava/lang/Boolean;)Lorg/jooq/Condition;
@3.16.0
-#not()Lorg/jooq/Condition;
@3.17.0
+#as(Lorg/jooq/Name;)Lorg/jooq/Field;
+#getQualifiedName()Lorg/jooq/Name;

+###org/jooq/impl/CustomField
@1.5.7
+#as(Ljava/lang/String;)Lorg/jooq/Field;
+#add(Lorg/jooq/Field;)Lorg/jooq/Field;
+#multiply(Lorg/jooq/Field;)Lorg/jooq/Field;
+#concatenate(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#isNullLiteral()Z
+#getAttachables()Ljava/util/List;
+#as(Ljava/lang/String;)Lorg/jooq/AliasProvider;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.5.8
+#mul(Lorg/jooq/Field;)Lorg/jooq/Field;
+#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
-#multiply(Lorg/jooq/Field;)Lorg/jooq/Field;
-#concatenate(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
-#as(Ljava/lang/String;)Lorg/jooq/AliasProvider;
@1.6.0
+#as(Ljava/lang/String;)Lorg/jooq/AliasProvider;
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
+#attach(Lorg/jooq/Configuration;)V
-#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
@1.6.4
+#declaresTables()Z
+#declaresFields()Z
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.0.0-RC1
+#toSQL(Lorg/jooq/RenderContext;)V
+#bind(Lorg/jooq/BindContext;)V
@2.5.0
*#attach(Lorg/jooq/Configuration;)V[deprecated]
-#getAttachables()Ljava/util/List;
@3.0.0-RC1
-#isNullLiteral()Z
-#attach(Lorg/jooq/Configuration;)V[deprecated]
-#as(Ljava/lang/String;)Lorg/jooq/AliasProvider;
@3.2.0-alpha-01
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
@3.3.0
+#declaresWindows()Z
@3.4.0
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
+#accept(Lorg/jooq/Context;)V
*#bind(Lorg/jooq/BindContext;)V[deprecated]
+#declaresCTE()Z
@3.7.0
+#generatesCast()Z
@3.8.0
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
-#bind(Lorg/jooq/BindContext;)V[deprecated]
@3.10.0
+#as(Lorg/jooq/Name;)Lorg/jooq/Field;
-#as(Ljava/lang/String;)Lorg/jooq/Field;
@3.12.0
+#notLike(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/LikeEscapeStep;
+#like(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/LikeEscapeStep;
@3.12.3
+#getQualifiedName()Lorg/jooq/Name;
@3.13.2
-#notLike(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/LikeEscapeStep;
-#like(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/LikeEscapeStep;
@3.14.0
+#rendersContent(Lorg/jooq/Context;)Z
-#mul(Lorg/jooq/Field;)Lorg/jooq/Field;
-#add(Lorg/jooq/Field;)Lorg/jooq/Field;
@3.15.0
+#of(Ljava/lang/String;Lorg/jooq/DataType;Ljava/util/function/Consumer;)Lorg/jooq/impl/CustomField;
+#of(Lorg/jooq/Name;Lorg/jooq/DataType;Ljava/util/function/Consumer;)Lorg/jooq/impl/CustomField;
@3.17.0
+#as(Lorg/jooq/Name;)Lorg/jooq/SelectField;

+###org/jooq/impl/CustomRecord
@2.0.0-RC1
+#getTable()Lorg/jooq/Table;
@3.0.0-RC3
-#getTable()Lorg/jooq/Table;

+###org/jooq/impl/CustomTable
@2.0.0-RC1
+#getRecordType()Ljava/lang/Class;
+#attach(Lorg/jooq/Configuration;)V
+#getIdentity()Lorg/jooq/Identity;
+#getReferences()Ljava/util/List;
+#declaresFields()Z
+#declaresTables()Z
@2.5.0
*#attach(Lorg/jooq/Configuration;)V[deprecated]
@3.0.0-RC1
-#attach(Lorg/jooq/Configuration;)V[deprecated]
@3.0.0-RC3
+#getPrimaryKey()Lorg/jooq/UniqueKey;
+#getKeys()Ljava/util/List;
@3.15.0
+#getUniqueKeys()Ljava/util/List;
-#getKeys()Ljava/util/List;

+###org/jooq/impl/DAOImpl
@2.4.0
+#setFactory(Lorg/jooq/impl/Factory;)V
+#insert(Ljava/lang/Object;)V
+#insert([Ljava/lang/Object;)V
+#insert(Ljava/util/Collection;)V
+#update(Ljava/lang/Object;)V
+#update([Ljava/lang/Object;)V
+#update(Ljava/util/Collection;)V
+#delete([Ljava/lang/Object;)V
+#delete(Ljava/util/Collection;)V
+#deleteById([Ljava/lang/Object;)V
+#deleteById(Ljava/util/Collection;)V
+#exists(Ljava/lang/Object;)Z
+#existsById(Ljava/lang/Object;)Z
+#count()J
+#findAll()Ljava/util/List;
+#findById(Ljava/lang/Object;)Ljava/lang/Object;
+#getTable()Lorg/jooq/Table;
+#getType()Ljava/lang/Class;
@2.5.0
+#fetch(Lorg/jooq/Field;[Ljava/lang/Object;)Ljava/util/List;
+#fetchOne(Lorg/jooq/Field;Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0-RC1
+#setFactory(Lorg/jooq/impl/Executor;)V
-#setFactory(Lorg/jooq/impl/Factory;)V
@3.0.0-RC3
+#setConfiguration(Lorg/jooq/Configuration;)V
+#configuration()Lorg/jooq/Configuration;
-#setFactory(Lorg/jooq/impl/Executor;)V
@3.2.0-alpha-01
+#mapper()Lorg/jooq/RecordMapper;
@3.5.0
+#settings()Lorg/jooq/conf/Settings;
+#dialect()Lorg/jooq/SQLDialect;
+#family()Lorg/jooq/SQLDialect;
@3.7.0
+#fetchOptional(Lorg/jooq/Field;Ljava/lang/Object;)Ljava/util/Optional;
@3.9.0
+#delete(Ljava/lang/Object;)V
@3.12.0
+#fetchRange(Lorg/jooq/Field;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/List;
@3.12.4
+#ctx()Lorg/jooq/DSLContext;
@3.14.0
+#merge(Ljava/lang/Object;)V
+#merge([Ljava/lang/Object;)V
+#merge(Ljava/util/Collection;)V
@3.15.0
+#fetch(Lorg/jooq/Field;Ljava/util/Collection;)Ljava/util/List;
@3.16.0
+#findOptionalById(Ljava/lang/Object;)Ljava/util/Optional;
@3.17.0
+#deleteById(Ljava/lang/Object;)V

+###org/jooq/impl/DataSourceConnectionProvider
@3.0.0-RC1
+#<init>(Ljavax/sql/DataSource;)V
+#acquire()Ljava/sql/Connection;
+#release(Ljava/sql/Connection;)V
@3.1.0
+#dataSource()Ljavax/sql/DataSource;

+###org/jooq/impl/DefaultConfiguration
@3.0.0-RC3
+#<init>()V
+#derive()Lorg/jooq/Configuration;
+#derive(Lorg/jooq/SQLDialect;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/ConnectionProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/conf/Settings;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/ExecuteListenerProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/SQLDialect;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/ConnectionProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/conf/Settings;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/ExecuteListenerProvider;)Lorg/jooq/Configuration;
+#dialect()Lorg/jooq/SQLDialect;
+#connectionProvider()Lorg/jooq/ConnectionProvider;
+#schemaMapping()Lorg/jooq/SchemaMapping;[deprecated]
+#settings()Lorg/jooq/conf/Settings;
+#data()Ljava/util/concurrent/ConcurrentHashMap;
+#data(Ljava/lang/Object;)Ljava/lang/Object;
+#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#executeListenerProviders()[Lorg/jooq/ExecuteListenerProvider;
+#toString()Ljava/lang/String;
+#data()Ljava/util/Map;
@3.1.0
+#derive(Lorg/jooq/RecordMapperProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordMapperProvider;)Lorg/jooq/Configuration;
+#recordMapperProvider()Lorg/jooq/RecordMapperProvider;
@3.2.0-alpha-01
+#derive([Lorg/jooq/RecordListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/VisitListenerProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/RecordListenerProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/VisitListenerProvider;)Lorg/jooq/Configuration;
+#recordListenerProviders()[Lorg/jooq/RecordListenerProvider;
+#visitListenerProviders()[Lorg/jooq/VisitListenerProvider;
@3.3.0
+#derive(Ljava/sql/Connection;)Lorg/jooq/Configuration;
+#derive(Ljavax/sql/DataSource;)Lorg/jooq/Configuration;
+#set(Ljava/sql/Connection;)Lorg/jooq/Configuration;
+#set(Ljavax/sql/DataSource;)Lorg/jooq/Configuration;
@3.4.0
+#derive(Lorg/jooq/TransactionProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/TransactionProvider;)Lorg/jooq/Configuration;
+#transactionProvider()Lorg/jooq/TransactionProvider;
@3.5.0
+#setConnection(Ljava/sql/Connection;)V
+#setDataSource(Ljavax/sql/DataSource;)V
+#setConnectionProvider(Lorg/jooq/ConnectionProvider;)V
+#setTransactionProvider(Lorg/jooq/TransactionProvider;)V
+#setRecordMapperProvider(Lorg/jooq/RecordMapperProvider;)V
+#setRecordListenerProvider([Lorg/jooq/RecordListenerProvider;)V
+#setExecuteListenerProvider([Lorg/jooq/ExecuteListenerProvider;)V
+#setVisitListenerProvider([Lorg/jooq/VisitListenerProvider;)V
+#setSQLDialect(Lorg/jooq/SQLDialect;)V
+#setSettings(Lorg/jooq/conf/Settings;)V
+#family()Lorg/jooq/SQLDialect;
@3.6.0
+#derive(Lorg/jooq/ConverterProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/ConverterProvider;)Lorg/jooq/Configuration;
+#converterProvider()Lorg/jooq/ConverterProvider;
@3.8.0
+#derive(Lorg/jooq/ExecutorProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/ExecutorProvider;)Lorg/jooq/Configuration;
+#setExecutorProvider(Lorg/jooq/ExecutorProvider;)V
+#executorProvider()Lorg/jooq/ExecutorProvider;
@3.9.0
+#derive(Ljava/util/concurrent/Executor;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/RecordMapper;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/TransactionListenerProvider;)Lorg/jooq/Configuration;
+#set(Ljava/util/concurrent/Executor;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordMapper;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/TransactionListenerProvider;)Lorg/jooq/Configuration;
+#setTransactionListenerProvider([Lorg/jooq/TransactionListenerProvider;)V
+#transactionListenerProviders()[Lorg/jooq/TransactionListenerProvider;
@3.10.0
+#dsl()Lorg/jooq/DSLContext;
+#derive(Lorg/jooq/RecordUnmapper;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/RecordUnmapperProvider;)Lorg/jooq/Configuration;
+#derive(Ljava/time/Clock;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordUnmapper;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordUnmapperProvider;)Lorg/jooq/Configuration;
+#set(Ljava/time/Clock;)Lorg/jooq/Configuration;
+#setRecordUnmapperProvider(Lorg/jooq/RecordUnmapperProvider;)V
+#recordUnmapperProvider()Lorg/jooq/RecordUnmapperProvider;
+#clock()Ljava/time/Clock;
@3.11.0
+#derive(Lorg/jooq/MetaProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/DiagnosticsListenerProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/MetaProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/DiagnosticsListenerProvider;)Lorg/jooq/Configuration;
+#metaProvider()Lorg/jooq/MetaProvider;
+#diagnosticsListenerProviders()[Lorg/jooq/DiagnosticsListenerProvider;
@3.11.9
+#setMetaProvider(Lorg/jooq/MetaProvider;)V
+#setExecutor(Ljava/util/concurrent/Executor;)V
+#setRecordMapper(Lorg/jooq/RecordMapper;)V
+#setRecordUnmapper(Lorg/jooq/RecordUnmapper;)V
+#setRecordListener([Lorg/jooq/RecordListener;)V
+#setExecuteListener([Lorg/jooq/ExecuteListener;)V
+#setVisitListener([Lorg/jooq/VisitListener;)V
+#setTransactionListener([Lorg/jooq/TransactionListener;)V
+#setDiagnosticsListener([Lorg/jooq/DiagnosticsListener;)V
+#setDiagnosticsListenerProvider([Lorg/jooq/DiagnosticsListenerProvider;)V
+#setClock(Ljava/time/Clock;)V
@3.12.0
+#derive(Lorg/jooq/Unwrapper;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/UnwrapperProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/Unwrapper;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/UnwrapperProvider;)Lorg/jooq/Configuration;
+#setUnwrapper(Lorg/jooq/Unwrapper;)V
+#setUnwrapperProvider(Lorg/jooq/UnwrapperProvider;)V
+#unwrapperProvider()Lorg/jooq/UnwrapperProvider;
@3.13.0
+#derive(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/MigrationListenerProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/MigrationListenerProvider;)Lorg/jooq/Configuration;
+#setInterpreterConnectionProvider(Lorg/jooq/ConnectionProvider;)V
+#setSystemConnectionProvider(Lorg/jooq/ConnectionProvider;)V
+#setVersionProvider(Lorg/jooq/VersionProvider;)V
+#interpreterConnectionProvider()Lorg/jooq/ConnectionProvider;
+#systemConnectionProvider()Lorg/jooq/ConnectionProvider;
+#versionProvider()Lorg/jooq/VersionProvider;
+#migrationListenerProviders()[Lorg/jooq/MigrationListenerProvider;
@3.14.0
+#derive(Lorg/jooq/CharsetProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/CharsetProvider;)Lorg/jooq/Configuration;
+#charsetProvider()Lorg/jooq/CharsetProvider;
@3.15.0
+#derive(Lio/r2dbc/spi/ConnectionFactory;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/CommitProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/CacheProvider;)Lorg/jooq/Configuration;
+#deriveSettings(Ljava/util/function/Function;)Lorg/jooq/Configuration;
+#set(Lio/r2dbc/spi/ConnectionFactory;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/CommitProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/CacheProvider;)Lorg/jooq/Configuration;
+#setConnectionFactory(Lio/r2dbc/spi/ConnectionFactory;)V
+#setVersionProvider(Lorg/jooq/CommitProvider;)V
+#setCacheProvider(Lorg/jooq/CacheProvider;)V
+#connectionFactory()Lio/r2dbc/spi/ConnectionFactory;
+#commitProvider()Lorg/jooq/CommitProvider;
+#cacheProvider()Lorg/jooq/CacheProvider;
-#derive(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
-#set(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
-#setVersionProvider(Lorg/jooq/VersionProvider;)V
-#versionProvider()Lorg/jooq/VersionProvider;
@3.16.0
+#derive(Lorg/jooq/FormattingProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/FormattingProvider;)Lorg/jooq/Configuration;
+#formattingProvider()Lorg/jooq/FormattingProvider;

+###org/jooq/impl/DefaultConnectionProvider
@3.0.0-RC1
+#<init>(Ljava/sql/Connection;)V
+#acquire()Ljava/sql/Connection;
+#release(Ljava/sql/Connection;)V
+#setConnection(Ljava/sql/Connection;)V
+#commit()V
+#rollback()V
+#rollback(Ljava/sql/Savepoint;)V
+#setSavepoint()Ljava/sql/Savepoint;
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#setAutoCommit(Z)V
+#getAutoCommit()Z
+#setHoldability(I)V
+#getHoldability()I
+#setTransactionIsolation(I)V
+#getTransactionIsolation()I
@3.8.0
+#setReadOnly(Z)V
+#isReadOnly()Z

+###org/jooq/impl/DefaultDataType
@3.0.0-RC1
+#<init>(Lorg/jooq/SQLDialect;Lorg/jooq/DataType;Ljava/lang/String;)V
+#<init>(Lorg/jooq/SQLDialect;Lorg/jooq/DataType;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/Class;Ljava/lang/String;)V
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
+#precision(I)Lorg/jooq/DataType;
+#precision(II)Lorg/jooq/DataType;
+#precision()I
+#hasPrecision()Z
+#scale(I)Lorg/jooq/DataType;
+#scale()I
+#hasScale()Z
+#length(I)Lorg/jooq/DataType;
+#length()I
+#hasLength()Z
+#getSQLDataType()Lorg/jooq/DataType;
+#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
+#getSQLType()I
+#getType()Ljava/lang/Class;
+#getArrayType()Ljava/lang/Class;
+#getTypeName()Ljava/lang/String;
+#getTypeName(Lorg/jooq/Configuration;)Ljava/lang/String;
+#getCastTypeName()Ljava/lang/String;
+#getCastTypeName(Lorg/jooq/Configuration;)Ljava/lang/String;
+#getArrayDataType()Lorg/jooq/DataType;
+#asArrayDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#asEnumDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#asConvertedDataType(Lorg/jooq/Converter;)Lorg/jooq/DataType;
+#getDialect()Lorg/jooq/SQLDialect;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
+#convert([Ljava/lang/Object;)[Ljava/lang/Object;
+#convert(Ljava/util/Collection;)Ljava/util/List;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDefaultDataType(Lorg/jooq/SQLDialect;Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Lorg/jooq/SQLDialect;Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Lorg/jooq/SQLDialect;Ljava/lang/Class;)Lorg/jooq/DataType;
+#isNumeric()Z
+#isString()Z
+#isDateTime()Z
+#isTemporal()Z
+#isInterval()Z
+#isLob()Z
+#isBinary()Z
+#isArray()Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#normalise(Ljava/lang/String;)Ljava/lang/String;
+#getDataType(Lorg/jooq/SQLDialect;Ljava/lang/String;II)Lorg/jooq/DataType;
+#getType(Lorg/jooq/SQLDialect;Ljava/lang/String;II)Ljava/lang/Class;
@3.0.0-RC2
+#getDataType(Lorg/jooq/SQLDialect;Ljava/lang/Class;Lorg/jooq/DataType;)Lorg/jooq/DataType;
@3.2.0-alpha-01
+#nullable(Z)Lorg/jooq/DataType;
+#nullable()Z
+#defaulted(Z)Lorg/jooq/DataType;
+#defaulted()Z
@3.2.0
-#asArrayDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
@3.5.0
+#asConvertedDataType(Lorg/jooq/Binding;)Lorg/jooq/DataType;
@3.6.0
+#getBinding()Lorg/jooq/Binding;
+#getConverter()Lorg/jooq/Converter;
@3.8.0
+#defaultValue(Ljava/lang/Object;)Lorg/jooq/DataType;
+#defaultValue(Lorg/jooq/Field;)Lorg/jooq/DataType;
+#defaultValue()Lorg/jooq/Field;
*#defaulted(Z)Lorg/jooq/DataType;[deprecated]
@3.9.0
+#identity(Z)Lorg/jooq/DataType;
+#identity()Z
+#isUDT()Z
@3.9.3
+#getSQLType(Lorg/jooq/Configuration;)I
@3.10.0
+#nullability(Lorg/jooq/Nullability;)Lorg/jooq/DataType;
+#nullability()Lorg/jooq/Nullability;
@3.11.0
+#collation(Lorg/jooq/Collation;)Lorg/jooq/DataType;
+#collation()Lorg/jooq/Collation;
+#isEnum()Z
@3.12.0
+#characterSet(Lorg/jooq/CharacterSet;)Lorg/jooq/DataType;
+#characterSet()Lorg/jooq/CharacterSet;
+#default_(Ljava/lang/Object;)Lorg/jooq/DataType;
+#default_(Lorg/jooq/Field;)Lorg/jooq/DataType;
+#default_()Lorg/jooq/Field;
+#isDate()Z
+#isTimestamp()Z
+#isTime()Z
@3.13.0
+#isInteger()Z
@3.14.0
+#getArrayComponentDataType()Lorg/jooq/DataType;
+#getArrayComponentType()Ljava/lang/Class;
+#getDomain()Lorg/jooq/Domain;
+#getQualifiedName()Lorg/jooq/Name;
+#generatesCast()Z
+#declaresCTE()Z
+#declaresWindows()Z
+#declaresTables()Z
+#declaresFields()Z
+#rendersContent(Lorg/jooq/Context;)Z
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;[deprecated]
-#nullability(Lorg/jooq/Nullability;)Lorg/jooq/DataType;
-#nullable(Z)Lorg/jooq/DataType;
-#nullable()Z
-#collation(Lorg/jooq/Collation;)Lorg/jooq/DataType;
-#characterSet(Lorg/jooq/CharacterSet;)Lorg/jooq/DataType;
-#identity(Z)Lorg/jooq/DataType;
-#defaultValue(Ljava/lang/Object;)Lorg/jooq/DataType;
-#defaultValue(Lorg/jooq/Field;)Lorg/jooq/DataType;
-#defaultValue()Lorg/jooq/Field;
-#default_(Ljava/lang/Object;)Lorg/jooq/DataType;
-#default_(Lorg/jooq/Field;)Lorg/jooq/DataType;
-#defaulted(Z)Lorg/jooq/DataType;[deprecated]
-#defaulted()Z
-#precision(I)Lorg/jooq/DataType;
-#precision(II)Lorg/jooq/DataType;
-#precision()I
-#hasPrecision()Z
-#scale(I)Lorg/jooq/DataType;
-#scale()I
-#hasScale()Z
-#length(I)Lorg/jooq/DataType;
-#length()I
-#hasLength()Z
-#getSQLType(Lorg/jooq/Configuration;)I
-#getConverter()Lorg/jooq/Converter;
-#getArrayType()Ljava/lang/Class;
-#getTypeName()Ljava/lang/String;
-#getCastTypeName()Ljava/lang/String;
-#getArrayDataType()Lorg/jooq/DataType;
-#asEnumDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#convert([Ljava/lang/Object;)[Ljava/lang/Object;
-#convert(Ljava/util/Collection;)Ljava/util/List;
-#isNumeric()Z
-#isInteger()Z
-#isString()Z
-#isDateTime()Z
-#isDate()Z
-#isTimestamp()Z
-#isTime()Z
-#isTemporal()Z
-#isInterval()Z
-#isLob()Z
-#isBinary()Z
-#isArray()Z
-#isUDT()Z
-#isEnum()Z
@3.14.9
+#getDataType(Lorg/jooq/SQLDialect;Ljava/lang/String;IIZ)Lorg/jooq/DataType;
@3.15.0
+#getDataType(Lorg/jooq/SQLDialect;Ljava/sql/SQLType;)Lorg/jooq/DataType;
+#getDataType(Lorg/jooq/SQLDialect;I)Lorg/jooq/DataType;
+#getRow()Lorg/jooq/Row;
@3.15.1
+#isMultiset()Z
+#isRecord()Z
+#getRecordType()Ljava/lang/Class;
@3.15.9
+#getArrayDataType()Lorg/jooq/DataType;
+#getCastTypeName()Ljava/lang/String;
+#getTypeName()Ljava/lang/String;
@3.16.0
+#readonly()Z
+#generatedAlwaysAs()Lorg/jooq/Field;
+#generationOption()Lorg/jooq/impl/QOM$GenerationOption;
-#getArrayDataType()Lorg/jooq/DataType;
-#getCastTypeName()Ljava/lang/String;
-#getTypeName()Ljava/lang/String;
@3.16.5
+#getArrayDataType()Lorg/jooq/DataType;
+#getCastTypeName()Ljava/lang/String;
+#getTypeName()Ljava/lang/String;
@3.17.0
+#generatedAlwaysAsGenerator()Lorg/jooq/Generator;
+#generationLocation()Lorg/jooq/impl/QOM$GenerationLocation;
-#generatedAlwaysAs()Lorg/jooq/Field;

+###org/jooq/impl/DefaultExecuteListener
@2.0.5
+#<init>()V
+#start(Lorg/jooq/ExecuteContext;)V
+#renderStart(Lorg/jooq/ExecuteContext;)V
+#renderEnd(Lorg/jooq/ExecuteContext;)V
+#prepareStart(Lorg/jooq/ExecuteContext;)V
+#prepareEnd(Lorg/jooq/ExecuteContext;)V
+#bindStart(Lorg/jooq/ExecuteContext;)V
+#bindEnd(Lorg/jooq/ExecuteContext;)V
+#executeStart(Lorg/jooq/ExecuteContext;)V
+#executeEnd(Lorg/jooq/ExecuteContext;)V
+#fetchStart(Lorg/jooq/ExecuteContext;)V
+#resultStart(Lorg/jooq/ExecuteContext;)V
+#recordStart(Lorg/jooq/ExecuteContext;)V
+#recordEnd(Lorg/jooq/ExecuteContext;)V
+#resultEnd(Lorg/jooq/ExecuteContext;)V
+#fetchEnd(Lorg/jooq/ExecuteContext;)V
+#end(Lorg/jooq/ExecuteContext;)V
@2.3.0
+#exception(Lorg/jooq/ExecuteContext;)V
@3.4.0
+#warning(Lorg/jooq/ExecuteContext;)V
@3.6.0
+#outStart(Lorg/jooq/ExecuteContext;)V
+#outEnd(Lorg/jooq/ExecuteContext;)V
@3.17.0
-#start(Lorg/jooq/ExecuteContext;)V
-#renderStart(Lorg/jooq/ExecuteContext;)V
-#renderEnd(Lorg/jooq/ExecuteContext;)V
-#prepareStart(Lorg/jooq/ExecuteContext;)V
-#prepareEnd(Lorg/jooq/ExecuteContext;)V
-#bindStart(Lorg/jooq/ExecuteContext;)V
-#bindEnd(Lorg/jooq/ExecuteContext;)V
-#executeStart(Lorg/jooq/ExecuteContext;)V
-#executeEnd(Lorg/jooq/ExecuteContext;)V
-#outStart(Lorg/jooq/ExecuteContext;)V
-#outEnd(Lorg/jooq/ExecuteContext;)V
-#fetchStart(Lorg/jooq/ExecuteContext;)V
-#resultStart(Lorg/jooq/ExecuteContext;)V
-#recordStart(Lorg/jooq/ExecuteContext;)V
-#recordEnd(Lorg/jooq/ExecuteContext;)V
-#resultEnd(Lorg/jooq/ExecuteContext;)V
-#fetchEnd(Lorg/jooq/ExecuteContext;)V
-#end(Lorg/jooq/ExecuteContext;)V
-#exception(Lorg/jooq/ExecuteContext;)V
-#warning(Lorg/jooq/ExecuteContext;)V

+###org/jooq/impl/DefaultExecuteListenerProvider
@3.0.0-RC3
+#providers([Lorg/jooq/ExecuteListener;)[Lorg/jooq/ExecuteListenerProvider;
+#<init>(Lorg/jooq/ExecuteListener;)V
+#provide()Lorg/jooq/ExecuteListener;
+#toString()Ljava/lang/String;

+###org/jooq/impl/DSL
@3.0.0-RC3
+#using(Lorg/jooq/SQLDialect;)Lorg/jooq/DSLContext;
+#using(Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
+#using(Ljava/sql/Connection;Lorg/jooq/SQLDialect;)Lorg/jooq/DSLContext;
+#using(Ljava/sql/Connection;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
+#using(Ljavax/sql/DataSource;Lorg/jooq/SQLDialect;)Lorg/jooq/DSLContext;
+#using(Ljavax/sql/DataSource;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
+#using(Lorg/jooq/ConnectionProvider;Lorg/jooq/SQLDialect;)Lorg/jooq/DSLContext;
+#using(Lorg/jooq/ConnectionProvider;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
+#using(Lorg/jooq/Configuration;)Lorg/jooq/DSLContext;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;
+#select(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectZero()Lorg/jooq/SelectSelectStep;
+#selectOne()Lorg/jooq/SelectSelectStep;
+#selectCount()Lorg/jooq/SelectSelectStep;
+#all(Lorg/jooq/Select;)Lorg/jooq/QuantifiedSelect;
+#all([Ljava/lang/Object;)Lorg/jooq/QuantifiedSelect;
+#all(Lorg/jooq/Field;)Lorg/jooq/QuantifiedSelect;
+#any(Lorg/jooq/Select;)Lorg/jooq/QuantifiedSelect;
+#any([Ljava/lang/Object;)Lorg/jooq/QuantifiedSelect;
+#any(Lorg/jooq/Field;)Lorg/jooq/QuantifiedSelect;
+#table(Lorg/jooq/Select;)Lorg/jooq/Table;
+#table(Ljava/util/List;)Lorg/jooq/Table;
+#table([Ljava/lang/Object;)Lorg/jooq/Table;
+#table(Lorg/jooq/ArrayRecord;)Lorg/jooq/Table;
+#table(Lorg/jooq/Field;)Lorg/jooq/Table;
+#unnest(Ljava/util/List;)Lorg/jooq/Table;
+#unnest([Ljava/lang/Object;)Lorg/jooq/Table;
+#unnest(Lorg/jooq/ArrayRecord;)Lorg/jooq/Table;
+#unnest(Lorg/jooq/Field;)Lorg/jooq/Table;
+#name([Ljava/lang/String;)Lorg/jooq/Name;
+#schemaByName(Ljava/lang/String;)Lorg/jooq/Schema;
+#tableByName([Ljava/lang/String;)Lorg/jooq/Table;
+#fieldByName([Ljava/lang/String;)Lorg/jooq/Field;
+#fieldByName(Ljava/lang/Class;[Ljava/lang/String;)Lorg/jooq/Field;
+#fieldByName(Lorg/jooq/DataType;[Ljava/lang/String;)Lorg/jooq/Field;
+#table(Ljava/lang/String;)Lorg/jooq/Table;
+#table(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#table(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;[Ljava/lang/Object;)Lorg/jooq/Field;
+#field(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Ljava/lang/Class;[Lorg/jooq/QueryPart;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;[Lorg/jooq/QueryPart;)Lorg/jooq/Field;
+#function(Ljava/lang/String;Ljava/lang/Class;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#function(Ljava/lang/String;Lorg/jooq/DataType;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#function(Lorg/jooq/Name;Ljava/lang/Class;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#function(Lorg/jooq/Name;Lorg/jooq/DataType;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#condition(Ljava/lang/String;)Lorg/jooq/Condition;
+#condition(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Condition;
+#condition(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Condition;
+#trueCondition()Lorg/jooq/Condition;
+#falseCondition()Lorg/jooq/Condition;
+#exists(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notExists(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#not(Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#field(Lorg/jooq/Condition;)Lorg/jooq/Field;
+#decode()Lorg/jooq/Case;
+#decode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#decode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#cast(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#castNull(Lorg/jooq/Field;)Lorg/jooq/Field;
+#cast(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;
+#castNull(Lorg/jooq/DataType;)Lorg/jooq/Field;
+#cast(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#castNull(Ljava/lang/Class;)Lorg/jooq/Field;
+#coalesce(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#coalesce(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl2(Lorg/jooq/Field;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl2(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl2(Lorg/jooq/Field;Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl2(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nullif(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#nullif(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nullif(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#nullif(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#upper(Ljava/lang/String;)Lorg/jooq/Field;
+#upper(Lorg/jooq/Field;)Lorg/jooq/Field;
+#lower(Ljava/lang/String;)Lorg/jooq/Field;
+#lower(Lorg/jooq/Field;)Lorg/jooq/Field;
+#trim(Ljava/lang/String;)Lorg/jooq/Field;
+#trim(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rtrim(Ljava/lang/String;)Lorg/jooq/Field;
+#rtrim(Lorg/jooq/Field;)Lorg/jooq/Field;
+#ltrim(Ljava/lang/String;)Lorg/jooq/Field;
+#ltrim(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;IC)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;ILjava/lang/String;)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;IC)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;ILjava/lang/String;)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#repeat(Ljava/lang/String;I)Lorg/jooq/Field;
+#repeat(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#repeat(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#repeat(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#escape(Ljava/lang/String;C)Ljava/lang/String;
+#escape(Lorg/jooq/Field;C)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#position(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#position(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#position(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#position(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#ascii(Ljava/lang/String;)Lorg/jooq/Field;
+#ascii(Lorg/jooq/Field;)Lorg/jooq/Field;
+#concat([Ljava/lang/String;)Lorg/jooq/Field;
+#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;II)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#length(Ljava/lang/String;)Lorg/jooq/Field;
+#length(Lorg/jooq/Field;)Lorg/jooq/Field;
+#charLength(Ljava/lang/String;)Lorg/jooq/Field;
+#charLength(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitLength(Ljava/lang/String;)Lorg/jooq/Field;
+#bitLength(Lorg/jooq/Field;)Lorg/jooq/Field;
+#octetLength(Ljava/lang/String;)Lorg/jooq/Field;
+#octetLength(Lorg/jooq/Field;)Lorg/jooq/Field;
+#md5(Ljava/lang/String;)Lorg/jooq/Field;
+#md5(Lorg/jooq/Field;)Lorg/jooq/Field;
+#currentDate()Lorg/jooq/Field;
+#currentTime()Lorg/jooq/Field;
+#currentTimestamp()Lorg/jooq/Field;
+#dateDiff(Ljava/sql/Date;Ljava/sql/Date;)Lorg/jooq/Field;
+#dateDiff(Lorg/jooq/Field;Ljava/sql/Date;)Lorg/jooq/Field;
+#dateAdd(Ljava/sql/Date;Ljava/lang/Number;)Lorg/jooq/Field;
+#dateAdd(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#dateDiff(Ljava/sql/Date;Lorg/jooq/Field;)Lorg/jooq/Field;
+#dateDiff(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampAdd(Ljava/sql/Timestamp;Ljava/lang/Number;)Lorg/jooq/Field;
+#timestampAdd(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampDiff(Ljava/sql/Timestamp;Ljava/sql/Timestamp;)Lorg/jooq/Field;
+#timestampDiff(Lorg/jooq/Field;Ljava/sql/Timestamp;)Lorg/jooq/Field;
+#timestampDiff(Ljava/sql/Timestamp;Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampDiff(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#extract(Ljava/util/Date;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#extract(Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#year(Ljava/util/Date;)Lorg/jooq/Field;
+#year(Lorg/jooq/Field;)Lorg/jooq/Field;
+#month(Ljava/util/Date;)Lorg/jooq/Field;
+#month(Lorg/jooq/Field;)Lorg/jooq/Field;
+#day(Ljava/util/Date;)Lorg/jooq/Field;
+#day(Lorg/jooq/Field;)Lorg/jooq/Field;
+#hour(Ljava/util/Date;)Lorg/jooq/Field;
+#hour(Lorg/jooq/Field;)Lorg/jooq/Field;
+#minute(Ljava/util/Date;)Lorg/jooq/Field;
+#minute(Lorg/jooq/Field;)Lorg/jooq/Field;
+#second(Ljava/util/Date;)Lorg/jooq/Field;
+#second(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rollup([Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#cube([Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#groupingSets([Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#groupingSets([[Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#groupingSets([Ljava/util/Collection;)Lorg/jooq/GroupField;
+#grouping(Lorg/jooq/Field;)Lorg/jooq/Field;
+#groupingId([Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitCount(Ljava/lang/Number;)Lorg/jooq/Field;
+#bitCount(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNot(Ljava/lang/Number;)Lorg/jooq/Field;
+#bitNot(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitAnd(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitAnd(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitAnd(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitAnd(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNand(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitNand(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNand(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitNand(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitOr(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitOr(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitOr(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitOr(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNor(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitNor(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNor(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitNor(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitXor(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitXor(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitXor(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitXor(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitXNor(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitXNor(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitXNor(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitXNor(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#shl(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#shl(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#shl(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#shl(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#shr(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#shr(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#shr(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#shr(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#rand()Lorg/jooq/Field;
+#greatest(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#greatest(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#least(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#least(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#sign(Ljava/lang/Number;)Lorg/jooq/Field;
+#sign(Lorg/jooq/Field;)Lorg/jooq/Field;
+#abs(Ljava/lang/Number;)Lorg/jooq/Field;
+#abs(Lorg/jooq/Field;)Lorg/jooq/Field;
+#round(Ljava/lang/Number;)Lorg/jooq/Field;
+#round(Lorg/jooq/Field;)Lorg/jooq/Field;
+#round(Ljava/lang/Number;I)Lorg/jooq/Field;
+#round(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#floor(Ljava/lang/Number;)Lorg/jooq/Field;
+#floor(Lorg/jooq/Field;)Lorg/jooq/Field;
+#ceil(Ljava/lang/Number;)Lorg/jooq/Field;
+#ceil(Lorg/jooq/Field;)Lorg/jooq/Field;
+#trunc(Ljava/lang/Number;)Lorg/jooq/Field;
+#trunc(Ljava/lang/Number;I)Lorg/jooq/Field;
+#trunc(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#trunc(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#trunc(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#sqrt(Ljava/lang/Number;)Lorg/jooq/Field;
+#sqrt(Lorg/jooq/Field;)Lorg/jooq/Field;
+#exp(Ljava/lang/Number;)Lorg/jooq/Field;
+#exp(Lorg/jooq/Field;)Lorg/jooq/Field;
+#ln(Ljava/lang/Number;)Lorg/jooq/Field;
+#ln(Lorg/jooq/Field;)Lorg/jooq/Field;
+#log(Ljava/lang/Number;I)Lorg/jooq/Field;
+#log(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#power(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#power(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#power(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#power(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#acos(Ljava/lang/Number;)Lorg/jooq/Field;
+#acos(Lorg/jooq/Field;)Lorg/jooq/Field;
+#asin(Ljava/lang/Number;)Lorg/jooq/Field;
+#asin(Lorg/jooq/Field;)Lorg/jooq/Field;
+#atan(Ljava/lang/Number;)Lorg/jooq/Field;
+#atan(Lorg/jooq/Field;)Lorg/jooq/Field;
+#atan2(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#atan2(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#atan2(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#atan2(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#cos(Ljava/lang/Number;)Lorg/jooq/Field;
+#cos(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sin(Ljava/lang/Number;)Lorg/jooq/Field;
+#sin(Lorg/jooq/Field;)Lorg/jooq/Field;
+#tan(Ljava/lang/Number;)Lorg/jooq/Field;
+#tan(Lorg/jooq/Field;)Lorg/jooq/Field;
+#cot(Ljava/lang/Number;)Lorg/jooq/Field;
+#cot(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sinh(Ljava/lang/Number;)Lorg/jooq/Field;
+#sinh(Lorg/jooq/Field;)Lorg/jooq/Field;
+#cosh(Ljava/lang/Number;)Lorg/jooq/Field;
+#cosh(Lorg/jooq/Field;)Lorg/jooq/Field;
+#tanh(Ljava/lang/Number;)Lorg/jooq/Field;
+#tanh(Lorg/jooq/Field;)Lorg/jooq/Field;
+#coth(Ljava/lang/Number;)Lorg/jooq/Field;
+#coth(Lorg/jooq/Field;)Lorg/jooq/Field;
+#deg(Ljava/lang/Number;)Lorg/jooq/Field;
+#deg(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rad(Ljava/lang/Number;)Lorg/jooq/Field;
+#rad(Lorg/jooq/Field;)Lorg/jooq/Field;
+#level()Lorg/jooq/Field;
+#connectByIsCycle()Lorg/jooq/Field;
+#connectByIsLeaf()Lorg/jooq/Field;
+#connectByRoot(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sysConnectByPath(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#prior(Lorg/jooq/Field;)Lorg/jooq/Field;
+#count()Lorg/jooq/AggregateFunction;
+#count(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#countDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#countDistinct([Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#max(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#maxDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#min(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#minDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#sum(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#sumDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#avg(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#avgDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#median(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#stddevPop(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#stddevSamp(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#varPop(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#varSamp(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrSlope(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrIntercept(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrCount(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrR2(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrAvgX(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrAvgY(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrSXX(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrSYY(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrSXY(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#listAgg(Lorg/jooq/Field;)Lorg/jooq/OrderedAggregateFunction;
+#listAgg(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/OrderedAggregateFunction;
+#groupConcat(Lorg/jooq/Field;)Lorg/jooq/GroupConcatOrderByStep;
+#groupConcatDistinct(Lorg/jooq/Field;)Lorg/jooq/GroupConcatOrderByStep;
+#rowNumber()Lorg/jooq/WindowOverStep;
+#rank()Lorg/jooq/WindowOverStep;
+#denseRank()Lorg/jooq/WindowOverStep;
+#percentRank()Lorg/jooq/WindowOverStep;
+#cumeDist()Lorg/jooq/WindowOverStep;
+#ntile(I)Lorg/jooq/WindowOverStep;
+#firstValue(Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lastValue(Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(Lorg/jooq/Field;I)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(Lorg/jooq/Field;ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(Lorg/jooq/Field;ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;I)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#param(Ljava/lang/String;)Lorg/jooq/Param;
+#param(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Param;
+#param(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Param;
+#param(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/Param;
+#value(Ljava/lang/Object;)Lorg/jooq/Param;
+#value(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Param;
+#value(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Param;
+#value(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Param;
+#inline(Ljava/lang/Object;)Lorg/jooq/Param;
+#inline(C)Lorg/jooq/Param;
+#inline(Ljava/lang/Character;)Lorg/jooq/Param;
+#inline(Ljava/lang/CharSequence;)Lorg/jooq/Param;
+#inline(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Param;
+#inline(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Param;
+#inline(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Param;
+#val(Ljava/lang/Object;)Lorg/jooq/Param;
+#val(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Param;
+#val(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Param;
+#val(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Param;
+#row(Ljava/lang/Object;)Lorg/jooq/Row1;
+#row(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row2;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row3;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row4;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row5;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row6;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row7;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row8;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row9;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row10;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row11;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row12;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row13;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row14;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row15;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row16;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row17;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row18;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row19;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row20;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row21;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row22;
+#row([Ljava/lang/Object;)Lorg/jooq/RowN;
+#row(Lorg/jooq/Field;)Lorg/jooq/Row1;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row2;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row3;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row4;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row5;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row6;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row7;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row8;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row9;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row10;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row11;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row12;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row13;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row14;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row15;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row16;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row17;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row18;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row19;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row20;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row21;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row22;
+#row([Lorg/jooq/Field;)Lorg/jooq/RowN;
+#values([Lorg/jooq/Row1;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row2;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row3;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row4;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row5;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row6;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row7;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row8;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row9;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row10;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row11;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row12;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row13;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row14;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row15;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row16;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row17;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row18;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row19;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row20;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row21;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row22;)Lorg/jooq/Table;
+#zero()Lorg/jooq/Field;
+#one()Lorg/jooq/Field;
+#two()Lorg/jooq/Field;
+#pi()Lorg/jooq/Field;
+#e()Lorg/jooq/Field;
+#currentUser()Lorg/jooq/Field;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
@3.1.0
+#using(Ljava/sql/Connection;)Lorg/jooq/DSLContext;
+#using(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
+#condition(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#coerce(Lorg/jooq/Field;Ljava/lang/Class;)Lorg/jooq/Field;
+#coerce(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#cast(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#cast(Lorg/jooq/Field;Ljava/lang/Class;)Lorg/jooq/Field;
+#cast(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/Field;
@3.2.0-alpha-01
+#insertInto(Lorg/jooq/Table;)Lorg/jooq/InsertSetStep;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep1;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep2;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep3;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep4;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep5;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep6;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep7;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep8;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep9;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep10;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep11;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep12;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep13;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep14;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep15;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep16;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep17;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep18;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep19;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep20;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep21;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep22;
+#insertInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/InsertValuesStepN;
+#insertInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;
+#update(Lorg/jooq/Table;)Lorg/jooq/UpdateSetFirstStep;
+#mergeInto(Lorg/jooq/Table;)Lorg/jooq/MergeUsingStep;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;
+#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStepN;
+#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStepN;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#truncate(Lorg/jooq/Table;)Lorg/jooq/TruncateIdentityStep;
+#keyword(Ljava/lang/String;)Lorg/jooq/Keyword;
+#queryPart(Ljava/lang/String;)Lorg/jooq/QueryPart;
+#queryPart(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/QueryPart;
+#queryPart(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/QueryPart;
@3.2.0
+#dual()Lorg/jooq/Table;
+#generateSeries(II)Lorg/jooq/Table;
+#generateSeries(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Table;
+#rownum()Lorg/jooq/Field;
-#table(Lorg/jooq/ArrayRecord;)Lorg/jooq/Table;
-#unnest(Lorg/jooq/ArrayRecord;)Lorg/jooq/Table;
-#cube([Lorg/jooq/Field;)Lorg/jooq/GroupField;
-#groupingSets([Lorg/jooq/Field;)Lorg/jooq/GroupField;
-#groupingSets([[Lorg/jooq/Field;)Lorg/jooq/GroupField;
-#groupingSets([Ljava/util/Collection;)Lorg/jooq/GroupField;
-#grouping(Lorg/jooq/Field;)Lorg/jooq/Field;
-#groupingId([Lorg/jooq/Field;)Lorg/jooq/Field;
@3.3.0
+#table(Lorg/jooq/Result;)Lorg/jooq/Table;
+#generateSeries(ILorg/jooq/Field;)Lorg/jooq/Table;
+#generateSeries(Lorg/jooq/Field;I)Lorg/jooq/Table;
+#lateral(Lorg/jooq/TableLike;)Lorg/jooq/Table;
+#isnull(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#isnull(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#isnull(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#isnull(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#space(I)Lorg/jooq/Field;
+#space(Lorg/jooq/Field;)Lorg/jooq/Field;
+#reverse(Ljava/lang/String;)Lorg/jooq/Field;
+#reverse(Lorg/jooq/Field;)Lorg/jooq/Field;
+#mid(Lorg/jooq/Field;II)Lorg/jooq/Field;
+#mid(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#left(Ljava/lang/String;I)Lorg/jooq/Field;
+#left(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#left(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#left(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#right(Ljava/lang/String;I)Lorg/jooq/Field;
+#right(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#right(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#right(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#dateAdd(Ljava/sql/Date;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#dateAdd(Ljava/sql/Date;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#dateAdd(Lorg/jooq/Field;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#dateAdd(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#timestampAdd(Ljava/sql/Timestamp;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#timestampAdd(Ljava/sql/Timestamp;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#timestampAdd(Lorg/jooq/Field;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#timestampAdd(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#trunc(Ljava/sql/Date;)Lorg/jooq/Field;
+#trunc(Ljava/sql/Date;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#trunc(Ljava/sql/Timestamp;)Lorg/jooq/Field;
+#trunc(Ljava/sql/Timestamp;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#trunc(Lorg/jooq/Field;)Lorg/jooq/Field;
+#trunc(Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#date(Ljava/util/Date;)Lorg/jooq/Field;
+#date(Lorg/jooq/Field;)Lorg/jooq/Field;
+#time(Ljava/util/Date;)Lorg/jooq/Field;
+#time(Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestamp(Ljava/util/Date;)Lorg/jooq/Field;
+#timestamp(Lorg/jooq/Field;)Lorg/jooq/Field;
+#groupConcat(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/AggregateFunction;
+#partitionBy([Lorg/jooq/Field;)Lorg/jooq/WindowSpecificationOrderByStep;
+#partitionBy(Ljava/util/Collection;)Lorg/jooq/WindowSpecificationOrderByStep;
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowSpecificationOrderByStep;
+#orderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowSpecificationRowsStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/WindowSpecificationRowsStep;
+#rowsUnboundedPreceding()Lorg/jooq/WindowSpecificationFinalStep;
+#rowsPreceding(I)Lorg/jooq/WindowSpecificationFinalStep;
+#rowsCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
+#rowsUnboundedFollowing()Lorg/jooq/WindowSpecificationFinalStep;
+#rowsFollowing(I)Lorg/jooq/WindowSpecificationFinalStep;
+#rowsBetweenUnboundedPreceding()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rowsBetweenPreceding(I)Lorg/jooq/WindowSpecificationRowsAndStep;
+#rowsBetweenCurrentRow()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rowsBetweenUnboundedFollowing()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rowsBetweenFollowing(I)Lorg/jooq/WindowSpecificationRowsAndStep;
+#row(Ljava/util/Collection;)Lorg/jooq/RowN;
+#values([Lorg/jooq/RowN;)Lorg/jooq/Table;
@3.4.0
+#with(Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#with([Lorg/jooq/CommonTableExpression;)Lorg/jooq/WithStep;
+#withRecursive(Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#withRecursive([Lorg/jooq/CommonTableExpression;)Lorg/jooq/WithStep;
+#alterSequence(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceRestartStep;
+#alterSequence(Ljava/lang/String;)Lorg/jooq/AlterSequenceRestartStep;
+#alterTable(Lorg/jooq/Table;)Lorg/jooq/AlterTableStep;
+#alterTable(Ljava/lang/String;)Lorg/jooq/AlterTableStep;
+#dropTable(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#dropTable(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#defaultValue()Lorg/jooq/Field;
+#defaultValue(Ljava/lang/Class;)Lorg/jooq/Field;
+#defaultValue(Lorg/jooq/DataType;)Lorg/jooq/Field;
+#sequenceByName([Ljava/lang/String;)Lorg/jooq/Sequence;
+#sequenceByName(Ljava/lang/Class;[Ljava/lang/String;)Lorg/jooq/Sequence;
+#sequenceByName(Lorg/jooq/DataType;[Ljava/lang/String;)Lorg/jooq/Sequence;
+#sequence(Ljava/lang/String;)Lorg/jooq/Sequence;
+#sequence(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Sequence;
+#sequence(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Sequence;
+#condition(Ljava/lang/Boolean;)Lorg/jooq/Condition;
+#not(Ljava/lang/Boolean;)Lorg/jooq/Field;
+#not(Lorg/jooq/Field;)Lorg/jooq/Field;
+#date(Ljava/lang/String;)Lorg/jooq/Field;
+#time(Ljava/lang/String;)Lorg/jooq/Field;
+#timestamp(Ljava/lang/String;)Lorg/jooq/Field;
@3.5.0
+#using(Ljava/lang/String;)Lorg/jooq/DSLContext;
+#using(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DSLContext;
+#using(Ljava/lang/String;Ljava/util/Properties;)Lorg/jooq/DSLContext;
+#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createView(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createIndex(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createSequence(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
+#createSequence(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
+#dropView(Lorg/jooq/Table;)Lorg/jooq/DropViewFinalStep;
+#dropView(Ljava/lang/String;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Lorg/jooq/Table;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Ljava/lang/String;)Lorg/jooq/DropViewFinalStep;
+#dropTableIfExists(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropTableIfExists(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#dropIndex(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
+#dropIndexIfExists(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
+#dropSequence(Lorg/jooq/Sequence;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequence(Ljava/lang/String;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Lorg/jooq/Sequence;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Ljava/lang/String;)Lorg/jooq/DropSequenceFinalStep;
+#defaultValue(Lorg/jooq/Field;)Lorg/jooq/Field;
+#query(Ljava/lang/String;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
+#resultQuery(Ljava/lang/String;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/ResultQuery;
+#field(Lorg/jooq/Select;)Lorg/jooq/Field;
+#coerce(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#coerce(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;
+#coerce(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#concat(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#concat(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#count(Lorg/jooq/Table;)Lorg/jooq/AggregateFunction;
+#countDistinct(Lorg/jooq/Table;)Lorg/jooq/AggregateFunction;
@3.6.0
+#select([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#deleteFrom(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#constraint(Ljava/lang/String;)Lorg/jooq/ConstraintTypeStep;
+#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createView(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createIndex(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createSequence(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
+#alterSequence(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceRestartStep;
+#alterTable(Lorg/jooq/Name;)Lorg/jooq/AlterTableStep;
+#dropView(Lorg/jooq/Name;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Lorg/jooq/Name;)Lorg/jooq/DropViewFinalStep;
+#dropTable(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTableIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropIndex(Ljava/lang/String;)Lorg/jooq/DropIndexOnStep;
+#dropIndex(Lorg/jooq/Name;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Ljava/lang/String;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/DropIndexOnStep;
+#dropSequence(Lorg/jooq/Name;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Lorg/jooq/Name;)Lorg/jooq/DropSequenceFinalStep;
+#truncate(Lorg/jooq/Name;)Lorg/jooq/TruncateIdentityStep;
+#table(Lorg/jooq/Record;)Lorg/jooq/Table;
+#table([Lorg/jooq/Record;)Lorg/jooq/Table;
+#list([Lorg/jooq/QueryPart;)Lorg/jooq/QueryPart;
+#list(Ljava/util/Collection;)Lorg/jooq/QueryPart;
*#schemaByName(Ljava/lang/String;)Lorg/jooq/Schema;[deprecated]
+#schema(Lorg/jooq/Name;)Lorg/jooq/Schema;
*#sequenceByName([Ljava/lang/String;)Lorg/jooq/Sequence;[deprecated]
*#sequenceByName(Ljava/lang/Class;[Ljava/lang/String;)Lorg/jooq/Sequence;[deprecated]
*#sequenceByName(Lorg/jooq/DataType;[Ljava/lang/String;)Lorg/jooq/Sequence;[deprecated]
+#sequence(Lorg/jooq/Name;)Lorg/jooq/Sequence;
+#sequence(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Sequence;
+#sequence(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Sequence;
*#tableByName([Ljava/lang/String;)Lorg/jooq/Table;[deprecated]
+#table(Lorg/jooq/Name;)Lorg/jooq/Table;
*#fieldByName([Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#fieldByName(Ljava/lang/Class;[Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#fieldByName(Lorg/jooq/DataType;[Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#sql(Ljava/lang/String;)Lorg/jooq/SQL;
+#sql(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SQL;
+#sql(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SQL;
*#queryPart(Ljava/lang/String;)Lorg/jooq/QueryPart;[deprecated]
*#queryPart(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/QueryPart;[deprecated]
*#queryPart(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/QueryPart;[deprecated]
+#and([Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#and(Ljava/util/Collection;)Lorg/jooq/Condition;
+#or([Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#or(Ljava/util/Collection;)Lorg/jooq/Condition;
+#condition(Lorg/jooq/Operator;[Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#condition(Lorg/jooq/Operator;Ljava/util/Collection;)Lorg/jooq/Condition;
+#field(Lorg/jooq/SelectField;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row1;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row2;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row3;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row4;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row5;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row6;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row7;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row8;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row9;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row10;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row11;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row12;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row13;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row14;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row15;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row16;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row17;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row18;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row19;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row20;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row21;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row22;)Lorg/jooq/Field;
+#choose()Lorg/jooq/Case;
+#choose(Ljava/lang/Object;)Lorg/jooq/CaseValueStep;
+#choose(Lorg/jooq/Field;)Lorg/jooq/CaseValueStep;
+#when(Lorg/jooq/Condition;Ljava/lang/Object;)Lorg/jooq/CaseConditionStep;
+#when(Lorg/jooq/Condition;Lorg/jooq/Field;)Lorg/jooq/CaseConditionStep;
+#when(Lorg/jooq/Condition;Lorg/jooq/Select;)Lorg/jooq/CaseConditionStep;
+#coalesce(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#dateSub(Ljava/sql/Date;Ljava/lang/Number;)Lorg/jooq/Field;
+#dateSub(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#dateSub(Ljava/sql/Date;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#dateSub(Ljava/sql/Date;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#dateSub(Lorg/jooq/Field;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#dateSub(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#every(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#every(Lorg/jooq/Condition;)Lorg/jooq/AggregateFunction;
+#arrayAgg(Lorg/jooq/Field;)Lorg/jooq/ArrayAggOrderByStep;
+#rank([Lorg/jooq/Field;)Lorg/jooq/OrderedAggregateFunction;
+#denseRank([Lorg/jooq/Field;)Lorg/jooq/OrderedAggregateFunction;
+#percentRank([Lorg/jooq/Field;)Lorg/jooq/OrderedAggregateFunction;
+#cumeDist([Lorg/jooq/Field;)Lorg/jooq/OrderedAggregateFunction;
+#percentileCont(Ljava/lang/Number;)Lorg/jooq/OrderedAggregateFunction;
+#percentileCont(Lorg/jooq/Field;)Lorg/jooq/OrderedAggregateFunction;
+#percentileDisc(Ljava/lang/Number;)Lorg/jooq/OrderedAggregateFunction;
+#percentileDisc(Lorg/jooq/Field;)Lorg/jooq/OrderedAggregateFunction;
+#param()Lorg/jooq/Param;
+#param(Ljava/lang/Class;)Lorg/jooq/Param;
+#param(Lorg/jooq/DataType;)Lorg/jooq/Param;
+#param(Lorg/jooq/Field;)Lorg/jooq/Param;
+#param(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Param;
-#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#dropIndex(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
-#dropIndexIfExists(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
-#field(Ljava/lang/String;Lorg/jooq/DataType;[Lorg/jooq/QueryPart;)Lorg/jooq/Field;
@3.7.0
+#rowsFrom([Lorg/jooq/Table;)Lorg/jooq/Table;
+#query(Lorg/jooq/SQL;)Lorg/jooq/Query;
+#resultQuery(Lorg/jooq/SQL;)Lorg/jooq/ResultQuery;
+#table(Lorg/jooq/SQL;)Lorg/jooq/Table;
+#field(Lorg/jooq/SQL;)Lorg/jooq/Field;
+#field(Lorg/jooq/SQL;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Lorg/jooq/SQL;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;[Lorg/jooq/QueryPart;)Lorg/jooq/Field;
+#condition(Lorg/jooq/SQL;)Lorg/jooq/Condition;
+#condition(Ljava/util/Map;)Lorg/jooq/Condition;
+#rollup([Lorg/jooq/FieldOrRow;)Lorg/jooq/GroupField;
+#cube([Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#cube([Lorg/jooq/FieldOrRow;)Lorg/jooq/GroupField;
+#groupingSets([Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#groupingSets([[Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#groupingSets([Ljava/util/Collection;)Lorg/jooq/GroupField;
+#grouping(Lorg/jooq/Field;)Lorg/jooq/Field;
+#groupingId([Lorg/jooq/Field;)Lorg/jooq/Field;
+#boolAnd(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#boolAnd(Lorg/jooq/Condition;)Lorg/jooq/AggregateFunction;
+#boolOr(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#boolOr(Lorg/jooq/Condition;)Lorg/jooq/AggregateFunction;
+#array([Ljava/lang/Object;)Lorg/jooq/Field;
+#array([Lorg/jooq/Field;)Lorg/jooq/Field;
+#array(Ljava/util/Collection;)Lorg/jooq/Field;
+#nthValue(Lorg/jooq/Field;I)Lorg/jooq/WindowIgnoreNullsStep;
+#nthValue(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#currentSchema()Lorg/jooq/Field;
@3.7.2
*#not(Ljava/lang/Boolean;)Lorg/jooq/Field;[deprecated]
@3.7.4
+#rowField(Lorg/jooq/Row1;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row2;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row3;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row4;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row5;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row6;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row7;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row8;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row9;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row10;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row11;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row12;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row13;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row14;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row15;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row16;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row17;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row18;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row19;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row20;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row21;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row22;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row1;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row2;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row3;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row4;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row5;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row6;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row7;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row8;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row9;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row10;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row11;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row12;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row13;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row14;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row15;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row16;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row17;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row18;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row19;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row20;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row21;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row22;)Lorg/jooq/Field;
@3.8.0
+#with(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep1;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep2;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep3;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep4;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep5;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep6;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep7;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep8;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep9;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep10;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep11;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep12;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep13;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep14;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep15;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep16;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep17;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep18;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep19;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep20;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep21;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep22;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep1;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep2;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep3;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep4;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep5;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep6;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep7;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep8;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep9;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep10;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep11;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep12;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep13;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep14;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep15;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep16;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep17;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep18;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep19;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep20;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep21;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep22;
+#constraint(Lorg/jooq/Name;)Lorg/jooq/ConstraintTypeStep;
+#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createViewIfNotExists(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createIndexIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createIndexIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createSequenceIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
+#createSequenceIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
+#createSequenceIfNotExists(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
+#catalog(Lorg/jooq/Name;)Lorg/jooq/Catalog;
+#queries([Lorg/jooq/Query;)Lorg/jooq/Queries;
+#queries(Ljava/util/Collection;)Lorg/jooq/Queries;
+#condition(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#field(Lorg/jooq/Row1;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row2;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row3;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row4;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row5;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row6;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row7;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row8;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row9;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row10;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row11;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row12;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row13;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row14;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row15;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row16;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row17;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row18;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row19;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row20;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row21;)Lorg/jooq/Field;
+#field(Lorg/jooq/Row22;)Lorg/jooq/Field;
+#ifnull(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#ifnull(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#ifnull(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#ifnull(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#toDate(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#toDate(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#toDate(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#toDate(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#toTimestamp(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#toTimestamp(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#toTimestamp(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#toTimestamp(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#mode()Lorg/jooq/OrderedAggregateFunctionOfDeferredType;
+#rangeUnboundedPreceding()Lorg/jooq/WindowSpecificationFinalStep;
+#rangePreceding(I)Lorg/jooq/WindowSpecificationFinalStep;
+#rangeCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
+#rangeUnboundedFollowing()Lorg/jooq/WindowSpecificationFinalStep;
+#rangeFollowing(I)Lorg/jooq/WindowSpecificationFinalStep;
+#rangeBetweenUnboundedPreceding()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rangeBetweenPreceding(I)Lorg/jooq/WindowSpecificationRowsAndStep;
+#rangeBetweenCurrentRow()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rangeBetweenUnboundedFollowing()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rangeBetweenFollowing(I)Lorg/jooq/WindowSpecificationRowsAndStep;
+#value(B)Lorg/jooq/Param;
+#value(Ljava/lang/Byte;)Lorg/jooq/Param;
+#value(Lorg/jooq/types/UByte;)Lorg/jooq/Param;
+#value(S)Lorg/jooq/Param;
+#value(Ljava/lang/Short;)Lorg/jooq/Param;
+#value(Lorg/jooq/types/UShort;)Lorg/jooq/Param;
+#value(I)Lorg/jooq/Param;
+#value(Ljava/lang/Integer;)Lorg/jooq/Param;
+#value(Lorg/jooq/types/UInteger;)Lorg/jooq/Param;
+#value(J)Lorg/jooq/Param;
+#value(Ljava/lang/Long;)Lorg/jooq/Param;
+#value(Lorg/jooq/types/ULong;)Lorg/jooq/Param;
+#value(F)Lorg/jooq/Param;
+#value(Ljava/lang/Float;)Lorg/jooq/Param;
+#value(D)Lorg/jooq/Param;
+#value(Ljava/lang/Double;)Lorg/jooq/Param;
+#value(Z)Lorg/jooq/Param;
+#value(Ljava/lang/Boolean;)Lorg/jooq/Param;
+#value(Ljava/math/BigDecimal;)Lorg/jooq/Param;
+#value(Ljava/math/BigInteger;)Lorg/jooq/Param;
+#value([B)Lorg/jooq/Param;
+#value(Ljava/lang/String;)Lorg/jooq/Param;
+#value(Ljava/sql/Date;)Lorg/jooq/Param;
+#value(Ljava/sql/Time;)Lorg/jooq/Param;
+#value(Ljava/sql/Timestamp;)Lorg/jooq/Param;
+#value(Ljava/time/LocalDate;)Lorg/jooq/Param;
+#value(Ljava/time/LocalTime;)Lorg/jooq/Param;
+#value(Ljava/time/LocalDateTime;)Lorg/jooq/Param;
+#value(Ljava/time/OffsetTime;)Lorg/jooq/Param;
+#value(Ljava/time/OffsetDateTime;)Lorg/jooq/Param;
+#value(Ljava/util/UUID;)Lorg/jooq/Param;
+#inline(B)Lorg/jooq/Param;
+#inline(Ljava/lang/Byte;)Lorg/jooq/Param;
+#inline(Lorg/jooq/types/UByte;)Lorg/jooq/Param;
+#inline(S)Lorg/jooq/Param;
+#inline(Ljava/lang/Short;)Lorg/jooq/Param;
+#inline(Lorg/jooq/types/UShort;)Lorg/jooq/Param;
+#inline(I)Lorg/jooq/Param;
+#inline(Ljava/lang/Integer;)Lorg/jooq/Param;
+#inline(Lorg/jooq/types/UInteger;)Lorg/jooq/Param;
+#inline(J)Lorg/jooq/Param;
+#inline(Ljava/lang/Long;)Lorg/jooq/Param;
+#inline(Lorg/jooq/types/ULong;)Lorg/jooq/Param;
+#inline(F)Lorg/jooq/Param;
+#inline(Ljava/lang/Float;)Lorg/jooq/Param;
+#inline(D)Lorg/jooq/Param;
+#inline(Ljava/lang/Double;)Lorg/jooq/Param;
+#inline(Z)Lorg/jooq/Param;
+#inline(Ljava/lang/Boolean;)Lorg/jooq/Param;
+#inline(Ljava/math/BigDecimal;)Lorg/jooq/Param;
+#inline(Ljava/math/BigInteger;)Lorg/jooq/Param;
+#inline([B)Lorg/jooq/Param;
+#inline(Ljava/lang/String;)Lorg/jooq/Param;
+#inline(Ljava/sql/Date;)Lorg/jooq/Param;
+#inline(Ljava/sql/Time;)Lorg/jooq/Param;
+#inline(Ljava/sql/Timestamp;)Lorg/jooq/Param;
+#inline(Ljava/time/LocalDate;)Lorg/jooq/Param;
+#inline(Ljava/time/LocalTime;)Lorg/jooq/Param;
+#inline(Ljava/time/LocalDateTime;)Lorg/jooq/Param;
+#inline(Ljava/time/OffsetTime;)Lorg/jooq/Param;
+#inline(Ljava/time/OffsetDateTime;)Lorg/jooq/Param;
+#inline(Ljava/util/UUID;)Lorg/jooq/Param;
+#val(B)Lorg/jooq/Param;
+#val(Ljava/lang/Byte;)Lorg/jooq/Param;
+#val(Lorg/jooq/types/UByte;)Lorg/jooq/Param;
+#val(S)Lorg/jooq/Param;
+#val(Ljava/lang/Short;)Lorg/jooq/Param;
+#val(Lorg/jooq/types/UShort;)Lorg/jooq/Param;
+#val(I)Lorg/jooq/Param;
+#val(Ljava/lang/Integer;)Lorg/jooq/Param;
+#val(Lorg/jooq/types/UInteger;)Lorg/jooq/Param;
+#val(J)Lorg/jooq/Param;
+#val(Ljava/lang/Long;)Lorg/jooq/Param;
+#val(Lorg/jooq/types/ULong;)Lorg/jooq/Param;
+#val(F)Lorg/jooq/Param;
+#val(Ljava/lang/Float;)Lorg/jooq/Param;
+#val(D)Lorg/jooq/Param;
+#val(Ljava/lang/Double;)Lorg/jooq/Param;
+#val(Z)Lorg/jooq/Param;
+#val(Ljava/lang/Boolean;)Lorg/jooq/Param;
+#val(Ljava/math/BigDecimal;)Lorg/jooq/Param;
+#val(Ljava/math/BigInteger;)Lorg/jooq/Param;
+#val([B)Lorg/jooq/Param;
+#val(Ljava/lang/String;)Lorg/jooq/Param;
+#val(Ljava/sql/Date;)Lorg/jooq/Param;
+#val(Ljava/sql/Time;)Lorg/jooq/Param;
+#val(Ljava/sql/Timestamp;)Lorg/jooq/Param;
+#val(Ljava/time/LocalDate;)Lorg/jooq/Param;
+#val(Ljava/time/LocalTime;)Lorg/jooq/Param;
+#val(Ljava/time/LocalDateTime;)Lorg/jooq/Param;
+#val(Ljava/time/OffsetTime;)Lorg/jooq/Param;
+#val(Ljava/time/OffsetDateTime;)Lorg/jooq/Param;
+#val(Ljava/util/UUID;)Lorg/jooq/Param;
+#recordType([Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Ljava/util/Collection;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#recordType(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/RecordType;
+#zero()Lorg/jooq/Param;
+#one()Lorg/jooq/Param;
+#two()Lorg/jooq/Param;
-#rowField(Lorg/jooq/Row1;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row2;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row3;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row4;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row5;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row6;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row7;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row8;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row9;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row10;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row11;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row12;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row13;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row14;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row15;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row16;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row17;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row18;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row19;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row20;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row21;)Lorg/jooq/Field;
-#rowField(Lorg/jooq/Row22;)Lorg/jooq/Field;
-#zero()Lorg/jooq/Field;
-#one()Lorg/jooq/Field;
-#two()Lorg/jooq/Field;
@3.8.1
+#rowField(Lorg/jooq/Row1;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row2;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row3;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row4;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row5;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row6;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row7;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row8;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row9;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row10;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row11;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row12;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row13;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row14;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row15;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row16;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row17;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row18;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row19;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row20;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row21;)Lorg/jooq/Field;
+#rowField(Lorg/jooq/Row22;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row1;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row2;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row3;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row4;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row5;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row6;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row7;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row8;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row9;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row10;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row11;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row12;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row13;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row14;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row15;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row16;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row17;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row18;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row19;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row20;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row21;)Lorg/jooq/Field;
-#field(Lorg/jooq/Row22;)Lorg/jooq/Field;
@3.9.0
+#with(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;
+#constraint()Lorg/jooq/ConstraintTypeStep;
+#primaryKey([Ljava/lang/String;)Lorg/jooq/ConstraintFinalStep;
+#primaryKey([Lorg/jooq/Field;)Lorg/jooq/ConstraintFinalStep;
+#foreignKey([Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStepN;
+#foreignKey([Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStepN;
+#foreignKey(Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep1;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep2;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep3;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep4;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep5;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep6;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep7;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep8;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep9;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep10;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep11;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep12;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep13;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep14;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep15;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep16;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep17;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep18;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep19;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep20;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep21;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep22;
+#foreignKey(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep1;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep2;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep3;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep4;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep5;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep6;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep7;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep8;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep9;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep10;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep11;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep12;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep13;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep14;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep15;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep16;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep17;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep18;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep19;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep20;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep21;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep22;
+#unique([Ljava/lang/String;)Lorg/jooq/ConstraintFinalStep;
+#unique([Lorg/jooq/Field;)Lorg/jooq/ConstraintFinalStep;
+#check(Lorg/jooq/Condition;)Lorg/jooq/ConstraintFinalStep;
+#createSchema(Ljava/lang/String;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchema(Lorg/jooq/Name;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchema(Lorg/jooq/Schema;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Lorg/jooq/Schema;)Lorg/jooq/CreateSchemaFinalStep;
+#createView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#alterSequence(Ljava/lang/String;)Lorg/jooq/AlterSequenceStep;
+#alterSequence(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceStep;
+#alterSequence(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Ljava/lang/String;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceStep;
+#alterTableIfExists(Ljava/lang/String;)Lorg/jooq/AlterTableStep;
+#alterTableIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterTableStep;
+#alterTableIfExists(Lorg/jooq/Table;)Lorg/jooq/AlterTableStep;
+#alterSchema(Ljava/lang/String;)Lorg/jooq/AlterSchemaStep;
+#alterSchema(Lorg/jooq/Name;)Lorg/jooq/AlterSchemaStep;
+#alterSchema(Lorg/jooq/Schema;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Ljava/lang/String;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Lorg/jooq/Schema;)Lorg/jooq/AlterSchemaStep;
+#alterView(Ljava/lang/String;)Lorg/jooq/AlterViewStep;
+#alterView(Lorg/jooq/Name;)Lorg/jooq/AlterViewStep;
+#alterView(Lorg/jooq/Table;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Ljava/lang/String;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Lorg/jooq/Table;)Lorg/jooq/AlterViewStep;
+#alterIndex(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
+#alterIndex(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
+#dropSchema(Ljava/lang/String;)Lorg/jooq/DropSchemaStep;
+#dropSchema(Lorg/jooq/Name;)Lorg/jooq/DropSchemaStep;
+#dropSchema(Lorg/jooq/Schema;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Ljava/lang/String;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Lorg/jooq/Name;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Lorg/jooq/Schema;)Lorg/jooq/DropSchemaStep;
+#name(Ljava/util/Collection;)Lorg/jooq/Name;
+#position(Ljava/lang/String;Ljava/lang/String;I)Lorg/jooq/Field;
+#position(Ljava/lang/String;Lorg/jooq/Field;I)Lorg/jooq/Field;
+#position(Lorg/jooq/Field;Ljava/lang/String;I)Lorg/jooq/Field;
+#position(Lorg/jooq/Field;Lorg/jooq/Field;I)Lorg/jooq/Field;
+#position(Ljava/lang/String;Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#position(Ljava/lang/String;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#position(Lorg/jooq/Field;Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#position(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#currentLocalDate()Lorg/jooq/Field;
+#currentLocalTime()Lorg/jooq/Field;
+#currentLocalDateTime()Lorg/jooq/Field;
+#currentOffsetTime()Lorg/jooq/Field;
+#currentOffsetDateTime()Lorg/jooq/Field;
+#trunc(Ljava/time/LocalDate;)Lorg/jooq/Field;
+#trunc(Ljava/time/LocalDate;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#trunc(Ljava/time/LocalDateTime;)Lorg/jooq/Field;
+#trunc(Ljava/time/LocalDateTime;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#extract(Ljava/time/temporal/Temporal;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#year(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#month(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#day(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#hour(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#minute(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#second(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#localDate(Ljava/lang/String;)Lorg/jooq/Field;
+#localDate(Ljava/time/LocalDate;)Lorg/jooq/Field;
+#localDate(Lorg/jooq/Field;)Lorg/jooq/Field;
+#localTime(Ljava/lang/String;)Lorg/jooq/Field;
+#localTime(Ljava/time/LocalTime;)Lorg/jooq/Field;
+#localTime(Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateTime(Ljava/lang/String;)Lorg/jooq/Field;
+#localDateTime(Ljava/time/LocalDateTime;)Lorg/jooq/Field;
+#localDateTime(Lorg/jooq/Field;)Lorg/jooq/Field;
+#offsetTime(Ljava/lang/String;)Lorg/jooq/Field;
+#offsetTime(Ljava/time/OffsetTime;)Lorg/jooq/Field;
+#offsetTime(Lorg/jooq/Field;)Lorg/jooq/Field;
+#offsetDateTime(Ljava/lang/String;)Lorg/jooq/Field;
+#offsetDateTime(Ljava/time/OffsetDateTime;)Lorg/jooq/Field;
+#offsetDateTime(Lorg/jooq/Field;)Lorg/jooq/Field;
+#toLocalDate(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#toLocalDate(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#toLocalDate(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#toLocalDate(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#toLocalDateTime(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#toLocalDateTime(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#toLocalDateTime(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#toLocalDateTime(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowSpecificationRowsStep;
+#ratioToReport(Ljava/lang/Number;)Lorg/jooq/WindowOverStep;
+#ratioToReport(Lorg/jooq/Field;)Lorg/jooq/WindowOverStep;
-#alterSequence(Ljava/lang/String;)Lorg/jooq/AlterSequenceRestartStep;
-#alterSequence(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceRestartStep;
-#alterSequence(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceRestartStep;
-#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowSpecificationOrderByStep;
@3.10.0
+#with(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep1;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep2;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep3;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep4;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep5;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep6;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep7;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep8;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep9;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep10;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep11;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep12;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep13;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep14;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep15;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep16;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep17;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep18;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep19;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep20;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep21;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep22;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep1;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep2;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep3;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep4;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep5;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep6;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep7;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep8;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep9;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep10;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep11;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep12;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep13;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep14;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep15;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep16;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep17;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep18;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep19;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep20;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep21;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep22;
+#primaryKey([Lorg/jooq/Name;)Lorg/jooq/ConstraintFinalStep;
+#foreignKey([Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStepN;
+#foreignKey(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep1;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep2;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep3;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep4;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep5;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep6;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep7;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep8;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep9;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep10;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep11;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep12;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep13;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep14;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep15;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep16;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep17;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep18;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep19;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep20;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep21;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep22;
+#unique([Lorg/jooq/Name;)Lorg/jooq/ConstraintFinalStep;
+#createIndex(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createIndexIfNotExists(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#alterIndex(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
+#dropIndex(Lorg/jooq/Index;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/DropIndexOnStep;
+#name(Ljava/lang/String;)Lorg/jooq/Name;
+#name([Lorg/jooq/Name;)Lorg/jooq/Name;
+#quotedName(Ljava/lang/String;)Lorg/jooq/Name;
+#quotedName([Ljava/lang/String;)Lorg/jooq/Name;
+#quotedName(Ljava/util/Collection;)Lorg/jooq/Name;
+#unquotedName(Ljava/lang/String;)Lorg/jooq/Name;
+#unquotedName([Ljava/lang/String;)Lorg/jooq/Name;
+#unquotedName(Ljava/util/Collection;)Lorg/jooq/Name;
+#index(Lorg/jooq/Name;)Lorg/jooq/Index;
*#sequence(Ljava/lang/String;)Lorg/jooq/Sequence;[deprecated]
*#sequence(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Sequence;[deprecated]
*#sequence(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Sequence;[deprecated]
+#trueCondition()Lorg/jooq/True;
+#falseCondition()Lorg/jooq/False;
+#localDateDiff(Ljava/time/LocalDate;Ljava/time/LocalDate;)Lorg/jooq/Field;
+#localDateDiff(Lorg/jooq/Field;Ljava/time/LocalDate;)Lorg/jooq/Field;
+#localDateDiff(Ljava/time/LocalDate;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateDiff(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateAdd(Ljava/time/LocalDate;Ljava/lang/Number;)Lorg/jooq/Field;
+#localDateAdd(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateAdd(Ljava/time/LocalDate;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateAdd(Ljava/time/LocalDate;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateAdd(Lorg/jooq/Field;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateAdd(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateSub(Ljava/time/LocalDate;Ljava/lang/Number;)Lorg/jooq/Field;
+#localDateSub(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateSub(Ljava/time/LocalDate;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateSub(Ljava/time/LocalDate;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateSub(Lorg/jooq/Field;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateSub(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#arrayAggDistinct(Lorg/jooq/Field;)Lorg/jooq/ArrayAggOrderByStep;
+#rank(Ljava/util/Collection;)Lorg/jooq/OrderedAggregateFunction;
+#denseRank(Ljava/util/Collection;)Lorg/jooq/OrderedAggregateFunction;
+#percentRank(Ljava/util/Collection;)Lorg/jooq/OrderedAggregateFunction;
+#cumeDist(Ljava/util/Collection;)Lorg/jooq/OrderedAggregateFunction;
+#orderBy([Lorg/jooq/OrderField;)Lorg/jooq/WindowSpecificationRowsStep;
+#widthBucket(Lorg/jooq/Field;Ljava/lang/Number;Ljava/lang/Number;I)Lorg/jooq/Field;
+#widthBucket(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
-#trueCondition()Lorg/jooq/Condition;
-#falseCondition()Lorg/jooq/Condition;
-#orderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowSpecificationRowsStep;
@3.10.2
+#and(Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#or(Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#condition(Lorg/jooq/Operator;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Condition;
@3.10.5
+#setCatalog(Ljava/lang/String;)Lorg/jooq/Query;
+#setCatalog(Lorg/jooq/Name;)Lorg/jooq/Query;
+#setCatalog(Lorg/jooq/Catalog;)Lorg/jooq/Query;
+#setSchema(Ljava/lang/String;)Lorg/jooq/Query;
+#setSchema(Lorg/jooq/Name;)Lorg/jooq/Query;
+#setSchema(Lorg/jooq/Schema;)Lorg/jooq/Query;
@3.10.6
+#with(Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#now()Lorg/jooq/Field;
@3.11.0
+#selectFrom(Lorg/jooq/Name;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Lorg/jooq/SQL;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectWhereStep;
+#select([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
+#comment(Ljava/lang/String;)Lorg/jooq/Comment;
+#commentOnTable(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#commentOnTable(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnTable(Lorg/jooq/Table;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Lorg/jooq/Table;)Lorg/jooq/CommentOnIsStep;
+#commentOnColumn(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnColumn(Lorg/jooq/Field;)Lorg/jooq/CommentOnIsStep;
+#createOrReplaceView(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createIndex()Lorg/jooq/CreateIndexStep;
+#createUniqueIndex()Lorg/jooq/CreateIndexStep;
+#alterIndex(Ljava/lang/String;)Lorg/jooq/AlterIndexOnStep;
+#alterIndex(Lorg/jooq/Name;)Lorg/jooq/AlterIndexOnStep;
+#alterIndex(Lorg/jooq/Index;)Lorg/jooq/AlterIndexOnStep;
+#dropTemporaryTable(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#grant(Lorg/jooq/Privilege;)Lorg/jooq/GrantOnStep;
+#grant([Lorg/jooq/Privilege;)Lorg/jooq/GrantOnStep;
+#grant(Ljava/util/Collection;)Lorg/jooq/GrantOnStep;
+#revoke(Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revoke([Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revoke(Ljava/util/Collection;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor(Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor([Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor(Ljava/util/Collection;)Lorg/jooq/RevokeOnStep;
+#collation(Ljava/lang/String;)Lorg/jooq/Collation;
+#collation(Lorg/jooq/Name;)Lorg/jooq/Collation;
+#privilege(Ljava/lang/String;)Lorg/jooq/Privilege;
+#user(Ljava/lang/String;)Lorg/jooq/User;
+#user(Lorg/jooq/Name;)Lorg/jooq/User;
+#role(Ljava/lang/String;)Lorg/jooq/Role;
+#role(Lorg/jooq/Name;)Lorg/jooq/Role;
+#table(Ljava/util/Collection;)Lorg/jooq/Table;
+#unnest(Ljava/util/Collection;)Lorg/jooq/Table;
+#generateSeries(III)Lorg/jooq/Table;
+#generateSeries(ILorg/jooq/Field;I)Lorg/jooq/Table;
+#generateSeries(Lorg/jooq/Field;II)Lorg/jooq/Table;
+#generateSeries(Lorg/jooq/Field;Lorg/jooq/Field;I)Lorg/jooq/Table;
+#generateSeries(IILorg/jooq/Field;)Lorg/jooq/Table;
+#generateSeries(ILorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Table;
+#generateSeries(Lorg/jooq/Field;ILorg/jooq/Field;)Lorg/jooq/Table;
+#generateSeries(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Table;
+#table(Lorg/jooq/Name;Lorg/jooq/Comment;)Lorg/jooq/Table;
+#field(Lorg/jooq/Name;Lorg/jooq/DataType;Lorg/jooq/Comment;)Lorg/jooq/Field;
+#begin([Lorg/jooq/Statement;)Lorg/jooq/Block;
+#begin(Ljava/util/Collection;)Lorg/jooq/Block;
+#noCondition()Lorg/jooq/Condition;
+#choose(I[Ljava/lang/Object;)Lorg/jooq/Field;
+#choose(I[Lorg/jooq/Field;)Lorg/jooq/Field;
+#choose(Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Field;
+#choose(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#iif(Lorg/jooq/Condition;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#iif(Lorg/jooq/Condition;Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#iif(Lorg/jooq/Condition;Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#iif(Lorg/jooq/Condition;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#translate(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#translate(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampSub(Ljava/sql/Timestamp;Ljava/lang/Number;)Lorg/jooq/Field;
+#timestampSub(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampSub(Ljava/sql/Timestamp;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#timestampSub(Ljava/sql/Timestamp;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#timestampSub(Lorg/jooq/Field;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#timestampSub(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateTimeAdd(Ljava/time/LocalDateTime;Ljava/lang/Number;)Lorg/jooq/Field;
+#localDateTimeAdd(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateTimeAdd(Ljava/time/LocalDateTime;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateTimeAdd(Ljava/time/LocalDateTime;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateTimeAdd(Lorg/jooq/Field;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateTimeAdd(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateTimeSub(Ljava/time/LocalDateTime;Ljava/lang/Number;)Lorg/jooq/Field;
+#localDateTimeSub(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateTimeSub(Ljava/time/LocalDateTime;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateTimeSub(Ljava/time/LocalDateTime;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateTimeSub(Lorg/jooq/Field;Ljava/lang/Number;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateTimeSub(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#localDateTimeDiff(Ljava/time/LocalDateTime;Ljava/time/LocalDateTime;)Lorg/jooq/Field;
+#localDateTimeDiff(Lorg/jooq/Field;Ljava/time/LocalDateTime;)Lorg/jooq/Field;
+#localDateTimeDiff(Ljava/time/LocalDateTime;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateTimeDiff(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#count(Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/AggregateFunction;
+#countDistinct(Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/AggregateFunction;
+#nthValue(Lorg/jooq/Field;I)Lorg/jooq/WindowFromFirstLastStep;
+#nthValue(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/WindowFromFirstLastStep;
+#asterisk()Lorg/jooq/Asterisk;
*#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;[deprecated]
-#select([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
-#selectDistinct([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
-#alterIndex(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
-#alterIndex(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
-#alterIndex(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
-#table(Ljava/util/List;)Lorg/jooq/Table;
-#unnest(Ljava/util/List;)Lorg/jooq/Table;
-#nthValue(Lorg/jooq/Field;I)Lorg/jooq/WindowIgnoreNullsStep;
-#nthValue(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
@3.12.0
+#setCatalog(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#setCatalog(Lorg/jooq/Name;)Lorg/jooq/RowCountQuery;
+#setCatalog(Lorg/jooq/Catalog;)Lorg/jooq/RowCountQuery;
+#setSchema(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#setSchema(Lorg/jooq/Name;)Lorg/jooq/RowCountQuery;
+#setSchema(Lorg/jooq/Schema;)Lorg/jooq/RowCountQuery;
+#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createType(Ljava/lang/String;)Lorg/jooq/CreateTypeStep;
+#createType(Lorg/jooq/Name;)Lorg/jooq/CreateTypeStep;
+#dropType(Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropType(Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropType([Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropType([Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropType(Ljava/util/Collection;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists([Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists([Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Ljava/util/Collection;)Lorg/jooq/DropTypeStep;
+#createSequence(Ljava/lang/String;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequence(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequence(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFlagsStep;
+#truncate(Ljava/lang/String;)Lorg/jooq/TruncateIdentityStep;
+#truncateTable(Ljava/lang/String;)Lorg/jooq/TruncateIdentityStep;
+#truncateTable(Lorg/jooq/Name;)Lorg/jooq/TruncateIdentityStep;
+#truncateTable(Lorg/jooq/Table;)Lorg/jooq/TruncateIdentityStep;
+#all([Lorg/jooq/Field;)Lorg/jooq/QuantifiedSelect;
+#any([Lorg/jooq/Field;)Lorg/jooq/QuantifiedSelect;
+#characterSet(Ljava/lang/String;)Lorg/jooq/CharacterSet;
+#characterSet(Lorg/jooq/Name;)Lorg/jooq/CharacterSet;
+#default_()Lorg/jooq/Field;
+#default_(Ljava/lang/Class;)Lorg/jooq/Field;
+#default_(Lorg/jooq/DataType;)Lorg/jooq/Field;
+#default_(Lorg/jooq/Field;)Lorg/jooq/Field;
+#query(Lorg/jooq/SQL;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/RowCountQuery;
+#unique(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notUnique(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#rowField(Lorg/jooq/RowN;)Lorg/jooq/Field;
+#case_()Lorg/jooq/Case;
+#case_(Ljava/lang/Object;)Lorg/jooq/CaseValueStep;
+#case_(Lorg/jooq/Field;)Lorg/jooq/CaseValueStep;
+#trim(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#trim(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#rtrim(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#rtrim(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#ltrim(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#ltrim(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#currentTimestamp(Lorg/jooq/Field;)Lorg/jooq/Field;
+#now(Lorg/jooq/Field;)Lorg/jooq/Field;
+#currentInstant()Lorg/jooq/Field;
+#epoch(Ljava/util/Date;)Lorg/jooq/Field;
+#epoch(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#epoch(Lorg/jooq/Field;)Lorg/jooq/Field;
+#millennium(Ljava/util/Date;)Lorg/jooq/Field;
+#millennium(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#millennium(Lorg/jooq/Field;)Lorg/jooq/Field;
+#century(Ljava/util/Date;)Lorg/jooq/Field;
+#century(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#century(Lorg/jooq/Field;)Lorg/jooq/Field;
+#decade(Ljava/util/Date;)Lorg/jooq/Field;
+#decade(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#decade(Lorg/jooq/Field;)Lorg/jooq/Field;
+#quarter(Ljava/util/Date;)Lorg/jooq/Field;
+#quarter(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#quarter(Lorg/jooq/Field;)Lorg/jooq/Field;
+#week(Ljava/util/Date;)Lorg/jooq/Field;
+#week(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#week(Lorg/jooq/Field;)Lorg/jooq/Field;
+#dayOfWeek(Ljava/util/Date;)Lorg/jooq/Field;
+#dayOfWeek(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#dayOfWeek(Lorg/jooq/Field;)Lorg/jooq/Field;
+#isoDayOfWeek(Ljava/util/Date;)Lorg/jooq/Field;
+#isoDayOfWeek(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#isoDayOfWeek(Lorg/jooq/Field;)Lorg/jooq/Field;
+#dayOfYear(Ljava/util/Date;)Lorg/jooq/Field;
+#dayOfYear(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#dayOfYear(Lorg/jooq/Field;)Lorg/jooq/Field;
+#millisecond(Ljava/util/Date;)Lorg/jooq/Field;
+#millisecond(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#millisecond(Lorg/jooq/Field;)Lorg/jooq/Field;
+#microsecond(Ljava/util/Date;)Lorg/jooq/Field;
+#microsecond(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#microsecond(Lorg/jooq/Field;)Lorg/jooq/Field;
+#timezone(Ljava/util/Date;)Lorg/jooq/Field;
+#timezone(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#timezone(Lorg/jooq/Field;)Lorg/jooq/Field;
+#timezoneHour(Ljava/util/Date;)Lorg/jooq/Field;
+#timezoneHour(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#timezoneHour(Lorg/jooq/Field;)Lorg/jooq/Field;
+#timezoneMinute(Ljava/util/Date;)Lorg/jooq/Field;
+#timezoneMinute(Ljava/time/temporal/Temporal;)Lorg/jooq/Field;
+#timezoneMinute(Lorg/jooq/Field;)Lorg/jooq/Field;
+#instant(Ljava/lang/String;)Lorg/jooq/Field;
+#instant(Ljava/time/Instant;)Lorg/jooq/Field;
+#instant(Lorg/jooq/Field;)Lorg/jooq/Field;
+#neg(Lorg/jooq/Field;)Lorg/jooq/Field;
+#minus(Lorg/jooq/Field;)Lorg/jooq/Field;
+#log(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#jsonArray([Lorg/jooq/Field;)Lorg/jooq/Field;
+#jsonArray(Ljava/util/Collection;)Lorg/jooq/Field;
+#jsonbArray([Lorg/jooq/Field;)Lorg/jooq/Field;
+#jsonbArray(Ljava/util/Collection;)Lorg/jooq/Field;
+#jsonEntry(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/JSONEntry;
+#jsonObject(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#jsonObject([Lorg/jooq/JSONEntry;)Lorg/jooq/Field;
+#jsonObject(Ljava/util/Collection;)Lorg/jooq/Field;
+#jsonbObject([Lorg/jooq/JSONEntry;)Lorg/jooq/Field;
+#jsonbObject(Ljava/util/Collection;)Lorg/jooq/Field;
+#product(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#productDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#mode(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
*#groupConcat(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/AggregateFunction;[deprecated]
+#rowsUnboundedPreceding()Lorg/jooq/WindowSpecificationExcludeStep;
+#rowsPreceding(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#rowsCurrentRow()Lorg/jooq/WindowSpecificationExcludeStep;
+#rowsUnboundedFollowing()Lorg/jooq/WindowSpecificationExcludeStep;
+#rowsFollowing(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#rangeUnboundedPreceding()Lorg/jooq/WindowSpecificationExcludeStep;
+#rangePreceding(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#rangeCurrentRow()Lorg/jooq/WindowSpecificationExcludeStep;
+#rangeUnboundedFollowing()Lorg/jooq/WindowSpecificationExcludeStep;
+#rangeFollowing(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsUnboundedPreceding()Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsPreceding(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsCurrentRow()Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsUnboundedFollowing()Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsFollowing(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsBetweenUnboundedPreceding()Lorg/jooq/WindowSpecificationRowsAndStep;
+#groupsBetweenPreceding(I)Lorg/jooq/WindowSpecificationRowsAndStep;
+#groupsBetweenCurrentRow()Lorg/jooq/WindowSpecificationRowsAndStep;
+#groupsBetweenUnboundedFollowing()Lorg/jooq/WindowSpecificationRowsAndStep;
+#groupsBetweenFollowing(I)Lorg/jooq/WindowSpecificationRowsAndStep;
+#value(Ljava/time/Instant;)Lorg/jooq/Param;
+#inline(Ljava/time/Instant;)Lorg/jooq/Param;
+#val(Ljava/time/Instant;)Lorg/jooq/Param;
-#setCatalog(Ljava/lang/String;)Lorg/jooq/Query;
-#setCatalog(Lorg/jooq/Name;)Lorg/jooq/Query;
-#setCatalog(Lorg/jooq/Catalog;)Lorg/jooq/Query;
-#setSchema(Ljava/lang/String;)Lorg/jooq/Query;
-#setSchema(Lorg/jooq/Name;)Lorg/jooq/Query;
-#setSchema(Lorg/jooq/Schema;)Lorg/jooq/Query;
-#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createSequence(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequence(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequence(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequenceIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequenceIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequenceIfNotExists(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
-#query(Lorg/jooq/SQL;)Lorg/jooq/Query;
-#query(Ljava/lang/String;)Lorg/jooq/Query;
-#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
-#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
-#rowsUnboundedPreceding()Lorg/jooq/WindowSpecificationFinalStep;
-#rowsPreceding(I)Lorg/jooq/WindowSpecificationFinalStep;
-#rowsCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
-#rowsUnboundedFollowing()Lorg/jooq/WindowSpecificationFinalStep;
-#rowsFollowing(I)Lorg/jooq/WindowSpecificationFinalStep;
-#rangeUnboundedPreceding()Lorg/jooq/WindowSpecificationFinalStep;
-#rangePreceding(I)Lorg/jooq/WindowSpecificationFinalStep;
-#rangeCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
-#rangeUnboundedFollowing()Lorg/jooq/WindowSpecificationFinalStep;
-#rangeFollowing(I)Lorg/jooq/WindowSpecificationFinalStep;
@3.13.0
+#deleteFrom(Lorg/jooq/Table;)Lorg/jooq/DeleteUsingStep;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteUsingStep;
+#primaryKey([Ljava/lang/String;)Lorg/jooq/ConstraintEnforcementStep;
+#primaryKey([Lorg/jooq/Name;)Lorg/jooq/ConstraintEnforcementStep;
+#primaryKey([Lorg/jooq/Field;)Lorg/jooq/ConstraintEnforcementStep;
+#unique([Ljava/lang/String;)Lorg/jooq/ConstraintEnforcementStep;
+#unique([Lorg/jooq/Name;)Lorg/jooq/ConstraintEnforcementStep;
+#unique([Lorg/jooq/Field;)Lorg/jooq/ConstraintEnforcementStep;
+#check(Lorg/jooq/Condition;)Lorg/jooq/ConstraintEnforcementStep;
+#set(Lorg/jooq/Name;Lorg/jooq/Param;)Lorg/jooq/RowCountQuery;
+#createTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#alterType(Ljava/lang/String;)Lorg/jooq/AlterTypeStep;
+#alterType(Lorg/jooq/Name;)Lorg/jooq/AlterTypeStep;
+#dropTemporaryTableIfExists(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropTemporaryTableIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTemporaryTableIfExists(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#round(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
-#deleteFrom(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
-#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
-#primaryKey([Ljava/lang/String;)Lorg/jooq/ConstraintFinalStep;
-#primaryKey([Lorg/jooq/Name;)Lorg/jooq/ConstraintFinalStep;
-#primaryKey([Lorg/jooq/Field;)Lorg/jooq/ConstraintFinalStep;
-#unique([Ljava/lang/String;)Lorg/jooq/ConstraintFinalStep;
-#unique([Lorg/jooq/Name;)Lorg/jooq/ConstraintFinalStep;
-#unique([Lorg/jooq/Field;)Lorg/jooq/ConstraintFinalStep;
-#check(Lorg/jooq/Condition;)Lorg/jooq/ConstraintFinalStep;
@3.14.0
+#using(Ljava/lang/String;)Lorg/jooq/CloseableDSLContext;
+#using(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/CloseableDSLContext;
+#using(Ljava/lang/String;Ljava/util/Properties;)Lorg/jooq/CloseableDSLContext;
+#with(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
*#with(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;[deprecated]
+#with(Ljava/util/Collection;)Lorg/jooq/WithStep;
+#withRecursive(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
*#withRecursive(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;[deprecated]
+#withRecursive(Ljava/util/Collection;)Lorg/jooq/WithStep;
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;[deprecated]
*#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStepN;[deprecated]
*#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStepN;[deprecated]
+#createDatabase(Ljava/lang/String;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabase(Lorg/jooq/Name;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabase(Lorg/jooq/Catalog;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabaseIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabaseIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabaseIfNotExists(Lorg/jooq/Catalog;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDomain(Ljava/lang/String;)Lorg/jooq/CreateDomainAsStep;
+#createDomain(Lorg/jooq/Name;)Lorg/jooq/CreateDomainAsStep;
+#createDomain(Lorg/jooq/Domain;)Lorg/jooq/CreateDomainAsStep;
+#createDomainIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateDomainAsStep;
+#createDomainIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateDomainAsStep;
+#createDomainIfNotExists(Lorg/jooq/Domain;)Lorg/jooq/CreateDomainAsStep;
+#alterDatabase(Ljava/lang/String;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabase(Lorg/jooq/Name;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabase(Lorg/jooq/Catalog;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabaseIfExists(Ljava/lang/String;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabaseIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabaseIfExists(Lorg/jooq/Catalog;)Lorg/jooq/AlterDatabaseStep;
+#alterDomain(Ljava/lang/String;)Lorg/jooq/AlterDomainStep;
+#alterDomain(Lorg/jooq/Name;)Lorg/jooq/AlterDomainStep;
+#alterDomain(Lorg/jooq/Domain;)Lorg/jooq/AlterDomainStep;
+#alterDomainIfExists(Ljava/lang/String;)Lorg/jooq/AlterDomainStep;
+#alterDomainIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterDomainStep;
+#alterDomainIfExists(Lorg/jooq/Domain;)Lorg/jooq/AlterDomainStep;
+#dropDatabase(Ljava/lang/String;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabase(Lorg/jooq/Name;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabase(Lorg/jooq/Catalog;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabaseIfExists(Ljava/lang/String;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabaseIfExists(Lorg/jooq/Name;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabaseIfExists(Lorg/jooq/Catalog;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDomain(Ljava/lang/String;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomain(Lorg/jooq/Name;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomain(Lorg/jooq/Domain;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomainIfExists(Ljava/lang/String;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomainIfExists(Lorg/jooq/Name;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomainIfExists(Lorg/jooq/Domain;)Lorg/jooq/DropDomainCascadeStep;
*#createView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createOrReplaceView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createOrReplaceView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createOrReplaceView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createViewIfNotExists(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createViewIfNotExists(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
*#createViewIfNotExists(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;[deprecated]
+#catalog(Ljava/lang/String;)Lorg/jooq/Catalog;
+#schema(Ljava/lang/String;)Lorg/jooq/Schema;
+#value(Ljava/lang/Class;)Lorg/jooq/Field;
+#value(Lorg/jooq/DataType;)Lorg/jooq/Field;
+#domain(Ljava/lang/String;)Lorg/jooq/Domain;
+#domain(Lorg/jooq/Name;)Lorg/jooq/Domain;
+#if_(Lorg/jooq/Condition;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#if_(Lorg/jooq/Condition;Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#if_(Lorg/jooq/Condition;Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#if_(Lorg/jooq/Condition;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#when(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/CaseConditionStep;
+#when(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CaseConditionStep;
+#when(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/CaseConditionStep;
+#regexpReplaceAll(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#regexpReplaceAll(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#regexpReplaceFirst(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#regexpReplaceFirst(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#overlay(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/Number;)Lorg/jooq/Field;
+#overlay(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#overlay(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#overlay(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#insert(Lorg/jooq/Field;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/String;)Lorg/jooq/Field;
+#insert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#dateDiff(Lorg/jooq/DatePart;Ljava/sql/Date;Ljava/sql/Date;)Lorg/jooq/Field;
+#dateDiff(Lorg/jooq/DatePart;Lorg/jooq/Field;Ljava/sql/Date;)Lorg/jooq/Field;
+#dateDiff(Lorg/jooq/DatePart;Ljava/sql/Date;Lorg/jooq/Field;)Lorg/jooq/Field;
+#dateDiff(Lorg/jooq/DatePart;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateDiff(Lorg/jooq/DatePart;Ljava/time/LocalDate;Ljava/time/LocalDate;)Lorg/jooq/Field;
+#localDateDiff(Lorg/jooq/DatePart;Lorg/jooq/Field;Ljava/time/LocalDate;)Lorg/jooq/Field;
+#localDateDiff(Lorg/jooq/DatePart;Ljava/time/LocalDate;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateDiff(Lorg/jooq/DatePart;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#toChar(Ljava/lang/Object;)Lorg/jooq/Field;
+#toChar(Lorg/jooq/Field;)Lorg/jooq/Field;
+#toChar(Ljava/lang/Object;Ljava/lang/String;)Lorg/jooq/Field;
+#toChar(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#toChar(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#toChar(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlparseDocument(Ljava/lang/String;)Lorg/jooq/Field;
+#xmlparseDocument(Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlparseContent(Ljava/lang/String;)Lorg/jooq/Field;
+#xmlparseContent(Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlcomment(Ljava/lang/String;)Lorg/jooq/Field;
+#xmlcomment(Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlconcat([Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlconcat(Ljava/util/Collection;)Lorg/jooq/Field;
+#xmlelement(Ljava/lang/String;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlelement(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/Field;
+#xmlelement(Lorg/jooq/Name;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlelement(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/Field;
+#xmlelement(Ljava/lang/String;Lorg/jooq/XMLAttributes;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlelement(Ljava/lang/String;Lorg/jooq/XMLAttributes;Ljava/util/Collection;)Lorg/jooq/Field;
+#xmlelement(Lorg/jooq/Name;Lorg/jooq/XMLAttributes;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlelement(Lorg/jooq/Name;Lorg/jooq/XMLAttributes;Ljava/util/Collection;)Lorg/jooq/Field;
+#xmlattributes([Lorg/jooq/Field;)Lorg/jooq/XMLAttributes;
+#xmlattributes(Ljava/util/Collection;)Lorg/jooq/XMLAttributes;
+#xmlpi(Ljava/lang/String;)Lorg/jooq/Field;
+#xmlpi(Lorg/jooq/Name;)Lorg/jooq/Field;
+#xmlpi(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlpi(Lorg/jooq/Name;Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlforest([Lorg/jooq/Field;)Lorg/jooq/Field;
+#xmlforest(Ljava/util/Collection;)Lorg/jooq/Field;
+#xmlagg(Lorg/jooq/Field;)Lorg/jooq/XMLAggOrderByStep;
+#xmlquery(Ljava/lang/String;)Lorg/jooq/XMLQueryPassingStep;
+#xmlquery(Lorg/jooq/Field;)Lorg/jooq/XMLQueryPassingStep;
+#xmlexists(Ljava/lang/String;)Lorg/jooq/XMLExistsPassingStep;
+#xmlexists(Lorg/jooq/Field;)Lorg/jooq/XMLExistsPassingStep;
+#xmltable(Ljava/lang/String;)Lorg/jooq/XMLTablePassingStep;
+#xmltable(Lorg/jooq/Field;)Lorg/jooq/XMLTablePassingStep;
+#jsonValue(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/JSONValueOnStep;
+#jsonValue(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/JSONValueOnStep;
+#jsonbValue(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/JSONValueOnStep;
+#jsonbValue(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/JSONValueOnStep;
+#jsonArray([Lorg/jooq/Field;)Lorg/jooq/JSONArrayNullStep;
+#jsonArray(Ljava/util/Collection;)Lorg/jooq/JSONArrayNullStep;
+#jsonbArray([Lorg/jooq/Field;)Lorg/jooq/JSONArrayNullStep;
+#jsonbArray(Ljava/util/Collection;)Lorg/jooq/JSONArrayNullStep;
+#jsonEntry(Lorg/jooq/Field;)Lorg/jooq/JSONEntry;
+#jsonEntry(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/JSONEntry;
+#jsonObject(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/JSONObjectNullStep;
+#jsonObject(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/JSONObjectNullStep;
+#jsonObject()Lorg/jooq/JSONObjectNullStep;
+#jsonObject([Lorg/jooq/Field;)Lorg/jooq/JSONObjectNullStep;
+#jsonObject([Lorg/jooq/JSONEntry;)Lorg/jooq/JSONObjectNullStep;
+#jsonObject(Ljava/util/Collection;)Lorg/jooq/JSONObjectNullStep;
+#jsonbObject([Lorg/jooq/Field;)Lorg/jooq/JSONObjectNullStep;
+#jsonbObject([Lorg/jooq/JSONEntry;)Lorg/jooq/JSONObjectNullStep;
+#jsonbObject(Ljava/util/Collection;)Lorg/jooq/JSONObjectNullStep;
+#jsonArrayAgg(Lorg/jooq/Field;)Lorg/jooq/JSONArrayAggOrderByStep;
+#jsonbArrayAgg(Lorg/jooq/Field;)Lorg/jooq/JSONArrayAggOrderByStep;
+#jsonObjectAgg(Lorg/jooq/Field;)Lorg/jooq/JSONObjectAggNullStep;
+#jsonObjectAgg(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/JSONObjectAggNullStep;
+#jsonObjectAgg(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/JSONObjectAggNullStep;
+#jsonObjectAgg(Lorg/jooq/JSONEntry;)Lorg/jooq/JSONObjectAggNullStep;
+#jsonbObjectAgg(Lorg/jooq/Field;)Lorg/jooq/JSONObjectAggNullStep;
+#jsonbObjectAgg(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/JSONObjectAggNullStep;
+#jsonbObjectAgg(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/JSONObjectAggNullStep;
+#jsonbObjectAgg(Lorg/jooq/JSONEntry;)Lorg/jooq/JSONObjectAggNullStep;
+#jsonExists(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/JSONExistsOnStep;
+#jsonExists(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/JSONExistsOnStep;
+#jsonbExists(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/JSONExistsOnStep;
+#jsonbExists(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/JSONExistsOnStep;
+#jsonTable(Lorg/jooq/JSON;Ljava/lang/String;)Lorg/jooq/JSONTableColumnsFirstStep;
+#jsonTable(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/JSONTableColumnsFirstStep;
+#jsonbTable(Lorg/jooq/JSONB;Ljava/lang/String;)Lorg/jooq/JSONTableColumnsFirstStep;
+#jsonbTable(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/JSONTableColumnsFirstStep;
+#cardinality(Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayGet(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#arrayGet(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#value(Lorg/jooq/JSON;)Lorg/jooq/Param;
+#value(Lorg/jooq/JSONB;)Lorg/jooq/Param;
+#value(Lorg/jooq/XML;)Lorg/jooq/Param;
+#inline(Lorg/jooq/JSON;)Lorg/jooq/Param;
+#inline(Lorg/jooq/JSONB;)Lorg/jooq/Param;
+#inline(Lorg/jooq/XML;)Lorg/jooq/Param;
+#val(Lorg/jooq/JSON;)Lorg/jooq/Param;
+#val(Lorg/jooq/JSONB;)Lorg/jooq/Param;
+#val(Lorg/jooq/XML;)Lorg/jooq/Param;
+#tau()Lorg/jooq/Field;
-#using(Ljava/lang/String;)Lorg/jooq/DSLContext;
-#using(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DSLContext;
-#using(Ljava/lang/String;Ljava/util/Properties;)Lorg/jooq/DSLContext;
-#groupingId([Lorg/jooq/Field;)Lorg/jooq/Field;
-#level()Lorg/jooq/Field;
-#connectByIsCycle()Lorg/jooq/Field;
-#connectByIsLeaf()Lorg/jooq/Field;
-#connectByRoot(Lorg/jooq/Field;)Lorg/jooq/Field;
-#sysConnectByPath(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
-#prior(Lorg/jooq/Field;)Lorg/jooq/Field;
-#rownum()Lorg/jooq/Field;
-#jsonArray([Lorg/jooq/Field;)Lorg/jooq/Field;
-#jsonArray(Ljava/util/Collection;)Lorg/jooq/Field;
-#jsonbArray([Lorg/jooq/Field;)Lorg/jooq/Field;
-#jsonbArray(Ljava/util/Collection;)Lorg/jooq/Field;
-#jsonObject(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
-#jsonObject([Lorg/jooq/JSONEntry;)Lorg/jooq/Field;
-#jsonObject(Ljava/util/Collection;)Lorg/jooq/Field;
-#jsonbObject([Lorg/jooq/JSONEntry;)Lorg/jooq/Field;
-#jsonbObject(Ljava/util/Collection;)Lorg/jooq/Field;
@3.14.2
+#key(Ljava/lang/String;)Lorg/jooq/JSONEntryValueStep;
+#key(Lorg/jooq/Field;)Lorg/jooq/JSONEntryValueStep;
+#jsonEntry(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/JSONEntry;
@3.14.8
+#aggregate(Ljava/lang/String;Ljava/lang/Class;[Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#aggregate(Ljava/lang/String;Lorg/jooq/DataType;[Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#aggregate(Lorg/jooq/Name;Ljava/lang/Class;[Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#aggregate(Lorg/jooq/Name;Lorg/jooq/DataType;[Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#aggregateDistinct(Ljava/lang/String;Ljava/lang/Class;[Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#aggregateDistinct(Ljava/lang/String;Lorg/jooq/DataType;[Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#aggregateDistinct(Lorg/jooq/Name;Ljava/lang/Class;[Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#aggregateDistinct(Lorg/jooq/Name;Lorg/jooq/DataType;[Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
@3.15.0
+#using(Lio/r2dbc/spi/ConnectionFactory;)Lorg/jooq/DSLContext;
+#using(Lio/r2dbc/spi/ConnectionFactory;Lorg/jooq/SQLDialect;)Lorg/jooq/DSLContext;
+#using(Lio/r2dbc/spi/ConnectionFactory;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
+#using(Lio/r2dbc/spi/Connection;)Lorg/jooq/DSLContext;
+#using(Lio/r2dbc/spi/Connection;Lorg/jooq/SQLDialect;)Lorg/jooq/DSLContext;
+#using(Lio/r2dbc/spi/Connection;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)Lorg/jooq/DSLContext;
+#primaryKey(Ljava/util/Collection;)Lorg/jooq/ConstraintEnforcementStep;
+#foreignKey(Ljava/util/Collection;)Lorg/jooq/ConstraintForeignKeyReferencesStepN;
+#unique(Ljava/util/Collection;)Lorg/jooq/ConstraintEnforcementStep;
+#alterIndexIfExists(Ljava/lang/String;)Lorg/jooq/AlterIndexOnStep;
+#alterIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterIndexOnStep;
+#alterIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/AlterIndexOnStep;
+#commentOnColumn(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#createIndexIfNotExists()Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists()Lorg/jooq/CreateIndexStep;
+#setLocal(Lorg/jooq/Name;Lorg/jooq/Param;)Lorg/jooq/RowCountQuery;
+#in(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Parameter;
+#in(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Parameter;
+#inOut(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Parameter;
+#inOut(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Parameter;
+#out(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Parameter;
+#out(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Parameter;
+#field(Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Field;
+#field(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
*#rowField(Lorg/jooq/RowN;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row1;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row2;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row3;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row4;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row5;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row6;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row7;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row8;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row9;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row10;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row11;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row12;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row13;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row14;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row15;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row16;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row17;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row18;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row19;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row20;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row21;)Lorg/jooq/Field;[deprecated]
*#rowField(Lorg/jooq/Row22;)Lorg/jooq/Field;[deprecated]
+#log(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#log10(Ljava/lang/Number;)Lorg/jooq/Field;
+#log10(Lorg/jooq/Field;)Lorg/jooq/Field;
+#round(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#square(Ljava/lang/Number;)Lorg/jooq/Field;
+#square(Lorg/jooq/Field;)Lorg/jooq/Field;
+#chr(Ljava/lang/Number;)Lorg/jooq/Field;
+#chr(Lorg/jooq/Field;)Lorg/jooq/Field;
+#digits(Ljava/lang/Number;)Lorg/jooq/Field;
+#digits(Lorg/jooq/Field;)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;ILorg/jooq/Field;)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#ltrim(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#ltrim(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#mid(Lorg/jooq/Field;ILorg/jooq/Field;)Lorg/jooq/Field;
+#mid(Lorg/jooq/Field;Lorg/jooq/Field;I)Lorg/jooq/Field;
+#mid(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#mid(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;ILorg/jooq/Field;)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#rtrim(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#rtrim(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#space(Ljava/lang/Number;)Lorg/jooq/Field;
+#splitPart(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/Number;)Lorg/jooq/Field;
+#splitPart(Lorg/jooq/Field;Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#splitPart(Lorg/jooq/Field;Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#splitPart(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;ILorg/jooq/Field;)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;Lorg/jooq/Field;I)Lorg/jooq/Field;
+#substringIndex(Lorg/jooq/Field;Ljava/lang/String;I)Lorg/jooq/Field;
+#substringIndex(Lorg/jooq/Field;Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#substringIndex(Lorg/jooq/Field;Lorg/jooq/Field;I)Lorg/jooq/Field;
+#substringIndex(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#toHex(Ljava/lang/Number;)Lorg/jooq/Field;
+#toHex(Lorg/jooq/Field;)Lorg/jooq/Field;
+#translate(Lorg/jooq/Field;Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#translate(Lorg/jooq/Field;Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#trim(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#trim(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#uuid()Lorg/jooq/Field;
+#dateAdd(Ljava/sql/Date;Lorg/jooq/Field;)Lorg/jooq/Field;
+#dateAdd(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#localDateAdd(Ljava/time/LocalDate;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateAdd(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#timestampAdd(Ljava/sql/Timestamp;Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampAdd(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#localDateTimeAdd(Ljava/time/LocalDateTime;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateTimeAdd(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#currentCatalog()Lorg/jooq/Field;
+#xmlserializeDocument(Lorg/jooq/XML;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#xmlserializeDocument(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#xmlserializeContent(Lorg/jooq/XML;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#xmlserializeContent(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#bitAndAgg(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#bitOrAgg(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#bitXorAgg(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#corr(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#covarSamp(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#covarPop(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#currentTimestamp(I)Lorg/jooq/Field;
+#currentLocalDateTime(I)Lorg/jooq/Field;
+#currentLocalDateTime(Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampDiff(Lorg/jooq/DatePart;Ljava/sql/Timestamp;Ljava/sql/Timestamp;)Lorg/jooq/Field;
+#timestampDiff(Lorg/jooq/DatePart;Lorg/jooq/Field;Ljava/sql/Timestamp;)Lorg/jooq/Field;
+#timestampDiff(Lorg/jooq/DatePart;Ljava/sql/Timestamp;Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampDiff(Lorg/jooq/DatePart;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateTimeDiff(Lorg/jooq/DatePart;Ljava/time/LocalDateTime;Ljava/time/LocalDateTime;)Lorg/jooq/Field;
+#localDateTimeDiff(Lorg/jooq/DatePart;Lorg/jooq/Field;Ljava/time/LocalDateTime;)Lorg/jooq/Field;
+#localDateTimeDiff(Lorg/jooq/DatePart;Ljava/time/LocalDateTime;Lorg/jooq/Field;)Lorg/jooq/Field;
+#localDateTimeDiff(Lorg/jooq/DatePart;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#jsonEntry(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/JSONEntry;
+#jsonEntry(Ljava/lang/String;Lorg/jooq/Select;)Lorg/jooq/JSONEntry;
+#jsonEntry(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/JSONEntry;
+#jsonObject(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/JSONObjectNullStep;
+#jsonbObject()Lorg/jooq/JSONObjectNullStep;
+#array(Lorg/jooq/Select;)Lorg/jooq/Field;
+#multiset(Lorg/jooq/Select;)Lorg/jooq/Field;
+#anyValue(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#multisetAgg(Ljava/util/Collection;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg([Lorg/jooq/Field;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#multisetAgg(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/ArrayAggOrderByStep;
+#ntile(Lorg/jooq/Field;)Lorg/jooq/WindowOverStep;
+#lead(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(Lorg/jooq/Field;Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#inlined(Lorg/jooq/Field;)Lorg/jooq/Field;
+#inlined(Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#inlined(Lorg/jooq/QueryPart;)Lorg/jooq/QueryPart;
+#row(Lorg/jooq/SelectField;)Lorg/jooq/Row1;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row2;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row3;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row4;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row5;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row6;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row7;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row8;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row9;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row10;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row11;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row12;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row13;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row14;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row15;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row16;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row17;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row18;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row19;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row20;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row21;
+#row(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Row22;
+#row([Lorg/jooq/SelectField;)Lorg/jooq/RowN;
-#alterIndexIfExists(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
-#alterIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
-#alterIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
-#not(Ljava/lang/Boolean;)Lorg/jooq/Field;[deprecated]
-#space(I)Lorg/jooq/Field;
-#row(Lorg/jooq/Field;)Lorg/jooq/Row1;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row2;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row3;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row4;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row5;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row6;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row7;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row8;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row9;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row10;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row11;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row12;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row13;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row14;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row15;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row16;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row17;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row18;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row19;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row20;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row21;
-#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row22;
-#row([Lorg/jooq/Field;)Lorg/jooq/RowN;
@3.16.0
+#oldTable(Lorg/jooq/Update;)Lorg/jooq/Table;
+#oldTable(Lorg/jooq/Delete;)Lorg/jooq/Table;
+#oldTable(Lorg/jooq/Merge;)Lorg/jooq/Table;
+#newTable(Lorg/jooq/Insert;)Lorg/jooq/Table;
+#newTable(Lorg/jooq/Update;)Lorg/jooq/Table;
+#newTable(Lorg/jooq/Merge;)Lorg/jooq/Table;
+#finalTable(Lorg/jooq/Insert;)Lorg/jooq/Table;
+#finalTable(Lorg/jooq/Update;)Lorg/jooq/Table;
+#finalTable(Lorg/jooq/Merge;)Lorg/jooq/Table;
+#systemName(Ljava/lang/String;)Lorg/jooq/Name;
+#systemName([Ljava/lang/String;)Lorg/jooq/Name;
+#systemName(Ljava/util/Collection;)Lorg/jooq/Name;
+#dateSub(Ljava/sql/Date;Lorg/jooq/Field;)Lorg/jooq/Field;
+#dateSub(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
-#schemaByName(Ljava/lang/String;)Lorg/jooq/Schema;[deprecated]
-#sequenceByName([Ljava/lang/String;)Lorg/jooq/Sequence;[deprecated]
-#sequenceByName(Ljava/lang/Class;[Ljava/lang/String;)Lorg/jooq/Sequence;[deprecated]
-#sequenceByName(Lorg/jooq/DataType;[Ljava/lang/String;)Lorg/jooq/Sequence;[deprecated]
-#tableByName([Ljava/lang/String;)Lorg/jooq/Table;[deprecated]
-#fieldByName([Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
-#fieldByName(Ljava/lang/Class;[Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
-#fieldByName(Lorg/jooq/DataType;[Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
-#queryPart(Ljava/lang/String;)Lorg/jooq/QueryPart;[deprecated]
-#queryPart(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/QueryPart;[deprecated]
-#queryPart(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/QueryPart;[deprecated]
@3.17.0
+#selectFrom(Lorg/jooq/TableLike;)Lorg/jooq/SelectWhereStep;
+#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#noField()Lorg/jooq/Field;
+#noField(Ljava/lang/Class;)Lorg/jooq/Field;
+#noField(Lorg/jooq/DataType;)Lorg/jooq/Field;
+#noField(Lorg/jooq/Field;)Lorg/jooq/Field;
+#nullCondition()Lorg/jooq/Null;
+#excluded(Lorg/jooq/Field;)Lorg/jooq/Field;
+#acosh(Ljava/lang/Number;)Lorg/jooq/Field;
+#acosh(Lorg/jooq/Field;)Lorg/jooq/Field;
+#acoth(Ljava/lang/Number;)Lorg/jooq/Field;
+#acoth(Lorg/jooq/Field;)Lorg/jooq/Field;
+#asinh(Ljava/lang/Number;)Lorg/jooq/Field;
+#asinh(Lorg/jooq/Field;)Lorg/jooq/Field;
+#atanh(Ljava/lang/Number;)Lorg/jooq/Field;
+#atanh(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNandAgg(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#bitNorAgg(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#bitXNorAgg(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#emptyGroupingSet()Lorg/jooq/GroupField;
+#multiset(Lorg/jooq/TableLike;)Lorg/jooq/Field;
-#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;
-#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#multiset(Lorg/jooq/Select;)Lorg/jooq/Field;

+###org/jooq/impl/EnumConverter
@2.1.0
+#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
+#from(Ljava/lang/Object;)Ljava/lang/Enum;
+#to(Ljava/lang/Enum;)Ljava/lang/Object;
+#fromType()Ljava/lang/Class;
+#toType()Ljava/lang/Class;
+#to(Ljava/lang/Object;)Ljava/lang/Object;
+#from(Ljava/lang/Object;)Ljava/lang/Object;
@3.3.2
+#toString()Ljava/lang/String;
@3.6.0
-#fromType()Ljava/lang/Class;
-#toType()Ljava/lang/Class;
@3.16.0
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Function;)V

+###org/jooq/impl/NoConnectionProvider
@3.0.0-RC1
+#<init>()V
+#acquire()Ljava/sql/Connection;
+#release(Ljava/sql/Connection;)V

+###org/jooq/impl/PackageImpl
@1.5.9
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
*#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;)V
+#attach(Lorg/jooq/Configuration;)V
@1.6.4
+#toSQL(Lorg/jooq/RenderContext;)V
+#bind(Lorg/jooq/BindContext;)V
+#declaresTables()Z
+#declaresFields()Z
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.6.8
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
-#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
@3.0.0-RC1
+#getSchema()Lorg/jooq/Schema;
+#getName()Ljava/lang/String;
-#attach(Lorg/jooq/Configuration;)V
@3.2.0-alpha-01
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
@3.3.0
+#declaresWindows()Z
@3.4.0
+#accept(Lorg/jooq/Context;)V
+#declaresCTE()Z
@3.4.6
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.5.2
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.6.1
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.7.0
+#generatesCast()Z
@3.8.0
-#bind(Lorg/jooq/BindContext;)V[deprecated]
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.9.0
+#getCatalog()Lorg/jooq/Catalog;
@3.11.0
-#getName()Ljava/lang/String;
@3.12.0
*#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;[deprecated]
@3.12.3
+#getQualifiedName()Lorg/jooq/Name;
@3.14.0
+#rendersContent(Lorg/jooq/Context;)Z
@3.16.0
+#$schema()Lorg/jooq/Schema;

+###org/jooq/impl/SchemaImpl
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;)V
+#getAttachables()Ljava/util/List;
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#getTypeMapping()Ljava/util/Map;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.5.9
+#getTables()Ljava/util/List;
+#getUDTs()Ljava/util/List;
+#getSequences()Ljava/util/List;
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;)V[deprecated]
+#<init>(Ljava/lang/String;)V
+#attach(Lorg/jooq/Configuration;)V
@1.6.4
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
+#declaresTables()Z
+#declaresFields()Z
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.6.8
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;)V[deprecated]
@2.0.1
+#getTable(Ljava/lang/String;)Lorg/jooq/Table;
+#getUDT(Ljava/lang/String;)Lorg/jooq/UDT;
+#getSequence(Ljava/lang/String;)Lorg/jooq/Sequence;
@2.3.0
*#getTypeMapping()Ljava/util/Map;[deprecated]
@2.5.0
-#getAttachables()Ljava/util/List;
@3.0.0-RC1
+#getName()Ljava/lang/String;
-#getTypeMapping()Ljava/util/Map;[deprecated]
-#attach(Lorg/jooq/Configuration;)V
@3.2.0-alpha-01
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
@3.3.0
+#declaresWindows()Z
@3.4.0
+#accept(Lorg/jooq/Context;)V
+#declaresCTE()Z
@3.4.6
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.5.2
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.6.1
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.7.0
+#generatesCast()Z
@3.8.0
+#<init>(Ljava/lang/String;Lorg/jooq/Catalog;)V
+#getCatalog()Lorg/jooq/Catalog;
-#bind(Lorg/jooq/BindContext;)V[deprecated]
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.9.0
+#tableStream()Ljava/util/stream/Stream;
+#udtStream()Ljava/util/stream/Stream;
+#sequenceStream()Ljava/util/stream/Stream;
@3.10.0
+#<init>(Lorg/jooq/Name;)V
+#<init>(Lorg/jooq/Name;Lorg/jooq/Catalog;)V
+#getQualifiedName()Lorg/jooq/Name;
+#getUnqualifiedName()Lorg/jooq/Name;
@3.11.0
+#<init>(Ljava/lang/String;Lorg/jooq/Catalog;Ljava/lang/String;)V
+#<init>(Lorg/jooq/Name;Lorg/jooq/Catalog;Lorg/jooq/Comment;)V
-#getName()Ljava/lang/String;
-#getQualifiedName()Lorg/jooq/Name;
-#getUnqualifiedName()Lorg/jooq/Name;
@3.12.3
+#getQualifiedName()Lorg/jooq/Name;
@3.14.0
+#getTable(Lorg/jooq/Name;)Lorg/jooq/Table;
+#getUDT(Lorg/jooq/Name;)Lorg/jooq/UDT;
+#getDomain(Ljava/lang/String;)Lorg/jooq/Domain;
+#getDomain(Lorg/jooq/Name;)Lorg/jooq/Domain;
+#getSequence(Lorg/jooq/Name;)Lorg/jooq/Sequence;
+#getDomains()Ljava/util/List;
+#domainStream()Ljava/util/stream/Stream;
+#rendersContent(Lorg/jooq/Context;)Z
@3.15.0
+#getPrimaryKeys(Ljava/lang/String;)Ljava/util/List;
+#getPrimaryKeys(Lorg/jooq/Name;)Ljava/util/List;
+#getUniqueKeys(Ljava/lang/String;)Ljava/util/List;
+#getUniqueKeys(Lorg/jooq/Name;)Ljava/util/List;
+#getForeignKeys(Ljava/lang/String;)Ljava/util/List;
+#getForeignKeys(Lorg/jooq/Name;)Ljava/util/List;
+#getIndexes(Ljava/lang/String;)Ljava/util/List;
+#getIndexes(Lorg/jooq/Name;)Ljava/util/List;
+#getPrimaryKeys()Ljava/util/List;
+#getUniqueKeys()Ljava/util/List;
+#getForeignKeys()Ljava/util/List;
+#getIndexes()Ljava/util/List;
+#primaryKeyStream()Ljava/util/stream/Stream;
+#uniqueKeyStream()Ljava/util/stream/Stream;
+#foreignKeyStream()Ljava/util/stream/Stream;
+#indexStream()Ljava/util/stream/Stream;

+###org/jooq/impl/SequenceImpl
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V
+#currval()Lorg/jooq/Field;
+#nextval()Lorg/jooq/Field;
@1.6.1
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
*#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;)V
@1.6.8
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
-#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
@2.0.0-RC1
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/DataType;)V
-#<init>(Ljava/lang/String;Lorg/jooq/Schema;)V
@2.0.1
+#getName()Ljava/lang/String;
+#getSchema()Lorg/jooq/Schema;
+#getDataType()Lorg/jooq/DataType;
@2.5.2
+#hashCode()I
@2.6.0
-#hashCode()I
@2.6.1
+#hashCode()I
@3.4.0
+#accept(Lorg/jooq/Context;)V
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#declaresCTE()Z
+#declaresWindows()Z
+#declaresTables()Z
+#declaresFields()Z
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
@3.4.6
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.5.2
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.6.1
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.7.0
+#generatesCast()Z
@3.8.0
-#bind(Lorg/jooq/BindContext;)V[deprecated]
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.9.0
+#getCatalog()Lorg/jooq/Catalog;
@3.11.0
-#getName()Ljava/lang/String;
@3.12.3
+#getQualifiedName()Lorg/jooq/Name;
@3.13.0
*#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/DataType;)V[deprecated]
+#getStartWith()Lorg/jooq/Field;
+#getIncrementBy()Lorg/jooq/Field;
+#getMinvalue()Lorg/jooq/Field;
+#getMaxvalue()Lorg/jooq/Field;
+#getCycle()Z
+#getCache()Lorg/jooq/Field;
-#getDataType()Lorg/jooq/DataType;
@3.14.0
+#nextvals(I)Lorg/jooq/Select;
+#rendersContent(Lorg/jooq/Context;)Z
@3.16.0
+#$schema()Lorg/jooq/Schema;

+###org/jooq/impl/SQLDataType
@1.6.1
@3.9.0
+#VARCHAR(I)Lorg/jooq/DataType;
+#CHAR(I)Lorg/jooq/DataType;
+#LONGVARCHAR(I)Lorg/jooq/DataType;
+#CLOB(I)Lorg/jooq/DataType;
+#NVARCHAR(I)Lorg/jooq/DataType;
+#NCHAR(I)Lorg/jooq/DataType;
+#LONGNVARCHAR(I)Lorg/jooq/DataType;
+#NCLOB(I)Lorg/jooq/DataType;
+#NUMERIC(I)Lorg/jooq/DataType;
+#NUMERIC(II)Lorg/jooq/DataType;
+#DECIMAL(I)Lorg/jooq/DataType;
+#DECIMAL(II)Lorg/jooq/DataType;
+#BINARY(I)Lorg/jooq/DataType;
+#VARBINARY(I)Lorg/jooq/DataType;
+#LONGVARBINARY(I)Lorg/jooq/DataType;
+#BLOB(I)Lorg/jooq/DataType;
@3.11.0
+#TIMESTAMP(I)Lorg/jooq/DataType;
+#TIME(I)Lorg/jooq/DataType;
+#OFFSETTIME(I)Lorg/jooq/DataType;
+#OFFSETDATETIME(I)Lorg/jooq/DataType;
+#TIMEWITHTIMEZONE(I)Lorg/jooq/DataType;
+#TIMESTAMPWITHTIMEZONE(I)Lorg/jooq/DataType;
@3.12.0
+#DECIMAL_INTEGER(I)Lorg/jooq/DataType;
+#INSTANT(I)Lorg/jooq/DataType;
@3.14.0
+#LOCALTIME(I)Lorg/jooq/DataType;
+#LOCALDATETIME(I)Lorg/jooq/DataType;

+###org/jooq/impl/TableImpl
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;)V
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V
+#getAttachables0()Ljava/util/List;
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#as(Ljava/lang/String;)Lorg/jooq/Table;
+#getRecordType()Ljava/lang/Class;
+#as(Ljava/lang/String;)Lorg/jooq/AliasProvider;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.5.9
+#getReferences()Ljava/util/List;
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;)V[deprecated]
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
*#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;)V
+#attach(Lorg/jooq/Configuration;)V
@1.6.4
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
+#declaresTables()Z
+#declaresFields()Z
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.6.8
+#getIdentity()Lorg/jooq/Identity;
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;)V[deprecated]
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
-#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
@2.0.0-RC1
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Table;)V
@2.4.1
+#<init>(Ljava/lang/String;Lorg/jooq/Table;)V
@2.5.0
-#getAttachables0()Ljava/util/List;
@2.6.0
+#join(Lorg/jooq/TableLike;Lorg/jooq/JoinType;)Lorg/jooq/TableOptionalOnStep;
@3.0.0-RC1
+#as(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/Table;
-#<init>(Ljava/lang/String;Lorg/jooq/Table;)V
-#join(Lorg/jooq/TableLike;Lorg/jooq/JoinType;)Lorg/jooq/TableOptionalOnStep;
-#as(Ljava/lang/String;)Lorg/jooq/AliasProvider;
-#attach(Lorg/jooq/Configuration;)V
@3.0.0-RC3
+#getKeys()Ljava/util/List;
+#getRecordTimestamp()Lorg/jooq/TableField;
+#getRecordVersion()Lorg/jooq/TableField;
+#getPrimaryKey()Lorg/jooq/UniqueKey;
@3.2.0-alpha-01
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
@3.3.0
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Table;[Lorg/jooq/Field;)V
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Table;[Lorg/jooq/Field;Ljava/lang/String;)V
+#declaresWindows()Z
@3.4.0
+#accept(Lorg/jooq/Context;)V
+#declaresCTE()Z
@3.4.6
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.5.2
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.6.1
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.7.0
+#generatesCast()Z
@3.8.0
+#getSchema()Lorg/jooq/Schema;
-#bind(Lorg/jooq/BindContext;)V[deprecated]
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.9.0
+#rename(Ljava/lang/String;)Lorg/jooq/Table;
@3.10.0
*#<init>(Ljava/lang/String;)V[deprecated]
*#<init>(Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
*#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Table;)V[deprecated]
*#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Table;[Lorg/jooq/Field;)V[deprecated]
*#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Table;[Lorg/jooq/Field;Ljava/lang/String;)V[deprecated]
+#<init>(Lorg/jooq/Name;)V
+#<init>(Lorg/jooq/Name;Lorg/jooq/Schema;)V
+#<init>(Lorg/jooq/Name;Lorg/jooq/Schema;Lorg/jooq/Table;)V
+#<init>(Lorg/jooq/Name;Lorg/jooq/Schema;Lorg/jooq/Table;[Lorg/jooq/Field;)V
+#<init>(Lorg/jooq/Name;Lorg/jooq/Schema;Lorg/jooq/Table;[Lorg/jooq/Field;Ljava/lang/String;)V
+#as(Lorg/jooq/Name;)Lorg/jooq/Table;
+#as(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/Table;
+#rename(Lorg/jooq/Name;)Lorg/jooq/Table;
+#getIndexes()Ljava/util/List;
@3.11.0
*#<init>(Lorg/jooq/Name;Lorg/jooq/Schema;Lorg/jooq/Table;[Lorg/jooq/Field;Ljava/lang/String;)V[deprecated]
+#<init>(Lorg/jooq/Name;Lorg/jooq/Schema;Lorg/jooq/Table;[Lorg/jooq/Field;Lorg/jooq/Comment;)V
+#<init>(Lorg/jooq/Table;Lorg/jooq/ForeignKey;Lorg/jooq/Table;)V
+#<init>(Lorg/jooq/Name;Lorg/jooq/Schema;Lorg/jooq/Table;Lorg/jooq/ForeignKey;Lorg/jooq/Table;[Lorg/jooq/Field;Lorg/jooq/Comment;)V
@3.12.0
+#fieldsRow()Lorg/jooq/Row;
+#whereNotExists(Lorg/jooq/Select;)Lorg/jooq/Table;
+#whereExists(Lorg/jooq/Select;)Lorg/jooq/Table;
+#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
+#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#where(Ljava/lang/String;)Lorg/jooq/Table;
+#where(Lorg/jooq/SQL;)Lorg/jooq/Table;
+#where(Lorg/jooq/Field;)Lorg/jooq/Table;
+#where(Ljava/util/Collection;)Lorg/jooq/Table;
+#where([Lorg/jooq/Condition;)Lorg/jooq/Table;
+#where(Lorg/jooq/Condition;)Lorg/jooq/Table;
@3.12.3
+#getQualifiedName()Lorg/jooq/Name;
@3.13.0
+#<init>(Lorg/jooq/Name;Lorg/jooq/Schema;Lorg/jooq/Table;[Lorg/jooq/Field;Lorg/jooq/Comment;Lorg/jooq/TableOptions;)V
+#<init>(Lorg/jooq/Name;Lorg/jooq/Schema;Lorg/jooq/Table;Lorg/jooq/ForeignKey;Lorg/jooq/Table;[Lorg/jooq/Field;Lorg/jooq/Comment;Lorg/jooq/TableOptions;)V
+#getChecks()Ljava/util/List;
@3.14.0
+#rendersContent(Lorg/jooq/Context;)Z
@3.15.0
+#getUniqueKeys()Ljava/util/List;
@3.15.2
+#isSimple()Z
@3.15.10
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
@3.16.0
+#isSimple(Lorg/jooq/Context;)Z
+#rowid()Lorg/jooq/Field;
-#isSimple()Z
-#field(Ljava/lang/String;)Lorg/jooq/Field;
-#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
-#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
@3.16.6
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
@3.17.0
+#rename(Lorg/jooq/Table;)Lorg/jooq/Table;
+#as(Lorg/jooq/Table;)Lorg/jooq/Table;
+#as(Lorg/jooq/Name;)Lorg/jooq/SelectField;
-#as(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/Table;

+###org/jooq/impl/TableRecordImpl
@1.5.7
+#<init>(Lorg/jooq/Table;)V
+#<init>(Lorg/jooq/Table;Lorg/jooq/Configuration;)V
+#<init>(Lorg/jooq/Configuration;Lorg/jooq/Table;)V[deprecated]
+#getTable()Lorg/jooq/Table;
@1.6.2
+#hashCode()I
@1.6.4
*#<init>(Lorg/jooq/Table;Lorg/jooq/Configuration;)V[deprecated]
+#storeUsing([Lorg/jooq/TableField;)I
+#deleteUsing([Lorg/jooq/TableField;)I
+#refreshUsing([Lorg/jooq/TableField;)V
-#<init>(Lorg/jooq/Configuration;Lorg/jooq/Table;)V[deprecated]
@1.6.7
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
@2.0.0-RC1
-#<init>(Lorg/jooq/Table;Lorg/jooq/Configuration;)V[deprecated]
@2.6.0
+#original()Lorg/jooq/TableRecord;
+#original()Lorg/jooq/Record;
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row;
+#valuesRow()Lorg/jooq/Row;
+#fetchParent(Lorg/jooq/ForeignKey;)Lorg/jooq/UpdatableRecord;
+#compareTo(Lorg/jooq/Record;)I
-#storeUsing([Lorg/jooq/TableField;)I
-#deleteUsing([Lorg/jooq/TableField;)I
-#refreshUsing([Lorg/jooq/TableField;)V
@3.4.0
+#insert()I
+#insert([Lorg/jooq/Field;)I
@3.8.0
+#insert(Ljava/util/Collection;)I
@3.9.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/TableRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/TableRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;
@3.14.0
+#parent(Lorg/jooq/ForeignKey;)Lorg/jooq/Table;
+#into(Ljava/lang/Object;)Ljava/lang/Object;
@3.15.0
-#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/TableRecord;
-#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/TableRecord;
-#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
-#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/impl/UDTImpl
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V
+#getAttachables0()Ljava/util/List;
+#getRecordType()Ljava/lang/Class;
+#getTypeMapping()Ljava/util/Map;
+#getDataType()Lorg/jooq/DataType;
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
*#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;)V
+#attach(Lorg/jooq/Configuration;)V
@1.6.4
+#toSQL(Lorg/jooq/RenderContext;)V
+#bind(Lorg/jooq/BindContext;)V
+#declaresTables()Z
+#declaresFields()Z
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.6.8
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
-#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
@2.3.0
*#getTypeMapping()Ljava/util/Map;[deprecated]
@2.5.0
-#getAttachables0()Ljava/util/List;
@3.0.0-RC1
+#getSchema()Lorg/jooq/Schema;
+#getName()Ljava/lang/String;
+#fieldsRow()Lorg/jooq/Row;
+#field(Lorg/jooq/Field;)Lorg/jooq/Field;
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(I)Lorg/jooq/Field;
+#fields()[Lorg/jooq/Field;
-#getTypeMapping()Ljava/util/Map;[deprecated]
-#attach(Lorg/jooq/Configuration;)V
@3.2.0-alpha-01
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
@3.3.0
+#declaresWindows()Z
@3.4.0
+#accept(Lorg/jooq/Context;)V
+#declaresCTE()Z
@3.4.6
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.5.0
+#newRecord()Lorg/jooq/UDTRecord;
@3.5.2
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.6.1
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.7.0
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
+#fields([Ljava/lang/String;)[Lorg/jooq/Field;
+#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
+#fields([I)[Lorg/jooq/Field;
+#generatesCast()Z
@3.8.0
-#bind(Lorg/jooq/BindContext;)V[deprecated]
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.9.0
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Package;)V
+#getCatalog()Lorg/jooq/Catalog;
+#getPackage()Lorg/jooq/Package;
+#fieldStream()Ljava/util/stream/Stream;
+#isSQLUsable()Z
@3.10.0
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Package;Z)V
+#isSynthetic()Z
@3.11.0
-#getPackage()Lorg/jooq/Package;
-#getName()Ljava/lang/String;
@3.12.0
+#indexOf(Lorg/jooq/Field;)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Lorg/jooq/Name;)I
*#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;[deprecated]
@3.12.3
+#getQualifiedName()Lorg/jooq/Name;
@3.14.0
+#getPackage()Lorg/jooq/Package;
+#rendersContent(Lorg/jooq/Context;)Z
@3.15.0
+#newRecord()Lorg/jooq/Record;
-#fieldStream()Ljava/util/stream/Stream;
-#field(Lorg/jooq/Field;)Lorg/jooq/Field;
-#field(Ljava/lang/String;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;)Lorg/jooq/Field;
-#field(I)Lorg/jooq/Field;
-#fields()[Lorg/jooq/Field;
-#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
-#fields([Ljava/lang/String;)[Lorg/jooq/Field;
-#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
-#fields([I)[Lorg/jooq/Field;
-#indexOf(Lorg/jooq/Field;)I
-#indexOf(Ljava/lang/String;)I
-#indexOf(Lorg/jooq/Name;)I
@3.16.0
+#$schema()Lorg/jooq/Schema;

+###org/jooq/impl/UDTRecordImpl
@1.5.7
+#<init>(Lorg/jooq/UDT;)V
+#getUDT()Lorg/jooq/UDT;
+#getSQLTypeName()Ljava/lang/String;
+#readSQL(Ljava/sql/SQLInput;Ljava/lang/String;)V
+#writeSQL(Ljava/sql/SQLOutput;)V
@1.6.2
+#hashCode()I
@1.6.7
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
@2.6.0
+#original()Lorg/jooq/Record;
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row;
+#valuesRow()Lorg/jooq/Row;
+#compareTo(Lorg/jooq/Record;)I
@3.9.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/UDTRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/UDTRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;
@3.14.0
+#into(Ljava/lang/Object;)Ljava/lang/Object;
@3.15.0
-#getSQLTypeName()Ljava/lang/String;
-#readSQL(Ljava/sql/SQLInput;Ljava/lang/String;)V
-#writeSQL(Ljava/sql/SQLOutput;)V
-#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/UDTRecord;
-#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/UDTRecord;
-#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
-#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/impl/UpdatableRecordImpl
@1.5.7
+#<init>(Lorg/jooq/UpdatableTable;)V
+#<init>(Lorg/jooq/UpdatableTable;Lorg/jooq/Configuration;)V
+#<init>(Lorg/jooq/Configuration;Lorg/jooq/UpdatableTable;)V[deprecated]
+#getTable()Lorg/jooq/UpdatableTable;
+#getPrimaryKey()Ljava/util/List;[deprecated]
+#getMainUniqueKey()Ljava/util/List;
+#store()I
+#delete()I
+#refresh()V
+#getTable()Lorg/jooq/Table;
@1.5.9
*#getMainUniqueKey()Ljava/util/List;[deprecated]
@1.6.2
+#copy()Lorg/jooq/TableRecord;
+#copy()Lorg/jooq/Record;
@1.6.4
*#<init>(Lorg/jooq/UpdatableTable;Lorg/jooq/Configuration;)V[deprecated]
-#getPrimaryKey()Ljava/util/List;[deprecated]
-#getMainUniqueKey()Ljava/util/List;[deprecated]
@2.0.0-RC1
+#copy()Lorg/jooq/UpdatableRecord;
-#<init>(Lorg/jooq/UpdatableTable;Lorg/jooq/Configuration;)V[deprecated]
-#<init>(Lorg/jooq/Configuration;Lorg/jooq/UpdatableTable;)V[deprecated]
-#copy()Lorg/jooq/TableRecord;
-#copy()Lorg/jooq/Record;
@3.0.0-RC1
+#key()Lorg/jooq/Record;
+#fetchChild(Lorg/jooq/ForeignKey;)Lorg/jooq/TableRecord;
+#fetchChildren(Lorg/jooq/ForeignKey;)Lorg/jooq/Result;
+#insert()I
+#update()I
+#refresh([Lorg/jooq/Field;)V
@3.0.0-RC3
+#<init>(Lorg/jooq/Table;)V
-#<init>(Lorg/jooq/UpdatableTable;)V
-#getTable()Lorg/jooq/UpdatableTable;
-#getTable()Lorg/jooq/Table;
@3.4.0
+#store([Lorg/jooq/Field;)I
+#update([Lorg/jooq/Field;)I
-#insert()I
@3.8.0
+#store(Ljava/util/Collection;)I
+#update(Ljava/util/Collection;)I
+#refresh(Ljava/util/Collection;)V
@3.14.0
+#children(Lorg/jooq/ForeignKey;)Lorg/jooq/Table;
+#merge()I
+#merge([Lorg/jooq/Field;)I
+#merge(Ljava/util/Collection;)I

+###org/jooq/Insert
@1.5.9

+###org/jooq/InsertFinalStep
@1.5.9

+###org/jooq/InsertOnDuplicateSetMoreStep
@1.6.0

+###org/jooq/InsertOnDuplicateSetStep
@1.6.0
+#set(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/InsertOnDuplicateSetMoreStep;
+#set(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertOnDuplicateSetMoreStep;
+#set(Ljava/util/Map;)Lorg/jooq/InsertOnDuplicateSetMoreStep;
@3.0.0-RC1
+#set(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateSetMoreStep;
+#set(Lorg/jooq/Record;)Lorg/jooq/InsertOnDuplicateSetMoreStep;
@3.12.0
+#setNull(Lorg/jooq/Field;)Lorg/jooq/InsertOnDuplicateSetMoreStep;
@3.17.0
+#setAllToExcluded()Lorg/jooq/InsertOnDuplicateSetMoreStep;

+###org/jooq/InsertOnDuplicateStep
@1.6.0
+#onDuplicateKeyUpdate()Lorg/jooq/InsertOnDuplicateSetStep;
@2.3.0
+#onDuplicateKeyIgnore()Lorg/jooq/InsertFinalStep;
@3.9.0
+#onConflict([Lorg/jooq/Field;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#onConflict(Ljava/util/Collection;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#onConflictDoNothing()Lorg/jooq/InsertFinalStep;
@3.10.0
+#onConflictDoNothing()Lorg/jooq/InsertReturningStep;
+#onDuplicateKeyIgnore()Lorg/jooq/InsertReturningStep;
-#onConflictDoNothing()Lorg/jooq/InsertFinalStep;
-#onDuplicateKeyIgnore()Lorg/jooq/InsertFinalStep;
@3.11.0
+#onConflictOnConstraint(Lorg/jooq/Constraint;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#onConflictOnConstraint(Lorg/jooq/Name;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#onConflictOnConstraint(Lorg/jooq/UniqueKey;)Lorg/jooq/InsertOnConflictDoUpdateStep;
@3.14.0
+#onConflict([Lorg/jooq/Field;)Lorg/jooq/InsertOnConflictWhereIndexPredicateStep;
+#onConflict(Ljava/util/Collection;)Lorg/jooq/InsertOnConflictWhereIndexPredicateStep;
-#onConflict([Lorg/jooq/Field;)Lorg/jooq/InsertOnConflictDoUpdateStep;
-#onConflict(Ljava/util/Collection;)Lorg/jooq/InsertOnConflictDoUpdateStep;

+###org/jooq/InsertQuery
@1.5.7
@1.5.9
+#newRecord()V
+#addRecord(Lorg/jooq/TableRecord;)V
@1.6.0
+#onDuplicateKeyUpdate(Z)V
+#addValueForUpdate(Lorg/jooq/Field;Ljava/lang/Object;)V
+#addValueForUpdate(Lorg/jooq/Field;Lorg/jooq/Field;)V
+#addValuesForUpdate(Ljava/util/Map;)V
@1.6.5
+#setReturning()V
+#setReturning(Lorg/jooq/Identity;)V
+#setReturning([Lorg/jooq/Field;)V
+#setReturning(Ljava/util/Collection;)V
+#getReturned()Lorg/jooq/TableRecord;
@1.6.6
*#getReturned()Lorg/jooq/TableRecord;[deprecated]
+#getReturnedRecord()Lorg/jooq/TableRecord;
+#getReturnedRecords()Lorg/jooq/Result;
@2.0.0-RC1
-#getReturned()Lorg/jooq/TableRecord;[deprecated]
@2.0.1
+#addRecord(Lorg/jooq/Record;)V
+#getReturnedRecord()Lorg/jooq/Record;
-#addRecord(Lorg/jooq/TableRecord;)V
-#getReturnedRecord()Lorg/jooq/TableRecord;
@2.3.0
+#onDuplicateKeyIgnore(Z)V
@3.3.0
+#setDefaultValues()V
@3.7.0
+#setSelect([Lorg/jooq/Field;Lorg/jooq/Select;)V
@3.9.0
+#onConflict([Lorg/jooq/Field;)V
+#onConflict(Ljava/util/Collection;)V
@3.10.0
+#addConditions([Lorg/jooq/Condition;)V
+#addConditions(Ljava/util/Collection;)V
+#addConditions(Lorg/jooq/Operator;[Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Ljava/util/Collection;)V
@3.11.0
+#onConflictOnConstraint(Lorg/jooq/Name;)V
+#onConflictOnConstraint(Lorg/jooq/Constraint;)V
+#onConflictOnConstraint(Lorg/jooq/UniqueKey;)V
+#addConditions(Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Lorg/jooq/Condition;)V
+#setReturning([Lorg/jooq/SelectFieldOrAsterisk;)V
-#setReturning([Lorg/jooq/Field;)V
@3.12.4
+#setSelect(Ljava/util/Collection;Lorg/jooq/Select;)V
@3.14.0
+#onConflictWhere(Lorg/jooq/Condition;)V

+###org/jooq/InsertResultStep
@1.6.6
+#fetch()Lorg/jooq/Result;
+#fetchOne()Lorg/jooq/TableRecord;
@2.0.1
+#fetchOne()Lorg/jooq/Record;
-#fetchOne()Lorg/jooq/TableRecord;
@3.7.0
+#fetchOptional()Ljava/util/Optional;
@3.15.0
-#fetch()Lorg/jooq/Result;
-#fetchOne()Lorg/jooq/Record;
-#fetchOptional()Ljava/util/Optional;

+###org/jooq/InsertReturningStep
@1.6.6
+#returning()Lorg/jooq/InsertResultStep;
+#returning([Lorg/jooq/Field;)Lorg/jooq/InsertResultStep;
+#returning(Ljava/util/Collection;)Lorg/jooq/InsertResultStep;
@3.11.0
+#returning([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/InsertResultStep;
+#returningResult([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/InsertResultStep;
+#returningResult(Ljava/util/Collection;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/InsertResultStep;
-#returning([Lorg/jooq/Field;)Lorg/jooq/InsertResultStep;

+###org/jooq/InsertSetMoreStep
@1.6.0
+#newRecord()Lorg/jooq/InsertSetStep;
@3.4.0
+#set(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/InsertSetMoreStep;
+#set(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertSetMoreStep;
+#set(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/InsertSetMoreStep;
+#set(Ljava/util/Map;)Lorg/jooq/InsertSetMoreStep;
+#set(Lorg/jooq/Record;)Lorg/jooq/InsertSetMoreStep;
@3.12.0
+#setNull(Lorg/jooq/Field;)Lorg/jooq/InsertSetMoreStep;

+###org/jooq/InsertSetStep
@1.6.0
+#set(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/InsertSetMoreStep;
+#set(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertSetMoreStep;
+#set(Ljava/util/Map;)Lorg/jooq/InsertSetMoreStep;
@1.6.9
+#values([Ljava/lang/Object;)Lorg/jooq/InsertValuesStep;
+#values([Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep;
@2.0.3
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.0.0-RC1
+#set(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/InsertSetMoreStep;
+#set(Lorg/jooq/Record;)Lorg/jooq/InsertSetMoreStep;
+#values([Ljava/lang/Object;)Lorg/jooq/InsertValuesStepN;
+#values([Lorg/jooq/Field;)Lorg/jooq/InsertValuesStepN;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;
-#values([Ljava/lang/Object;)Lorg/jooq/InsertValuesStep;
-#values([Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep;
-#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep;
@3.3.0
+#defaultValues()Lorg/jooq/InsertReturningStep;
@3.6.0
+#columns([Lorg/jooq/Field;)Lorg/jooq/InsertValuesStepN;
+#columns(Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;
+#columns(Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep1;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep2;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep3;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep4;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep5;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep6;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep7;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep8;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep9;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep10;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep11;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep12;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep13;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep14;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep15;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep16;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep17;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep18;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep19;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep20;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep21;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep22;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertReturningStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.10.0
+#defaultValues()Lorg/jooq/InsertOnDuplicateStep;
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#defaultValues()Lorg/jooq/InsertReturningStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/InsertReturningStep;
@3.12.0
+#setNull(Lorg/jooq/Field;)Lorg/jooq/InsertSetMoreStep;

+###org/jooq/InsertValuesStep1
@3.0.0-RC1
+#values(Ljava/lang/Object;)Lorg/jooq/InsertValuesStep1;
+#values(Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep1;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep1;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row1;)Lorg/jooq/InsertValuesStep1;
+#values(Lorg/jooq/Record1;)Lorg/jooq/InsertValuesStep1;
+#valuesOfRows([Lorg/jooq/Row1;)Lorg/jooq/InsertValuesStep1;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep1;
+#valuesOfRecords([Lorg/jooq/Record1;)Lorg/jooq/InsertValuesStep1;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep1;

+###org/jooq/InsertValuesStep10
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep10;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep10;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep10;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row10;)Lorg/jooq/InsertValuesStep10;
+#values(Lorg/jooq/Record10;)Lorg/jooq/InsertValuesStep10;
+#valuesOfRows([Lorg/jooq/Row10;)Lorg/jooq/InsertValuesStep10;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep10;
+#valuesOfRecords([Lorg/jooq/Record10;)Lorg/jooq/InsertValuesStep10;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep10;

+###org/jooq/InsertValuesStep11
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep11;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep11;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep11;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row11;)Lorg/jooq/InsertValuesStep11;
+#values(Lorg/jooq/Record11;)Lorg/jooq/InsertValuesStep11;
+#valuesOfRows([Lorg/jooq/Row11;)Lorg/jooq/InsertValuesStep11;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep11;
+#valuesOfRecords([Lorg/jooq/Record11;)Lorg/jooq/InsertValuesStep11;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep11;

+###org/jooq/InsertValuesStep12
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep12;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep12;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep12;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row12;)Lorg/jooq/InsertValuesStep12;
+#values(Lorg/jooq/Record12;)Lorg/jooq/InsertValuesStep12;
+#valuesOfRows([Lorg/jooq/Row12;)Lorg/jooq/InsertValuesStep12;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep12;
+#valuesOfRecords([Lorg/jooq/Record12;)Lorg/jooq/InsertValuesStep12;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep12;

+###org/jooq/InsertValuesStep13
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep13;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep13;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep13;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row13;)Lorg/jooq/InsertValuesStep13;
+#values(Lorg/jooq/Record13;)Lorg/jooq/InsertValuesStep13;
+#valuesOfRows([Lorg/jooq/Row13;)Lorg/jooq/InsertValuesStep13;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep13;
+#valuesOfRecords([Lorg/jooq/Record13;)Lorg/jooq/InsertValuesStep13;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep13;

+###org/jooq/InsertValuesStep14
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep14;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep14;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep14;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row14;)Lorg/jooq/InsertValuesStep14;
+#values(Lorg/jooq/Record14;)Lorg/jooq/InsertValuesStep14;
+#valuesOfRows([Lorg/jooq/Row14;)Lorg/jooq/InsertValuesStep14;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep14;
+#valuesOfRecords([Lorg/jooq/Record14;)Lorg/jooq/InsertValuesStep14;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep14;

+###org/jooq/InsertValuesStep15
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep15;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep15;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep15;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row15;)Lorg/jooq/InsertValuesStep15;
+#values(Lorg/jooq/Record15;)Lorg/jooq/InsertValuesStep15;
+#valuesOfRows([Lorg/jooq/Row15;)Lorg/jooq/InsertValuesStep15;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep15;
+#valuesOfRecords([Lorg/jooq/Record15;)Lorg/jooq/InsertValuesStep15;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep15;

+###org/jooq/InsertValuesStep16
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep16;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep16;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep16;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row16;)Lorg/jooq/InsertValuesStep16;
+#values(Lorg/jooq/Record16;)Lorg/jooq/InsertValuesStep16;
+#valuesOfRows([Lorg/jooq/Row16;)Lorg/jooq/InsertValuesStep16;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep16;
+#valuesOfRecords([Lorg/jooq/Record16;)Lorg/jooq/InsertValuesStep16;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep16;

+###org/jooq/InsertValuesStep17
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep17;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep17;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep17;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row17;)Lorg/jooq/InsertValuesStep17;
+#values(Lorg/jooq/Record17;)Lorg/jooq/InsertValuesStep17;
+#valuesOfRows([Lorg/jooq/Row17;)Lorg/jooq/InsertValuesStep17;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep17;
+#valuesOfRecords([Lorg/jooq/Record17;)Lorg/jooq/InsertValuesStep17;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep17;

+###org/jooq/InsertValuesStep18
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep18;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep18;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep18;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row18;)Lorg/jooq/InsertValuesStep18;
+#values(Lorg/jooq/Record18;)Lorg/jooq/InsertValuesStep18;
+#valuesOfRows([Lorg/jooq/Row18;)Lorg/jooq/InsertValuesStep18;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep18;
+#valuesOfRecords([Lorg/jooq/Record18;)Lorg/jooq/InsertValuesStep18;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep18;

+###org/jooq/InsertValuesStep19
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep19;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep19;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep19;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row19;)Lorg/jooq/InsertValuesStep19;
+#values(Lorg/jooq/Record19;)Lorg/jooq/InsertValuesStep19;
+#valuesOfRows([Lorg/jooq/Row19;)Lorg/jooq/InsertValuesStep19;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep19;
+#valuesOfRecords([Lorg/jooq/Record19;)Lorg/jooq/InsertValuesStep19;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep19;

+###org/jooq/InsertValuesStep2
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep2;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep2;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep2;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row2;)Lorg/jooq/InsertValuesStep2;
+#values(Lorg/jooq/Record2;)Lorg/jooq/InsertValuesStep2;
+#valuesOfRows([Lorg/jooq/Row2;)Lorg/jooq/InsertValuesStep2;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep2;
+#valuesOfRecords([Lorg/jooq/Record2;)Lorg/jooq/InsertValuesStep2;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep2;

+###org/jooq/InsertValuesStep20
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep20;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep20;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep20;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row20;)Lorg/jooq/InsertValuesStep20;
+#values(Lorg/jooq/Record20;)Lorg/jooq/InsertValuesStep20;
+#valuesOfRows([Lorg/jooq/Row20;)Lorg/jooq/InsertValuesStep20;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep20;
+#valuesOfRecords([Lorg/jooq/Record20;)Lorg/jooq/InsertValuesStep20;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep20;

+###org/jooq/InsertValuesStep21
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep21;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep21;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep21;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row21;)Lorg/jooq/InsertValuesStep21;
+#values(Lorg/jooq/Record21;)Lorg/jooq/InsertValuesStep21;
+#valuesOfRows([Lorg/jooq/Row21;)Lorg/jooq/InsertValuesStep21;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep21;
+#valuesOfRecords([Lorg/jooq/Record21;)Lorg/jooq/InsertValuesStep21;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep21;

+###org/jooq/InsertValuesStep22
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep22;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep22;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep22;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row22;)Lorg/jooq/InsertValuesStep22;
+#values(Lorg/jooq/Record22;)Lorg/jooq/InsertValuesStep22;
+#valuesOfRows([Lorg/jooq/Row22;)Lorg/jooq/InsertValuesStep22;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep22;
+#valuesOfRecords([Lorg/jooq/Record22;)Lorg/jooq/InsertValuesStep22;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep22;

+###org/jooq/InsertValuesStep3
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep3;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep3;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep3;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row3;)Lorg/jooq/InsertValuesStep3;
+#values(Lorg/jooq/Record3;)Lorg/jooq/InsertValuesStep3;
+#valuesOfRows([Lorg/jooq/Row3;)Lorg/jooq/InsertValuesStep3;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep3;
+#valuesOfRecords([Lorg/jooq/Record3;)Lorg/jooq/InsertValuesStep3;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep3;

+###org/jooq/InsertValuesStep4
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep4;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep4;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep4;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row4;)Lorg/jooq/InsertValuesStep4;
+#values(Lorg/jooq/Record4;)Lorg/jooq/InsertValuesStep4;
+#valuesOfRows([Lorg/jooq/Row4;)Lorg/jooq/InsertValuesStep4;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep4;
+#valuesOfRecords([Lorg/jooq/Record4;)Lorg/jooq/InsertValuesStep4;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep4;

+###org/jooq/InsertValuesStep5
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep5;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep5;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep5;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row5;)Lorg/jooq/InsertValuesStep5;
+#values(Lorg/jooq/Record5;)Lorg/jooq/InsertValuesStep5;
+#valuesOfRows([Lorg/jooq/Row5;)Lorg/jooq/InsertValuesStep5;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep5;
+#valuesOfRecords([Lorg/jooq/Record5;)Lorg/jooq/InsertValuesStep5;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep5;

+###org/jooq/InsertValuesStep6
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep6;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep6;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep6;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row6;)Lorg/jooq/InsertValuesStep6;
+#values(Lorg/jooq/Record6;)Lorg/jooq/InsertValuesStep6;
+#valuesOfRows([Lorg/jooq/Row6;)Lorg/jooq/InsertValuesStep6;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep6;
+#valuesOfRecords([Lorg/jooq/Record6;)Lorg/jooq/InsertValuesStep6;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep6;

+###org/jooq/InsertValuesStep7
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep7;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep7;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep7;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row7;)Lorg/jooq/InsertValuesStep7;
+#values(Lorg/jooq/Record7;)Lorg/jooq/InsertValuesStep7;
+#valuesOfRows([Lorg/jooq/Row7;)Lorg/jooq/InsertValuesStep7;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep7;
+#valuesOfRecords([Lorg/jooq/Record7;)Lorg/jooq/InsertValuesStep7;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep7;

+###org/jooq/InsertValuesStep8
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep8;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep8;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep8;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row8;)Lorg/jooq/InsertValuesStep8;
+#values(Lorg/jooq/Record8;)Lorg/jooq/InsertValuesStep8;
+#valuesOfRows([Lorg/jooq/Row8;)Lorg/jooq/InsertValuesStep8;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep8;
+#valuesOfRecords([Lorg/jooq/Record8;)Lorg/jooq/InsertValuesStep8;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep8;

+###org/jooq/InsertValuesStep9
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/InsertValuesStep9;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep9;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep9;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.7.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/Row9;)Lorg/jooq/InsertValuesStep9;
+#values(Lorg/jooq/Record9;)Lorg/jooq/InsertValuesStep9;
+#valuesOfRows([Lorg/jooq/Row9;)Lorg/jooq/InsertValuesStep9;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep9;
+#valuesOfRecords([Lorg/jooq/Record9;)Lorg/jooq/InsertValuesStep9;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep9;

+###org/jooq/InsertValuesStepN
@3.0.0-RC1
+#values([Ljava/lang/Object;)Lorg/jooq/InsertValuesStepN;
+#values([Lorg/jooq/Field;)Lorg/jooq/InsertValuesStepN;
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.9.0
+#select(Lorg/jooq/Select;)Lorg/jooq/InsertOnDuplicateStep;
-#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.15.0
+#values(Lorg/jooq/RowN;)Lorg/jooq/InsertValuesStepN;
+#values(Lorg/jooq/Record;)Lorg/jooq/InsertValuesStepN;
+#valuesOfRows([Lorg/jooq/RowN;)Lorg/jooq/InsertValuesStepN;
+#valuesOfRows(Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;
+#valuesOfRecords([Lorg/jooq/Record;)Lorg/jooq/InsertValuesStepN;
+#valuesOfRecords(Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;

+###org/jooq/JoinType
@1.5.7
+#values()[Lorg/jooq/JoinType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/JoinType;
+#toSQL()Ljava/lang/String;
@3.10.0
+#toKeyword()Lorg/jooq/Keyword;
+#qualified()Z
@3.13.0
+#toKeyword(Z)Lorg/jooq/Keyword;

+###org/jooq/Key
@1.5.9
+#getTable()Lorg/jooq/Table;
+#getFields()Ljava/util/List;
@1.6.4
+#getFieldsArray()[Lorg/jooq/TableField;
@3.8.0
+#getName()Ljava/lang/String;
+#constraint()Lorg/jooq/Constraint;
@3.13.0
+#enforced()Z
-#getName()Ljava/lang/String;
@3.14.0
+#nullable()Z

+###org/jooq/Loader
@1.6.5
+#errors()Ljava/util/List;
+#processed()I
+#ignored()I
+#stored()I
@3.6.0
+#executed()I
+#result()Lorg/jooq/LoaderContext;

+###org/jooq/LoaderCSVOptionsStep
@1.6.5
+#ignoreRows(I)Lorg/jooq/LoaderCSVOptionsStep;
+#quote(C)Lorg/jooq/LoaderCSVOptionsStep;
+#separator(C)Lorg/jooq/LoaderCSVOptionsStep;
@2.5.0
+#nullString(Ljava/lang/String;)Lorg/jooq/LoaderCSVOptionsStep;

+###org/jooq/LoaderCSVStep
@1.6.5
+#fields([Lorg/jooq/Field;)Lorg/jooq/LoaderCSVOptionsStep;
+#fields(Ljava/util/Collection;)Lorg/jooq/LoaderCSVOptionsStep;
@3.8.0
+#fields(Lorg/jooq/LoaderFieldMapper;)Lorg/jooq/LoaderListenerStep;
@3.13.0
+#fields(Lorg/jooq/LoaderFieldMapper;)Lorg/jooq/LoaderCSVOptionsStep;
+#fieldsFromSource()Lorg/jooq/LoaderCSVOptionsStep;
-#fields(Lorg/jooq/LoaderFieldMapper;)Lorg/jooq/LoaderListenerStep;
@3.14.0
*#fieldsFromSource()Lorg/jooq/LoaderCSVOptionsStep;[deprecated]
+#fieldsCorresponding()Lorg/jooq/LoaderCSVOptionsStep;

+###org/jooq/LoaderError
@1.6.5
+#exception()Ljava/sql/SQLException;
+#rowIndex()I
+#row()[Ljava/lang/String;
+#query()Lorg/jooq/Query;
@2.0.0-RC1
+#exception()Lorg/jooq/exception/DataAccessException;
-#exception()Ljava/sql/SQLException;

+###org/jooq/LoaderLoadStep
@1.6.5
+#execute()Lorg/jooq/Loader;

+###org/jooq/LoaderOptionsStep
@1.6.5
+#onDuplicateKeyUpdate()Lorg/jooq/LoaderOptionsStep;
+#onDuplicateKeyIgnore()Lorg/jooq/LoaderOptionsStep;
+#onDuplicateKeyError()Lorg/jooq/LoaderOptionsStep;
+#onErrorIgnore()Lorg/jooq/LoaderOptionsStep;
+#onErrorAbort()Lorg/jooq/LoaderOptionsStep;
+#commitEach()Lorg/jooq/LoaderOptionsStep;
+#commitAfter(I)Lorg/jooq/LoaderOptionsStep;
+#commitAll()Lorg/jooq/LoaderOptionsStep;
+#commitNone()Lorg/jooq/LoaderOptionsStep;
@3.6.0
+#batchAll()Lorg/jooq/LoaderOptionsStep;
+#batchNone()Lorg/jooq/LoaderOptionsStep;
+#batchAfter(I)Lorg/jooq/LoaderOptionsStep;
+#bulkAll()Lorg/jooq/LoaderOptionsStep;
+#bulkNone()Lorg/jooq/LoaderOptionsStep;
+#bulkAfter(I)Lorg/jooq/LoaderOptionsStep;

+###org/jooq/LoaderSourceStep
@1.6.5
+#loadCSV(Ljava/io/File;)Lorg/jooq/LoaderCSVStep;
+#loadCSV(Ljava/lang/String;)Lorg/jooq/LoaderCSVStep;
+#loadCSV(Ljava/io/InputStream;)Lorg/jooq/LoaderCSVStep;
+#loadCSV(Ljava/io/Reader;)Lorg/jooq/LoaderCSVStep;
+#loadXML(Ljava/io/File;)Lorg/jooq/LoaderXMLStep;
+#loadXML(Ljava/lang/String;)Lorg/jooq/LoaderXMLStep;
+#loadXML(Ljava/io/InputStream;)Lorg/jooq/LoaderXMLStep;
+#loadXML(Ljava/io/Reader;)Lorg/jooq/LoaderXMLStep;
+#loadXML(Lorg/xml/sax/InputSource;)Lorg/jooq/LoaderXMLStep;
@3.3.0
+#loadJSON(Ljava/io/File;)Lorg/jooq/LoaderJSONStep;
+#loadJSON(Ljava/lang/String;)Lorg/jooq/LoaderJSONStep;
+#loadJSON(Ljava/io/InputStream;)Lorg/jooq/LoaderJSONStep;
+#loadJSON(Ljava/io/Reader;)Lorg/jooq/LoaderJSONStep;
@3.6.0
+#loadCSV(Ljava/io/File;Ljava/lang/String;)Lorg/jooq/LoaderCSVStep;
+#loadCSV(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/jooq/LoaderCSVStep;
+#loadCSV(Ljava/io/File;Ljava/nio/charset/CharsetDecoder;)Lorg/jooq/LoaderCSVStep;
+#loadCSV(Ljava/io/InputStream;Ljava/lang/String;)Lorg/jooq/LoaderCSVStep;
+#loadCSV(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lorg/jooq/LoaderCSVStep;
+#loadCSV(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)Lorg/jooq/LoaderCSVStep;
+#loadXML(Ljava/io/File;Ljava/lang/String;)Lorg/jooq/LoaderXMLStep;
+#loadXML(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/jooq/LoaderXMLStep;
+#loadXML(Ljava/io/File;Ljava/nio/charset/CharsetDecoder;)Lorg/jooq/LoaderXMLStep;
+#loadXML(Ljava/io/InputStream;Ljava/lang/String;)Lorg/jooq/LoaderXMLStep;
+#loadXML(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lorg/jooq/LoaderXMLStep;
+#loadXML(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)Lorg/jooq/LoaderXMLStep;
+#loadJSON(Ljava/io/File;Ljava/lang/String;)Lorg/jooq/LoaderJSONStep;
+#loadJSON(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/jooq/LoaderJSONStep;
+#loadJSON(Ljava/io/File;Ljava/nio/charset/CharsetDecoder;)Lorg/jooq/LoaderJSONStep;
+#loadJSON(Ljava/io/InputStream;Ljava/lang/String;)Lorg/jooq/LoaderJSONStep;
+#loadJSON(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lorg/jooq/LoaderJSONStep;
+#loadJSON(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)Lorg/jooq/LoaderJSONStep;
@3.7.0
+#loadArrays([[Ljava/lang/Object;)Lorg/jooq/LoaderRowsStep;
+#loadArrays(Ljava/lang/Iterable;)Lorg/jooq/LoaderRowsStep;
+#loadArrays(Ljava/util/Iterator;)Lorg/jooq/LoaderRowsStep;
+#loadRecords([Lorg/jooq/Record;)Lorg/jooq/LoaderRowsStep;
+#loadRecords(Ljava/lang/Iterable;)Lorg/jooq/LoaderRowsStep;
+#loadRecords(Ljava/util/Iterator;)Lorg/jooq/LoaderRowsStep;
@3.8.0
+#loadArrays(Ljava/util/stream/Stream;)Lorg/jooq/LoaderRowsStep;
+#loadRecords(Ljava/util/stream/Stream;)Lorg/jooq/LoaderRowsStep;
@3.13.0
+#loadCSV(Lorg/jooq/Source;)Lorg/jooq/LoaderCSVStep;
+#loadXML(Lorg/jooq/Source;)Lorg/jooq/LoaderXMLStep;
+#loadJSON(Lorg/jooq/Source;)Lorg/jooq/LoaderJSONStep;

+###org/jooq/LoaderXMLStep
@1.6.5

+###org/jooq/Merge
@1.6.0

+###org/jooq/MergeFinalStep
@1.6.0

+###org/jooq/MergeKeyStep1
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep1;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep1;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep1;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep1;[deprecated]

+###org/jooq/MergeKeyStep10
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep10;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep10;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep10;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep10;[deprecated]

+###org/jooq/MergeKeyStep11
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep11;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep11;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep11;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep11;[deprecated]

+###org/jooq/MergeKeyStep12
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep12;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep12;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep12;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep12;[deprecated]

+###org/jooq/MergeKeyStep13
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep13;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep13;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep13;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep13;[deprecated]

+###org/jooq/MergeKeyStep14
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep14;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep14;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep14;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep14;[deprecated]

+###org/jooq/MergeKeyStep15
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep15;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep15;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep15;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep15;[deprecated]

+###org/jooq/MergeKeyStep16
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep16;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep16;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep16;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep16;[deprecated]

+###org/jooq/MergeKeyStep17
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep17;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep17;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep17;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep17;[deprecated]

+###org/jooq/MergeKeyStep18
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep18;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep18;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep18;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep18;[deprecated]

+###org/jooq/MergeKeyStep19
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep19;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep19;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep19;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep19;[deprecated]

+###org/jooq/MergeKeyStep2
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep2;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep2;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep2;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep2;[deprecated]

+###org/jooq/MergeKeyStep20
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep20;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep20;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep20;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep20;[deprecated]

+###org/jooq/MergeKeyStep21
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep21;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep21;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep21;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep21;[deprecated]

+###org/jooq/MergeKeyStep22
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep22;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep22;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep22;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep22;[deprecated]

+###org/jooq/MergeKeyStep3
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep3;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep3;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep3;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep3;[deprecated]

+###org/jooq/MergeKeyStep4
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep4;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep4;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep4;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep4;[deprecated]

+###org/jooq/MergeKeyStep5
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep5;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep5;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep5;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep5;[deprecated]

+###org/jooq/MergeKeyStep6
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep6;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep6;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep6;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep6;[deprecated]

+###org/jooq/MergeKeyStep7
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep7;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep7;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep7;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep7;[deprecated]

+###org/jooq/MergeKeyStep8
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep8;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep8;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep8;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep8;[deprecated]

+###org/jooq/MergeKeyStep9
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep9;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep9;
@3.14.0
*#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep9;[deprecated]
*#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep9;[deprecated]

+###org/jooq/MergeKeyStepN
@3.0.0-RC1
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStepN;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStepN;

+###org/jooq/MergeMatchedDeleteStep
@2.0.1
+#deleteWhere(Lorg/jooq/Condition;)Lorg/jooq/MergeNotMatchedStep;
@3.1.0
+#deleteWhere(Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedStep;
@3.7.0
+#deleteWhere(Ljava/lang/Boolean;)Lorg/jooq/MergeNotMatchedStep;
@3.7.2
*#deleteWhere(Ljava/lang/Boolean;)Lorg/jooq/MergeNotMatchedStep;[deprecated]
@3.14.0
+#deleteWhere(Lorg/jooq/Condition;)Lorg/jooq/MergeMatchedStep;
+#deleteWhere(Lorg/jooq/Field;)Lorg/jooq/MergeMatchedStep;
+#deleteWhere(Ljava/lang/Boolean;)Lorg/jooq/MergeMatchedStep;[deprecated]
-#deleteWhere(Lorg/jooq/Condition;)Lorg/jooq/MergeNotMatchedStep;
-#deleteWhere(Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedStep;
-#deleteWhere(Ljava/lang/Boolean;)Lorg/jooq/MergeNotMatchedStep;[deprecated]
@3.15.0
-#deleteWhere(Ljava/lang/Boolean;)Lorg/jooq/MergeMatchedStep;[deprecated]

+###org/jooq/MergeMatchedSetMoreStep
@1.6.0

+###org/jooq/MergeMatchedSetStep
@1.6.0
+#set(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/MergeMatchedSetMoreStep;
+#set(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeMatchedSetMoreStep;
+#set(Ljava/util/Map;)Lorg/jooq/MergeMatchedSetMoreStep;
@3.0.0-RC1
+#set(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/MergeMatchedSetMoreStep;
+#set(Lorg/jooq/Record;)Lorg/jooq/MergeMatchedSetMoreStep;
@3.12.0
+#setNull(Lorg/jooq/Field;)Lorg/jooq/MergeMatchedSetMoreStep;

+###org/jooq/MergeMatchedStep
@1.6.0
+#whenMatchedThenUpdate()Lorg/jooq/MergeMatchedSetStep;
@3.14.0
+#whenMatchedThenDelete()Lorg/jooq/MergeMatchedStep;
+#whenMatchedAnd(Lorg/jooq/Condition;)Lorg/jooq/MergeMatchedThenStep;
+#whenMatchedAnd(Lorg/jooq/Field;)Lorg/jooq/MergeMatchedThenStep;
+#whenMatchedAnd(Lorg/jooq/SQL;)Lorg/jooq/MergeMatchedThenStep;
+#whenMatchedAnd(Ljava/lang/String;)Lorg/jooq/MergeMatchedThenStep;
+#whenMatchedAnd(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/MergeMatchedThenStep;
+#whenMatchedAnd(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/MergeMatchedThenStep;

+###org/jooq/MergeMatchedWhereStep
@2.0.1
+#where(Lorg/jooq/Condition;)Lorg/jooq/MergeMatchedDeleteStep;
@3.1.0
+#where(Lorg/jooq/Field;)Lorg/jooq/MergeMatchedDeleteStep;
@3.7.0
+#where(Ljava/lang/Boolean;)Lorg/jooq/MergeMatchedDeleteStep;
@3.7.2
*#where(Ljava/lang/Boolean;)Lorg/jooq/MergeMatchedDeleteStep;[deprecated]
@3.15.0
-#where(Ljava/lang/Boolean;)Lorg/jooq/MergeMatchedDeleteStep;[deprecated]

+###org/jooq/MergeNotMatchedSetMoreStep
@2.0.1

+###org/jooq/MergeNotMatchedSetStep
@2.0.1
+#set(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedSetMoreStep;
+#set(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedSetMoreStep;
+#set(Ljava/util/Map;)Lorg/jooq/MergeNotMatchedSetMoreStep;
@3.0.0-RC1
+#set(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/MergeMatchedSetMoreStep;
+#set(Lorg/jooq/Record;)Lorg/jooq/MergeNotMatchedSetMoreStep;
@3.1.0
+#set(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/MergeNotMatchedSetMoreStep;
-#set(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/MergeMatchedSetMoreStep;
@3.12.0
+#setNull(Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedSetMoreStep;

+###org/jooq/MergeNotMatchedStep
@1.6.0
+#whenNotMatchedThenInsert([Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep;
+#whenNotMatchedThenInsert(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedValuesStep;
@2.0.1
+#whenNotMatchedThenInsert()Lorg/jooq/MergeNotMatchedSetStep;
@3.0.0-RC1
+#whenNotMatchedThenInsert(Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep1;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep2;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep3;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep4;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep5;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep6;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep7;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep8;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep9;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep10;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep11;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep12;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep13;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep14;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep15;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep16;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep17;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep18;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep19;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep20;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep21;
+#whenNotMatchedThenInsert(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep22;
+#whenNotMatchedThenInsert([Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStepN;
+#whenNotMatchedThenInsert(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedValuesStepN;
-#whenNotMatchedThenInsert([Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedValuesStep;
-#whenNotMatchedThenInsert(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedValuesStep;

+###org/jooq/MergeNotMatchedValuesStep1
@3.0.0-RC1
+#values(Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep10
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep11
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep12
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep13
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep14
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep15
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep16
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep17
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep18
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep19
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep2
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep20
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep21
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep22
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep3
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep4
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep5
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep6
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep7
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep8
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStep9
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedValuesStepN
@3.0.0-RC1
+#values([Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values([Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;

+###org/jooq/MergeNotMatchedWhereStep
@2.0.1
+#where(Lorg/jooq/Condition;)Lorg/jooq/MergeFinalStep;
@3.1.0
+#where(Lorg/jooq/Field;)Lorg/jooq/MergeFinalStep;
@3.7.0
+#where(Ljava/lang/Boolean;)Lorg/jooq/MergeFinalStep;
@3.7.2
*#where(Ljava/lang/Boolean;)Lorg/jooq/MergeFinalStep;[deprecated]
@3.15.0
-#where(Ljava/lang/Boolean;)Lorg/jooq/MergeFinalStep;[deprecated]

+###org/jooq/MergeOnConditionStep
@1.6.0
+#and(Lorg/jooq/Condition;)Lorg/jooq/MergeOnConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/MergeOnConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/MergeOnConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/MergeOnConditionStep;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/MergeOnConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/MergeOnConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/MergeOnConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/MergeOnConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/MergeOnConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/MergeOnConditionStep;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/MergeOnConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/MergeOnConditionStep;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/MergeOnConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/MergeOnConditionStep;
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/MergeOnConditionStep;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/MergeOnConditionStep;
+#or(Lorg/jooq/Field;)Lorg/jooq/MergeOnConditionStep;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/MergeOnConditionStep;
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;
+#and(Lorg/jooq/SQL;)Lorg/jooq/MergeOnConditionStep;
+#andNot(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;
+#or(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;
+#or(Lorg/jooq/SQL;)Lorg/jooq/MergeOnConditionStep;
+#orNot(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;
@3.7.2
*#and(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;[deprecated]
*#andNot(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;[deprecated]
*#or(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;[deprecated]
*#orNot(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;[deprecated]
@3.15.0
-#and(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;[deprecated]
-#andNot(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;[deprecated]
-#or(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;[deprecated]
-#orNot(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;[deprecated]

+###org/jooq/MergeOnStep
@1.6.0
+#on([Lorg/jooq/Condition;)Lorg/jooq/MergeOnConditionStep;
+#on(Ljava/lang/String;)Lorg/jooq/MergeOnConditionStep;
+#on(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/MergeOnConditionStep;
@2.5.0
+#on(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/MergeOnConditionStep;
@3.1.0
+#on(Lorg/jooq/Field;)Lorg/jooq/MergeOnConditionStep;
@3.7.0
+#on(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;
+#on(Lorg/jooq/SQL;)Lorg/jooq/MergeOnConditionStep;
@3.7.2
*#on(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;[deprecated]
@3.11.0
+#on(Lorg/jooq/Condition;)Lorg/jooq/MergeOnConditionStep;
@3.15.0
-#on(Ljava/lang/Boolean;)Lorg/jooq/MergeOnConditionStep;[deprecated]

+###org/jooq/MergeUsingStep
@1.6.0
+#using(Lorg/jooq/TableLike;)Lorg/jooq/MergeOnStep;
+#usingDual()Lorg/jooq/MergeOnStep;
@3.8.0
+#columns([Lorg/jooq/Field;)Lorg/jooq/MergeKeyStepN;
+#columns(Ljava/util/Collection;)Lorg/jooq/MergeKeyStepN;
+#columns(Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;
+#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;
@3.14.0
*#columns([Lorg/jooq/Field;)Lorg/jooq/MergeKeyStepN;[deprecated]
*#columns(Ljava/util/Collection;)Lorg/jooq/MergeKeyStepN;[deprecated]
*#columns(Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;[deprecated]
*#columns(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;[deprecated]

+###org/jooq/MergeValuesStep1
@3.0.0-RC1
+#values(Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep10
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep11
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep12
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep13
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep14
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep15
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep16
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep17
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep18
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep19
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep2
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep20
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep21
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep22
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep3
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep4
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep5
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep6
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep7
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep8
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStep9
@3.0.0-RC1
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;
+#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.14.0
*#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Merge;[deprecated]
*#values(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Merge;[deprecated]
*#values(Ljava/util/Collection;)Lorg/jooq/Merge;[deprecated]
*#select(Lorg/jooq/Select;)Lorg/jooq/Merge;[deprecated]

+###org/jooq/MergeValuesStepN
@3.0.0-RC1
+#values([Ljava/lang/Object;)Lorg/jooq/Merge;
+#values([Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;

+###org/jooq/Meta
@3.0.0-RC1
+#getCatalogs()Ljava/util/List;
+#getSchemas()Ljava/util/List;
+#getTables()Ljava/util/List;
@3.2.0-alpha-01
+#getPrimaryKeys()Ljava/util/List;
@3.9.0
+#getSequences()Ljava/util/List;
@3.11.0
+#getCatalog(Ljava/lang/String;)Lorg/jooq/Catalog;
+#getCatalog(Lorg/jooq/Name;)Lorg/jooq/Catalog;
+#getSchemas(Ljava/lang/String;)Ljava/util/List;
+#getSchemas(Lorg/jooq/Name;)Ljava/util/List;
+#getTables(Ljava/lang/String;)Ljava/util/List;
+#getTables(Lorg/jooq/Name;)Ljava/util/List;
+#getSequences(Ljava/lang/String;)Ljava/util/List;
+#getSequences(Lorg/jooq/Name;)Ljava/util/List;
@3.13.0
+#getIndexes()Ljava/util/List;
+#ddl()Lorg/jooq/Queries;
+#ddl(Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#apply(Ljava/lang/String;)Lorg/jooq/Meta;
+#apply([Lorg/jooq/Query;)Lorg/jooq/Meta;
+#apply(Ljava/util/Collection;)Lorg/jooq/Meta;
+#apply(Lorg/jooq/Queries;)Lorg/jooq/Meta;
+#migrateTo(Lorg/jooq/Meta;)Lorg/jooq/Queries;
+#migrateTo(Lorg/jooq/Meta;Lorg/jooq/MigrationConfiguration;)Lorg/jooq/Queries;
+#informationSchema()Lorg/jooq/util/xml/jaxb/InformationSchema;
@3.14.0
+#getDomains()Ljava/util/List;
+#getDomains(Ljava/lang/String;)Ljava/util/List;
+#getDomains(Lorg/jooq/Name;)Ljava/util/List;
+#filterCatalogs(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
+#filterSchemas(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
+#filterTables(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
+#filterDomains(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
+#filterSequences(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
+#filterPrimaryKeys(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
+#filterIndexes(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
+#snapshot()Lorg/jooq/Meta;
@3.15.0
+#getPrimaryKeys(Ljava/lang/String;)Ljava/util/List;
+#getPrimaryKeys(Lorg/jooq/Name;)Ljava/util/List;
+#getUniqueKeys()Ljava/util/List;
+#getUniqueKeys(Ljava/lang/String;)Ljava/util/List;
+#getUniqueKeys(Lorg/jooq/Name;)Ljava/util/List;
+#getForeignKeys()Ljava/util/List;
+#getForeignKeys(Ljava/lang/String;)Ljava/util/List;
+#getForeignKeys(Lorg/jooq/Name;)Ljava/util/List;
+#getIndexes(Ljava/lang/String;)Ljava/util/List;
+#getIndexes(Lorg/jooq/Name;)Ljava/util/List;
+#filterCatalogs(Ljava/util/function/Predicate;)Lorg/jooq/Meta;
+#filterSchemas(Ljava/util/function/Predicate;)Lorg/jooq/Meta;
+#filterTables(Ljava/util/function/Predicate;)Lorg/jooq/Meta;
+#filterDomains(Ljava/util/function/Predicate;)Lorg/jooq/Meta;
+#filterSequences(Ljava/util/function/Predicate;)Lorg/jooq/Meta;
+#filterPrimaryKeys(Ljava/util/function/Predicate;)Lorg/jooq/Meta;
+#filterUniqueKeys(Ljava/util/function/Predicate;)Lorg/jooq/Meta;
+#filterForeignKeys(Ljava/util/function/Predicate;)Lorg/jooq/Meta;
+#filterIndexes(Ljava/util/function/Predicate;)Lorg/jooq/Meta;
-#filterCatalogs(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
-#filterSchemas(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
-#filterTables(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
-#filterDomains(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
-#filterSequences(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
-#filterPrimaryKeys(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;
-#filterIndexes(Lorg/jooq/Meta$Predicate;)Lorg/jooq/Meta;

+###org/jooq/Name
@2.4.0
+#getName()[Ljava/lang/String;
@3.3.0
+#as(Lorg/jooq/WindowSpecification;)Lorg/jooq/WindowDefinition;
@3.4.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#fields([Ljava/lang/String;)Lorg/jooq/DerivedColumnList;
@3.8.0
+#fields(Ljava/lang/String;)Lorg/jooq/DerivedColumnList1;
+#fields(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList2;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList3;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList4;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList5;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList6;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList7;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList8;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList9;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList10;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList11;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList12;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList13;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList14;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList15;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList16;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList17;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList18;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList19;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList20;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList21;
+#fields(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DerivedColumnList22;
@3.9.0
+#first()Ljava/lang/String;
+#last()Ljava/lang/String;
+#qualified()Z
+#fields(Ljava/util/function/Function;)Lorg/jooq/DerivedColumnList;
+#fields(Ljava/util/function/BiFunction;)Lorg/jooq/DerivedColumnList;
+#equals(Ljava/lang/Object;)Z
+#equalsIgnoreCase(Lorg/jooq/Name;)Z
@3.10.0
+#qualifier()Lorg/jooq/Name;
+#unqualifiedName()Lorg/jooq/Name;
+#quotedName()Lorg/jooq/Name;
+#unquotedName()Lorg/jooq/Name;
+#parts()[Lorg/jooq/Name;
+#append(Ljava/lang/String;)Lorg/jooq/Name;
+#append(Lorg/jooq/Name;)Lorg/jooq/Name;
+#fields([Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList;
+#fields(Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList1;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList2;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList3;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList4;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList5;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList6;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList7;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList8;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList9;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList10;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList11;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList12;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList13;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList14;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList15;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList16;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList17;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList18;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList19;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList20;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList21;
+#fields(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/DerivedColumnList22;
@3.11.0
+#as()Lorg/jooq/WindowDefinition;
@3.12.0
+#quoted()Lorg/jooq/Name$Quoted;
@3.13.0
+#empty()Z
+#compareTo(Lorg/jooq/Name;)I
+#compareTo(Ljava/lang/Object;)I
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
*#fields(Ljava/util/function/Function;)Lorg/jooq/DerivedColumnList;[deprecated]
*#fields(Ljava/util/function/BiFunction;)Lorg/jooq/DerivedColumnList;[deprecated]
@3.14.6
+#qualifierQualified()Z
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/Operator
@1.5.7
+#values()[Lorg/jooq/Operator;
+#valueOf(Ljava/lang/String;)Lorg/jooq/Operator;
@3.7.3
+#toSQL()Ljava/lang/String;
@3.16.0
+#toKeyword()Lorg/jooq/Keyword;
+#identity()Lorg/jooq/Condition;

+###org/jooq/OrderedAggregateFunction
@2.2.0
+#withinGroupOrderBy([Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#withinGroupOrderBy([Lorg/jooq/SortField;)Lorg/jooq/AggregateFunction;
+#withinGroupOrderBy(Ljava/util/Collection;)Lorg/jooq/AggregateFunction;
@3.6.0
+#withinGroupOrderBy([Lorg/jooq/Field;)Lorg/jooq/AggregateFilterStep;
+#withinGroupOrderBy([Lorg/jooq/SortField;)Lorg/jooq/AggregateFilterStep;
+#withinGroupOrderBy(Ljava/util/Collection;)Lorg/jooq/AggregateFilterStep;
-#withinGroupOrderBy([Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
-#withinGroupOrderBy([Lorg/jooq/SortField;)Lorg/jooq/AggregateFunction;
-#withinGroupOrderBy(Ljava/util/Collection;)Lorg/jooq/AggregateFunction;
@3.10.0
+#withinGroupOrderBy([Lorg/jooq/OrderField;)Lorg/jooq/AggregateFilterStep;
-#withinGroupOrderBy([Lorg/jooq/Field;)Lorg/jooq/AggregateFilterStep;
-#withinGroupOrderBy([Lorg/jooq/SortField;)Lorg/jooq/AggregateFilterStep;

+###org/jooq/Package
@1.5.9
@2.5.0
+#getSchema()Lorg/jooq/Schema;
@2.6.0
+#getName()Ljava/lang/String;
@3.9.0
+#getCatalog()Lorg/jooq/Catalog;
@3.11.0
-#getName()Ljava/lang/String;
@3.14.0
-#getCatalog()Lorg/jooq/Catalog;
-#getSchema()Lorg/jooq/Schema;

+###org/jooq/Param
@2.0.1
+#getName()Ljava/lang/String;
+#getParamName()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)V
+#setConverted(Ljava/lang/Object;)V
@2.3.0
+#setInline(Z)V
+#isInline()Z
@3.8.0
*#setValue(Ljava/lang/Object;)V[deprecated]
*#setConverted(Ljava/lang/Object;)V[deprecated]
*#setInline(Z)V[deprecated]
+#getParamType()Lorg/jooq/conf/ParamType;
@3.9.0
+#getParamMode()Lorg/jooq/ParamMode;
@3.14.0
-#getName()Ljava/lang/String;
@3.16.0
+#$value()Ljava/lang/Object;
+#$value(Ljava/lang/Object;)Lorg/jooq/Param;
@3.17.0
+#$inline()Z
+#$inline(Z)Lorg/jooq/Param;

+###org/jooq/Parameter
@1.5.7
@2.2.0
+#isDefaulted()Z
@2.6.0
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/Class;
+#getDataType()Lorg/jooq/DataType;
+#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
@3.5.0
+#getConverter()Lorg/jooq/Converter;
+#getBinding()Lorg/jooq/Binding;
@3.8.0
+#isUnnamed()Z
@3.11.0
-#getName()Ljava/lang/String;
@3.13.0
-#getType()Ljava/lang/Class;
-#getConverter()Lorg/jooq/Converter;
-#getBinding()Lorg/jooq/Binding;
-#getDataType()Lorg/jooq/DataType;
-#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
@3.15.0
+#getParamMode()Lorg/jooq/ParamMode;

+###org/jooq/PivotForStep
@2.0.2
+#on(Lorg/jooq/Field;)Lorg/jooq/PivotInStep;
@3.2.0
-#on(Lorg/jooq/Field;)Lorg/jooq/PivotInStep;
@3.12.0
-###org/jooq/PivotForStep

+###org/jooq/PivotInStep
@2.0.2
+#in([Ljava/lang/Object;)Lorg/jooq/Table;
+#in([Lorg/jooq/Field;)Lorg/jooq/Table;
+#in(Ljava/util/Collection;)Lorg/jooq/Table;
@3.2.0
-#in([Ljava/lang/Object;)Lorg/jooq/Table;
-#in([Lorg/jooq/Field;)Lorg/jooq/Table;
-#in(Ljava/util/Collection;)Lorg/jooq/Table;
@3.12.0
-###org/jooq/PivotInStep

+###org/jooq/QuantifiedSelect
@3.0.0-RC1

+###org/jooq/Query
@1.5.7
+#execute()I
@1.6.4
+#getSQL()Ljava/lang/String;
@1.6.7
+#getBindValues()Ljava/util/List;
@2.0.1
+#getParams()Ljava/util/Map;
+#getParam(Ljava/lang/String;)Lorg/jooq/Param;
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/Query;
+#bind(ILjava/lang/Object;)Lorg/jooq/Query;
@2.0.5
+#getSQL(Z)Ljava/lang/String;
@2.3.0
+#isExecutable()Z
@2.6.0
+#queryTimeout(I)Lorg/jooq/Query;
+#keepStatement(Z)Lorg/jooq/Query;
+#close()V
+#cancel()V
@3.1.0
*#getSQL(Z)Ljava/lang/String;[deprecated]
+#getSQL(Lorg/jooq/conf/ParamType;)Ljava/lang/String;
@3.8.0
+#executeAsync()Ljava/util/concurrent/CompletionStage;
+#executeAsync(Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
@3.12.0
+#poolable(Z)Lorg/jooq/Query;
@3.15.0
-#getSQL()Ljava/lang/String;
-#getSQL(Z)Ljava/lang/String;[deprecated]
-#getSQL(Lorg/jooq/conf/ParamType;)Ljava/lang/String;
-#getBindValues()Ljava/util/List;
-#getParams()Ljava/util/Map;
-#getParam(Ljava/lang/String;)Lorg/jooq/Param;
@3.17.0
+#keepStatement(Z)Lorg/jooq/CloseableQuery;
-#keepStatement(Z)Lorg/jooq/Query;
-#close()V

+###org/jooq/QueryPart
@1.5.7
+#getSQL()Ljava/lang/String;
@1.6.4
*#getSQL()Ljava/lang/String;[deprecated]
@2.0.0-RC1
-#getSQL()Ljava/lang/String;[deprecated]
@2.5.0
+#attach(Lorg/jooq/Configuration;)V[deprecated]
@3.0.0-RC1
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#attach(Lorg/jooq/Configuration;)V[deprecated]

+###org/jooq/QueryPartInternal
@1.5.7
+#toSQLReference(Lorg/jooq/Configuration;)Ljava/lang/String;
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#toSQLDeclaration(Lorg/jooq/Configuration;)Ljava/lang/String;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;)I
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#toSQLReference()Ljava/lang/String;[deprecated]
+#toSQLReference(Z)Ljava/lang/String;[deprecated]
+#toSQLDeclaration()Ljava/lang/String;[deprecated]
+#toSQLDeclaration(Z)Ljava/lang/String;[deprecated]
+#bind(Ljava/sql/PreparedStatement;)I[deprecated]
+#bind(Ljava/sql/PreparedStatement;I)I[deprecated]
+#getDialect()Lorg/jooq/SQLDialect;[deprecated]
@1.5.9
-#toSQLReference()Ljava/lang/String;[deprecated]
-#toSQLReference(Z)Ljava/lang/String;[deprecated]
-#toSQLDeclaration()Ljava/lang/String;[deprecated]
-#toSQLDeclaration(Z)Ljava/lang/String;[deprecated]
-#bind(Ljava/sql/PreparedStatement;)I[deprecated]
-#bind(Ljava/sql/PreparedStatement;I)I[deprecated]
@1.6.0
*#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;)I[deprecated]
*#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I[deprecated]
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;)I
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.4
*#toSQLReference(Lorg/jooq/Configuration;)Ljava/lang/String;[deprecated]
*#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;[deprecated]
*#toSQLDeclaration(Lorg/jooq/Configuration;)Ljava/lang/String;[deprecated]
*#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;[deprecated]
+#toSQL(Lorg/jooq/RenderContext;)V
*#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;)I[deprecated]
*#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I[deprecated]
*#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;)I[deprecated]
*#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I[deprecated]
+#bind(Lorg/jooq/BindContext;)V
+#declaresFields()Z
+#declaresTables()Z
@1.6.7
+#getBindValues()Ljava/util/List;
@2.0.0-RC1
-#toSQLReference(Lorg/jooq/Configuration;)Ljava/lang/String;[deprecated]
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;[deprecated]
-#toSQLDeclaration(Lorg/jooq/Configuration;)Ljava/lang/String;[deprecated]
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;[deprecated]
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;)I[deprecated]
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I[deprecated]
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;)I[deprecated]
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I[deprecated]
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;)I[deprecated]
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I[deprecated]
@2.0.1
+#getSQL()Ljava/lang/String;
+#getParams()Ljava/util/Map;
+#getParam(Ljava/lang/String;)Lorg/jooq/Param;
@2.0.2
*#getDialect()Lorg/jooq/SQLDialect;[deprecated]
@2.0.5
+#getSQL(Z)Ljava/lang/String;
@2.5.0
*#getSQL()Ljava/lang/String;[deprecated]
*#getSQL(Z)Ljava/lang/String;[deprecated]
@3.0.0-RC1
-#getSQL()Ljava/lang/String;[deprecated]
-#getSQL(Z)Ljava/lang/String;[deprecated]
-#getBindValues()Ljava/util/List;
-#getParams()Ljava/util/Map;
-#getParam(Ljava/lang/String;)Lorg/jooq/Param;
-#getDialect()Lorg/jooq/SQLDialect;[deprecated]
@3.2.0-alpha-01
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
@3.3.0
+#declaresWindows()Z
@3.4.0
+#accept(Lorg/jooq/Context;)V
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
*#bind(Lorg/jooq/BindContext;)V[deprecated]
+#declaresCTE()Z
@3.7.0
+#generatesCast()Z
@3.8.0
*#accept(Lorg/jooq/Context;)V[deprecated]
@3.14.0
+#rendersContent(Lorg/jooq/Context;)Z[deprecated]
@3.15.0
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
-#bind(Lorg/jooq/BindContext;)V[deprecated]

+###org/jooq/Record
@1.5.7
+#getValue(Lorg/jooq/Field;)Ljava/lang/Object;
+#getValue(Lorg/jooq/Field;Ljava/lang/Object;)Ljava/lang/Object;
+#getValueAsArray(Lorg/jooq/Field;)[Ljava/lang/Object;
+#getValueAsArray(Lorg/jooq/Field;[Ljava/lang/Object;)[Ljava/lang/Object;
+#getValue(Ljava/lang/String;)Ljava/lang/Object;
+#getValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#getStringValue(Lorg/jooq/Field;)Ljava/lang/String;[deprecated]
+#getStringValue(Lorg/jooq/Field;Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#getByteValue(Lorg/jooq/Field;)Ljava/lang/Byte;[deprecated]
+#getByteValue(Lorg/jooq/Field;Ljava/lang/Byte;)Ljava/lang/Byte;[deprecated]
+#getShortValue(Lorg/jooq/Field;)Ljava/lang/Short;[deprecated]
+#getShortValue(Lorg/jooq/Field;Ljava/lang/Short;)Ljava/lang/Short;[deprecated]
+#getIntegerValue(Lorg/jooq/Field;)Ljava/lang/Integer;[deprecated]
+#getIntegerValue(Lorg/jooq/Field;Ljava/lang/Integer;)Ljava/lang/Integer;[deprecated]
+#getLongValue(Lorg/jooq/Field;)Ljava/lang/Long;[deprecated]
+#getLongValue(Lorg/jooq/Field;Ljava/lang/Long;)Ljava/lang/Long;[deprecated]
+#getBigIntegerValue(Lorg/jooq/Field;)Ljava/math/BigInteger;[deprecated]
+#getBigIntegerValue(Lorg/jooq/Field;Ljava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
+#getFloatValue(Lorg/jooq/Field;)Ljava/lang/Float;[deprecated]
+#getFloatValue(Lorg/jooq/Field;Ljava/lang/Float;)Ljava/lang/Float;[deprecated]
+#getDoubleValue(Lorg/jooq/Field;)Ljava/lang/Double;[deprecated]
+#getDoubleValue(Lorg/jooq/Field;Ljava/lang/Double;)Ljava/lang/Double;[deprecated]
+#getBigDecimalValue(Lorg/jooq/Field;)Ljava/math/BigDecimal;[deprecated]
+#getBigDecimalValue(Lorg/jooq/Field;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
+#getTimestampValue(Lorg/jooq/Field;)Ljava/sql/Timestamp;[deprecated]
+#getTimestampValue(Lorg/jooq/Field;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
+#getDateValue(Lorg/jooq/Field;)Ljava/sql/Date;[deprecated]
+#getDateValue(Lorg/jooq/Field;Ljava/sql/Date;)Ljava/sql/Date;[deprecated]
+#getTimeValue(Lorg/jooq/Field;)Ljava/sql/Time;[deprecated]
+#getTimeValue(Lorg/jooq/Field;Ljava/sql/Time;)Ljava/sql/Time;[deprecated]
+#getValueAsString(Lorg/jooq/Field;)Ljava/lang/String;
+#getValueAsString(Lorg/jooq/Field;Ljava/lang/String;)Ljava/lang/String;
+#getValueAsString(Ljava/lang/String;)Ljava/lang/String;
+#getValueAsString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getValueAsByte(Lorg/jooq/Field;)Ljava/lang/Byte;
+#getValueAsByte(Lorg/jooq/Field;Ljava/lang/Byte;)Ljava/lang/Byte;
+#getValueAsByte(Ljava/lang/String;)Ljava/lang/Byte;
+#getValueAsByte(Ljava/lang/String;Ljava/lang/Byte;)Ljava/lang/Byte;
+#getValueAsShort(Lorg/jooq/Field;)Ljava/lang/Short;
+#getValueAsShort(Lorg/jooq/Field;Ljava/lang/Short;)Ljava/lang/Short;
+#getValueAsShort(Ljava/lang/String;)Ljava/lang/Short;
+#getValueAsShort(Ljava/lang/String;Ljava/lang/Short;)Ljava/lang/Short;
+#getValueAsInteger(Lorg/jooq/Field;)Ljava/lang/Integer;
+#getValueAsInteger(Lorg/jooq/Field;Ljava/lang/Integer;)Ljava/lang/Integer;
+#getValueAsInteger(Ljava/lang/String;)Ljava/lang/Integer;
+#getValueAsInteger(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
+#getValueAsLong(Lorg/jooq/Field;)Ljava/lang/Long;
+#getValueAsLong(Lorg/jooq/Field;Ljava/lang/Long;)Ljava/lang/Long;
+#getValueAsLong(Ljava/lang/String;)Ljava/lang/Long;
+#getValueAsLong(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;
+#getValueAsBigInteger(Lorg/jooq/Field;)Ljava/math/BigInteger;
+#getValueAsBigInteger(Lorg/jooq/Field;Ljava/math/BigInteger;)Ljava/math/BigInteger;
+#getValueAsBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
+#getValueAsBigInteger(Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;
+#getValueAsFloat(Lorg/jooq/Field;)Ljava/lang/Float;
+#getValueAsFloat(Lorg/jooq/Field;Ljava/lang/Float;)Ljava/lang/Float;
+#getValueAsFloat(Ljava/lang/String;)Ljava/lang/Float;
+#getValueAsFloat(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;
+#getValueAsDouble(Lorg/jooq/Field;)Ljava/lang/Double;
+#getValueAsDouble(Lorg/jooq/Field;Ljava/lang/Double;)Ljava/lang/Double;
+#getValueAsDouble(Ljava/lang/String;)Ljava/lang/Double;
+#getValueAsDouble(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;
+#getValueAsBigDecimal(Lorg/jooq/Field;)Ljava/math/BigDecimal;
+#getValueAsBigDecimal(Lorg/jooq/Field;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#getValueAsBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#getValueAsBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#getValueAsTimestamp(Lorg/jooq/Field;)Ljava/sql/Timestamp;
+#getValueAsTimestamp(Lorg/jooq/Field;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;
+#getValueAsTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getValueAsTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;
+#getValueAsDate(Lorg/jooq/Field;)Ljava/sql/Date;
+#getValueAsDate(Lorg/jooq/Field;Ljava/sql/Date;)Ljava/sql/Date;
+#getValueAsDate(Ljava/lang/String;)Ljava/sql/Date;
+#getValueAsDate(Ljava/lang/String;Ljava/sql/Date;)Ljava/sql/Date;
+#getValueAsTime(Lorg/jooq/Field;)Ljava/sql/Time;
+#getValueAsTime(Lorg/jooq/Field;Ljava/sql/Time;)Ljava/sql/Time;
+#getValueAsTime(Ljava/lang/String;)Ljava/sql/Time;
+#getValueAsTime(Ljava/lang/String;Ljava/sql/Time;)Ljava/sql/Time;
+#setValue(Lorg/jooq/Field;Ljava/lang/Object;)V
+#hasChangedValues()Z[deprecated]
@1.5.9
+#getValueAsBoolean(Lorg/jooq/Field;)Ljava/lang/Boolean;
+#getValueAsBoolean(Lorg/jooq/Field;Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#getValueAsBoolean(Ljava/lang/String;)Ljava/lang/Boolean;
+#getValueAsBoolean(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;
-#getStringValue(Lorg/jooq/Field;)Ljava/lang/String;[deprecated]
-#getStringValue(Lorg/jooq/Field;Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#getByteValue(Lorg/jooq/Field;)Ljava/lang/Byte;[deprecated]
-#getByteValue(Lorg/jooq/Field;Ljava/lang/Byte;)Ljava/lang/Byte;[deprecated]
-#getShortValue(Lorg/jooq/Field;)Ljava/lang/Short;[deprecated]
-#getShortValue(Lorg/jooq/Field;Ljava/lang/Short;)Ljava/lang/Short;[deprecated]
-#getIntegerValue(Lorg/jooq/Field;)Ljava/lang/Integer;[deprecated]
-#getIntegerValue(Lorg/jooq/Field;Ljava/lang/Integer;)Ljava/lang/Integer;[deprecated]
-#getLongValue(Lorg/jooq/Field;)Ljava/lang/Long;[deprecated]
-#getLongValue(Lorg/jooq/Field;Ljava/lang/Long;)Ljava/lang/Long;[deprecated]
-#getBigIntegerValue(Lorg/jooq/Field;)Ljava/math/BigInteger;[deprecated]
-#getBigIntegerValue(Lorg/jooq/Field;Ljava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
-#getFloatValue(Lorg/jooq/Field;)Ljava/lang/Float;[deprecated]
-#getFloatValue(Lorg/jooq/Field;Ljava/lang/Float;)Ljava/lang/Float;[deprecated]
-#getDoubleValue(Lorg/jooq/Field;)Ljava/lang/Double;[deprecated]
-#getDoubleValue(Lorg/jooq/Field;Ljava/lang/Double;)Ljava/lang/Double;[deprecated]
-#getBigDecimalValue(Lorg/jooq/Field;)Ljava/math/BigDecimal;[deprecated]
-#getBigDecimalValue(Lorg/jooq/Field;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
-#getTimestampValue(Lorg/jooq/Field;)Ljava/sql/Timestamp;[deprecated]
-#getTimestampValue(Lorg/jooq/Field;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
-#getDateValue(Lorg/jooq/Field;)Ljava/sql/Date;[deprecated]
-#getDateValue(Lorg/jooq/Field;Ljava/sql/Date;)Ljava/sql/Date;[deprecated]
-#getTimeValue(Lorg/jooq/Field;)Ljava/sql/Time;[deprecated]
-#getTimeValue(Lorg/jooq/Field;Ljava/sql/Time;)Ljava/sql/Time;[deprecated]
@1.6.4
+#getValue(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Lorg/jooq/Field;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#into(Ljava/lang/Class;)Ljava/lang/Object;
-#hasChangedValues()Z[deprecated]
@2.0.0-RC1
+#into(Lorg/jooq/Table;)Lorg/jooq/TableRecord;
+#from(Ljava/lang/Object;)V
@2.0.1
+#into(Lorg/jooq/Table;)Lorg/jooq/Record;
-#into(Lorg/jooq/Table;)Lorg/jooq/TableRecord;
@2.0.2
+#intoArray()[Ljava/lang/Object;
@2.1.0
+#getValue(Lorg/jooq/Field;Lorg/jooq/Converter;)Ljava/lang/Object;
+#getValue(Lorg/jooq/Field;Lorg/jooq/Converter;Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(ILorg/jooq/Converter;)Ljava/lang/Object;
+#getValue(ILorg/jooq/Converter;Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Ljava/lang/String;Lorg/jooq/Converter;)Ljava/lang/Object;
+#getValue(Ljava/lang/String;Lorg/jooq/Converter;Ljava/lang/Object;)Ljava/lang/Object;
+#setValue(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)V
@2.5.0
+#intoMap()Ljava/util/Map;
+#into(Ljava/lang/Object;)Ljava/lang/Object;
@2.6.0
+#getValue(I)Ljava/lang/Object;
+#getValue(ILjava/lang/Object;)Ljava/lang/Object;
+#getValue(ILjava/lang/Class;)Ljava/lang/Object;
+#getValue(ILjava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
*#getValueAsArray(Lorg/jooq/Field;)[Ljava/lang/Object;[deprecated]
*#getValueAsArray(Lorg/jooq/Field;[Ljava/lang/Object;)[Ljava/lang/Object;[deprecated]
*#getValueAsString(Lorg/jooq/Field;)Ljava/lang/String;[deprecated]
*#getValueAsString(Lorg/jooq/Field;Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#getValueAsString(Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#getValueAsString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#getValueAsByte(Lorg/jooq/Field;)Ljava/lang/Byte;[deprecated]
*#getValueAsByte(Lorg/jooq/Field;Ljava/lang/Byte;)Ljava/lang/Byte;[deprecated]
*#getValueAsByte(Ljava/lang/String;)Ljava/lang/Byte;[deprecated]
*#getValueAsByte(Ljava/lang/String;Ljava/lang/Byte;)Ljava/lang/Byte;[deprecated]
*#getValueAsShort(Lorg/jooq/Field;)Ljava/lang/Short;[deprecated]
*#getValueAsShort(Lorg/jooq/Field;Ljava/lang/Short;)Ljava/lang/Short;[deprecated]
*#getValueAsShort(Ljava/lang/String;)Ljava/lang/Short;[deprecated]
*#getValueAsShort(Ljava/lang/String;Ljava/lang/Short;)Ljava/lang/Short;[deprecated]
*#getValueAsInteger(Lorg/jooq/Field;)Ljava/lang/Integer;[deprecated]
*#getValueAsInteger(Lorg/jooq/Field;Ljava/lang/Integer;)Ljava/lang/Integer;[deprecated]
*#getValueAsInteger(Ljava/lang/String;)Ljava/lang/Integer;[deprecated]
*#getValueAsInteger(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;[deprecated]
*#getValueAsLong(Lorg/jooq/Field;)Ljava/lang/Long;[deprecated]
*#getValueAsLong(Lorg/jooq/Field;Ljava/lang/Long;)Ljava/lang/Long;[deprecated]
*#getValueAsLong(Ljava/lang/String;)Ljava/lang/Long;[deprecated]
*#getValueAsLong(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;[deprecated]
*#getValueAsBigInteger(Lorg/jooq/Field;)Ljava/math/BigInteger;[deprecated]
*#getValueAsBigInteger(Lorg/jooq/Field;Ljava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
*#getValueAsBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;[deprecated]
*#getValueAsBigInteger(Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
*#getValueAsFloat(Lorg/jooq/Field;)Ljava/lang/Float;[deprecated]
*#getValueAsFloat(Lorg/jooq/Field;Ljava/lang/Float;)Ljava/lang/Float;[deprecated]
*#getValueAsFloat(Ljava/lang/String;)Ljava/lang/Float;[deprecated]
*#getValueAsFloat(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;[deprecated]
*#getValueAsDouble(Lorg/jooq/Field;)Ljava/lang/Double;[deprecated]
*#getValueAsDouble(Lorg/jooq/Field;Ljava/lang/Double;)Ljava/lang/Double;[deprecated]
*#getValueAsDouble(Ljava/lang/String;)Ljava/lang/Double;[deprecated]
*#getValueAsDouble(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;[deprecated]
*#getValueAsBigDecimal(Lorg/jooq/Field;)Ljava/math/BigDecimal;[deprecated]
*#getValueAsBigDecimal(Lorg/jooq/Field;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
*#getValueAsBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;[deprecated]
*#getValueAsBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
*#getValueAsBoolean(Lorg/jooq/Field;)Ljava/lang/Boolean;[deprecated]
*#getValueAsBoolean(Lorg/jooq/Field;Ljava/lang/Boolean;)Ljava/lang/Boolean;[deprecated]
*#getValueAsBoolean(Ljava/lang/String;)Ljava/lang/Boolean;[deprecated]
*#getValueAsBoolean(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;[deprecated]
*#getValueAsTimestamp(Lorg/jooq/Field;)Ljava/sql/Timestamp;[deprecated]
*#getValueAsTimestamp(Lorg/jooq/Field;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
*#getValueAsTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;[deprecated]
*#getValueAsTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
*#getValueAsDate(Lorg/jooq/Field;)Ljava/sql/Date;[deprecated]
*#getValueAsDate(Lorg/jooq/Field;Ljava/sql/Date;)Ljava/sql/Date;[deprecated]
*#getValueAsDate(Ljava/lang/String;)Ljava/sql/Date;[deprecated]
*#getValueAsDate(Ljava/lang/String;Ljava/sql/Date;)Ljava/sql/Date;[deprecated]
*#getValueAsTime(Lorg/jooq/Field;)Ljava/sql/Time;[deprecated]
*#getValueAsTime(Lorg/jooq/Field;Ljava/sql/Time;)Ljava/sql/Time;[deprecated]
*#getValueAsTime(Ljava/lang/String;)Ljava/sql/Time;[deprecated]
*#getValueAsTime(Ljava/lang/String;Ljava/sql/Time;)Ljava/sql/Time;[deprecated]
+#size()I
+#original()Lorg/jooq/Record;
+#changed()Z
+#map(Lorg/jooq/RecordMapper;)Ljava/lang/Object;
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row;
+#field(Lorg/jooq/Field;)Lorg/jooq/Field;
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(I)Lorg/jooq/Field;
+#fields()[Lorg/jooq/Field;
+#valuesRow()Lorg/jooq/Row;
+#original(Lorg/jooq/Field;)Ljava/lang/Object;
+#original(I)Ljava/lang/Object;
+#original(Ljava/lang/String;)Ljava/lang/Object;
+#changed(Lorg/jooq/Field;)Z
+#changed(I)Z
+#changed(Ljava/lang/String;)Z
+#changed(Z)V
+#changed(Lorg/jooq/Field;Z)V
+#changed(IZ)V
+#changed(Ljava/lang/String;Z)V
+#reset()V
+#reset(Lorg/jooq/Field;)V
+#reset(I)V
+#reset(Ljava/lang/String;)V
+#intoResultSet()Ljava/sql/ResultSet;
+#fromMap(Ljava/util/Map;)V
+#fromArray([Ljava/lang/Object;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/jooq/Record;)I
-#getValueAsArray(Lorg/jooq/Field;)[Ljava/lang/Object;[deprecated]
-#getValueAsArray(Lorg/jooq/Field;[Ljava/lang/Object;)[Ljava/lang/Object;[deprecated]
-#getValueAsString(Lorg/jooq/Field;)Ljava/lang/String;[deprecated]
-#getValueAsString(Lorg/jooq/Field;Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#getValueAsString(Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#getValueAsString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#getValueAsByte(Lorg/jooq/Field;)Ljava/lang/Byte;[deprecated]
-#getValueAsByte(Lorg/jooq/Field;Ljava/lang/Byte;)Ljava/lang/Byte;[deprecated]
-#getValueAsByte(Ljava/lang/String;)Ljava/lang/Byte;[deprecated]
-#getValueAsByte(Ljava/lang/String;Ljava/lang/Byte;)Ljava/lang/Byte;[deprecated]
-#getValueAsShort(Lorg/jooq/Field;)Ljava/lang/Short;[deprecated]
-#getValueAsShort(Lorg/jooq/Field;Ljava/lang/Short;)Ljava/lang/Short;[deprecated]
-#getValueAsShort(Ljava/lang/String;)Ljava/lang/Short;[deprecated]
-#getValueAsShort(Ljava/lang/String;Ljava/lang/Short;)Ljava/lang/Short;[deprecated]
-#getValueAsInteger(Lorg/jooq/Field;)Ljava/lang/Integer;[deprecated]
-#getValueAsInteger(Lorg/jooq/Field;Ljava/lang/Integer;)Ljava/lang/Integer;[deprecated]
-#getValueAsInteger(Ljava/lang/String;)Ljava/lang/Integer;[deprecated]
-#getValueAsInteger(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;[deprecated]
-#getValueAsLong(Lorg/jooq/Field;)Ljava/lang/Long;[deprecated]
-#getValueAsLong(Lorg/jooq/Field;Ljava/lang/Long;)Ljava/lang/Long;[deprecated]
-#getValueAsLong(Ljava/lang/String;)Ljava/lang/Long;[deprecated]
-#getValueAsLong(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;[deprecated]
-#getValueAsBigInteger(Lorg/jooq/Field;)Ljava/math/BigInteger;[deprecated]
-#getValueAsBigInteger(Lorg/jooq/Field;Ljava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
-#getValueAsBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;[deprecated]
-#getValueAsBigInteger(Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
-#getValueAsFloat(Lorg/jooq/Field;)Ljava/lang/Float;[deprecated]
-#getValueAsFloat(Lorg/jooq/Field;Ljava/lang/Float;)Ljava/lang/Float;[deprecated]
-#getValueAsFloat(Ljava/lang/String;)Ljava/lang/Float;[deprecated]
-#getValueAsFloat(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;[deprecated]
-#getValueAsDouble(Lorg/jooq/Field;)Ljava/lang/Double;[deprecated]
-#getValueAsDouble(Lorg/jooq/Field;Ljava/lang/Double;)Ljava/lang/Double;[deprecated]
-#getValueAsDouble(Ljava/lang/String;)Ljava/lang/Double;[deprecated]
-#getValueAsDouble(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;[deprecated]
-#getValueAsBigDecimal(Lorg/jooq/Field;)Ljava/math/BigDecimal;[deprecated]
-#getValueAsBigDecimal(Lorg/jooq/Field;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
-#getValueAsBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;[deprecated]
-#getValueAsBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
-#getValueAsBoolean(Lorg/jooq/Field;)Ljava/lang/Boolean;[deprecated]
-#getValueAsBoolean(Lorg/jooq/Field;Ljava/lang/Boolean;)Ljava/lang/Boolean;[deprecated]
-#getValueAsBoolean(Ljava/lang/String;)Ljava/lang/Boolean;[deprecated]
-#getValueAsBoolean(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;[deprecated]
-#getValueAsTimestamp(Lorg/jooq/Field;)Ljava/sql/Timestamp;[deprecated]
-#getValueAsTimestamp(Lorg/jooq/Field;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
-#getValueAsTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;[deprecated]
-#getValueAsTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
-#getValueAsDate(Lorg/jooq/Field;)Ljava/sql/Date;[deprecated]
-#getValueAsDate(Lorg/jooq/Field;Ljava/sql/Date;)Ljava/sql/Date;[deprecated]
-#getValueAsDate(Ljava/lang/String;)Ljava/sql/Date;[deprecated]
-#getValueAsDate(Ljava/lang/String;Ljava/sql/Date;)Ljava/sql/Date;[deprecated]
-#getValueAsTime(Lorg/jooq/Field;)Ljava/sql/Time;[deprecated]
-#getValueAsTime(Lorg/jooq/Field;Ljava/sql/Time;)Ljava/sql/Time;[deprecated]
-#getValueAsTime(Ljava/lang/String;)Ljava/sql/Time;[deprecated]
-#getValueAsTime(Ljava/lang/String;Ljava/sql/Time;)Ljava/sql/Time;[deprecated]
@3.1.0
+#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
+#fields([Ljava/lang/String;)[Lorg/jooq/Field;
+#fields([I)[Lorg/jooq/Field;
+#from(Ljava/lang/Object;[Lorg/jooq/Field;)V
+#from(Ljava/lang/Object;[Ljava/lang/String;)V
+#from(Ljava/lang/Object;[I)V
+#fromMap(Ljava/util/Map;[Lorg/jooq/Field;)V
+#fromMap(Ljava/util/Map;[Ljava/lang/String;)V
+#fromMap(Ljava/util/Map;[I)V
+#fromArray([Ljava/lang/Object;[Lorg/jooq/Field;)V
+#fromArray([Ljava/lang/Object;[Ljava/lang/String;)V
+#fromArray([Ljava/lang/Object;[I)V
@3.3.0
*#getValue(Lorg/jooq/Field;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#getValue(Lorg/jooq/Field;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#getValue(Lorg/jooq/Field;Lorg/jooq/Converter;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#getValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#getValue(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#getValue(Ljava/lang/String;Lorg/jooq/Converter;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#getValue(ILjava/lang/Object;)Ljava/lang/Object;[deprecated]
*#getValue(ILjava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#getValue(ILorg/jooq/Converter;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
@3.5.0
+#intoList()Ljava/util/List;
+#into([Lorg/jooq/Field;)Lorg/jooq/Record;
+#into(Lorg/jooq/Field;)Lorg/jooq/Record1;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record2;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record3;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record4;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record5;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record6;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record7;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record8;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record9;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record10;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record11;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record12;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record13;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record14;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record15;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record16;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record17;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record18;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record19;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record20;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record21;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record22;
@3.7.0
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
+#getValue(Lorg/jooq/Name;)Ljava/lang/Object;
+#getValue(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Lorg/jooq/Name;Lorg/jooq/Converter;)Ljava/lang/Object;
+#original(Lorg/jooq/Name;)Ljava/lang/Object;
+#changed(Lorg/jooq/Name;)Z
+#changed(Lorg/jooq/Name;Z)V
+#reset(Lorg/jooq/Name;)V
+#from(Ljava/lang/Object;[Lorg/jooq/Name;)V
+#fromMap(Ljava/util/Map;[Lorg/jooq/Name;)V
+#fromArray([Ljava/lang/Object;[Lorg/jooq/Name;)V
+#compareTo(Ljava/lang/Object;)I
@3.8.0
+#get(Lorg/jooq/Field;)Ljava/lang/Object;
+#get(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/lang/Object;
+#get(Lorg/jooq/Field;Lorg/jooq/Converter;)Ljava/lang/Object;
+#get(Ljava/lang/String;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#get(Ljava/lang/String;Lorg/jooq/Converter;)Ljava/lang/Object;
+#get(Lorg/jooq/Name;)Ljava/lang/Object;
+#get(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/lang/Object;
+#get(Lorg/jooq/Name;Lorg/jooq/Converter;)Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#get(ILjava/lang/Class;)Ljava/lang/Object;
+#get(ILorg/jooq/Converter;)Ljava/lang/Object;
+#set(Lorg/jooq/Field;Ljava/lang/Object;)V
+#set(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)V
@3.9.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#intoStream()Ljava/util/stream/Stream;
@3.10.0
+#formatJSON()Ljava/lang/String;
+#formatJSON(Lorg/jooq/JSONFormat;)Ljava/lang/String;
+#formatJSON(Ljava/io/OutputStream;)V
+#formatJSON(Ljava/io/OutputStream;Lorg/jooq/JSONFormat;)V
+#formatJSON(Ljava/io/Writer;)V
+#formatJSON(Ljava/io/Writer;Lorg/jooq/JSONFormat;)V
+#formatXML()Ljava/lang/String;
+#formatXML(Lorg/jooq/XMLFormat;)Ljava/lang/String;
+#formatXML(Ljava/io/OutputStream;)V
+#formatXML(Ljava/io/OutputStream;Lorg/jooq/XMLFormat;)V
+#formatXML(Ljava/io/Writer;)V
+#formatXML(Ljava/io/Writer;Lorg/jooq/XMLFormat;)V
@3.11.0
+#format()Ljava/lang/String;
+#format(Lorg/jooq/TXTFormat;)Ljava/lang/String;
+#format(Ljava/io/OutputStream;)V
+#format(Ljava/io/OutputStream;Lorg/jooq/TXTFormat;)V
+#format(Ljava/io/Writer;)V
+#format(Ljava/io/Writer;Lorg/jooq/TXTFormat;)V
@3.12.0
+#indexOf(Lorg/jooq/Field;)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Lorg/jooq/Name;)I
-#format()Ljava/lang/String;
-#format(Lorg/jooq/TXTFormat;)Ljava/lang/String;
-#format(Ljava/io/OutputStream;)V
-#format(Ljava/io/OutputStream;Lorg/jooq/TXTFormat;)V
-#format(Ljava/io/Writer;)V
-#format(Ljava/io/Writer;Lorg/jooq/TXTFormat;)V
-#formatJSON()Ljava/lang/String;
-#formatJSON(Lorg/jooq/JSONFormat;)Ljava/lang/String;
-#formatJSON(Ljava/io/OutputStream;)V
-#formatJSON(Ljava/io/OutputStream;Lorg/jooq/JSONFormat;)V
-#formatJSON(Ljava/io/Writer;)V
-#formatJSON(Ljava/io/Writer;Lorg/jooq/JSONFormat;)V
-#formatXML()Ljava/lang/String;
-#formatXML(Lorg/jooq/XMLFormat;)Ljava/lang/String;
-#formatXML(Ljava/io/OutputStream;)V
-#formatXML(Ljava/io/OutputStream;Lorg/jooq/XMLFormat;)V
-#formatXML(Ljava/io/Writer;)V
-#formatXML(Ljava/io/Writer;Lorg/jooq/XMLFormat;)V
@3.15.0
-#fieldsRow()Lorg/jooq/Row;
-#field(Lorg/jooq/Field;)Lorg/jooq/Field;
-#field(Ljava/lang/String;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;)Lorg/jooq/Field;
-#field(I)Lorg/jooq/Field;
-#fields()[Lorg/jooq/Field;
-#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
-#fields([Ljava/lang/String;)[Lorg/jooq/Field;
-#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
-#fields([I)[Lorg/jooq/Field;
-#indexOf(Lorg/jooq/Field;)I
-#indexOf(Ljava/lang/String;)I
-#indexOf(Lorg/jooq/Name;)I
-#getValue(Lorg/jooq/Field;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
-#getValue(Lorg/jooq/Field;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
-#getValue(Lorg/jooq/Field;Lorg/jooq/Converter;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
-#getValue(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
-#getValue(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
-#getValue(Ljava/lang/String;Lorg/jooq/Converter;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
-#getValue(ILjava/lang/Object;)Ljava/lang/Object;[deprecated]
-#getValue(ILjava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
-#getValue(ILorg/jooq/Converter;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]

+###org/jooq/Record1
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row1;
+#valuesRow()Lorg/jooq/Row1;
+#field1()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record1;
+#values(Ljava/lang/Object;)Lorg/jooq/Record1;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record1;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record1;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record10
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row10;
+#valuesRow()Lorg/jooq/Row10;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record10;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record10;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record10;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record10;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record10;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record10;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record10;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record10;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record10;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record10;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record10;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record10;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record10;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record11
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row11;
+#valuesRow()Lorg/jooq/Row11;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record11;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record11;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record11;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record11;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record11;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record11;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record11;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record11;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record11;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record11;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record11;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record11;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record11;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record11;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record12
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row12;
+#valuesRow()Lorg/jooq/Row12;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record12;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record12;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record12;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record12;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record12;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record13
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row13;
+#valuesRow()Lorg/jooq/Row13;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
+#value13()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record13;
+#value13(Ljava/lang/Object;)Lorg/jooq/Record13;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record13;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
+#component13()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record13;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record13;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record14
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row14;
+#valuesRow()Lorg/jooq/Row14;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
+#value13()Ljava/lang/Object;
+#value14()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value13(Ljava/lang/Object;)Lorg/jooq/Record14;
+#value14(Ljava/lang/Object;)Lorg/jooq/Record14;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record14;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
+#component13()Ljava/lang/Object;
+#component14()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record14;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record14;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record15
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row15;
+#valuesRow()Lorg/jooq/Row15;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
+#value13()Ljava/lang/Object;
+#value14()Ljava/lang/Object;
+#value15()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value13(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value14(Ljava/lang/Object;)Lorg/jooq/Record15;
+#value15(Ljava/lang/Object;)Lorg/jooq/Record15;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record15;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
+#component13()Ljava/lang/Object;
+#component14()Ljava/lang/Object;
+#component15()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record15;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record15;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record16
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row16;
+#valuesRow()Lorg/jooq/Row16;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
+#value13()Ljava/lang/Object;
+#value14()Ljava/lang/Object;
+#value15()Ljava/lang/Object;
+#value16()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value13(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value14(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value15(Ljava/lang/Object;)Lorg/jooq/Record16;
+#value16(Ljava/lang/Object;)Lorg/jooq/Record16;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record16;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
+#component13()Ljava/lang/Object;
+#component14()Ljava/lang/Object;
+#component15()Ljava/lang/Object;
+#component16()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record16;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record16;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record17
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row17;
+#valuesRow()Lorg/jooq/Row17;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
+#value13()Ljava/lang/Object;
+#value14()Ljava/lang/Object;
+#value15()Ljava/lang/Object;
+#value16()Ljava/lang/Object;
+#value17()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value13(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value14(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value15(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value16(Ljava/lang/Object;)Lorg/jooq/Record17;
+#value17(Ljava/lang/Object;)Lorg/jooq/Record17;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record17;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
+#component13()Ljava/lang/Object;
+#component14()Ljava/lang/Object;
+#component15()Ljava/lang/Object;
+#component16()Ljava/lang/Object;
+#component17()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record17;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record17;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record18
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row18;
+#valuesRow()Lorg/jooq/Row18;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#field18()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
+#value13()Ljava/lang/Object;
+#value14()Ljava/lang/Object;
+#value15()Ljava/lang/Object;
+#value16()Ljava/lang/Object;
+#value17()Ljava/lang/Object;
+#value18()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value13(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value14(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value15(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value16(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value17(Ljava/lang/Object;)Lorg/jooq/Record18;
+#value18(Ljava/lang/Object;)Lorg/jooq/Record18;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record18;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
+#component13()Ljava/lang/Object;
+#component14()Ljava/lang/Object;
+#component15()Ljava/lang/Object;
+#component16()Ljava/lang/Object;
+#component17()Ljava/lang/Object;
+#component18()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record18;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record18;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record19
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row19;
+#valuesRow()Lorg/jooq/Row19;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#field18()Lorg/jooq/Field;
+#field19()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
+#value13()Ljava/lang/Object;
+#value14()Ljava/lang/Object;
+#value15()Ljava/lang/Object;
+#value16()Ljava/lang/Object;
+#value17()Ljava/lang/Object;
+#value18()Ljava/lang/Object;
+#value19()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value13(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value14(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value15(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value16(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value17(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value18(Ljava/lang/Object;)Lorg/jooq/Record19;
+#value19(Ljava/lang/Object;)Lorg/jooq/Record19;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record19;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
+#component13()Ljava/lang/Object;
+#component14()Ljava/lang/Object;
+#component15()Ljava/lang/Object;
+#component16()Ljava/lang/Object;
+#component17()Ljava/lang/Object;
+#component18()Ljava/lang/Object;
+#component19()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record19;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record19;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record2
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row2;
+#valuesRow()Lorg/jooq/Row2;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record2;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record2;
+#values(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record2;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record2;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record2;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record20
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row20;
+#valuesRow()Lorg/jooq/Row20;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#field18()Lorg/jooq/Field;
+#field19()Lorg/jooq/Field;
+#field20()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
+#value13()Ljava/lang/Object;
+#value14()Ljava/lang/Object;
+#value15()Ljava/lang/Object;
+#value16()Ljava/lang/Object;
+#value17()Ljava/lang/Object;
+#value18()Ljava/lang/Object;
+#value19()Ljava/lang/Object;
+#value20()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value13(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value14(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value15(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value16(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value17(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value18(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value19(Ljava/lang/Object;)Lorg/jooq/Record20;
+#value20(Ljava/lang/Object;)Lorg/jooq/Record20;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record20;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
+#component13()Ljava/lang/Object;
+#component14()Ljava/lang/Object;
+#component15()Ljava/lang/Object;
+#component16()Ljava/lang/Object;
+#component17()Ljava/lang/Object;
+#component18()Ljava/lang/Object;
+#component19()Ljava/lang/Object;
+#component20()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record20;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record20;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record21
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row21;
+#valuesRow()Lorg/jooq/Row21;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#field18()Lorg/jooq/Field;
+#field19()Lorg/jooq/Field;
+#field20()Lorg/jooq/Field;
+#field21()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
+#value13()Ljava/lang/Object;
+#value14()Ljava/lang/Object;
+#value15()Ljava/lang/Object;
+#value16()Ljava/lang/Object;
+#value17()Ljava/lang/Object;
+#value18()Ljava/lang/Object;
+#value19()Ljava/lang/Object;
+#value20()Ljava/lang/Object;
+#value21()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value13(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value14(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value15(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value16(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value17(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value18(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value19(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value20(Ljava/lang/Object;)Lorg/jooq/Record21;
+#value21(Ljava/lang/Object;)Lorg/jooq/Record21;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record21;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
+#component13()Ljava/lang/Object;
+#component14()Ljava/lang/Object;
+#component15()Ljava/lang/Object;
+#component16()Ljava/lang/Object;
+#component17()Ljava/lang/Object;
+#component18()Ljava/lang/Object;
+#component19()Ljava/lang/Object;
+#component20()Ljava/lang/Object;
+#component21()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record21;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record21;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record22
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row22;
+#valuesRow()Lorg/jooq/Row22;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#field18()Lorg/jooq/Field;
+#field19()Lorg/jooq/Field;
+#field20()Lorg/jooq/Field;
+#field21()Lorg/jooq/Field;
+#field22()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
+#value10()Ljava/lang/Object;
+#value11()Ljava/lang/Object;
+#value12()Ljava/lang/Object;
+#value13()Ljava/lang/Object;
+#value14()Ljava/lang/Object;
+#value15()Ljava/lang/Object;
+#value16()Ljava/lang/Object;
+#value17()Ljava/lang/Object;
+#value18()Ljava/lang/Object;
+#value19()Ljava/lang/Object;
+#value20()Ljava/lang/Object;
+#value21()Ljava/lang/Object;
+#value22()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value10(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value11(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value12(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value13(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value14(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value15(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value16(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value17(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value18(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value19(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value20(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value21(Ljava/lang/Object;)Lorg/jooq/Record22;
+#value22(Ljava/lang/Object;)Lorg/jooq/Record22;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record22;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
+#component10()Ljava/lang/Object;
+#component11()Ljava/lang/Object;
+#component12()Ljava/lang/Object;
+#component13()Ljava/lang/Object;
+#component14()Ljava/lang/Object;
+#component15()Ljava/lang/Object;
+#component16()Ljava/lang/Object;
+#component17()Ljava/lang/Object;
+#component18()Ljava/lang/Object;
+#component19()Ljava/lang/Object;
+#component20()Ljava/lang/Object;
+#component21()Ljava/lang/Object;
+#component22()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record22;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record22;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record3
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row3;
+#valuesRow()Lorg/jooq/Row3;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record3;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record3;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record3;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record3;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record3;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record3;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record4
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row4;
+#valuesRow()Lorg/jooq/Row4;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record4;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record4;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record4;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record4;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record4;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record4;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record4;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record5
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row5;
+#valuesRow()Lorg/jooq/Row5;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record5;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record5;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record5;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record5;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record5;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record5;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record5;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record5;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record6
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row6;
+#valuesRow()Lorg/jooq/Row6;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record6;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record6;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record6;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record6;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record6;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record6;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record6;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record6;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record6;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record7
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row7;
+#valuesRow()Lorg/jooq/Row7;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record7;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record7;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record7;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record7;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record7;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record7;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record7;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record7;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record7;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record7;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record8
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row8;
+#valuesRow()Lorg/jooq/Row8;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record8;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record8;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record8;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record8;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record8;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record8;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record8;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record8;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record8;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record8;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record8;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Record9
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row9;
+#valuesRow()Lorg/jooq/Row9;
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#value1()Ljava/lang/Object;
+#value2()Ljava/lang/Object;
+#value3()Ljava/lang/Object;
+#value4()Ljava/lang/Object;
+#value5()Ljava/lang/Object;
+#value6()Ljava/lang/Object;
+#value7()Ljava/lang/Object;
+#value8()Ljava/lang/Object;
+#value9()Ljava/lang/Object;
@3.3.0
+#value1(Ljava/lang/Object;)Lorg/jooq/Record9;
+#value2(Ljava/lang/Object;)Lorg/jooq/Record9;
+#value3(Ljava/lang/Object;)Lorg/jooq/Record9;
+#value4(Ljava/lang/Object;)Lorg/jooq/Record9;
+#value5(Ljava/lang/Object;)Lorg/jooq/Record9;
+#value6(Ljava/lang/Object;)Lorg/jooq/Record9;
+#value7(Ljava/lang/Object;)Lorg/jooq/Record9;
+#value8(Ljava/lang/Object;)Lorg/jooq/Record9;
+#value9(Ljava/lang/Object;)Lorg/jooq/Record9;
+#values(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Record9;
@3.7.0
+#valuesRow()Lorg/jooq/Row;
+#fieldsRow()Lorg/jooq/Row;
@3.10.0
+#component1()Ljava/lang/Object;
+#component2()Ljava/lang/Object;
+#component3()Ljava/lang/Object;
+#component4()Ljava/lang/Object;
+#component5()Ljava/lang/Object;
+#component6()Ljava/lang/Object;
+#component7()Ljava/lang/Object;
+#component8()Ljava/lang/Object;
+#component9()Ljava/lang/Object;
@3.14.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record9;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record9;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/RecordHandler
@1.6.4
+#next(Lorg/jooq/Record;)V
@3.15.0
+#accept(Lorg/jooq/Record;)V
+#accept(Ljava/lang/Object;)V

+###org/jooq/RecordMapper
@2.6.0
+#map(Lorg/jooq/Record;)Ljava/lang/Object;
@3.15.0
+#apply(Lorg/jooq/Record;)Ljava/lang/Object;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/RenderContext$CastMode
@2.0.4
+#values()[Lorg/jooq/RenderContext$CastMode;
+#valueOf(Ljava/lang/String;)Lorg/jooq/RenderContext$CastMode;

+###org/jooq/RenderContext
@1.6.4
+#peekAlias()Ljava/lang/String;
+#nextAlias()Ljava/lang/String;
+#render()Ljava/lang/String;
+#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#sql(Ljava/lang/String;)Lorg/jooq/RenderContext;
+#sql(C)Lorg/jooq/RenderContext;
+#sql(I)Lorg/jooq/RenderContext;
+#sql(Lorg/jooq/QueryPart;)Lorg/jooq/RenderContext;
+#literal(Ljava/lang/String;)Lorg/jooq/RenderContext;
+#inline()Z
+#inline(Z)Lorg/jooq/RenderContext;
@2.0.1
+#namedParams()Z
+#namedParams(Z)Lorg/jooq/RenderContext;
@2.0.4
+#castMode()Lorg/jooq/RenderContext$CastMode;
+#castMode(Lorg/jooq/RenderContext$CastMode;)Lorg/jooq/RenderContext;
+#cast()Ljava/lang/Boolean;
+#castModeSome([Lorg/jooq/SQLDialect;)Lorg/jooq/RenderContext;
@2.1.0
+#keyword(Ljava/lang/String;)Lorg/jooq/RenderContext;
+#formatNewLine()Lorg/jooq/RenderContext;
+#formatSeparator()Lorg/jooq/RenderContext;
+#formatIndentStart()Lorg/jooq/RenderContext;
+#formatIndentStart(I)Lorg/jooq/RenderContext;
+#formatIndentLockStart()Lorg/jooq/RenderContext;
+#formatIndentEnd()Lorg/jooq/RenderContext;
+#formatIndentEnd(I)Lorg/jooq/RenderContext;
+#formatIndentLockEnd()Lorg/jooq/RenderContext;
@2.3.0
+#qualify()Z
+#qualify(Z)Lorg/jooq/RenderContext;
@2.6.0
+#formatNewLineAfterPrintMargin()Lorg/jooq/RenderContext;
+#formatPrintMargin(I)Lorg/jooq/RenderContext;
@3.0.0-RC1
+#format(Z)Lorg/jooq/RenderContext;
+#format()Z
@3.1.0
+#sql(Ljava/lang/String;Z)Lorg/jooq/RenderContext;
*#inline()Z[deprecated]
*#inline(Z)Lorg/jooq/RenderContext;[deprecated]
*#namedParams()Z[deprecated]
*#namedParams(Z)Lorg/jooq/RenderContext;[deprecated]
+#paramType()Lorg/jooq/conf/ParamType;
+#paramType(Lorg/jooq/conf/ParamType;)Lorg/jooq/RenderContext;
@3.2.0-alpha-01
*#sql(Lorg/jooq/QueryPart;)Lorg/jooq/RenderContext;[deprecated]
@3.5.0
*#cast()Ljava/lang/Boolean;[deprecated]
*#castModeSome([Lorg/jooq/SQLDialect;)Lorg/jooq/RenderContext;[deprecated]
@3.7.0
+#castModeSome([Lorg/jooq/SQLDialect;)Lorg/jooq/Context;[deprecated]
+#castMode(Lorg/jooq/RenderContext$CastMode;)Lorg/jooq/Context;
+#paramType(Lorg/jooq/conf/ParamType;)Lorg/jooq/Context;
+#qualify(Z)Lorg/jooq/Context;
+#literal(Ljava/lang/String;)Lorg/jooq/Context;
+#formatPrintMargin(I)Lorg/jooq/Context;
+#formatIndentLockEnd()Lorg/jooq/Context;
+#formatIndentEnd(I)Lorg/jooq/Context;
+#formatIndentEnd()Lorg/jooq/Context;
+#formatIndentLockStart()Lorg/jooq/Context;
+#formatIndentStart(I)Lorg/jooq/Context;
+#formatIndentStart()Lorg/jooq/Context;
+#formatSeparator()Lorg/jooq/Context;
+#formatNewLineAfterPrintMargin()Lorg/jooq/Context;
+#formatNewLine()Lorg/jooq/Context;
+#format(Z)Lorg/jooq/Context;
+#sql(I)Lorg/jooq/Context;
+#sql(C)Lorg/jooq/Context;
+#sql(Ljava/lang/String;Z)Lorg/jooq/Context;
+#sql(Ljava/lang/String;)Lorg/jooq/Context;
+#keyword(Ljava/lang/String;)Lorg/jooq/Context;
@3.12.0
+#sql(J)Lorg/jooq/RenderContext;
+#sql(F)Lorg/jooq/RenderContext;
+#sql(D)Lorg/jooq/RenderContext;
+#sql(D)Lorg/jooq/Context;
+#sql(F)Lorg/jooq/Context;
+#sql(J)Lorg/jooq/Context;
@3.14.0
-#peekAlias()Ljava/lang/String;
-#nextAlias()Ljava/lang/String;
-#render()Ljava/lang/String;
-#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
-#keyword(Ljava/lang/String;)Lorg/jooq/RenderContext;
-#sql(Ljava/lang/String;)Lorg/jooq/RenderContext;
-#sql(Ljava/lang/String;Z)Lorg/jooq/RenderContext;
-#sql(C)Lorg/jooq/RenderContext;
-#sql(I)Lorg/jooq/RenderContext;
-#sql(J)Lorg/jooq/RenderContext;
-#sql(F)Lorg/jooq/RenderContext;
-#sql(D)Lorg/jooq/RenderContext;
-#format(Z)Lorg/jooq/RenderContext;
-#format()Z
-#formatNewLine()Lorg/jooq/RenderContext;
-#formatNewLineAfterPrintMargin()Lorg/jooq/RenderContext;
-#formatSeparator()Lorg/jooq/RenderContext;
-#formatIndentStart()Lorg/jooq/RenderContext;
-#formatIndentStart(I)Lorg/jooq/RenderContext;
-#formatIndentLockStart()Lorg/jooq/RenderContext;
-#formatIndentEnd()Lorg/jooq/RenderContext;
-#formatIndentEnd(I)Lorg/jooq/RenderContext;
-#formatIndentLockEnd()Lorg/jooq/RenderContext;
-#formatPrintMargin(I)Lorg/jooq/RenderContext;
-#literal(Ljava/lang/String;)Lorg/jooq/RenderContext;
-#qualify()Z
-#qualify(Z)Lorg/jooq/RenderContext;
-#paramType()Lorg/jooq/conf/ParamType;
-#paramType(Lorg/jooq/conf/ParamType;)Lorg/jooq/RenderContext;
-#castMode()Lorg/jooq/RenderContext$CastMode;
-#castMode(Lorg/jooq/RenderContext$CastMode;)Lorg/jooq/RenderContext;
-#cast()Ljava/lang/Boolean;[deprecated]
-#castModeSome([Lorg/jooq/SQLDialect;)Lorg/jooq/RenderContext;[deprecated]
-#castModeSome([Lorg/jooq/SQLDialect;)Lorg/jooq/Context;[deprecated]
-#castMode(Lorg/jooq/RenderContext$CastMode;)Lorg/jooq/Context;
-#paramType(Lorg/jooq/conf/ParamType;)Lorg/jooq/Context;
-#qualify(Z)Lorg/jooq/Context;
-#literal(Ljava/lang/String;)Lorg/jooq/Context;
-#formatPrintMargin(I)Lorg/jooq/Context;
-#formatIndentLockEnd()Lorg/jooq/Context;
-#formatIndentEnd(I)Lorg/jooq/Context;
-#formatIndentEnd()Lorg/jooq/Context;
-#formatIndentLockStart()Lorg/jooq/Context;
-#formatIndentStart(I)Lorg/jooq/Context;
-#formatIndentStart()Lorg/jooq/Context;
-#formatSeparator()Lorg/jooq/Context;
-#formatNewLineAfterPrintMargin()Lorg/jooq/Context;
-#formatNewLine()Lorg/jooq/Context;
-#format(Z)Lorg/jooq/Context;
-#sql(D)Lorg/jooq/Context;
-#sql(F)Lorg/jooq/Context;
-#sql(J)Lorg/jooq/Context;
-#sql(I)Lorg/jooq/Context;
-#sql(C)Lorg/jooq/Context;
-#sql(Ljava/lang/String;Z)Lorg/jooq/Context;
-#sql(Ljava/lang/String;)Lorg/jooq/Context;
-#keyword(Ljava/lang/String;)Lorg/jooq/Context;
@3.15.0
-#sql(Lorg/jooq/QueryPart;)Lorg/jooq/RenderContext;[deprecated]
-#inline()Z[deprecated]
-#inline(Z)Lorg/jooq/RenderContext;[deprecated]
-#namedParams()Z[deprecated]
-#namedParams(Z)Lorg/jooq/RenderContext;[deprecated]

+###org/jooq/Result
@1.5.7
+#getRecords()Ljava/util/List;
+#getRecord(I)Lorg/jooq/Record;
+#getValue(ILorg/jooq/Field;)Ljava/lang/Object;
+#getValue(ILorg/jooq/Field;Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(II)Ljava/lang/Object;
+#getValue(IILjava/lang/Object;)Ljava/lang/Object;
+#getValue(ILjava/lang/String;)Ljava/lang/Object;
+#getValue(ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#getValueAsArray(ILorg/jooq/Field;)[Ljava/lang/Object;
+#getValueAsArray(ILorg/jooq/Field;[Ljava/lang/Object;)[Ljava/lang/Object;
+#getValueAsString(ILorg/jooq/Field;)Ljava/lang/String;
+#getValueAsString(ILorg/jooq/Field;Ljava/lang/String;)Ljava/lang/String;
+#getValueAsString(II)Ljava/lang/String;
+#getValueAsString(IILjava/lang/String;)Ljava/lang/String;
+#getValueAsString(ILjava/lang/String;)Ljava/lang/String;
+#getValueAsString(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getValueAsByte(ILorg/jooq/Field;)Ljava/lang/Byte;
+#getValueAsByte(ILorg/jooq/Field;Ljava/lang/Byte;)Ljava/lang/Byte;
+#getValueAsByte(II)Ljava/lang/Byte;
+#getValueAsByte(IILjava/lang/Byte;)Ljava/lang/Byte;
+#getValueAsByte(ILjava/lang/String;)Ljava/lang/Byte;
+#getValueAsByte(ILjava/lang/String;Ljava/lang/Byte;)Ljava/lang/Byte;
+#getValueAsShort(ILorg/jooq/Field;)Ljava/lang/Short;
+#getValueAsShort(ILorg/jooq/Field;Ljava/lang/Short;)Ljava/lang/Short;
+#getValueAsShort(II)Ljava/lang/Short;
+#getValueAsShort(IILjava/lang/Short;)Ljava/lang/Short;
+#getValueAsShort(ILjava/lang/String;)Ljava/lang/Short;
+#getValueAsShort(ILjava/lang/String;Ljava/lang/Short;)Ljava/lang/Short;
+#getValueAsInteger(ILorg/jooq/Field;)Ljava/lang/Integer;
+#getValueAsInteger(ILorg/jooq/Field;Ljava/lang/Integer;)Ljava/lang/Integer;
+#getValueAsInteger(II)Ljava/lang/Integer;
+#getValueAsInteger(IILjava/lang/Integer;)Ljava/lang/Integer;
+#getValueAsInteger(ILjava/lang/String;)Ljava/lang/Integer;
+#getValueAsInteger(ILjava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
+#getValueAsLong(ILorg/jooq/Field;)Ljava/lang/Long;
+#getValueAsLong(ILorg/jooq/Field;Ljava/lang/Long;)Ljava/lang/Long;
+#getValueAsLong(II)Ljava/lang/Long;
+#getValueAsLong(IILjava/lang/Long;)Ljava/lang/Long;
+#getValueAsLong(ILjava/lang/String;)Ljava/lang/Long;
+#getValueAsLong(ILjava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;
+#getValueAsBigInteger(ILorg/jooq/Field;)Ljava/math/BigInteger;
+#getValueAsBigInteger(ILorg/jooq/Field;Ljava/math/BigInteger;)Ljava/math/BigInteger;
+#getValueAsBigInteger(II)Ljava/math/BigInteger;
+#getValueAsBigInteger(IILjava/math/BigInteger;)Ljava/math/BigInteger;
+#getValueAsBigInteger(ILjava/lang/String;)Ljava/math/BigInteger;
+#getValueAsBigInteger(ILjava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;
+#getValueAsFloat(ILorg/jooq/Field;)Ljava/lang/Float;
+#getValueAsFloat(ILorg/jooq/Field;Ljava/lang/Float;)Ljava/lang/Float;
+#getValueAsFloat(II)Ljava/lang/Float;
+#getValueAsFloat(IILjava/lang/Float;)Ljava/lang/Float;
+#getValueAsFloat(ILjava/lang/String;)Ljava/lang/Float;
+#getValueAsFloat(ILjava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;
+#getValueAsDouble(ILorg/jooq/Field;)Ljava/lang/Double;
+#getValueAsDouble(ILorg/jooq/Field;Ljava/lang/Double;)Ljava/lang/Double;
+#getValueAsDouble(II)Ljava/lang/Double;
+#getValueAsDouble(IILjava/lang/Double;)Ljava/lang/Double;
+#getValueAsDouble(ILjava/lang/String;)Ljava/lang/Double;
+#getValueAsDouble(ILjava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;
+#getValueAsBigDecimal(ILorg/jooq/Field;)Ljava/math/BigDecimal;
+#getValueAsBigDecimal(ILorg/jooq/Field;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#getValueAsBigDecimal(II)Ljava/math/BigDecimal;
+#getValueAsBigDecimal(IILjava/math/BigDecimal;)Ljava/math/BigDecimal;
+#getValueAsBigDecimal(ILjava/lang/String;)Ljava/math/BigDecimal;
+#getValueAsBigDecimal(ILjava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#getValueAsTimestamp(ILorg/jooq/Field;)Ljava/sql/Timestamp;
+#getValueAsTimestamp(ILorg/jooq/Field;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;
+#getValueAsTimestamp(II)Ljava/sql/Timestamp;
+#getValueAsTimestamp(IILjava/sql/Timestamp;)Ljava/sql/Timestamp;
+#getValueAsTimestamp(ILjava/lang/String;)Ljava/sql/Timestamp;
+#getValueAsTimestamp(ILjava/lang/String;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;
+#getValueAsDate(ILorg/jooq/Field;)Ljava/sql/Date;
+#getValueAsDate(ILorg/jooq/Field;Ljava/sql/Date;)Ljava/sql/Date;
+#getValueAsDate(II)Ljava/sql/Date;
+#getValueAsDate(IILjava/sql/Date;)Ljava/sql/Date;
+#getValueAsDate(ILjava/lang/String;)Ljava/sql/Date;
+#getValueAsDate(ILjava/lang/String;Ljava/sql/Date;)Ljava/sql/Date;
+#getValueAsTime(ILorg/jooq/Field;)Ljava/sql/Time;
+#getValueAsTime(ILorg/jooq/Field;Ljava/sql/Time;)Ljava/sql/Time;
+#getValueAsTime(II)Ljava/sql/Time;
+#getValueAsTime(IILjava/sql/Time;)Ljava/sql/Time;
+#getValueAsTime(ILjava/lang/String;)Ljava/sql/Time;
+#getValueAsTime(ILjava/lang/String;Ljava/sql/Time;)Ljava/sql/Time;
+#getValues(Lorg/jooq/Field;)Ljava/util/List;
+#getValues(I)Ljava/util/List;
+#getValues(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsBigDecimal(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsBigDecimal(I)Ljava/util/List;
+#getValuesAsBigDecimal(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsBigInteger(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsBigInteger(I)Ljava/util/List;
+#getValuesAsBigInteger(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsByte(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsByte(I)Ljava/util/List;
+#getValuesAsByte(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsDate(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsDate(I)Ljava/util/List;
+#getValuesAsDate(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsDouble(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsDouble(I)Ljava/util/List;
+#getValuesAsDouble(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsFloat(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsFloat(I)Ljava/util/List;
+#getValuesAsFloat(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsInteger(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsInteger(I)Ljava/util/List;
+#getValuesAsInteger(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsLong(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsLong(I)Ljava/util/List;
+#getValuesAsLong(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsShort(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsShort(I)Ljava/util/List;
+#getValuesAsShort(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsString(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsString(I)Ljava/util/List;
+#getValuesAsString(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsTime(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsTime(I)Ljava/util/List;
+#getValuesAsTime(Ljava/lang/String;)Ljava/util/List;
+#getValuesAsTimestamp(Lorg/jooq/Field;)Ljava/util/List;
+#getValuesAsTimestamp(I)Ljava/util/List;
+#getValuesAsTimestamp(Ljava/lang/String;)Ljava/util/List;
+#getNumberOfRecords()I
@1.5.9
+#getValueAsBoolean(ILorg/jooq/Field;)Ljava/lang/Boolean;
+#getValueAsBoolean(ILorg/jooq/Field;Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#getValueAsBoolean(II)Ljava/lang/Boolean;
+#getValueAsBoolean(IILjava/lang/Boolean;)Ljava/lang/Boolean;
+#getValueAsBoolean(ILjava/lang/String;)Ljava/lang/Boolean;
+#getValueAsBoolean(ILjava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#format()Ljava/lang/String;
+#format(I)Ljava/lang/String;
@1.6.0
+#isEmpty()Z
@1.6.2
*#getRecords()Ljava/util/List;[deprecated]
*#getRecord(I)Lorg/jooq/Record;[deprecated]
*#getNumberOfRecords()I[deprecated]
+#formatHTML()Ljava/lang/String;
+#formatCSV()Ljava/lang/String;
+#formatCSV(C)Ljava/lang/String;
+#formatJSON()Ljava/lang/String;
+#formatXML()Ljava/lang/String;
@1.6.4
+#into(Ljava/lang/Class;)Ljava/util/List;
+#into(Lorg/jooq/RecordHandler;)Lorg/jooq/RecordHandler;
@1.6.5
+#getValues(ILjava/lang/Class;)Ljava/util/List;
+#getValues(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
+#exportXML()Lorg/w3c/dom/Document;
@1.6.7
+#getValues(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/List;
@2.0.0-RC1
+#into(Lorg/jooq/Table;)Lorg/jooq/Result;
-#getRecords()Ljava/util/List;[deprecated]
-#getRecord(I)Lorg/jooq/Record;[deprecated]
-#getNumberOfRecords()I[deprecated]
@2.0.2
+#intoArray()[[Ljava/lang/Object;
@2.0.5
+#isNotEmpty()Z
*#exportXML()Lorg/w3c/dom/Document;[deprecated]
+#intoXML()Lorg/w3c/dom/Document;
@2.1.0
+#getValues(Lorg/jooq/Field;Lorg/jooq/Converter;)Ljava/util/List;
+#getValues(ILorg/jooq/Converter;)Ljava/util/List;
+#getValues(Ljava/lang/String;Lorg/jooq/Converter;)Ljava/util/List;
@2.4.0
+#intoResultSet()Ljava/sql/ResultSet;
@2.5.0
+#formatCSV(CLjava/lang/String;)Ljava/lang/String;
+#intoMaps()Ljava/util/List;
+#intoMap(Lorg/jooq/Field;)Ljava/util/Map;
+#intoMap(Lorg/jooq/Field;Lorg/jooq/Field;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Field;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Field;Lorg/jooq/Field;)Ljava/util/Map;
+#sortAsc(Lorg/jooq/Field;)Lorg/jooq/Result;
+#sortDesc(Lorg/jooq/Field;)Lorg/jooq/Result;
+#sortAsc(Lorg/jooq/Field;Ljava/util/Comparator;)Lorg/jooq/Result;
+#sortDesc(Lorg/jooq/Field;Ljava/util/Comparator;)Lorg/jooq/Result;
+#sortAsc(Ljava/util/Comparator;)Lorg/jooq/Result;
+#sortDesc(Ljava/util/Comparator;)Lorg/jooq/Result;
@2.6.0
*#getValueAsArray(ILorg/jooq/Field;)[Ljava/lang/Object;[deprecated]
*#getValueAsArray(ILorg/jooq/Field;[Ljava/lang/Object;)[Ljava/lang/Object;[deprecated]
*#getValueAsString(ILorg/jooq/Field;)Ljava/lang/String;[deprecated]
*#getValueAsString(ILorg/jooq/Field;Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#getValueAsString(II)Ljava/lang/String;[deprecated]
*#getValueAsString(IILjava/lang/String;)Ljava/lang/String;[deprecated]
*#getValueAsString(ILjava/lang/String;)Ljava/lang/String;[deprecated]
*#getValueAsString(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#getValueAsByte(ILorg/jooq/Field;)Ljava/lang/Byte;[deprecated]
*#getValueAsByte(ILorg/jooq/Field;Ljava/lang/Byte;)Ljava/lang/Byte;[deprecated]
*#getValueAsByte(II)Ljava/lang/Byte;[deprecated]
*#getValueAsByte(IILjava/lang/Byte;)Ljava/lang/Byte;[deprecated]
*#getValueAsByte(ILjava/lang/String;)Ljava/lang/Byte;[deprecated]
*#getValueAsByte(ILjava/lang/String;Ljava/lang/Byte;)Ljava/lang/Byte;[deprecated]
*#getValueAsShort(ILorg/jooq/Field;)Ljava/lang/Short;[deprecated]
*#getValueAsShort(ILorg/jooq/Field;Ljava/lang/Short;)Ljava/lang/Short;[deprecated]
*#getValueAsShort(II)Ljava/lang/Short;[deprecated]
*#getValueAsShort(IILjava/lang/Short;)Ljava/lang/Short;[deprecated]
*#getValueAsShort(ILjava/lang/String;)Ljava/lang/Short;[deprecated]
*#getValueAsShort(ILjava/lang/String;Ljava/lang/Short;)Ljava/lang/Short;[deprecated]
*#getValueAsInteger(ILorg/jooq/Field;)Ljava/lang/Integer;[deprecated]
*#getValueAsInteger(ILorg/jooq/Field;Ljava/lang/Integer;)Ljava/lang/Integer;[deprecated]
*#getValueAsInteger(II)Ljava/lang/Integer;[deprecated]
*#getValueAsInteger(IILjava/lang/Integer;)Ljava/lang/Integer;[deprecated]
*#getValueAsInteger(ILjava/lang/String;)Ljava/lang/Integer;[deprecated]
*#getValueAsInteger(ILjava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;[deprecated]
*#getValueAsLong(ILorg/jooq/Field;)Ljava/lang/Long;[deprecated]
*#getValueAsLong(ILorg/jooq/Field;Ljava/lang/Long;)Ljava/lang/Long;[deprecated]
*#getValueAsLong(II)Ljava/lang/Long;[deprecated]
*#getValueAsLong(IILjava/lang/Long;)Ljava/lang/Long;[deprecated]
*#getValueAsLong(ILjava/lang/String;)Ljava/lang/Long;[deprecated]
*#getValueAsLong(ILjava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;[deprecated]
*#getValueAsBigInteger(ILorg/jooq/Field;)Ljava/math/BigInteger;[deprecated]
*#getValueAsBigInteger(ILorg/jooq/Field;Ljava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
*#getValueAsBigInteger(II)Ljava/math/BigInteger;[deprecated]
*#getValueAsBigInteger(IILjava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
*#getValueAsBigInteger(ILjava/lang/String;)Ljava/math/BigInteger;[deprecated]
*#getValueAsBigInteger(ILjava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
*#getValueAsFloat(ILorg/jooq/Field;)Ljava/lang/Float;[deprecated]
*#getValueAsFloat(ILorg/jooq/Field;Ljava/lang/Float;)Ljava/lang/Float;[deprecated]
*#getValueAsFloat(II)Ljava/lang/Float;[deprecated]
*#getValueAsFloat(IILjava/lang/Float;)Ljava/lang/Float;[deprecated]
*#getValueAsFloat(ILjava/lang/String;)Ljava/lang/Float;[deprecated]
*#getValueAsFloat(ILjava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;[deprecated]
*#getValueAsDouble(ILorg/jooq/Field;)Ljava/lang/Double;[deprecated]
*#getValueAsDouble(ILorg/jooq/Field;Ljava/lang/Double;)Ljava/lang/Double;[deprecated]
*#getValueAsDouble(II)Ljava/lang/Double;[deprecated]
*#getValueAsDouble(IILjava/lang/Double;)Ljava/lang/Double;[deprecated]
*#getValueAsDouble(ILjava/lang/String;)Ljava/lang/Double;[deprecated]
*#getValueAsDouble(ILjava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;[deprecated]
*#getValueAsBigDecimal(ILorg/jooq/Field;)Ljava/math/BigDecimal;[deprecated]
*#getValueAsBigDecimal(ILorg/jooq/Field;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
*#getValueAsBigDecimal(II)Ljava/math/BigDecimal;[deprecated]
*#getValueAsBigDecimal(IILjava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
*#getValueAsBigDecimal(ILjava/lang/String;)Ljava/math/BigDecimal;[deprecated]
*#getValueAsBigDecimal(ILjava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
*#getValueAsBoolean(ILorg/jooq/Field;)Ljava/lang/Boolean;[deprecated]
*#getValueAsBoolean(ILorg/jooq/Field;Ljava/lang/Boolean;)Ljava/lang/Boolean;[deprecated]
*#getValueAsBoolean(II)Ljava/lang/Boolean;[deprecated]
*#getValueAsBoolean(IILjava/lang/Boolean;)Ljava/lang/Boolean;[deprecated]
*#getValueAsBoolean(ILjava/lang/String;)Ljava/lang/Boolean;[deprecated]
*#getValueAsBoolean(ILjava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;[deprecated]
*#getValueAsTimestamp(ILorg/jooq/Field;)Ljava/sql/Timestamp;[deprecated]
*#getValueAsTimestamp(ILorg/jooq/Field;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
*#getValueAsTimestamp(II)Ljava/sql/Timestamp;[deprecated]
*#getValueAsTimestamp(IILjava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
*#getValueAsTimestamp(ILjava/lang/String;)Ljava/sql/Timestamp;[deprecated]
*#getValueAsTimestamp(ILjava/lang/String;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
*#getValueAsDate(ILorg/jooq/Field;)Ljava/sql/Date;[deprecated]
*#getValueAsDate(ILorg/jooq/Field;Ljava/sql/Date;)Ljava/sql/Date;[deprecated]
*#getValueAsDate(II)Ljava/sql/Date;[deprecated]
*#getValueAsDate(IILjava/sql/Date;)Ljava/sql/Date;[deprecated]
*#getValueAsDate(ILjava/lang/String;)Ljava/sql/Date;[deprecated]
*#getValueAsDate(ILjava/lang/String;Ljava/sql/Date;)Ljava/sql/Date;[deprecated]
*#getValueAsTime(ILorg/jooq/Field;)Ljava/sql/Time;[deprecated]
*#getValueAsTime(ILorg/jooq/Field;Ljava/sql/Time;)Ljava/sql/Time;[deprecated]
*#getValueAsTime(II)Ljava/sql/Time;[deprecated]
*#getValueAsTime(IILjava/sql/Time;)Ljava/sql/Time;[deprecated]
*#getValueAsTime(ILjava/lang/String;)Ljava/sql/Time;[deprecated]
*#getValueAsTime(ILjava/lang/String;Ljava/sql/Time;)Ljava/sql/Time;[deprecated]
*#getValuesAsBigDecimal(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsBigDecimal(I)Ljava/util/List;[deprecated]
*#getValuesAsBigDecimal(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsBigInteger(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsBigInteger(I)Ljava/util/List;[deprecated]
*#getValuesAsBigInteger(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsByte(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsByte(I)Ljava/util/List;[deprecated]
*#getValuesAsByte(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsDate(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsDate(I)Ljava/util/List;[deprecated]
*#getValuesAsDate(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsDouble(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsDouble(I)Ljava/util/List;[deprecated]
*#getValuesAsDouble(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsFloat(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsFloat(I)Ljava/util/List;[deprecated]
*#getValuesAsFloat(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsInteger(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsInteger(I)Ljava/util/List;[deprecated]
*#getValuesAsInteger(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsLong(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsLong(I)Ljava/util/List;[deprecated]
*#getValuesAsLong(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsShort(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsShort(I)Ljava/util/List;[deprecated]
*#getValuesAsShort(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsString(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsString(I)Ljava/util/List;[deprecated]
*#getValuesAsString(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsTime(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsTime(I)Ljava/util/List;[deprecated]
*#getValuesAsTime(Ljava/lang/String;)Ljava/util/List;[deprecated]
*#getValuesAsTimestamp(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
*#getValuesAsTimestamp(I)Ljava/util/List;[deprecated]
*#getValuesAsTimestamp(Ljava/lang/String;)Ljava/util/List;[deprecated]
+#intoMap([Lorg/jooq/Field;)Ljava/util/Map;
+#intoMap(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Map;
+#intoMap([Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Map;
+#intoGroups([Lorg/jooq/Field;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Map;
+#intoGroups([Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Map;
+#intoArray(I)[Ljava/lang/Object;
+#intoArray(ILjava/lang/Class;)[Ljava/lang/Object;
+#intoArray(ILorg/jooq/Converter;)[Ljava/lang/Object;
+#intoArray(Ljava/lang/String;)[Ljava/lang/Object;
+#intoArray(Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/Object;
+#intoArray(Ljava/lang/String;Lorg/jooq/Converter;)[Ljava/lang/Object;
+#intoArray(Lorg/jooq/Field;)[Ljava/lang/Object;
+#intoArray(Lorg/jooq/Field;Ljava/lang/Class;)[Ljava/lang/Object;
+#intoArray(Lorg/jooq/Field;Lorg/jooq/Converter;)[Ljava/lang/Object;
+#map(Lorg/jooq/RecordMapper;)Ljava/util/List;
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row;
+#field(Lorg/jooq/Field;)Lorg/jooq/Field;
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(I)Lorg/jooq/Field;
+#fields()[Lorg/jooq/Field;
+#sortAsc(I)Lorg/jooq/Result;
+#sortDesc(I)Lorg/jooq/Result;
+#sortAsc(Ljava/lang/String;)Lorg/jooq/Result;
+#sortDesc(Ljava/lang/String;)Lorg/jooq/Result;
+#sortAsc(ILjava/util/Comparator;)Lorg/jooq/Result;
+#sortDesc(ILjava/util/Comparator;)Lorg/jooq/Result;
+#sortAsc(Ljava/lang/String;Ljava/util/Comparator;)Lorg/jooq/Result;
+#sortDesc(Ljava/lang/String;Ljava/util/Comparator;)Lorg/jooq/Result;
+#intern([Lorg/jooq/Field;)Lorg/jooq/Result;
+#intern([I)Lorg/jooq/Result;
+#intern([Ljava/lang/String;)Lorg/jooq/Result;
-#getValueAsArray(ILorg/jooq/Field;)[Ljava/lang/Object;[deprecated]
-#getValueAsArray(ILorg/jooq/Field;[Ljava/lang/Object;)[Ljava/lang/Object;[deprecated]
-#getValueAsString(ILorg/jooq/Field;)Ljava/lang/String;[deprecated]
-#getValueAsString(ILorg/jooq/Field;Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#getValueAsString(II)Ljava/lang/String;[deprecated]
-#getValueAsString(IILjava/lang/String;)Ljava/lang/String;[deprecated]
-#getValueAsString(ILjava/lang/String;)Ljava/lang/String;[deprecated]
-#getValueAsString(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#getValueAsByte(ILorg/jooq/Field;)Ljava/lang/Byte;[deprecated]
-#getValueAsByte(ILorg/jooq/Field;Ljava/lang/Byte;)Ljava/lang/Byte;[deprecated]
-#getValueAsByte(II)Ljava/lang/Byte;[deprecated]
-#getValueAsByte(IILjava/lang/Byte;)Ljava/lang/Byte;[deprecated]
-#getValueAsByte(ILjava/lang/String;)Ljava/lang/Byte;[deprecated]
-#getValueAsByte(ILjava/lang/String;Ljava/lang/Byte;)Ljava/lang/Byte;[deprecated]
-#getValueAsShort(ILorg/jooq/Field;)Ljava/lang/Short;[deprecated]
-#getValueAsShort(ILorg/jooq/Field;Ljava/lang/Short;)Ljava/lang/Short;[deprecated]
-#getValueAsShort(II)Ljava/lang/Short;[deprecated]
-#getValueAsShort(IILjava/lang/Short;)Ljava/lang/Short;[deprecated]
-#getValueAsShort(ILjava/lang/String;)Ljava/lang/Short;[deprecated]
-#getValueAsShort(ILjava/lang/String;Ljava/lang/Short;)Ljava/lang/Short;[deprecated]
-#getValueAsInteger(ILorg/jooq/Field;)Ljava/lang/Integer;[deprecated]
-#getValueAsInteger(ILorg/jooq/Field;Ljava/lang/Integer;)Ljava/lang/Integer;[deprecated]
-#getValueAsInteger(II)Ljava/lang/Integer;[deprecated]
-#getValueAsInteger(IILjava/lang/Integer;)Ljava/lang/Integer;[deprecated]
-#getValueAsInteger(ILjava/lang/String;)Ljava/lang/Integer;[deprecated]
-#getValueAsInteger(ILjava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;[deprecated]
-#getValueAsLong(ILorg/jooq/Field;)Ljava/lang/Long;[deprecated]
-#getValueAsLong(ILorg/jooq/Field;Ljava/lang/Long;)Ljava/lang/Long;[deprecated]
-#getValueAsLong(II)Ljava/lang/Long;[deprecated]
-#getValueAsLong(IILjava/lang/Long;)Ljava/lang/Long;[deprecated]
-#getValueAsLong(ILjava/lang/String;)Ljava/lang/Long;[deprecated]
-#getValueAsLong(ILjava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;[deprecated]
-#getValueAsBigInteger(ILorg/jooq/Field;)Ljava/math/BigInteger;[deprecated]
-#getValueAsBigInteger(ILorg/jooq/Field;Ljava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
-#getValueAsBigInteger(II)Ljava/math/BigInteger;[deprecated]
-#getValueAsBigInteger(IILjava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
-#getValueAsBigInteger(ILjava/lang/String;)Ljava/math/BigInteger;[deprecated]
-#getValueAsBigInteger(ILjava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;[deprecated]
-#getValueAsFloat(ILorg/jooq/Field;)Ljava/lang/Float;[deprecated]
-#getValueAsFloat(ILorg/jooq/Field;Ljava/lang/Float;)Ljava/lang/Float;[deprecated]
-#getValueAsFloat(II)Ljava/lang/Float;[deprecated]
-#getValueAsFloat(IILjava/lang/Float;)Ljava/lang/Float;[deprecated]
-#getValueAsFloat(ILjava/lang/String;)Ljava/lang/Float;[deprecated]
-#getValueAsFloat(ILjava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;[deprecated]
-#getValueAsDouble(ILorg/jooq/Field;)Ljava/lang/Double;[deprecated]
-#getValueAsDouble(ILorg/jooq/Field;Ljava/lang/Double;)Ljava/lang/Double;[deprecated]
-#getValueAsDouble(II)Ljava/lang/Double;[deprecated]
-#getValueAsDouble(IILjava/lang/Double;)Ljava/lang/Double;[deprecated]
-#getValueAsDouble(ILjava/lang/String;)Ljava/lang/Double;[deprecated]
-#getValueAsDouble(ILjava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;[deprecated]
-#getValueAsBigDecimal(ILorg/jooq/Field;)Ljava/math/BigDecimal;[deprecated]
-#getValueAsBigDecimal(ILorg/jooq/Field;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
-#getValueAsBigDecimal(II)Ljava/math/BigDecimal;[deprecated]
-#getValueAsBigDecimal(IILjava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
-#getValueAsBigDecimal(ILjava/lang/String;)Ljava/math/BigDecimal;[deprecated]
-#getValueAsBigDecimal(ILjava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;[deprecated]
-#getValueAsBoolean(ILorg/jooq/Field;)Ljava/lang/Boolean;[deprecated]
-#getValueAsBoolean(ILorg/jooq/Field;Ljava/lang/Boolean;)Ljava/lang/Boolean;[deprecated]
-#getValueAsBoolean(II)Ljava/lang/Boolean;[deprecated]
-#getValueAsBoolean(IILjava/lang/Boolean;)Ljava/lang/Boolean;[deprecated]
-#getValueAsBoolean(ILjava/lang/String;)Ljava/lang/Boolean;[deprecated]
-#getValueAsBoolean(ILjava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;[deprecated]
-#getValueAsTimestamp(ILorg/jooq/Field;)Ljava/sql/Timestamp;[deprecated]
-#getValueAsTimestamp(ILorg/jooq/Field;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
-#getValueAsTimestamp(II)Ljava/sql/Timestamp;[deprecated]
-#getValueAsTimestamp(IILjava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
-#getValueAsTimestamp(ILjava/lang/String;)Ljava/sql/Timestamp;[deprecated]
-#getValueAsTimestamp(ILjava/lang/String;Ljava/sql/Timestamp;)Ljava/sql/Timestamp;[deprecated]
-#getValueAsDate(ILorg/jooq/Field;)Ljava/sql/Date;[deprecated]
-#getValueAsDate(ILorg/jooq/Field;Ljava/sql/Date;)Ljava/sql/Date;[deprecated]
-#getValueAsDate(II)Ljava/sql/Date;[deprecated]
-#getValueAsDate(IILjava/sql/Date;)Ljava/sql/Date;[deprecated]
-#getValueAsDate(ILjava/lang/String;)Ljava/sql/Date;[deprecated]
-#getValueAsDate(ILjava/lang/String;Ljava/sql/Date;)Ljava/sql/Date;[deprecated]
-#getValueAsTime(ILorg/jooq/Field;)Ljava/sql/Time;[deprecated]
-#getValueAsTime(ILorg/jooq/Field;Ljava/sql/Time;)Ljava/sql/Time;[deprecated]
-#getValueAsTime(II)Ljava/sql/Time;[deprecated]
-#getValueAsTime(IILjava/sql/Time;)Ljava/sql/Time;[deprecated]
-#getValueAsTime(ILjava/lang/String;)Ljava/sql/Time;[deprecated]
-#getValueAsTime(ILjava/lang/String;Ljava/sql/Time;)Ljava/sql/Time;[deprecated]
-#getValuesAsBigDecimal(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsBigDecimal(I)Ljava/util/List;[deprecated]
-#getValuesAsBigDecimal(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsBigInteger(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsBigInteger(I)Ljava/util/List;[deprecated]
-#getValuesAsBigInteger(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsByte(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsByte(I)Ljava/util/List;[deprecated]
-#getValuesAsByte(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsDate(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsDate(I)Ljava/util/List;[deprecated]
-#getValuesAsDate(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsDouble(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsDouble(I)Ljava/util/List;[deprecated]
-#getValuesAsDouble(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsFloat(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsFloat(I)Ljava/util/List;[deprecated]
-#getValuesAsFloat(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsInteger(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsInteger(I)Ljava/util/List;[deprecated]
-#getValuesAsInteger(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsLong(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsLong(I)Ljava/util/List;[deprecated]
-#getValuesAsLong(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsShort(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsShort(I)Ljava/util/List;[deprecated]
-#getValuesAsShort(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsString(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsString(I)Ljava/util/List;[deprecated]
-#getValuesAsString(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsTime(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsTime(I)Ljava/util/List;[deprecated]
-#getValuesAsTime(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#getValuesAsTimestamp(Lorg/jooq/Field;)Ljava/util/List;[deprecated]
-#getValuesAsTimestamp(I)Ljava/util/List;[deprecated]
-#getValuesAsTimestamp(Ljava/lang/String;)Ljava/util/List;[deprecated]
-#exportXML()Lorg/w3c/dom/Document;[deprecated]
@3.1.0
+#recordType()Lorg/jooq/RecordType;
+#intoXML(Lorg/xml/sax/ContentHandler;)Lorg/xml/sax/ContentHandler;
@3.2.5
+#attach(Lorg/jooq/Configuration;)V
+#detach()V
@3.3.0
*#getValue(ILorg/jooq/Field;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#getValue(IILjava/lang/Object;)Ljava/lang/Object;[deprecated]
*#getValue(ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#intoMap(Lorg/jooq/Field;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoMap([Lorg/jooq/Field;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Field;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups([Lorg/jooq/Field;Lorg/jooq/RecordMapper;)Ljava/util/Map;
-#attach(Lorg/jooq/Configuration;)V
-#detach()V
@3.3.2
+#attach(Lorg/jooq/Configuration;)V
+#detach()V
@3.5.0
+#formatInsert()Ljava/lang/String;
+#formatInsert(Lorg/jooq/Table;[Lorg/jooq/Field;)Ljava/lang/String;
+#format(Ljava/io/OutputStream;)V
+#format(Ljava/io/OutputStream;I)V
+#formatHTML(Ljava/io/OutputStream;)V
+#formatCSV(Ljava/io/OutputStream;)V
+#formatCSV(Ljava/io/OutputStream;C)V
+#formatCSV(Ljava/io/OutputStream;CLjava/lang/String;)V
+#formatJSON(Ljava/io/OutputStream;)V
+#formatXML(Ljava/io/OutputStream;)V
+#formatInsert(Ljava/io/OutputStream;)V
+#formatInsert(Ljava/io/OutputStream;Lorg/jooq/Table;[Lorg/jooq/Field;)V
+#format(Ljava/io/Writer;)V
+#format(Ljava/io/Writer;I)V
+#formatHTML(Ljava/io/Writer;)V
+#formatCSV(Ljava/io/Writer;)V
+#formatCSV(Ljava/io/Writer;C)V
+#formatCSV(Ljava/io/Writer;CLjava/lang/String;)V
+#formatJSON(Ljava/io/Writer;)V
+#formatXML(Ljava/io/Writer;)V
+#formatInsert(Ljava/io/Writer;)V
+#formatInsert(Ljava/io/Writer;Lorg/jooq/Table;[Lorg/jooq/Field;)V
+#intoMap(Lorg/jooq/Table;)Ljava/util/Map;
+#intoMap(Lorg/jooq/Table;Ljava/lang/Class;)Ljava/util/Map;
+#intoMap(Lorg/jooq/Table;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Table;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Table;Ljava/lang/Class;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Table;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoSet(I)Ljava/util/Set;
+#intoSet(ILjava/lang/Class;)Ljava/util/Set;
+#intoSet(ILorg/jooq/Converter;)Ljava/util/Set;
+#intoSet(Ljava/lang/String;)Ljava/util/Set;
+#intoSet(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Set;
+#intoSet(Ljava/lang/String;Lorg/jooq/Converter;)Ljava/util/Set;
+#intoSet(Lorg/jooq/Field;)Ljava/util/Set;
+#intoSet(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Set;
+#intoSet(Lorg/jooq/Field;Lorg/jooq/Converter;)Ljava/util/Set;
+#into([Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#into(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
@3.6.0
+#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(ILjava/lang/Class;)Lorg/jooq/Field;
+#field(ILorg/jooq/DataType;)Lorg/jooq/Field;
+#intoMap(I)Ljava/util/Map;
+#intoMap(Ljava/lang/String;)Ljava/util/Map;
+#intoMap(II)Ljava/util/Map;
+#intoMap(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#intoMap(ILjava/lang/Class;)Ljava/util/Map;
+#intoMap(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
+#intoMap(ILorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoMap(Ljava/lang/String;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoMap([I)Ljava/util/Map;
+#intoMap([Ljava/lang/String;)Ljava/util/Map;
+#intoMap([ILjava/lang/Class;)Ljava/util/Map;
+#intoMap([Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
+#intoMap([ILorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoMap([Ljava/lang/String;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups(I)Ljava/util/Map;
+#intoGroups(Ljava/lang/String;)Ljava/util/Map;
+#intoGroups(II)Ljava/util/Map;
+#intoGroups(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#intoGroups(ILjava/lang/Class;)Ljava/util/Map;
+#intoGroups(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
+#intoGroups(ILorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups(Ljava/lang/String;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups([I)Ljava/util/Map;
+#intoGroups([Ljava/lang/String;)Ljava/util/Map;
+#intoGroups([ILjava/lang/Class;)Ljava/util/Map;
+#intoGroups([Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
+#intoGroups([ILorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups([Ljava/lang/String;Lorg/jooq/RecordMapper;)Ljava/util/Map;
*#intoArray()[[Ljava/lang/Object;[deprecated]
+#intoArrays()[[Ljava/lang/Object;
+#fetchParents(Lorg/jooq/ForeignKey;)Lorg/jooq/Result;
+#fetchChildren(Lorg/jooq/ForeignKey;)Lorg/jooq/Result;
@3.7.0
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
+#fields([Ljava/lang/String;)[Lorg/jooq/Field;
+#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
+#fields([I)[Lorg/jooq/Field;
+#getValues(Lorg/jooq/Name;)Ljava/util/List;
+#getValues(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/List;
+#getValues(Lorg/jooq/Name;Lorg/jooq/Converter;)Ljava/util/List;
+#formatCSV(Z)Ljava/lang/String;
+#formatCSV(ZC)Ljava/lang/String;
+#formatCSV(ZCLjava/lang/String;)Ljava/lang/String;
+#formatCSV(Ljava/io/OutputStream;Z)V
+#formatCSV(Ljava/io/OutputStream;ZC)V
+#formatCSV(Ljava/io/OutputStream;ZCLjava/lang/String;)V
+#formatCSV(Ljava/io/Writer;Z)V
+#formatCSV(Ljava/io/Writer;ZC)V
+#formatCSV(Ljava/io/Writer;ZCLjava/lang/String;)V
+#intoMap(Lorg/jooq/Name;)Ljava/util/Map;
+#intoMap(Lorg/jooq/Name;Lorg/jooq/Name;)Ljava/util/Map;
+#intoMap(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Map;
+#intoMap(Lorg/jooq/Name;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoMap([Lorg/jooq/Name;)Ljava/util/Map;
+#intoMap([Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Map;
+#intoMap([Lorg/jooq/Name;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoMap(Ljava/lang/Class;)Ljava/util/Map;
+#intoMap(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;
+#intoMap(Ljava/lang/Class;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoMap(Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoMap(Lorg/jooq/RecordMapper;Ljava/lang/Class;)Ljava/util/Map;
+#intoMap(Lorg/jooq/RecordMapper;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Name;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Name;Lorg/jooq/Name;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Name;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups([Lorg/jooq/Name;)Ljava/util/Map;
+#intoGroups([Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Map;
+#intoGroups([Lorg/jooq/Name;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups(Ljava/lang/Class;)Ljava/util/Map;
+#intoGroups(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;
+#intoGroups(Ljava/lang/Class;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/RecordMapper;Ljava/lang/Class;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/RecordMapper;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#intoArray(Lorg/jooq/Name;)[Ljava/lang/Object;
+#intoArray(Lorg/jooq/Name;Ljava/lang/Class;)[Ljava/lang/Object;
+#intoArray(Lorg/jooq/Name;Lorg/jooq/Converter;)[Ljava/lang/Object;
+#intoSet(Lorg/jooq/Name;)Ljava/util/Set;
+#intoSet(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Set;
+#intoSet(Lorg/jooq/Name;Lorg/jooq/Converter;)Ljava/util/Set;
+#sortAsc(Lorg/jooq/Name;)Lorg/jooq/Result;
+#sortDesc(Lorg/jooq/Name;)Lorg/jooq/Result;
+#sortAsc(Lorg/jooq/Name;Ljava/util/Comparator;)Lorg/jooq/Result;
+#sortDesc(Lorg/jooq/Name;Ljava/util/Comparator;)Lorg/jooq/Result;
+#intern([Lorg/jooq/Name;)Lorg/jooq/Result;
@3.8.0
+#formatCSV(Lorg/jooq/CSVFormat;)Ljava/lang/String;
+#formatCSV(Ljava/io/OutputStream;Lorg/jooq/CSVFormat;)V
+#formatCSV(Ljava/io/Writer;Lorg/jooq/CSVFormat;)V
@3.9.0
+#formatJSON(Lorg/jooq/JSONFormat;)Ljava/lang/String;
+#formatJSON(Ljava/io/OutputStream;Lorg/jooq/JSONFormat;)V
+#formatJSON(Ljava/io/Writer;Lorg/jooq/JSONFormat;)V
@3.10.0
+#formatXML(Lorg/jooq/XMLFormat;)Ljava/lang/String;
+#formatChart()Ljava/lang/String;
+#formatChart(Lorg/jooq/ChartFormat;)Ljava/lang/String;
+#formatXML(Ljava/io/OutputStream;Lorg/jooq/XMLFormat;)V
+#formatChart(Ljava/io/OutputStream;)V
+#formatChart(Ljava/io/OutputStream;Lorg/jooq/ChartFormat;)V
+#formatXML(Ljava/io/Writer;Lorg/jooq/XMLFormat;)V
+#formatChart(Ljava/io/Writer;)V
+#formatChart(Ljava/io/Writer;Lorg/jooq/ChartFormat;)V
+#intoXML(Lorg/jooq/XMLFormat;)Lorg/w3c/dom/Document;
+#intoXML(Lorg/xml/sax/ContentHandler;Lorg/jooq/XMLFormat;)Lorg/xml/sax/ContentHandler;
+#intoMap([Lorg/jooq/Field;[Lorg/jooq/Field;)Ljava/util/Map;
+#intoMap([I[I)Ljava/util/Map;
+#intoMap([Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Map;
+#intoMap([Lorg/jooq/Name;[Lorg/jooq/Name;)Ljava/util/Map;
+#intoMap(Lorg/jooq/Table;Lorg/jooq/Table;)Ljava/util/Map;
+#intoGroups([Lorg/jooq/Field;[Lorg/jooq/Field;)Ljava/util/Map;
+#intoGroups([I[I)Ljava/util/Map;
+#intoGroups([Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Map;
+#intoGroups([Lorg/jooq/Name;[Lorg/jooq/Name;)Ljava/util/Map;
+#intoGroups(Lorg/jooq/Table;Lorg/jooq/Table;)Ljava/util/Map;
*#intern([Lorg/jooq/Field;)Lorg/jooq/Result;[deprecated]
*#intern([I)Lorg/jooq/Result;[deprecated]
*#intern([Ljava/lang/String;)Lorg/jooq/Result;[deprecated]
*#intern([Lorg/jooq/Name;)Lorg/jooq/Result;[deprecated]
@3.11.0
+#intoSet(Lorg/jooq/RecordMapper;)Ljava/util/Set;
-#format()Ljava/lang/String;
-#format(I)Ljava/lang/String;
-#formatHTML()Ljava/lang/String;
-#formatCSV()Ljava/lang/String;
-#formatCSV(C)Ljava/lang/String;
-#formatCSV(CLjava/lang/String;)Ljava/lang/String;
-#formatCSV(Z)Ljava/lang/String;
-#formatCSV(ZC)Ljava/lang/String;
-#formatCSV(ZCLjava/lang/String;)Ljava/lang/String;
-#formatCSV(Lorg/jooq/CSVFormat;)Ljava/lang/String;
-#formatJSON()Ljava/lang/String;
-#formatJSON(Lorg/jooq/JSONFormat;)Ljava/lang/String;
-#formatXML()Ljava/lang/String;
-#formatXML(Lorg/jooq/XMLFormat;)Ljava/lang/String;
-#formatChart()Ljava/lang/String;
-#formatChart(Lorg/jooq/ChartFormat;)Ljava/lang/String;
-#formatInsert()Ljava/lang/String;
-#formatInsert(Lorg/jooq/Table;[Lorg/jooq/Field;)Ljava/lang/String;
-#format(Ljava/io/OutputStream;)V
-#format(Ljava/io/OutputStream;I)V
-#formatHTML(Ljava/io/OutputStream;)V
-#formatCSV(Ljava/io/OutputStream;)V
-#formatCSV(Ljava/io/OutputStream;C)V
-#formatCSV(Ljava/io/OutputStream;CLjava/lang/String;)V
-#formatCSV(Ljava/io/OutputStream;Z)V
-#formatCSV(Ljava/io/OutputStream;ZC)V
-#formatCSV(Ljava/io/OutputStream;ZCLjava/lang/String;)V
-#formatCSV(Ljava/io/OutputStream;Lorg/jooq/CSVFormat;)V
-#formatJSON(Ljava/io/OutputStream;)V
-#formatJSON(Ljava/io/OutputStream;Lorg/jooq/JSONFormat;)V
-#formatXML(Ljava/io/OutputStream;)V
-#formatXML(Ljava/io/OutputStream;Lorg/jooq/XMLFormat;)V
-#formatChart(Ljava/io/OutputStream;)V
-#formatChart(Ljava/io/OutputStream;Lorg/jooq/ChartFormat;)V
-#formatInsert(Ljava/io/OutputStream;)V
-#formatInsert(Ljava/io/OutputStream;Lorg/jooq/Table;[Lorg/jooq/Field;)V
-#format(Ljava/io/Writer;)V
-#format(Ljava/io/Writer;I)V
-#formatHTML(Ljava/io/Writer;)V
-#formatCSV(Ljava/io/Writer;)V
-#formatCSV(Ljava/io/Writer;C)V
-#formatCSV(Ljava/io/Writer;CLjava/lang/String;)V
-#formatCSV(Ljava/io/Writer;Z)V
-#formatCSV(Ljava/io/Writer;ZC)V
-#formatCSV(Ljava/io/Writer;ZCLjava/lang/String;)V
-#formatCSV(Ljava/io/Writer;Lorg/jooq/CSVFormat;)V
-#formatJSON(Ljava/io/Writer;)V
-#formatJSON(Ljava/io/Writer;Lorg/jooq/JSONFormat;)V
-#formatXML(Ljava/io/Writer;)V
-#formatXML(Ljava/io/Writer;Lorg/jooq/XMLFormat;)V
-#formatChart(Ljava/io/Writer;)V
-#formatChart(Ljava/io/Writer;Lorg/jooq/ChartFormat;)V
-#formatInsert(Ljava/io/Writer;)V
-#formatInsert(Ljava/io/Writer;Lorg/jooq/Table;[Lorg/jooq/Field;)V
-#intoXML()Lorg/w3c/dom/Document;
-#intoXML(Lorg/jooq/XMLFormat;)Lorg/w3c/dom/Document;
-#intoXML(Lorg/xml/sax/ContentHandler;)Lorg/xml/sax/ContentHandler;
-#intoXML(Lorg/xml/sax/ContentHandler;Lorg/jooq/XMLFormat;)Lorg/xml/sax/ContentHandler;
@3.12.0
+#indexOf(Lorg/jooq/Field;)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Lorg/jooq/Name;)I
@3.14.0
+#parents(Lorg/jooq/ForeignKey;)Lorg/jooq/Table;
+#children(Lorg/jooq/ForeignKey;)Lorg/jooq/Table;
@3.15.0
+#collect(Ljava/util/stream/Collector;)Ljava/lang/Object;
*#into(Lorg/jooq/RecordHandler;)Lorg/jooq/RecordHandler;[deprecated]
-#fieldsRow()Lorg/jooq/Row;
-#field(Lorg/jooq/Field;)Lorg/jooq/Field;
-#field(Ljava/lang/String;)Lorg/jooq/Field;
-#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
-#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#field(I)Lorg/jooq/Field;
-#field(ILjava/lang/Class;)Lorg/jooq/Field;
-#field(ILorg/jooq/DataType;)Lorg/jooq/Field;
-#fields()[Lorg/jooq/Field;
-#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
-#fields([Ljava/lang/String;)[Lorg/jooq/Field;
-#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
-#fields([I)[Lorg/jooq/Field;
-#indexOf(Lorg/jooq/Field;)I
-#indexOf(Ljava/lang/String;)I
-#indexOf(Lorg/jooq/Name;)I
-#getValue(ILorg/jooq/Field;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
-#getValue(IILjava/lang/Object;)Ljava/lang/Object;[deprecated]
-#getValue(ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
@3.16.0
-#intoArray()[[Ljava/lang/Object;[deprecated]

+###org/jooq/ResultQuery
@1.6.2
+#getResult()Lorg/jooq/Result;
+#fetch()Lorg/jooq/Result;
+#fetchLazy()Lorg/jooq/Cursor;
+#fetch(Lorg/jooq/Field;)Ljava/util/List;
+#fetch(I)Ljava/util/List;
+#fetch(Ljava/lang/String;)Ljava/util/List;
+#fetchOne(Lorg/jooq/Field;)Ljava/lang/Object;
+#fetchOne(I)Ljava/lang/Object;
+#fetchOne(Ljava/lang/String;)Ljava/lang/Object;
+#fetchOne()Lorg/jooq/Record;
+#fetchAny()Lorg/jooq/Record;
+#fetchMaps()Ljava/util/List;
+#fetchOneMap()Ljava/util/Map;
+#fetchMap(Lorg/jooq/Field;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/Field;Lorg/jooq/Field;)Ljava/util/Map;
+#fetchArrays()[[Ljava/lang/Object;
+#fetchArray(I)[Ljava/lang/Object;
+#fetchArray(Ljava/lang/String;)[Ljava/lang/Object;
+#fetchArray(Lorg/jooq/Field;)[Ljava/lang/Object;
+#fetchOneArray()[Ljava/lang/Object;
+#getRecordType()Ljava/lang/Class;
@1.6.4
+#fetchInto(Ljava/lang/Class;)Ljava/util/List;
+#fetchInto(Lorg/jooq/RecordHandler;)Lorg/jooq/RecordHandler;
+#fetchLater()Lorg/jooq/FutureResult;
+#fetchLater(Ljava/util/concurrent/ExecutorService;)Lorg/jooq/FutureResult;
@1.6.5
+#fetch(ILjava/lang/Class;)Ljava/util/List;
+#fetch(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
+#fetchOne(ILjava/lang/Class;)Ljava/lang/Object;
+#fetchOne(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchArray(ILjava/lang/Class;)[Ljava/lang/Object;
+#fetchArray(Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/Object;
@1.6.7
+#fetchMany()Ljava/util/List;
@2.0.0-RC1
+#fetch(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/List;
+#fetchInto(Lorg/jooq/Table;)Lorg/jooq/Result;
@2.0.1
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/ResultQuery;
+#bind(ILjava/lang/Object;)Lorg/jooq/ResultQuery;
@2.0.3
+#fetchLazy(I)Lorg/jooq/Cursor;
@2.0.5
+#fetchResultSet()Ljava/sql/ResultSet;
@2.1.0
+#fetch(Lorg/jooq/Field;Lorg/jooq/Converter;)Ljava/util/List;
+#fetch(ILorg/jooq/Converter;)Ljava/util/List;
+#fetch(Ljava/lang/String;Lorg/jooq/Converter;)Ljava/util/List;
+#fetchOne(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchOne(Lorg/jooq/Field;Lorg/jooq/Converter;)Ljava/lang/Object;
+#fetchOne(ILorg/jooq/Converter;)Ljava/lang/Object;
+#fetchOne(Ljava/lang/String;Lorg/jooq/Converter;)Ljava/lang/Object;
+#fetchArray(ILorg/jooq/Converter;)[Ljava/lang/Object;
+#fetchArray(Ljava/lang/String;Lorg/jooq/Converter;)[Ljava/lang/Object;
+#fetchArray(Lorg/jooq/Field;Ljava/lang/Class;)[Ljava/lang/Object;
+#fetchArray(Lorg/jooq/Field;Lorg/jooq/Converter;)[Ljava/lang/Object;
@2.5.0
+#fetchGroups(Lorg/jooq/Field;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Field;Lorg/jooq/Field;)Ljava/util/Map;
@2.6.0
+#fetchMap([Lorg/jooq/Field;)Ljava/util/Map;
+#fetchMap([Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Map;
+#fetchGroups([Lorg/jooq/Field;)Ljava/util/Map;
+#fetchGroups([Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Map;
+#fetch(Lorg/jooq/RecordMapper;)Ljava/util/List;
+#queryTimeout(I)Lorg/jooq/ResultQuery;
+#keepStatement(Z)Lorg/jooq/ResultQuery;
+#maxRows(I)Lorg/jooq/ResultQuery;
@3.0.0-RC1
+#fetchOneInto(Ljava/lang/Class;)Ljava/lang/Object;
+#fetchOneInto(Lorg/jooq/Table;)Lorg/jooq/Record;
+#intern([Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#intern([I)Lorg/jooq/ResultQuery;
+#intern([Ljava/lang/String;)Lorg/jooq/ResultQuery;
@3.1.0
+#resultSetConcurrency(I)Lorg/jooq/ResultQuery;
+#resultSetType(I)Lorg/jooq/ResultQuery;
+#resultSetHoldability(I)Lorg/jooq/ResultQuery;
@3.2.0-alpha-01
*#fetchLater()Lorg/jooq/FutureResult;[deprecated]
*#fetchLater(Ljava/util/concurrent/ExecutorService;)Lorg/jooq/FutureResult;[deprecated]
@3.3.0
*#fetchLazy(I)Lorg/jooq/Cursor;[deprecated]
+#fetchMap([Lorg/jooq/Field;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/Field;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups([Lorg/jooq/Field;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Field;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchSize(I)Lorg/jooq/ResultQuery;
@3.4.0
+#fetchAny(Lorg/jooq/Field;)Ljava/lang/Object;
+#fetchAny(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchAny(Lorg/jooq/Field;Lorg/jooq/Converter;)Ljava/lang/Object;
+#fetchAny(I)Ljava/lang/Object;
+#fetchAny(ILjava/lang/Class;)Ljava/lang/Object;
+#fetchAny(ILorg/jooq/Converter;)Ljava/lang/Object;
+#fetchAny(Ljava/lang/String;)Ljava/lang/Object;
+#fetchAny(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchAny(Ljava/lang/String;Lorg/jooq/Converter;)Ljava/lang/Object;
+#fetchAnyMap()Ljava/util/Map;
+#fetchAnyArray()[Ljava/lang/Object;
+#fetchAnyInto(Ljava/lang/Class;)Ljava/lang/Object;
+#fetchAnyInto(Lorg/jooq/Table;)Lorg/jooq/Record;
@3.5.0
+#iterator()Ljava/util/Iterator;
+#fetchMap(Lorg/jooq/Table;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/Table;Ljava/lang/Class;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/Table;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Table;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Table;Ljava/lang/Class;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Table;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchSet(I)Ljava/util/Set;
+#fetchSet(ILjava/lang/Class;)Ljava/util/Set;
+#fetchSet(ILorg/jooq/Converter;)Ljava/util/Set;
+#fetchSet(Ljava/lang/String;)Ljava/util/Set;
+#fetchSet(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Set;
+#fetchSet(Ljava/lang/String;Lorg/jooq/Converter;)Ljava/util/Set;
+#fetchSet(Lorg/jooq/Field;)Ljava/util/Set;
+#fetchSet(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Set;
+#fetchSet(Lorg/jooq/Field;Lorg/jooq/Converter;)Ljava/util/Set;
@3.6.0
+#fetchOne(Lorg/jooq/RecordMapper;)Ljava/lang/Object;
+#fetchMap(I)Ljava/util/Map;
+#fetchMap(Ljava/lang/String;)Ljava/util/Map;
+#fetchMap(II)Ljava/util/Map;
+#fetchMap(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#fetchMap([I)Ljava/util/Map;
+#fetchMap([Ljava/lang/String;)Ljava/util/Map;
+#fetchMap([ILjava/lang/Class;)Ljava/util/Map;
+#fetchMap([Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
+#fetchMap([ILorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchMap([Ljava/lang/String;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchMap(ILjava/lang/Class;)Ljava/util/Map;
+#fetchMap(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
+#fetchMap(ILorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchMap(Ljava/lang/String;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups(I)Ljava/util/Map;
+#fetchGroups(Ljava/lang/String;)Ljava/util/Map;
+#fetchGroups(II)Ljava/util/Map;
+#fetchGroups(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#fetchGroups([I)Ljava/util/Map;
+#fetchGroups([Ljava/lang/String;)Ljava/util/Map;
+#fetchGroups([ILjava/lang/Class;)Ljava/util/Map;
+#fetchGroups([Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
+#fetchGroups([ILorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups([Ljava/lang/String;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups(ILjava/lang/Class;)Ljava/util/Map;
+#fetchGroups(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
+#fetchGroups(ILorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups(Ljava/lang/String;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchArray()[Lorg/jooq/Record;
@3.7.0
+#stream()Ljava/util/stream/Stream;
+#fetchMany()Lorg/jooq/Results;
+#fetch(Lorg/jooq/Name;)Ljava/util/List;
+#fetch(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/List;
+#fetch(Lorg/jooq/Name;Lorg/jooq/Converter;)Ljava/util/List;
+#fetchOne(Lorg/jooq/Name;)Ljava/lang/Object;
+#fetchOne(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchOne(Lorg/jooq/Name;Lorg/jooq/Converter;)Ljava/lang/Object;
+#fetchOptional(Lorg/jooq/Field;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Field;Lorg/jooq/Converter;)Ljava/util/Optional;
+#fetchOptional(I)Ljava/util/Optional;
+#fetchOptional(ILjava/lang/Class;)Ljava/util/Optional;
+#fetchOptional(ILorg/jooq/Converter;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;Lorg/jooq/Converter;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Name;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Name;Lorg/jooq/Converter;)Ljava/util/Optional;
+#fetchOptional()Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/RecordMapper;)Ljava/util/Optional;
+#fetchOptionalMap()Ljava/util/Optional;
+#fetchOptionalArray()Ljava/util/Optional;
+#fetchOptionalInto(Ljava/lang/Class;)Ljava/util/Optional;
+#fetchOptionalInto(Lorg/jooq/Table;)Ljava/util/Optional;
+#fetchAny(Lorg/jooq/Name;)Ljava/lang/Object;
+#fetchAny(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchAny(Lorg/jooq/Name;Lorg/jooq/Converter;)Ljava/lang/Object;
+#fetchAny(Lorg/jooq/RecordMapper;)Ljava/lang/Object;
+#fetchMap(Lorg/jooq/Name;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/Name;Lorg/jooq/Name;)Ljava/util/Map;
+#fetchMap([Lorg/jooq/Name;)Ljava/util/Map;
+#fetchMap([Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Map;
+#fetchMap([Lorg/jooq/Name;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchMap(Ljava/lang/Class;)Ljava/util/Map;
+#fetchMap(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;
+#fetchMap(Ljava/lang/Class;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/RecordMapper;Ljava/lang/Class;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/RecordMapper;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/Name;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Name;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Name;Lorg/jooq/Name;)Ljava/util/Map;
+#fetchGroups([Lorg/jooq/Name;)Ljava/util/Map;
+#fetchGroups([Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Map;
+#fetchGroups([Lorg/jooq/Name;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups(Ljava/lang/Class;)Ljava/util/Map;
+#fetchGroups(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;
+#fetchGroups(Ljava/lang/Class;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/RecordMapper;Ljava/lang/Class;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/RecordMapper;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Name;Lorg/jooq/RecordMapper;)Ljava/util/Map;
+#fetchArray(Lorg/jooq/Name;)[Ljava/lang/Object;
+#fetchArray(Lorg/jooq/Name;Ljava/lang/Class;)[Ljava/lang/Object;
+#fetchArray(Lorg/jooq/Name;Lorg/jooq/Converter;)[Ljava/lang/Object;
+#fetchSet(Lorg/jooq/Name;)Ljava/util/Set;
+#fetchSet(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/util/Set;
+#fetchSet(Lorg/jooq/Name;Lorg/jooq/Converter;)Ljava/util/Set;
+#intern([Lorg/jooq/Name;)Lorg/jooq/ResultQuery;
+#keepStatement(Z)Lorg/jooq/Query;
+#queryTimeout(I)Lorg/jooq/Query;
+#bind(ILjava/lang/Object;)Lorg/jooq/Query;
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/Query;
-#fetchMany()Ljava/util/List;
@3.8.0
+#fetchStream()Ljava/util/stream/Stream;
+#fetchAsync()Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
@3.10.0
+#forEach(Ljava/util/function/Consumer;)V
+#spliterator()Ljava/util/Spliterator;
+#fetchStreamInto(Ljava/lang/Class;)Ljava/util/stream/Stream;
+#fetchStreamInto(Lorg/jooq/Table;)Ljava/util/stream/Stream;
+#fetchSingle(Lorg/jooq/Field;)Ljava/lang/Object;
+#fetchSingle(Lorg/jooq/Field;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchSingle(Lorg/jooq/Field;Lorg/jooq/Converter;)Ljava/lang/Object;
+#fetchSingle(I)Ljava/lang/Object;
+#fetchSingle(ILjava/lang/Class;)Ljava/lang/Object;
+#fetchSingle(ILorg/jooq/Converter;)Ljava/lang/Object;
+#fetchSingle(Ljava/lang/String;)Ljava/lang/Object;
+#fetchSingle(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchSingle(Ljava/lang/String;Lorg/jooq/Converter;)Ljava/lang/Object;
+#fetchSingle(Lorg/jooq/Name;)Ljava/lang/Object;
+#fetchSingle(Lorg/jooq/Name;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchSingle(Lorg/jooq/Name;Lorg/jooq/Converter;)Ljava/lang/Object;
+#fetchSingle()Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/RecordMapper;)Ljava/lang/Object;
+#fetchSingleMap()Ljava/util/Map;
+#fetchSingleArray()[Ljava/lang/Object;
+#fetchSingleInto(Ljava/lang/Class;)Ljava/lang/Object;
+#fetchSingleInto(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchMap([Lorg/jooq/Field;[Lorg/jooq/Field;)Ljava/util/Map;
+#fetchMap([I[I)Ljava/util/Map;
+#fetchMap([Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Map;
+#fetchMap([Lorg/jooq/Name;[Lorg/jooq/Name;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/Table;Lorg/jooq/Table;)Ljava/util/Map;
+#fetchGroups([Lorg/jooq/Field;[Lorg/jooq/Field;)Ljava/util/Map;
+#fetchGroups([I[I)Ljava/util/Map;
+#fetchGroups([Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Map;
+#fetchGroups([Lorg/jooq/Name;[Lorg/jooq/Name;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/Table;Lorg/jooq/Table;)Ljava/util/Map;
*#intern([Lorg/jooq/Field;)Lorg/jooq/ResultQuery;[deprecated]
*#intern([I)Lorg/jooq/ResultQuery;[deprecated]
*#intern([Ljava/lang/String;)Lorg/jooq/ResultQuery;[deprecated]
*#intern([Lorg/jooq/Name;)Lorg/jooq/ResultQuery;[deprecated]
@3.11.0
+#collect(Ljava/util/stream/Collector;)Ljava/lang/Object;
+#fetchSet(Lorg/jooq/RecordMapper;)Ljava/util/Set;
@3.12.0
+#poolable(Z)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Table;)Lorg/jooq/ResultQuery;
+#coerce([Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Ljava/util/Collection;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#poolable(Z)Lorg/jooq/Query;
@3.15.0
*#fetchInto(Lorg/jooq/RecordHandler;)Lorg/jooq/RecordHandler;[deprecated]
-#forEach(Ljava/util/function/Consumer;)V
-#fetchLazy(I)Lorg/jooq/Cursor;[deprecated]
-#fetchLater()Lorg/jooq/FutureResult;[deprecated]
-#fetchLater(Ljava/util/concurrent/ExecutorService;)Lorg/jooq/FutureResult;[deprecated]
@3.17.0
+#forEach(Ljava/util/function/Consumer;)V
+#keepStatement(Z)Lorg/jooq/CloseableResultQuery;
+#keepStatement(Z)Lorg/jooq/CloseableQuery;
-#keepStatement(Z)Lorg/jooq/ResultQuery;
-#keepStatement(Z)Lorg/jooq/Query;

+###org/jooq/Routine
@1.6.8
+#getOutParameters()Ljava/util/List;
+#getInParameters()Ljava/util/List;
+#getReturnValue()Ljava/lang/Object;
+#getParameters()Ljava/util/List;
+#getPackage()Lorg/jooq/Package;
+#execute(Lorg/jooq/Configuration;)I
+#execute()I
@2.5.0
+#getSchema()Lorg/jooq/Schema;
@2.6.0
+#getName()Ljava/lang/String;
@3.5.0
+#getResults()Ljava/util/List;
@3.6.0
+#getReturnParameter()Lorg/jooq/Parameter;
+#setValue(Lorg/jooq/Parameter;Ljava/lang/Object;)V
+#getValue(Lorg/jooq/Parameter;)Ljava/lang/Object;
@3.7.0
+#getResults()Lorg/jooq/Results;
-#getResults()Ljava/util/List;
@3.8.0
+#set(Lorg/jooq/Parameter;Ljava/lang/Object;)V
+#get(Lorg/jooq/Parameter;)Ljava/lang/Object;
@3.9.0
+#getCatalog()Lorg/jooq/Catalog;
@3.11.0
-#getName()Ljava/lang/String;
-#getPackage()Lorg/jooq/Package;
@3.14.0
+#getInValue(Lorg/jooq/Parameter;)Ljava/lang/Object;
-#getCatalog()Lorg/jooq/Catalog;
-#getSchema()Lorg/jooq/Schema;

+###org/jooq/Row
@2.6.0
+#getDegree()I
+#getField(I)Lorg/jooq/Field;
+#getFields()[Lorg/jooq/Field;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.0.0-RC1
+#size()I
+#field(Lorg/jooq/Field;)Lorg/jooq/Field;
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(I)Lorg/jooq/Field;
+#fields()[Lorg/jooq/Field;
+#indexOf(Lorg/jooq/Field;)I
+#indexOf(Ljava/lang/String;)I
+#types()[Ljava/lang/Class;
+#type(I)Ljava/lang/Class;
+#type(Ljava/lang/String;)Ljava/lang/Class;
+#dataTypes()[Lorg/jooq/DataType;
+#dataType(I)Lorg/jooq/DataType;
+#dataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#isNull()Lorg/jooq/Condition;
+#isNotNull()Lorg/jooq/Condition;
-#getDegree()I
-#getField(I)Lorg/jooq/Field;
-#getFields()[Lorg/jooq/Field;
-#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
-#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
+#fields([Ljava/lang/String;)[Lorg/jooq/Field;
+#fields([I)[Lorg/jooq/Field;
@3.6.0
+#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(ILjava/lang/Class;)Lorg/jooq/Field;
+#field(ILorg/jooq/DataType;)Lorg/jooq/Field;
@3.7.0
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
+#indexOf(Lorg/jooq/Name;)I
+#type(Lorg/jooq/Name;)Ljava/lang/Class;
+#dataType(Lorg/jooq/Name;)Lorg/jooq/DataType;
@3.9.0
+#fieldStream()Ljava/util/stream/Stream;
@3.15.0
-#fieldStream()Ljava/util/stream/Stream;
-#field(Lorg/jooq/Field;)Lorg/jooq/Field;
-#field(Ljava/lang/String;)Lorg/jooq/Field;
-#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
-#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#field(I)Lorg/jooq/Field;
-#field(ILjava/lang/Class;)Lorg/jooq/Field;
-#field(ILorg/jooq/DataType;)Lorg/jooq/Field;
-#fields()[Lorg/jooq/Field;
-#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
-#fields([Ljava/lang/String;)[Lorg/jooq/Field;
-#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
-#fields([I)[Lorg/jooq/Field;
-#indexOf(Lorg/jooq/Field;)I
-#indexOf(Ljava/lang/String;)I
-#indexOf(Lorg/jooq/Name;)I
-#types()[Ljava/lang/Class;
-#type(I)Ljava/lang/Class;
-#type(Ljava/lang/String;)Ljava/lang/Class;
-#type(Lorg/jooq/Name;)Ljava/lang/Class;
-#dataTypes()[Lorg/jooq/DataType;
-#dataType(I)Lorg/jooq/DataType;
-#dataType(Ljava/lang/String;)Lorg/jooq/DataType;
-#dataType(Lorg/jooq/Name;)Lorg/jooq/DataType;
@3.16.0
+#$fields()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/Row1
@2.6.0
+#field1()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row1;)Lorg/jooq/Condition;
@3.0.0-RC1
+#equal(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;)Lorg/jooq/BetweenAndStep1;
+#between(Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep1;
+#between(Lorg/jooq/Row1;)Lorg/jooq/BetweenAndStep1;
+#between(Lorg/jooq/Record1;)Lorg/jooq/BetweenAndStep1;
+#between(Lorg/jooq/Row1;Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record1;Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;)Lorg/jooq/BetweenAndStep1;
+#betweenSymmetric(Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep1;
+#betweenSymmetric(Lorg/jooq/Row1;)Lorg/jooq/BetweenAndStep1;
+#betweenSymmetric(Lorg/jooq/Record1;)Lorg/jooq/BetweenAndStep1;
+#betweenSymmetric(Lorg/jooq/Row1;Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record1;Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;)Lorg/jooq/BetweenAndStep1;
+#notBetween(Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep1;
+#notBetween(Lorg/jooq/Row1;)Lorg/jooq/BetweenAndStep1;
+#notBetween(Lorg/jooq/Record1;)Lorg/jooq/BetweenAndStep1;
+#notBetween(Lorg/jooq/Row1;Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record1;Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;)Lorg/jooq/BetweenAndStep1;
+#notBetweenSymmetric(Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep1;
+#notBetweenSymmetric(Lorg/jooq/Row1;)Lorg/jooq/BetweenAndStep1;
+#notBetweenSymmetric(Lorg/jooq/Record1;)Lorg/jooq/BetweenAndStep1;
+#notBetweenSymmetric(Lorg/jooq/Row1;Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record1;Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row1;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record1;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function1;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function1;)Lorg/jooq/SelectField;

+###org/jooq/Row10
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep10;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep10;
+#between(Lorg/jooq/Row10;)Lorg/jooq/BetweenAndStep10;
+#between(Lorg/jooq/Record10;)Lorg/jooq/BetweenAndStep10;
+#between(Lorg/jooq/Row10;Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record10;Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep10;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep10;
+#betweenSymmetric(Lorg/jooq/Row10;)Lorg/jooq/BetweenAndStep10;
+#betweenSymmetric(Lorg/jooq/Record10;)Lorg/jooq/BetweenAndStep10;
+#betweenSymmetric(Lorg/jooq/Row10;Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record10;Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep10;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep10;
+#notBetween(Lorg/jooq/Row10;)Lorg/jooq/BetweenAndStep10;
+#notBetween(Lorg/jooq/Record10;)Lorg/jooq/BetweenAndStep10;
+#notBetween(Lorg/jooq/Row10;Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record10;Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep10;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep10;
+#notBetweenSymmetric(Lorg/jooq/Row10;)Lorg/jooq/BetweenAndStep10;
+#notBetweenSymmetric(Lorg/jooq/Record10;)Lorg/jooq/BetweenAndStep10;
+#notBetweenSymmetric(Lorg/jooq/Row10;Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record10;Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row10;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record10;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function10;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function10;)Lorg/jooq/SelectField;

+###org/jooq/Row11
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep11;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep11;
+#between(Lorg/jooq/Row11;)Lorg/jooq/BetweenAndStep11;
+#between(Lorg/jooq/Record11;)Lorg/jooq/BetweenAndStep11;
+#between(Lorg/jooq/Row11;Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record11;Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep11;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep11;
+#betweenSymmetric(Lorg/jooq/Row11;)Lorg/jooq/BetweenAndStep11;
+#betweenSymmetric(Lorg/jooq/Record11;)Lorg/jooq/BetweenAndStep11;
+#betweenSymmetric(Lorg/jooq/Row11;Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record11;Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep11;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep11;
+#notBetween(Lorg/jooq/Row11;)Lorg/jooq/BetweenAndStep11;
+#notBetween(Lorg/jooq/Record11;)Lorg/jooq/BetweenAndStep11;
+#notBetween(Lorg/jooq/Row11;Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record11;Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep11;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep11;
+#notBetweenSymmetric(Lorg/jooq/Row11;)Lorg/jooq/BetweenAndStep11;
+#notBetweenSymmetric(Lorg/jooq/Record11;)Lorg/jooq/BetweenAndStep11;
+#notBetweenSymmetric(Lorg/jooq/Row11;Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record11;Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row11;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record11;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function11;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function11;)Lorg/jooq/SelectField;

+###org/jooq/Row12
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep12;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep12;
+#between(Lorg/jooq/Row12;)Lorg/jooq/BetweenAndStep12;
+#between(Lorg/jooq/Record12;)Lorg/jooq/BetweenAndStep12;
+#between(Lorg/jooq/Row12;Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record12;Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep12;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep12;
+#betweenSymmetric(Lorg/jooq/Row12;)Lorg/jooq/BetweenAndStep12;
+#betweenSymmetric(Lorg/jooq/Record12;)Lorg/jooq/BetweenAndStep12;
+#betweenSymmetric(Lorg/jooq/Row12;Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record12;Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep12;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep12;
+#notBetween(Lorg/jooq/Row12;)Lorg/jooq/BetweenAndStep12;
+#notBetween(Lorg/jooq/Record12;)Lorg/jooq/BetweenAndStep12;
+#notBetween(Lorg/jooq/Row12;Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record12;Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep12;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep12;
+#notBetweenSymmetric(Lorg/jooq/Row12;)Lorg/jooq/BetweenAndStep12;
+#notBetweenSymmetric(Lorg/jooq/Record12;)Lorg/jooq/BetweenAndStep12;
+#notBetweenSymmetric(Lorg/jooq/Row12;Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record12;Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row12;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record12;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function12;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function12;)Lorg/jooq/SelectField;

+###org/jooq/Row13
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep13;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep13;
+#between(Lorg/jooq/Row13;)Lorg/jooq/BetweenAndStep13;
+#between(Lorg/jooq/Record13;)Lorg/jooq/BetweenAndStep13;
+#between(Lorg/jooq/Row13;Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record13;Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep13;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep13;
+#betweenSymmetric(Lorg/jooq/Row13;)Lorg/jooq/BetweenAndStep13;
+#betweenSymmetric(Lorg/jooq/Record13;)Lorg/jooq/BetweenAndStep13;
+#betweenSymmetric(Lorg/jooq/Row13;Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record13;Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep13;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep13;
+#notBetween(Lorg/jooq/Row13;)Lorg/jooq/BetweenAndStep13;
+#notBetween(Lorg/jooq/Record13;)Lorg/jooq/BetweenAndStep13;
+#notBetween(Lorg/jooq/Row13;Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record13;Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep13;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep13;
+#notBetweenSymmetric(Lorg/jooq/Row13;)Lorg/jooq/BetweenAndStep13;
+#notBetweenSymmetric(Lorg/jooq/Record13;)Lorg/jooq/BetweenAndStep13;
+#notBetweenSymmetric(Lorg/jooq/Row13;Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record13;Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row13;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record13;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function13;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function13;)Lorg/jooq/SelectField;

+###org/jooq/Row14
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep14;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep14;
+#between(Lorg/jooq/Row14;)Lorg/jooq/BetweenAndStep14;
+#between(Lorg/jooq/Record14;)Lorg/jooq/BetweenAndStep14;
+#between(Lorg/jooq/Row14;Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record14;Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep14;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep14;
+#betweenSymmetric(Lorg/jooq/Row14;)Lorg/jooq/BetweenAndStep14;
+#betweenSymmetric(Lorg/jooq/Record14;)Lorg/jooq/BetweenAndStep14;
+#betweenSymmetric(Lorg/jooq/Row14;Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record14;Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep14;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep14;
+#notBetween(Lorg/jooq/Row14;)Lorg/jooq/BetweenAndStep14;
+#notBetween(Lorg/jooq/Record14;)Lorg/jooq/BetweenAndStep14;
+#notBetween(Lorg/jooq/Row14;Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record14;Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep14;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep14;
+#notBetweenSymmetric(Lorg/jooq/Row14;)Lorg/jooq/BetweenAndStep14;
+#notBetweenSymmetric(Lorg/jooq/Record14;)Lorg/jooq/BetweenAndStep14;
+#notBetweenSymmetric(Lorg/jooq/Row14;Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record14;Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row14;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record14;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function14;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function14;)Lorg/jooq/SelectField;

+###org/jooq/Row15
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep15;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep15;
+#between(Lorg/jooq/Row15;)Lorg/jooq/BetweenAndStep15;
+#between(Lorg/jooq/Record15;)Lorg/jooq/BetweenAndStep15;
+#between(Lorg/jooq/Row15;Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record15;Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep15;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep15;
+#betweenSymmetric(Lorg/jooq/Row15;)Lorg/jooq/BetweenAndStep15;
+#betweenSymmetric(Lorg/jooq/Record15;)Lorg/jooq/BetweenAndStep15;
+#betweenSymmetric(Lorg/jooq/Row15;Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record15;Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep15;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep15;
+#notBetween(Lorg/jooq/Row15;)Lorg/jooq/BetweenAndStep15;
+#notBetween(Lorg/jooq/Record15;)Lorg/jooq/BetweenAndStep15;
+#notBetween(Lorg/jooq/Row15;Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record15;Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep15;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep15;
+#notBetweenSymmetric(Lorg/jooq/Row15;)Lorg/jooq/BetweenAndStep15;
+#notBetweenSymmetric(Lorg/jooq/Record15;)Lorg/jooq/BetweenAndStep15;
+#notBetweenSymmetric(Lorg/jooq/Row15;Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record15;Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row15;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record15;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function15;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function15;)Lorg/jooq/SelectField;

+###org/jooq/Row16
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep16;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep16;
+#between(Lorg/jooq/Row16;)Lorg/jooq/BetweenAndStep16;
+#between(Lorg/jooq/Record16;)Lorg/jooq/BetweenAndStep16;
+#between(Lorg/jooq/Row16;Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record16;Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep16;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep16;
+#betweenSymmetric(Lorg/jooq/Row16;)Lorg/jooq/BetweenAndStep16;
+#betweenSymmetric(Lorg/jooq/Record16;)Lorg/jooq/BetweenAndStep16;
+#betweenSymmetric(Lorg/jooq/Row16;Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record16;Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep16;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep16;
+#notBetween(Lorg/jooq/Row16;)Lorg/jooq/BetweenAndStep16;
+#notBetween(Lorg/jooq/Record16;)Lorg/jooq/BetweenAndStep16;
+#notBetween(Lorg/jooq/Row16;Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record16;Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep16;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep16;
+#notBetweenSymmetric(Lorg/jooq/Row16;)Lorg/jooq/BetweenAndStep16;
+#notBetweenSymmetric(Lorg/jooq/Record16;)Lorg/jooq/BetweenAndStep16;
+#notBetweenSymmetric(Lorg/jooq/Row16;Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record16;Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row16;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record16;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function16;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function16;)Lorg/jooq/SelectField;

+###org/jooq/Row17
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep17;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep17;
+#between(Lorg/jooq/Row17;)Lorg/jooq/BetweenAndStep17;
+#between(Lorg/jooq/Record17;)Lorg/jooq/BetweenAndStep17;
+#between(Lorg/jooq/Row17;Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record17;Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep17;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep17;
+#betweenSymmetric(Lorg/jooq/Row17;)Lorg/jooq/BetweenAndStep17;
+#betweenSymmetric(Lorg/jooq/Record17;)Lorg/jooq/BetweenAndStep17;
+#betweenSymmetric(Lorg/jooq/Row17;Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record17;Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep17;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep17;
+#notBetween(Lorg/jooq/Row17;)Lorg/jooq/BetweenAndStep17;
+#notBetween(Lorg/jooq/Record17;)Lorg/jooq/BetweenAndStep17;
+#notBetween(Lorg/jooq/Row17;Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record17;Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep17;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep17;
+#notBetweenSymmetric(Lorg/jooq/Row17;)Lorg/jooq/BetweenAndStep17;
+#notBetweenSymmetric(Lorg/jooq/Record17;)Lorg/jooq/BetweenAndStep17;
+#notBetweenSymmetric(Lorg/jooq/Row17;Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record17;Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row17;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record17;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function17;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function17;)Lorg/jooq/SelectField;

+###org/jooq/Row18
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#field18()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep18;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep18;
+#between(Lorg/jooq/Row18;)Lorg/jooq/BetweenAndStep18;
+#between(Lorg/jooq/Record18;)Lorg/jooq/BetweenAndStep18;
+#between(Lorg/jooq/Row18;Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record18;Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep18;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep18;
+#betweenSymmetric(Lorg/jooq/Row18;)Lorg/jooq/BetweenAndStep18;
+#betweenSymmetric(Lorg/jooq/Record18;)Lorg/jooq/BetweenAndStep18;
+#betweenSymmetric(Lorg/jooq/Row18;Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record18;Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep18;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep18;
+#notBetween(Lorg/jooq/Row18;)Lorg/jooq/BetweenAndStep18;
+#notBetween(Lorg/jooq/Record18;)Lorg/jooq/BetweenAndStep18;
+#notBetween(Lorg/jooq/Row18;Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record18;Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep18;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep18;
+#notBetweenSymmetric(Lorg/jooq/Row18;)Lorg/jooq/BetweenAndStep18;
+#notBetweenSymmetric(Lorg/jooq/Record18;)Lorg/jooq/BetweenAndStep18;
+#notBetweenSymmetric(Lorg/jooq/Row18;Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record18;Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row18;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record18;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function18;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function18;)Lorg/jooq/SelectField;

+###org/jooq/Row19
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#field18()Lorg/jooq/Field;
+#field19()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep19;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep19;
+#between(Lorg/jooq/Row19;)Lorg/jooq/BetweenAndStep19;
+#between(Lorg/jooq/Record19;)Lorg/jooq/BetweenAndStep19;
+#between(Lorg/jooq/Row19;Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record19;Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep19;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep19;
+#betweenSymmetric(Lorg/jooq/Row19;)Lorg/jooq/BetweenAndStep19;
+#betweenSymmetric(Lorg/jooq/Record19;)Lorg/jooq/BetweenAndStep19;
+#betweenSymmetric(Lorg/jooq/Row19;Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record19;Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep19;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep19;
+#notBetween(Lorg/jooq/Row19;)Lorg/jooq/BetweenAndStep19;
+#notBetween(Lorg/jooq/Record19;)Lorg/jooq/BetweenAndStep19;
+#notBetween(Lorg/jooq/Row19;Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record19;Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep19;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep19;
+#notBetweenSymmetric(Lorg/jooq/Row19;)Lorg/jooq/BetweenAndStep19;
+#notBetweenSymmetric(Lorg/jooq/Record19;)Lorg/jooq/BetweenAndStep19;
+#notBetweenSymmetric(Lorg/jooq/Row19;Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record19;Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row19;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record19;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function19;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function19;)Lorg/jooq/SelectField;

+###org/jooq/Row2
@2.6.0
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#overlaps(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#overlaps(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#overlaps(Lorg/jooq/Row2;)Lorg/jooq/Condition;
@3.0.0-RC1
+#equal(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep2;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep2;
+#between(Lorg/jooq/Row2;)Lorg/jooq/BetweenAndStep2;
+#between(Lorg/jooq/Record2;)Lorg/jooq/BetweenAndStep2;
+#between(Lorg/jooq/Row2;Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record2;Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep2;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep2;
+#betweenSymmetric(Lorg/jooq/Row2;)Lorg/jooq/BetweenAndStep2;
+#betweenSymmetric(Lorg/jooq/Record2;)Lorg/jooq/BetweenAndStep2;
+#betweenSymmetric(Lorg/jooq/Row2;Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record2;Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep2;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep2;
+#notBetween(Lorg/jooq/Row2;)Lorg/jooq/BetweenAndStep2;
+#notBetween(Lorg/jooq/Record2;)Lorg/jooq/BetweenAndStep2;
+#notBetween(Lorg/jooq/Row2;Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record2;Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep2;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep2;
+#notBetweenSymmetric(Lorg/jooq/Row2;)Lorg/jooq/BetweenAndStep2;
+#notBetweenSymmetric(Lorg/jooq/Record2;)Lorg/jooq/BetweenAndStep2;
+#notBetweenSymmetric(Lorg/jooq/Row2;Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record2;Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row2;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record2;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function2;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function2;)Lorg/jooq/SelectField;

+###org/jooq/Row20
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#field18()Lorg/jooq/Field;
+#field19()Lorg/jooq/Field;
+#field20()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep20;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep20;
+#between(Lorg/jooq/Row20;)Lorg/jooq/BetweenAndStep20;
+#between(Lorg/jooq/Record20;)Lorg/jooq/BetweenAndStep20;
+#between(Lorg/jooq/Row20;Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record20;Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep20;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep20;
+#betweenSymmetric(Lorg/jooq/Row20;)Lorg/jooq/BetweenAndStep20;
+#betweenSymmetric(Lorg/jooq/Record20;)Lorg/jooq/BetweenAndStep20;
+#betweenSymmetric(Lorg/jooq/Row20;Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record20;Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep20;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep20;
+#notBetween(Lorg/jooq/Row20;)Lorg/jooq/BetweenAndStep20;
+#notBetween(Lorg/jooq/Record20;)Lorg/jooq/BetweenAndStep20;
+#notBetween(Lorg/jooq/Row20;Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record20;Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep20;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep20;
+#notBetweenSymmetric(Lorg/jooq/Row20;)Lorg/jooq/BetweenAndStep20;
+#notBetweenSymmetric(Lorg/jooq/Record20;)Lorg/jooq/BetweenAndStep20;
+#notBetweenSymmetric(Lorg/jooq/Row20;Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record20;Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row20;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record20;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function20;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function20;)Lorg/jooq/SelectField;

+###org/jooq/Row21
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#field18()Lorg/jooq/Field;
+#field19()Lorg/jooq/Field;
+#field20()Lorg/jooq/Field;
+#field21()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep21;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep21;
+#between(Lorg/jooq/Row21;)Lorg/jooq/BetweenAndStep21;
+#between(Lorg/jooq/Record21;)Lorg/jooq/BetweenAndStep21;
+#between(Lorg/jooq/Row21;Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record21;Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep21;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep21;
+#betweenSymmetric(Lorg/jooq/Row21;)Lorg/jooq/BetweenAndStep21;
+#betweenSymmetric(Lorg/jooq/Record21;)Lorg/jooq/BetweenAndStep21;
+#betweenSymmetric(Lorg/jooq/Row21;Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record21;Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep21;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep21;
+#notBetween(Lorg/jooq/Row21;)Lorg/jooq/BetweenAndStep21;
+#notBetween(Lorg/jooq/Record21;)Lorg/jooq/BetweenAndStep21;
+#notBetween(Lorg/jooq/Row21;Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record21;Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep21;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep21;
+#notBetweenSymmetric(Lorg/jooq/Row21;)Lorg/jooq/BetweenAndStep21;
+#notBetweenSymmetric(Lorg/jooq/Record21;)Lorg/jooq/BetweenAndStep21;
+#notBetweenSymmetric(Lorg/jooq/Row21;Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record21;Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row21;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record21;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function21;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function21;)Lorg/jooq/SelectField;

+###org/jooq/Row22
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#field10()Lorg/jooq/Field;
+#field11()Lorg/jooq/Field;
+#field12()Lorg/jooq/Field;
+#field13()Lorg/jooq/Field;
+#field14()Lorg/jooq/Field;
+#field15()Lorg/jooq/Field;
+#field16()Lorg/jooq/Field;
+#field17()Lorg/jooq/Field;
+#field18()Lorg/jooq/Field;
+#field19()Lorg/jooq/Field;
+#field20()Lorg/jooq/Field;
+#field21()Lorg/jooq/Field;
+#field22()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep22;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep22;
+#between(Lorg/jooq/Row22;)Lorg/jooq/BetweenAndStep22;
+#between(Lorg/jooq/Record22;)Lorg/jooq/BetweenAndStep22;
+#between(Lorg/jooq/Row22;Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record22;Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep22;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep22;
+#betweenSymmetric(Lorg/jooq/Row22;)Lorg/jooq/BetweenAndStep22;
+#betweenSymmetric(Lorg/jooq/Record22;)Lorg/jooq/BetweenAndStep22;
+#betweenSymmetric(Lorg/jooq/Row22;Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record22;Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep22;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep22;
+#notBetween(Lorg/jooq/Row22;)Lorg/jooq/BetweenAndStep22;
+#notBetween(Lorg/jooq/Record22;)Lorg/jooq/BetweenAndStep22;
+#notBetween(Lorg/jooq/Row22;Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record22;Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep22;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep22;
+#notBetweenSymmetric(Lorg/jooq/Row22;)Lorg/jooq/BetweenAndStep22;
+#notBetweenSymmetric(Lorg/jooq/Record22;)Lorg/jooq/BetweenAndStep22;
+#notBetweenSymmetric(Lorg/jooq/Row22;Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record22;Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row22;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record22;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function22;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function22;)Lorg/jooq/SelectField;

+###org/jooq/Row3
@2.6.0
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row3;)Lorg/jooq/Condition;
@3.0.0-RC1
+#equal(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep3;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep3;
+#between(Lorg/jooq/Row3;)Lorg/jooq/BetweenAndStep3;
+#between(Lorg/jooq/Record3;)Lorg/jooq/BetweenAndStep3;
+#between(Lorg/jooq/Row3;Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record3;Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep3;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep3;
+#betweenSymmetric(Lorg/jooq/Row3;)Lorg/jooq/BetweenAndStep3;
+#betweenSymmetric(Lorg/jooq/Record3;)Lorg/jooq/BetweenAndStep3;
+#betweenSymmetric(Lorg/jooq/Row3;Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record3;Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep3;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep3;
+#notBetween(Lorg/jooq/Row3;)Lorg/jooq/BetweenAndStep3;
+#notBetween(Lorg/jooq/Record3;)Lorg/jooq/BetweenAndStep3;
+#notBetween(Lorg/jooq/Row3;Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record3;Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep3;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep3;
+#notBetweenSymmetric(Lorg/jooq/Row3;)Lorg/jooq/BetweenAndStep3;
+#notBetweenSymmetric(Lorg/jooq/Record3;)Lorg/jooq/BetweenAndStep3;
+#notBetweenSymmetric(Lorg/jooq/Row3;Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record3;Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row3;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record3;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function3;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function3;)Lorg/jooq/SelectField;

+###org/jooq/Row4
@2.6.0
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row4;)Lorg/jooq/Condition;
@3.0.0-RC1
+#equal(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep4;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep4;
+#between(Lorg/jooq/Row4;)Lorg/jooq/BetweenAndStep4;
+#between(Lorg/jooq/Record4;)Lorg/jooq/BetweenAndStep4;
+#between(Lorg/jooq/Row4;Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record4;Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep4;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep4;
+#betweenSymmetric(Lorg/jooq/Row4;)Lorg/jooq/BetweenAndStep4;
+#betweenSymmetric(Lorg/jooq/Record4;)Lorg/jooq/BetweenAndStep4;
+#betweenSymmetric(Lorg/jooq/Row4;Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record4;Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep4;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep4;
+#notBetween(Lorg/jooq/Row4;)Lorg/jooq/BetweenAndStep4;
+#notBetween(Lorg/jooq/Record4;)Lorg/jooq/BetweenAndStep4;
+#notBetween(Lorg/jooq/Row4;Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record4;Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep4;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep4;
+#notBetweenSymmetric(Lorg/jooq/Row4;)Lorg/jooq/BetweenAndStep4;
+#notBetweenSymmetric(Lorg/jooq/Record4;)Lorg/jooq/BetweenAndStep4;
+#notBetweenSymmetric(Lorg/jooq/Row4;Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record4;Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row4;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record4;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function4;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function4;)Lorg/jooq/SelectField;

+###org/jooq/Row5
@2.6.0
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row5;)Lorg/jooq/Condition;
@3.0.0-RC1
+#equal(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep5;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep5;
+#between(Lorg/jooq/Row5;)Lorg/jooq/BetweenAndStep5;
+#between(Lorg/jooq/Record5;)Lorg/jooq/BetweenAndStep5;
+#between(Lorg/jooq/Row5;Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record5;Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep5;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep5;
+#betweenSymmetric(Lorg/jooq/Row5;)Lorg/jooq/BetweenAndStep5;
+#betweenSymmetric(Lorg/jooq/Record5;)Lorg/jooq/BetweenAndStep5;
+#betweenSymmetric(Lorg/jooq/Row5;Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record5;Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep5;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep5;
+#notBetween(Lorg/jooq/Row5;)Lorg/jooq/BetweenAndStep5;
+#notBetween(Lorg/jooq/Record5;)Lorg/jooq/BetweenAndStep5;
+#notBetween(Lorg/jooq/Row5;Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record5;Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep5;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep5;
+#notBetweenSymmetric(Lorg/jooq/Row5;)Lorg/jooq/BetweenAndStep5;
+#notBetweenSymmetric(Lorg/jooq/Record5;)Lorg/jooq/BetweenAndStep5;
+#notBetweenSymmetric(Lorg/jooq/Row5;Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record5;Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row5;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record5;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function5;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function5;)Lorg/jooq/SelectField;

+###org/jooq/Row6
@2.6.0
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row6;)Lorg/jooq/Condition;
@3.0.0-RC1
+#equal(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep6;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep6;
+#between(Lorg/jooq/Row6;)Lorg/jooq/BetweenAndStep6;
+#between(Lorg/jooq/Record6;)Lorg/jooq/BetweenAndStep6;
+#between(Lorg/jooq/Row6;Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record6;Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep6;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep6;
+#betweenSymmetric(Lorg/jooq/Row6;)Lorg/jooq/BetweenAndStep6;
+#betweenSymmetric(Lorg/jooq/Record6;)Lorg/jooq/BetweenAndStep6;
+#betweenSymmetric(Lorg/jooq/Row6;Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record6;Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep6;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep6;
+#notBetween(Lorg/jooq/Row6;)Lorg/jooq/BetweenAndStep6;
+#notBetween(Lorg/jooq/Record6;)Lorg/jooq/BetweenAndStep6;
+#notBetween(Lorg/jooq/Row6;Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record6;Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep6;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep6;
+#notBetweenSymmetric(Lorg/jooq/Row6;)Lorg/jooq/BetweenAndStep6;
+#notBetweenSymmetric(Lorg/jooq/Record6;)Lorg/jooq/BetweenAndStep6;
+#notBetweenSymmetric(Lorg/jooq/Row6;Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record6;Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row6;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record6;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function6;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function6;)Lorg/jooq/SelectField;

+###org/jooq/Row7
@2.6.0
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row7;)Lorg/jooq/Condition;
@3.0.0-RC1
+#equal(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep7;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep7;
+#between(Lorg/jooq/Row7;)Lorg/jooq/BetweenAndStep7;
+#between(Lorg/jooq/Record7;)Lorg/jooq/BetweenAndStep7;
+#between(Lorg/jooq/Row7;Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record7;Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep7;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep7;
+#betweenSymmetric(Lorg/jooq/Row7;)Lorg/jooq/BetweenAndStep7;
+#betweenSymmetric(Lorg/jooq/Record7;)Lorg/jooq/BetweenAndStep7;
+#betweenSymmetric(Lorg/jooq/Row7;Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record7;Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep7;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep7;
+#notBetween(Lorg/jooq/Row7;)Lorg/jooq/BetweenAndStep7;
+#notBetween(Lorg/jooq/Record7;)Lorg/jooq/BetweenAndStep7;
+#notBetween(Lorg/jooq/Row7;Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record7;Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep7;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep7;
+#notBetweenSymmetric(Lorg/jooq/Row7;)Lorg/jooq/BetweenAndStep7;
+#notBetweenSymmetric(Lorg/jooq/Record7;)Lorg/jooq/BetweenAndStep7;
+#notBetweenSymmetric(Lorg/jooq/Row7;Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record7;Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row7;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record7;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function7;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function7;)Lorg/jooq/SelectField;

+###org/jooq/Row8
@2.6.0
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row8;)Lorg/jooq/Condition;
@3.0.0-RC1
+#equal(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep8;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep8;
+#between(Lorg/jooq/Row8;)Lorg/jooq/BetweenAndStep8;
+#between(Lorg/jooq/Record8;)Lorg/jooq/BetweenAndStep8;
+#between(Lorg/jooq/Row8;Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record8;Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep8;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep8;
+#betweenSymmetric(Lorg/jooq/Row8;)Lorg/jooq/BetweenAndStep8;
+#betweenSymmetric(Lorg/jooq/Record8;)Lorg/jooq/BetweenAndStep8;
+#betweenSymmetric(Lorg/jooq/Row8;Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record8;Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep8;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep8;
+#notBetween(Lorg/jooq/Row8;)Lorg/jooq/BetweenAndStep8;
+#notBetween(Lorg/jooq/Record8;)Lorg/jooq/BetweenAndStep8;
+#notBetween(Lorg/jooq/Row8;Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record8;Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep8;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep8;
+#notBetweenSymmetric(Lorg/jooq/Row8;)Lorg/jooq/BetweenAndStep8;
+#notBetweenSymmetric(Lorg/jooq/Record8;)Lorg/jooq/BetweenAndStep8;
+#notBetweenSymmetric(Lorg/jooq/Row8;Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record8;Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row8;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record8;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function8;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function8;)Lorg/jooq/SelectField;

+###org/jooq/Row9
@3.0.0-RC1
+#field1()Lorg/jooq/Field;
+#field2()Lorg/jooq/Field;
+#field3()Lorg/jooq/Field;
+#field4()Lorg/jooq/Field;
+#field5()Lorg/jooq/Field;
+#field6()Lorg/jooq/Field;
+#field7()Lorg/jooq/Field;
+#field8()Lorg/jooq/Field;
+#field9()Lorg/jooq/Field;
+#equal(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#equal(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#eq(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#notEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#ne(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#lessThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#lt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#lessOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#le(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#greaterThan(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#gt(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#greaterOrEqual(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#ge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep9;
+#between(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep9;
+#between(Lorg/jooq/Row9;)Lorg/jooq/BetweenAndStep9;
+#between(Lorg/jooq/Record9;)Lorg/jooq/BetweenAndStep9;
+#between(Lorg/jooq/Row9;Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record9;Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#betweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep9;
+#betweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep9;
+#betweenSymmetric(Lorg/jooq/Row9;)Lorg/jooq/BetweenAndStep9;
+#betweenSymmetric(Lorg/jooq/Record9;)Lorg/jooq/BetweenAndStep9;
+#betweenSymmetric(Lorg/jooq/Row9;Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record9;Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#notBetween(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep9;
+#notBetween(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep9;
+#notBetween(Lorg/jooq/Row9;)Lorg/jooq/BetweenAndStep9;
+#notBetween(Lorg/jooq/Record9;)Lorg/jooq/BetweenAndStep9;
+#notBetween(Lorg/jooq/Row9;Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record9;Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/BetweenAndStep9;
+#notBetweenSymmetric(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/BetweenAndStep9;
+#notBetweenSymmetric(Lorg/jooq/Row9;)Lorg/jooq/BetweenAndStep9;
+#notBetweenSymmetric(Lorg/jooq/Record9;)Lorg/jooq/BetweenAndStep9;
+#notBetweenSymmetric(Lorg/jooq/Row9;Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record9;Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#isDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Row9;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record9;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.15.0
+#mapping(Lorg/jooq/Function9;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Lorg/jooq/Function9;)Lorg/jooq/SelectField;

+###org/jooq/RowN
@2.6.0
+#equal(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#equal([Ljava/lang/Object;)Lorg/jooq/Condition;
+#equal([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#eq([Ljava/lang/Object;)Lorg/jooq/Condition;
+#eq([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#notEqual([Ljava/lang/Object;)Lorg/jooq/Condition;
+#notEqual([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#ne([Ljava/lang/Object;)Lorg/jooq/Condition;
+#ne([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#in(Ljava/util/Collection;)Lorg/jooq/Condition;
+#in([Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#notIn(Ljava/util/Collection;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/RowN;)Lorg/jooq/Condition;
@3.0.0-RC1
+#equal(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#lessThan([Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessThan([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#lt([Ljava/lang/Object;)Lorg/jooq/Condition;
+#lt([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#lessOrEqual([Ljava/lang/Object;)Lorg/jooq/Condition;
+#lessOrEqual([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#le([Ljava/lang/Object;)Lorg/jooq/Condition;
+#le([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#greaterThan([Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterThan([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#gt([Ljava/lang/Object;)Lorg/jooq/Condition;
+#gt([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#greaterOrEqual([Ljava/lang/Object;)Lorg/jooq/Condition;
+#greaterOrEqual([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#ge([Ljava/lang/Object;)Lorg/jooq/Condition;
+#ge([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#between([Ljava/lang/Object;)Lorg/jooq/BetweenAndStepN;
+#between([Lorg/jooq/Field;)Lorg/jooq/BetweenAndStepN;
+#between(Lorg/jooq/RowN;)Lorg/jooq/BetweenAndStepN;
+#between(Lorg/jooq/Record;)Lorg/jooq/BetweenAndStepN;
+#between(Lorg/jooq/RowN;Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record;Lorg/jooq/Record;)Lorg/jooq/Condition;
+#betweenSymmetric([Ljava/lang/Object;)Lorg/jooq/BetweenAndStepN;
+#betweenSymmetric([Lorg/jooq/Field;)Lorg/jooq/BetweenAndStepN;
+#betweenSymmetric(Lorg/jooq/RowN;)Lorg/jooq/BetweenAndStepN;
+#betweenSymmetric(Lorg/jooq/Record;)Lorg/jooq/BetweenAndStepN;
+#betweenSymmetric(Lorg/jooq/RowN;Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record;Lorg/jooq/Record;)Lorg/jooq/Condition;
+#notBetween([Ljava/lang/Object;)Lorg/jooq/BetweenAndStepN;
+#notBetween([Lorg/jooq/Field;)Lorg/jooq/BetweenAndStepN;
+#notBetween(Lorg/jooq/RowN;)Lorg/jooq/BetweenAndStepN;
+#notBetween(Lorg/jooq/Record;)Lorg/jooq/BetweenAndStepN;
+#notBetween(Lorg/jooq/RowN;Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record;Lorg/jooq/Record;)Lorg/jooq/Condition;
+#notBetweenSymmetric([Ljava/lang/Object;)Lorg/jooq/BetweenAndStepN;
+#notBetweenSymmetric([Lorg/jooq/Field;)Lorg/jooq/BetweenAndStepN;
+#notBetweenSymmetric(Lorg/jooq/RowN;)Lorg/jooq/BetweenAndStepN;
+#notBetweenSymmetric(Lorg/jooq/Record;)Lorg/jooq/BetweenAndStepN;
+#notBetweenSymmetric(Lorg/jooq/RowN;Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record;Lorg/jooq/Record;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.1.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;[Ljava/lang/Object;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;[Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.5.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Result;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Result;)Lorg/jooq/Condition;
@3.11.0
+#isDistinctFrom(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#isDistinctFrom([Ljava/lang/Object;)Lorg/jooq/Condition;
+#isDistinctFrom([Lorg/jooq/Field;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/RowN;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#isNotDistinctFrom([Ljava/lang/Object;)Lorg/jooq/Condition;
+#isNotDistinctFrom([Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.14.0
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
@3.17.0
+#mapping(Ljava/util/function/Function;)Lorg/jooq/SelectField;
+#mapping(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/SelectField;

+###org/jooq/Schema
@1.5.7
+#getTypeMapping()Ljava/util/Map;
@1.5.9
+#getTables()Ljava/util/List;
+#getUDTs()Ljava/util/List;
+#getSequences()Ljava/util/List;
@2.0.1
+#getTable(Ljava/lang/String;)Lorg/jooq/Table;
+#getUDT(Ljava/lang/String;)Lorg/jooq/UDT;
+#getSequence(Ljava/lang/String;)Lorg/jooq/Sequence;
@2.3.0
*#getTypeMapping()Ljava/util/Map;[deprecated]
@2.6.0
+#getName()Ljava/lang/String;
@3.0.0-RC1
-#getTypeMapping()Ljava/util/Map;[deprecated]
@3.8.0
+#getCatalog()Lorg/jooq/Catalog;
@3.9.0
+#tableStream()Ljava/util/stream/Stream;
+#udtStream()Ljava/util/stream/Stream;
+#sequenceStream()Ljava/util/stream/Stream;
@3.10.0
+#getQualifiedName()Lorg/jooq/Name;
+#getUnqualifiedName()Lorg/jooq/Name;
@3.11.0
+#getComment()Ljava/lang/String;
-#getName()Ljava/lang/String;
-#getQualifiedName()Lorg/jooq/Name;
-#getUnqualifiedName()Lorg/jooq/Name;
@3.12.0
-#getComment()Ljava/lang/String;
@3.14.0
+#getTable(Lorg/jooq/Name;)Lorg/jooq/Table;
+#getUDT(Lorg/jooq/Name;)Lorg/jooq/UDT;
+#domainStream()Ljava/util/stream/Stream;
+#getDomains()Ljava/util/List;
+#getDomain(Ljava/lang/String;)Lorg/jooq/Domain;
+#getDomain(Lorg/jooq/Name;)Lorg/jooq/Domain;
+#getSequence(Lorg/jooq/Name;)Lorg/jooq/Sequence;
@3.15.0
+#primaryKeyStream()Ljava/util/stream/Stream;
+#getPrimaryKeys()Ljava/util/List;
+#getPrimaryKeys(Ljava/lang/String;)Ljava/util/List;
+#getPrimaryKeys(Lorg/jooq/Name;)Ljava/util/List;
+#uniqueKeyStream()Ljava/util/stream/Stream;
+#getUniqueKeys()Ljava/util/List;
+#getUniqueKeys(Ljava/lang/String;)Ljava/util/List;
+#getUniqueKeys(Lorg/jooq/Name;)Ljava/util/List;
+#foreignKeyStream()Ljava/util/stream/Stream;
+#getForeignKeys()Ljava/util/List;
+#getForeignKeys(Ljava/lang/String;)Ljava/util/List;
+#getForeignKeys(Lorg/jooq/Name;)Ljava/util/List;
+#indexStream()Ljava/util/stream/Stream;
+#getIndexes()Ljava/util/List;
+#getIndexes(Ljava/lang/String;)Ljava/util/List;
+#getIndexes(Lorg/jooq/Name;)Ljava/util/List;

+###org/jooq/SchemaMapping
@1.5.7
+#<init>()V
+#add(Lorg/jooq/Schema;Lorg/jooq/Schema;)V
+#add(Lorg/jooq/Schema;Ljava/lang/String;)V
+#map(Lorg/jooq/Schema;)Lorg/jooq/Schema;
+#toString()Ljava/lang/String;
@1.6.0
+#use(Lorg/jooq/Schema;)V
+#add(Lorg/jooq/Table;Lorg/jooq/Table;)V
+#add(Lorg/jooq/Table;Ljava/lang/String;)V
+#map(Lorg/jooq/Table;)Lorg/jooq/Table;
@1.6.1
+#use(Ljava/lang/String;)V
@2.0.0-RC1
+#setDefaultSchema(Ljava/lang/String;)V
+#setSchemaMapping(Ljava/util/Map;)V
@2.0.5
+#<init>(Lorg/jooq/conf/Settings;)V
+#add(Ljava/lang/String;Ljava/lang/String;)V
+#add(Ljava/lang/String;Lorg/jooq/Schema;)V
@2.6.3
+#<init>(Lorg/jooq/Configuration;)V
@3.0.0-RC1
-#<init>(Lorg/jooq/Configuration;)V
@3.0.0-RC2
+#<init>(Lorg/jooq/Configuration;)V
-#<init>()V
-#<init>(Lorg/jooq/conf/Settings;)V
@3.8.0
+#map(Lorg/jooq/Catalog;)Lorg/jooq/Catalog;

+###org/jooq/Select
@1.5.7
+#getResult()Lorg/jooq/Result;
+#fetch()Lorg/jooq/Result;
+#fetchLazy()Lorg/jooq/Cursor;
+#fetch(Lorg/jooq/Field;)Ljava/util/List;
+#fetch(I)Ljava/util/List;
+#fetch(Ljava/lang/String;)Ljava/util/List;
+#fetchOne(Lorg/jooq/Field;)Ljava/lang/Object;
+#fetchOne(I)Ljava/lang/Object;
+#fetchOne(Ljava/lang/String;)Ljava/lang/Object;
+#fetchOne()Lorg/jooq/Record;
+#fetchAny()Lorg/jooq/Record;
+#fetchMap(Lorg/jooq/Field;)Ljava/util/Map;
+#fetchMap(Lorg/jooq/Field;Lorg/jooq/Field;)Ljava/util/Map;
+#union(Lorg/jooq/Select;)Lorg/jooq/Select;
+#unionAll(Lorg/jooq/Select;)Lorg/jooq/Select;
+#except(Lorg/jooq/Select;)Lorg/jooq/Select;
+#intersect(Lorg/jooq/Select;)Lorg/jooq/Select;
+#getRecordType()Ljava/lang/Class;
+#getSelect()Ljava/util/List;
@1.6.2
-#getResult()Lorg/jooq/Result;
-#fetch()Lorg/jooq/Result;
-#fetchLazy()Lorg/jooq/Cursor;
-#fetch(Lorg/jooq/Field;)Ljava/util/List;
-#fetch(I)Ljava/util/List;
-#fetch(Ljava/lang/String;)Ljava/util/List;
-#fetchOne(Lorg/jooq/Field;)Ljava/lang/Object;
-#fetchOne(I)Ljava/lang/Object;
-#fetchOne(Ljava/lang/String;)Ljava/lang/Object;
-#fetchOne()Lorg/jooq/Record;
-#fetchAny()Lorg/jooq/Record;
-#fetchMap(Lorg/jooq/Field;)Ljava/util/Map;
-#fetchMap(Lorg/jooq/Field;Lorg/jooq/Field;)Ljava/util/Map;
-#getRecordType()Ljava/lang/Class;
@3.0.0-RC2
+#fetchCount()I
@3.5.0
*#fetchCount()I[deprecated]
@3.7.0
+#exceptAll(Lorg/jooq/Select;)Lorg/jooq/Select;
+#intersectAll(Lorg/jooq/Select;)Lorg/jooq/Select;
@3.15.0
-#fetchCount()I[deprecated]
@3.16.0
+#$with()Lorg/jooq/impl/QOM$With;
+#$select()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$select(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/Select;
+#$distinct()Z
+#$distinct(Z)Lorg/jooq/Select;
+#$from()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$from(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/Select;
+#$where()Lorg/jooq/Condition;
+#$where(Lorg/jooq/Condition;)Lorg/jooq/Select;
+#$groupBy()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$groupByDistinct()Z
+#$groupByDistinct(Z)Lorg/jooq/Select;
+#$having()Lorg/jooq/Condition;
+#$having(Lorg/jooq/Condition;)Lorg/jooq/Select;
+#$window()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$qualify()Lorg/jooq/Condition;
+#$qualify(Lorg/jooq/Condition;)Lorg/jooq/Select;
+#$orderBy()Lorg/jooq/impl/QOM$UnmodifiableList;
@3.17.0
+#$select(Ljava/util/Collection;)Lorg/jooq/Select;
+#$from(Ljava/util/Collection;)Lorg/jooq/Select;
+#$groupBy(Ljava/util/Collection;)Lorg/jooq/Select;
+#$window(Ljava/util/Collection;)Lorg/jooq/Select;
+#$orderBy(Ljava/util/Collection;)Lorg/jooq/Select;
+#$limit()Lorg/jooq/Field;
+#$limit(Lorg/jooq/Field;)Lorg/jooq/Select;
+#$limitPercent()Z
+#$limitPercent(Z)Lorg/jooq/Select;
+#$limitWithTies()Z
+#$limitWithTies(Z)Lorg/jooq/Select;
+#$offset()Lorg/jooq/Field;
+#$offset(Lorg/jooq/Field;)Lorg/jooq/Select;
-#$select(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/Select;
-#$from(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/Select;

+###org/jooq/SelectConditionStep
@1.5.7
+#and(Lorg/jooq/Condition;)Lorg/jooq/SelectConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/SelectConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/SelectConditionStep;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/SelectConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/SelectConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/SelectConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/SelectConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/SelectConditionStep;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/SelectConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/SelectConditionStep;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConditionStep;
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/SelectConditionStep;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/SelectConditionStep;
+#or(Lorg/jooq/Field;)Lorg/jooq/SelectConditionStep;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/SelectConditionStep;
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;
+#and(Lorg/jooq/SQL;)Lorg/jooq/SelectConditionStep;
+#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;
+#or(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;
+#or(Lorg/jooq/SQL;)Lorg/jooq/SelectConditionStep;
+#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;
@3.7.2
*#and(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;[deprecated]
*#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;[deprecated]
*#or(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;[deprecated]
*#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;[deprecated]
@3.15.0
-#and(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;[deprecated]
-#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;[deprecated]
-#or(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;[deprecated]
-#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;[deprecated]

+###org/jooq/SelectConnectByConditionStep
@1.6.1
+#and(Lorg/jooq/Condition;)Lorg/jooq/SelectConnectByConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/SelectConnectByConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConnectByConditionStep;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConnectByConditionStep;
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/SelectConnectByConditionStep;
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByConditionStep;
+#and(Lorg/jooq/SQL;)Lorg/jooq/SelectConnectByConditionStep;
@3.7.2
*#and(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByConditionStep;[deprecated]
@3.14.0
-###org/jooq/SelectConnectByConditionStep

+###org/jooq/SelectConnectByStep
@1.6.1
+#connectBy(Lorg/jooq/Condition;)Lorg/jooq/SelectConnectByConditionStep;
+#connectBy(Ljava/lang/String;)Lorg/jooq/SelectConnectByConditionStep;
+#connectBy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConnectByConditionStep;
+#connectByNoCycle(Lorg/jooq/Condition;)Lorg/jooq/SelectConnectByConditionStep;
+#connectByNoCycle(Ljava/lang/String;)Lorg/jooq/SelectConnectByConditionStep;
+#connectByNoCycle(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConnectByConditionStep;
@2.5.0
+#connectBy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConnectByConditionStep;
+#connectByNoCycle(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConnectByConditionStep;
@3.1.0
+#connectBy(Lorg/jooq/Field;)Lorg/jooq/SelectConnectByConditionStep;
+#connectByNoCycle(Lorg/jooq/Field;)Lorg/jooq/SelectConnectByConditionStep;
@3.7.0
+#connectBy(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByConditionStep;
+#connectBy(Lorg/jooq/SQL;)Lorg/jooq/SelectConnectByConditionStep;
+#connectByNoCycle(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByConditionStep;
+#connectByNoCycle(Lorg/jooq/SQL;)Lorg/jooq/SelectConnectByConditionStep;
@3.7.2
*#connectBy(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByConditionStep;[deprecated]
*#connectByNoCycle(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByConditionStep;[deprecated]
@3.10.0
+#startWith(Lorg/jooq/Condition;)Lorg/jooq/SelectConnectByAfterStartWithStep;
+#startWith(Lorg/jooq/Field;)Lorg/jooq/SelectConnectByAfterStartWithStep;
+#startWith(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByAfterStartWithStep;[deprecated]
+#startWith(Lorg/jooq/SQL;)Lorg/jooq/SelectConnectByAfterStartWithStep;
+#startWith(Ljava/lang/String;)Lorg/jooq/SelectConnectByAfterStartWithStep;
+#startWith(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConnectByAfterStartWithStep;
+#startWith(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConnectByAfterStartWithStep;
@3.14.0
-#connectBy(Lorg/jooq/Condition;)Lorg/jooq/SelectConnectByConditionStep;
-#connectBy(Lorg/jooq/Field;)Lorg/jooq/SelectConnectByConditionStep;
-#connectBy(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByConditionStep;[deprecated]
-#connectBy(Lorg/jooq/SQL;)Lorg/jooq/SelectConnectByConditionStep;
-#connectBy(Ljava/lang/String;)Lorg/jooq/SelectConnectByConditionStep;
-#connectBy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConnectByConditionStep;
-#connectBy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConnectByConditionStep;
-#connectByNoCycle(Lorg/jooq/Condition;)Lorg/jooq/SelectConnectByConditionStep;
-#connectByNoCycle(Lorg/jooq/Field;)Lorg/jooq/SelectConnectByConditionStep;
-#connectByNoCycle(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByConditionStep;[deprecated]
-#connectByNoCycle(Lorg/jooq/SQL;)Lorg/jooq/SelectConnectByConditionStep;
-#connectByNoCycle(Ljava/lang/String;)Lorg/jooq/SelectConnectByConditionStep;
-#connectByNoCycle(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConnectByConditionStep;
-#connectByNoCycle(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConnectByConditionStep;
-#startWith(Lorg/jooq/Condition;)Lorg/jooq/SelectConnectByAfterStartWithStep;
-#startWith(Lorg/jooq/Field;)Lorg/jooq/SelectConnectByAfterStartWithStep;
-#startWith(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByAfterStartWithStep;[deprecated]
-#startWith(Lorg/jooq/SQL;)Lorg/jooq/SelectConnectByAfterStartWithStep;
-#startWith(Ljava/lang/String;)Lorg/jooq/SelectConnectByAfterStartWithStep;
-#startWith(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConnectByAfterStartWithStep;
-#startWith(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConnectByAfterStartWithStep;

+###org/jooq/SelectFinalStep
@1.5.7
@1.5.8
+#forUpdate()Lorg/jooq/SelectFinalStep;
+#forShare()Lorg/jooq/SelectFinalStep;
@1.6.0
+#getQuery()Lorg/jooq/SelectQuery;
@1.6.1
+#forUpdate()Lorg/jooq/SelectForUpdateOfStep;[deprecated]
*#forShare()Lorg/jooq/SelectFinalStep;[deprecated]
-#forUpdate()Lorg/jooq/SelectFinalStep;
@1.6.8
-#forUpdate()Lorg/jooq/SelectForUpdateOfStep;[deprecated]
-#forShare()Lorg/jooq/SelectFinalStep;[deprecated]

+###org/jooq/SelectForUpdateOfStep
@1.6.1
+#of([Lorg/jooq/Field;)Lorg/jooq/SelectForUpdateWaitStep;
+#of(Ljava/util/Collection;)Lorg/jooq/SelectForUpdateWaitStep;
@1.6.2
+#of([Lorg/jooq/Table;)Lorg/jooq/SelectForUpdateWaitStep;

+###org/jooq/SelectForUpdateStep
@1.6.1
+#forUpdate()Lorg/jooq/SelectForUpdateOfStep;
+#forShare()Lorg/jooq/SelectFinalStep;
@3.1.0
+#forShare()Lorg/jooq/SelectOptionStep;
-#forShare()Lorg/jooq/SelectFinalStep;
@3.12.0
+#forNoKeyUpdate()Lorg/jooq/SelectForUpdateOfStep;
+#forKeyShare()Lorg/jooq/SelectForUpdateOfStep;
@3.14.0
+#forShare()Lorg/jooq/SelectForUpdateOfStep;
-#forShare()Lorg/jooq/SelectOptionStep;

+###org/jooq/SelectForUpdateWaitStep
@1.6.1
+#wait(I)Lorg/jooq/SelectFinalStep;
+#noWait()Lorg/jooq/SelectFinalStep;
+#skipLocked()Lorg/jooq/SelectFinalStep;
@3.1.0
+#wait(I)Lorg/jooq/SelectOptionStep;
+#noWait()Lorg/jooq/SelectOptionStep;
+#skipLocked()Lorg/jooq/SelectOptionStep;
-#wait(I)Lorg/jooq/SelectFinalStep;
-#noWait()Lorg/jooq/SelectFinalStep;
-#skipLocked()Lorg/jooq/SelectFinalStep;
@3.2.0
-#wait(I)Lorg/jooq/SelectOptionStep;
-#skipLocked()Lorg/jooq/SelectOptionStep;
@3.7.0
+#skipLocked()Lorg/jooq/SelectOptionStep;
@3.13.0
+#wait(I)Lorg/jooq/SelectOptionStep;
@3.14.0
+#wait(I)Lorg/jooq/SelectForStep;
+#noWait()Lorg/jooq/SelectForStep;
+#skipLocked()Lorg/jooq/SelectForStep;
-#wait(I)Lorg/jooq/SelectOptionStep;
-#noWait()Lorg/jooq/SelectOptionStep;
-#skipLocked()Lorg/jooq/SelectOptionStep;

+###org/jooq/SelectFromStep
@1.5.7
+#from([Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinStep;
+#from(Ljava/util/Collection;)Lorg/jooq/SelectJoinStep;
+#from(Ljava/lang/String;)Lorg/jooq/SelectJoinStep;
+#from(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinStep;
@1.6.0
+#hint(Ljava/lang/String;)Lorg/jooq/SelectFromStep;
@2.5.0
+#from(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinStep;
@3.5.0
+#from(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinStep;
@3.7.0
+#from(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinStep;
@3.8.0
+#from(Lorg/jooq/Name;)Lorg/jooq/SelectJoinStep;

+###org/jooq/SelectGroupByStep
@1.5.7
+#groupBy([Lorg/jooq/Field;)Lorg/jooq/SelectHavingStep;
+#groupBy(Ljava/util/Collection;)Lorg/jooq/SelectHavingStep;
@3.0.0-RC1
+#groupBy([Lorg/jooq/GroupField;)Lorg/jooq/SelectHavingStep;
-#groupBy([Lorg/jooq/Field;)Lorg/jooq/SelectHavingStep;
@3.16.0
+#groupByDistinct([Lorg/jooq/GroupField;)Lorg/jooq/SelectHavingStep;
+#groupByDistinct(Ljava/util/Collection;)Lorg/jooq/SelectHavingStep;

+###org/jooq/SelectHavingConditionStep
@1.5.7
+#and(Lorg/jooq/Condition;)Lorg/jooq/SelectHavingConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/SelectHavingConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectHavingConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/SelectHavingConditionStep;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/SelectHavingConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/SelectHavingConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/SelectHavingConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/SelectHavingConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectHavingConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/SelectHavingConditionStep;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/SelectHavingConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/SelectHavingConditionStep;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectHavingConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectHavingConditionStep;
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/SelectHavingConditionStep;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/SelectHavingConditionStep;
+#or(Lorg/jooq/Field;)Lorg/jooq/SelectHavingConditionStep;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/SelectHavingConditionStep;
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;
+#and(Lorg/jooq/SQL;)Lorg/jooq/SelectHavingConditionStep;
+#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;
+#or(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;
+#or(Lorg/jooq/SQL;)Lorg/jooq/SelectHavingConditionStep;
+#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;
@3.7.2
*#and(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;[deprecated]
*#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;[deprecated]
*#or(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;[deprecated]
*#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;[deprecated]
@3.15.0
-#and(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;[deprecated]
-#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;[deprecated]
-#or(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;[deprecated]
-#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;[deprecated]

+###org/jooq/SelectHavingStep
@1.5.7
+#having([Lorg/jooq/Condition;)Lorg/jooq/SelectHavingConditionStep;
+#having(Ljava/util/Collection;)Lorg/jooq/SelectHavingConditionStep;
+#having(Ljava/lang/String;)Lorg/jooq/SelectHavingConditionStep;
+#having(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectHavingConditionStep;
@2.5.0
+#having(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectHavingConditionStep;
@3.1.0
+#having(Lorg/jooq/Field;)Lorg/jooq/SelectHavingConditionStep;
@3.7.0
+#having(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;
+#having(Lorg/jooq/SQL;)Lorg/jooq/SelectHavingConditionStep;
@3.7.2
*#having(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;[deprecated]
@3.11.0
+#having(Lorg/jooq/Condition;)Lorg/jooq/SelectHavingConditionStep;
@3.15.0
-#having(Ljava/lang/Boolean;)Lorg/jooq/SelectHavingConditionStep;[deprecated]

+###org/jooq/SelectJoinPartitionByStep
@2.5.0
+#partitionBy([Lorg/jooq/Field;)Lorg/jooq/SelectOnStep;
+#partitionBy(Ljava/util/Collection;)Lorg/jooq/SelectOnStep;
@3.2.0
-#partitionBy([Lorg/jooq/Field;)Lorg/jooq/SelectOnStep;
-#partitionBy(Ljava/util/Collection;)Lorg/jooq/SelectOnStep;

+###org/jooq/SelectJoinStep
@1.5.7
+#join(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
+#join(Ljava/lang/String;)Lorg/jooq/SelectOnStep;
+#join(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;
+#leftJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;[deprecated]
+#leftJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;[deprecated]
+#leftJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;[deprecated]
+#leftOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
+#leftOuterJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;
+#leftOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;
+#rightJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;[deprecated]
+#rightJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;[deprecated]
+#rightJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;[deprecated]
+#rightOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
+#rightOuterJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;
+#rightOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;
@1.6.0
+#crossJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinStep;
+#crossJoin(Ljava/lang/String;)Lorg/jooq/SelectJoinStep;
+#crossJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinStep;
+#fullOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
+#fullOuterJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;
+#fullOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;
+#naturalJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinStep;
+#naturalJoin(Ljava/lang/String;)Lorg/jooq/SelectJoinStep;
+#naturalJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinStep;
+#naturalLeftOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinStep;
+#naturalLeftOuterJoin(Ljava/lang/String;)Lorg/jooq/SelectJoinStep;
+#naturalLeftOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinStep;
+#naturalRightOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinStep;
+#naturalRightOuterJoin(Ljava/lang/String;)Lorg/jooq/SelectJoinStep;
+#naturalRightOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinStep;
@1.6.8
-#leftJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;[deprecated]
-#leftJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;[deprecated]
-#leftJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;[deprecated]
-#rightJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;[deprecated]
-#rightJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;[deprecated]
-#rightJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;[deprecated]
@2.5.0
+#join(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectOnStep;
+#crossJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinStep;
+#leftOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinPartitionByStep;
+#leftOuterJoin(Ljava/lang/String;)Lorg/jooq/SelectJoinPartitionByStep;
+#leftOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinPartitionByStep;
+#leftOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightOuterJoin(Ljava/lang/String;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinPartitionByStep;
+#fullOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectOnStep;
+#naturalJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinStep;
+#naturalLeftOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinStep;
+#naturalRightOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinStep;
-#leftOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
-#leftOuterJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;
-#leftOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;
-#rightOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
-#rightOuterJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;
-#rightOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;
@2.6.0
+#join(Lorg/jooq/TableLike;Lorg/jooq/JoinType;)Lorg/jooq/SelectOptionalOnStep;
@3.7.0
+#join(Lorg/jooq/SQL;)Lorg/jooq/SelectOnStep;
+#innerJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
+#innerJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectOnStep;
+#innerJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;
+#innerJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;
+#innerJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectOnStep;
+#crossJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinStep;
+#leftJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinPartitionByStep;
+#leftJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinPartitionByStep;
+#leftJoin(Ljava/lang/String;)Lorg/jooq/SelectJoinPartitionByStep;
+#leftJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinPartitionByStep;
+#leftJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinPartitionByStep;
+#leftOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightJoin(Ljava/lang/String;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinPartitionByStep;
+#fullOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectOnStep;
+#naturalJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinStep;
+#naturalLeftOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinStep;
+#naturalRightOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinStep;
+#leftSemiJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
+#leftAntiJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
+#crossApply(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinStep;
+#crossApply(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinStep;
+#crossApply(Ljava/lang/String;)Lorg/jooq/SelectJoinStep;
+#crossApply(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinStep;
+#crossApply(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinStep;
+#outerApply(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinStep;
+#outerApply(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinStep;
+#outerApply(Ljava/lang/String;)Lorg/jooq/SelectJoinStep;
+#outerApply(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinStep;
+#outerApply(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinStep;
+#straightJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
+#straightJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;
+#straightJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectOnStep;
@3.8.0
+#join(Lorg/jooq/Name;)Lorg/jooq/SelectOnStep;
+#innerJoin(Lorg/jooq/Name;)Lorg/jooq/SelectOnStep;
+#crossJoin(Lorg/jooq/Name;)Lorg/jooq/SelectJoinStep;
+#leftJoin(Lorg/jooq/Name;)Lorg/jooq/SelectJoinPartitionByStep;
+#leftOuterJoin(Lorg/jooq/Name;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightJoin(Lorg/jooq/Name;)Lorg/jooq/SelectJoinPartitionByStep;
+#rightOuterJoin(Lorg/jooq/Name;)Lorg/jooq/SelectJoinPartitionByStep;
+#fullOuterJoin(Lorg/jooq/Name;)Lorg/jooq/SelectOnStep;
+#naturalJoin(Lorg/jooq/Name;)Lorg/jooq/SelectJoinStep;
+#naturalLeftOuterJoin(Lorg/jooq/Name;)Lorg/jooq/SelectJoinStep;
+#naturalRightOuterJoin(Lorg/jooq/Name;)Lorg/jooq/SelectJoinStep;
+#crossApply(Lorg/jooq/Name;)Lorg/jooq/SelectJoinStep;
+#outerApply(Lorg/jooq/Name;)Lorg/jooq/SelectJoinStep;
+#straightJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectOnStep;
+#straightJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;
+#straightJoin(Lorg/jooq/Name;)Lorg/jooq/SelectOnStep;
@3.10.0
+#fullJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectOnStep;
+#fullJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectOnStep;
+#fullJoin(Ljava/lang/String;)Lorg/jooq/SelectOnStep;
+#fullJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnStep;
+#fullJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectOnStep;
+#fullJoin(Lorg/jooq/Name;)Lorg/jooq/SelectOnStep;
@3.12.0
+#naturalFullOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/SelectJoinStep;
+#naturalFullOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/SelectJoinStep;
+#naturalFullOuterJoin(Ljava/lang/String;)Lorg/jooq/SelectJoinStep;
+#naturalFullOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectJoinStep;
+#naturalFullOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectJoinStep;
+#naturalFullOuterJoin(Lorg/jooq/Name;)Lorg/jooq/SelectJoinStep;

+###org/jooq/SelectLimitStep
@1.5.7
+#limit(I)Lorg/jooq/SelectFinalStep;
+#limit(II)Lorg/jooq/SelectFinalStep;
@1.6.1
+#limit(I)Lorg/jooq/SelectOffsetStep;
-#limit(I)Lorg/jooq/SelectFinalStep;
@2.0.4
+#limit(Lorg/jooq/Param;)Lorg/jooq/SelectOffsetStep;
+#limit(ILorg/jooq/Param;)Lorg/jooq/SelectFinalStep;
+#limit(Lorg/jooq/Param;I)Lorg/jooq/SelectFinalStep;
+#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SelectFinalStep;
@2.1.0
+#limit(II)Lorg/jooq/SelectForUpdateStep;
+#limit(ILorg/jooq/Param;)Lorg/jooq/SelectForUpdateStep;
+#limit(Lorg/jooq/Param;I)Lorg/jooq/SelectForUpdateStep;
+#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SelectForUpdateStep;
-#limit(II)Lorg/jooq/SelectFinalStep;
-#limit(ILorg/jooq/Param;)Lorg/jooq/SelectFinalStep;
-#limit(Lorg/jooq/Param;I)Lorg/jooq/SelectFinalStep;
-#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SelectFinalStep;
@3.8.0
+#offset(I)Lorg/jooq/SelectLimitAfterOffsetStep;
+#offset(Lorg/jooq/Param;)Lorg/jooq/SelectLimitAfterOffsetStep;
@3.10.0
+#limit(I)Lorg/jooq/SelectWithTiesStep;
+#limit(Lorg/jooq/Param;)Lorg/jooq/SelectWithTiesStep;
+#limit(II)Lorg/jooq/SelectWithTiesAfterOffsetStep;
+#limit(ILorg/jooq/Param;)Lorg/jooq/SelectWithTiesAfterOffsetStep;
+#limit(Lorg/jooq/Param;I)Lorg/jooq/SelectWithTiesAfterOffsetStep;
+#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SelectWithTiesAfterOffsetStep;
-#limit(I)Lorg/jooq/SelectOffsetStep;
-#limit(Lorg/jooq/Param;)Lorg/jooq/SelectOffsetStep;
-#limit(II)Lorg/jooq/SelectForUpdateStep;
-#limit(ILorg/jooq/Param;)Lorg/jooq/SelectForUpdateStep;
-#limit(Lorg/jooq/Param;I)Lorg/jooq/SelectForUpdateStep;
-#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SelectForUpdateStep;
@3.11.0
+#limit(I)Lorg/jooq/SelectLimitPercentStep;
+#limit(Lorg/jooq/Param;)Lorg/jooq/SelectLimitPercentStep;
+#limit(ILorg/jooq/Param;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
+#limit(Lorg/jooq/Param;I)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
+#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
-#limit(I)Lorg/jooq/SelectWithTiesStep;
-#limit(Lorg/jooq/Param;)Lorg/jooq/SelectWithTiesStep;
-#limit(ILorg/jooq/Param;)Lorg/jooq/SelectWithTiesAfterOffsetStep;
-#limit(Lorg/jooq/Param;I)Lorg/jooq/SelectWithTiesAfterOffsetStep;
-#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SelectWithTiesAfterOffsetStep;
@3.12.0
+#limit(Ljava/lang/Number;)Lorg/jooq/SelectLimitPercentStep;
+#limit(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/SelectWithTiesAfterOffsetStep;
+#limit(Ljava/lang/Number;Lorg/jooq/Param;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
+#limit(Lorg/jooq/Param;Ljava/lang/Number;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
+#offset(Ljava/lang/Number;)Lorg/jooq/SelectLimitAfterOffsetStep;
@3.17.0
+#limit(Lorg/jooq/Field;)Lorg/jooq/SelectLimitPercentStep;
+#limit(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
+#limit(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
+#limit(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
+#offset(Lorg/jooq/Field;)Lorg/jooq/SelectLimitAfterOffsetStep;
-#limit(I)Lorg/jooq/SelectLimitPercentStep;
-#limit(Lorg/jooq/Param;)Lorg/jooq/SelectLimitPercentStep;
-#limit(II)Lorg/jooq/SelectWithTiesAfterOffsetStep;
-#limit(ILorg/jooq/Param;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
-#limit(Ljava/lang/Number;Lorg/jooq/Param;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
-#limit(Lorg/jooq/Param;I)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
-#limit(Lorg/jooq/Param;Ljava/lang/Number;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
-#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
-#offset(I)Lorg/jooq/SelectLimitAfterOffsetStep;
-#offset(Lorg/jooq/Param;)Lorg/jooq/SelectLimitAfterOffsetStep;

+###org/jooq/SelectOffsetStep
@1.6.1
+#offset(I)Lorg/jooq/SelectFinalStep;
@2.0.4
+#offset(Lorg/jooq/Param;)Lorg/jooq/SelectFinalStep;
@2.1.0
+#offset(I)Lorg/jooq/SelectForUpdateStep;
+#offset(Lorg/jooq/Param;)Lorg/jooq/SelectForUpdateStep;
-#offset(I)Lorg/jooq/SelectFinalStep;
-#offset(Lorg/jooq/Param;)Lorg/jooq/SelectFinalStep;
@3.12.0
+#offset(Ljava/lang/Number;)Lorg/jooq/SelectForUpdateStep;
@3.17.0
+#offset(Lorg/jooq/Field;)Lorg/jooq/SelectForUpdateStep;
-#offset(I)Lorg/jooq/SelectForUpdateStep;
-#offset(Lorg/jooq/Param;)Lorg/jooq/SelectForUpdateStep;

+###org/jooq/SelectOnConditionStep
@1.5.7
+#and(Lorg/jooq/Condition;)Lorg/jooq/SelectOnConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/SelectOnConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/SelectOnConditionStep;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/SelectOnConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/SelectOnConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/SelectOnConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/SelectOnConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/SelectOnConditionStep;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/SelectOnConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/SelectOnConditionStep;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectOnConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectOnConditionStep;
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/SelectOnConditionStep;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/SelectOnConditionStep;
+#or(Lorg/jooq/Field;)Lorg/jooq/SelectOnConditionStep;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/SelectOnConditionStep;
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;
+#and(Lorg/jooq/SQL;)Lorg/jooq/SelectOnConditionStep;
+#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;
+#or(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;
+#or(Lorg/jooq/SQL;)Lorg/jooq/SelectOnConditionStep;
+#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;
@3.7.2
*#and(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;[deprecated]
*#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;[deprecated]
*#or(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;[deprecated]
*#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;[deprecated]
@3.15.0
-#and(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;[deprecated]
-#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;[deprecated]
-#or(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;[deprecated]
-#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;[deprecated]

+###org/jooq/SelectOnStep
@1.5.7
+#on([Lorg/jooq/Condition;)Lorg/jooq/SelectOnConditionStep;
+#on(Ljava/lang/String;)Lorg/jooq/SelectOnConditionStep;
+#on(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectOnConditionStep;
@1.6.0
+#using([Lorg/jooq/Field;)Lorg/jooq/SelectJoinStep;
+#using(Ljava/util/Collection;)Lorg/jooq/SelectJoinStep;
@2.0.3
+#onKey()Lorg/jooq/SelectJoinStep;
+#onKey([Lorg/jooq/TableField;)Lorg/jooq/SelectJoinStep;
+#onKey(Lorg/jooq/ForeignKey;)Lorg/jooq/SelectJoinStep;
@2.5.0
+#on(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectOnConditionStep;
@3.1.0
+#on(Lorg/jooq/Field;)Lorg/jooq/SelectOnConditionStep;
@3.7.0
+#on(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;
+#on(Lorg/jooq/SQL;)Lorg/jooq/SelectOnConditionStep;
@3.7.2
*#on(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;[deprecated]
@3.11.0
+#on(Lorg/jooq/Condition;)Lorg/jooq/SelectOnConditionStep;
@3.15.0
-#on(Ljava/lang/Boolean;)Lorg/jooq/SelectOnConditionStep;[deprecated]
@3.16.0
+#onKey()Lorg/jooq/SelectOnConditionStep;
+#onKey([Lorg/jooq/TableField;)Lorg/jooq/SelectOnConditionStep;
+#onKey(Lorg/jooq/ForeignKey;)Lorg/jooq/SelectOnConditionStep;
-#onKey()Lorg/jooq/SelectJoinStep;
-#onKey([Lorg/jooq/TableField;)Lorg/jooq/SelectJoinStep;
-#onKey(Lorg/jooq/ForeignKey;)Lorg/jooq/SelectJoinStep;

+###org/jooq/SelectOptionalOnStep
@2.6.0

+###org/jooq/SelectOrderByStep
@1.5.7
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/SelectLimitStep;
+#orderBy([Lorg/jooq/SortField;)Lorg/jooq/SelectLimitStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/SelectLimitStep;
@1.6.9
+#orderBy([I)Lorg/jooq/SelectLimitStep;
@2.5.0
+#orderSiblingsBy([Lorg/jooq/Field;)Lorg/jooq/SelectLimitStep;
+#orderSiblingsBy([Lorg/jooq/SortField;)Lorg/jooq/SelectLimitStep;
+#orderSiblingsBy(Ljava/util/Collection;)Lorg/jooq/SelectLimitStep;
+#orderSiblingsBy([I)Lorg/jooq/SelectLimitStep;
@3.3.0
+#orderBy(Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep1;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep2;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep3;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep4;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep5;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep6;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep7;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep8;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep9;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep10;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep11;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep12;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep13;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep14;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep15;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep16;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep17;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep18;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep19;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep20;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep21;
+#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep22;
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/SelectSeekStepN;
+#orderBy(Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep1;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep2;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep3;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep4;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep5;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep6;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep7;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep8;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep9;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep10;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep11;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep12;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep13;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep14;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep15;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep16;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep17;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep18;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep19;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep20;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep21;
+#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep22;
+#orderBy([Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStepN;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/SelectSeekStepN;
-#orderBy([Lorg/jooq/Field;)Lorg/jooq/SelectLimitStep;
-#orderBy([Lorg/jooq/SortField;)Lorg/jooq/SelectLimitStep;
-#orderBy(Ljava/util/Collection;)Lorg/jooq/SelectLimitStep;
@3.10.0
+#orderBy(Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep1;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep2;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep3;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep4;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep5;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep6;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep7;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep8;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep9;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep10;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep11;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep12;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep13;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep14;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep15;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep16;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep17;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep18;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep19;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep20;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep21;
+#orderBy(Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStep22;
+#orderBy([Lorg/jooq/OrderField;)Lorg/jooq/SelectSeekStepN;
+#orderSiblingsBy([Lorg/jooq/OrderField;)Lorg/jooq/SelectLimitStep;
-#orderBy(Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep1;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep2;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep3;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep4;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep5;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep6;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep7;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep8;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep9;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep10;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep11;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep12;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep13;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep14;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep15;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep16;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep17;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep18;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep19;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep20;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep21;
-#orderBy(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekStep22;
-#orderBy([Lorg/jooq/Field;)Lorg/jooq/SelectSeekStepN;
-#orderBy(Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep1;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep2;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep3;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep4;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep5;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep6;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep7;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep8;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep9;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep10;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep11;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep12;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep13;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep14;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep15;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep16;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep17;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep18;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep19;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep20;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep21;
-#orderBy(Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStep22;
-#orderBy([Lorg/jooq/SortField;)Lorg/jooq/SelectSeekStepN;
-#orderSiblingsBy([Lorg/jooq/Field;)Lorg/jooq/SelectLimitStep;
-#orderSiblingsBy([Lorg/jooq/SortField;)Lorg/jooq/SelectLimitStep;
@3.14.0
-#orderSiblingsBy([Lorg/jooq/OrderField;)Lorg/jooq/SelectLimitStep;
-#orderSiblingsBy(Ljava/util/Collection;)Lorg/jooq/SelectLimitStep;
-#orderSiblingsBy([I)Lorg/jooq/SelectLimitStep;

+###org/jooq/SelectQuery
@1.5.7
+#addSelect([Lorg/jooq/Field;)V
+#addSelect(Ljava/util/Collection;)V
+#setDistinct(Z)V
+#addFrom([Lorg/jooq/TableLike;)V
+#addFrom(Ljava/util/Collection;)V
+#addJoin(Lorg/jooq/TableLike;[Lorg/jooq/Condition;)V
+#addJoin(Lorg/jooq/TableLike;Lorg/jooq/JoinType;[Lorg/jooq/Condition;)V
+#addJoin(Lorg/jooq/TableLike;Lorg/jooq/Field;Lorg/jooq/Field;)V[deprecated]
+#addJoin(Lorg/jooq/TableLike;Lorg/jooq/JoinType;Lorg/jooq/Field;Lorg/jooq/Field;)V[deprecated]
+#addGroupBy([Lorg/jooq/Field;)V
+#addGroupBy(Ljava/util/Collection;)V
+#addHaving(Lorg/jooq/Field;Ljava/lang/Object;)V[deprecated]
+#addHaving(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Comparator;)V[deprecated]
+#addHaving([Lorg/jooq/Condition;)V
+#addHaving(Ljava/util/Collection;)V
+#addHaving(Lorg/jooq/Operator;[Lorg/jooq/Condition;)V
+#addHaving(Lorg/jooq/Operator;Ljava/util/Collection;)V
@1.6.0
+#addJoinUsing(Lorg/jooq/TableLike;Ljava/util/Collection;)V
+#addJoinUsing(Lorg/jooq/TableLike;Lorg/jooq/JoinType;Ljava/util/Collection;)V
+#addHint(Ljava/lang/String;)V
-#addJoin(Lorg/jooq/TableLike;Lorg/jooq/Field;Lorg/jooq/Field;)V[deprecated]
-#addJoin(Lorg/jooq/TableLike;Lorg/jooq/JoinType;Lorg/jooq/Field;Lorg/jooq/Field;)V[deprecated]
-#addHaving(Lorg/jooq/Field;Ljava/lang/Object;)V[deprecated]
-#addHaving(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Comparator;)V[deprecated]
@1.6.1
+#addConnectBy(Lorg/jooq/Condition;)V
+#addConnectByNoCycle(Lorg/jooq/Condition;)V
+#setConnectByStartWith(Lorg/jooq/Condition;)V
@2.0.3
+#addJoinOnKey(Lorg/jooq/TableLike;Lorg/jooq/JoinType;)V
+#addJoinOnKey(Lorg/jooq/TableLike;Lorg/jooq/JoinType;[Lorg/jooq/TableField;)V
+#addJoinOnKey(Lorg/jooq/TableLike;Lorg/jooq/JoinType;Lorg/jooq/ForeignKey;)V
@2.5.0
+#addJoin(Lorg/jooq/TableLike;Lorg/jooq/JoinType;[Lorg/jooq/Condition;[Lorg/jooq/Field;)V
@2.6.0
+#addConditions([Lorg/jooq/Condition;)V
+#addConditions(Ljava/util/Collection;)V
+#addConditions(Lorg/jooq/Operator;[Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Ljava/util/Collection;)V
+#addOrderBy([Lorg/jooq/Field;)V
+#addOrderBy([Lorg/jooq/SortField;)V
+#addOrderBy(Ljava/util/Collection;)V
+#addOrderBy([I)V
+#setOrderBySiblings(Z)V
+#addLimit(I)V
+#addLimit(Lorg/jooq/Param;)V
+#addLimit(II)V
+#addLimit(Lorg/jooq/Param;I)V
+#addLimit(ILorg/jooq/Param;)V
+#addLimit(Lorg/jooq/Param;Lorg/jooq/Param;)V
+#setForUpdate(Z)V
+#setForUpdateOf([Lorg/jooq/Field;)V
+#setForUpdateOf(Ljava/util/Collection;)V
+#setForUpdateOf([Lorg/jooq/Table;)V
+#setForUpdateWait(I)V
+#setForUpdateNoWait()V
+#setForUpdateSkipLocked()V
+#setForShare(Z)V
@3.0.0-RC1
+#addGroupBy([Lorg/jooq/GroupField;)V
-#addGroupBy([Lorg/jooq/Field;)V
@3.1.0
+#addOption(Ljava/lang/String;)V
@3.2.0
-#addJoin(Lorg/jooq/TableLike;Lorg/jooq/JoinType;[Lorg/jooq/Condition;[Lorg/jooq/Field;)V
-#setForUpdateWait(I)V
-#setForUpdateSkipLocked()V
@3.3.0
+#addWindow([Lorg/jooq/WindowDefinition;)V
+#addWindow(Ljava/util/Collection;)V
+#addSeekAfter([Lorg/jooq/Field;)V
+#addSeekAfter(Ljava/util/Collection;)V
+#addSeekBefore([Lorg/jooq/Field;)V
+#addSeekBefore(Ljava/util/Collection;)V
@3.5.0
+#addDistinctOn([Lorg/jooq/Field;)V
+#addDistinctOn(Ljava/util/Collection;)V
+#setInto(Lorg/jooq/Table;)V
+#addFrom(Lorg/jooq/TableLike;)V
@3.6.0
+#addSelect([Lorg/jooq/SelectField;)V
+#addDistinctOn([Lorg/jooq/SelectField;)V
-#addSelect([Lorg/jooq/Field;)V
-#addDistinctOn([Lorg/jooq/Field;)V
@3.7.0
+#setForUpdateSkipLocked()V
@3.8.0
+#addOffset(I)V
+#addOffset(Lorg/jooq/Param;)V
@3.10.0
+#addOrderBy([Lorg/jooq/OrderField;)V
+#setWithTies(Z)V
-#addOrderBy([Lorg/jooq/Field;)V
-#addOrderBy([Lorg/jooq/SortField;)V
@3.11.0
+#addSelect([Lorg/jooq/SelectFieldOrAsterisk;)V
+#addDistinctOn([Lorg/jooq/SelectFieldOrAsterisk;)V
+#addJoin(Lorg/jooq/TableLike;Lorg/jooq/Condition;)V
+#addJoin(Lorg/jooq/TableLike;Lorg/jooq/JoinType;Lorg/jooq/Condition;)V
+#addHaving(Lorg/jooq/Condition;)V
+#addHaving(Lorg/jooq/Operator;Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Lorg/jooq/Condition;)V
*#addSeekBefore([Lorg/jooq/Field;)V[deprecated]
*#addSeekBefore(Ljava/util/Collection;)V[deprecated]
-#addSelect([Lorg/jooq/SelectField;)V
-#addDistinctOn([Lorg/jooq/SelectField;)V
@3.12.0
+#addQualify(Lorg/jooq/Condition;)V
+#addQualify([Lorg/jooq/Condition;)V
+#addQualify(Ljava/util/Collection;)V
+#addQualify(Lorg/jooq/Operator;Lorg/jooq/Condition;)V
+#addQualify(Lorg/jooq/Operator;[Lorg/jooq/Condition;)V
+#addQualify(Lorg/jooq/Operator;Ljava/util/Collection;)V
+#addOffset(Ljava/lang/Number;)V
+#addLimit(Ljava/lang/Number;)V
+#addLimit(Ljava/lang/Number;Ljava/lang/Number;)V
+#addLimit(Lorg/jooq/Param;Ljava/lang/Number;)V
+#addLimit(Ljava/lang/Number;Lorg/jooq/Param;)V
+#setLimitPercent(Z)V
+#setForNoKeyUpdate(Z)V
+#setForKeyShare(Z)V
@3.13.0
+#setForUpdateWait(I)V
@3.14.0
*#setForUpdateOf([Lorg/jooq/Field;)V[deprecated]
*#setForUpdateOf(Ljava/util/Collection;)V[deprecated]
*#setForUpdateOf([Lorg/jooq/Table;)V[deprecated]
*#setForUpdateWait(I)V[deprecated]
*#setForUpdateNoWait()V[deprecated]
*#setForUpdateSkipLocked()V[deprecated]
+#setForLockModeOf([Lorg/jooq/Field;)V
+#setForLockModeOf(Ljava/util/Collection;)V
+#setForLockModeOf([Lorg/jooq/Table;)V
+#setForLockModeWait(I)V
+#setForLockModeNoWait()V
+#setForLockModeSkipLocked()V
-#addConnectBy(Lorg/jooq/Condition;)V
-#addConnectByNoCycle(Lorg/jooq/Condition;)V
-#setConnectByStartWith(Lorg/jooq/Condition;)V
-#setOrderBySiblings(Z)V
@3.16.0
+#setGroupByDistinct(Z)V
@3.17.0
+#addOffset(Lorg/jooq/Field;)V
+#addLimit(Lorg/jooq/Field;)V
+#addLimit(Lorg/jooq/Field;Ljava/lang/Number;)V
+#addLimit(Ljava/lang/Number;Lorg/jooq/Field;)V
+#addLimit(Lorg/jooq/Field;Lorg/jooq/Field;)V
-#addOffset(I)V
-#addOffset(Lorg/jooq/Param;)V
-#addLimit(I)V
-#addLimit(Lorg/jooq/Param;)V
-#addLimit(II)V
-#addLimit(Lorg/jooq/Param;I)V
-#addLimit(Lorg/jooq/Param;Ljava/lang/Number;)V
-#addLimit(ILorg/jooq/Param;)V
-#addLimit(Ljava/lang/Number;Lorg/jooq/Param;)V
-#addLimit(Lorg/jooq/Param;Lorg/jooq/Param;)V

+###org/jooq/SelectSelectStep
@1.6.0
+#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
@3.6.0
+#select([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
-#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
@3.11.0
+#select([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
-#select([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;

+###org/jooq/SelectStartWithStep
@1.6.1
+#startWith(Lorg/jooq/Condition;)Lorg/jooq/SelectGroupByStep;
+#startWith(Ljava/lang/String;)Lorg/jooq/SelectGroupByStep;
+#startWith(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectGroupByStep;
@2.5.0
+#startWith(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectGroupByStep;
@3.1.0
+#startWith(Lorg/jooq/Field;)Lorg/jooq/SelectGroupByStep;
@3.7.0
+#startWith(Ljava/lang/Boolean;)Lorg/jooq/SelectGroupByStep;
+#startWith(Lorg/jooq/SQL;)Lorg/jooq/SelectGroupByStep;
@3.7.2
*#startWith(Ljava/lang/Boolean;)Lorg/jooq/SelectGroupByStep;[deprecated]
@3.14.0
-###org/jooq/SelectStartWithStep

+###org/jooq/SelectWhereStep
@1.5.7
+#where([Lorg/jooq/Condition;)Lorg/jooq/SelectConditionStep;
+#where(Ljava/util/Collection;)Lorg/jooq/SelectConditionStep;
+#where(Ljava/lang/String;)Lorg/jooq/SelectConditionStep;
+#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConditionStep;
+#whereExists(Lorg/jooq/Select;)Lorg/jooq/SelectConditionStep;
+#whereNotExists(Lorg/jooq/Select;)Lorg/jooq/SelectConditionStep;
@2.5.0
+#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConditionStep;
@3.1.0
+#where(Lorg/jooq/Field;)Lorg/jooq/SelectConditionStep;
@3.7.0
+#where(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;
+#where(Lorg/jooq/SQL;)Lorg/jooq/SelectConditionStep;
@3.7.2
*#where(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;[deprecated]
@3.11.0
+#where(Lorg/jooq/Condition;)Lorg/jooq/SelectConditionStep;
@3.15.0
-#where(Ljava/lang/Boolean;)Lorg/jooq/SelectConditionStep;[deprecated]

+###org/jooq/Sequence
@1.5.7
+#currval()Lorg/jooq/Field;
+#nextval()Lorg/jooq/Field;
@2.0.1
+#getName()Ljava/lang/String;
+#getSchema()Lorg/jooq/Schema;
+#getDataType()Lorg/jooq/DataType;
@3.9.0
+#getCatalog()Lorg/jooq/Catalog;
@3.11.0
-#getName()Ljava/lang/String;
@3.13.0
+#getStartWith()Lorg/jooq/Field;
+#getIncrementBy()Lorg/jooq/Field;
+#getMinvalue()Lorg/jooq/Field;
+#getMaxvalue()Lorg/jooq/Field;
+#getCycle()Z
+#getCache()Lorg/jooq/Field;
-#getDataType()Lorg/jooq/DataType;
@3.14.0
+#nextvals(I)Lorg/jooq/Select;
-#getCatalog()Lorg/jooq/Catalog;
-#getSchema()Lorg/jooq/Schema;

+###org/jooq/SortField
@1.5.7
@1.5.8
+#getOrder()Lorg/jooq/SortOrder;
@1.5.9
+#nullsFirst()Lorg/jooq/SortField;
+#nullsLast()Lorg/jooq/SortField;
@2.6.0
+#getName()Ljava/lang/String;
@3.16.0
+#$field()Lorg/jooq/Field;
+#$sortOrder()Lorg/jooq/SortOrder;
+#$nullOrdering()Lorg/jooq/impl/QOM$NullOrdering;

+###org/jooq/SortOrder
@1.5.8
+#toSQL()Ljava/lang/String;
+#values()[Lorg/jooq/SortOrder;
+#valueOf(Ljava/lang/String;)Lorg/jooq/SortOrder;
@3.10.0
+#toKeyword()Lorg/jooq/Keyword;

+###org/jooq/SQLDialect
@1.5.7
+#values()[Lorg/jooq/SQLDialect;
+#valueOf(Ljava/lang/String;)Lorg/jooq/SQLDialect;
+#getName()Ljava/lang/String;
+#getFactory()Ljava/lang/Class;
@2.3.0
+#getNameLC()Ljava/lang/String;
+#getNameUC()Ljava/lang/String;
@3.0.0-RC3
-#getFactory()Ljava/lang/Class;
@3.1.0
+#family()Lorg/jooq/SQLDialect;
@3.2.0
+#commercial()Z
@3.4.0
+#families()[Lorg/jooq/SQLDialect;
@3.6.0
+#predecessor()Lorg/jooq/SQLDialect;
+#precedes(Lorg/jooq/SQLDialect;)Z
@3.7.0
+#thirdParty()Lorg/jooq/SQLDialect$ThirdParty;
@3.9.0
+#isFamily()Z
+#supports(Lorg/jooq/SQLDialect;)Z
@3.12.0
+#supported()Z
+#supports(Ljava/util/Collection;)Z
@3.13.0
+#predecessors([Lorg/jooq/SQLDialect;)Ljava/util/Set;
+#supportedUntil(Lorg/jooq/SQLDialect;)Ljava/util/Set;
+#supportedUntil([Lorg/jooq/SQLDialect;)Ljava/util/Set;
+#supportedBy(Lorg/jooq/SQLDialect;)Ljava/util/Set;
+#supportedBy([Lorg/jooq/SQLDialect;)Ljava/util/Set;
+#predecessors()Ljava/util/Set;
@3.14.0
*#supports(Ljava/util/Collection;)Z[deprecated]
@3.15.0
+#isVersioned()Z

+###org/jooq/StoreQuery
@1.5.7
+#setRecord(Lorg/jooq/TableRecord;)V
+#addValue(Lorg/jooq/Field;Ljava/lang/Object;)V
+#addValueAsArray(Lorg/jooq/Field;[Ljava/lang/Object;)V
+#addValueAsArray(Lorg/jooq/Field;Ljava/util/List;)V
+#addValue(Lorg/jooq/Field;Lorg/jooq/Field;)V
@1.6.0
+#addValues(Ljava/util/Map;)V
@2.0.1
+#setRecord(Lorg/jooq/Record;)V
-#setRecord(Lorg/jooq/TableRecord;)V
@3.0.0-RC1
+#setReturning()V
+#setReturning(Lorg/jooq/Identity;)V
+#setReturning([Lorg/jooq/Field;)V
+#setReturning(Ljava/util/Collection;)V
+#getReturnedRecord()Lorg/jooq/Record;
+#getReturnedRecords()Lorg/jooq/Result;
-#addValueAsArray(Lorg/jooq/Field;[Ljava/lang/Object;)V
-#addValueAsArray(Lorg/jooq/Field;Ljava/util/List;)V
@3.11.0
+#setReturning([Lorg/jooq/SelectFieldOrAsterisk;)V
+#getResult()Lorg/jooq/Result;
-#setReturning([Lorg/jooq/Field;)V

+###org/jooq/Support
@2.0.2
+#value()[Lorg/jooq/SQLDialect;

+###org/jooq/Table
@1.5.7
@1.5.9
+#getReferences()Ljava/util/List;
+#getReferencesTo(Lorg/jooq/Table;)Ljava/util/List;
@1.6.8
+#getIdentity()Lorg/jooq/Identity;
@2.0.2
+#pivot([Lorg/jooq/Field;)Lorg/jooq/PivotForStep;
+#pivot(Ljava/util/Collection;)Lorg/jooq/PivotForStep;
@2.0.3
+#join(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
+#join(Ljava/lang/String;)Lorg/jooq/TableOnStep;
+#join(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnStep;
+#leftOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
+#leftOuterJoin(Ljava/lang/String;)Lorg/jooq/TableOnStep;
+#leftOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnStep;
+#rightOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
+#rightOuterJoin(Ljava/lang/String;)Lorg/jooq/TableOnStep;
+#rightOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnStep;
+#fullOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
+#fullOuterJoin(Ljava/lang/String;)Lorg/jooq/TableOnStep;
+#fullOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnStep;
+#crossJoin(Lorg/jooq/TableLike;)Lorg/jooq/Table;
+#crossJoin(Ljava/lang/String;)Lorg/jooq/Table;
+#crossJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#naturalJoin(Lorg/jooq/TableLike;)Lorg/jooq/Table;
+#naturalJoin(Ljava/lang/String;)Lorg/jooq/Table;
+#naturalJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#naturalLeftOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/Table;
+#naturalLeftOuterJoin(Ljava/lang/String;)Lorg/jooq/Table;
+#naturalLeftOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#naturalRightOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/Table;
+#naturalRightOuterJoin(Ljava/lang/String;)Lorg/jooq/Table;
+#naturalRightOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
@2.1.0
+#divideBy(Lorg/jooq/Table;)Lorg/jooq/DivideByOnStep;
@2.5.0
+#getSchema()Lorg/jooq/Schema;
+#getRecordType()Ljava/lang/Class;
+#join(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TableOnStep;
+#leftOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/TablePartitionByStep;
+#leftOuterJoin(Ljava/lang/String;)Lorg/jooq/TablePartitionByStep;
+#leftOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TablePartitionByStep;
+#leftOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TablePartitionByStep;
+#rightOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/TablePartitionByStep;
+#rightOuterJoin(Ljava/lang/String;)Lorg/jooq/TablePartitionByStep;
+#rightOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TablePartitionByStep;
+#rightOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TablePartitionByStep;
+#fullOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TableOnStep;
+#crossJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
+#naturalJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
+#naturalLeftOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
+#naturalRightOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
-#leftOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
-#leftOuterJoin(Ljava/lang/String;)Lorg/jooq/TableOnStep;
-#leftOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnStep;
-#rightOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
-#rightOuterJoin(Ljava/lang/String;)Lorg/jooq/TableOnStep;
-#rightOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnStep;
@2.6.0
+#getName()Ljava/lang/String;
+#as(Ljava/lang/String;)Lorg/jooq/Table;
+#join(Lorg/jooq/TableLike;Lorg/jooq/JoinType;)Lorg/jooq/TableOptionalOnStep;
@3.0.0-RC1
+#as(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/Table;
+#with(Ljava/lang/String;)Lorg/jooq/Table;
@3.0.0-RC3
+#getPrimaryKey()Lorg/jooq/UniqueKey;
+#getRecordVersion()Lorg/jooq/TableField;
+#getRecordTimestamp()Lorg/jooq/TableField;
+#getKeys()Ljava/util/List;
+#getReferencesFrom(Lorg/jooq/Table;)Ljava/util/List;
@3.1.0
+#recordType()Lorg/jooq/RecordType;
@3.2.0-alpha-01
+#versionsBetweenScn(Ljava/lang/Number;)Lorg/jooq/VersionsBetweenAndStep;
+#versionsBetweenScn(Lorg/jooq/Field;)Lorg/jooq/VersionsBetweenAndStep;
+#versionsBetweenScnMinvalue()Lorg/jooq/VersionsBetweenAndStep;
+#versionsBetweenTimestamp(Ljava/sql/Timestamp;)Lorg/jooq/VersionsBetweenAndStep;
+#versionsBetweenTimestamp(Lorg/jooq/Field;)Lorg/jooq/VersionsBetweenAndStep;
+#versionsBetweenTimestampMinvalue()Lorg/jooq/VersionsBetweenAndStep;
+#asOfScn(Ljava/lang/Number;)Lorg/jooq/Table;
+#asOfScn(Lorg/jooq/Field;)Lorg/jooq/Table;
+#asOfTimestamp(Ljava/sql/Timestamp;)Lorg/jooq/Table;
+#asOfTimestamp(Lorg/jooq/Field;)Lorg/jooq/Table;
@3.2.0
-#with(Ljava/lang/String;)Lorg/jooq/Table;
-#pivot([Lorg/jooq/Field;)Lorg/jooq/PivotForStep;
-#pivot(Ljava/util/Collection;)Lorg/jooq/PivotForStep;
-#versionsBetweenScn(Ljava/lang/Number;)Lorg/jooq/VersionsBetweenAndStep;
-#versionsBetweenScn(Lorg/jooq/Field;)Lorg/jooq/VersionsBetweenAndStep;
-#versionsBetweenScnMinvalue()Lorg/jooq/VersionsBetweenAndStep;
-#versionsBetweenTimestamp(Ljava/sql/Timestamp;)Lorg/jooq/VersionsBetweenAndStep;
-#versionsBetweenTimestamp(Lorg/jooq/Field;)Lorg/jooq/VersionsBetweenAndStep;
-#versionsBetweenTimestampMinvalue()Lorg/jooq/VersionsBetweenAndStep;
-#asOfScn(Ljava/lang/Number;)Lorg/jooq/Table;
-#asOfScn(Lorg/jooq/Field;)Lorg/jooq/Table;
-#asOfTimestamp(Ljava/sql/Timestamp;)Lorg/jooq/Table;
-#asOfTimestamp(Lorg/jooq/Field;)Lorg/jooq/Table;
@3.3.0
+#getComment()Ljava/lang/String;
@3.5.0
+#newRecord()Lorg/jooq/Record;
+#useIndex([Ljava/lang/String;)Lorg/jooq/Table;
+#useIndexForJoin([Ljava/lang/String;)Lorg/jooq/Table;
+#useIndexForOrderBy([Ljava/lang/String;)Lorg/jooq/Table;
+#useIndexForGroupBy([Ljava/lang/String;)Lorg/jooq/Table;
+#ignoreIndex([Ljava/lang/String;)Lorg/jooq/Table;
+#ignoreIndexForJoin([Ljava/lang/String;)Lorg/jooq/Table;
+#ignoreIndexForOrderBy([Ljava/lang/String;)Lorg/jooq/Table;
+#ignoreIndexForGroupBy([Ljava/lang/String;)Lorg/jooq/Table;
+#forceIndex([Ljava/lang/String;)Lorg/jooq/Table;
+#forceIndexForJoin([Ljava/lang/String;)Lorg/jooq/Table;
+#forceIndexForOrderBy([Ljava/lang/String;)Lorg/jooq/Table;
+#forceIndexForGroupBy([Ljava/lang/String;)Lorg/jooq/Table;
@3.7.0
+#join(Lorg/jooq/SQL;)Lorg/jooq/TableOnStep;
+#innerJoin(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
+#innerJoin(Lorg/jooq/SQL;)Lorg/jooq/TableOnStep;
+#innerJoin(Ljava/lang/String;)Lorg/jooq/TableOnStep;
+#innerJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnStep;
+#innerJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TableOnStep;
+#leftJoin(Lorg/jooq/TableLike;)Lorg/jooq/TablePartitionByStep;
+#leftJoin(Lorg/jooq/SQL;)Lorg/jooq/TablePartitionByStep;
+#leftJoin(Ljava/lang/String;)Lorg/jooq/TablePartitionByStep;
+#leftJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TablePartitionByStep;
+#leftJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TablePartitionByStep;
+#leftOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/TablePartitionByStep;
+#rightJoin(Lorg/jooq/TableLike;)Lorg/jooq/TablePartitionByStep;
+#rightJoin(Lorg/jooq/SQL;)Lorg/jooq/TablePartitionByStep;
+#rightJoin(Ljava/lang/String;)Lorg/jooq/TablePartitionByStep;
+#rightJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TablePartitionByStep;
+#rightJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TablePartitionByStep;
+#rightOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/TablePartitionByStep;
+#fullOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/TableOnStep;
+#crossJoin(Lorg/jooq/SQL;)Lorg/jooq/Table;
+#naturalJoin(Lorg/jooq/SQL;)Lorg/jooq/Table;
+#naturalLeftOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/Table;
+#naturalRightOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/Table;
+#crossApply(Lorg/jooq/TableLike;)Lorg/jooq/Table;
+#crossApply(Lorg/jooq/SQL;)Lorg/jooq/Table;
+#crossApply(Ljava/lang/String;)Lorg/jooq/Table;
+#crossApply(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#crossApply(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
+#outerApply(Lorg/jooq/TableLike;)Lorg/jooq/Table;
+#outerApply(Lorg/jooq/SQL;)Lorg/jooq/Table;
+#outerApply(Ljava/lang/String;)Lorg/jooq/Table;
+#outerApply(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#outerApply(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
+#straightJoin(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
+#straightJoin(Lorg/jooq/SQL;)Lorg/jooq/TableOnStep;
+#straightJoin(Ljava/lang/String;)Lorg/jooq/TableOnStep;
+#straightJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnStep;
+#straightJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TableOnStep;
+#leftSemiJoin(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
+#leftAntiJoin(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
@3.8.0
+#getDataType()Lorg/jooq/DataType;
+#join(Lorg/jooq/Name;)Lorg/jooq/TableOnStep;
+#innerJoin(Lorg/jooq/Name;)Lorg/jooq/TableOnStep;
+#leftJoin(Lorg/jooq/Name;)Lorg/jooq/TablePartitionByStep;
+#leftOuterJoin(Lorg/jooq/Name;)Lorg/jooq/TablePartitionByStep;
+#rightJoin(Lorg/jooq/Name;)Lorg/jooq/TablePartitionByStep;
+#rightOuterJoin(Lorg/jooq/Name;)Lorg/jooq/TablePartitionByStep;
+#fullOuterJoin(Lorg/jooq/Name;)Lorg/jooq/TableOnStep;
+#crossJoin(Lorg/jooq/Name;)Lorg/jooq/Table;
+#naturalJoin(Lorg/jooq/Name;)Lorg/jooq/Table;
+#naturalLeftOuterJoin(Lorg/jooq/Name;)Lorg/jooq/Table;
+#naturalRightOuterJoin(Lorg/jooq/Name;)Lorg/jooq/Table;
+#crossApply(Lorg/jooq/Name;)Lorg/jooq/Table;
+#outerApply(Lorg/jooq/Name;)Lorg/jooq/Table;
+#straightJoin(Lorg/jooq/Name;)Lorg/jooq/TableOnStep;
+#eq(Lorg/jooq/Table;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Table;)Lorg/jooq/Condition;
+#equals(Ljava/lang/Object;)Z
+#ne(Lorg/jooq/Table;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Table;)Lorg/jooq/Condition;
@3.9.0
+#getCatalog()Lorg/jooq/Catalog;
+#as(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/Table;
+#as(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/Table;
+#as(Lorg/jooq/Table;)Lorg/jooq/Table;
+#as(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/Table;
+#as(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/Table;
+#as(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/Table;
+#from(Lorg/jooq/Record;)Lorg/jooq/Record;
@3.10.0
+#getQualifiedName()Lorg/jooq/Name;
+#getUnqualifiedName()Lorg/jooq/Name;
+#getIndexes()Ljava/util/List;
+#as(Lorg/jooq/Name;)Lorg/jooq/Table;
+#as(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/Table;
+#as(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/Table;
+#as(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/Table;
+#fullJoin(Lorg/jooq/TableLike;)Lorg/jooq/TableOnStep;
+#fullJoin(Lorg/jooq/SQL;)Lorg/jooq/TableOnStep;
+#fullJoin(Ljava/lang/String;)Lorg/jooq/TableOnStep;
+#fullJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnStep;
+#fullJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TableOnStep;
+#fullJoin(Lorg/jooq/Name;)Lorg/jooq/TableOnStep;
@3.11.0
+#asterisk()Lorg/jooq/QualifiedAsterisk;
-#getName()Ljava/lang/String;
-#getQualifiedName()Lorg/jooq/Name;
-#getUnqualifiedName()Lorg/jooq/Name;
@3.12.0
+#rowid()Lorg/jooq/Field;
+#where(Lorg/jooq/Condition;)Lorg/jooq/Table;
+#where([Lorg/jooq/Condition;)Lorg/jooq/Table;
+#where(Ljava/util/Collection;)Lorg/jooq/Table;
+#where(Lorg/jooq/Field;)Lorg/jooq/Table;
+#where(Lorg/jooq/SQL;)Lorg/jooq/Table;
+#where(Ljava/lang/String;)Lorg/jooq/Table;
+#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
+#whereExists(Lorg/jooq/Select;)Lorg/jooq/Table;
+#whereNotExists(Lorg/jooq/Select;)Lorg/jooq/Table;
+#naturalFullOuterJoin(Lorg/jooq/TableLike;)Lorg/jooq/Table;
+#naturalFullOuterJoin(Lorg/jooq/SQL;)Lorg/jooq/Table;
+#naturalFullOuterJoin(Ljava/lang/String;)Lorg/jooq/Table;
+#naturalFullOuterJoin(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#naturalFullOuterJoin(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
+#naturalFullOuterJoin(Lorg/jooq/Name;)Lorg/jooq/Table;
@3.13.0
+#getType()Lorg/jooq/TableOptions$TableType;
+#getOptions()Lorg/jooq/TableOptions;
+#getChecks()Ljava/util/List;
@3.14.0
*#as(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/Table;[deprecated]
*#as(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/Table;[deprecated]
*#as(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/Table;[deprecated]
*#as(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/Table;[deprecated]
*#as(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/Table;[deprecated]
*#as(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/Table;[deprecated]
-#getCatalog()Lorg/jooq/Catalog;
-#getSchema()Lorg/jooq/Schema;
-#getComment()Ljava/lang/String;
@3.15.0
+#getUniqueKeys()Ljava/util/List;
-#getRecordType()Ljava/lang/Class;
-#getDataType()Lorg/jooq/DataType;
-#newRecord()Lorg/jooq/Record;
@3.17.0
+#getTableType()Lorg/jooq/TableOptions$TableType;
+#as(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/Table;
+#as(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/Table;
+#as(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Table;
+#as(Lorg/jooq/Name;)Lorg/jooq/SelectField;
+#as(Ljava/lang/String;)Lorg/jooq/SelectField;
-#getType()Lorg/jooq/TableOptions$TableType;

+###org/jooq/TableField
@1.5.7
+#getTable()Lorg/jooq/Table;

+###org/jooq/TableLike
@1.5.7
+#asTable()Lorg/jooq/Table;
+#asTable(Ljava/lang/String;)Lorg/jooq/Table;
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row;
+#field(Lorg/jooq/Field;)Lorg/jooq/Field;
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(I)Lorg/jooq/Field;
+#fields()[Lorg/jooq/Field;
+#asTable(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/Table;
@3.6.0
+#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(ILjava/lang/Class;)Lorg/jooq/Field;
+#field(ILorg/jooq/DataType;)Lorg/jooq/Field;
@3.7.0
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
+#fields([Ljava/lang/String;)[Lorg/jooq/Field;
+#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
+#fields([I)[Lorg/jooq/Field;
@3.9.0
+#fieldStream()Ljava/util/stream/Stream;
+#asTable(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/Table;
+#asTable(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/Table;
@3.12.0
+#indexOf(Lorg/jooq/Field;)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Lorg/jooq/Name;)I
@3.14.0
+#asTable(Lorg/jooq/Name;)Lorg/jooq/Table;
+#asTable(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/Table;
+#asTable(Lorg/jooq/Table;)Lorg/jooq/Table;
+#asTable(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/Table;
*#asTable(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/Table;[deprecated]
*#asTable(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/Table;[deprecated]
@3.15.0
-#fieldsRow()Lorg/jooq/Row;
-#fieldStream()Ljava/util/stream/Stream;
-#field(Lorg/jooq/Field;)Lorg/jooq/Field;
-#field(Ljava/lang/String;)Lorg/jooq/Field;
-#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
-#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#field(I)Lorg/jooq/Field;
-#field(ILjava/lang/Class;)Lorg/jooq/Field;
-#field(ILorg/jooq/DataType;)Lorg/jooq/Field;
-#fields()[Lorg/jooq/Field;
-#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
-#fields([Ljava/lang/String;)[Lorg/jooq/Field;
-#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
-#fields([I)[Lorg/jooq/Field;
-#indexOf(Lorg/jooq/Field;)I
-#indexOf(Ljava/lang/String;)I
-#indexOf(Lorg/jooq/Name;)I
@3.17.0
+#asMultiset()Lorg/jooq/Field;
+#asMultiset(Ljava/lang/String;)Lorg/jooq/Field;
+#asMultiset(Lorg/jooq/Name;)Lorg/jooq/Field;
+#asMultiset(Lorg/jooq/Field;)Lorg/jooq/Field;
+#asTable(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/Table;
+#asTable(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/Table;
+#asTable(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Table;

+###org/jooq/TableOnConditionStep
@2.0.3
+#and(Lorg/jooq/Condition;)Lorg/jooq/TableOnConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/TableOnConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/TableOnConditionStep;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/TableOnConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/TableOnConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/TableOnConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/TableOnConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/TableOnConditionStep;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/TableOnConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/TableOnConditionStep;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TableOnConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TableOnConditionStep;
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/TableOnConditionStep;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/TableOnConditionStep;
+#or(Lorg/jooq/Field;)Lorg/jooq/TableOnConditionStep;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/TableOnConditionStep;
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;
+#and(Lorg/jooq/SQL;)Lorg/jooq/TableOnConditionStep;
+#andNot(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;
+#or(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;
+#or(Lorg/jooq/SQL;)Lorg/jooq/TableOnConditionStep;
+#orNot(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;
@3.7.2
*#and(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;[deprecated]
*#andNot(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;[deprecated]
*#or(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;[deprecated]
*#orNot(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;[deprecated]
@3.15.0
-#and(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;[deprecated]
-#andNot(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;[deprecated]
-#or(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;[deprecated]
-#orNot(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;[deprecated]

+###org/jooq/TableOnStep
@2.0.3
+#on([Lorg/jooq/Condition;)Lorg/jooq/TableOnConditionStep;
+#on(Ljava/lang/String;)Lorg/jooq/TableOnConditionStep;
+#on(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/TableOnConditionStep;
+#using([Lorg/jooq/Field;)Lorg/jooq/Table;
+#using(Ljava/util/Collection;)Lorg/jooq/Table;
+#onKey()Lorg/jooq/TableOnConditionStep;
+#onKey([Lorg/jooq/TableField;)Lorg/jooq/TableOnConditionStep;
+#onKey(Lorg/jooq/ForeignKey;)Lorg/jooq/TableOnConditionStep;
@2.5.0
+#on(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/TableOnConditionStep;
@3.1.0
+#on(Lorg/jooq/Field;)Lorg/jooq/TableOnConditionStep;
@3.7.0
+#on(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;
+#on(Lorg/jooq/SQL;)Lorg/jooq/TableOnConditionStep;
@3.7.2
*#on(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;[deprecated]
@3.11.0
+#on(Lorg/jooq/Condition;)Lorg/jooq/TableOnConditionStep;
@3.15.0
-#on(Ljava/lang/Boolean;)Lorg/jooq/TableOnConditionStep;[deprecated]

+###org/jooq/TableOptionalOnStep
@2.6.0

+###org/jooq/TablePartitionByStep
@2.5.0
+#partitionBy([Lorg/jooq/Field;)Lorg/jooq/TableOnStep;
+#partitionBy(Ljava/util/Collection;)Lorg/jooq/TableOnStep;
@3.2.0
-#partitionBy([Lorg/jooq/Field;)Lorg/jooq/TableOnStep;
-#partitionBy(Ljava/util/Collection;)Lorg/jooq/TableOnStep;

+###org/jooq/TableRecord
@1.5.7
+#getTable()Lorg/jooq/Table;
@1.6.4
+#storeUsing([Lorg/jooq/TableField;)I
+#deleteUsing([Lorg/jooq/TableField;)I
+#refreshUsing([Lorg/jooq/TableField;)V
@2.5.0
*#storeUsing([Lorg/jooq/TableField;)I[deprecated]
*#deleteUsing([Lorg/jooq/TableField;)I[deprecated]
*#refreshUsing([Lorg/jooq/TableField;)V[deprecated]
@2.6.0
+#original()Lorg/jooq/TableRecord;
@3.0.0-RC1
+#fetchParent(Lorg/jooq/ForeignKey;)Lorg/jooq/UpdatableRecord;
-#storeUsing([Lorg/jooq/TableField;)I[deprecated]
-#deleteUsing([Lorg/jooq/TableField;)I[deprecated]
-#refreshUsing([Lorg/jooq/TableField;)V[deprecated]
@3.4.0
+#insert()I
+#insert([Lorg/jooq/Field;)I
@3.7.0
+#original()Lorg/jooq/Record;
@3.8.0
+#insert(Ljava/util/Collection;)I
@3.9.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/TableRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/TableRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;
@3.14.0
+#parent(Lorg/jooq/ForeignKey;)Lorg/jooq/Table;
@3.15.0
-#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/TableRecord;
-#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/TableRecord;
-#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
-#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/tools/Convert
@2.0.0-RC1
+#convertArray([Ljava/lang/Object;Ljava/lang/Class;)[Ljava/lang/Object;
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#convert(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;
@2.1.0
+#convertArray([Ljava/lang/Object;Lorg/jooq/Converter;)[Ljava/lang/Object;
+#convert(Ljava/lang/Object;Lorg/jooq/Converter;)Ljava/lang/Object;
+#convert(Ljava/util/List;Lorg/jooq/Converter;)Ljava/util/List;
@2.4.0
+#convert(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/List;
+#convert(Ljava/util/Collection;Lorg/jooq/Converter;)Ljava/util/List;
-#convert(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;
-#convert(Ljava/util/List;Lorg/jooq/Converter;)Ljava/util/List;
@3.0.0-RC1
+#convert([Ljava/lang/Object;[Lorg/jooq/Field;)[Ljava/lang/Object;
+#convert([Ljava/lang/Object;[Ljava/lang/Class;)[Ljava/lang/Object;
@3.10.0
+#convertCollection(Ljava/util/Collection;Ljava/lang/Class;)[Ljava/lang/Object;

+###org/jooq/tools/csv/CSVParser
@1.6.5
+#<init>()V
+#<init>(C)V
+#<init>(CC)V
+#<init>(CCC)V
+#<init>(CCCZ)V
+#<init>(CCCZZ)V
+#isPending()Z
+#parseLineMulti(Ljava/lang/String;)[Ljava/lang/String;
+#parseLine(Ljava/lang/String;)[Ljava/lang/String;

+###org/jooq/tools/csv/CSVReader
@1.6.5
+#<init>(Ljava/io/Reader;)V
+#<init>(Ljava/io/Reader;C)V
+#<init>(Ljava/io/Reader;CC)V
+#<init>(Ljava/io/Reader;CCZ)V
+#<init>(Ljava/io/Reader;CCC)V
+#<init>(Ljava/io/Reader;CCI)V
+#<init>(Ljava/io/Reader;CCCI)V
+#<init>(Ljava/io/Reader;CCCIZ)V
+#<init>(Ljava/io/Reader;CCCIZZ)V
+#readAll()Ljava/util/List;
+#readNext()[Ljava/lang/String;
+#close()V
@3.3.0
+#hasNext()Z
+#next()[Ljava/lang/String;
+#remove()V
+#next()Ljava/lang/Object;

+###org/jooq/tools/jdbc/DefaultCallableStatement
@3.0.0-RC1
+#<init>(Ljava/sql/CallableStatement;)V
+#getDelegate()Ljava/sql/CallableStatement;
+#registerOutParameter(II)V
+#registerOutParameter(III)V
+#wasNull()Z
+#getString(I)Ljava/lang/String;
+#getBoolean(I)Z
+#getByte(I)B
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getFloat(I)F
+#getDouble(I)D
+#getBigDecimal(II)Ljava/math/BigDecimal;[deprecated]
+#getBytes(I)[B
+#getDate(I)Ljava/sql/Date;
+#getTime(I)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getObject(I)Ljava/lang/Object;
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getRef(I)Ljava/sql/Ref;
+#getBlob(I)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getArray(I)Ljava/sql/Array;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#registerOutParameter(IILjava/lang/String;)V
+#registerOutParameter(Ljava/lang/String;I)V
+#registerOutParameter(Ljava/lang/String;II)V
+#registerOutParameter(Ljava/lang/String;ILjava/lang/String;)V
+#getURL(I)Ljava/net/URL;
+#setURL(Ljava/lang/String;Ljava/net/URL;)V
+#setNull(Ljava/lang/String;I)V
+#setBoolean(Ljava/lang/String;Z)V
+#setByte(Ljava/lang/String;B)V
+#setShort(Ljava/lang/String;S)V
+#setInt(Ljava/lang/String;I)V
+#setLong(Ljava/lang/String;J)V
+#setFloat(Ljava/lang/String;F)V
+#setDouble(Ljava/lang/String;D)V
+#setBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#setString(Ljava/lang/String;Ljava/lang/String;)V
+#setBytes(Ljava/lang/String;[B)V
+#setDate(Ljava/lang/String;Ljava/sql/Date;)V
+#setTime(Ljava/lang/String;Ljava/sql/Time;)V
+#setTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;II)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#setDate(Ljava/lang/String;Ljava/sql/Date;Ljava/util/Calendar;)V
+#setTime(Ljava/lang/String;Ljava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;Ljava/util/Calendar;)V
+#setNull(Ljava/lang/String;ILjava/lang/String;)V
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z
+#getByte(Ljava/lang/String;)B
+#getShort(Ljava/lang/String;)S
+#getInt(Ljava/lang/String;)I
+#getLong(Ljava/lang/String;)J
+#getFloat(Ljava/lang/String;)F
+#getDouble(Ljava/lang/String;)D
+#getBytes(Ljava/lang/String;)[B
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#setRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#setNString(Ljava/lang/String;Ljava/lang/String;)V
+#setNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#setNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#setClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#setBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#setSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;
+#getNString(I)Ljava/lang/String;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#setBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#setClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#setNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#setClob(Ljava/lang/String;Ljava/io/Reader;)V
+#setBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#setNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#getDelegate()Ljava/sql/PreparedStatement;
+#getDelegate()Ljava/sql/Statement;
@3.9.2
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#setObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;)V
+#registerOutParameter(ILjava/sql/SQLType;)V
+#registerOutParameter(ILjava/sql/SQLType;I)V
+#registerOutParameter(ILjava/sql/SQLType;Ljava/lang/String;)V
+#registerOutParameter(Ljava/lang/String;Ljava/sql/SQLType;)V
+#registerOutParameter(Ljava/lang/String;Ljava/sql/SQLType;I)V
+#registerOutParameter(Ljava/lang/String;Ljava/sql/SQLType;Ljava/lang/String;)V
@3.10.0
+#getDelegateCallableStatement()Ljava/sql/CallableStatement;

+###org/jooq/tools/jdbc/DefaultConnection
@3.0.0-RC1
+#<init>(Ljava/sql/Connection;)V
+#getDelegate()Ljava/sql/Connection;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#createStatement()Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#nativeSQL(Ljava/lang/String;)Ljava/lang/String;
+#setAutoCommit(Z)V
+#getAutoCommit()Z
+#commit()V
+#rollback()V
+#close()V
+#isClosed()Z
+#getMetaData()Ljava/sql/DatabaseMetaData;
+#setReadOnly(Z)V
+#isReadOnly()Z
+#setCatalog(Ljava/lang/String;)V
+#getCatalog()Ljava/lang/String;
+#setTransactionIsolation(I)V
+#getTransactionIsolation()I
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#createStatement(II)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#getTypeMap()Ljava/util/Map;
+#setTypeMap(Ljava/util/Map;)V
+#setHoldability(I)V
+#getHoldability()I
+#setSavepoint()Ljava/sql/Savepoint;
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#rollback(Ljava/sql/Savepoint;)V
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#createStatement(III)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#createClob()Ljava/sql/Clob;
+#createBlob()Ljava/sql/Blob;
+#createNClob()Ljava/sql/NClob;
+#createSQLXML()Ljava/sql/SQLXML;
+#isValid(I)Z
+#setClientInfo(Ljava/lang/String;Ljava/lang/String;)V
+#setClientInfo(Ljava/util/Properties;)V
+#getClientInfo(Ljava/lang/String;)Ljava/lang/String;
+#getClientInfo()Ljava/util/Properties;
+#createArrayOf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Array;
+#createStruct(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;
@3.9.2
+#setSchema(Ljava/lang/String;)V
+#getSchema()Ljava/lang/String;
+#abort(Ljava/util/concurrent/Executor;)V
+#setNetworkTimeout(Ljava/util/concurrent/Executor;I)V
+#getNetworkTimeout()I
@3.15.0
+#beginRequest()V
+#endRequest()V
+#setShardingKeyIfValid(Ljava/sql/ShardingKey;Ljava/sql/ShardingKey;I)Z
+#setShardingKeyIfValid(Ljava/sql/ShardingKey;I)Z
+#setShardingKey(Ljava/sql/ShardingKey;Ljava/sql/ShardingKey;)V
+#setShardingKey(Ljava/sql/ShardingKey;)V

+###org/jooq/tools/jdbc/DefaultPreparedStatement
@3.0.0-RC1
+#<init>(Ljava/sql/PreparedStatement;)V
+#getDelegate()Ljava/sql/PreparedStatement;
+#executeQuery()Ljava/sql/ResultSet;
+#executeUpdate()I
+#setNull(II)V
+#setBoolean(IZ)V
+#setByte(IB)V
+#setShort(IS)V
+#setInt(II)V
+#setLong(IJ)V
+#setFloat(IF)V
+#setDouble(ID)V
+#setBigDecimal(ILjava/math/BigDecimal;)V
+#setString(ILjava/lang/String;)V
+#setBytes(I[B)V
+#setDate(ILjava/sql/Date;)V
+#setTime(ILjava/sql/Time;)V
+#setTimestamp(ILjava/sql/Timestamp;)V
+#setAsciiStream(ILjava/io/InputStream;I)V
+#setUnicodeStream(ILjava/io/InputStream;I)V[deprecated]
+#setBinaryStream(ILjava/io/InputStream;I)V
+#clearParameters()V
+#setObject(ILjava/lang/Object;I)V
+#setObject(ILjava/lang/Object;)V
+#execute()Z
+#addBatch()V
+#setCharacterStream(ILjava/io/Reader;I)V
+#setRef(ILjava/sql/Ref;)V
+#setBlob(ILjava/sql/Blob;)V
+#setClob(ILjava/sql/Clob;)V
+#setArray(ILjava/sql/Array;)V
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#setDate(ILjava/sql/Date;Ljava/util/Calendar;)V
+#setTime(ILjava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
+#setNull(IILjava/lang/String;)V
+#setURL(ILjava/net/URL;)V
+#getParameterMetaData()Ljava/sql/ParameterMetaData;
+#setRowId(ILjava/sql/RowId;)V
+#setNString(ILjava/lang/String;)V
+#setNCharacterStream(ILjava/io/Reader;J)V
+#setNClob(ILjava/sql/NClob;)V
+#setClob(ILjava/io/Reader;J)V
+#setBlob(ILjava/io/InputStream;J)V
+#setNClob(ILjava/io/Reader;J)V
+#setSQLXML(ILjava/sql/SQLXML;)V
+#setObject(ILjava/lang/Object;II)V
+#setAsciiStream(ILjava/io/InputStream;J)V
+#setBinaryStream(ILjava/io/InputStream;J)V
+#setCharacterStream(ILjava/io/Reader;J)V
+#setAsciiStream(ILjava/io/InputStream;)V
+#setBinaryStream(ILjava/io/InputStream;)V
+#setCharacterStream(ILjava/io/Reader;)V
+#setNCharacterStream(ILjava/io/Reader;)V
+#setClob(ILjava/io/Reader;)V
+#setBlob(ILjava/io/InputStream;)V
+#setNClob(ILjava/io/Reader;)V
+#getDelegate()Ljava/sql/Statement;
@3.9.2
+#setObject(ILjava/lang/Object;Ljava/sql/SQLType;I)V
+#setObject(ILjava/lang/Object;Ljava/sql/SQLType;)V
+#executeLargeUpdate()J
@3.10.0
+#getDelegatePreparedStatement()Ljava/sql/PreparedStatement;

+###org/jooq/tools/jdbc/DefaultStatement
@3.0.0-RC1
+#<init>(Ljava/sql/Statement;)V
+#getDelegate()Ljava/sql/Statement;
+#execute(Ljava/lang/String;)Z
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#executeBatch()[I
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#close()V
+#getMaxFieldSize()I
+#setMaxFieldSize(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#setEscapeProcessing(Z)V
+#getQueryTimeout()I
+#setQueryTimeout(I)V
+#cancel()V
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setCursorName(Ljava/lang/String;)V
+#getResultSet()Ljava/sql/ResultSet;
+#getUpdateCount()I
+#getMoreResults()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getResultSetConcurrency()I
+#getResultSetType()I
+#addBatch(Ljava/lang/String;)V
+#clearBatch()V
+#getConnection()Ljava/sql/Connection;
+#getMoreResults(I)Z
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#getResultSetHoldability()I
+#isClosed()Z
+#setPoolable(Z)V
+#isPoolable()Z
@3.9.2
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
+#getLargeUpdateCount()J
+#setLargeMaxRows(J)V
+#getLargeMaxRows()J
+#executeLargeBatch()[J
+#executeLargeUpdate(Ljava/lang/String;)J
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J
@3.10.0
+#<init>(Ljava/sql/Statement;Ljava/sql/Connection;)V
+#getDelegateStatement()Ljava/sql/Statement;
@3.15.0
+#<init>(Ljava/sql/Statement;Ljava/sql/Connection;Ljava/util/function/Supplier;)V
+#enquoteLiteral(Ljava/lang/String;)Ljava/lang/String;
+#enquoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;
+#isSimpleIdentifier(Ljava/lang/String;)Z
+#enquoteNCharLiteral(Ljava/lang/String;)Ljava/lang/String;

+###org/jooq/tools/jdbc/JDBC41Connection
@2.4.0
+#<init>()V
+#setSchema(Ljava/lang/String;)V
+#getSchema()Ljava/lang/String;
+#abort(Ljava/util/concurrent/Executor;)V
+#setNetworkTimeout(Ljava/util/concurrent/Executor;I)V
+#getNetworkTimeout()I

+###org/jooq/tools/jdbc/JDBC41ResultSet
@2.4.0
+#<init>()V
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###org/jooq/tools/jdbc/JDBC41Statement
@2.4.0
+#<init>()V
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###org/jooq/tools/jdbc/JDBCUtils
@3.0.0-RC1
+#safeClose(Ljava/sql/Statement;)V
+#safeClose(Ljava/sql/ResultSet;)V
+#safeClose(Ljava/sql/ResultSet;Ljava/sql/PreparedStatement;)V
+#safeFree(Ljava/sql/Blob;)V
+#safeFree(Ljava/sql/Clob;)V
+#wasNull(Ljava/sql/SQLInput;Ljava/lang/Object;)Ljava/lang/Object;
+#wasNull(Ljava/sql/ResultSet;Ljava/lang/Object;)Ljava/lang/Object;
+#wasNull(Ljava/sql/CallableStatement;Ljava/lang/Object;)Ljava/lang/Object;
@3.1.0
+#dialect(Ljava/sql/Connection;)Lorg/jooq/SQLDialect;
+#dialect(Ljava/lang/String;)Lorg/jooq/SQLDialect;
+#safeClose(Ljava/sql/Connection;)V
@3.4.5
+#wasNull(Ljava/sql/SQLInput;Ljava/lang/Number;)Ljava/lang/Number;
+#wasNull(Ljava/sql/SQLInput;Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#wasNull(Ljava/sql/ResultSet;Ljava/lang/Number;)Ljava/lang/Number;
+#wasNull(Ljava/sql/ResultSet;Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#wasNull(Ljava/sql/CallableStatement;Ljava/lang/Number;)Ljava/lang/Number;
+#wasNull(Ljava/sql/CallableStatement;Ljava/lang/Boolean;)Ljava/lang/Boolean;
@3.5.0
+#driver(Ljava/lang/String;)Ljava/lang/String;
-#wasNull(Ljava/sql/SQLInput;Ljava/lang/Number;)Ljava/lang/Number;
-#wasNull(Ljava/sql/SQLInput;Ljava/lang/Boolean;)Ljava/lang/Boolean;
-#wasNull(Ljava/sql/ResultSet;Ljava/lang/Number;)Ljava/lang/Number;
-#wasNull(Ljava/sql/ResultSet;Ljava/lang/Boolean;)Ljava/lang/Boolean;
-#wasNull(Ljava/sql/CallableStatement;Ljava/lang/Number;)Ljava/lang/Number;
-#wasNull(Ljava/sql/CallableStatement;Ljava/lang/Boolean;)Ljava/lang/Boolean;
@3.5.2
+#safeFree(Ljava/sql/SQLXML;)V
+#safeFree(Ljava/sql/Array;)V
+#wasNull(Ljava/sql/SQLInput;Ljava/lang/Number;)Ljava/lang/Number;
+#wasNull(Ljava/sql/SQLInput;Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#wasNull(Ljava/sql/ResultSet;Ljava/lang/Number;)Ljava/lang/Number;
+#wasNull(Ljava/sql/ResultSet;Ljava/lang/Boolean;)Ljava/lang/Boolean;
+#wasNull(Ljava/sql/CallableStatement;Ljava/lang/Number;)Ljava/lang/Number;
+#wasNull(Ljava/sql/CallableStatement;Ljava/lang/Boolean;)Ljava/lang/Boolean;
@3.12.0
+#safeClose(Ljava/io/Closeable;)V
+#safeClose(Ljava/lang/AutoCloseable;)V
@3.14.0
+#driver(Lorg/jooq/SQLDialect;)Ljava/lang/String;
@3.15.0
+#dialect(Lio/r2dbc/spi/ConnectionFactory;)Lorg/jooq/SQLDialect;
+#dialect(Lio/r2dbc/spi/Connection;)Lorg/jooq/SQLDialect;

+###org/jooq/tools/jdbc/MockConnection
@3.0.0-RC1
+#<init>(Lorg/jooq/tools/jdbc/MockDataProvider;)V
+#createStatement()Ljava/sql/Statement;
+#createStatement(II)Ljava/sql/Statement;
+#createStatement(III)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#commit()V
+#rollback()V
+#rollback(Ljava/sql/Savepoint;)V
+#close()V
+#setSavepoint()Ljava/sql/Savepoint;
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#isClosed()Z
+#setAutoCommit(Z)V
+#getAutoCommit()Z
+#setReadOnly(Z)V
+#isReadOnly()Z
+#setCatalog(Ljava/lang/String;)V
+#getCatalog()Ljava/lang/String;
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setTransactionIsolation(I)V
+#getTransactionIsolation()I
+#setTypeMap(Ljava/util/Map;)V
+#getTypeMap()Ljava/util/Map;
+#setHoldability(I)V
+#getHoldability()I
+#isValid(I)Z
+#setClientInfo(Ljava/lang/String;Ljava/lang/String;)V
+#setClientInfo(Ljava/util/Properties;)V
+#getClientInfo(Ljava/lang/String;)Ljava/lang/String;
+#getClientInfo()Ljava/util/Properties;
+#getMetaData()Ljava/sql/DatabaseMetaData;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#nativeSQL(Ljava/lang/String;)Ljava/lang/String;
+#createClob()Ljava/sql/Clob;
+#createBlob()Ljava/sql/Blob;
+#createNClob()Ljava/sql/NClob;
+#createSQLXML()Ljava/sql/SQLXML;
+#createArrayOf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Array;
+#createStruct(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;

+###org/jooq/tools/jdbc/MockDataProvider
@3.0.0-RC1
+#execute(Lorg/jooq/tools/jdbc/MockExecuteContext;)[Lorg/jooq/tools/jdbc/MockResult;

+###org/jooq/tools/jdbc/MockExecuteContext
@3.0.0-RC1
+#<init>([Ljava/lang/String;[[Ljava/lang/Object;)V
+#<init>([Ljava/lang/String;[[Ljava/lang/Object;I)V
+#<init>([Ljava/lang/String;[[Ljava/lang/Object;[I)V
+#<init>([Ljava/lang/String;[[Ljava/lang/Object;[Ljava/lang/String;)V
+#batch()Z
+#batchSingle()Z
+#batchMultiple()Z
+#batchSQL()[Ljava/lang/String;
+#batchBindings()[[Ljava/lang/Object;
+#sql()Ljava/lang/String;
+#bindings()[Ljava/lang/Object;
+#autoGeneratedKeys()I
+#columnIndexes()[I
+#columnNames()[Ljava/lang/String;
@3.5.0
+#outParameterTypes()[I

+###org/jooq/tools/jdbc/MockFileDatabase
@3.0.0-RC1
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#execute(Lorg/jooq/tools/jdbc/MockExecuteContext;)[Lorg/jooq/tools/jdbc/MockResult;
@3.2.3
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/Reader;)V
+#<init>(Ljava/lang/String;)V
@3.9.0
+#nullLiteral(Ljava/lang/String;)Lorg/jooq/tools/jdbc/MockFileDatabase;
@3.10.0
+#queries()Ljava/util/Map;[deprecated]
@3.12.0
*#nullLiteral(Ljava/lang/String;)Lorg/jooq/tools/jdbc/MockFileDatabase;[deprecated]
+#<init>(Lorg/jooq/tools/jdbc/MockFileDatabaseConfiguration;)V
@3.13.0
+#<init>(Lorg/jooq/Source;)V

+###org/jooq/tools/jdbc/MockResult
@3.0.0-RC1
+#<init>(ILorg/jooq/Result;)V
+#toString()Ljava/lang/String;
@3.5.0
+#<init>(Lorg/jooq/Record;)V
@3.11.0
+#<init>()V
+#<init>(I)V
@3.13.0
+#<init>(Ljava/sql/SQLException;)V

+###org/jooq/tools/jdbc/MockResultSet
@3.0.0-RC1
+#<init>(Lorg/jooq/Result;)V
+#<init>(Lorg/jooq/Result;I)V
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#next()Z
+#previous()Z
+#absolute(I)Z
+#relative(I)Z
+#getRow()I
+#beforeFirst()V
+#afterLast()V
+#first()Z
+#last()Z
+#isFirst()Z
+#isBeforeFirst()Z
+#isLast()Z
+#isAfterLast()Z
+#close()V
+#isClosed()Z
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#getCursorName()Ljava/lang/String;
+#findColumn(Ljava/lang/String;)I
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getType()I
+#getConcurrency()I
+#getHoldability()I
+#wasNull()Z
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#getStatement()Ljava/sql/Statement;
+#getString(I)Ljava/lang/String;
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getNString(I)Ljava/lang/String;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(I)Z
+#getBoolean(Ljava/lang/String;)Z
+#getByte(I)B
+#getByte(Ljava/lang/String;)B
+#getShort(I)S
+#getShort(Ljava/lang/String;)S
+#getInt(I)I
+#getInt(Ljava/lang/String;)I
+#getLong(I)J
+#getLong(Ljava/lang/String;)J
+#getFloat(I)F
+#getFloat(Ljava/lang/String;)F
+#getDouble(I)D
+#getDouble(Ljava/lang/String;)D
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getBigDecimal(II)Ljava/math/BigDecimal;[deprecated]
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#getBigDecimal(Ljava/lang/String;I)Ljava/math/BigDecimal;[deprecated]
+#getBytes(I)[B
+#getBytes(Ljava/lang/String;)[B
+#getDate(I)Ljava/sql/Date;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getTime(I)Ljava/sql/Time;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getAsciiStream(I)Ljava/io/InputStream;
+#getAsciiStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getUnicodeStream(I)Ljava/io/InputStream;[deprecated]
+#getUnicodeStream(Ljava/lang/String;)Ljava/io/InputStream;[deprecated]
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getBinaryStream(I)Ljava/io/InputStream;
+#getBinaryStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getRef(I)Ljava/sql/Ref;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;
+#getBlob(I)Ljava/sql/Blob;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#getArray(I)Ljava/sql/Array;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getURL(I)Ljava/net/URL;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#getObject(I)Ljava/lang/Object;
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#rowUpdated()Z
+#rowInserted()Z
+#rowDeleted()Z
+#updateNull(I)V
+#updateBoolean(IZ)V
+#updateByte(IB)V
+#updateShort(IS)V
+#updateInt(II)V
+#updateLong(IJ)V
+#updateFloat(IF)V
+#updateDouble(ID)V
+#updateBigDecimal(ILjava/math/BigDecimal;)V
+#updateString(ILjava/lang/String;)V
+#updateBytes(I[B)V
+#updateDate(ILjava/sql/Date;)V
+#updateTime(ILjava/sql/Time;)V
+#updateTimestamp(ILjava/sql/Timestamp;)V
+#updateAsciiStream(ILjava/io/InputStream;I)V
+#updateBinaryStream(ILjava/io/InputStream;I)V
+#updateCharacterStream(ILjava/io/Reader;I)V
+#updateObject(ILjava/lang/Object;I)V
+#updateObject(ILjava/lang/Object;)V
+#updateNull(Ljava/lang/String;)V
+#updateBoolean(Ljava/lang/String;Z)V
+#updateByte(Ljava/lang/String;B)V
+#updateShort(Ljava/lang/String;S)V
+#updateInt(Ljava/lang/String;I)V
+#updateLong(Ljava/lang/String;J)V
+#updateFloat(Ljava/lang/String;F)V
+#updateDouble(Ljava/lang/String;D)V
+#updateBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#updateString(Ljava/lang/String;Ljava/lang/String;)V
+#updateBytes(Ljava/lang/String;[B)V
+#updateDate(Ljava/lang/String;Ljava/sql/Date;)V
+#updateTime(Ljava/lang/String;Ljava/sql/Time;)V
+#updateTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#updateRef(ILjava/sql/Ref;)V
+#updateRef(Ljava/lang/String;Ljava/sql/Ref;)V
+#updateRowId(ILjava/sql/RowId;)V
+#updateRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#updateBlob(ILjava/sql/Blob;)V
+#updateBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#updateClob(ILjava/sql/Clob;)V
+#updateClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#updateArray(ILjava/sql/Array;)V
+#updateArray(Ljava/lang/String;Ljava/sql/Array;)V
+#updateNString(ILjava/lang/String;)V
+#updateNString(Ljava/lang/String;Ljava/lang/String;)V
+#updateNClob(ILjava/sql/NClob;)V
+#updateNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#updateSQLXML(ILjava/sql/SQLXML;)V
+#updateSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#updateNCharacterStream(ILjava/io/Reader;J)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateAsciiStream(ILjava/io/InputStream;J)V
+#updateBinaryStream(ILjava/io/InputStream;J)V
+#updateCharacterStream(ILjava/io/Reader;J)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateBlob(ILjava/io/InputStream;J)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateClob(ILjava/io/Reader;J)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNClob(ILjava/io/Reader;J)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNCharacterStream(ILjava/io/Reader;)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateAsciiStream(ILjava/io/InputStream;)V
+#updateBinaryStream(ILjava/io/InputStream;)V
+#updateCharacterStream(ILjava/io/Reader;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateBlob(ILjava/io/InputStream;)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateClob(ILjava/io/Reader;)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;)V
+#updateNClob(ILjava/io/Reader;)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;)V
+#insertRow()V
+#updateRow()V
+#deleteRow()V
+#refreshRow()V
+#cancelRowUpdates()V
+#moveToInsertRow()V
+#moveToCurrentRow()V
+#toString()Ljava/lang/String;
@3.11.6
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###org/jooq/tools/jdbc/MockResultSetMetaData
@3.0.0-RC1
+#<init>(Lorg/jooq/tools/jdbc/MockResultSet;)V
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#getColumnCount()I
+#isAutoIncrement(I)Z
+#isCaseSensitive(I)Z
+#isSearchable(I)Z
+#isCurrency(I)Z
+#isNullable(I)I
+#isSigned(I)Z
+#getColumnDisplaySize(I)I
+#getColumnLabel(I)Ljava/lang/String;
+#getColumnName(I)Ljava/lang/String;
+#getSchemaName(I)Ljava/lang/String;
+#getPrecision(I)I
+#getScale(I)I
+#getTableName(I)Ljava/lang/String;
+#getCatalogName(I)Ljava/lang/String;
+#getColumnType(I)I
+#getColumnTypeName(I)Ljava/lang/String;
+#isReadOnly(I)Z
+#isWritable(I)Z
+#isDefinitelyWritable(I)Z
+#getColumnClassName(I)Ljava/lang/String;

+###org/jooq/tools/jdbc/MockStatement
@3.0.0-RC1
+#<init>(Lorg/jooq/tools/jdbc/MockConnection;Lorg/jooq/tools/jdbc/MockDataProvider;)V
+#<init>(Lorg/jooq/tools/jdbc/MockConnection;Lorg/jooq/tools/jdbc/MockDataProvider;Ljava/lang/String;)V
+#getConnection()Ljava/sql/Connection;
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#getMoreResults()Z
+#getMoreResults(I)Z
+#getResultSet()Ljava/sql/ResultSet;
+#getUpdateCount()I
+#executeQuery()Ljava/sql/ResultSet;
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#execute()Z
+#execute(Ljava/lang/String;)Z
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#executeUpdate()I
+#executeUpdate(Ljava/lang/String;)I
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#addBatch()V
+#addBatch(Ljava/lang/String;)V
+#clearBatch()V
+#executeBatch()[I
+#clearParameters()V
+#setNull(II)V
+#setNull(IILjava/lang/String;)V
+#setBoolean(IZ)V
+#setByte(IB)V
+#setShort(IS)V
+#setInt(II)V
+#setLong(IJ)V
+#setFloat(IF)V
+#setDouble(ID)V
+#setBigDecimal(ILjava/math/BigDecimal;)V
+#setString(ILjava/lang/String;)V
+#setNString(ILjava/lang/String;)V
+#setBytes(I[B)V
+#setDate(ILjava/sql/Date;)V
+#setTime(ILjava/sql/Time;)V
+#setTimestamp(ILjava/sql/Timestamp;)V
+#setObject(ILjava/lang/Object;I)V
+#setObject(ILjava/lang/Object;)V
+#setObject(ILjava/lang/Object;II)V
+#setURL(ILjava/net/URL;)V
+#setArray(ILjava/sql/Array;)V
+#registerOutParameter(II)V
+#registerOutParameter(III)V
+#registerOutParameter(IILjava/lang/String;)V
+#wasNull()Z
+#getString(I)Ljava/lang/String;
+#getNString(I)Ljava/lang/String;
+#getBoolean(I)Z
+#getByte(I)B
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getFloat(I)F
+#getDouble(I)D
+#getBigDecimal(II)Ljava/math/BigDecimal;
+#getBytes(I)[B
+#getDate(I)Ljava/sql/Date;
+#getTime(I)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getObject(I)Ljava/lang/Object;
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getArray(I)Ljava/sql/Array;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#getURL(I)Ljava/net/URL;
+#isClosed()Z
+#close()V
+#cancel()V
+#getMaxFieldSize()I
+#setMaxFieldSize(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#setEscapeProcessing(Z)V
+#getQueryTimeout()I
+#setQueryTimeout(I)V
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getResultSetConcurrency()I
+#getResultSetType()I
+#getResultSetHoldability()I
+#setPoolable(Z)V
+#isPoolable()Z
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setCursorName(Ljava/lang/String;)V
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#getParameterMetaData()Ljava/sql/ParameterMetaData;
+#setAsciiStream(ILjava/io/InputStream;I)V
+#setAsciiStream(ILjava/io/InputStream;J)V
+#setAsciiStream(ILjava/io/InputStream;)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#setAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#setUnicodeStream(ILjava/io/InputStream;I)V
+#setBinaryStream(ILjava/io/InputStream;I)V
+#setBinaryStream(ILjava/io/InputStream;J)V
+#setBinaryStream(ILjava/io/InputStream;)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#setBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#setCharacterStream(ILjava/io/Reader;I)V
+#setCharacterStream(ILjava/io/Reader;J)V
+#setCharacterStream(ILjava/io/Reader;)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#setCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#setNCharacterStream(ILjava/io/Reader;J)V
+#setNCharacterStream(ILjava/io/Reader;)V
+#setNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#setNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#setRef(ILjava/sql/Ref;)V
+#setBlob(ILjava/sql/Blob;)V
+#setBlob(ILjava/io/InputStream;J)V
+#setBlob(ILjava/io/InputStream;)V
+#setBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#setBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#setBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#setClob(ILjava/sql/Clob;)V
+#setClob(ILjava/io/Reader;J)V
+#setClob(ILjava/io/Reader;)V
+#setClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#setClob(Ljava/lang/String;Ljava/io/Reader;)V
+#setClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#setNClob(ILjava/sql/NClob;)V
+#setNClob(ILjava/io/Reader;J)V
+#setNClob(ILjava/io/Reader;)V
+#setNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#setNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#setNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#setNString(Ljava/lang/String;Ljava/lang/String;)V
+#setRowId(ILjava/sql/RowId;)V
+#setRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#setSQLXML(ILjava/sql/SQLXML;)V
+#setSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#setDate(ILjava/sql/Date;Ljava/util/Calendar;)V
+#setDate(Ljava/lang/String;Ljava/sql/Date;)V
+#setDate(Ljava/lang/String;Ljava/sql/Date;Ljava/util/Calendar;)V
+#setTime(ILjava/sql/Time;Ljava/util/Calendar;)V
+#setTime(Ljava/lang/String;Ljava/sql/Time;)V
+#setTime(Ljava/lang/String;Ljava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
+#setTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#setTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;Ljava/util/Calendar;)V
+#setURL(Ljava/lang/String;Ljava/net/URL;)V
+#setNull(Ljava/lang/String;I)V
+#setNull(Ljava/lang/String;ILjava/lang/String;)V
+#setBoolean(Ljava/lang/String;Z)V
+#setByte(Ljava/lang/String;B)V
+#setShort(Ljava/lang/String;S)V
+#setInt(Ljava/lang/String;I)V
+#setLong(Ljava/lang/String;J)V
+#setFloat(Ljava/lang/String;F)V
+#setDouble(Ljava/lang/String;D)V
+#setBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#setString(Ljava/lang/String;Ljava/lang/String;)V
+#setBytes(Ljava/lang/String;[B)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;II)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#setObject(Ljava/lang/String;Ljava/lang/Object;)V
+#registerOutParameter(Ljava/lang/String;I)V
+#registerOutParameter(Ljava/lang/String;II)V
+#registerOutParameter(Ljava/lang/String;ILjava/lang/String;)V
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z
+#getByte(Ljava/lang/String;)B
+#getShort(Ljava/lang/String;)S
+#getInt(Ljava/lang/String;)I
+#getLong(Ljava/lang/String;)J
+#getFloat(Ljava/lang/String;)F
+#getDouble(Ljava/lang/String;)D
+#getBytes(Ljava/lang/String;)[B
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getRef(I)Ljava/sql/Ref;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getBlob(I)Ljava/sql/Blob;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;

+###org/jooq/tools/JooqLogger
@2.0.0-RC1
+#<init>()V
+#getLogger(Ljava/lang/Class;)Lorg/jooq/tools/JooqLogger;
+#isTraceEnabled()Z
+#trace(Ljava/lang/Object;)V
+#trace(Ljava/lang/Object;Ljava/lang/Object;)V
+#trace(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#trace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/Object;)V
+#debug(Ljava/lang/Object;Ljava/lang/Object;)V
+#debug(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#debug(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/Object;)V
+#info(Ljava/lang/Object;Ljava/lang/Object;)V
+#info(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#info(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#warn(Ljava/lang/Object;)V
+#warn(Ljava/lang/Object;Ljava/lang/Object;)V
+#warn(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#warn(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#error(Ljava/lang/Object;)V
+#error(Ljava/lang/Object;Ljava/lang/Object;)V
+#error(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#error(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
@3.8.0
+#globalThreshold(Lorg/jooq/tools/JooqLogger$Level;)V
@3.9.0
+#globalThreshold(Lorg/jooq/Log$Level;)V
@3.13.0
+#log(Lorg/jooq/Log$Level;Ljava/lang/Object;)V
+#log(Lorg/jooq/Log$Level;Ljava/lang/Object;Ljava/lang/Object;)V
+#log(Lorg/jooq/Log$Level;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#log(Lorg/jooq/Log$Level;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
@3.15.0
+#isWarnEnabled()Z
@3.15.3
+#initSimpleFormatter()V
@3.16.0
+#<init>(I)V
+#getLogger(Ljava/lang/String;)Lorg/jooq/tools/JooqLogger;
+#getLogger(Ljava/lang/Class;I)Lorg/jooq/tools/JooqLogger;
+#getLogger(Ljava/lang/String;I)Lorg/jooq/tools/JooqLogger;
+#getLogger(Ljava/lang/Class;Ljava/lang/String;I)Lorg/jooq/tools/JooqLogger;
-#<init>()V

+###org/jooq/tools/json/JSONArray
@1.6.2
+#<init>()V
+#writeJSONString(Ljava/util/List;Ljava/io/Writer;)V
+#toJSONString(Ljava/util/List;)Ljava/lang/String;
@3.3.0
+#<init>(Ljava/util/Collection;)V
@3.6.0
+#toString()Ljava/lang/String;

+###org/jooq/tools/json/JSONObject
@1.6.2
+#<init>()V
+#writeJSONString(Ljava/util/Map;Ljava/io/Writer;)V
+#toJSONString(Ljava/util/Map;)Ljava/lang/String;
+#toString(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
+#escape(Ljava/lang/String;)Ljava/lang/String;
@3.3.0
+#<init>(Ljava/util/Map;)V
@3.6.0
+#toString()Ljava/lang/String;

+###org/jooq/tools/json/JSONValue
@1.6.2
+#<init>()V
+#writeJSONString(Ljava/lang/Object;Ljava/io/Writer;)V
+#toJSONString(Ljava/lang/Object;)Ljava/lang/String;
+#escape(Ljava/lang/String;)Ljava/lang/String;
@3.3.0
+#parseWithException(Ljava/io/Reader;)Ljava/lang/Object;
+#parseWithException(Ljava/lang/String;)Ljava/lang/Object;

+###org/jooq/tools/LoggerListener
@2.0.5
+#<init>()V
+#executeStart(Lorg/jooq/ExecuteContext;)V
+#recordEnd(Lorg/jooq/ExecuteContext;)V
+#resultEnd(Lorg/jooq/ExecuteContext;)V
@2.1.0
+#renderEnd(Lorg/jooq/ExecuteContext;)V
-#executeStart(Lorg/jooq/ExecuteContext;)V
@3.2.0
+#executeEnd(Lorg/jooq/ExecuteContext;)V
@3.6.0
+#outEnd(Lorg/jooq/ExecuteContext;)V
@3.8.0
+#exception(Lorg/jooq/ExecuteContext;)V
@3.15.0
+#resultStart(Lorg/jooq/ExecuteContext;)V
+#fetchEnd(Lorg/jooq/ExecuteContext;)V
@3.15.5
+#recordStart(Lorg/jooq/ExecuteContext;)V
@3.16.0
-#recordStart(Lorg/jooq/ExecuteContext;)V
@3.17.0
+#bindEnd(Lorg/jooq/ExecuteContext;)V
+#executeStart(Lorg/jooq/ExecuteContext;)V

+###org/jooq/tools/reflect/Reflect
@2.0.5
+#on(Ljava/lang/String;)Lorg/jooq/tools/reflect/Reflect;
+#on(Ljava/lang/Class;)Lorg/jooq/tools/reflect/Reflect;
+#on(Ljava/lang/Object;)Lorg/jooq/tools/reflect/Reflect;
+#get()Ljava/lang/Object;
+#set(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/tools/reflect/Reflect;
+#get(Ljava/lang/String;)Ljava/lang/Object;
+#field(Ljava/lang/String;)Lorg/jooq/tools/reflect/Reflect;
+#fields()Ljava/util/Map;
+#call(Ljava/lang/String;)Lorg/jooq/tools/reflect/Reflect;
+#call(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/tools/reflect/Reflect;
+#create()Lorg/jooq/tools/reflect/Reflect;
+#create([Ljava/lang/Object;)Lorg/jooq/tools/reflect/Reflect;
+#as(Ljava/lang/Class;)Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#type()Ljava/lang/Class;
@2.3.0
+#accessible(Ljava/lang/reflect/AccessibleObject;)Ljava/lang/reflect/AccessibleObject;
@2.6.0
+#wrapper(Ljava/lang/Class;)Ljava/lang/Class;
@3.11.0
+#compile(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/tools/reflect/Reflect;
+#on(Ljava/lang/String;Ljava/lang/ClassLoader;)Lorg/jooq/tools/reflect/Reflect;
@3.11.11
+#initValue(Ljava/lang/Class;)Ljava/lang/Object;
@3.12.0
+#compile(Ljava/lang/String;Ljava/lang/String;Lorg/jooq/tools/reflect/CompileOptions;)Lorg/jooq/tools/reflect/Reflect;
*#on(Ljava/lang/String;)Lorg/jooq/tools/reflect/Reflect;[deprecated]
*#on(Ljava/lang/String;Ljava/lang/ClassLoader;)Lorg/jooq/tools/reflect/Reflect;[deprecated]
*#on(Ljava/lang/Class;)Lorg/jooq/tools/reflect/Reflect;[deprecated]
+#onClass(Ljava/lang/String;)Lorg/jooq/tools/reflect/Reflect;
+#onClass(Ljava/lang/String;Ljava/lang/ClassLoader;)Lorg/jooq/tools/reflect/Reflect;
+#onClass(Ljava/lang/Class;)Lorg/jooq/tools/reflect/Reflect;
+#as(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Object;

+###org/jooq/tools/reflect/ReflectException
@2.0.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>()V
+#<init>(Ljava/lang/Throwable;)V

+###org/jooq/tools/StopWatch
@2.0.0-RC1
+#<init>()V
+#splitTrace(Ljava/lang/String;)V
+#splitDebug(Ljava/lang/String;)V
+#splitInfo(Ljava/lang/String;)V
@2.6.0
+#format(J)Ljava/lang/String;
+#formatHours(J)Ljava/lang/String;
@3.6.0
+#split()J
@3.8.0
+#splitTrace(Ljava/lang/String;J)V
+#splitDebug(Ljava/lang/String;J)V
+#splitInfo(Ljava/lang/String;J)V
+#splitWarn(Ljava/lang/String;)V
+#splitWarn(Ljava/lang/String;J)V

+###org/jooq/tools/StopWatchListener
@2.0.5
+#<init>()V
+#start(Lorg/jooq/ExecuteContext;)V
+#renderStart(Lorg/jooq/ExecuteContext;)V
+#renderEnd(Lorg/jooq/ExecuteContext;)V
+#prepareStart(Lorg/jooq/ExecuteContext;)V
+#prepareEnd(Lorg/jooq/ExecuteContext;)V
+#bindStart(Lorg/jooq/ExecuteContext;)V
+#bindEnd(Lorg/jooq/ExecuteContext;)V
+#executeStart(Lorg/jooq/ExecuteContext;)V
+#executeEnd(Lorg/jooq/ExecuteContext;)V
+#fetchStart(Lorg/jooq/ExecuteContext;)V
+#resultStart(Lorg/jooq/ExecuteContext;)V
+#recordStart(Lorg/jooq/ExecuteContext;)V
+#recordEnd(Lorg/jooq/ExecuteContext;)V
+#resultEnd(Lorg/jooq/ExecuteContext;)V
+#fetchEnd(Lorg/jooq/ExecuteContext;)V
+#end(Lorg/jooq/ExecuteContext;)V
@2.3.0
+#exception(Lorg/jooq/ExecuteContext;)V
@3.4.0
+#warning(Lorg/jooq/ExecuteContext;)V
@3.6.0
+#outStart(Lorg/jooq/ExecuteContext;)V
+#outEnd(Lorg/jooq/ExecuteContext;)V

+###org/jooq/tools/StringUtils
@2.0.0-RC1
+#defaultString(Ljava/lang/String;)Ljava/lang/String;
+#defaultString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#defaultIfEmpty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#isEmpty(Ljava/lang/String;)Z
+#isBlank(Ljava/lang/String;)Z
+#countMatches(Ljava/lang/String;Ljava/lang/String;)I
+#rightPad(Ljava/lang/String;I)Ljava/lang/String;
+#rightPad(Ljava/lang/String;IC)Ljava/lang/String;
+#rightPad(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
+#leftPad(Ljava/lang/String;I)Ljava/lang/String;
+#leftPad(Ljava/lang/String;IC)Ljava/lang/String;
+#leftPad(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
+#abbreviate(Ljava/lang/String;I)Ljava/lang/String;
+#abbreviate(Ljava/lang/String;II)Ljava/lang/String;
+#containsAny(Ljava/lang/String;[C)Z
+#replaceEach(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
+#toCamelCase(Ljava/lang/String;)Ljava/lang/String;
+#toCamelCaseLC(Ljava/lang/String;)Ljava/lang/String;
@2.0.5
+#join([Ljava/lang/Object;)Ljava/lang/String;
+#join([Ljava/lang/Object;C)Ljava/lang/String;
+#join([Ljava/lang/Object;CII)Ljava/lang/String;
+#join([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#join([Ljava/lang/Object;Ljava/lang/String;II)Ljava/lang/String;
@2.2.0
+#split(Ljava/lang/String;Ljava/lang/CharSequence;)[Ljava/lang/String;
@2.5.0
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z
@2.5.2
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
+#toLC(Ljava/lang/String;)Ljava/lang/String;
@2.6.0
+#defaultIfNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
-#toLC(Ljava/lang/String;)Ljava/lang/String;
@2.6.1
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
+#toLC(Ljava/lang/String;)Ljava/lang/String;
@3.2.3
+#defaultIfBlank(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.10.7
+#equals(Ljava/lang/String;Ljava/lang/String;)Z
@3.12.0
+#firstNonNull([Ljava/lang/Object;)Ljava/lang/Object;
+#toUC(Ljava/lang/String;)Ljava/lang/String;
@3.16.0
+#rightPad(Ljava/lang/String;II)Ljava/lang/String;
+#rightPad(Ljava/lang/String;IIC)Ljava/lang/String;
+#rightPad(Ljava/lang/String;IILjava/lang/String;)Ljava/lang/String;
+#leftPad(Ljava/lang/String;II)Ljava/lang/String;
+#leftPad(Ljava/lang/String;IIC)Ljava/lang/String;
+#leftPad(Ljava/lang/String;IILjava/lang/String;)Ljava/lang/String;
@3.17.0
+#toLC(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#toUC(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;

+###org/jooq/Truncate
@1.5.9

+###org/jooq/types/DayToSecond
@2.2.0
+#<init>(I)V
+#<init>(II)V
+#<init>(III)V
+#<init>(IIII)V
+#<init>(IIIII)V
+#valueOf(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;
+#valueOf(D)Lorg/jooq/types/DayToSecond;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#neg()Lorg/jooq/types/DayToSecond;
+#abs()Lorg/jooq/types/DayToSecond;
+#getDays()I
+#getHours()I
+#getMinutes()I
+#getSeconds()I
+#getMilli()I
+#getMicro()I
+#getNano()I
+#getTotalDays()D
+#getTotalHours()D
+#getTotalMinutes()D
+#getTotalSeconds()D
+#getTotalMilli()D
+#getTotalMicro()D
+#getTotalNano()D
+#getSign()I
+#compareTo(Lorg/jooq/types/DayToSecond;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#abs()Lorg/jooq/types/Interval;
+#neg()Lorg/jooq/types/Interval;
+#compareTo(Ljava/lang/Object;)I
@3.11.0
+#valueOf(Ljava/time/Duration;)Lorg/jooq/types/DayToSecond;
@3.12.0
+#<init>()V
+#valueOf(JI)Lorg/jooq/types/DayToSecond;
+#toDuration()Ljava/time/Duration;
@3.14.0
+#day(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;
+#dayToHour(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;
+#dayToMinute(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;
+#dayToSecond(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;
+#hour(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;
+#hourToMinute(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;
+#hourToSecond(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;
+#minute(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;
+#minuteToSecond(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;
+#second(Ljava/lang/String;)Lorg/jooq/types/DayToSecond;

+###org/jooq/types/Interval
@2.2.0
+#neg()Lorg/jooq/types/Interval;
+#abs()Lorg/jooq/types/Interval;
+#getSign()I
+#doubleValue()D
+#floatValue()F
+#longValue()J
+#intValue()I
+#byteValue()B
+#shortValue()S
@3.12.0
+#toDuration()Ljava/time/Duration;

+###org/jooq/types/UByte
@3.0.0-RC1
+#valueOf(Ljava/lang/String;)Lorg/jooq/types/UByte;
+#valueOf(B)Lorg/jooq/types/UByte;
+#valueOf(S)Lorg/jooq/types/UByte;
+#valueOf(I)Lorg/jooq/types/UByte;
+#valueOf(J)Lorg/jooq/types/UByte;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jooq/types/UByte;)I
+#toBigInteger()Ljava/math/BigInteger;
+#compareTo(Ljava/lang/Object;)I
@3.11.0
+#add(Lorg/jooq/types/UByte;)Lorg/jooq/types/UByte;
+#add(I)Lorg/jooq/types/UByte;
+#subtract(Lorg/jooq/types/UByte;)Lorg/jooq/types/UByte;
+#subtract(I)Lorg/jooq/types/UByte;

+###org/jooq/types/UInteger
@3.0.0-RC1
+#valueOf(Ljava/lang/String;)Lorg/jooq/types/UInteger;
+#valueOf(I)Lorg/jooq/types/UInteger;
+#valueOf(J)Lorg/jooq/types/UInteger;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jooq/types/UInteger;)I
+#compareTo(Ljava/lang/Object;)I
@3.11.0
+#toBigInteger()Ljava/math/BigInteger;
+#add(Lorg/jooq/types/UInteger;)Lorg/jooq/types/UInteger;
+#add(I)Lorg/jooq/types/UInteger;
+#subtract(Lorg/jooq/types/UInteger;)Lorg/jooq/types/UInteger;
+#subtract(I)Lorg/jooq/types/UInteger;

+###org/jooq/types/ULong
@3.0.0-RC1
+#valueOf(Ljava/lang/String;)Lorg/jooq/types/ULong;
+#valueOf(J)Lorg/jooq/types/ULong;
+#valueOf(Ljava/math/BigInteger;)Lorg/jooq/types/ULong;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jooq/types/ULong;)I
+#compareTo(Ljava/lang/Object;)I
@3.11.0
+#compare(JJ)I
+#add(Lorg/jooq/types/ULong;)Lorg/jooq/types/ULong;
+#add(I)Lorg/jooq/types/ULong;
+#add(J)Lorg/jooq/types/ULong;
+#subtract(Lorg/jooq/types/ULong;)Lorg/jooq/types/ULong;
+#subtract(I)Lorg/jooq/types/ULong;
+#subtract(J)Lorg/jooq/types/ULong;

+###org/jooq/types/Unsigned
@3.0.0-RC1
+#ubyte(Ljava/lang/String;)Lorg/jooq/types/UByte;
+#ubyte(B)Lorg/jooq/types/UByte;
+#ubyte(S)Lorg/jooq/types/UByte;
+#ubyte(I)Lorg/jooq/types/UByte;
+#ubyte(J)Lorg/jooq/types/UByte;
+#ushort(Ljava/lang/String;)Lorg/jooq/types/UShort;
+#ushort(S)Lorg/jooq/types/UShort;
+#ushort(I)Lorg/jooq/types/UShort;
+#uint(Ljava/lang/String;)Lorg/jooq/types/UInteger;
+#uint(I)Lorg/jooq/types/UInteger;
+#uint(J)Lorg/jooq/types/UInteger;
+#ulong(Ljava/lang/String;)Lorg/jooq/types/ULong;
+#ulong(J)Lorg/jooq/types/ULong;
+#ulong(Ljava/math/BigInteger;)Lorg/jooq/types/ULong;

+###org/jooq/types/UNumber
@3.0.0-RC1
+#<init>()V
+#toBigInteger()Ljava/math/BigInteger;

+###org/jooq/types/UShort
@3.0.0-RC1
+#valueOf(Ljava/lang/String;)Lorg/jooq/types/UShort;
+#valueOf(S)Lorg/jooq/types/UShort;
+#valueOf(I)Lorg/jooq/types/UShort;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jooq/types/UShort;)I
+#compareTo(Ljava/lang/Object;)I
@3.11.0
+#toBigInteger()Ljava/math/BigInteger;
+#add(Lorg/jooq/types/UShort;)Lorg/jooq/types/UShort;
+#add(I)Lorg/jooq/types/UShort;
+#subtract(Lorg/jooq/types/UShort;)Lorg/jooq/types/UShort;
+#subtract(I)Lorg/jooq/types/UShort;

+###org/jooq/types/YearToMonth
@2.2.0
+#<init>(I)V
+#<init>(II)V
+#valueOf(Ljava/lang/String;)Lorg/jooq/types/YearToMonth;
+#neg()Lorg/jooq/types/YearToMonth;
+#abs()Lorg/jooq/types/YearToMonth;
+#getYears()I
+#getMonths()I
+#getSign()I
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#compareTo(Lorg/jooq/types/YearToMonth;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#abs()Lorg/jooq/types/Interval;
+#neg()Lorg/jooq/types/Interval;
+#compareTo(Ljava/lang/Object;)I
@3.12.0
+#<init>()V
+#toDuration()Ljava/time/Duration;
@3.14.0
+#year(Ljava/lang/String;)Lorg/jooq/types/YearToMonth;
+#yearToMonth(Ljava/lang/String;)Lorg/jooq/types/YearToMonth;
+#month(Ljava/lang/String;)Lorg/jooq/types/YearToMonth;

+###org/jooq/UDT
@1.5.7
+#getTypeMapping()Ljava/util/Map;
+#getDataType()Lorg/jooq/DataType;
@2.3.0
*#getTypeMapping()Ljava/util/Map;[deprecated]
@2.5.0
+#getSchema()Lorg/jooq/Schema;
+#getRecordType()Ljava/lang/Class;
@2.6.0
+#getName()Ljava/lang/String;
@3.0.0-RC1
+#fieldsRow()Lorg/jooq/Row;
+#field(Lorg/jooq/Field;)Lorg/jooq/Field;
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(I)Lorg/jooq/Field;
+#fields()[Lorg/jooq/Field;
-#getTypeMapping()Ljava/util/Map;[deprecated]
@3.5.0
+#newRecord()Lorg/jooq/UDTRecord;
@3.7.0
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
+#fields([Ljava/lang/String;)[Lorg/jooq/Field;
+#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
+#fields([I)[Lorg/jooq/Field;
@3.9.0
+#fieldStream()Ljava/util/stream/Stream;
+#getCatalog()Lorg/jooq/Catalog;
+#getPackage()Lorg/jooq/Package;
+#isSQLUsable()Z
@3.10.0
+#isSynthetic()Z
@3.11.0
-#getPackage()Lorg/jooq/Package;
-#getName()Ljava/lang/String;
@3.12.0
+#indexOf(Lorg/jooq/Field;)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Lorg/jooq/Name;)I
@3.14.0
+#getPackage()Lorg/jooq/Package;
-#getCatalog()Lorg/jooq/Catalog;
-#getSchema()Lorg/jooq/Schema;
@3.15.0
-#fieldsRow()Lorg/jooq/Row;
-#fieldStream()Ljava/util/stream/Stream;
-#field(Lorg/jooq/Field;)Lorg/jooq/Field;
-#field(Ljava/lang/String;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;)Lorg/jooq/Field;
-#field(I)Lorg/jooq/Field;
-#fields()[Lorg/jooq/Field;
-#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
-#fields([Ljava/lang/String;)[Lorg/jooq/Field;
-#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
-#fields([I)[Lorg/jooq/Field;
-#indexOf(Lorg/jooq/Field;)I
-#indexOf(Ljava/lang/String;)I
-#indexOf(Lorg/jooq/Name;)I
-#getPackage()Lorg/jooq/Package;
-#getRecordType()Ljava/lang/Class;
-#newRecord()Lorg/jooq/UDTRecord;
-#getDataType()Lorg/jooq/DataType;

+###org/jooq/UDTField
@1.5.7
+#getUDT()Lorg/jooq/UDT;

+###org/jooq/UDTRecord
@1.5.7
+#getUDT()Lorg/jooq/UDT;
@3.9.0
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/UDTRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/UDTRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;
@3.15.0
-#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/UDTRecord;
-#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/UDTRecord;
-#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
-#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/UniqueKey
@1.5.9
+#getReferences()Ljava/util/List;
@3.8.0
+#isPrimary()Z

+###org/jooq/UpdatableRecord
@1.5.7
+#getTable()Lorg/jooq/UpdatableTable;
+#store()I
+#delete()I
+#refresh()V
+#getConfiguration()Lorg/jooq/Configuration;
@1.6.1
-#getConfiguration()Lorg/jooq/Configuration;
@1.6.2
+#copy()Lorg/jooq/Record;
@2.0.0-RC1
+#copy()Lorg/jooq/UpdatableRecord;
-#copy()Lorg/jooq/Record;
@3.0.0-RC1
+#key()Lorg/jooq/Record;
+#insert()I
+#update()I
+#refresh([Lorg/jooq/Field;)V
+#fetchChild(Lorg/jooq/ForeignKey;)Lorg/jooq/TableRecord;
+#fetchChildren(Lorg/jooq/ForeignKey;)Lorg/jooq/Result;
@3.0.0-RC3
-#getTable()Lorg/jooq/UpdatableTable;
@3.4.0
+#store([Lorg/jooq/Field;)I
+#insert([Lorg/jooq/Field;)I
+#update([Lorg/jooq/Field;)I
@3.8.0
+#store(Ljava/util/Collection;)I
+#insert(Ljava/util/Collection;)I
+#update(Ljava/util/Collection;)I
+#refresh(Ljava/util/Collection;)V
@3.14.0
+#merge()I
+#merge([Lorg/jooq/Field;)I
+#merge(Ljava/util/Collection;)I
+#children(Lorg/jooq/ForeignKey;)Lorg/jooq/Table;

+###org/jooq/Update
@1.5.9

+###org/jooq/UpdateConditionStep
@1.5.9
+#and(Lorg/jooq/Condition;)Lorg/jooq/UpdateConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/UpdateConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/UpdateConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/UpdateConditionStep;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/UpdateConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/UpdateConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/UpdateConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/UpdateConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/UpdateConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/UpdateConditionStep;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/UpdateConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/UpdateConditionStep;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/UpdateConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/UpdateConditionStep;
@3.1.0
+#and(Lorg/jooq/Field;)Lorg/jooq/UpdateConditionStep;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/UpdateConditionStep;
+#or(Lorg/jooq/Field;)Lorg/jooq/UpdateConditionStep;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/UpdateConditionStep;
@3.7.0
+#and(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;
+#and(Lorg/jooq/SQL;)Lorg/jooq/UpdateConditionStep;
+#andNot(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;
+#or(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;
+#or(Lorg/jooq/SQL;)Lorg/jooq/UpdateConditionStep;
+#orNot(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;
@3.7.2
*#and(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;[deprecated]
*#andNot(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;[deprecated]
*#or(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;[deprecated]
*#orNot(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;[deprecated]
@3.15.0
-#and(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;[deprecated]
-#andNot(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;[deprecated]
-#or(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;[deprecated]
-#orNot(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;[deprecated]

+###org/jooq/UpdateFinalStep
@1.5.9

+###org/jooq/UpdateQuery
@1.5.7
@2.6.0
+#addConditions([Lorg/jooq/Condition;)V
+#addConditions(Ljava/util/Collection;)V
+#addConditions(Lorg/jooq/Operator;[Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Ljava/util/Collection;)V
@3.0.0-RC1
+#addValues(Lorg/jooq/Row1;Lorg/jooq/Row1;)V
+#addValues(Lorg/jooq/Row2;Lorg/jooq/Row2;)V
+#addValues(Lorg/jooq/Row3;Lorg/jooq/Row3;)V
+#addValues(Lorg/jooq/Row4;Lorg/jooq/Row4;)V
+#addValues(Lorg/jooq/Row5;Lorg/jooq/Row5;)V
+#addValues(Lorg/jooq/Row6;Lorg/jooq/Row6;)V
+#addValues(Lorg/jooq/Row7;Lorg/jooq/Row7;)V
+#addValues(Lorg/jooq/Row8;Lorg/jooq/Row8;)V
+#addValues(Lorg/jooq/Row9;Lorg/jooq/Row9;)V
+#addValues(Lorg/jooq/Row10;Lorg/jooq/Row10;)V
+#addValues(Lorg/jooq/Row11;Lorg/jooq/Row11;)V
+#addValues(Lorg/jooq/Row12;Lorg/jooq/Row12;)V
+#addValues(Lorg/jooq/Row13;Lorg/jooq/Row13;)V
+#addValues(Lorg/jooq/Row14;Lorg/jooq/Row14;)V
+#addValues(Lorg/jooq/Row15;Lorg/jooq/Row15;)V
+#addValues(Lorg/jooq/Row16;Lorg/jooq/Row16;)V
+#addValues(Lorg/jooq/Row17;Lorg/jooq/Row17;)V
+#addValues(Lorg/jooq/Row18;Lorg/jooq/Row18;)V
+#addValues(Lorg/jooq/Row19;Lorg/jooq/Row19;)V
+#addValues(Lorg/jooq/Row20;Lorg/jooq/Row20;)V
+#addValues(Lorg/jooq/Row21;Lorg/jooq/Row21;)V
+#addValues(Lorg/jooq/Row22;Lorg/jooq/Row22;)V
+#addValues(Lorg/jooq/Row1;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row2;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row3;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row4;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row5;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row6;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row7;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row8;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row9;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row10;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row11;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row12;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row13;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row14;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row15;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row16;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row17;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row18;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row19;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row20;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row21;Lorg/jooq/Select;)V
+#addValues(Lorg/jooq/Row22;Lorg/jooq/Select;)V
+#setReturning()V
+#setReturning(Lorg/jooq/Identity;)V
+#setReturning([Lorg/jooq/Field;)V
+#setReturning(Ljava/util/Collection;)V
+#getReturnedRecord()Lorg/jooq/Record;
+#getReturnedRecords()Lorg/jooq/Result;
@3.3.0
+#addFrom([Lorg/jooq/TableLike;)V
+#addFrom(Ljava/util/Collection;)V
@3.5.0
+#addFrom(Lorg/jooq/TableLike;)V
@3.7.0
+#addValues(Lorg/jooq/RowN;Lorg/jooq/RowN;)V
+#addValues(Lorg/jooq/RowN;Lorg/jooq/Select;)V
@3.11.0
+#addConditions(Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Lorg/jooq/Condition;)V
+#setReturning([Lorg/jooq/SelectFieldOrAsterisk;)V
-#setReturning([Lorg/jooq/Field;)V
@3.12.0
+#addOrderBy([Lorg/jooq/OrderField;)V
+#addOrderBy(Ljava/util/Collection;)V
+#addLimit(Ljava/lang/Number;)V
+#addLimit(Lorg/jooq/Param;)V
@3.17.0
+#addLimit(Lorg/jooq/Field;)V
-#addLimit(Lorg/jooq/Param;)V

+###org/jooq/UpdateResultStep
@3.0.0-RC1
+#fetch()Lorg/jooq/Result;
+#fetchOne()Lorg/jooq/Record;
@3.7.0
+#fetchOptional()Ljava/util/Optional;
@3.15.0
-#fetch()Lorg/jooq/Result;
-#fetchOne()Lorg/jooq/Record;
-#fetchOptional()Ljava/util/Optional;

+###org/jooq/UpdateReturningStep
@3.0.0-RC1
+#returning()Lorg/jooq/UpdateResultStep;
+#returning([Lorg/jooq/Field;)Lorg/jooq/UpdateResultStep;
+#returning(Ljava/util/Collection;)Lorg/jooq/UpdateResultStep;
@3.11.0
+#returning([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/UpdateResultStep;
+#returningResult([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/UpdateResultStep;
+#returningResult(Ljava/util/Collection;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/UpdateResultStep;
-#returning([Lorg/jooq/Field;)Lorg/jooq/UpdateResultStep;

+###org/jooq/UpdateSetFirstStep
@3.0.0-RC1
+#set(Lorg/jooq/Row1;Lorg/jooq/Row1;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row2;Lorg/jooq/Row2;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row3;Lorg/jooq/Row3;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row4;Lorg/jooq/Row4;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row5;Lorg/jooq/Row5;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row6;Lorg/jooq/Row6;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row7;Lorg/jooq/Row7;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row8;Lorg/jooq/Row8;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row9;Lorg/jooq/Row9;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row10;Lorg/jooq/Row10;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row11;Lorg/jooq/Row11;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row12;Lorg/jooq/Row12;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row13;Lorg/jooq/Row13;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row14;Lorg/jooq/Row14;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row15;Lorg/jooq/Row15;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row16;Lorg/jooq/Row16;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row17;Lorg/jooq/Row17;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row18;Lorg/jooq/Row18;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row19;Lorg/jooq/Row19;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row20;Lorg/jooq/Row20;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row21;Lorg/jooq/Row21;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row22;Lorg/jooq/Row22;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row1;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row2;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row3;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row4;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row5;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row6;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row7;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row8;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row9;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row10;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row11;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row12;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row13;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row14;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row15;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row16;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row17;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row18;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row19;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row20;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row21;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
+#set(Lorg/jooq/Row22;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
@3.3.0
+#set(Lorg/jooq/Row1;Lorg/jooq/Row1;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row2;Lorg/jooq/Row2;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row3;Lorg/jooq/Row3;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row4;Lorg/jooq/Row4;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row5;Lorg/jooq/Row5;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row6;Lorg/jooq/Row6;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row7;Lorg/jooq/Row7;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row8;Lorg/jooq/Row8;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row9;Lorg/jooq/Row9;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row10;Lorg/jooq/Row10;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row11;Lorg/jooq/Row11;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row12;Lorg/jooq/Row12;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row13;Lorg/jooq/Row13;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row14;Lorg/jooq/Row14;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row15;Lorg/jooq/Row15;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row16;Lorg/jooq/Row16;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row17;Lorg/jooq/Row17;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row18;Lorg/jooq/Row18;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row19;Lorg/jooq/Row19;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row20;Lorg/jooq/Row20;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row21;Lorg/jooq/Row21;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row22;Lorg/jooq/Row22;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row1;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row2;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row3;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row4;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row5;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row6;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row7;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row8;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row9;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row10;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row11;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row12;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row13;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row14;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row15;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row16;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row17;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row18;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row19;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row20;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row21;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/Row22;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;
-#set(Lorg/jooq/Row1;Lorg/jooq/Row1;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row2;Lorg/jooq/Row2;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row3;Lorg/jooq/Row3;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row4;Lorg/jooq/Row4;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row5;Lorg/jooq/Row5;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row6;Lorg/jooq/Row6;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row7;Lorg/jooq/Row7;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row8;Lorg/jooq/Row8;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row9;Lorg/jooq/Row9;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row10;Lorg/jooq/Row10;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row11;Lorg/jooq/Row11;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row12;Lorg/jooq/Row12;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row13;Lorg/jooq/Row13;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row14;Lorg/jooq/Row14;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row15;Lorg/jooq/Row15;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row16;Lorg/jooq/Row16;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row17;Lorg/jooq/Row17;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row18;Lorg/jooq/Row18;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row19;Lorg/jooq/Row19;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row20;Lorg/jooq/Row20;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row21;Lorg/jooq/Row21;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row22;Lorg/jooq/Row22;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row1;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row2;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row3;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row4;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row5;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row6;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row7;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row8;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row9;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row10;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row11;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row12;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row13;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row14;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row15;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row16;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row17;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row18;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row19;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row20;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row21;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
-#set(Lorg/jooq/Row22;Lorg/jooq/Select;)Lorg/jooq/UpdateWhereStep;
@3.7.0
+#set(Lorg/jooq/RowN;Lorg/jooq/RowN;)Lorg/jooq/UpdateFromStep;
+#set(Lorg/jooq/RowN;Lorg/jooq/Select;)Lorg/jooq/UpdateFromStep;

+###org/jooq/UpdateSetMoreStep
@1.5.9

+###org/jooq/UpdateSetStep
@1.5.9
+#set(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/UpdateSetMoreStep;
+#set(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/UpdateSetMoreStep;
@1.6.0
+#set(Ljava/util/Map;)Lorg/jooq/UpdateSetMoreStep;
@3.0.0-RC1
+#set(Lorg/jooq/Field;Lorg/jooq/Select;)Lorg/jooq/UpdateSetMoreStep;
+#set(Lorg/jooq/Record;)Lorg/jooq/UpdateSetMoreStep;
@3.12.0
+#setNull(Lorg/jooq/Field;)Lorg/jooq/UpdateSetMoreStep;

+###org/jooq/UpdateWhereStep
@1.5.9
+#where([Lorg/jooq/Condition;)Lorg/jooq/UpdateConditionStep;
+#where(Ljava/util/Collection;)Lorg/jooq/UpdateConditionStep;
+#where(Ljava/lang/String;)Lorg/jooq/UpdateConditionStep;
+#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/UpdateConditionStep;
+#whereExists(Lorg/jooq/Select;)Lorg/jooq/UpdateConditionStep;
+#whereNotExists(Lorg/jooq/Select;)Lorg/jooq/UpdateConditionStep;
@2.5.0
+#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/UpdateConditionStep;
@3.1.0
+#where(Lorg/jooq/Field;)Lorg/jooq/UpdateConditionStep;
@3.7.0
+#where(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;
+#where(Lorg/jooq/SQL;)Lorg/jooq/UpdateConditionStep;
@3.7.2
*#where(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;[deprecated]
@3.11.0
+#where(Lorg/jooq/Condition;)Lorg/jooq/UpdateConditionStep;
@3.15.0
-#where(Ljava/lang/Boolean;)Lorg/jooq/UpdateConditionStep;[deprecated]

+###org/jooq/util/ase/ASEDataType
@1.6.6
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@3.0.0-RC1
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@3.2.0
-###org/jooq/util/ase/ASEDataType

+###org/jooq/util/ase/ASEDSL
@3.0.0-RC3
@3.2.0
-###org/jooq/util/ase/ASEDSL

+###org/jooq/util/cubrid/CUBRIDDataType
@2.2.0
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;

+###org/jooq/util/cubrid/CUBRIDDSL
@3.0.0-RC3
+#incr(Lorg/jooq/Field;)Lorg/jooq/Field;
+#decr(Lorg/jooq/Field;)Lorg/jooq/Field;

+###org/jooq/util/db2/DB2DataType
@1.5.7
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@3.2.0
-###org/jooq/util/db2/DB2DataType

+###org/jooq/util/db2/DB2DSL
@3.0.0-RC3
@3.2.0
-###org/jooq/util/db2/DB2DSL

+###org/jooq/util/derby/DerbyDataType
@1.5.7
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;

+###org/jooq/util/derby/DerbyDSL
@3.0.0-RC3

+###org/jooq/util/firebird/FirebirdDataType
@2.5.0
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;

+###org/jooq/util/firebird/FirebirdDSL
@3.0.0-RC3

+###org/jooq/util/h2/H2DataType
@1.5.7
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;

+###org/jooq/util/h2/H2DSL
@3.0.0-RC3

+###org/jooq/util/hsqldb/HSQLDBDataType
@1.5.7
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;

+###org/jooq/util/hsqldb/HSQLDBDSL
@3.0.0-RC3

+###org/jooq/util/ingres/IngresDataType
@1.6.0
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@3.2.0
-###org/jooq/util/ingres/IngresDataType

+###org/jooq/util/ingres/IngresDSL
@3.0.0-RC3
@3.2.0
-###org/jooq/util/ingres/IngresDSL

+###org/jooq/util/mysql/MySQLDataType
@1.5.7
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;

+###org/jooq/util/mysql/MySQLDSL
@3.0.0-RC3
+#decode(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#encode(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#encode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#aesDecrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#aesDecrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#aesEncrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#aesEncrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#desDecrypt(Ljava/lang/String;)Lorg/jooq/Field;
+#desDecrypt(Lorg/jooq/Field;)Lorg/jooq/Field;
+#desDecrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#desDecrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#desEncrypt(Ljava/lang/String;)Lorg/jooq/Field;
+#desEncrypt(Lorg/jooq/Field;)Lorg/jooq/Field;
+#desEncrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#desEncrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#compress(Ljava/lang/String;)Lorg/jooq/Field;
+#compress(Lorg/jooq/Field;)Lorg/jooq/Field;
+#uncompress(Ljava/lang/String;)Lorg/jooq/Field;
+#uncompress(Lorg/jooq/Field;)Lorg/jooq/Field;
+#uncompressedLength(Ljava/lang/String;)Lorg/jooq/Field;
+#uncompressedLength(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sha1(Ljava/lang/String;)Lorg/jooq/Field;
+#sha1(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sha2(Ljava/lang/String;I)Lorg/jooq/Field;
+#sha2(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#password(Ljava/lang/String;)Lorg/jooq/Field;
+#password(Lorg/jooq/Field;)Lorg/jooq/Field;
+#enumType(Ljava/lang/Class;I)Ljava/lang/Enum;
@3.4.0
+#decode([B[B)Lorg/jooq/Field;
+#encode([B[B)Lorg/jooq/Field;
+#aesDecrypt([B[B)Lorg/jooq/Field;
+#aesEncrypt([B[B)Lorg/jooq/Field;
+#desDecrypt([B)Lorg/jooq/Field;
+#desDecrypt([B[B)Lorg/jooq/Field;
+#desEncrypt([B)Lorg/jooq/Field;
+#desEncrypt([B[B)Lorg/jooq/Field;
+#compress([B)Lorg/jooq/Field;
+#uncompress([B)Lorg/jooq/Field;
+#uncompressedLength([B)Lorg/jooq/Field;
+#sha1([B)Lorg/jooq/Field;
+#sha2([BI)Lorg/jooq/Field;
+#password([B)Lorg/jooq/Field;
@3.7.0
+#values(Lorg/jooq/Field;)Lorg/jooq/Field;
@3.15.0
*#decode(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#decode([B[B)Lorg/jooq/Field;[deprecated]
*#decode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#encode(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#encode([B[B)Lorg/jooq/Field;[deprecated]
*#encode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#desDecrypt(Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#desDecrypt([B)Lorg/jooq/Field;[deprecated]
*#desDecrypt(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#desDecrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#desDecrypt([B[B)Lorg/jooq/Field;[deprecated]
*#desDecrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#desEncrypt(Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#desEncrypt([B)Lorg/jooq/Field;[deprecated]
*#desEncrypt(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#desEncrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#desEncrypt([B[B)Lorg/jooq/Field;[deprecated]
*#desEncrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#password(Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#password([B)Lorg/jooq/Field;[deprecated]
*#password(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#values(Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]

+###org/jooq/util/oracle/OracleDataType
@1.5.7
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@3.2.0
-###org/jooq/util/oracle/OracleDataType

+###org/jooq/util/oracle/OracleDSL
@3.0.0-RC3
+#rownum()Lorg/jooq/Field;
+#rowid()Lorg/jooq/Field;
+#sysContext(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#sysContext(Ljava/lang/String;Ljava/lang/String;I)Lorg/jooq/Field;
+#contains(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#contains(Lorg/jooq/Field;Ljava/lang/String;I)Lorg/jooq/Field;
+#matches(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#matches(Lorg/jooq/Field;Ljava/lang/String;I)Lorg/jooq/Field;
+#catsearch(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#score(I)Lorg/jooq/Field;
+#matchScore(I)Lorg/jooq/Field;
@3.2.0-alpha-01
+#versionsStartscn()Lorg/jooq/Field;
+#versionsStarttime()Lorg/jooq/Field;
+#versionsEndscn()Lorg/jooq/Field;
+#versionsEndtime()Lorg/jooq/Field;
+#versionsXid()Lorg/jooq/Field;
+#versionsOperation()Lorg/jooq/Field;
@3.2.0
-###org/jooq/util/oracle/OracleDSL

+###org/jooq/util/postgres/PostgresDataType
@1.5.7
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;

+###org/jooq/util/postgres/PostgresDSL
@3.0.0-RC3
@3.2.0
+#arrayAppend([Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayAppend([Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayAppend(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayAppend(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayPrepend(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayPrepend(Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayPrepend(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayPrepend(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayCat([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayCat([Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayCat(Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayCat(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayToString([Ljava/lang/Object;Ljava/lang/String;)Lorg/jooq/Field;
+#arrayToString([Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayToString(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#arrayToString(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#stringToArray(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#stringToArray(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#stringToArray(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#stringToArray(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
@3.2.3
+#oid(Lorg/jooq/Table;)Lorg/jooq/Field;
@3.3.0
+#only(Lorg/jooq/Table;)Lorg/jooq/Table;
@3.6.0
+#array(Lorg/jooq/Select;)Lorg/jooq/Field;
+#arrayRemove([Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayRemove(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayRemove([Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayRemove(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayReplace([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayReplace([Ljava/lang/Object;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayReplace(Lorg/jooq/Field;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayReplace(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayFill(Ljava/lang/Object;[Ljava/lang/Integer;)Lorg/jooq/Field;
+#arrayFill(Lorg/jooq/Field;[Ljava/lang/Integer;)Lorg/jooq/Field;
+#arrayFill(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayFill(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayFill(Ljava/lang/Object;[Ljava/lang/Integer;[Ljava/lang/Integer;)Lorg/jooq/Field;
+#arrayFill(Lorg/jooq/Field;[Ljava/lang/Integer;[Ljava/lang/Integer;)Lorg/jooq/Field;
+#arrayFill(Ljava/lang/Object;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayFill(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#arrayLength([Ljava/lang/Object;)Lorg/jooq/Field;
+#arrayLength(Lorg/jooq/Field;)Lorg/jooq/Field;
+#stringToArray(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#stringToArray(Ljava/lang/String;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#stringToArray(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#stringToArray(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
@3.10.0
+#arrayOverlap([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Condition;
+#arrayOverlap([Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Condition;
+#arrayOverlap(Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Condition;
+#arrayOverlap(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;
@3.15.0
-#array(Lorg/jooq/Select;)Lorg/jooq/Field;
@3.16.0
*#oid(Lorg/jooq/Table;)Lorg/jooq/Field;[deprecated]

+###org/jooq/util/postgres/PostgresUtils
@2.3.0
+#<init>()V
+#toBytes(Ljava/lang/String;)[B
+#toPGInterval(Lorg/jooq/types/DayToSecond;)Ljava/lang/Object;
+#toPGInterval(Lorg/jooq/types/YearToMonth;)Ljava/lang/Object;
+#toDayToSecond(Ljava/lang/Object;)Lorg/jooq/types/DayToSecond;
+#toYearToMonth(Ljava/lang/Object;)Lorg/jooq/types/YearToMonth;
+#toPGObject(Ljava/lang/String;)Ljava/util/List;
@3.0.0-RC1
+#toPGArrayString([Ljava/lang/Object;)Ljava/lang/String;
@3.6.2
+#toPGString(Ljava/lang/Object;)Ljava/lang/String;
+#toPGString(Lorg/jooq/Record;)Ljava/lang/String;
+#toPGString([B)Ljava/lang/String;
@3.8.8
+#toPGArray(Ljava/lang/String;)Ljava/util/List;
@3.12.0
+#toPGInterval(Lorg/jooq/types/YearToSecond;)Ljava/lang/Object;
+#toYearToSecond(Ljava/lang/Object;)Lorg/jooq/types/YearToSecond;
@3.17.0
+#toPGInterval(Lorg/jooq/types/DayToSecond;)Lorg/jooq/util/postgres/PGInterval;
+#toPGInterval(Lorg/jooq/types/YearToSecond;)Lorg/jooq/util/postgres/PGInterval;
+#toPGInterval(Lorg/jooq/types/YearToMonth;)Lorg/jooq/util/postgres/PGInterval;
+#toDayToSecond(Lorg/jooq/util/postgres/PGInterval;)Lorg/jooq/types/DayToSecond;
+#toYearToMonth(Lorg/jooq/util/postgres/PGInterval;)Lorg/jooq/types/YearToMonth;
-#toPGInterval(Lorg/jooq/types/DayToSecond;)Ljava/lang/Object;
-#toPGInterval(Lorg/jooq/types/YearToSecond;)Ljava/lang/Object;
-#toPGInterval(Lorg/jooq/types/YearToMonth;)Ljava/lang/Object;

+###org/jooq/util/sqlite/SQLiteDataType
@1.5.7
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;

+###org/jooq/util/sqlite/SQLiteDSL
@3.0.0-RC3
+#rowid()Lorg/jooq/Field;

+###org/jooq/util/sqlserver/SQLServerDataType
@1.5.8
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@3.2.0
-###org/jooq/util/sqlserver/SQLServerDataType

+###org/jooq/util/sqlserver/SQLServerDSL
@3.0.0-RC3
@3.2.0
-###org/jooq/util/sqlserver/SQLServerDSL

+###org/jooq/util/sybase/SybaseDataType
@1.5.8
+#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@1.6.3
*#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@2.0.0-RC1
-#getDataType(Ljava/lang/String;)Lorg/jooq/DataType;[deprecated]
@3.0.0-RC1
+#<init>()V
-#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
-#getDefaultDataType(Ljava/lang/String;)Lorg/jooq/DataType;
@3.2.0
-###org/jooq/util/sybase/SybaseDataType

+###org/jooq/util/sybase/SybaseDSL
@3.0.0-RC3
@3.2.0
-###org/jooq/util/sybase/SybaseDSL

+###org/jooq/WindowBeforeOverStep
@2.3.0
+#over()Lorg/jooq/WindowPartitionByStep;
@3.6.0
-#over()Lorg/jooq/WindowPartitionByStep;

+###org/jooq/WindowFinalStep
@1.5.9

+###org/jooq/WindowIgnoreNullsStep
@1.5.9
+#ignoreNulls()Lorg/jooq/WindowPartitionByStep;
@1.6.1
+#ignoreNulls()Lorg/jooq/WindowOverStep;
+#respectNulls()Lorg/jooq/WindowOverStep;
-#ignoreNulls()Lorg/jooq/WindowPartitionByStep;
@3.2.0
-#ignoreNulls()Lorg/jooq/WindowOverStep;
-#respectNulls()Lorg/jooq/WindowOverStep;
@3.12.0
+#ignoreNulls()Lorg/jooq/WindowOverStep;
+#respectNulls()Lorg/jooq/WindowOverStep;

+###org/jooq/WindowOrderByStep
@1.5.9
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowRowsStep;
+#orderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowRowsStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/WindowRowsStep;
@3.10.0
+#orderBy([Lorg/jooq/OrderField;)Lorg/jooq/WindowRowsStep;
-#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowRowsStep;
-#orderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowRowsStep;

+###org/jooq/WindowOverStep
@1.6.1
+#over()Lorg/jooq/WindowPartitionByStep;
+#partitionBy([Lorg/jooq/Field;)Lorg/jooq/WindowOrderByStep;[deprecated]
+#partitionByOne()Lorg/jooq/WindowOrderByStep;[deprecated]
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowRowsStep;[deprecated]
+#orderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowRowsStep;[deprecated]
+#orderBy(Ljava/util/Collection;)Lorg/jooq/WindowRowsStep;[deprecated]
@1.6.8
-#partitionBy([Lorg/jooq/Field;)Lorg/jooq/WindowOrderByStep;[deprecated]
-#partitionByOne()Lorg/jooq/WindowOrderByStep;[deprecated]
-#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowRowsStep;[deprecated]
-#orderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowRowsStep;[deprecated]
-#orderBy(Ljava/util/Collection;)Lorg/jooq/WindowRowsStep;[deprecated]
@3.3.0
+#over(Lorg/jooq/Name;)Lorg/jooq/WindowFinalStep;
+#over(Ljava/lang/String;)Lorg/jooq/WindowFinalStep;
+#over(Lorg/jooq/WindowSpecification;)Lorg/jooq/WindowFinalStep;
+#over(Lorg/jooq/WindowDefinition;)Lorg/jooq/WindowFinalStep;

+###org/jooq/WindowPartitionByStep
@1.5.9
+#partitionBy([Lorg/jooq/Field;)Lorg/jooq/WindowOrderByStep;
+#partitionByOne()Lorg/jooq/WindowOrderByStep;
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowRowsStep;
+#orderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowRowsStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/WindowRowsStep;
@1.6.0
-#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowRowsStep;
-#orderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowRowsStep;
-#orderBy(Ljava/util/Collection;)Lorg/jooq/WindowRowsStep;
@3.10.0
+#partitionBy(Ljava/util/Collection;)Lorg/jooq/WindowOrderByStep;
*#partitionByOne()Lorg/jooq/WindowOrderByStep;[deprecated]

+###org/jooq/WindowRowsAndStep
@1.5.9
+#andUnboundedPreceding()Lorg/jooq/WindowFinalStep;
+#andPreceding(I)Lorg/jooq/WindowFinalStep;
+#andCurrentRow()Lorg/jooq/WindowFinalStep;
+#andUnboundedFollowing()Lorg/jooq/WindowFinalStep;
+#andFollowing(I)Lorg/jooq/WindowFinalStep;
@3.12.0
+#andUnboundedPreceding()Lorg/jooq/WindowExcludeStep;
+#andPreceding(I)Lorg/jooq/WindowExcludeStep;
+#andCurrentRow()Lorg/jooq/WindowExcludeStep;
+#andUnboundedFollowing()Lorg/jooq/WindowExcludeStep;
+#andFollowing(I)Lorg/jooq/WindowExcludeStep;
-#andUnboundedPreceding()Lorg/jooq/WindowFinalStep;
-#andPreceding(I)Lorg/jooq/WindowFinalStep;
-#andCurrentRow()Lorg/jooq/WindowFinalStep;
-#andUnboundedFollowing()Lorg/jooq/WindowFinalStep;
-#andFollowing(I)Lorg/jooq/WindowFinalStep;

+###org/jooq/WindowRowsStep
@1.5.9
+#rowsUnboundedPreceding()Lorg/jooq/WindowFinalStep;
+#rowsPreceding(I)Lorg/jooq/WindowFinalStep;
+#rowsCurrentRow()Lorg/jooq/WindowFinalStep;
+#rowsUnboundedFollowing()Lorg/jooq/WindowFinalStep;
+#rowsFollowing(I)Lorg/jooq/WindowFinalStep;
+#rowsBetweenUnboundedPreceding()Lorg/jooq/WindowRowsAndStep;
+#rowsBetweenPreceding(I)Lorg/jooq/WindowRowsAndStep;
+#rowsBetweenCurrentRow()Lorg/jooq/WindowRowsAndStep;
+#rowsBetweenUnboundedFollwing()Lorg/jooq/WindowRowsAndStep;
+#rowsBetweenFollowing(I)Lorg/jooq/WindowRowsAndStep;
@2.0.2
+#rowsBetweenUnboundedFollowing()Lorg/jooq/WindowRowsAndStep;
-#rowsBetweenUnboundedFollwing()Lorg/jooq/WindowRowsAndStep;
@3.8.0
+#rangeUnboundedPreceding()Lorg/jooq/WindowFinalStep;
+#rangePreceding(I)Lorg/jooq/WindowFinalStep;
+#rangeCurrentRow()Lorg/jooq/WindowFinalStep;
+#rangeUnboundedFollowing()Lorg/jooq/WindowFinalStep;
+#rangeFollowing(I)Lorg/jooq/WindowFinalStep;
+#rangeBetweenUnboundedPreceding()Lorg/jooq/WindowRowsAndStep;
+#rangeBetweenPreceding(I)Lorg/jooq/WindowRowsAndStep;
+#rangeBetweenCurrentRow()Lorg/jooq/WindowRowsAndStep;
+#rangeBetweenUnboundedFollowing()Lorg/jooq/WindowRowsAndStep;
+#rangeBetweenFollowing(I)Lorg/jooq/WindowRowsAndStep;
@3.12.0
+#rowsUnboundedPreceding()Lorg/jooq/WindowExcludeStep;
+#rowsPreceding(I)Lorg/jooq/WindowExcludeStep;
+#rowsCurrentRow()Lorg/jooq/WindowExcludeStep;
+#rowsUnboundedFollowing()Lorg/jooq/WindowExcludeStep;
+#rowsFollowing(I)Lorg/jooq/WindowExcludeStep;
+#rangeUnboundedPreceding()Lorg/jooq/WindowExcludeStep;
+#rangePreceding(I)Lorg/jooq/WindowExcludeStep;
+#rangeCurrentRow()Lorg/jooq/WindowExcludeStep;
+#rangeUnboundedFollowing()Lorg/jooq/WindowExcludeStep;
+#rangeFollowing(I)Lorg/jooq/WindowExcludeStep;
+#groupsUnboundedPreceding()Lorg/jooq/WindowExcludeStep;
+#groupsPreceding(I)Lorg/jooq/WindowExcludeStep;
+#groupsCurrentRow()Lorg/jooq/WindowExcludeStep;
+#groupsUnboundedFollowing()Lorg/jooq/WindowExcludeStep;
+#groupsFollowing(I)Lorg/jooq/WindowExcludeStep;
+#groupsBetweenUnboundedPreceding()Lorg/jooq/WindowRowsAndStep;
+#groupsBetweenPreceding(I)Lorg/jooq/WindowRowsAndStep;
+#groupsBetweenCurrentRow()Lorg/jooq/WindowRowsAndStep;
+#groupsBetweenUnboundedFollowing()Lorg/jooq/WindowRowsAndStep;
+#groupsBetweenFollowing(I)Lorg/jooq/WindowRowsAndStep;
-#rowsUnboundedPreceding()Lorg/jooq/WindowFinalStep;
-#rowsPreceding(I)Lorg/jooq/WindowFinalStep;
-#rowsCurrentRow()Lorg/jooq/WindowFinalStep;
-#rowsUnboundedFollowing()Lorg/jooq/WindowFinalStep;
-#rowsFollowing(I)Lorg/jooq/WindowFinalStep;
-#rangeUnboundedPreceding()Lorg/jooq/WindowFinalStep;
-#rangePreceding(I)Lorg/jooq/WindowFinalStep;
-#rangeCurrentRow()Lorg/jooq/WindowFinalStep;
-#rangeUnboundedFollowing()Lorg/jooq/WindowFinalStep;
-#rangeFollowing(I)Lorg/jooq/WindowFinalStep;

+###org/jooq/Adapter
@1.5.7
+#internalAPI(Ljava/lang/Class;)Ljava/lang/Object;
@2.5.0
*#internalAPI(Ljava/lang/Class;)Ljava/lang/Object;[deprecated]
@3.0.0-RC1
-###org/jooq/Adapter

+###org/jooq/AliasProvider
@1.5.7
+#as(Ljava/lang/String;)Lorg/jooq/AliasProvider;
@3.0.0-RC1
-###org/jooq/AliasProvider

+###org/jooq/ConfigurationProvider
@1.5.9
+#provideFor(Lorg/jooq/Configuration;)Lorg/jooq/Configuration;
@3.0.0-RC1
-###org/jooq/ConfigurationProvider

+###org/jooq/ConfigurationRegistry
@1.5.9
+#<init>()V
+#provideFor(Lorg/jooq/Configuration;)Lorg/jooq/Configuration;
+#setProvider(Lorg/jooq/ConfigurationProvider;)V
@3.0.0-RC1
-###org/jooq/ConfigurationRegistry

+###org/jooq/FactoryOperations
@2.0.0-RC1
+#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderInlined(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#attach([Lorg/jooq/Attachable;)V
+#attach(Ljava/util/Collection;)V
+#loadInto(Lorg/jooq/Table;)Lorg/jooq/LoaderOptionsStep;
+#query(Ljava/lang/String;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
+#fetch(Ljava/sql/ResultSet;)Lorg/jooq/Result;
+#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SimpleSelectWhereStep;
+#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectZero()Lorg/jooq/SelectSelectStep;
+#selectOne()Lorg/jooq/SelectSelectStep;
+#selectCount()Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectQuery()Lorg/jooq/SelectQuery;
+#selectQuery(Lorg/jooq/TableLike;)Lorg/jooq/SimpleSelectQuery;
+#insertQuery(Lorg/jooq/Table;)Lorg/jooq/InsertQuery;
+#insertInto(Lorg/jooq/Table;)Lorg/jooq/InsertSetStep;
+#insertInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep;
+#insertInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/InsertValuesStep;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Select;)Lorg/jooq/Insert;
+#updateQuery(Lorg/jooq/Table;)Lorg/jooq/UpdateQuery;
+#update(Lorg/jooq/Table;)Lorg/jooq/UpdateSetStep;
+#mergeInto(Lorg/jooq/Table;)Lorg/jooq/MergeUsingStep;
+#deleteQuery(Lorg/jooq/Table;)Lorg/jooq/DeleteQuery;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#batch([Lorg/jooq/Query;)Lorg/jooq/Batch;
+#batch(Lorg/jooq/Query;)Lorg/jooq/BatchBindStep;
+#truncate(Lorg/jooq/Table;)Lorg/jooq/Truncate;
+#lastID()Ljava/math/BigInteger;
+#nextval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#currval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#use(Lorg/jooq/Schema;)I
+#use(Ljava/lang/String;)I
+#newRecord(Lorg/jooq/UDT;)Lorg/jooq/UDTRecord;
+#newRecord(Lorg/jooq/Table;)Lorg/jooq/TableRecord;
+#newRecord(Lorg/jooq/Table;Ljava/lang/Object;)Lorg/jooq/TableRecord;
+#fetch(Lorg/jooq/Table;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Result;
+#fetchOne(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;)Lorg/jooq/Record;
+#executeInsert(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I
+#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I
+#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I
+#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeDelete(Lorg/jooq/Table;)I
+#executeDelete(Lorg/jooq/Table;Lorg/jooq/Condition;)I
+#executeDeleteOne(Lorg/jooq/Table;)I
+#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Condition;)I
+#fetch(Ljava/lang/String;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Result;
+#fetchMany(Ljava/lang/String;)Ljava/util/List;
+#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#fetchOne(Ljava/lang/String;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
@2.0.1
+#renderNamedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
@2.0.2
+#resultQuery(Ljava/lang/String;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/ResultQuery;
@2.0.3
*#insertInto(Lorg/jooq/Table;Lorg/jooq/Select;)Lorg/jooq/Insert;[deprecated]
+#execute(Ljava/lang/String;)I
+#execute(Ljava/lang/String;[Ljava/lang/Object;)I
@2.1.0
+#batch(Ljava/util/Collection;)Lorg/jooq/Batch;
+#fetchLazy(Ljava/lang/String;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Cursor;
@2.3.0
+#batchStore([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
@2.4.0
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
+#fetchFromCSV(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;C)Lorg/jooq/Result;
+#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep;
+#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStep;
+#batchStore(Ljava/util/Collection;)Lorg/jooq/Batch;
+#fetch(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Result;
+#fetchLazy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Cursor;
+#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
+#fetchOne(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
+#execute(Ljava/lang/String;[Lorg/jooq/QueryPart;)I
+#resultQuery(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/ResultQuery;
+#getTransactionIsolation()I
+#setTransactionIsolation(I)V
+#getHoldability()I
+#setHoldability(I)V
+#getAutoCommit()Z
+#setAutoCommit(Z)V
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#setSavepoint()Ljava/sql/Savepoint;
+#rollback(Ljava/sql/Savepoint;)V
+#rollback()V
+#commit()V
@2.5.0
+#fetchLazy(Ljava/sql/ResultSet;)Lorg/jooq/Cursor;
*#executeInsert(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
+#executeInsert(Lorg/jooq/TableRecord;)I
*#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
*#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I[deprecated]
*#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
*#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I[deprecated]
+#executeUpdate(Lorg/jooq/UpdatableRecord;)I
+#executeUpdate(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeDelete(Lorg/jooq/UpdatableRecord;)I
+#executeDelete(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
*#executeDelete(Lorg/jooq/Table;)I[deprecated]
*#executeDelete(Lorg/jooq/Table;Lorg/jooq/Condition;)I[deprecated]
*#executeDeleteOne(Lorg/jooq/Table;)I[deprecated]
*#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Condition;)I[deprecated]
@3.0.0-RC1
-###org/jooq/FactoryOperations

+###org/jooq/FieldProvider
@1.5.7
+#getField(Lorg/jooq/Field;)Lorg/jooq/Field;
+#getField(Ljava/lang/String;)Lorg/jooq/Field;
+#getField(I)Lorg/jooq/Field;
+#getFields()Ljava/util/List;
@1.5.8
+#getIndex(Lorg/jooq/Field;)I
@3.0.0-RC1
-###org/jooq/FieldProvider

+###org/jooq/impl/AbstractDataType
@1.5.7
+#getSQLType()I
+#getType()Ljava/lang/Class;
+#getType(II)Ljava/lang/Class;
+#getArrayType()Ljava/lang/Class;
+#getTypeName()Ljava/lang/String;
+#getCastTypeName()Ljava/lang/String;
+#getArrayTypeName()Ljava/lang/String;
+#getArrayDataType()Lorg/jooq/DataType;
+#asArrayDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#asMasterDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#asEnumDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#asNumberDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
+#getDialect()Lorg/jooq/SQLDialect;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
@1.6.1
+#getSQLDataType()Lorg/jooq/impl/SQLDataType;
+#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
+#getTypeName(Lorg/jooq/Configuration;)Ljava/lang/String;
+#getCastTypeName(Lorg/jooq/Configuration;)Ljava/lang/String;
-#getArrayTypeName()Ljava/lang/String;
-#asNumberDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
@1.6.3
+#isNumeric()Z
+#isString()Z
+#isTemporal()Z
+#isBinary()Z
@1.6.6
+#getCastTypeName(Lorg/jooq/Configuration;II)Ljava/lang/String;
@1.6.8
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.0.5
+#isArray()Z
@2.1.0
+#asConvertedDataType(Lorg/jooq/Converter;)Lorg/jooq/DataType;
@2.2.0
+#isDateTime()Z
+#isInterval()Z
@2.3.0
+#isLob()Z
@2.4.0
+#convert([Ljava/lang/Object;)[Ljava/lang/Object;
+#convert(Ljava/util/Collection;)Ljava/util/List;
@2.5.0
+#getCastTypeName(Lorg/jooq/Configuration;I)Ljava/lang/String;
@3.0.0-RC1
-###org/jooq/impl/AbstractDataType

+###org/jooq/impl/Factory
@1.5.7
+#<init>(Ljava/sql/Connection;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;)V
+#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;Lorg/jooq/SchemaMapping;)V
+#<init>(Lorg/jooq/Configuration;)V[deprecated]
+#attach([Lorg/jooq/Attachable;)V
+#attach(Ljava/util/Collection;)V
+#getDialect()Lorg/jooq/SQLDialect;
+#getConnection()Ljava/sql/Connection;
+#getSchemaMapping()Lorg/jooq/SchemaMapping;
+#plainSQLTable(Ljava/lang/String;)Lorg/jooq/Table;
+#plainSQLTable(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#plainSQLField(Ljava/lang/String;)Lorg/jooq/Field;
+#plainSQLField(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Field;
+#plainSQLField(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
+#plainSQLField(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/jooq/Field;
+#plainSQLCondition(Ljava/lang/String;)Lorg/jooq/Condition;
+#plainSQLCondition(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Condition;
+#trueCondition()Lorg/jooq/Condition;
+#falseCondition()Lorg/jooq/Condition;
+#combinedCondition([Lorg/jooq/Condition;)Lorg/jooq/Condition;[deprecated]
+#combinedCondition(Ljava/util/Collection;)Lorg/jooq/Condition;[deprecated]
+#combinedCondition(Lorg/jooq/Operator;[Lorg/jooq/Condition;)Lorg/jooq/Condition;[deprecated]
+#combinedCondition(Lorg/jooq/Operator;Ljava/util/Collection;)Lorg/jooq/Condition;[deprecated]
+#notCondition(Lorg/jooq/Condition;)Lorg/jooq/Condition;[deprecated]
+#exists(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notExists(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#betweenCondition(Lorg/jooq/Field;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;[deprecated]
+#inCondition(Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Condition;[deprecated]
+#notInCondition(Lorg/jooq/Field;Ljava/util/Collection;)Lorg/jooq/Condition;[deprecated]
+#notInCondition(Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Condition;[deprecated]
+#inCondition(Lorg/jooq/Field;Ljava/util/Collection;)Lorg/jooq/Condition;[deprecated]
+#compareCondition(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Condition;[deprecated]
+#compareCondition(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Comparator;)Lorg/jooq/Condition;[deprecated]
+#nullCondition(Lorg/jooq/Field;)Lorg/jooq/Condition;[deprecated]
+#notNullCondition(Lorg/jooq/Field;)Lorg/jooq/Condition;[deprecated]
+#joinCondition(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;[deprecated]
+#joinCondition(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Comparator;)Lorg/jooq/Condition;[deprecated]
+#insertQuery(Lorg/jooq/Table;)Lorg/jooq/InsertQuery;
+#insertQuery(Lorg/jooq/Table;Lorg/jooq/Select;)Lorg/jooq/InsertSelectQuery;
+#updateQuery(Lorg/jooq/Table;)Lorg/jooq/UpdateQuery;
+#deleteQuery(Lorg/jooq/Table;)Lorg/jooq/DeleteQuery;
+#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SimpleSelectWhereStep;
+#select([Lorg/jooq/Field;)Lorg/jooq/SelectFromStep;
+#select([Ljava/lang/Object;)Lorg/jooq/SelectFromStep;
+#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectFromStep;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectFromStep;
+#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectFromStep;
+#selectQuery()Lorg/jooq/SelectQuery;
+#selectQuery(Lorg/jooq/TableLike;)Lorg/jooq/SimpleSelectQuery;
+#join(Lorg/jooq/TableLike;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/impl/Join;[deprecated]
+#join(Lorg/jooq/TableLike;[Lorg/jooq/Condition;)Lorg/jooq/impl/Join;[deprecated]
+#join(Lorg/jooq/TableLike;Lorg/jooq/JoinType;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/impl/Join;[deprecated]
+#join(Lorg/jooq/TableLike;Lorg/jooq/JoinType;[Lorg/jooq/Condition;)Lorg/jooq/impl/Join;[deprecated]
+#newRecord(Lorg/jooq/Table;)Lorg/jooq/Record;
+#decode()Lorg/jooq/Case;
+#decode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#decode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#cast(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#castNull(Lorg/jooq/Field;)Lorg/jooq/Field;
+#cast(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;
+#castNull(Lorg/jooq/DataType;)Lorg/jooq/Field;
+#cast(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#castNull(Ljava/lang/Class;)Lorg/jooq/Field;
+#constant(Ljava/lang/Object;)Lorg/jooq/Field;
+#constant(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;
+#constant(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#constant(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#constant([Ljava/lang/Object;)Ljava/util/List;[deprecated]
+#constants([Ljava/lang/Object;)Ljava/util/List;
+#NULL()Lorg/jooq/Field;[deprecated]
+#rownum()Lorg/jooq/Field;
+#count()Lorg/jooq/Field;
+#currentDate()Lorg/jooq/Field;
+#currentTime()Lorg/jooq/Field;
+#currentTimestamp()Lorg/jooq/Field;
+#currentUser()Lorg/jooq/Field;
+#fetch(Lorg/jooq/Table;)Ljava/util/List;
+#fetch(Lorg/jooq/Table;Lorg/jooq/Field;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
+#fetch(Lorg/jooq/Table;Lorg/jooq/Field;Ljava/util/Collection;)Ljava/util/List;[deprecated]
+#fetch(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/List;
+#fetchOne(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Record;[deprecated]
+#fetchOne(Lorg/jooq/Table;Lorg/jooq/Field;Ljava/util/Collection;)Lorg/jooq/Record;[deprecated]
+#fetchOne(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;)Lorg/jooq/Record;
+#executeInsert(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I
+#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I
+#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Field;[Ljava/lang/Object;)I[deprecated]
+#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Field;Ljava/util/Collection;)I[deprecated]
+#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I
+#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Field;[Ljava/lang/Object;)I[deprecated]
+#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Field;Ljava/util/Collection;)I[deprecated]
+#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeDelete(Lorg/jooq/Table;)I
+#executeDelete(Lorg/jooq/Table;Lorg/jooq/Field;[Ljava/lang/Object;)I[deprecated]
+#executeDelete(Lorg/jooq/Table;Lorg/jooq/Field;Ljava/util/Collection;)I[deprecated]
+#executeDelete(Lorg/jooq/Table;Lorg/jooq/Condition;)I
+#executeDeleteOne(Lorg/jooq/Table;)I
+#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Field;[Ljava/lang/Object;)I[deprecated]
+#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Field;Ljava/util/Collection;)I[deprecated]
+#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Condition;)I
+#nextval(Lorg/jooq/Sequence;)Ljava/math/BigInteger;
+#currval(Lorg/jooq/Sequence;)Ljava/math/BigInteger;
+#toString()Ljava/lang/String;
+#getFactory(Lorg/jooq/SQLDialect;)Lorg/jooq/impl/Factory;
+#getFactory(Lorg/jooq/Configuration;)Lorg/jooq/impl/Factory;
@1.5.9
+#insertInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Select;)Lorg/jooq/Insert;
*#insertQuery(Lorg/jooq/Table;Lorg/jooq/Select;)Lorg/jooq/InsertSelectQuery;[deprecated]
+#lastID()Ljava/math/BigInteger;
+#lastID(Lorg/jooq/Identity;)Ljava/lang/Number;
+#update(Lorg/jooq/Table;)Lorg/jooq/UpdateSetStep;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#truncate(Lorg/jooq/Table;)Lorg/jooq/Truncate;
*#select([Ljava/lang/Object;)Lorg/jooq/SelectFromStep;[deprecated]
+#selectZero()Lorg/jooq/SelectFromStep;
+#selectOne()Lorg/jooq/SelectFromStep;
*#rownum()Lorg/jooq/Field;[deprecated]
+#countOver()Lorg/jooq/WindowPartitionByStep;
+#rowNumberOver()Lorg/jooq/WindowPartitionByStep;
+#rankOver()Lorg/jooq/WindowPartitionByStep;
+#denseRankOver()Lorg/jooq/WindowPartitionByStep;
+#percentRankOver()Lorg/jooq/WindowPartitionByStep;
+#ntile(I)Lorg/jooq/WindowPartitionByStep;
+#zero()Lorg/jooq/Field;
+#one()Lorg/jooq/Field;
+#getDataType(Ljava/lang/Class;)Lorg/jooq/DataType;
@1.6.0
+#plainSQLField(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#plainSQLField(Ljava/lang/String;Lorg/jooq/DataType;[Ljava/lang/Object;)Lorg/jooq/Field;
+#plainSQLQuery(Ljava/lang/String;)Lorg/jooq/Query;
+#plainSQLQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
+#insertInto(Lorg/jooq/Table;)Lorg/jooq/InsertSetStep;
+#insertInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/InsertValuesStep;
+#mergeInto(Lorg/jooq/Table;)Lorg/jooq/MergeUsingStep;
+#use(Lorg/jooq/Schema;)I
+#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select([Ljava/lang/Object;)Lorg/jooq/SelectSelectStep;[deprecated]
+#selectZero()Lorg/jooq/SelectSelectStep;
+#selectOne()Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#rand()Lorg/jooq/Field;
*#getFactory(Lorg/jooq/SQLDialect;)Lorg/jooq/impl/Factory;[deprecated]
*#getFactory(Lorg/jooq/Configuration;)Lorg/jooq/impl/Factory;[deprecated]
-#<init>(Ljava/sql/Connection;)V[deprecated]
-#<init>(Lorg/jooq/Configuration;)V[deprecated]
-#combinedCondition([Lorg/jooq/Condition;)Lorg/jooq/Condition;[deprecated]
-#combinedCondition(Ljava/util/Collection;)Lorg/jooq/Condition;[deprecated]
-#combinedCondition(Lorg/jooq/Operator;[Lorg/jooq/Condition;)Lorg/jooq/Condition;[deprecated]
-#combinedCondition(Lorg/jooq/Operator;Ljava/util/Collection;)Lorg/jooq/Condition;[deprecated]
-#notCondition(Lorg/jooq/Condition;)Lorg/jooq/Condition;[deprecated]
-#betweenCondition(Lorg/jooq/Field;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Condition;[deprecated]
-#inCondition(Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Condition;[deprecated]
-#notInCondition(Lorg/jooq/Field;Ljava/util/Collection;)Lorg/jooq/Condition;[deprecated]
-#notInCondition(Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Condition;[deprecated]
-#inCondition(Lorg/jooq/Field;Ljava/util/Collection;)Lorg/jooq/Condition;[deprecated]
-#compareCondition(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Condition;[deprecated]
-#compareCondition(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Comparator;)Lorg/jooq/Condition;[deprecated]
-#nullCondition(Lorg/jooq/Field;)Lorg/jooq/Condition;[deprecated]
-#notNullCondition(Lorg/jooq/Field;)Lorg/jooq/Condition;[deprecated]
-#joinCondition(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Condition;[deprecated]
-#joinCondition(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Comparator;)Lorg/jooq/Condition;[deprecated]
-#select([Lorg/jooq/Field;)Lorg/jooq/SelectFromStep;
-#select([Ljava/lang/Object;)Lorg/jooq/SelectFromStep;[deprecated]
-#selectZero()Lorg/jooq/SelectFromStep;
-#selectOne()Lorg/jooq/SelectFromStep;
-#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectFromStep;
-#select(Ljava/util/Collection;)Lorg/jooq/SelectFromStep;
-#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectFromStep;
-#join(Lorg/jooq/TableLike;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/impl/Join;[deprecated]
-#join(Lorg/jooq/TableLike;[Lorg/jooq/Condition;)Lorg/jooq/impl/Join;[deprecated]
-#join(Lorg/jooq/TableLike;Lorg/jooq/JoinType;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/impl/Join;[deprecated]
-#join(Lorg/jooq/TableLike;Lorg/jooq/JoinType;[Lorg/jooq/Condition;)Lorg/jooq/impl/Join;[deprecated]
-#fetch(Lorg/jooq/Table;Lorg/jooq/Field;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
-#fetch(Lorg/jooq/Table;Lorg/jooq/Field;Ljava/util/Collection;)Ljava/util/List;[deprecated]
-#fetchOne(Lorg/jooq/Table;Lorg/jooq/Field;[Ljava/lang/Object;)Lorg/jooq/Record;[deprecated]
-#fetchOne(Lorg/jooq/Table;Lorg/jooq/Field;Ljava/util/Collection;)Lorg/jooq/Record;[deprecated]
-#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Field;[Ljava/lang/Object;)I[deprecated]
-#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Field;Ljava/util/Collection;)I[deprecated]
-#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Field;[Ljava/lang/Object;)I[deprecated]
-#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Field;Ljava/util/Collection;)I[deprecated]
-#executeDelete(Lorg/jooq/Table;Lorg/jooq/Field;[Ljava/lang/Object;)I[deprecated]
-#executeDelete(Lorg/jooq/Table;Lorg/jooq/Field;Ljava/util/Collection;)I[deprecated]
-#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Field;[Ljava/lang/Object;)I[deprecated]
-#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Field;Ljava/util/Collection;)I[deprecated]
@1.6.1
+#use(Ljava/lang/String;)I
+#val(Ljava/lang/Object;)Lorg/jooq/Field;
+#val(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;
+#val(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#val(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#vals([Ljava/lang/Object;)Ljava/util/List;
+#literal(Ljava/lang/Object;)Lorg/jooq/Field;
+#literal(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;
+#literal(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#two()Lorg/jooq/Field;
+#pi()Lorg/jooq/Field;
+#cumeDistOver()Lorg/jooq/WindowPartitionByStep;
@1.6.2
*#plainSQLTable(Ljava/lang/String;)Lorg/jooq/Table;[deprecated]
*#plainSQLTable(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;[deprecated]
+#table(Ljava/lang/String;)Lorg/jooq/Table;
+#table(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
*#plainSQLField(Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
*#plainSQLField(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#plainSQLField(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;[deprecated]
*#plainSQLField(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#plainSQLField(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;[deprecated]
*#plainSQLField(Ljava/lang/String;Lorg/jooq/DataType;[Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;[Ljava/lang/Object;)Lorg/jooq/Field;
+#function(Ljava/lang/String;Ljava/lang/Class;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#function(Ljava/lang/String;Lorg/jooq/DataType;[Lorg/jooq/Field;)Lorg/jooq/Field;
*#plainSQLCondition(Ljava/lang/String;)Lorg/jooq/Condition;[deprecated]
*#plainSQLCondition(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Condition;[deprecated]
+#condition(Ljava/lang/String;)Lorg/jooq/Condition;
+#condition(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Condition;
*#plainSQLQuery(Ljava/lang/String;)Lorg/jooq/Query;[deprecated]
*#plainSQLQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;[deprecated]
+#query(Ljava/lang/String;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
+#fetch(Ljava/lang/String;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Result;
-#fetch(Lorg/jooq/Table;)Ljava/util/List;
-#fetch(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/List;
@1.6.3
+#table(Ljava/util/List;)Lorg/jooq/Table;
+#table([Ljava/lang/Object;)Lorg/jooq/Table;
+#table(Lorg/jooq/ArrayRecord;)Lorg/jooq/Table;
+#table(Lorg/jooq/Field;)Lorg/jooq/Table;
*#constant(Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#constant(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;[deprecated]
*#constant(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
*#constant(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;[deprecated]
*#constants([Ljava/lang/Object;)Ljava/util/List;[deprecated]
@1.6.4
+#renderContext()Lorg/jooq/RenderContext;
+#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderInlined(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#bindContext(Ljava/sql/PreparedStatement;)Lorg/jooq/BindContext;
+#bind(Lorg/jooq/QueryPart;Ljava/sql/PreparedStatement;)I
+#unnest(Ljava/util/List;)Lorg/jooq/Table;
+#unnest([Ljava/lang/Object;)Lorg/jooq/Table;
+#unnest(Lorg/jooq/ArrayRecord;)Lorg/jooq/Table;
+#unnest(Lorg/jooq/Field;)Lorg/jooq/Table;
+#e()Lorg/jooq/Field;
@1.6.5
+#loadInto(Lorg/jooq/Table;)Lorg/jooq/LoaderOptionsStep;
@1.6.6
+#fetchOne(Ljava/lang/String;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
*#lastID(Lorg/jooq/Identity;)Ljava/lang/Number;[deprecated]
@1.6.7
+#fetchMany(Ljava/lang/String;)Ljava/util/List;
+#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#fetch(Ljava/sql/ResultSet;)Lorg/jooq/Result;
@1.6.8
-#plainSQLTable(Ljava/lang/String;)Lorg/jooq/Table;[deprecated]
-#plainSQLTable(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;[deprecated]
-#plainSQLField(Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
-#plainSQLField(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
-#plainSQLField(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;[deprecated]
-#plainSQLField(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
-#plainSQLField(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;[deprecated]
-#plainSQLField(Ljava/lang/String;Lorg/jooq/DataType;[Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
-#plainSQLCondition(Ljava/lang/String;)Lorg/jooq/Condition;[deprecated]
-#plainSQLCondition(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Condition;[deprecated]
-#plainSQLQuery(Ljava/lang/String;)Lorg/jooq/Query;[deprecated]
-#plainSQLQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;[deprecated]
-#select([Ljava/lang/Object;)Lorg/jooq/SelectSelectStep;[deprecated]
-#insertQuery(Lorg/jooq/Table;Lorg/jooq/Select;)Lorg/jooq/InsertSelectQuery;[deprecated]
-#NULL()Lorg/jooq/Field;[deprecated]
-#rownum()Lorg/jooq/Field;[deprecated]
-#getFactory(Lorg/jooq/SQLDialect;)Lorg/jooq/impl/Factory;[deprecated]
-#getFactory(Lorg/jooq/Configuration;)Lorg/jooq/impl/Factory;[deprecated]
@1.6.9
+#batch([Lorg/jooq/Query;)Lorg/jooq/Batch;
+#batch(Lorg/jooq/Query;)Lorg/jooq/BatchBindStep;
@2.0.0-RC1
+#selectCount()Lorg/jooq/SelectSelectStep;
+#nextval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#currval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#newRecord(Lorg/jooq/UDT;)Lorg/jooq/UDTRecord;
+#newRecord(Lorg/jooq/Table;)Lorg/jooq/TableRecord;
+#newRecord(Lorg/jooq/Table;Ljava/lang/Object;)Lorg/jooq/TableRecord;
+#coalesce(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#coalesce(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl2(Lorg/jooq/Field;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl2(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nvl2(Lorg/jooq/Field;Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#nvl2(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nullif(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Field;
+#nullif(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#nullif(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Field;
+#nullif(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#upper(Ljava/lang/String;)Lorg/jooq/Field;
+#upper(Lorg/jooq/Field;)Lorg/jooq/Field;
+#lower(Ljava/lang/String;)Lorg/jooq/Field;
+#lower(Lorg/jooq/Field;)Lorg/jooq/Field;
+#trim(Ljava/lang/String;)Lorg/jooq/Field;
+#trim(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rtrim(Ljava/lang/String;)Lorg/jooq/Field;
+#rtrim(Lorg/jooq/Field;)Lorg/jooq/Field;
+#ltrim(Ljava/lang/String;)Lorg/jooq/Field;
+#ltrim(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;IC)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;ILjava/lang/String;)Lorg/jooq/Field;
+#rpad(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;IC)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;ILjava/lang/String;)Lorg/jooq/Field;
+#lpad(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#repeat(Ljava/lang/String;I)Lorg/jooq/Field;
+#repeat(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#repeat(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#repeat(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#replace(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#position(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#position(Ljava/lang/String;Lorg/jooq/Field;)Lorg/jooq/Field;
+#position(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#position(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#ascii(Ljava/lang/String;)Lorg/jooq/Field;
+#ascii(Lorg/jooq/Field;)Lorg/jooq/Field;
+#concat([Ljava/lang/String;)Lorg/jooq/Field;
+#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;II)Lorg/jooq/Field;
+#substring(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#length(Ljava/lang/String;)Lorg/jooq/Field;
+#length(Lorg/jooq/Field;)Lorg/jooq/Field;
+#charLength(Ljava/lang/String;)Lorg/jooq/Field;
+#charLength(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitLength(Ljava/lang/String;)Lorg/jooq/Field;
+#bitLength(Lorg/jooq/Field;)Lorg/jooq/Field;
+#octetLength(Ljava/lang/String;)Lorg/jooq/Field;
+#octetLength(Lorg/jooq/Field;)Lorg/jooq/Field;
+#extract(Ljava/util/Date;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#extract(Lorg/jooq/Field;Lorg/jooq/DatePart;)Lorg/jooq/Field;
+#rollup([Lorg/jooq/Field;)Lorg/jooq/Field;
+#cube([Lorg/jooq/Field;)Lorg/jooq/Field;
+#groupingSets([Lorg/jooq/Field;)Lorg/jooq/Field;
+#groupingSets([[Lorg/jooq/Field;)Lorg/jooq/Field;
+#groupingSets([Ljava/util/Collection;)Lorg/jooq/Field;
+#grouping(Lorg/jooq/Field;)Lorg/jooq/Field;
+#groupingId([Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitCount(Ljava/lang/Number;)Lorg/jooq/Field;
+#bitCount(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNot(Ljava/lang/Number;)Lorg/jooq/Field;
+#bitNot(Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitAnd(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitAnd(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitAnd(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitAnd(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNand(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitNand(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNand(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitNand(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitOr(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitOr(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitOr(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitOr(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNor(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitNor(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitNor(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitNor(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitXor(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitXor(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitXor(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitXor(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitXNor(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitXNor(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#bitXNor(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#bitXNor(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#shl(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#shl(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#shl(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#shl(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#shr(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#shr(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#shr(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#shr(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#greatest(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#greatest(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#least(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/jooq/Field;
+#least(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#sign(Ljava/lang/Number;)Lorg/jooq/Field;
+#sign(Lorg/jooq/Field;)Lorg/jooq/Field;
+#abs(Ljava/lang/Number;)Lorg/jooq/Field;
+#abs(Lorg/jooq/Field;)Lorg/jooq/Field;
+#round(Ljava/lang/Number;)Lorg/jooq/Field;
+#round(Lorg/jooq/Field;)Lorg/jooq/Field;
+#round(Ljava/lang/Number;I)Lorg/jooq/Field;
+#round(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#floor(Ljava/lang/Number;)Lorg/jooq/Field;
+#floor(Lorg/jooq/Field;)Lorg/jooq/Field;
+#ceil(Ljava/lang/Number;)Lorg/jooq/Field;
+#ceil(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sqrt(Ljava/lang/Number;)Lorg/jooq/Field;
+#sqrt(Lorg/jooq/Field;)Lorg/jooq/Field;
+#exp(Ljava/lang/Number;)Lorg/jooq/Field;
+#exp(Lorg/jooq/Field;)Lorg/jooq/Field;
+#ln(Ljava/lang/Number;)Lorg/jooq/Field;
+#ln(Lorg/jooq/Field;)Lorg/jooq/Field;
+#log(Ljava/lang/Number;I)Lorg/jooq/Field;
+#log(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#power(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#power(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#power(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#power(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#acos(Ljava/lang/Number;)Lorg/jooq/Field;
+#acos(Lorg/jooq/Field;)Lorg/jooq/Field;
+#asin(Ljava/lang/Number;)Lorg/jooq/Field;
+#asin(Lorg/jooq/Field;)Lorg/jooq/Field;
+#atan(Ljava/lang/Number;)Lorg/jooq/Field;
+#atan(Lorg/jooq/Field;)Lorg/jooq/Field;
+#atan2(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jooq/Field;
+#atan2(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#atan2(Lorg/jooq/Field;Ljava/lang/Number;)Lorg/jooq/Field;
+#atan2(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#cos(Ljava/lang/Number;)Lorg/jooq/Field;
+#cos(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sin(Ljava/lang/Number;)Lorg/jooq/Field;
+#sin(Lorg/jooq/Field;)Lorg/jooq/Field;
+#tan(Ljava/lang/Number;)Lorg/jooq/Field;
+#tan(Lorg/jooq/Field;)Lorg/jooq/Field;
+#cot(Ljava/lang/Number;)Lorg/jooq/Field;
+#cot(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sinh(Ljava/lang/Number;)Lorg/jooq/Field;
+#sinh(Lorg/jooq/Field;)Lorg/jooq/Field;
+#cosh(Ljava/lang/Number;)Lorg/jooq/Field;
+#cosh(Lorg/jooq/Field;)Lorg/jooq/Field;
+#tanh(Ljava/lang/Number;)Lorg/jooq/Field;
+#tanh(Lorg/jooq/Field;)Lorg/jooq/Field;
+#coth(Ljava/lang/Number;)Lorg/jooq/Field;
+#coth(Lorg/jooq/Field;)Lorg/jooq/Field;
+#deg(Ljava/lang/Number;)Lorg/jooq/Field;
+#deg(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rad(Ljava/lang/Number;)Lorg/jooq/Field;
+#rad(Lorg/jooq/Field;)Lorg/jooq/Field;
+#count()Lorg/jooq/AggregateFunction;
+#count(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#countDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#max(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#min(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#sum(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#avg(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#median(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#stddevPop(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#stddevSamp(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#varPop(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#varSamp(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#rowNumber()Lorg/jooq/WindowOverStep;
+#rank()Lorg/jooq/WindowOverStep;
+#denseRank()Lorg/jooq/WindowOverStep;
+#percentRank()Lorg/jooq/WindowOverStep;
+#cumeDist()Lorg/jooq/WindowOverStep;
+#ntile(I)Lorg/jooq/WindowOverStep;
+#firstValue(Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lastValue(Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(Lorg/jooq/Field;I)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(Lorg/jooq/Field;ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
+#lead(Lorg/jooq/Field;ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;I)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;ILjava/lang/Object;)Lorg/jooq/WindowIgnoreNullsStep;
+#lag(Lorg/jooq/Field;ILorg/jooq/Field;)Lorg/jooq/WindowIgnoreNullsStep;
-#lastID(Lorg/jooq/Identity;)Ljava/lang/Number;[deprecated]
-#nextval(Lorg/jooq/Sequence;)Ljava/math/BigInteger;
-#currval(Lorg/jooq/Sequence;)Ljava/math/BigInteger;
-#newRecord(Lorg/jooq/Table;)Lorg/jooq/Record;
-#constant(Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
-#constant(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;[deprecated]
-#constant(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;[deprecated]
-#constant(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;[deprecated]
-#constant([Ljava/lang/Object;)Ljava/util/List;[deprecated]
-#constants([Ljava/lang/Object;)Ljava/util/List;[deprecated]
-#count()Lorg/jooq/Field;
-#countOver()Lorg/jooq/WindowPartitionByStep;
-#rowNumberOver()Lorg/jooq/WindowPartitionByStep;
-#rankOver()Lorg/jooq/WindowPartitionByStep;
-#denseRankOver()Lorg/jooq/WindowPartitionByStep;
-#percentRankOver()Lorg/jooq/WindowPartitionByStep;
-#cumeDistOver()Lorg/jooq/WindowPartitionByStep;
-#ntile(I)Lorg/jooq/WindowPartitionByStep;
@2.0.1
+#renderNamedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#param(Ljava/lang/String;)Lorg/jooq/Param;
+#param(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Param;
+#param(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Param;
+#param(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/Param;
+#value(Ljava/lang/Object;)Lorg/jooq/Field;
+#value(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;
+#value(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
+#value(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;
@2.0.2
+#table(Lorg/jooq/Select;)Lorg/jooq/Table;
+#resultQuery(Ljava/lang/String;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/ResultQuery;
+#maxDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#minDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#sumDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#avgDistinct(Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
@2.0.3
+#execute(Ljava/lang/String;)I
+#execute(Ljava/lang/String;[Ljava/lang/Object;)I
*#insertInto(Lorg/jooq/Table;Lorg/jooq/Select;)Lorg/jooq/Insert;[deprecated]
@2.0.4
+#escape(Ljava/lang/String;C)Ljava/lang/String;
+#escape(Lorg/jooq/Field;C)Lorg/jooq/Field;
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
*#getSchemaMapping()Lorg/jooq/SchemaMapping;[deprecated]
+#getSettings()Lorg/jooq/conf/Settings;
+#getData()Ljava/util/Map;
+#getData(Ljava/lang/String;)Ljava/lang/Object;
+#setData(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
@2.1.0
+#setConnection(Ljava/sql/Connection;)V
+#fetchLazy(Ljava/lang/String;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Cursor;
+#batch(Ljava/util/Collection;)Lorg/jooq/Batch;
@2.2.0
+#field(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Ljava/lang/Class;[Lorg/jooq/QueryPart;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;[Lorg/jooq/QueryPart;)Lorg/jooq/Field;
+#dateDiff(Ljava/sql/Date;Ljava/sql/Date;)Lorg/jooq/Field;
+#dateDiff(Lorg/jooq/Field;Ljava/sql/Date;)Lorg/jooq/Field;
+#dateDiff(Ljava/sql/Date;Lorg/jooq/Field;)Lorg/jooq/Field;
+#dateDiff(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampDiff(Ljava/sql/Timestamp;Ljava/sql/Timestamp;)Lorg/jooq/Field;
+#timestampDiff(Lorg/jooq/Field;Ljava/sql/Timestamp;)Lorg/jooq/Field;
+#timestampDiff(Ljava/sql/Timestamp;Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampDiff(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#year(Ljava/util/Date;)Lorg/jooq/Field;
+#year(Lorg/jooq/Field;)Lorg/jooq/Field;
+#month(Ljava/util/Date;)Lorg/jooq/Field;
+#month(Lorg/jooq/Field;)Lorg/jooq/Field;
+#day(Ljava/util/Date;)Lorg/jooq/Field;
+#day(Lorg/jooq/Field;)Lorg/jooq/Field;
+#hour(Ljava/util/Date;)Lorg/jooq/Field;
+#hour(Lorg/jooq/Field;)Lorg/jooq/Field;
+#minute(Ljava/util/Date;)Lorg/jooq/Field;
+#minute(Lorg/jooq/Field;)Lorg/jooq/Field;
+#second(Ljava/util/Date;)Lorg/jooq/Field;
+#second(Lorg/jooq/Field;)Lorg/jooq/Field;
+#level()Lorg/jooq/Field;
+#connectByIsCycle()Lorg/jooq/Field;
+#connectByIsLeaf()Lorg/jooq/Field;
+#sysConnectByPath(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#prior(Lorg/jooq/Field;)Lorg/jooq/Field;
+#listAgg(Lorg/jooq/Field;)Lorg/jooq/OrderedAggregateFunction;
+#listAgg(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/OrderedAggregateFunction;
+#groupConcat(Lorg/jooq/Field;)Lorg/jooq/GroupConcatOrderByStep;
+#groupConcatDistinct(Lorg/jooq/Field;)Lorg/jooq/GroupConcatOrderByStep;
@2.3.0
+#<init>(Lorg/jooq/SQLDialect;)V
+#<init>(Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#tableByName([Ljava/lang/String;)Lorg/jooq/Table;
+#fieldByName([Ljava/lang/String;)Lorg/jooq/Field;
+#fieldByName(Ljava/lang/Class;[Ljava/lang/String;)Lorg/jooq/Field;
+#fieldByName(Lorg/jooq/DataType;[Ljava/lang/String;)Lorg/jooq/Field;
+#batchStore([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#dateAdd(Ljava/sql/Date;Ljava/lang/Number;)Lorg/jooq/Field;
+#dateAdd(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#timestampAdd(Ljava/sql/Timestamp;Ljava/lang/Number;)Lorg/jooq/Field;
+#timestampAdd(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#trunc(Ljava/lang/Number;)Lorg/jooq/Field;
+#trunc(Ljava/lang/Number;I)Lorg/jooq/Field;
+#trunc(Lorg/jooq/Field;I)Lorg/jooq/Field;
+#trunc(Ljava/lang/Number;Lorg/jooq/Field;)Lorg/jooq/Field;
+#trunc(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#inline(Ljava/lang/Object;)Lorg/jooq/Param;
+#inline(C)Lorg/jooq/Param;
+#inline(Ljava/lang/Character;)Lorg/jooq/Param;
+#inline(Ljava/lang/CharSequence;)Lorg/jooq/Param;
+#inline(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Param;
+#inline(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Param;
+#inline(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Param;
*#literal(Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
*#literal(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;[deprecated]
*#literal(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;[deprecated]
@2.4.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/SQLDialect;)V
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#getDataSource()Ljavax/sql/DataSource;
+#setDataSource(Ljavax/sql/DataSource;)V
+#commit()V
+#rollback()V
+#rollback(Ljava/sql/Savepoint;)V
+#setSavepoint()Ljava/sql/Savepoint;
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#setAutoCommit(Z)V
+#getAutoCommit()Z
+#setHoldability(I)V
+#getHoldability()I
+#setTransactionIsolation(I)V
+#getTransactionIsolation()I
+#name([Ljava/lang/String;)Lorg/jooq/Name;
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
+#fetch(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Result;
+#fetchLazy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Cursor;
+#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
+#fetchOne(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
+#execute(Ljava/lang/String;[Lorg/jooq/QueryPart;)I
+#resultQuery(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/ResultQuery;
+#fetchFromCSV(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;C)Lorg/jooq/Result;
+#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep;
+#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStep;
+#batchStore(Ljava/util/Collection;)Lorg/jooq/Batch;
@2.5.0
+#condition(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Condition;
+#fetchLazy(Ljava/sql/ResultSet;)Lorg/jooq/Cursor;
+#not(Lorg/jooq/Condition;)Lorg/jooq/Condition;
+#connectByRoot(Lorg/jooq/Field;)Lorg/jooq/Field;
*#executeInsert(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
+#executeInsert(Lorg/jooq/TableRecord;)I
*#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
*#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I[deprecated]
*#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
*#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I[deprecated]
+#executeUpdate(Lorg/jooq/UpdatableRecord;)I
+#executeUpdate(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeDelete(Lorg/jooq/UpdatableRecord;)I
+#executeDelete(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
*#executeDelete(Lorg/jooq/Table;)I[deprecated]
*#executeDelete(Lorg/jooq/Table;Lorg/jooq/Condition;)I[deprecated]
*#executeDeleteOne(Lorg/jooq/Table;)I[deprecated]
*#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Condition;)I[deprecated]
@2.6.0
+#schemaByName(Ljava/lang/String;)Lorg/jooq/Schema;
+#table(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Table;
+#countDistinct([Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrSlope(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrIntercept(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrCount(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrR2(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrAvgX(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrAvgY(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrSXX(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrSYY(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#regrSXY(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/AggregateFunction;
+#row(Ljava/lang/Object;)Lorg/jooq/Row1;
+#row(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row2;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row3;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row4;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row5;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row6;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row7;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row8;
+#row([Ljava/lang/Object;)Lorg/jooq/RowN;
+#row(Lorg/jooq/Field;)Lorg/jooq/Row1;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row2;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row3;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row4;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row5;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row6;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row7;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row8;
+#row([Lorg/jooq/Field;)Lorg/jooq/RowN;
@3.0.0-RC1
+#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;
+#select(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#all(Lorg/jooq/Select;)Lorg/jooq/QuantifiedSelect;
+#all([Ljava/lang/Object;)Lorg/jooq/QuantifiedSelect;
+#all(Lorg/jooq/Field;)Lorg/jooq/QuantifiedSelect;
+#any(Lorg/jooq/Select;)Lorg/jooq/QuantifiedSelect;
+#any([Ljava/lang/Object;)Lorg/jooq/QuantifiedSelect;
+#any(Lorg/jooq/Field;)Lorg/jooq/QuantifiedSelect;
+#field(Lorg/jooq/Condition;)Lorg/jooq/Field;
+#md5(Ljava/lang/String;)Lorg/jooq/Field;
+#md5(Lorg/jooq/Field;)Lorg/jooq/Field;
+#rollup([Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#cube([Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#groupingSets([Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#groupingSets([[Lorg/jooq/Field;)Lorg/jooq/GroupField;
+#groupingSets([Ljava/util/Collection;)Lorg/jooq/GroupField;
+#value(Ljava/lang/Object;)Lorg/jooq/Param;
+#value(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Param;
+#value(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Param;
+#value(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Param;
+#val(Ljava/lang/Object;)Lorg/jooq/Param;
+#val(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Param;
+#val(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Param;
+#val(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Param;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row9;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row10;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row11;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row12;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row13;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row14;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row15;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row16;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row17;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row18;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row19;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row20;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row21;
+#row(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/Row22;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row9;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row10;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row11;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row12;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row13;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row14;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row15;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row16;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row17;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row18;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row19;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row20;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row21;
+#row(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Row22;
+#values([Lorg/jooq/Row1;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row2;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row3;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row4;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row5;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row6;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row7;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row8;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row9;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row10;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row11;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row12;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row13;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row14;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row15;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row16;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row17;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row18;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row19;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row20;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row21;)Lorg/jooq/Table;
+#values([Lorg/jooq/Row22;)Lorg/jooq/Table;
-#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/SQLDialect;)V
-#<init>(Lorg/jooq/SQLDialect;)V
-#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
-#<init>(Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
-#getDialect()Lorg/jooq/SQLDialect;
-#getDataSource()Ljavax/sql/DataSource;
-#setDataSource(Ljavax/sql/DataSource;)V
-#getConnection()Ljava/sql/Connection;
-#setConnection(Ljava/sql/Connection;)V
-#getSchemaMapping()Lorg/jooq/SchemaMapping;[deprecated]
-#getSettings()Lorg/jooq/conf/Settings;
-#getData()Ljava/util/Map;
-#getData(Ljava/lang/String;)Ljava/lang/Object;
-#setData(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
-#commit()V
-#rollback()V
-#rollback(Ljava/sql/Savepoint;)V
-#setSavepoint()Ljava/sql/Savepoint;
-#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
-#releaseSavepoint(Ljava/sql/Savepoint;)V
-#setAutoCommit(Z)V
-#getAutoCommit()Z
-#setHoldability(I)V
-#getHoldability()I
-#setTransactionIsolation(I)V
-#getTransactionIsolation()I
-#renderContext()Lorg/jooq/RenderContext;
-#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
-#renderNamedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
-#renderInlined(Lorg/jooq/QueryPart;)Ljava/lang/String;
-#bindContext(Ljava/sql/PreparedStatement;)Lorg/jooq/BindContext;
-#bind(Lorg/jooq/QueryPart;Ljava/sql/PreparedStatement;)I
-#attach([Lorg/jooq/Attachable;)V
-#attach(Ljava/util/Collection;)V
-#loadInto(Lorg/jooq/Table;)Lorg/jooq/LoaderOptionsStep;
-#query(Ljava/lang/String;)Lorg/jooq/Query;
-#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
-#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
-#fetch(Ljava/lang/String;)Lorg/jooq/Result;
-#fetch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Result;
-#fetch(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Result;
-#fetchLazy(Ljava/lang/String;)Lorg/jooq/Cursor;
-#fetchLazy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Cursor;
-#fetchLazy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Cursor;
-#fetchMany(Ljava/lang/String;)Ljava/util/List;
-#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
-#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
-#fetchOne(Ljava/lang/String;)Lorg/jooq/Record;
-#fetchOne(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
-#fetchOne(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
-#execute(Ljava/lang/String;)I
-#execute(Ljava/lang/String;[Ljava/lang/Object;)I
-#execute(Ljava/lang/String;[Lorg/jooq/QueryPart;)I
-#resultQuery(Ljava/lang/String;)Lorg/jooq/ResultQuery;
-#resultQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/ResultQuery;
-#resultQuery(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/ResultQuery;
-#fetch(Ljava/sql/ResultSet;)Lorg/jooq/Result;
-#fetchLazy(Ljava/sql/ResultSet;)Lorg/jooq/Cursor;
-#fetchFromCSV(Ljava/lang/String;)Lorg/jooq/Result;
-#fetchFromCSV(Ljava/lang/String;C)Lorg/jooq/Result;
-#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SimpleSelectWhereStep;
-#selectQuery()Lorg/jooq/SelectQuery;
-#selectQuery(Lorg/jooq/TableLike;)Lorg/jooq/SimpleSelectQuery;
-#insertQuery(Lorg/jooq/Table;)Lorg/jooq/InsertQuery;
-#insertInto(Lorg/jooq/Table;)Lorg/jooq/InsertSetStep;
-#insertInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep;
-#insertInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/InsertValuesStep;
-#insertInto(Lorg/jooq/Table;Lorg/jooq/Select;)Lorg/jooq/Insert;[deprecated]
-#updateQuery(Lorg/jooq/Table;)Lorg/jooq/UpdateQuery;
-#update(Lorg/jooq/Table;)Lorg/jooq/UpdateSetStep;
-#mergeInto(Lorg/jooq/Table;)Lorg/jooq/MergeUsingStep;
-#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep;
-#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStep;
-#deleteQuery(Lorg/jooq/Table;)Lorg/jooq/DeleteQuery;
-#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
-#batch([Lorg/jooq/Query;)Lorg/jooq/Batch;
-#batch(Ljava/util/Collection;)Lorg/jooq/Batch;
-#batch(Lorg/jooq/Query;)Lorg/jooq/BatchBindStep;
-#batchStore([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
-#batchStore(Ljava/util/Collection;)Lorg/jooq/Batch;
-#truncate(Lorg/jooq/Table;)Lorg/jooq/Truncate;
-#lastID()Ljava/math/BigInteger;
-#nextval(Lorg/jooq/Sequence;)Ljava/lang/Number;
-#currval(Lorg/jooq/Sequence;)Ljava/lang/Number;
-#use(Lorg/jooq/Schema;)I
-#use(Ljava/lang/String;)I
-#newRecord(Lorg/jooq/UDT;)Lorg/jooq/UDTRecord;
-#newRecord(Lorg/jooq/Table;)Lorg/jooq/TableRecord;
-#newRecord(Lorg/jooq/Table;Ljava/lang/Object;)Lorg/jooq/TableRecord;
-#rollup([Lorg/jooq/Field;)Lorg/jooq/Field;
-#cube([Lorg/jooq/Field;)Lorg/jooq/Field;
-#groupingSets([Lorg/jooq/Field;)Lorg/jooq/Field;
-#groupingSets([[Lorg/jooq/Field;)Lorg/jooq/Field;
-#groupingSets([Ljava/util/Collection;)Lorg/jooq/Field;
-#value(Ljava/lang/Object;)Lorg/jooq/Field;
-#value(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;
-#value(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
-#value(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#val(Ljava/lang/Object;)Lorg/jooq/Field;
-#val(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;
-#val(Ljava/lang/Object;Lorg/jooq/Field;)Lorg/jooq/Field;
-#val(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#vals([Ljava/lang/Object;)Ljava/util/List;
-#literal(Ljava/lang/Object;)Lorg/jooq/Field;[deprecated]
-#literal(Ljava/lang/Object;Ljava/lang/Class;)Lorg/jooq/Field;[deprecated]
-#literal(Ljava/lang/Object;Lorg/jooq/DataType;)Lorg/jooq/Field;[deprecated]
-#fetch(Lorg/jooq/Table;)Lorg/jooq/Result;
-#fetch(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Result;
-#fetchOne(Lorg/jooq/Table;)Lorg/jooq/Record;
-#fetchOne(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
-#fetchAny(Lorg/jooq/Table;)Lorg/jooq/Record;
-#executeInsert(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
-#executeInsert(Lorg/jooq/TableRecord;)I
-#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
-#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I[deprecated]
-#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
-#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I[deprecated]
-#executeUpdate(Lorg/jooq/UpdatableRecord;)I
-#executeUpdate(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
-#executeDelete(Lorg/jooq/UpdatableRecord;)I
-#executeDelete(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
-#executeDelete(Lorg/jooq/Table;)I[deprecated]
-#executeDelete(Lorg/jooq/Table;Lorg/jooq/Condition;)I[deprecated]
-#executeDeleteOne(Lorg/jooq/Table;)I[deprecated]
-#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Condition;)I[deprecated]
-#toString()Ljava/lang/String;
@3.0.0-RC3
-###org/jooq/impl/Factory

+###org/jooq/impl/FieldTypeHelper
@1.5.7
+#toSQL(Lorg/jooq/SQLDialect;Ljava/lang/Object;Z)Ljava/lang/String;
+#toSQL(Lorg/jooq/SQLDialect;Ljava/lang/Object;ZLorg/jooq/NamedTypeProviderQueryPart;)Ljava/lang/String;
+#toSQL(Lorg/jooq/SQLDialect;Ljava/lang/Object;ZLjava/lang/Class;)Ljava/lang/String;
+#getFromSQLInput(Lorg/jooq/Configuration;Ljava/sql/SQLInput;Lorg/jooq/Field;)Ljava/lang/Object;
+#writeToSQLOutput(Ljava/sql/SQLOutput;Lorg/jooq/Field;Ljava/lang/Object;)V
+#writeToSQLOutput(Ljava/sql/SQLOutput;Ljava/lang/Class;Ljava/lang/Object;)V
+#getFromResultSet(Lorg/jooq/Configuration;Ljava/sql/ResultSet;Lorg/jooq/Field;I)Ljava/lang/Object;
+#getTypeMapping(Ljava/lang/Class;)Ljava/util/Map;
+#getFromStatement(Lorg/jooq/Configuration;Ljava/sql/CallableStatement;Ljava/lang/Class;I)Ljava/lang/Object;
+#getClass(III)Ljava/lang/Class;
+#getArrayType(Ljava/lang/String;Lorg/jooq/SQLDialect;)Ljava/lang/String;
+#getDataType(Lorg/jooq/SQLDialect;Ljava/lang/Class;)Lorg/jooq/DataType;
+#normalise(Ljava/lang/String;)Ljava/lang/String;
@1.6.1
+#toSQL(Lorg/jooq/Configuration;Ljava/lang/Object;Z)Ljava/lang/String;
+#toSQL(Lorg/jooq/Configuration;Ljava/lang/Object;ZLorg/jooq/NamedTypeProviderQueryPart;)Ljava/lang/String;
+#toSQL(Lorg/jooq/Configuration;Ljava/lang/Object;ZLjava/lang/Class;)Ljava/lang/String;
-#toSQL(Lorg/jooq/SQLDialect;Ljava/lang/Object;Z)Ljava/lang/String;
-#toSQL(Lorg/jooq/SQLDialect;Ljava/lang/Object;ZLorg/jooq/NamedTypeProviderQueryPart;)Ljava/lang/String;
-#toSQL(Lorg/jooq/SQLDialect;Ljava/lang/Object;ZLjava/lang/Class;)Ljava/lang/String;
-#getArrayType(Ljava/lang/String;Lorg/jooq/SQLDialect;)Ljava/lang/String;
@1.6.2
+#getDialectDataType(Lorg/jooq/SQLDialect;Ljava/lang/String;II)Lorg/jooq/DataType;
+#getDialectJavaType(Lorg/jooq/SQLDialect;Ljava/lang/String;II)Ljava/lang/Class;
@1.6.4
+#toSQL(Lorg/jooq/RenderContext;Ljava/lang/Object;)V
+#toSQL(Lorg/jooq/RenderContext;Ljava/lang/Object;Lorg/jooq/NamedTypeProviderQueryPart;)V
+#toSQL(Lorg/jooq/RenderContext;Ljava/lang/Object;Ljava/lang/Class;)V
-#toSQL(Lorg/jooq/Configuration;Ljava/lang/Object;Z)Ljava/lang/String;
-#toSQL(Lorg/jooq/Configuration;Ljava/lang/Object;ZLorg/jooq/NamedTypeProviderQueryPart;)Ljava/lang/String;
-#toSQL(Lorg/jooq/Configuration;Ljava/lang/Object;ZLjava/lang/Class;)Ljava/lang/String;
@2.0.1
-#toSQL(Lorg/jooq/RenderContext;Ljava/lang/Object;)V
-#toSQL(Lorg/jooq/RenderContext;Ljava/lang/Object;Lorg/jooq/NamedTypeProviderQueryPart;)V
-#toSQL(Lorg/jooq/RenderContext;Ljava/lang/Object;Ljava/lang/Class;)V
@2.0.5
+#getFromStatement(Lorg/jooq/ExecuteContext;Ljava/lang/Class;I)Ljava/lang/Object;
-#getFromResultSet(Lorg/jooq/Configuration;Ljava/sql/ResultSet;Lorg/jooq/Field;I)Ljava/lang/Object;
-#getFromStatement(Lorg/jooq/Configuration;Ljava/sql/CallableStatement;Ljava/lang/Class;I)Ljava/lang/Object;
@2.3.0
*#writeToSQLOutput(Ljava/sql/SQLOutput;Ljava/lang/Class;Ljava/lang/Object;)V[deprecated]
*#getTypeMapping(Ljava/lang/Class;)Ljava/util/Map;[deprecated]
@3.0.0-RC1
-###org/jooq/impl/FieldTypeHelper

+###org/jooq/impl/UpdatableTableImpl
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;)V
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V
+#getPrimaryKey()Ljava/util/List;
+#getMainUniqueKey()Ljava/util/List;
@1.5.8
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.5.9
*#getPrimaryKey()Ljava/util/List;[deprecated]
*#getMainUniqueKey()Ljava/util/List;[deprecated]
+#getIdentity()Lorg/jooq/Identity;
+#getMainKey()Lorg/jooq/UniqueKey;
+#getKeys()Ljava/util/List;
+#getReferencesFrom(Lorg/jooq/Table;)Ljava/util/List;
+#getReferences()Ljava/util/List;
@1.6.0
-#getReferences()Ljava/util/List;
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.1
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;)V[deprecated]
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;)V
@1.6.4
-#getPrimaryKey()Ljava/util/List;[deprecated]
-#getMainUniqueKey()Ljava/util/List;[deprecated]
@1.6.8
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;)V[deprecated]
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V[deprecated]
-#getIdentity()Lorg/jooq/Identity;
@2.0.0-RC1
+#<init>(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Table;)V
@2.5.0
+#getRecordVersion()Lorg/jooq/TableField;
+#getRecordTimestamp()Lorg/jooq/TableField;
@3.0.0-RC1
+#getPrimaryKey()Lorg/jooq/UniqueKey;
-#getMainKey()Lorg/jooq/UniqueKey;
@3.0.0-RC3
-###org/jooq/impl/UpdatableTableImpl

+###org/jooq/InsertValuesStep
@1.5.9
+#values([Ljava/lang/Object;)Lorg/jooq/InsertValuesStep;
+#values([Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep;
@1.6.0
+#values(Ljava/util/Collection;)Lorg/jooq/InsertValuesStep;
@2.0.3
+#select(Lorg/jooq/Select;)Lorg/jooq/Insert;
@3.0.0-RC1
-###org/jooq/InsertValuesStep

+###org/jooq/LockProvider
@1.5.8
+#setForUpdate(Z)V
+#setForShare(Z)V
@1.6.1
+#setForUpdateOf([Lorg/jooq/Field;)V
+#setForUpdateOf(Ljava/util/Collection;)V
+#setForUpdateWait(I)V
+#setForUpdateNoWait()V
+#setForUpdateSkipLocked()V
@1.6.2
+#setForUpdateOf([Lorg/jooq/Table;)V
@3.0.0-RC1
-###org/jooq/LockProvider

+###org/jooq/MasterDataType
@1.5.7
+#getPrimaryKey()Ljava/lang/Object;
@2.5.0
*#getPrimaryKey()Ljava/lang/Object;[deprecated]
@3.0.0-RC1
-###org/jooq/MasterDataType

+###org/jooq/MergeNotMatchedValuesStep
@1.6.0
+#values([Ljava/lang/Object;)Lorg/jooq/MergeFinalStep;
+#values([Lorg/jooq/Field;)Lorg/jooq/MergeFinalStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeFinalStep;
@2.0.1
+#values([Ljava/lang/Object;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values([Lorg/jooq/Field;)Lorg/jooq/MergeNotMatchedWhereStep;
+#values(Ljava/util/Collection;)Lorg/jooq/MergeNotMatchedWhereStep;
-#values([Ljava/lang/Object;)Lorg/jooq/MergeFinalStep;
-#values([Lorg/jooq/Field;)Lorg/jooq/MergeFinalStep;
-#values(Ljava/util/Collection;)Lorg/jooq/MergeFinalStep;
@3.0.0-RC1
-###org/jooq/MergeNotMatchedValuesStep

+###org/jooq/NamedQueryPart
@1.5.7
+#getName()Ljava/lang/String;
@3.0.0-RC1
-###org/jooq/NamedQueryPart

+###org/jooq/NamedTypeProviderQueryPart
@1.5.7
+#getType()Ljava/lang/Class;
+#getDataType()Lorg/jooq/DataType;
+#getTypeName()Ljava/lang/String;
+#getCastTypeName()Ljava/lang/String;
@1.6.1
+#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
*#getTypeName()Ljava/lang/String;[deprecated]
*#getCastTypeName()Ljava/lang/String;[deprecated]
@2.0.0-RC1
-#getTypeName()Ljava/lang/String;[deprecated]
-#getCastTypeName()Ljava/lang/String;[deprecated]
@3.0.0-RC1
-###org/jooq/NamedTypeProviderQueryPart

+###org/jooq/OrderProvider
@1.5.7
+#addOrderBy([Lorg/jooq/Field;)V
+#addOrderBy([Lorg/jooq/SortField;)V
+#addOrderBy(Ljava/util/Collection;)V
+#addLimit(I)V
+#addLimit(II)V
@1.6.9
+#addOrderBy([I)V
@2.0.4
+#addLimit(Lorg/jooq/Param;)V
+#addLimit(Lorg/jooq/Param;I)V
+#addLimit(ILorg/jooq/Param;)V
+#addLimit(Lorg/jooq/Param;Lorg/jooq/Param;)V
@2.5.0
+#setOrderBySiblings(Z)V
@3.0.0-RC1
-###org/jooq/OrderProvider

+###org/jooq/SchemaProvider
@1.5.7
+#getSchema()Lorg/jooq/Schema;
@3.0.0-RC1
-###org/jooq/SchemaProvider

+###org/jooq/SimpleSelectConditionStep
@1.5.7
+#and(Lorg/jooq/Condition;)Lorg/jooq/SimpleSelectConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/SimpleSelectConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SimpleSelectConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/SimpleSelectConditionStep;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/SimpleSelectConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/SimpleSelectConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/SimpleSelectConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/SimpleSelectConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SimpleSelectConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/SimpleSelectConditionStep;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/SimpleSelectConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/SimpleSelectConditionStep;
@2.5.0
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SimpleSelectConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SimpleSelectConditionStep;
@3.0.0-RC1
-###org/jooq/SimpleSelectConditionStep

+###org/jooq/SimpleSelectFinalStep
@1.5.7
@1.5.8
+#forUpdate()Lorg/jooq/SimpleSelectFinalStep;
+#forShare()Lorg/jooq/SimpleSelectFinalStep;
@1.6.0
+#getQuery()Lorg/jooq/SimpleSelectQuery;
@1.6.1
*#forUpdate()Lorg/jooq/SimpleSelectFinalStep;[deprecated]
*#forShare()Lorg/jooq/SimpleSelectFinalStep;[deprecated]
@1.6.8
-#forUpdate()Lorg/jooq/SimpleSelectFinalStep;[deprecated]
-#forShare()Lorg/jooq/SimpleSelectFinalStep;[deprecated]
@3.0.0-RC1
-###org/jooq/SimpleSelectFinalStep

+###org/jooq/SimpleSelectForUpdateOfStep
@1.6.1
+#of([Lorg/jooq/Field;)Lorg/jooq/SimpleSelectForUpdateWaitStep;
+#of(Ljava/util/Collection;)Lorg/jooq/SimpleSelectForUpdateWaitStep;
@1.6.2
+#of([Lorg/jooq/Table;)Lorg/jooq/SimpleSelectForUpdateWaitStep;
@3.0.0-RC1
-###org/jooq/SimpleSelectForUpdateOfStep

+###org/jooq/SimpleSelectForUpdateStep
@1.6.1
+#forUpdate()Lorg/jooq/SimpleSelectForUpdateOfStep;
+#forShare()Lorg/jooq/SimpleSelectFinalStep;
@3.0.0-RC1
-###org/jooq/SimpleSelectForUpdateStep

+###org/jooq/SimpleSelectForUpdateWaitStep
@1.6.1
+#wait(I)Lorg/jooq/SimpleSelectFinalStep;
+#noWait()Lorg/jooq/SimpleSelectFinalStep;
+#skipLocked()Lorg/jooq/SimpleSelectFinalStep;
@3.0.0-RC1
-###org/jooq/SimpleSelectForUpdateWaitStep

+###org/jooq/SimpleSelectLimitStep
@1.5.7
+#limit(I)Lorg/jooq/SimpleSelectFinalStep;
+#limit(II)Lorg/jooq/SimpleSelectFinalStep;
@1.6.1
+#limit(I)Lorg/jooq/SimpleSelectOffsetStep;
-#limit(I)Lorg/jooq/SimpleSelectFinalStep;
@2.0.4
+#limit(Lorg/jooq/Param;)Lorg/jooq/SimpleSelectOffsetStep;
+#limit(ILorg/jooq/Param;)Lorg/jooq/SimpleSelectFinalStep;
+#limit(Lorg/jooq/Param;I)Lorg/jooq/SimpleSelectFinalStep;
+#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SimpleSelectFinalStep;
@2.1.0
+#limit(II)Lorg/jooq/SimpleSelectForUpdateStep;
+#limit(ILorg/jooq/Param;)Lorg/jooq/SimpleSelectForUpdateStep;
+#limit(Lorg/jooq/Param;I)Lorg/jooq/SimpleSelectForUpdateStep;
+#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SimpleSelectForUpdateStep;
-#limit(II)Lorg/jooq/SimpleSelectFinalStep;
-#limit(ILorg/jooq/Param;)Lorg/jooq/SimpleSelectFinalStep;
-#limit(Lorg/jooq/Param;I)Lorg/jooq/SimpleSelectFinalStep;
-#limit(Lorg/jooq/Param;Lorg/jooq/Param;)Lorg/jooq/SimpleSelectFinalStep;
@3.0.0-RC1
-###org/jooq/SimpleSelectLimitStep

+###org/jooq/SimpleSelectOffsetStep
@1.6.1
+#offset(I)Lorg/jooq/SimpleSelectFinalStep;
@2.0.4
+#offset(Lorg/jooq/Param;)Lorg/jooq/SimpleSelectFinalStep;
@2.1.0
+#offset(I)Lorg/jooq/SimpleSelectForUpdateStep;
+#offset(Lorg/jooq/Param;)Lorg/jooq/SimpleSelectForUpdateStep;
-#offset(I)Lorg/jooq/SimpleSelectFinalStep;
-#offset(Lorg/jooq/Param;)Lorg/jooq/SimpleSelectFinalStep;
@3.0.0-RC1
-###org/jooq/SimpleSelectOffsetStep

+###org/jooq/SimpleSelectOrderByStep
@1.5.7
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/SimpleSelectLimitStep;
+#orderBy([Lorg/jooq/SortField;)Lorg/jooq/SimpleSelectLimitStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/SimpleSelectLimitStep;
@1.6.9
+#orderBy([I)Lorg/jooq/SimpleSelectLimitStep;
@2.5.0
+#orderSiblingsBy([Lorg/jooq/Field;)Lorg/jooq/SimpleSelectLimitStep;
+#orderSiblingsBy([Lorg/jooq/SortField;)Lorg/jooq/SimpleSelectLimitStep;
+#orderSiblingsBy(Ljava/util/Collection;)Lorg/jooq/SimpleSelectLimitStep;
+#orderSiblingsBy([I)Lorg/jooq/SimpleSelectLimitStep;
@3.0.0-RC1
-###org/jooq/SimpleSelectOrderByStep

+###org/jooq/SimpleSelectQuery
@1.5.7
@2.6.0
+#addConditions([Lorg/jooq/Condition;)V
+#addConditions(Ljava/util/Collection;)V
+#addConditions(Lorg/jooq/Operator;[Lorg/jooq/Condition;)V
+#addConditions(Lorg/jooq/Operator;Ljava/util/Collection;)V
+#addOrderBy([Lorg/jooq/Field;)V
+#addOrderBy([Lorg/jooq/SortField;)V
+#addOrderBy(Ljava/util/Collection;)V
+#addOrderBy([I)V
+#setOrderBySiblings(Z)V
+#addLimit(I)V
+#addLimit(Lorg/jooq/Param;)V
+#addLimit(II)V
+#addLimit(Lorg/jooq/Param;I)V
+#addLimit(ILorg/jooq/Param;)V
+#addLimit(Lorg/jooq/Param;Lorg/jooq/Param;)V
+#setForUpdate(Z)V
+#setForUpdateOf([Lorg/jooq/Field;)V
+#setForUpdateOf(Ljava/util/Collection;)V
+#setForUpdateOf([Lorg/jooq/Table;)V
+#setForUpdateWait(I)V
+#setForUpdateNoWait()V
+#setForUpdateSkipLocked()V
+#setForShare(Z)V
@3.0.0-RC1
-###org/jooq/SimpleSelectQuery

+###org/jooq/SimpleSelectWhereStep
@1.5.7
+#where([Lorg/jooq/Condition;)Lorg/jooq/SimpleSelectConditionStep;
+#where(Ljava/util/Collection;)Lorg/jooq/SimpleSelectConditionStep;
+#where(Ljava/lang/String;)Lorg/jooq/SimpleSelectConditionStep;
+#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SimpleSelectConditionStep;
+#whereExists(Lorg/jooq/Select;)Lorg/jooq/SimpleSelectConditionStep;
+#whereNotExists(Lorg/jooq/Select;)Lorg/jooq/SimpleSelectConditionStep;
@2.5.0
+#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SimpleSelectConditionStep;
@3.0.0-RC1
-###org/jooq/SimpleSelectWhereStep

+###org/jooq/Store
@1.5.7
+#getValue(I)Ljava/lang/Object;
+#getValue(ILjava/lang/Object;)Ljava/lang/Object;
+#getValueAsBigDecimal(I)Ljava/math/BigDecimal;
+#getValueAsBigDecimal(ILjava/math/BigDecimal;)Ljava/math/BigDecimal;
+#getValueAsBigInteger(I)Ljava/math/BigInteger;
+#getValueAsBigInteger(ILjava/math/BigInteger;)Ljava/math/BigInteger;
+#getValueAsByte(I)Ljava/lang/Byte;
+#getValueAsByte(ILjava/lang/Byte;)Ljava/lang/Byte;
+#getValueAsDate(I)Ljava/sql/Date;
+#getValueAsDate(ILjava/sql/Date;)Ljava/sql/Date;
+#getValueAsDouble(I)Ljava/lang/Double;
+#getValueAsDouble(ILjava/lang/Double;)Ljava/lang/Double;
+#getValueAsFloat(I)Ljava/lang/Float;
+#getValueAsFloat(ILjava/lang/Float;)Ljava/lang/Float;
+#getValueAsInteger(I)Ljava/lang/Integer;
+#getValueAsInteger(ILjava/lang/Integer;)Ljava/lang/Integer;
+#getValueAsLong(I)Ljava/lang/Long;
+#getValueAsLong(ILjava/lang/Long;)Ljava/lang/Long;
+#getValueAsShort(I)Ljava/lang/Short;
+#getValueAsShort(ILjava/lang/Short;)Ljava/lang/Short;
+#getValueAsString(I)Ljava/lang/String;
+#getValueAsString(ILjava/lang/String;)Ljava/lang/String;
+#getValueAsTime(I)Ljava/sql/Time;
+#getValueAsTime(ILjava/sql/Time;)Ljava/sql/Time;
+#getValueAsTimestamp(I)Ljava/sql/Timestamp;
+#getValueAsTimestamp(ILjava/sql/Timestamp;)Ljava/sql/Timestamp;
@1.5.9
+#getValueAsBoolean(I)Ljava/lang/Boolean;
+#getValueAsBoolean(ILjava/lang/Boolean;)Ljava/lang/Boolean;
@1.6.2
+#size()I
@1.6.4
+#getValue(ILjava/lang/Class;)Ljava/lang/Object;
+#getValue(ILjava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0-RC1
-###org/jooq/Store

+###org/jooq/tools/unsigned/UByte
@2.0.0-RC1
+#valueOf(Ljava/lang/String;)Lorg/jooq/tools/unsigned/UByte;
+#valueOf(B)Lorg/jooq/tools/unsigned/UByte;
+#<init>(S)V
+#<init>(B)V
+#<init>(Ljava/lang/String;)V
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jooq/tools/unsigned/UByte;)I
+#compareTo(Ljava/lang/Object;)I
@2.3.0
+#valueOf(S)Lorg/jooq/tools/unsigned/UByte;
+#valueOf(I)Lorg/jooq/tools/unsigned/UByte;
+#valueOf(J)Lorg/jooq/tools/unsigned/UByte;
+#<init>(J)V[deprecated]
+#<init>(I)V[deprecated]
*#<init>(S)V[deprecated]
*#<init>(B)V[deprecated]
*#<init>(Ljava/lang/String;)V[deprecated]
+#toBigInteger()Ljava/math/BigInteger;
@3.0.0-RC1
-###org/jooq/tools/unsigned/UByte

+###org/jooq/tools/unsigned/UInteger
@2.0.0-RC1
+#valueOf(Ljava/lang/String;)Lorg/jooq/tools/unsigned/UInteger;
+#valueOf(I)Lorg/jooq/tools/unsigned/UInteger;
+#<init>(J)V
+#<init>(I)V
+#<init>(Ljava/lang/String;)V
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jooq/tools/unsigned/UInteger;)I
+#compareTo(Ljava/lang/Object;)I
@2.3.0
+#valueOf(J)Lorg/jooq/tools/unsigned/UInteger;
*#<init>(J)V[deprecated]
*#<init>(I)V[deprecated]
*#<init>(Ljava/lang/String;)V[deprecated]
@3.0.0-RC1
-###org/jooq/tools/unsigned/UInteger

+###org/jooq/tools/unsigned/ULong
@2.0.0-RC1
+#valueOf(Ljava/lang/String;)Lorg/jooq/tools/unsigned/ULong;
+#valueOf(J)Lorg/jooq/tools/unsigned/ULong;
+#<init>(Ljava/math/BigInteger;)V
+#<init>(J)V
+#<init>(Ljava/lang/String;)V
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jooq/tools/unsigned/ULong;)I
+#compareTo(Ljava/lang/Object;)I
@2.3.0
+#valueOf(Ljava/math/BigInteger;)Lorg/jooq/tools/unsigned/ULong;
*#<init>(Ljava/math/BigInteger;)V[deprecated]
*#<init>(J)V[deprecated]
*#<init>(Ljava/lang/String;)V[deprecated]
@3.0.0-RC1
-###org/jooq/tools/unsigned/ULong

+###org/jooq/tools/unsigned/Unsigned
@2.0.0-RC1
+#ubyte(Ljava/lang/String;)Lorg/jooq/tools/unsigned/UByte;
+#ubyte(B)Lorg/jooq/tools/unsigned/UByte;
+#ubyte(S)Lorg/jooq/tools/unsigned/UByte;
+#ushort(Ljava/lang/String;)Lorg/jooq/tools/unsigned/UShort;
+#ushort(S)Lorg/jooq/tools/unsigned/UShort;
+#ushort(I)Lorg/jooq/tools/unsigned/UShort;
+#uint(Ljava/lang/String;)Lorg/jooq/tools/unsigned/UInteger;
+#uint(I)Lorg/jooq/tools/unsigned/UInteger;
+#uint(J)Lorg/jooq/tools/unsigned/UInteger;
+#ulong(Ljava/lang/String;)Lorg/jooq/tools/unsigned/ULong;
+#ulong(J)Lorg/jooq/tools/unsigned/ULong;
+#ulong(Ljava/math/BigInteger;)Lorg/jooq/tools/unsigned/ULong;
@2.3.0
+#ubyte(I)Lorg/jooq/tools/unsigned/UByte;
+#ubyte(J)Lorg/jooq/tools/unsigned/UByte;
@3.0.0-RC1
-###org/jooq/tools/unsigned/Unsigned

+###org/jooq/tools/unsigned/UNumber
@2.0.0-RC1
+#<init>()V
+#toBigInteger()Ljava/math/BigInteger;
@3.0.0-RC1
-###org/jooq/tools/unsigned/UNumber

+###org/jooq/tools/unsigned/UShort
@2.0.0-RC1
+#valueOf(Ljava/lang/String;)Lorg/jooq/tools/unsigned/UShort;
+#valueOf(S)Lorg/jooq/tools/unsigned/UShort;
+#<init>(I)V
+#<init>(S)V
+#<init>(Ljava/lang/String;)V
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/jooq/tools/unsigned/UShort;)I
+#compareTo(Ljava/lang/Object;)I
@2.3.0
+#valueOf(I)Lorg/jooq/tools/unsigned/UShort;
*#<init>(I)V[deprecated]
*#<init>(S)V[deprecated]
*#<init>(Ljava/lang/String;)V[deprecated]
@3.0.0-RC1
-###org/jooq/tools/unsigned/UShort

+###org/jooq/Type
@1.5.7
+#getRecordType()Ljava/lang/Class;
@3.0.0-RC1
-###org/jooq/Type

+###org/jooq/Updatable
@1.5.7
+#getPrimaryKey()Ljava/util/List;[deprecated]
+#getMainUniqueKey()Ljava/util/List;
@1.5.9
*#getMainUniqueKey()Ljava/util/List;[deprecated]
@1.6.4
-#getPrimaryKey()Ljava/util/List;[deprecated]
-#getMainUniqueKey()Ljava/util/List;[deprecated]
@3.0.0-RC1
-###org/jooq/Updatable

+###org/jooq/UpdatableTable
@1.5.7
@1.5.9
+#getIdentity()Lorg/jooq/Identity;
+#getMainKey()Lorg/jooq/UniqueKey;
+#getKeys()Ljava/util/List;
+#getReferencesFrom(Lorg/jooq/Table;)Ljava/util/List;
@1.6.8
-#getIdentity()Lorg/jooq/Identity;
@2.5.0
+#getRecordVersion()Lorg/jooq/TableField;
+#getRecordTimestamp()Lorg/jooq/TableField;
@3.0.0-RC1
+#getPrimaryKey()Lorg/jooq/UniqueKey;
-#getMainKey()Lorg/jooq/UniqueKey;
@3.0.0-RC3
-###org/jooq/UpdatableTable

+###org/jooq/util/ase/ASEFactory
@1.6.6
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/ase/ASEFactory

+###org/jooq/util/db2/DB2Factory
@1.5.7
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/db2/DB2Factory

+###org/jooq/util/derby/DerbyFactory
@1.5.7
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/derby/DerbyFactory

+###org/jooq/util/h2/H2Factory
@1.5.7
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/h2/H2Factory

+###org/jooq/util/hsqldb/HSQLDBFactory
@1.5.7
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/hsqldb/HSQLDBFactory

+###org/jooq/util/ingres/IngresFactory
@1.6.0
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/ingres/IngresFactory

+###org/jooq/util/mysql/MySQLFactory
@1.5.7
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@1.6.2
+#decode(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#encode(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#encode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#aesDecrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#aesDecrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#aesEncrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#aesEncrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#desDecrypt(Ljava/lang/String;)Lorg/jooq/Field;
+#desDecrypt(Lorg/jooq/Field;)Lorg/jooq/Field;
+#desDecrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#desDecrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#desEncrypt(Ljava/lang/String;)Lorg/jooq/Field;
+#desEncrypt(Lorg/jooq/Field;)Lorg/jooq/Field;
+#desEncrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#desEncrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#compress(Ljava/lang/String;)Lorg/jooq/Field;
+#compress(Lorg/jooq/Field;)Lorg/jooq/Field;
+#uncompress(Ljava/lang/String;)Lorg/jooq/Field;
+#uncompress(Lorg/jooq/Field;)Lorg/jooq/Field;
+#uncompressedLength(Ljava/lang/String;)Lorg/jooq/Field;
+#uncompressedLength(Lorg/jooq/Field;)Lorg/jooq/Field;
+#md5(Ljava/lang/String;)Lorg/jooq/Field;
+#md5(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sha1(Ljava/lang/String;)Lorg/jooq/Field;
+#sha1(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sha2(Ljava/lang/String;I)Lorg/jooq/Field;
+#sha2(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#password(Ljava/lang/String;)Lorg/jooq/Field;
+#password(Lorg/jooq/Field;)Lorg/jooq/Field;
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
+#enumType(Ljava/lang/Class;I)Ljava/lang/Enum;
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
-#md5(Ljava/lang/String;)Lorg/jooq/Field;
-#md5(Lorg/jooq/Field;)Lorg/jooq/Field;
@3.0.0-RC3
-###org/jooq/util/mysql/MySQLFactory

+###org/jooq/util/oracle/OracleFactory
@1.5.7
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@1.5.9
+#rownum()Lorg/jooq/Field;
@1.6.1
+#rowid()Lorg/jooq/Field;
+#level()Lorg/jooq/Field;
+#connectByIsCycle()Lorg/jooq/Field;
+#connectByIsLeaf()Lorg/jooq/Field;
+#prior(Lorg/jooq/Field;)Lorg/jooq/Field;
@1.6.4
+#sysConnectByPath(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
@2.0.3
+#sysContext(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#sysContext(Ljava/lang/String;Ljava/lang/String;I)Lorg/jooq/Field;
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.2.0
-#level()Lorg/jooq/Field;
-#connectByIsCycle()Lorg/jooq/Field;
-#connectByIsLeaf()Lorg/jooq/Field;
-#sysConnectByPath(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
-#prior(Lorg/jooq/Field;)Lorg/jooq/Field;
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
+#contains(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#contains(Lorg/jooq/Field;Ljava/lang/String;I)Lorg/jooq/Field;
+#matches(Lorg/jooq/Field;Ljava/lang/String;)Lorg/jooq/Field;
+#matches(Lorg/jooq/Field;Ljava/lang/String;I)Lorg/jooq/Field;
+#catsearch(Lorg/jooq/Field;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#score(I)Lorg/jooq/Field;
+#matchScore(I)Lorg/jooq/Field;
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/oracle/OracleFactory

+###org/jooq/util/oracle/OracleUtils
@1.5.7
+#createArray(Ljava/sql/Connection;Lorg/jooq/ArrayRecord;)Ljava/sql/Array;
@2.0.5
-###org/jooq/util/oracle/OracleUtils

+###org/jooq/util/postgres/PGobjectParser
@1.5.7
+#<init>()V
+#parse(Ljava/lang/String;)Ljava/util/List;
@2.3.0
*#parse(Ljava/lang/String;)Ljava/util/List;[deprecated]
@3.0.0-RC1
-###org/jooq/util/postgres/PGobjectParser

+###org/jooq/util/postgres/PostgresFactory
@1.5.7
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/postgres/PostgresFactory

+###org/jooq/util/sqlite/SQLiteFactory
@1.5.7
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@1.6.6
+#rowid()Lorg/jooq/Field;
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/sqlite/SQLiteFactory

+###org/jooq/util/sqlserver/SQLServerFactory
@1.5.8
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/sqlserver/SQLServerFactory

+###org/jooq/util/sybase/SybaseFactory
@1.5.8
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V
+#<init>(Ljava/sql/Connection;)V
@2.0.5
*#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/sybase/SybaseFactory

+###org/jooq/Allow
@3.9.0
+#value()[Lorg/jooq/SQLDialect;

+###org/jooq/AlterDomainRenameConstraintStep
@3.14.0
+#to(Ljava/lang/String;)Lorg/jooq/AlterDomainFinalStep;
+#to(Lorg/jooq/Name;)Lorg/jooq/AlterDomainFinalStep;
+#to(Lorg/jooq/Constraint;)Lorg/jooq/AlterDomainFinalStep;

+###org/jooq/AlterSequenceFlagsStep
@3.13.0
+#restart()Lorg/jooq/AlterSequenceFlagsStep;
+#restartWith(Ljava/lang/Number;)Lorg/jooq/AlterSequenceFlagsStep;
+#restartWith(Lorg/jooq/Field;)Lorg/jooq/AlterSequenceFlagsStep;
+#startWith(Ljava/lang/Number;)Lorg/jooq/AlterSequenceFlagsStep;
+#startWith(Lorg/jooq/Field;)Lorg/jooq/AlterSequenceFlagsStep;
+#incrementBy(Ljava/lang/Number;)Lorg/jooq/AlterSequenceFlagsStep;
+#incrementBy(Lorg/jooq/Field;)Lorg/jooq/AlterSequenceFlagsStep;
+#minvalue(Ljava/lang/Number;)Lorg/jooq/AlterSequenceFlagsStep;
+#minvalue(Lorg/jooq/Field;)Lorg/jooq/AlterSequenceFlagsStep;
+#noMinvalue()Lorg/jooq/AlterSequenceFlagsStep;
+#maxvalue(Ljava/lang/Number;)Lorg/jooq/AlterSequenceFlagsStep;
+#maxvalue(Lorg/jooq/Field;)Lorg/jooq/AlterSequenceFlagsStep;
+#noMaxvalue()Lorg/jooq/AlterSequenceFlagsStep;
+#cycle()Lorg/jooq/AlterSequenceFlagsStep;
+#noCycle()Lorg/jooq/AlterSequenceFlagsStep;
+#cache(Ljava/lang/Number;)Lorg/jooq/AlterSequenceFlagsStep;
+#cache(Lorg/jooq/Field;)Lorg/jooq/AlterSequenceFlagsStep;
+#noCache()Lorg/jooq/AlterSequenceFlagsStep;

+###org/jooq/AlterSequenceStep
@3.9.0
+#restart()Lorg/jooq/AlterSequenceFinalStep;
+#restartWith(Ljava/lang/Number;)Lorg/jooq/AlterSequenceFinalStep;
+#renameTo(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceFinalStep;
+#renameTo(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceFinalStep;
+#renameTo(Ljava/lang/String;)Lorg/jooq/AlterSequenceFinalStep;
@3.12.0
+#restartWith(Lorg/jooq/Field;)Lorg/jooq/AlterSequenceFinalStep;
@3.13.0
-#restart()Lorg/jooq/AlterSequenceFinalStep;
-#restartWith(Ljava/lang/Number;)Lorg/jooq/AlterSequenceFinalStep;
-#restartWith(Lorg/jooq/Field;)Lorg/jooq/AlterSequenceFinalStep;

+###org/jooq/AlterViewStep
@3.9.0
+#renameTo(Lorg/jooq/Table;)Lorg/jooq/AlterViewFinalStep;
+#renameTo(Lorg/jooq/Name;)Lorg/jooq/AlterViewFinalStep;
+#renameTo(Ljava/lang/String;)Lorg/jooq/AlterViewFinalStep;
@3.11.0
+#comment(Ljava/lang/String;)Lorg/jooq/AlterViewFinalStep;
+#comment(Lorg/jooq/Comment;)Lorg/jooq/AlterViewFinalStep;

+###org/jooq/BindingGetSQLInputContext
@3.5.0
+#input()Ljava/sql/SQLInput;
+#value(Ljava/lang/Object;)V
+#convert(Lorg/jooq/Converter;)Lorg/jooq/BindingGetSQLInputContext;

+###org/jooq/BindingGetStatementContext
@3.5.0
+#statement()Ljava/sql/CallableStatement;
+#index()I
+#value(Ljava/lang/Object;)V
+#convert(Lorg/jooq/Converter;)Lorg/jooq/BindingGetStatementContext;

+###org/jooq/ChartFormat$Display
@3.10.0
+#values()[Lorg/jooq/ChartFormat$Display;
+#valueOf(Ljava/lang/String;)Lorg/jooq/ChartFormat$Display;

+###org/jooq/CommitProvider
@3.15.0
+#provide()Lorg/jooq/Commits;

+###org/jooq/Commits
@3.15.0
+#root()Lorg/jooq/Commit;
+#get(Ljava/lang/String;)Lorg/jooq/Commit;
+#add(Lorg/jooq/Commit;)V
+#addAll([Lorg/jooq/Commit;)V
+#addAll(Ljava/util/Collection;)V
+#load(Lorg/jooq/migrations/xml/jaxb/MigrationsType;)Lorg/jooq/Commits;
+#export()Lorg/jooq/migrations/xml/jaxb/MigrationsType;

+###org/jooq/conf/FetchIntermediateResult
@3.15.0
+#values()[Lorg/jooq/conf/FetchIntermediateResult;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/FetchIntermediateResult;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/FetchIntermediateResult;

+###org/jooq/conf/InterpreterNameLookupCaseSensitivity
@3.13.0
+#values()[Lorg/jooq/conf/InterpreterNameLookupCaseSensitivity;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/InterpreterNameLookupCaseSensitivity;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/InterpreterNameLookupCaseSensitivity;

+###org/jooq/conf/RenderFormatting
@3.10.0
+#<init>()V
+#getNewline()Ljava/lang/String;
+#setNewline(Ljava/lang/String;)V
+#getIndentation()Ljava/lang/String;
+#setIndentation(Ljava/lang/String;)V
+#getPrintMargin()Ljava/lang/Integer;
+#setPrintMargin(Ljava/lang/Integer;)V
+#withNewline(Ljava/lang/String;)Lorg/jooq/conf/RenderFormatting;
+#withIndentation(Ljava/lang/String;)Lorg/jooq/conf/RenderFormatting;
+#withPrintMargin(Ljava/lang/Integer;)Lorg/jooq/conf/RenderFormatting;
+#clone()Ljava/lang/Object;
@3.11.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/conf/RenderOptionalKeyword
@3.13.0
+#values()[Lorg/jooq/conf/RenderOptionalKeyword;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/RenderOptionalKeyword;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/RenderOptionalKeyword;

+###org/jooq/conf/RenderQuotedNames
@3.12.0
+#values()[Lorg/jooq/conf/RenderQuotedNames;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/RenderQuotedNames;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/RenderQuotedNames;

+###org/jooq/conf/Transformation
@3.15.0
+#values()[Lorg/jooq/conf/Transformation;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/Transformation;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/Transformation;

+###org/jooq/ConnectionRunnable
@3.7.0
+#run(Ljava/sql/Connection;)V

+###org/jooq/ConstraintForeignKeyReferencesStep12
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep13
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep14
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep21
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep22
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/CreateSequenceFinalStep
@3.5.0

+###org/jooq/CreateSequenceFlagsStep
@3.12.0
+#startWith(Ljava/lang/Number;)Lorg/jooq/CreateSequenceFlagsStep;
+#startWith(Lorg/jooq/Field;)Lorg/jooq/CreateSequenceFlagsStep;
+#incrementBy(Ljava/lang/Number;)Lorg/jooq/CreateSequenceFlagsStep;
+#incrementBy(Lorg/jooq/Field;)Lorg/jooq/CreateSequenceFlagsStep;
+#minvalue(Ljava/lang/Number;)Lorg/jooq/CreateSequenceFlagsStep;
+#minvalue(Lorg/jooq/Field;)Lorg/jooq/CreateSequenceFlagsStep;
+#noMinvalue()Lorg/jooq/CreateSequenceFlagsStep;
+#maxvalue(Ljava/lang/Number;)Lorg/jooq/CreateSequenceFlagsStep;
+#maxvalue(Lorg/jooq/Field;)Lorg/jooq/CreateSequenceFlagsStep;
+#noMaxvalue()Lorg/jooq/CreateSequenceFlagsStep;
+#cycle()Lorg/jooq/CreateSequenceFlagsStep;
+#noCycle()Lorg/jooq/CreateSequenceFlagsStep;
+#cache(Ljava/lang/Number;)Lorg/jooq/CreateSequenceFlagsStep;
+#cache(Lorg/jooq/Field;)Lorg/jooq/CreateSequenceFlagsStep;
+#noCache()Lorg/jooq/CreateSequenceFlagsStep;

+###org/jooq/CreateTableStorageStep
@3.11.0
+#storage(Lorg/jooq/SQL;)Lorg/jooq/CreateTableFinalStep;
+#storage(Ljava/lang/String;)Lorg/jooq/CreateTableFinalStep;
+#storage(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/CreateTableFinalStep;
+#storage(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/CreateTableFinalStep;

+###org/jooq/CreateTableWithDataStep
@3.11.0
+#withData()Lorg/jooq/CreateTableCommentStep;
+#withNoData()Lorg/jooq/CreateTableCommentStep;
@3.17.0
+#withData()Lorg/jooq/CreateTableOnCommitStep;
+#withNoData()Lorg/jooq/CreateTableOnCommitStep;
-#withData()Lorg/jooq/CreateTableCommentStep;
-#withNoData()Lorg/jooq/CreateTableCommentStep;

+###org/jooq/DerivedColumnList21
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList22
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DMLQuery
@3.16.0

+###org/jooq/DropViewFinalStep
@3.5.0

+###org/jooq/exception/MockFileDatabaseException
@3.9.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/jooq/File
@3.15.0
+#path()Ljava/lang/String;
+#name()Ljava/lang/String;
+#content()Ljava/lang/String;
+#type()Lorg/jooq/ContentType;

+###org/jooq/Function2
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function20
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/impl/CatalogMetaProvider
@3.11.0
+#<init>(Lorg/jooq/Configuration;[Lorg/jooq/Catalog;)V
+#provide()Lorg/jooq/Meta;
@3.14.0
+#<init>(Lorg/jooq/Configuration;Ljava/util/Collection;)V

+###org/jooq/impl/DateAsTimestampBinding
@3.5.0
+#<init>()V
+#converter()Lorg/jooq/Converter;
+#sql(Lorg/jooq/BindingSQLContext;)V
+#register(Lorg/jooq/BindingRegisterContext;)V
+#set(Lorg/jooq/BindingSetStatementContext;)V
+#set(Lorg/jooq/BindingSetSQLOutputContext;)V
+#get(Lorg/jooq/BindingGetResultSetContext;)V
+#get(Lorg/jooq/BindingGetStatementContext;)V
+#get(Lorg/jooq/BindingGetSQLInputContext;)V

+###org/jooq/impl/DefaultBinding
@3.5.0
+#<init>(Lorg/jooq/Converter;)V
+#converter()Lorg/jooq/Converter;
+#sql(Lorg/jooq/BindingSQLContext;)V
+#register(Lorg/jooq/BindingRegisterContext;)V
+#set(Lorg/jooq/BindingSetStatementContext;)V
+#set(Lorg/jooq/BindingSetSQLOutputContext;)V
+#get(Lorg/jooq/BindingGetResultSetContext;)V
+#get(Lorg/jooq/BindingGetStatementContext;)V
+#get(Lorg/jooq/BindingGetSQLInputContext;)V
@3.9.0
+#toString()Ljava/lang/String;
@3.11.0
+#binding(Lorg/jooq/Converter;)Lorg/jooq/Binding;
*#<init>(Lorg/jooq/Converter;)V[deprecated]
@3.15.0
+#binding(Lorg/jooq/DataType;)Lorg/jooq/Binding;
+#<init>(Lorg/jooq/Binding;)V

+###org/jooq/impl/DefaultRecordMapperProvider
@3.1.0
+#<init>()V
+#provide(Lorg/jooq/RecordType;Ljava/lang/Class;)Lorg/jooq/RecordMapper;

+###org/jooq/impl/InformationSchemaMetaProvider
@3.11.0
+#<init>(Lorg/jooq/Configuration;Lorg/jooq/util/xml/jaxb/InformationSchema;)V
+#provide()Lorg/jooq/Meta;
@3.13.0
+#<init>(Lorg/jooq/Configuration;[Lorg/jooq/Source;)V

+###org/jooq/impl/JPAConverter
@3.10.0
+#<init>(Ljava/lang/Class;)V
+#from(Ljava/lang/Object;)Ljava/lang/Object;
+#to(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/impl/QOM$Acos
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Acos;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Acos;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Acos;

+###org/jooq/impl/QOM$AlterView
@3.16.0
+#$view()Lorg/jooq/Table;
+#$ifExists()Z
+#$comment()Lorg/jooq/Comment;
+#$renameTo()Lorg/jooq/Table;
+#$view(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$AlterView;
+#$ifExists(Z)Lorg/jooq/impl/QOM$AlterView;
+#$comment(Lorg/jooq/Comment;)Lorg/jooq/impl/QOM$AlterView;
+#$renameTo(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$AlterView;

+###org/jooq/impl/QOM$And
@3.16.0

+###org/jooq/impl/QOM$BitLength
@3.16.0
+#$string()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$BitLength;

+###org/jooq/impl/QOM$BitXorAgg
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$BitXorAgg;

+###org/jooq/impl/QOM$BoolAnd
@3.16.0
+#$condition()Lorg/jooq/Condition;
+#$condition(Lorg/jooq/Condition;)Lorg/jooq/impl/QOM$BoolAnd;

+###org/jooq/impl/QOM$Choose
@3.16.0

+###org/jooq/impl/QOM$Chr
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Chr;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Chr;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Chr;

+###org/jooq/impl/QOM$ConditionAsField
@3.16.0
+#$condition()Lorg/jooq/Condition;
+#$condition(Lorg/jooq/Condition;)Lorg/jooq/impl/QOM$ConditionAsField;

+###org/jooq/impl/QOM$Contains
@3.16.0
+#$value()Lorg/jooq/Field;
+#$content()Lorg/jooq/Field;

+###org/jooq/impl/QOM$CurrentDate
@3.16.0

+###org/jooq/impl/QOM$CurrentSchema
@3.16.0

+###org/jooq/impl/QOM$Degrees
@3.16.0
+#$radians()Lorg/jooq/Field;
+#$radians(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Degrees;

+###org/jooq/impl/QOM$DenseRank
@3.16.0

+###org/jooq/impl/QOM$FieldCondition
@3.16.0
+#$field()Lorg/jooq/Field;
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$FieldCondition;

+###org/jooq/impl/QOM$FieldFunction
@3.16.0

+###org/jooq/impl/QOM$IsJson
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Lead
@3.16.0
+#$field()Lorg/jooq/Field;
+#$offset()Lorg/jooq/Field;
+#$defaultValue()Lorg/jooq/Field;
+#$nullTreatment()Lorg/jooq/impl/QOM$NullTreatment;

+###org/jooq/impl/QOM$Lpad
@3.16.0
+#$string()Lorg/jooq/Field;
+#$length()Lorg/jooq/Field;
+#$character()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Lpad;
+#$length(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Lpad;
+#$character(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Lpad;

+###org/jooq/impl/QOM$Lt
@3.16.0
@3.17.0
+#$converse()Lorg/jooq/Condition;
+#$converse()Lorg/jooq/QueryPart;

+###org/jooq/impl/QOM$NotField
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$NotIn
@3.16.0

+###org/jooq/impl/QOM$RegrAvgX
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrAvgX;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrAvgX;

+###org/jooq/impl/QOM$RegrAvgY
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrAvgY;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrAvgY;

+###org/jooq/impl/QOM$Round
@3.16.0
+#$value()Lorg/jooq/Field;
+#$decimals()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Round;
+#$decimals(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Round;

+###org/jooq/impl/QOM$RowField
@3.16.0
+#$row()Lorg/jooq/Row;
@3.17.0
-###org/jooq/impl/QOM$RowField

+###org/jooq/impl/QOM$Shr
@3.16.0
+#$value()Lorg/jooq/Field;
+#$count()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Sign
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sign;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sign;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sign;

+###org/jooq/impl/QOM$Sum
@3.16.0
+#$field()Lorg/jooq/Field;
+#$distinct()Z
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sum;
+#$distinct(Z)Lorg/jooq/impl/QOM$Sum;

+###org/jooq/impl/QOM$TableAlias
@3.16.0
+#$table()Lorg/jooq/Table;
+#$alias()Lorg/jooq/Name;

+###org/jooq/impl/QOM$Uuid
@3.16.0

+###org/jooq/impl/QOM$XMLPassingMechanism
@3.16.0
+#values()[Lorg/jooq/impl/QOM$XMLPassingMechanism;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$XMLPassingMechanism;

+###org/jooq/impl/TableMetaProvider
@3.11.0
+#<init>(Lorg/jooq/Configuration;[Lorg/jooq/Table;)V
+#provide()Lorg/jooq/Meta;
@3.14.0
+#<init>(Lorg/jooq/Configuration;Ljava/util/Collection;)V

+###org/jooq/Index
@3.10.0
+#getName()Ljava/lang/String;
+#getQualifiedName()Lorg/jooq/Name;
+#getUnqualifiedName()Lorg/jooq/Name;
+#getTable()Lorg/jooq/Table;
+#getFields()Ljava/util/List;
+#getWhere()Lorg/jooq/Condition;
+#getUnique()Z
@3.11.0
-#getName()Ljava/lang/String;
-#getQualifiedName()Lorg/jooq/Name;
-#getUnqualifiedName()Lorg/jooq/Name;
@3.16.0
+#$table()Lorg/jooq/Table;

+###org/jooq/JSONArrayNullStep
@3.14.0
+#nullOnNull()Lorg/jooq/Field;
+#absentOnNull()Lorg/jooq/Field;
@3.15.0
+#nullOnNull()Lorg/jooq/JSONArrayReturningStep;
+#absentOnNull()Lorg/jooq/JSONArrayReturningStep;
-#nullOnNull()Lorg/jooq/Field;
-#absentOnNull()Lorg/jooq/Field;

+###org/jooq/JSONArrayReturningStep
@3.15.0
+#returning(Lorg/jooq/DataType;)Lorg/jooq/Field;

+###org/jooq/JSONValueDefaultStep
@3.14.0

+###org/jooq/JSONValueOnStep
@3.14.0

+###org/jooq/LoaderListenerStep
@3.6.0
+#onRow(Lorg/jooq/LoaderRowListener;)Lorg/jooq/LoaderLoadStep;
@3.14.0
*#onRow(Lorg/jooq/LoaderRowListener;)Lorg/jooq/LoaderLoadStep;[deprecated]
+#onRowStart(Lorg/jooq/LoaderRowListener;)Lorg/jooq/LoaderLoadStep;
+#onRowEnd(Lorg/jooq/LoaderRowListener;)Lorg/jooq/LoaderLoadStep;

+###org/jooq/MergeMatchedThenStep
@3.14.0
+#thenUpdate()Lorg/jooq/MergeMatchedSetStep;
+#thenDelete()Lorg/jooq/MergeMatchedStep;

+###org/jooq/migrations/xml/jaxb/FileType
@3.15.0
+#<init>()V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getContent()Ljava/lang/String;
+#setContent(Ljava/lang/String;)V
+#getContentType()Lorg/jooq/ContentType;
+#setContentType(Lorg/jooq/ContentType;)V
+#getChange()Lorg/jooq/migrations/xml/jaxb/ChangeType;
+#setChange(Lorg/jooq/migrations/xml/jaxb/ChangeType;)V
+#withPath(Ljava/lang/String;)Lorg/jooq/migrations/xml/jaxb/FileType;
+#withContent(Ljava/lang/String;)Lorg/jooq/migrations/xml/jaxb/FileType;
+#withContentType(Lorg/jooq/ContentType;)Lorg/jooq/migrations/xml/jaxb/FileType;
+#withChange(Lorg/jooq/migrations/xml/jaxb/ChangeType;)Lorg/jooq/migrations/xml/jaxb/FileType;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/jooq/Results
@3.7.0
+#resultsOrRows()Ljava/util/List;
+#attach(Lorg/jooq/Configuration;)V
+#detach()V

+###org/jooq/SelectField
@3.6.0
+#getName()Ljava/lang/String;
+#getConverter()Lorg/jooq/Converter;
+#getBinding()Lorg/jooq/Binding;
+#getType()Ljava/lang/Class;
+#getDataType()Lorg/jooq/DataType;
+#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
@3.11.0
-#getName()Ljava/lang/String;
@3.13.0
-#getConverter()Lorg/jooq/Converter;
-#getBinding()Lorg/jooq/Binding;
-#getType()Ljava/lang/Class;
-#getDataType()Lorg/jooq/DataType;
-#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
@3.15.0
+#as(Ljava/lang/String;)Lorg/jooq/Field;
+#as(Lorg/jooq/Name;)Lorg/jooq/Field;
+#as(Lorg/jooq/Field;)Lorg/jooq/Field;
@3.17.0
+#as(Ljava/lang/String;)Lorg/jooq/SelectField;
+#as(Lorg/jooq/Name;)Lorg/jooq/SelectField;
+#as(Lorg/jooq/Field;)Lorg/jooq/SelectField;
+#convert(Lorg/jooq/Binding;)Lorg/jooq/SelectField;
+#convert(Lorg/jooq/Converter;)Lorg/jooq/SelectField;
+#convert(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Function;)Lorg/jooq/SelectField;
+#convertFrom(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/SelectField;
+#convertFrom(Ljava/util/function/Function;)Lorg/jooq/SelectField;
+#convertTo(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/jooq/SelectField;
+#convertTo(Ljava/util/function/Function;)Lorg/jooq/SelectField;
-#as(Ljava/lang/String;)Lorg/jooq/Field;
-#as(Lorg/jooq/Name;)Lorg/jooq/Field;
-#as(Lorg/jooq/Field;)Lorg/jooq/Field;

+###org/jooq/SelectFieldOrAsterisk
@3.11.0

+###org/jooq/SelectSeekStep11
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep12
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep13
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectWindowStep
@3.3.0
+#window([Lorg/jooq/WindowDefinition;)Lorg/jooq/SelectOrderByStep;
+#window(Ljava/util/Collection;)Lorg/jooq/SelectOrderByStep;
@3.12.0
+#window([Lorg/jooq/WindowDefinition;)Lorg/jooq/SelectQualifyStep;
+#window(Ljava/util/Collection;)Lorg/jooq/SelectQualifyStep;
-#window([Lorg/jooq/WindowDefinition;)Lorg/jooq/SelectOrderByStep;
-#window(Ljava/util/Collection;)Lorg/jooq/SelectOrderByStep;

+###org/jooq/Source
@3.12.0
+#of(Ljava/lang/String;)Lorg/jooq/Source;
+#of([B)Lorg/jooq/Source;
+#of([BLjava/nio/charset/Charset;)Lorg/jooq/Source;
+#of(Ljava/io/Reader;)Lorg/jooq/Source;
+#of(Ljava/io/InputStream;)Lorg/jooq/Source;
+#of(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lorg/jooq/Source;
+#reader()Ljava/io/Reader;
@3.13.0
+#of([BLjava/lang/String;)Lorg/jooq/Source;
+#of([BLjava/nio/charset/CharsetDecoder;)Lorg/jooq/Source;
+#of(Ljava/io/File;)Lorg/jooq/Source;
+#of(Ljava/io/File;Ljava/lang/String;)Lorg/jooq/Source;
+#of(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/jooq/Source;
+#of(Ljava/io/File;Ljava/nio/charset/CharsetDecoder;)Lorg/jooq/Source;
+#of(Ljava/io/InputStream;Ljava/lang/String;)Lorg/jooq/Source;
+#of(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)Lorg/jooq/Source;
+#readString()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.15.5
+#of(Ljava/io/Reader;I)Lorg/jooq/Source;
+#of(Ljava/io/InputStream;I)Lorg/jooq/Source;
+#of(Ljava/io/InputStream;ILjava/lang/String;)Lorg/jooq/Source;
+#of(Ljava/io/InputStream;ILjava/nio/charset/Charset;)Lorg/jooq/Source;
+#of(Ljava/io/InputStream;ILjava/nio/charset/CharsetDecoder;)Lorg/jooq/Source;

+###org/jooq/TableOuterJoinStep
@3.10.0

+###org/jooq/tools/jdbc/BatchedPreparedStatement
@3.14.0
+#<init>(Lorg/jooq/tools/jdbc/BatchedConnection;Ljava/sql/PreparedStatement;)V
+#getBatchedConnection()Lorg/jooq/tools/jdbc/BatchedConnection;
+#getExecuteImmediate()Z
+#setExecuteImmediate(Z)V
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#executeUpdate()I
+#execute()Z
+#getUpdateCount()I
+#executeLargeUpdate()J
+#getLargeUpdateCount()J
+#close()V
+#getMoreResults()Z
+#getMoreResults(I)Z
+#addBatch()V
+#clearBatch()V
+#executeBatch()[I
+#executeLargeBatch()[J
+#addBatch(Ljava/lang/String;)V
+#execute(Ljava/lang/String;)Z
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#executeUpdate(Ljava/lang/String;)I
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#executeLargeUpdate(Ljava/lang/String;)J
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeQuery()Ljava/sql/ResultSet;
+#getResultSet()Ljava/sql/ResultSet;
+#getGeneratedKeys()Ljava/sql/ResultSet;
@3.14.8
+#<init>(Ljava/lang/String;Lorg/jooq/tools/jdbc/BatchedConnection;Ljava/sql/PreparedStatement;)V
-#<init>(Lorg/jooq/tools/jdbc/BatchedConnection;Ljava/sql/PreparedStatement;)V

+###org/jooq/tools/jdbc/MockArray
@3.5.0
+#<init>(Lorg/jooq/SQLDialect;[Ljava/lang/Object;Ljava/lang/Class;)V
+#getBaseTypeName()Ljava/lang/String;
+#getBaseType()I
+#getArray()[Ljava/lang/Object;
+#getArray(Ljava/util/Map;)[Ljava/lang/Object;
+#getArray(JI)[Ljava/lang/Object;
+#getArray(JILjava/util/Map;)[Ljava/lang/Object;
+#getResultSet()Ljava/sql/ResultSet;
+#getResultSet(Ljava/util/Map;)Ljava/sql/ResultSet;
+#getResultSet(JI)Ljava/sql/ResultSet;
+#getResultSet(JILjava/util/Map;)Ljava/sql/ResultSet;
+#free()V
+#getArray(JILjava/util/Map;)Ljava/lang/Object;
+#getArray(JI)Ljava/lang/Object;
+#getArray(Ljava/util/Map;)Ljava/lang/Object;
+#getArray()Ljava/lang/Object;

+###org/jooq/tools/jdbc/MockFileDatabaseConfiguration
@3.12.0
+#<init>()V
+#source(Ljava/io/File;)Lorg/jooq/tools/jdbc/MockFileDatabaseConfiguration;
+#source(Ljava/io/File;Ljava/lang/String;)Lorg/jooq/tools/jdbc/MockFileDatabaseConfiguration;
+#source(Ljava/io/InputStream;)Lorg/jooq/tools/jdbc/MockFileDatabaseConfiguration;
+#source(Ljava/io/InputStream;Ljava/lang/String;)Lorg/jooq/tools/jdbc/MockFileDatabaseConfiguration;
+#source(Ljava/io/Reader;)Lorg/jooq/tools/jdbc/MockFileDatabaseConfiguration;
+#source(Ljava/lang/String;)Lorg/jooq/tools/jdbc/MockFileDatabaseConfiguration;
+#patterns(Z)Lorg/jooq/tools/jdbc/MockFileDatabaseConfiguration;
+#nullLiteral(Ljava/lang/String;)Lorg/jooq/tools/jdbc/MockFileDatabaseConfiguration;
@3.13.0
+#source(Lorg/jooq/Source;)Lorg/jooq/tools/jdbc/MockFileDatabaseConfiguration;

+###org/jooq/tools/jdbc/SingleConnectionDataSource
@3.12.0
+#<init>(Ljava/sql/Connection;)V
+#getParentLogger()Ljava/util/logging/Logger;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#getConnection()Ljava/sql/Connection;
+#getConnection(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
+#getLogWriter()Ljava/io/PrintWriter;
+#setLogWriter(Ljava/io/PrintWriter;)V
+#setLoginTimeout(I)V
+#getLoginTimeout()I

+###org/jooq/Transaction
@3.4.0

+###org/jooq/UnwrapperProvider
@3.12.0
+#provide()Lorg/jooq/Unwrapper;

+###org/jooq/util/xml/jaxb/ParameterMode
@3.10.0
+#values()[Lorg/jooq/util/xml/jaxb/ParameterMode;
+#valueOf(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ParameterMode;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ParameterMode;

+###org/jooq/util/xml/jaxb/ReferentialConstraint
@3.9.0
+#<init>()V
+#getConstraintCatalog()Ljava/lang/String;
+#setConstraintCatalog(Ljava/lang/String;)V
+#getConstraintSchema()Ljava/lang/String;
+#setConstraintSchema(Ljava/lang/String;)V
+#getConstraintName()Ljava/lang/String;
+#setConstraintName(Ljava/lang/String;)V
+#getUniqueConstraintCatalog()Ljava/lang/String;
+#setUniqueConstraintCatalog(Ljava/lang/String;)V
+#getUniqueConstraintSchema()Ljava/lang/String;
+#setUniqueConstraintSchema(Ljava/lang/String;)V
+#getUniqueConstraintName()Ljava/lang/String;
+#setUniqueConstraintName(Ljava/lang/String;)V
+#withConstraintCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ReferentialConstraint;
+#withConstraintSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ReferentialConstraint;
+#withConstraintName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ReferentialConstraint;
+#withUniqueConstraintCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ReferentialConstraint;
+#withUniqueConstraintSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ReferentialConstraint;
+#withUniqueConstraintName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ReferentialConstraint;
@3.11.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/VisitContext
@3.2.0-alpha-01
+#data()Ljava/util/Map;
+#data(Ljava/lang/Object;)Ljava/lang/Object;
+#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#configuration()Lorg/jooq/Configuration;
+#clause()Lorg/jooq/Clause;
+#clauses()[Lorg/jooq/Clause;
+#queryPart()Lorg/jooq/QueryPart;
+#queryPart(Lorg/jooq/QueryPart;)V
+#queryParts()[Lorg/jooq/QueryPart;
+#context()Lorg/jooq/Context;
+#renderContext()Lorg/jooq/RenderContext;
+#bindContext()Lorg/jooq/BindContext;
@3.3.0
+#clausesLength()I
+#queryPartsLength()I
@3.5.0
-#data()Ljava/util/Map;
-#data(Ljava/lang/Object;)Ljava/lang/Object;
-#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#configuration()Lorg/jooq/Configuration;

+###org/jooq/VisitListener
@3.2.0-alpha-01
+#clauseStart(Lorg/jooq/VisitContext;)V
+#clauseEnd(Lorg/jooq/VisitContext;)V
+#visitStart(Lorg/jooq/VisitContext;)V
+#visitEnd(Lorg/jooq/VisitContext;)V
@3.15.0
+#onClauseStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackVisitListener;
+#onClauseEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackVisitListener;
+#onVisitStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackVisitListener;
+#onVisitEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackVisitListener;

+###org/jooq/WindowSpecificationPartitionByStep
@3.3.0
+#partitionBy([Lorg/jooq/Field;)Lorg/jooq/WindowSpecificationOrderByStep;
+#partitionBy(Ljava/util/Collection;)Lorg/jooq/WindowSpecificationOrderByStep;
+#partitionByOne()Lorg/jooq/WindowSpecificationOrderByStep;
@3.10.0
*#partitionByOne()Lorg/jooq/WindowSpecificationOrderByStep;[deprecated]

+###org/jooq/WithAsStep2
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep20
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep8
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep9
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithStep
@3.4.0
+#with(Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#with([Lorg/jooq/CommonTableExpression;)Lorg/jooq/WithStep;
+#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectZero()Lorg/jooq/SelectSelectStep;
+#selectOne()Lorg/jooq/SelectSelectStep;
+#selectCount()Lorg/jooq/SelectSelectStep;
+#insertInto(Lorg/jooq/Table;)Lorg/jooq/InsertSetStep;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep1;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep2;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep3;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep4;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep5;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep6;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep7;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep8;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep9;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep10;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep11;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep12;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep13;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep14;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep15;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep16;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep17;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep18;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep19;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep20;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep21;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep22;
+#insertInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/InsertValuesStepN;
+#insertInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;
+#update(Lorg/jooq/Table;)Lorg/jooq/UpdateSetFirstStep;
+#mergeInto(Lorg/jooq/Table;)Lorg/jooq/MergeUsingStep;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;
+#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStepN;
+#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStepN;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
@3.6.0
+#select([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
-#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
@3.8.0
+#with(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep1;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep2;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep3;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep4;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep5;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep6;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep7;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep8;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep9;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep10;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep11;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep12;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep13;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep14;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep15;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep16;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep17;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep18;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep19;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep20;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep21;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep22;
@3.9.0
+#with(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/WithAsStep;
@3.10.0
+#with(Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep1;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep2;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep3;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep4;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep5;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep6;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep7;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep8;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep9;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep10;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep11;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep12;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep13;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep14;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep15;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep16;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep17;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep18;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep19;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep20;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep21;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep22;
@3.11.0
+#selectFrom(Lorg/jooq/Name;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Lorg/jooq/SQL;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectWhereStep;
+#select([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
-#select([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
-#selectDistinct([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
@3.13.0
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteUsingStep;
-#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
@3.14.0
+#with(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
*#with(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;[deprecated]
*#with(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/WithAsStep;[deprecated]
+#with(Ljava/util/Collection;)Lorg/jooq/WithStep;
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;[deprecated]
@3.17.0
+#selectFrom(Lorg/jooq/TableLike;)Lorg/jooq/SelectWhereStep;
-#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;

+###org/jooq/AlterDatabaseFinalStep
@3.14.0

+###org/jooq/AlterTableRenameConstraintToStep
@3.8.0
+#to(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
+#to(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
+#to(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;

+###org/jooq/AlterTableRenameIndexToStep
@3.10.0
+#to(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
+#to(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
+#to(Lorg/jooq/Index;)Lorg/jooq/AlterTableFinalStep;

+###org/jooq/ArrayAggOrderByStep
@3.6.0
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/AggregateFilterStep;
+#orderBy([Lorg/jooq/SortField;)Lorg/jooq/AggregateFilterStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/AggregateFilterStep;
@3.10.0
+#orderBy([Lorg/jooq/OrderField;)Lorg/jooq/AggregateFilterStep;
-#orderBy([Lorg/jooq/Field;)Lorg/jooq/AggregateFilterStep;
-#orderBy([Lorg/jooq/SortField;)Lorg/jooq/AggregateFilterStep;

+###org/jooq/BatchedCallable
@3.14.0
+#run(Lorg/jooq/Configuration;)Ljava/lang/Object;

+###org/jooq/BindingRegisterContext
@3.5.0
+#statement()Ljava/sql/CallableStatement;
+#index()I
+#convert(Lorg/jooq/Converter;)Lorg/jooq/BindingRegisterContext;

+###org/jooq/BindingSetSQLOutputContext
@3.5.0
+#output()Ljava/sql/SQLOutput;
+#value()Ljava/lang/Object;
+#convert(Lorg/jooq/Converter;)Lorg/jooq/BindingSetSQLOutputContext;

+###org/jooq/Check
@3.13.0
+#getTable()Lorg/jooq/Table;
+#condition()Lorg/jooq/Condition;
+#constraint()Lorg/jooq/Constraint;
+#enforced()Z

+###org/jooq/CommentOnIsStep
@3.11.0
+#is(Ljava/lang/String;)Lorg/jooq/CommentOnFinalStep;
+#is(Lorg/jooq/Comment;)Lorg/jooq/CommentOnFinalStep;

+###org/jooq/Commit
@3.15.0
+#delta()Ljava/util/Collection;
+#files()Ljava/util/Collection;
+#sources()Ljava/util/Collection;
+#version()Lorg/jooq/Version;
+#meta()Lorg/jooq/Meta;
+#migrateTo(Lorg/jooq/Commit;)Lorg/jooq/Files;
+#commit(Ljava/lang/String;[Lorg/jooq/File;)Lorg/jooq/Commit;
+#commit(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/Commit;
+#commit(Ljava/lang/String;Ljava/lang/String;[Lorg/jooq/File;)Lorg/jooq/Commit;
+#commit(Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/Commit;
+#merge(Ljava/lang/String;Lorg/jooq/Commit;[Lorg/jooq/File;)Lorg/jooq/Commit;
+#merge(Ljava/lang/String;Lorg/jooq/Commit;Ljava/util/Collection;)Lorg/jooq/Commit;
+#merge(Ljava/lang/String;Ljava/lang/String;Lorg/jooq/Commit;[Lorg/jooq/File;)Lorg/jooq/Commit;
+#merge(Ljava/lang/String;Ljava/lang/String;Lorg/jooq/Commit;Ljava/util/Collection;)Lorg/jooq/Commit;

+###org/jooq/conf/BackslashEscaping
@3.5.0
+#values()[Lorg/jooq/conf/BackslashEscaping;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/BackslashEscaping;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/BackslashEscaping;

+###org/jooq/conf/ExecuteWithoutWhere
@3.11.0
+#values()[Lorg/jooq/conf/ExecuteWithoutWhere;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/ExecuteWithoutWhere;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/ExecuteWithoutWhere;

+###org/jooq/conf/QueryPoolable
@3.12.0
+#values()[Lorg/jooq/conf/QueryPoolable;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/QueryPoolable;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/QueryPoolable;

+###org/jooq/conf/TransformUnneededArithmeticExpressions
@3.14.0
+#values()[Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/TransformUnneededArithmeticExpressions;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/TransformUnneededArithmeticExpressions;

+###org/jooq/ConstraintTypeStep
@3.6.0
+#primaryKey([Ljava/lang/String;)Lorg/jooq/ConstraintFinalStep;
+#primaryKey([Lorg/jooq/Field;)Lorg/jooq/ConstraintFinalStep;
+#foreignKey([Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStepN;
+#foreignKey([Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStepN;
+#foreignKey(Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep1;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep2;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep3;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep4;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep5;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep6;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep7;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep8;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep9;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep10;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep11;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep12;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep13;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep14;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep15;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep16;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep17;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep18;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep19;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep20;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep21;
+#foreignKey(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyReferencesStep22;
+#foreignKey(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep1;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep2;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep3;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep4;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep5;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep6;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep7;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep8;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep9;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep10;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep11;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep12;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep13;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep14;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep15;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep16;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep17;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep18;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep19;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep20;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep21;
+#foreignKey(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyReferencesStep22;
+#unique([Ljava/lang/String;)Lorg/jooq/ConstraintFinalStep;
+#unique([Lorg/jooq/Field;)Lorg/jooq/ConstraintFinalStep;
+#check(Lorg/jooq/Condition;)Lorg/jooq/ConstraintFinalStep;
@3.10.0
+#primaryKey([Lorg/jooq/Name;)Lorg/jooq/ConstraintFinalStep;
+#foreignKey([Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStepN;
+#foreignKey(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep1;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep2;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep3;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep4;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep5;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep6;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep7;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep8;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep9;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep10;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep11;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep12;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep13;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep14;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep15;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep16;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep17;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep18;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep19;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep20;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep21;
+#foreignKey(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyReferencesStep22;
+#unique([Lorg/jooq/Name;)Lorg/jooq/ConstraintFinalStep;
@3.13.0
+#primaryKey([Ljava/lang/String;)Lorg/jooq/ConstraintEnforcementStep;
+#primaryKey([Lorg/jooq/Name;)Lorg/jooq/ConstraintEnforcementStep;
+#primaryKey([Lorg/jooq/Field;)Lorg/jooq/ConstraintEnforcementStep;
+#unique([Ljava/lang/String;)Lorg/jooq/ConstraintEnforcementStep;
+#unique([Lorg/jooq/Name;)Lorg/jooq/ConstraintEnforcementStep;
+#unique([Lorg/jooq/Field;)Lorg/jooq/ConstraintEnforcementStep;
+#check(Lorg/jooq/Condition;)Lorg/jooq/ConstraintEnforcementStep;
-#primaryKey([Ljava/lang/String;)Lorg/jooq/ConstraintFinalStep;
-#primaryKey([Lorg/jooq/Name;)Lorg/jooq/ConstraintFinalStep;
-#primaryKey([Lorg/jooq/Field;)Lorg/jooq/ConstraintFinalStep;
-#unique([Ljava/lang/String;)Lorg/jooq/ConstraintFinalStep;
-#unique([Lorg/jooq/Name;)Lorg/jooq/ConstraintFinalStep;
-#unique([Lorg/jooq/Field;)Lorg/jooq/ConstraintFinalStep;
-#check(Lorg/jooq/Condition;)Lorg/jooq/ConstraintFinalStep;
@3.15.0
+#primaryKey(Ljava/util/Collection;)Lorg/jooq/ConstraintEnforcementStep;
+#foreignKey(Ljava/util/Collection;)Lorg/jooq/ConstraintForeignKeyReferencesStepN;
+#unique(Ljava/util/Collection;)Lorg/jooq/ConstraintEnforcementStep;

+###org/jooq/CreateIndexIncludeStep
@3.11.0
+#include([Lorg/jooq/Field;)Lorg/jooq/CreateIndexWhereStep;
+#include([Lorg/jooq/Name;)Lorg/jooq/CreateIndexWhereStep;
+#include([Ljava/lang/String;)Lorg/jooq/CreateIndexWhereStep;
+#include(Ljava/util/Collection;)Lorg/jooq/CreateIndexWhereStep;

+###org/jooq/CreateIndexStep
@3.5.0
+#on(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateIndexFinalStep;
+#on(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateIndexFinalStep;
@3.9.0
+#on(Lorg/jooq/Table;[Lorg/jooq/SortField;)Lorg/jooq/CreateIndexWhereStep;
+#on(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateIndexWhereStep;
+#on(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateIndexWhereStep;
-#on(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateIndexFinalStep;
-#on(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateIndexFinalStep;
@3.10.0
+#on(Lorg/jooq/Table;[Lorg/jooq/OrderField;)Lorg/jooq/CreateIndexWhereStep;
+#on(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateIndexWhereStep;
-#on(Lorg/jooq/Table;[Lorg/jooq/SortField;)Lorg/jooq/CreateIndexWhereStep;
-#on(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateIndexWhereStep;
@3.11.0
+#on(Lorg/jooq/Table;[Lorg/jooq/OrderField;)Lorg/jooq/CreateIndexIncludeStep;
+#on(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/CreateIndexIncludeStep;
+#on(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateIndexIncludeStep;
+#on(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/CreateIndexIncludeStep;
+#on(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateIndexIncludeStep;
+#on(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/CreateIndexIncludeStep;
-#on(Lorg/jooq/Table;[Lorg/jooq/OrderField;)Lorg/jooq/CreateIndexWhereStep;
-#on(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateIndexWhereStep;
-#on(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateIndexWhereStep;

+###org/jooq/CreateTypeStep
@3.12.0
+#asEnum()Lorg/jooq/CreateTypeFinalStep;
+#asEnum([Ljava/lang/String;)Lorg/jooq/CreateTypeFinalStep;
+#asEnum([Lorg/jooq/Field;)Lorg/jooq/CreateTypeFinalStep;
+#asEnum(Ljava/util/Collection;)Lorg/jooq/CreateTypeFinalStep;

+###org/jooq/CreateViewAsStep
@3.5.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CreateViewFinalStep;
@3.12.0
+#as(Lorg/jooq/SQL;)Lorg/jooq/CreateViewFinalStep;
+#as(Ljava/lang/String;)Lorg/jooq/CreateViewFinalStep;
+#as(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/CreateViewFinalStep;
+#as(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/CreateViewFinalStep;

+###org/jooq/DDLExportConfiguration
@3.12.0
+#<init>()V
+#flags()Ljava/util/Set;
+#flags([Lorg/jooq/DDLFlag;)Lorg/jooq/DDLExportConfiguration;
+#flags(Ljava/util/Collection;)Lorg/jooq/DDLExportConfiguration;
+#createSchemaIfNotExists()Z
+#createSchemaIfNotExists(Z)Lorg/jooq/DDLExportConfiguration;
+#createTableIfNotExists()Z
+#createTableIfNotExists(Z)Lorg/jooq/DDLExportConfiguration;
@3.13.0
+#createIndexIfNotExists()Z
+#createIndexIfNotExists(Z)Lorg/jooq/DDLExportConfiguration;
+#createSequenceIfNotExists()Z
+#createSequenceIfNotExists(Z)Lorg/jooq/DDLExportConfiguration;
+#createViewIfNotExists()Z
+#createViewIfNotExists(Z)Lorg/jooq/DDLExportConfiguration;
+#createOrReplaceView()Z
+#createOrReplaceView(Z)Lorg/jooq/DDLExportConfiguration;
+#respectCatalogOrder()Z
+#respectCatalogOrder(Z)Lorg/jooq/DDLExportConfiguration;
+#respectSchemaOrder()Z
+#respectSchemaOrder(Z)Lorg/jooq/DDLExportConfiguration;
+#respectTableOrder()Z
+#respectTableOrder(Z)Lorg/jooq/DDLExportConfiguration;
+#respectColumnOrder()Z
+#respectColumnOrder(Z)Lorg/jooq/DDLExportConfiguration;
+#respectConstraintOrder()Z
+#respectConstraintOrder(Z)Lorg/jooq/DDLExportConfiguration;
+#respectIndexOrder()Z
+#respectIndexOrder(Z)Lorg/jooq/DDLExportConfiguration;
+#respectSequenceOrder()Z
+#respectSequenceOrder(Z)Lorg/jooq/DDLExportConfiguration;
+#defaultSequenceFlags()Z
+#defaultSequenceFlags(Z)Lorg/jooq/DDLExportConfiguration;
@3.14.0
+#createDomainIfNotExists()Z
+#createDomainIfNotExists(Z)Lorg/jooq/DDLExportConfiguration;
+#respectDomainOrder()Z
+#respectDomainOrder(Z)Lorg/jooq/DDLExportConfiguration;
+#includeConstraintsOnViews()Z
+#includeConstraintsOnViews(Z)Lorg/jooq/DDLExportConfiguration;

+###org/jooq/DeleteResultStep
@3.6.0
+#fetch()Lorg/jooq/Result;
+#fetchOne()Lorg/jooq/Record;
@3.7.0
+#fetchOptional()Ljava/util/Optional;
@3.15.0
-#fetch()Lorg/jooq/Result;
-#fetchOne()Lorg/jooq/Record;
-#fetchOptional()Ljava/util/Optional;

+###org/jooq/DerivedColumnList5
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList6
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DropDomainCascadeStep
@3.14.0
+#cascade()Lorg/jooq/DropDomainFinalStep;
+#restrict()Lorg/jooq/DropDomainFinalStep;

+###org/jooq/DropDomainFinalStep
@3.14.0

+###org/jooq/exception/LoaderConfigurationException
@3.6.0
+#<init>(Ljava/lang/String;)V

+###org/jooq/FieldOrRow
@3.7.0

+###org/jooq/Files
@3.15.0
+#from()Lorg/jooq/Version;
+#to()Lorg/jooq/Version;

+###org/jooq/Function14
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function21
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function22
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/impl/AbstractConfiguration
@3.15.0
+#<init>()V
+#set([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/RecordListenerProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/ExecuteListenerProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/MigrationListenerProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/VisitListenerProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/TransactionListenerProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#setAppending([Lorg/jooq/DiagnosticsListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/RecordListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/ExecuteListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/MigrationListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/VisitListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/TransactionListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#deriveAppending([Lorg/jooq/DiagnosticsListenerProvider;)Lorg/jooq/Configuration;
+#commercial(Ljava/util/function/Supplier;)Z
+#requireCommercial(Ljava/util/function/Supplier;)Z

+###org/jooq/impl/DefaultMigrationListenerProvider
@3.13.0
+#providers([Lorg/jooq/MigrationListener;)[Lorg/jooq/MigrationListenerProvider;
+#<init>(Lorg/jooq/MigrationListener;)V
+#provide()Lorg/jooq/MigrationListener;
+#toString()Ljava/lang/String;

+###org/jooq/impl/LazyCatalog
@3.14.0
+#<init>(Lorg/jooq/Name;Lorg/jooq/impl/LazySupplier;)V
+#accept(Lorg/jooq/Context;)V
+#getSchemas()Ljava/util/List;
+#getSchema(Ljava/lang/String;)Lorg/jooq/Schema;
+#getSchema(Lorg/jooq/Name;)Lorg/jooq/Schema;
+#schemaStream()Ljava/util/stream/Stream;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getQualifiedName()Lorg/jooq/Name;
+#toString()Ljava/lang/String;
+#generatesCast()Z
+#declaresCTE()Z
+#declaresWindows()Z
+#declaresTables()Z
+#declaresFields()Z
+#rendersContent(Lorg/jooq/Context;)Z
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;[deprecated]

+###org/jooq/impl/QOM$Add
@3.16.0

+###org/jooq/impl/QOM$Asin
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Asin;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Asin;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Asin;

+###org/jooq/impl/QOM$Atan
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Atan;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Atan;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Atan;

+###org/jooq/impl/QOM$BitNand
@3.16.0

+###org/jooq/impl/QOM$BitNor
@3.16.0

+###org/jooq/impl/QOM$BoolOr
@3.16.0
+#$condition()Lorg/jooq/Condition;
+#$condition(Lorg/jooq/Condition;)Lorg/jooq/impl/QOM$BoolOr;

+###org/jooq/impl/QOM$Cardinality
@3.16.0
+#$array()Lorg/jooq/Field;
+#$array(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Cardinality;

+###org/jooq/impl/QOM$Coalesce
@3.16.0

+###org/jooq/impl/QOM$Coerce
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$ContainsIgnoreCase
@3.16.0
+#$value()Lorg/jooq/Field;
+#$content()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Convert
@3.16.0
+#$field()Lorg/jooq/Field;
+#$style()I

+###org/jooq/impl/QOM$CurrentTime
@3.16.0

+###org/jooq/impl/QOM$CurrentTimestamp
@3.16.0

+###org/jooq/impl/QOM$CurrentUser
@3.16.0

+###org/jooq/impl/QOM$DropSequence
@3.16.0
+#$sequence()Lorg/jooq/Sequence;
+#$ifExists()Z
+#$sequence(Lorg/jooq/Sequence;)Lorg/jooq/impl/QOM$DropSequence;
+#$ifExists(Z)Lorg/jooq/impl/QOM$DropSequence;

+###org/jooq/impl/QOM$FirstValue
@3.16.0
+#$field()Lorg/jooq/Field;
+#$nullTreatment()Lorg/jooq/impl/QOM$NullTreatment;

+###org/jooq/impl/QOM$GenerateSeries
@3.16.0
+#$from()Lorg/jooq/Field;
+#$to()Lorg/jooq/Field;
+#$step()Lorg/jooq/Field;

+###org/jooq/impl/QOM$GenerationOption
@3.16.0
+#values()[Lorg/jooq/impl/QOM$GenerationOption;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$GenerationOption;

+###org/jooq/impl/QOM$Grant
@3.16.0
+#$privileges()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$on()Lorg/jooq/Table;
+#$to()Lorg/jooq/Role;
+#$toPublic()Z
+#$withGrantOption()Z
+#$privileges(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$Grant;
+#$on(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$Grant;
+#$to(Lorg/jooq/Role;)Lorg/jooq/impl/QOM$Grant;
+#$toPublic(Z)Lorg/jooq/impl/QOM$Grant;
+#$withGrantOption(Z)Lorg/jooq/impl/QOM$Grant;
@3.17.0
+#$privileges(Ljava/util/Collection;)Lorg/jooq/impl/QOM$Grant;
-#$privileges(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$Grant;

+###org/jooq/impl/QOM$InList
@3.16.0
+#$field()Lorg/jooq/Field;
+#$list()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/impl/QOM$IsNull
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Lateral
@3.16.0

+###org/jooq/impl/QOM$Le
@3.16.0
@3.17.0
+#$converse()Lorg/jooq/Condition;
+#$converse()Lorg/jooq/QueryPart;

+###org/jooq/impl/QOM$Median
@3.16.0
+#$field()Lorg/jooq/Field;
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Median;

+###org/jooq/impl/QOM$Min
@3.16.0
+#$field()Lorg/jooq/Field;
+#$distinct()Z
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Min;
+#$distinct(Z)Lorg/jooq/impl/QOM$Min;

+###org/jooq/impl/QOM$NotYetImplementedException
@3.16.0
+#<init>()V

+###org/jooq/impl/QOM$NthValue
@3.16.0
+#$field()Lorg/jooq/Field;
+#$fromFirstOrLast()Lorg/jooq/impl/QOM$FromFirstOrLast;
+#$nullTreatment()Lorg/jooq/impl/QOM$NullTreatment;

+###org/jooq/impl/QOM$PrimaryKey
@3.16.0
+#$fields()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/impl/QOM$Product
@3.16.0
+#$field()Lorg/jooq/Field;
+#$distinct()Z
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Product;
+#$distinct(Z)Lorg/jooq/impl/QOM$Product;

+###org/jooq/impl/QOM$RegrSyy
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrSyy;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrSyy;

+###org/jooq/impl/QOM$Repeat
@3.16.0
+#$string()Lorg/jooq/Field;
+#$count()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Repeat;
+#$count(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Repeat;

+###org/jooq/impl/QOM$Rtrim
@3.16.0
+#$string()Lorg/jooq/Field;
+#$characters()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Rtrim;
+#$characters(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Rtrim;

+###org/jooq/impl/QOM$ScalarSubquery
@3.16.0

+###org/jooq/impl/QOM$SelectIsNotNull
@3.16.0
+#$field()Lorg/jooq/Select;

+###org/jooq/impl/QOM$SimilarTo
@3.16.0
+#$value()Lorg/jooq/Field;
+#$pattern()Lorg/jooq/Field;
+#$escape()Ljava/lang/Character;

+###org/jooq/impl/QOM$Sin
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sin;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sin;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sin;

+###org/jooq/impl/QOM$TableEq
@3.16.0

+###org/jooq/impl/QOM$ToHex
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$ToHex;

+###org/jooq/impl/QOM$ToTimestamp
@3.16.0
+#$value()Lorg/jooq/Field;
+#$formatMask()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$ToTimestamp;
+#$formatMask(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$ToTimestamp;

+###org/jooq/impl/QOM$Val
@3.16.0
@3.17.0
-###org/jooq/impl/QOM$Val

+###org/jooq/impl/QOM$Values
@3.16.0

+###org/jooq/impl/ThreadLocalTransactionProvider
@3.9.0
+#<init>(Lorg/jooq/ConnectionProvider;)V
+#<init>(Lorg/jooq/ConnectionProvider;Z)V
+#begin(Lorg/jooq/TransactionContext;)V
+#commit(Lorg/jooq/TransactionContext;)V
+#rollback(Lorg/jooq/TransactionContext;)V

+###org/jooq/impl/TimeToLocalTimeConverter
@3.11.0
+#<init>()V
+#from(Ljava/sql/Time;)Ljava/time/LocalTime;
+#to(Ljava/time/LocalTime;)Ljava/sql/Time;
+#to(Ljava/lang/Object;)Ljava/lang/Object;
+#from(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Internal
@3.12.0

+###org/jooq/JSONB
@3.12.0
+#valueOf(Ljava/lang/String;)Lorg/jooq/JSONB;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.12.2
+#data()Ljava/lang/String;
@3.14.0
+#jsonb(Ljava/lang/String;)Lorg/jooq/JSONB;
@3.15.0
+#jsonbOrNull(Ljava/lang/String;)Lorg/jooq/JSONB;

+###org/jooq/JSONEntry
@3.12.0
+#key()Lorg/jooq/Field;
+#value()Lorg/jooq/Field;
@3.16.0
+#$key()Lorg/jooq/Field;
+#$value()Lorg/jooq/Field;

+###org/jooq/JSONValueReturningStep
@3.15.0
+#returning(Lorg/jooq/DataType;)Lorg/jooq/Field;

+###org/jooq/LoaderRowListener
@3.6.0
+#row(Lorg/jooq/LoaderContext;)V

+###org/jooq/ParseContext
@3.15.0
+#parseDialect()Lorg/jooq/SQLDialect;
+#parseFamily()Lorg/jooq/SQLDialect;
+#languageContext()Lorg/jooq/LanguageContext;
+#character()C
+#character(I)C
+#position()I
+#position(I)Z
+#peek(C)Z
+#peek(Ljava/lang/String;)Z
+#peekKeyword(Ljava/lang/String;)Z
+#peekKeyword([Ljava/lang/String;)Z
+#parse(C)Z
+#parseIf(C)Z
+#parse(Ljava/lang/String;)Z
+#parseIf(Ljava/lang/String;)Z
+#parseKeyword(Ljava/lang/String;)Z
+#parseKeywordIf(Ljava/lang/String;)Z
+#parseKeywordIf([Ljava/lang/String;)Z
+#parseKeyword([Ljava/lang/String;)Z
+#parseIdentifier()Lorg/jooq/Name;
+#parseIdentifierIf()Lorg/jooq/Name;
+#parseName()Lorg/jooq/Name;
+#parseNameIf()Lorg/jooq/Name;
+#parseFunctionNameIf(Ljava/lang/String;)Z
+#parseFunctionNameIf([Ljava/lang/String;)Z
+#parseStringLiteral()Ljava/lang/String;
+#parseStringLiteralIf()Ljava/lang/String;
+#parseUnsignedIntegerLiteral()Ljava/lang/Long;
+#parseUnsignedIntegerLiteralIf()Ljava/lang/Long;
+#parseSignedIntegerLiteral()Ljava/lang/Long;
+#parseSignedIntegerLiteralIf()Ljava/lang/Long;
+#parseDataType()Lorg/jooq/DataType;
+#parseField()Lorg/jooq/Field;
+#parseSortField()Lorg/jooq/SortField;
+#parseCondition()Lorg/jooq/Condition;
+#parseTable()Lorg/jooq/Table;
+#parseList(Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/List;
+#parseList(Ljava/util/function/Predicate;Ljava/util/function/Function;)Ljava/util/List;
+#parseParenthesised(Ljava/util/function/Function;)Ljava/lang/Object;
+#parseParenthesised(CLjava/util/function/Function;C)Ljava/lang/Object;
+#parseParenthesised(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object;
+#exception(Ljava/lang/String;)Lorg/jooq/impl/ParserException;
@3.16.0
+#characters()[C
+#characters([C)Lorg/jooq/ParseContext;

+###org/jooq/QualifiedAsterisk
@3.11.0
+#qualifier()Lorg/jooq/Table;
@3.12.0
+#except([Ljava/lang/String;)Lorg/jooq/QualifiedAsterisk;
+#except([Lorg/jooq/Name;)Lorg/jooq/QualifiedAsterisk;
+#except([Lorg/jooq/Field;)Lorg/jooq/QualifiedAsterisk;
@3.16.0
+#$table()Lorg/jooq/Table;
+#$except()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/QualifiedRecord
@3.15.0
+#getQualifier()Lorg/jooq/RecordQualifier;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/QualifiedRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/QualifiedRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Records
@3.15.0
+#<init>()V
+#intoArray([Ljava/lang/Object;)Ljava/util/stream/Collector;
+#intoArray(Ljava/lang/Class;)Ljava/util/stream/Collector;
+#intoArray([Ljava/lang/Object;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#intoArray(Ljava/lang/Class;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#intoList()Ljava/util/stream/Collector;
+#intoList(Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#intoSet()Ljava/util/stream/Collector;
+#intoSet(Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#intoMap()Ljava/util/stream/Collector;
+#intoMap(Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#intoMap(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#intoGroups()Ljava/util/stream/Collector;
+#intoGroups(Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#intoGroups(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#intoResultGroups(Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#intoResultGroups(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#mapping(Lorg/jooq/Function1;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function2;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function3;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function4;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function5;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function6;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function7;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function8;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function9;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function10;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function11;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function12;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function13;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function14;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function15;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function16;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function17;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function18;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function19;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function20;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function21;)Lorg/jooq/RecordMapper;
+#mapping(Lorg/jooq/Function22;)Lorg/jooq/RecordMapper;

+###org/jooq/SelectLimitAfterOffsetStep
@3.8.0
+#limit(I)Lorg/jooq/SelectForUpdateStep;
+#limit(Lorg/jooq/Param;)Lorg/jooq/SelectForUpdateStep;
@3.10.0
+#limit(I)Lorg/jooq/SelectWithTiesAfterOffsetStep;
+#limit(Lorg/jooq/Param;)Lorg/jooq/SelectWithTiesAfterOffsetStep;
-#limit(I)Lorg/jooq/SelectForUpdateStep;
-#limit(Lorg/jooq/Param;)Lorg/jooq/SelectForUpdateStep;
@3.11.0
+#limit(I)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
+#limit(Lorg/jooq/Param;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
-#limit(I)Lorg/jooq/SelectWithTiesAfterOffsetStep;
-#limit(Lorg/jooq/Param;)Lorg/jooq/SelectWithTiesAfterOffsetStep;
@3.12.0
+#limit(Ljava/lang/Number;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
@3.17.0
+#limit(Lorg/jooq/Field;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
-#limit(I)Lorg/jooq/SelectLimitPercentAfterOffsetStep;
-#limit(Lorg/jooq/Param;)Lorg/jooq/SelectLimitPercentAfterOffsetStep;

+###org/jooq/SelectOptionStep
@3.1.0
+#option(Ljava/lang/String;)Lorg/jooq/SelectFinalStep;
@3.5.0
+#option(Ljava/lang/String;)Lorg/jooq/SelectUnionStep;
-#option(Ljava/lang/String;)Lorg/jooq/SelectFinalStep;

+###org/jooq/SelectSeekStep19
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep6
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep7
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectWithTiesAfterOffsetStep
@3.10.0
+#withTies()Lorg/jooq/SelectForUpdateStep;

+###org/jooq/SelectWithTiesStep
@3.10.0
+#withTies()Lorg/jooq/SelectOffsetStep;

+###org/jooq/Stringly$Comment
@3.15.0

+###org/jooq/Stringly$Keyword
@3.15.0

+###org/jooq/TableOptions$TableType
@3.13.0
+#values()[Lorg/jooq/TableOptions$TableType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/TableOptions$TableType;
+#isView()Z
+#isTable()Z
@3.15.0
+#isFunction()Z

+###org/jooq/tools/jdbc/MockCallable
@3.6.0
+#run(Lorg/jooq/Configuration;)Ljava/lang/Object;

+###org/jooq/tools/jdbc/MockConfiguration
@3.6.0
+#<init>(Lorg/jooq/Configuration;Lorg/jooq/tools/jdbc/MockDataProvider;)V
+#data()Ljava/util/Map;
+#data(Ljava/lang/Object;)Ljava/lang/Object;
+#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#connectionProvider()Lorg/jooq/ConnectionProvider;
+#transactionProvider()Lorg/jooq/TransactionProvider;
+#recordMapperProvider()Lorg/jooq/RecordMapperProvider;
+#recordListenerProviders()[Lorg/jooq/RecordListenerProvider;
+#executeListenerProviders()[Lorg/jooq/ExecuteListenerProvider;
+#visitListenerProviders()[Lorg/jooq/VisitListenerProvider;
+#converterProvider()Lorg/jooq/ConverterProvider;
+#schemaMapping()Lorg/jooq/SchemaMapping;
+#dialect()Lorg/jooq/SQLDialect;
+#family()Lorg/jooq/SQLDialect;
+#settings()Lorg/jooq/conf/Settings;
+#set(Lorg/jooq/ConnectionProvider;)Lorg/jooq/Configuration;
+#set(Ljava/sql/Connection;)Lorg/jooq/Configuration;
+#set(Ljavax/sql/DataSource;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/TransactionProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordMapperProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/RecordListenerProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/ExecuteListenerProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/VisitListenerProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/ConverterProvider;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/SQLDialect;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/conf/Settings;)Lorg/jooq/Configuration;
+#derive()Lorg/jooq/Configuration;
+#derive(Lorg/jooq/ConnectionProvider;)Lorg/jooq/Configuration;
+#derive(Ljava/sql/Connection;)Lorg/jooq/Configuration;
+#derive(Ljavax/sql/DataSource;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/TransactionProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/RecordMapperProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/RecordListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/ExecuteListenerProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/VisitListenerProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/ConverterProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/SQLDialect;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/conf/Settings;)Lorg/jooq/Configuration;
@3.8.0
+#executorProvider()Lorg/jooq/ExecutorProvider;
+#set(Lorg/jooq/ExecutorProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/ExecutorProvider;)Lorg/jooq/Configuration;
@3.9.0
+#transactionListenerProviders()[Lorg/jooq/TransactionListenerProvider;
+#set(Ljava/util/concurrent/Executor;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordMapper;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/TransactionListenerProvider;)Lorg/jooq/Configuration;
+#derive(Ljava/util/concurrent/Executor;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/RecordMapper;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/TransactionListenerProvider;)Lorg/jooq/Configuration;
@3.10.0
+#dsl()Lorg/jooq/DSLContext;
+#clock()Ljava/time/Clock;
+#recordUnmapperProvider()Lorg/jooq/RecordUnmapperProvider;
+#set(Ljava/time/Clock;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordUnmapper;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/RecordUnmapperProvider;)Lorg/jooq/Configuration;
+#derive(Ljava/time/Clock;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/RecordUnmapper;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/RecordUnmapperProvider;)Lorg/jooq/Configuration;
@3.11.0
+#metaProvider()Lorg/jooq/MetaProvider;
+#diagnosticsListenerProviders()[Lorg/jooq/DiagnosticsListenerProvider;
+#set(Lorg/jooq/MetaProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/DiagnosticsListenerProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/MetaProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/DiagnosticsListenerProvider;)Lorg/jooq/Configuration;
@3.12.0
+#unwrapperProvider()Lorg/jooq/UnwrapperProvider;
+#set(Lorg/jooq/Unwrapper;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/UnwrapperProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/Unwrapper;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/UnwrapperProvider;)Lorg/jooq/Configuration;
@3.13.0
+#interpreterConnectionProvider()Lorg/jooq/ConnectionProvider;
+#systemConnectionProvider()Lorg/jooq/ConnectionProvider;
+#versionProvider()Lorg/jooq/VersionProvider;
+#migrationListenerProviders()[Lorg/jooq/MigrationListenerProvider;
+#set(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#set([Lorg/jooq/MigrationListenerProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
+#derive([Lorg/jooq/MigrationListenerProvider;)Lorg/jooq/Configuration;
@3.14.0
+#charsetProvider()Lorg/jooq/CharsetProvider;
+#set(Lorg/jooq/CharsetProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/CharsetProvider;)Lorg/jooq/Configuration;
@3.15.0
+#connectionFactory()Lio/r2dbc/spi/ConnectionFactory;
+#commitProvider()Lorg/jooq/CommitProvider;
+#cacheProvider()Lorg/jooq/CacheProvider;
+#set(Lorg/jooq/CommitProvider;)Lorg/jooq/Configuration;
+#set(Lio/r2dbc/spi/ConnectionFactory;)Lorg/jooq/Configuration;
+#set(Lorg/jooq/CacheProvider;)Lorg/jooq/Configuration;
+#derive(Lio/r2dbc/spi/ConnectionFactory;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/CommitProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/CacheProvider;)Lorg/jooq/Configuration;
+#deriveSettings(Ljava/util/function/Function;)Lorg/jooq/Configuration;
-#versionProvider()Lorg/jooq/VersionProvider;
-#set(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
-#set([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
-#derive(Lorg/jooq/VersionProvider;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/RecordListener;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/ExecuteListener;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/MigrationListener;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/VisitListener;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/TransactionListener;)Lorg/jooq/Configuration;
-#derive([Lorg/jooq/DiagnosticsListener;)Lorg/jooq/Configuration;
@3.16.0
+#formattingProvider()Lorg/jooq/FormattingProvider;
+#set(Lorg/jooq/FormattingProvider;)Lorg/jooq/Configuration;
+#derive(Lorg/jooq/FormattingProvider;)Lorg/jooq/Configuration;

+###org/jooq/tools/reflect/CompileOptions
@3.12.0
+#<init>()V
+#processors([Ljavax/annotation/processing/Processor;)Lorg/jooq/tools/reflect/CompileOptions;
+#processors(Ljava/util/List;)Lorg/jooq/tools/reflect/CompileOptions;
@3.12.4
+#options([Ljava/lang/String;)Lorg/jooq/tools/reflect/CompileOptions;
+#options(Ljava/util/List;)Lorg/jooq/tools/reflect/CompileOptions;

+###org/jooq/TransactionalCallable
@3.4.0
+#run(Lorg/jooq/Configuration;)Ljava/lang/Object;
@3.14.0
+#of([Lorg/jooq/TransactionalCallable;)Lorg/jooq/TransactionalCallable;
+#of(Ljava/util/Collection;)Lorg/jooq/TransactionalCallable;
+#of([Lorg/jooq/TransactionalCallable;Ljava/util/stream/Collector;)Lorg/jooq/TransactionalCallable;
+#of(Ljava/util/Collection;Ljava/util/stream/Collector;)Lorg/jooq/TransactionalCallable;

+###org/jooq/TruncateCascadeStep
@3.1.0
+#cascade()Lorg/jooq/TruncateFinalStep;
+#restrict()Lorg/jooq/TruncateFinalStep;

+###org/jooq/types/YearToSecond
@3.12.0
+#<init>(Lorg/jooq/types/YearToMonth;Lorg/jooq/types/DayToSecond;)V
+#valueOf(D)Lorg/jooq/types/YearToSecond;
+#valueOf(Ljava/time/Duration;)Lorg/jooq/types/YearToSecond;
+#toDuration()Ljava/time/Duration;
+#valueOf(Ljava/time/Period;)Lorg/jooq/types/YearToSecond;
+#valueOf(Ljava/lang/String;)Lorg/jooq/types/YearToSecond;
+#neg()Lorg/jooq/types/YearToSecond;
+#abs()Lorg/jooq/types/YearToSecond;
+#getYearToMonth()Lorg/jooq/types/YearToMonth;
+#getDayToSecond()Lorg/jooq/types/DayToSecond;
+#getYears()I
+#getMonths()I
+#getDays()I
+#getHours()I
+#getMinutes()I
+#getSeconds()I
+#getMilli()I
+#getMicro()I
+#getNano()I
+#getSign()I
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#compareTo(Lorg/jooq/types/YearToSecond;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#abs()Lorg/jooq/types/Interval;
+#neg()Lorg/jooq/types/Interval;
+#compareTo(Ljava/lang/Object;)I

+###org/jooq/util/mariadb/MariaDBDataType
@3.1.0
+#<init>()V

+###org/jooq/util/xml/jaxb/Parameter
@3.10.0
+#<init>()V
+#getSpecificCatalog()Ljava/lang/String;
+#setSpecificCatalog(Ljava/lang/String;)V
+#getSpecificSchema()Ljava/lang/String;
+#setSpecificSchema(Ljava/lang/String;)V
+#getSpecificPackage()Ljava/lang/String;
+#setSpecificPackage(Ljava/lang/String;)V
+#getSpecificName()Ljava/lang/String;
+#setSpecificName(Ljava/lang/String;)V
+#getOrdinalPosition()I
+#setOrdinalPosition(I)V
+#getParameterMode()Lorg/jooq/util/xml/jaxb/ParameterMode;
+#setParameterMode(Lorg/jooq/util/xml/jaxb/ParameterMode;)V
+#getParameterName()Ljava/lang/String;
+#setParameterName(Ljava/lang/String;)V
+#getDataType()Ljava/lang/String;
+#setDataType(Ljava/lang/String;)V
+#getCharacterMaximumLength()Ljava/lang/Integer;
+#setCharacterMaximumLength(Ljava/lang/Integer;)V
+#getNumericPrecision()Ljava/lang/Integer;
+#setNumericPrecision(Ljava/lang/Integer;)V
+#getNumericScale()Ljava/lang/Integer;
+#setNumericScale(Ljava/lang/Integer;)V
+#getParameterDefault()Ljava/lang/String;
+#setParameterDefault(Ljava/lang/String;)V
+#withSpecificCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withSpecificSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withSpecificPackage(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withSpecificName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withOrdinalPosition(I)Lorg/jooq/util/xml/jaxb/Parameter;
+#withParameterMode(Lorg/jooq/util/xml/jaxb/ParameterMode;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withParameterName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withDataType(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withCharacterMaximumLength(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withNumericPrecision(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withNumericScale(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withParameterDefault(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
@3.11.0
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#withComment(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#getUdtCatalog()Ljava/lang/String;
+#setUdtCatalog(Ljava/lang/String;)V
+#getUdtSchema()Ljava/lang/String;
+#setUdtSchema(Ljava/lang/String;)V
+#getUdtName()Ljava/lang/String;
+#setUdtName(Ljava/lang/String;)V
+#withUdtCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withUdtSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
+#withUdtName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Parameter;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/util/xml/jaxb/TableConstraintType
@3.9.0
+#values()[Lorg/jooq/util/xml/jaxb/TableConstraintType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableConstraintType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableConstraintType;
@3.12.0
+#toString()Ljava/lang/String;

+###org/jooq/VisitListenerProvider
@3.2.0-alpha-01
+#provide()Lorg/jooq/VisitListener;

+###org/jooq/WindowSpecificationRowsStep
@3.3.0
+#rowsUnboundedPreceding()Lorg/jooq/WindowSpecificationFinalStep;
+#rowsPreceding(I)Lorg/jooq/WindowSpecificationFinalStep;
+#rowsCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
+#rowsUnboundedFollowing()Lorg/jooq/WindowSpecificationFinalStep;
+#rowsFollowing(I)Lorg/jooq/WindowSpecificationFinalStep;
+#rowsBetweenUnboundedPreceding()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rowsBetweenPreceding(I)Lorg/jooq/WindowSpecificationRowsAndStep;
+#rowsBetweenCurrentRow()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rowsBetweenUnboundedFollowing()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rowsBetweenFollowing(I)Lorg/jooq/WindowSpecificationRowsAndStep;
@3.8.0
+#rangeUnboundedPreceding()Lorg/jooq/WindowSpecificationFinalStep;
+#rangePreceding(I)Lorg/jooq/WindowSpecificationFinalStep;
+#rangeCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
+#rangeUnboundedFollowing()Lorg/jooq/WindowSpecificationFinalStep;
+#rangeFollowing(I)Lorg/jooq/WindowSpecificationFinalStep;
+#rangeBetweenUnboundedPreceding()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rangeBetweenPreceding(I)Lorg/jooq/WindowSpecificationRowsAndStep;
+#rangeBetweenCurrentRow()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rangeBetweenUnboundedFollowing()Lorg/jooq/WindowSpecificationRowsAndStep;
+#rangeBetweenFollowing(I)Lorg/jooq/WindowSpecificationRowsAndStep;
@3.12.0
+#rowsUnboundedPreceding()Lorg/jooq/WindowSpecificationExcludeStep;
+#rowsPreceding(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#rowsCurrentRow()Lorg/jooq/WindowSpecificationExcludeStep;
+#rowsUnboundedFollowing()Lorg/jooq/WindowSpecificationExcludeStep;
+#rowsFollowing(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#rangeUnboundedPreceding()Lorg/jooq/WindowSpecificationExcludeStep;
+#rangePreceding(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#rangeCurrentRow()Lorg/jooq/WindowSpecificationExcludeStep;
+#rangeUnboundedFollowing()Lorg/jooq/WindowSpecificationExcludeStep;
+#rangeFollowing(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsUnboundedPreceding()Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsPreceding(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsCurrentRow()Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsUnboundedFollowing()Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsFollowing(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#groupsBetweenUnboundedPreceding()Lorg/jooq/WindowSpecificationRowsAndStep;
+#groupsBetweenPreceding(I)Lorg/jooq/WindowSpecificationRowsAndStep;
+#groupsBetweenCurrentRow()Lorg/jooq/WindowSpecificationRowsAndStep;
+#groupsBetweenUnboundedFollowing()Lorg/jooq/WindowSpecificationRowsAndStep;
+#groupsBetweenFollowing(I)Lorg/jooq/WindowSpecificationRowsAndStep;
-#rowsUnboundedPreceding()Lorg/jooq/WindowSpecificationFinalStep;
-#rowsPreceding(I)Lorg/jooq/WindowSpecificationFinalStep;
-#rowsCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
-#rowsUnboundedFollowing()Lorg/jooq/WindowSpecificationFinalStep;
-#rowsFollowing(I)Lorg/jooq/WindowSpecificationFinalStep;
-#rangeUnboundedPreceding()Lorg/jooq/WindowSpecificationFinalStep;
-#rangePreceding(I)Lorg/jooq/WindowSpecificationFinalStep;
-#rangeCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
-#rangeUnboundedFollowing()Lorg/jooq/WindowSpecificationFinalStep;
-#rangeFollowing(I)Lorg/jooq/WindowSpecificationFinalStep;

+###org/jooq/WithAsStep21
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep22
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/AlterDatabaseStep
@3.14.0
+#renameTo(Ljava/lang/String;)Lorg/jooq/AlterDatabaseFinalStep;
+#renameTo(Lorg/jooq/Name;)Lorg/jooq/AlterDatabaseFinalStep;
+#renameTo(Lorg/jooq/Catalog;)Lorg/jooq/AlterDatabaseFinalStep;

+###org/jooq/AlterDomainDropConstraintCascadeStep
@3.14.0
+#cascade()Lorg/jooq/AlterDomainFinalStep;
+#restrict()Lorg/jooq/AlterDomainFinalStep;

+###org/jooq/AlterSchemaStep
@3.9.0
+#renameTo(Lorg/jooq/Schema;)Lorg/jooq/AlterSchemaFinalStep;
+#renameTo(Lorg/jooq/Name;)Lorg/jooq/AlterSchemaFinalStep;
+#renameTo(Ljava/lang/String;)Lorg/jooq/AlterSchemaFinalStep;

+###org/jooq/AlterTableFinalStep
@3.4.0

+###org/jooq/AlterTypeStep
@3.13.0
+#renameTo(Ljava/lang/String;)Lorg/jooq/AlterTypeFinalStep;
+#renameTo(Lorg/jooq/Name;)Lorg/jooq/AlterTypeFinalStep;
+#setSchema(Ljava/lang/String;)Lorg/jooq/AlterTypeFinalStep;
+#setSchema(Lorg/jooq/Name;)Lorg/jooq/AlterTypeFinalStep;
+#setSchema(Lorg/jooq/Schema;)Lorg/jooq/AlterTypeFinalStep;
+#addValue(Ljava/lang/String;)Lorg/jooq/AlterTypeFinalStep;
+#addValue(Lorg/jooq/Field;)Lorg/jooq/AlterTypeFinalStep;
+#renameValue(Ljava/lang/String;)Lorg/jooq/AlterTypeRenameValueToStep;
+#renameValue(Lorg/jooq/Field;)Lorg/jooq/AlterTypeRenameValueToStep;

+###org/jooq/AlterViewFinalStep
@3.9.0

+###org/jooq/Block
@3.11.0
@3.16.0
+#$statements()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/CacheContext
@3.15.0
+#cacheType()Lorg/jooq/impl/CacheType;

+###org/jooq/CharsetProvider
@3.14.0
+#provide()Ljava/nio/charset/Charset;

+###org/jooq/CloseableDSLContext
@3.14.0
+#close()V

+###org/jooq/conf/ParamType
@3.1.0
+#values()[Lorg/jooq/conf/ParamType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/ParamType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/ParamType;

+###org/jooq/conf/RenderNameCase
@3.12.0
+#values()[Lorg/jooq/conf/RenderNameCase;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/RenderNameCase;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/RenderNameCase;

+###org/jooq/Constraint
@3.6.0

+###org/jooq/ConstraintEnforcementStep
@3.13.0
@3.15.0
+#enforced()Lorg/jooq/ConstraintFinalStep;
+#notEnforced()Lorg/jooq/ConstraintFinalStep;

+###org/jooq/ConstraintForeignKeyReferencesStep7
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep8
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConverterProvider
@3.6.0
+#provide(Ljava/lang/Class;Ljava/lang/Class;)Lorg/jooq/Converter;

+###org/jooq/CreateTableAsStep
@3.5.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CreateTableFinalStep;
+#column(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/CreateTableColumnStep;
+#column(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/CreateTableColumnStep;
@3.6.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CreateTableOnCommitStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/CreateTableFinalStep;
@3.8.0
+#column(Lorg/jooq/Field;)Lorg/jooq/CreateTableColumnStep;
+#column(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/CreateTableColumnStep;
+#columns([Lorg/jooq/Field;)Lorg/jooq/CreateTableColumnStep;
+#columns(Ljava/util/Collection;)Lorg/jooq/CreateTableColumnStep;
@3.11.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CreateTableWithDataStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/CreateTableOnCommitStep;
@3.12.0
-#column(Lorg/jooq/Field;)Lorg/jooq/CreateTableColumnStep;
-#column(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/CreateTableColumnStep;
-#column(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/CreateTableColumnStep;
-#column(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/CreateTableColumnStep;
-#columns([Lorg/jooq/Field;)Lorg/jooq/CreateTableColumnStep;
-#columns(Ljava/util/Collection;)Lorg/jooq/CreateTableColumnStep;

+###org/jooq/CreateTableColumnStep
@3.5.0
+#column(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/CreateTableColumnStep;
+#column(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/CreateTableColumnStep;
@3.8.0
+#column(Lorg/jooq/Field;)Lorg/jooq/CreateTableColumnStep;
+#column(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/CreateTableColumnStep;
+#columns([Lorg/jooq/Field;)Lorg/jooq/CreateTableColumnStep;
+#columns(Ljava/util/Collection;)Lorg/jooq/CreateTableColumnStep;
@3.12.0
+#columns([Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#columns([Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
@3.17.0
-###org/jooq/CreateTableColumnStep

+###org/jooq/CreateTypeFinalStep
@3.12.0

+###org/jooq/DerivedColumnList14
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList15
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList9
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DiagnosticsContext
@3.11.0
+#resultSet()Ljava/sql/ResultSet;
+#resultSetConsumedRows()I
+#resultSetFetchedRows()I
+#resultSetConsumedColumnCount()I
+#resultSetFetchedColumnCount()I
+#resultSetConsumedColumnNames()Ljava/util/List;
+#resultSetFetchedColumnNames()Ljava/util/List;
+#resultSetUnnecessaryWasNullCall()Z
+#resultSetMissingWasNullCall()Z
+#resultSetColumnIndex()I
+#actualStatement()Ljava/lang/String;
+#normalisedStatement()Ljava/lang/String;
+#duplicateStatements()Ljava/util/Set;
+#repeatedStatements()Ljava/util/List;
@3.17.0
+#part()Lorg/jooq/QueryPart;
+#message()Ljava/lang/String;
+#exception()Ljava/lang/Throwable;

+###org/jooq/DropIndexOnStep
@3.6.0
+#on(Lorg/jooq/Table;)Lorg/jooq/DropIndexFinalStep;
+#on(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
+#on(Lorg/jooq/Name;)Lorg/jooq/DropIndexFinalStep;
@3.13.0
+#on(Lorg/jooq/Table;)Lorg/jooq/DropIndexCascadeStep;
+#on(Ljava/lang/String;)Lorg/jooq/DropIndexCascadeStep;
+#on(Lorg/jooq/Name;)Lorg/jooq/DropIndexCascadeStep;
-#on(Lorg/jooq/Table;)Lorg/jooq/DropIndexFinalStep;
-#on(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
-#on(Lorg/jooq/Name;)Lorg/jooq/DropIndexFinalStep;

+###org/jooq/DropSchemaFinalStep
@3.9.0

+###org/jooq/exception/DataDefinitionException
@3.13.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/jooq/exception/SQLStateClass
@3.8.0
+#values()[Lorg/jooq/exception/SQLStateClass;
+#valueOf(Ljava/lang/String;)Lorg/jooq/exception/SQLStateClass;
+#className()Ljava/lang/String;
+#fromCode(Ljava/lang/String;)Lorg/jooq/exception/SQLStateClass;

+###org/jooq/ExecuteScope
@3.16.0
+#executeContext()Lorg/jooq/ExecuteContext;

+###org/jooq/Fields
@3.15.0
+#fields()[Lorg/jooq/Field;
+#fieldsRow()Lorg/jooq/Row;
+#fieldStream()Ljava/util/stream/Stream;
+#field(Lorg/jooq/Field;)Lorg/jooq/Field;
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(I)Lorg/jooq/Field;
+#field(ILjava/lang/Class;)Lorg/jooq/Field;
+#field(ILorg/jooq/DataType;)Lorg/jooq/Field;
+#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
+#fields([Ljava/lang/String;)[Lorg/jooq/Field;
+#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
+#fields([I)[Lorg/jooq/Field;
+#indexOf(Lorg/jooq/Field;)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Lorg/jooq/Name;)I
+#types()[Ljava/lang/Class;
+#type(I)Ljava/lang/Class;
+#type(Ljava/lang/String;)Ljava/lang/Class;
+#type(Lorg/jooq/Name;)Ljava/lang/Class;
+#dataTypes()[Lorg/jooq/DataType;
+#dataType(I)Lorg/jooq/DataType;
+#dataType(Ljava/lang/String;)Lorg/jooq/DataType;
+#dataType(Lorg/jooq/Name;)Lorg/jooq/DataType;

+###org/jooq/Function10
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function11
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function19
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/impl/CallbackFormattingProvider
@3.16.0
+#<init>()V
+#txtFormat()Lorg/jooq/TXTFormat;
+#csvFormat()Lorg/jooq/CSVFormat;
+#jsonFormatForResults()Lorg/jooq/JSONFormat;
+#jsonFormatForRecords()Lorg/jooq/JSONFormat;
+#xmlFormatForResults()Lorg/jooq/XMLFormat;
+#xmlFormatForRecords()Lorg/jooq/XMLFormat;
+#chartFormat()Lorg/jooq/ChartFormat;
+#width(Ljava/lang/String;)I
+#onTxtFormat(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onCsvFormat(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onJsonFormatForResults(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onJsonFormatForRecords(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onXmlFormatForResults(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onXmlFormatForRecords(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onChartFormat(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onWidth(Ljava/util/function/ToIntFunction;)Lorg/jooq/impl/CallbackFormattingProvider;

+###org/jooq/impl/CallbackTransactionListener
@3.15.0
+#<init>()V
+#beginStart(Lorg/jooq/TransactionContext;)V
+#beginEnd(Lorg/jooq/TransactionContext;)V
+#commitStart(Lorg/jooq/TransactionContext;)V
+#commitEnd(Lorg/jooq/TransactionContext;)V
+#rollbackStart(Lorg/jooq/TransactionContext;)V
+#rollbackEnd(Lorg/jooq/TransactionContext;)V
+#onBeginStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;
+#onBeginEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;
+#onCommitStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;
+#onCommitEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;
+#onRollbackStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;
+#onRollbackEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;

+###org/jooq/impl/CallbackVisitListener
@3.15.0
+#<init>()V
+#clauseStart(Lorg/jooq/VisitContext;)V
+#clauseEnd(Lorg/jooq/VisitContext;)V
+#visitStart(Lorg/jooq/VisitContext;)V
+#visitEnd(Lorg/jooq/VisitContext;)V
+#onClauseStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackVisitListener;
+#onClauseEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackVisitListener;
+#onVisitStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackVisitListener;
+#onVisitEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackVisitListener;

+###org/jooq/impl/DefaultDiagnosticsListener
@3.11.0
+#<init>()V
+#tooManyRowsFetched(Lorg/jooq/DiagnosticsContext;)V
+#tooManyColumnsFetched(Lorg/jooq/DiagnosticsContext;)V
+#unnecessaryWasNullCall(Lorg/jooq/DiagnosticsContext;)V
+#missingWasNullCall(Lorg/jooq/DiagnosticsContext;)V
+#duplicateStatements(Lorg/jooq/DiagnosticsContext;)V
+#repeatedStatements(Lorg/jooq/DiagnosticsContext;)V
@3.17.0
-#tooManyRowsFetched(Lorg/jooq/DiagnosticsContext;)V
-#tooManyColumnsFetched(Lorg/jooq/DiagnosticsContext;)V
-#unnecessaryWasNullCall(Lorg/jooq/DiagnosticsContext;)V
-#missingWasNullCall(Lorg/jooq/DiagnosticsContext;)V
-#duplicateStatements(Lorg/jooq/DiagnosticsContext;)V
-#repeatedStatements(Lorg/jooq/DiagnosticsContext;)V

+###org/jooq/impl/DefaultDiagnosticsListenerProvider
@3.11.0
+#providers([Lorg/jooq/DiagnosticsListener;)[Lorg/jooq/DiagnosticsListenerProvider;
+#<init>(Lorg/jooq/DiagnosticsListener;)V
+#provide()Lorg/jooq/DiagnosticsListener;
+#toString()Ljava/lang/String;

+###org/jooq/impl/DefaultExecutorProvider
@3.8.0
+#<init>()V
+#provide()Ljava/util/concurrent/Executor;

+###org/jooq/impl/DefaultFormattingProvider
@3.16.0
+#<init>()V
+#txtFormat()Lorg/jooq/TXTFormat;
+#csvFormat()Lorg/jooq/CSVFormat;
+#jsonFormatForResults()Lorg/jooq/JSONFormat;
+#jsonFormatForRecords()Lorg/jooq/JSONFormat;
+#xmlFormatForResults()Lorg/jooq/XMLFormat;
+#xmlFormatForRecords()Lorg/jooq/XMLFormat;
+#chartFormat()Lorg/jooq/ChartFormat;
+#width(Ljava/lang/String;)I

+###org/jooq/impl/DefaultRecordUnmapperProvider
@3.10.0
+#<init>()V
+#provide(Ljava/lang/Class;Lorg/jooq/RecordType;)Lorg/jooq/RecordUnmapper;

+###org/jooq/impl/DefaultTransactionListenerProvider
@3.9.0
+#providers([Lorg/jooq/TransactionListener;)[Lorg/jooq/TransactionListenerProvider;
+#<init>(Lorg/jooq/TransactionListener;)V
+#provide()Lorg/jooq/TransactionListener;
+#toString()Ljava/lang/String;

+###org/jooq/impl/NoTransactionProvider
@3.4.0
+#<init>()V
+#begin(Lorg/jooq/TransactionContext;)V
+#commit(Lorg/jooq/TransactionContext;)V
+#rollback(Lorg/jooq/TransactionContext;)V

+###org/jooq/impl/QOM$Atan2
@3.16.0
+#$x()Lorg/jooq/Field;
+#$y()Lorg/jooq/Field;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Atan2;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Atan2;

+###org/jooq/impl/QOM$Avg
@3.16.0
+#$field()Lorg/jooq/Field;
+#$distinct()Z
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Avg;
+#$distinct(Z)Lorg/jooq/impl/QOM$Avg;

+###org/jooq/impl/QOM$BitNot
@3.16.0

+###org/jooq/impl/QOM$Cosh
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Cosh;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Cosh;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Cosh;

+###org/jooq/impl/QOM$Cot
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Cot;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Cot;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Cot;

+###org/jooq/impl/QOM$CreateIndex
@3.16.0
+#$unique()Z
+#$index()Lorg/jooq/Index;
+#$ifNotExists()Z
+#$table()Lorg/jooq/Table;
+#$on()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$include()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$where()Lorg/jooq/Condition;
+#$excludeNullKeys()Z
+#$unique(Z)Lorg/jooq/impl/QOM$CreateIndex;
+#$index(Lorg/jooq/Index;)Lorg/jooq/impl/QOM$CreateIndex;
+#$ifNotExists(Z)Lorg/jooq/impl/QOM$CreateIndex;
+#$table(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$CreateIndex;
+#$on(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$CreateIndex;
+#$include(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$CreateIndex;
+#$where(Lorg/jooq/Condition;)Lorg/jooq/impl/QOM$CreateIndex;
+#$excludeNullKeys(Z)Lorg/jooq/impl/QOM$CreateIndex;
@3.17.0
+#$on(Ljava/util/Collection;)Lorg/jooq/impl/QOM$CreateIndex;
+#$include(Ljava/util/Collection;)Lorg/jooq/impl/QOM$CreateIndex;
-#$on(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$CreateIndex;
-#$include(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$CreateIndex;

+###org/jooq/impl/QOM$CreateSchema
@3.16.0
+#$schema()Lorg/jooq/Schema;
+#$ifNotExists()Z
+#$schema(Lorg/jooq/Schema;)Lorg/jooq/impl/QOM$CreateSchema;
+#$ifNotExists(Z)Lorg/jooq/impl/QOM$CreateSchema;

+###org/jooq/impl/QOM$Default
@3.16.0

+###org/jooq/impl/QOM$Dual
@3.16.0

+###org/jooq/impl/QOM$EndsWith
@3.16.0
+#$string()Lorg/jooq/Field;
+#$suffix()Lorg/jooq/Field;

+###org/jooq/impl/QOM$EndsWithIgnoreCase
@3.16.0
+#$string()Lorg/jooq/Field;
+#$suffix()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Function
@3.16.0
+#$args()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/impl/QOM$Ge
@3.16.0
@3.17.0
+#$converse()Lorg/jooq/Condition;
+#$converse()Lorg/jooq/QueryPart;

+###org/jooq/impl/QOM$Iif
@3.16.0
+#$condition()Lorg/jooq/Condition;
+#$ifTrue()Lorg/jooq/Field;
+#$ifFalse()Lorg/jooq/Field;

+###org/jooq/impl/QOM$In
@3.16.0

+###org/jooq/impl/QOM$IsNotJson
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Lag
@3.16.0
+#$field()Lorg/jooq/Field;
+#$offset()Lorg/jooq/Field;
+#$defaultValue()Lorg/jooq/Field;
+#$nullTreatment()Lorg/jooq/impl/QOM$NullTreatment;

+###org/jooq/impl/QOM$LikeIgnoreCase
@3.16.0
+#$value()Lorg/jooq/Field;
+#$pattern()Lorg/jooq/Field;
+#$escape()Ljava/lang/Character;

+###org/jooq/impl/QOM$Max
@3.16.0
+#$field()Lorg/jooq/Field;
+#$distinct()Z
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Max;
+#$distinct(Z)Lorg/jooq/impl/QOM$Max;

+###org/jooq/impl/QOM$MultisetAgg
@3.16.0
+#$row()Lorg/jooq/Row;

+###org/jooq/impl/QOM$NotLikeIgnoreCase
@3.16.0
+#$value()Lorg/jooq/Field;
+#$pattern()Lorg/jooq/Field;
+#$escape()Ljava/lang/Character;

+###org/jooq/impl/QOM$NullTreatment
@3.16.0
+#values()[Lorg/jooq/impl/QOM$NullTreatment;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$NullTreatment;

+###org/jooq/impl/QOM$Position
@3.16.0
+#$in()Lorg/jooq/Field;
+#$search()Lorg/jooq/Field;
+#$startIndex()Lorg/jooq/Field;
+#$in(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Position;
+#$search(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Position;
+#$startIndex(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Position;

+###org/jooq/impl/QOM$RatioToReport
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Revoke
@3.16.0
+#$privileges()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$grantOptionFor()Z
+#$on()Lorg/jooq/Table;
+#$from()Lorg/jooq/Role;
+#$fromPublic()Z
+#$privileges(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$Revoke;
+#$grantOptionFor(Z)Lorg/jooq/impl/QOM$Revoke;
+#$on(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$Revoke;
+#$from(Lorg/jooq/Role;)Lorg/jooq/impl/QOM$Revoke;
+#$fromPublic(Z)Lorg/jooq/impl/QOM$Revoke;
@3.17.0
+#$privileges(Ljava/util/Collection;)Lorg/jooq/impl/QOM$Revoke;
-#$privileges(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$Revoke;

+###org/jooq/impl/QOM$Right
@3.16.0
+#$string()Lorg/jooq/Field;
+#$length()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Right;
+#$length(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Right;

+###org/jooq/impl/QOM$SetCommand
@3.16.0
+#$name()Lorg/jooq/Name;
+#$value()Lorg/jooq/Param;
+#$local()Z
+#$name(Lorg/jooq/Name;)Lorg/jooq/impl/QOM$SetCommand;
+#$value(Lorg/jooq/Param;)Lorg/jooq/impl/QOM$SetCommand;
+#$local(Z)Lorg/jooq/impl/QOM$SetCommand;

+###org/jooq/impl/QOM$SetSchema
@3.16.0
+#$schema()Lorg/jooq/Schema;
+#$schema(Lorg/jooq/Schema;)Lorg/jooq/impl/QOM$SetSchema;

+###org/jooq/impl/QOM$Sub
@3.16.0

+###org/jooq/impl/QOM$Substring
@3.16.0
+#$string()Lorg/jooq/Field;
+#$startingPosition()Lorg/jooq/Field;
+#$length()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Substring;
+#$startingPosition(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Substring;
+#$length(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Substring;

+###org/jooq/impl/QOM$Trim
@3.16.0
+#$string()Lorg/jooq/Field;
+#$characters()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Trim;
+#$characters(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Trim;

+###org/jooq/impl/QOM$Trunc
@3.16.0
+#$value()Lorg/jooq/Field;
+#$decimals()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Trunc;
+#$decimals(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Trunc;

+###org/jooq/impl/QOM$VarPop
@3.16.0
+#$field()Lorg/jooq/Field;
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$VarPop;

+###org/jooq/impl/QOM$VarSamp
@3.16.0
+#$field()Lorg/jooq/Field;
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$VarSamp;

+###org/jooq/InsertOnConflictWhereIndexPredicateStep
@3.14.0
+#where(Lorg/jooq/Condition;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#where([Lorg/jooq/Condition;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#where(Ljava/util/Collection;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#where(Lorg/jooq/Field;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#where(Lorg/jooq/SQL;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#where(Ljava/lang/String;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/InsertOnConflictDoUpdateStep;
+#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/InsertOnConflictDoUpdateStep;

+###org/jooq/JSONObjectAggNullStep
@3.14.0
+#nullOnNull()Lorg/jooq/AggregateFilterStep;
+#absentOnNull()Lorg/jooq/AggregateFilterStep;
@3.15.0
+#nullOnNull()Lorg/jooq/JSONObjectAggReturningStep;
+#absentOnNull()Lorg/jooq/JSONObjectAggReturningStep;
-#nullOnNull()Lorg/jooq/AggregateFilterStep;
-#absentOnNull()Lorg/jooq/AggregateFilterStep;

+###org/jooq/JSONObjectAggReturningStep
@3.15.0
+#returning(Lorg/jooq/DataType;)Lorg/jooq/AggregateFilterStep;

+###org/jooq/LoaderContext
@3.6.0
+#errors()Ljava/util/List;
+#processed()I
+#executed()I
+#ignored()I
+#stored()I
@3.14.0
+#row([Ljava/lang/Object;)Lorg/jooq/LoaderContext;
+#row()[Ljava/lang/Object;

+###org/jooq/Migration
@3.13.0
+#from()Lorg/jooq/Version;
+#to()Lorg/jooq/Version;
+#queries()Lorg/jooq/Queries;
+#validate()V
+#execute()V
@3.15.0
+#from()Lorg/jooq/Commit;
+#to()Lorg/jooq/Commit;
-#from()Lorg/jooq/Version;
-#to()Lorg/jooq/Version;

+###org/jooq/MigrationConfiguration
@3.13.0
+#<init>()V
+#alterTableAddMultiple()Z
+#alterTableAddMultiple(Z)Lorg/jooq/MigrationConfiguration;
+#alterTableDropMultiple()Z
+#alterTableDropMultiple(Z)Lorg/jooq/MigrationConfiguration;
+#dropSchemaCascade()Z
+#dropSchemaCascade(Z)Lorg/jooq/MigrationConfiguration;
+#dropTableCascade()Z
+#dropTableCascade(Z)Lorg/jooq/MigrationConfiguration;
+#alterTableDropCascade()Z
+#alterTableDropCascade(Z)Lorg/jooq/MigrationConfiguration;
+#createOrReplaceView()Z
+#createOrReplaceView(Z)Lorg/jooq/MigrationConfiguration;
+#respectColumnOrder()Z
+#respectColumnOrder(Z)Lorg/jooq/MigrationConfiguration;

+###org/jooq/MigrationContext
@3.13.0
+#migrationFrom()Lorg/jooq/Version;
+#migrationTo()Lorg/jooq/Version;
+#migrationQueries()Lorg/jooq/Queries;
+#queriesFrom()Lorg/jooq/Version;
+#queriesTo()Lorg/jooq/Version;
+#queries()Lorg/jooq/Queries;
+#query()Lorg/jooq/Query;
@3.15.0
+#migratedSchemas()Ljava/util/Set;
+#migrationFrom()Lorg/jooq/Commit;
+#migrationTo()Lorg/jooq/Commit;
+#queriesFrom()Lorg/jooq/Commit;
+#queriesTo()Lorg/jooq/Commit;
-#migrationFrom()Lorg/jooq/Version;
-#migrationTo()Lorg/jooq/Version;
-#queriesFrom()Lorg/jooq/Version;
-#queriesTo()Lorg/jooq/Version;

+###org/jooq/migrations/xml/jaxb/ObjectFactory
@3.15.0
+#<init>()V
+#createMigrationsType()Lorg/jooq/migrations/xml/jaxb/MigrationsType;
+#createCommitType()Lorg/jooq/migrations/xml/jaxb/CommitType;
+#createParentType()Lorg/jooq/migrations/xml/jaxb/ParentType;
+#createFileType()Lorg/jooq/migrations/xml/jaxb/FileType;
+#createMigrations(Lorg/jooq/migrations/xml/jaxb/MigrationsType;)Ljavax/xml/bind/JAXBElement;
@3.16.0
+#createMigrations(Lorg/jooq/migrations/xml/jaxb/MigrationsType;)Ljakarta/xml/bind/JAXBElement;
-#createMigrations(Lorg/jooq/migrations/xml/jaxb/MigrationsType;)Ljavax/xml/bind/JAXBElement;

+###org/jooq/Publisher
@3.15.0
+#subscribe(Ljava/util/concurrent/Flow$Subscriber;)V

+###org/jooq/Qualified
@3.14.0
+#getCatalog()Lorg/jooq/Catalog;
+#getSchema()Lorg/jooq/Schema;
@3.16.0
+#$schema()Lorg/jooq/Schema;

+###org/jooq/RecordType
@3.1.0
+#size()I
+#field(Lorg/jooq/Field;)Lorg/jooq/Field;
+#field(Ljava/lang/String;)Lorg/jooq/Field;
+#field(I)Lorg/jooq/Field;
+#fields()[Lorg/jooq/Field;
+#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
+#fields([Ljava/lang/String;)[Lorg/jooq/Field;
+#fields([I)[Lorg/jooq/Field;
+#indexOf(Lorg/jooq/Field;)I
+#indexOf(Ljava/lang/String;)I
+#types()[Ljava/lang/Class;
+#type(I)Ljava/lang/Class;
+#type(Ljava/lang/String;)Ljava/lang/Class;
+#dataTypes()[Lorg/jooq/DataType;
+#dataType(I)Lorg/jooq/DataType;
+#dataType(Ljava/lang/String;)Lorg/jooq/DataType;
@3.6.0
+#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#field(ILjava/lang/Class;)Lorg/jooq/Field;
+#field(ILorg/jooq/DataType;)Lorg/jooq/Field;
@3.7.0
+#field(Lorg/jooq/Name;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
+#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
+#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
+#indexOf(Lorg/jooq/Name;)I
+#type(Lorg/jooq/Name;)Ljava/lang/Class;
+#dataType(Lorg/jooq/Name;)Lorg/jooq/DataType;
@3.15.0
-#field(Lorg/jooq/Field;)Lorg/jooq/Field;
-#field(Ljava/lang/String;)Lorg/jooq/Field;
-#field(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/Field;
-#field(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;Ljava/lang/Class;)Lorg/jooq/Field;
-#field(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/Field;
-#field(I)Lorg/jooq/Field;
-#field(ILjava/lang/Class;)Lorg/jooq/Field;
-#field(ILorg/jooq/DataType;)Lorg/jooq/Field;
-#fields()[Lorg/jooq/Field;
-#fields([Lorg/jooq/Field;)[Lorg/jooq/Field;
-#fields([Ljava/lang/String;)[Lorg/jooq/Field;
-#fields([Lorg/jooq/Name;)[Lorg/jooq/Field;
-#fields([I)[Lorg/jooq/Field;
-#indexOf(Lorg/jooq/Field;)I
-#indexOf(Ljava/lang/String;)I
-#indexOf(Lorg/jooq/Name;)I
-#types()[Ljava/lang/Class;
-#type(I)Ljava/lang/Class;
-#type(Ljava/lang/String;)Ljava/lang/Class;
-#type(Lorg/jooq/Name;)Ljava/lang/Class;
-#dataTypes()[Lorg/jooq/DataType;
-#dataType(I)Lorg/jooq/DataType;
-#dataType(Ljava/lang/String;)Lorg/jooq/DataType;
-#dataType(Lorg/jooq/Name;)Lorg/jooq/DataType;

+###org/jooq/RecordUnmapper
@3.10.0
+#unmap(Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/Require
@3.9.0
+#value()[Lorg/jooq/SQLDialect;

+###org/jooq/ResourceManagingScope
@3.12.0
+#autoFree(Ljava/sql/Array;)Ljava/sql/Array;
+#autoFree(Ljava/sql/Blob;)Ljava/sql/Blob;
+#autoFree(Ljava/sql/Clob;)Ljava/sql/Clob;
+#autoFree(Ljava/sql/SQLXML;)Ljava/sql/SQLXML;
+#autoClose(Ljava/io/Closeable;)Ljava/io/Closeable;
+#autoClose(Ljava/lang/AutoCloseable;)Ljava/lang/AutoCloseable;

+###org/jooq/SelectForStep
@3.14.0

+###org/jooq/SelectIntoStep
@3.5.0
+#into(Lorg/jooq/Table;)Lorg/jooq/SelectIntoStep;
@3.12.0
+#into(Lorg/jooq/Table;)Lorg/jooq/SelectFromStep;
-#into(Lorg/jooq/Table;)Lorg/jooq/SelectIntoStep;

+###org/jooq/SelectSeekStep14
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep15
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep16
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStepN
@3.3.0
+#seek([Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek([Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter([Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter([Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore([Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore([Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore([Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore([Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SQLDialect$ThirdParty
@3.7.0
+#<init>(Lorg/jooq/SQLDialect;)V
+#springDbName()Ljava/lang/String;
+#hibernateDialect()Ljava/lang/String;
@3.14.0
+#driver()Ljava/lang/String;

+###org/jooq/Stringly$SQL
@3.15.0

+###org/jooq/Stringly
@3.15.0
+#<init>()V

+###org/jooq/tools/jdbc/LoggingConnection
@3.12.0
+#<init>(Ljava/sql/Connection;)V
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#nativeSQL(Ljava/lang/String;)Ljava/lang/String;
@3.12.2
+#createStatement()Ljava/sql/Statement;
+#createStatement(II)Ljava/sql/Statement;
+#createStatement(III)Ljava/sql/Statement;

+###org/jooq/tools/jdbc/MockConnectionProvider
@3.6.0
+#<init>(Lorg/jooq/ConnectionProvider;Lorg/jooq/tools/jdbc/MockDataProvider;)V
+#acquire()Ljava/sql/Connection;
+#release(Ljava/sql/Connection;)V

+###org/jooq/tools/jdbc/MockRunnable
@3.6.0
+#run(Lorg/jooq/Configuration;)V

+###org/jooq/tools/jdbc/MockSavepoint
@3.7.3
+#getSavepointId()I
+#getSavepointName()Ljava/lang/String;

+###org/jooq/tools/json/ContainerFactory
@3.3.0
+#createObjectContainer()Ljava/util/Map;
+#createArrayContainer()Ljava/util/List;

+###org/jooq/tools/json/ContentHandler
@3.3.0
+#startJSON()V
+#endJSON()V
+#startObject()Z
+#endObject()Z
+#startObjectEntry(Ljava/lang/String;)Z
+#endObjectEntry()Z
+#startArray()Z
+#endArray()Z
+#primitive(Ljava/lang/Object;)Z

+###org/jooq/tools/json/Yytoken
@3.3.0
+#<init>(ILjava/lang/Object;)V
+#toString()Ljava/lang/String;

+###org/jooq/TransactionContext
@3.4.0
+#configuration()Lorg/jooq/Configuration;
+#transaction()Lorg/jooq/Transaction;
+#transaction(Lorg/jooq/Transaction;)Lorg/jooq/TransactionContext;
+#cause()Ljava/lang/Exception;
+#cause(Ljava/lang/Exception;)Lorg/jooq/TransactionContext;
@3.5.0
-#configuration()Lorg/jooq/Configuration;
@3.10.0
+#causeThrowable()Ljava/lang/Throwable;
+#causeThrowable(Ljava/lang/Throwable;)Lorg/jooq/TransactionContext;

+###org/jooq/UpdateLimitStep
@3.12.0
+#limit(Ljava/lang/Number;)Lorg/jooq/UpdateReturningStep;
+#limit(Lorg/jooq/Param;)Lorg/jooq/UpdateReturningStep;
@3.17.0
+#limit(Lorg/jooq/Field;)Lorg/jooq/UpdateReturningStep;
-#limit(Lorg/jooq/Param;)Lorg/jooq/UpdateReturningStep;

+###org/jooq/UpdateOrderByStep
@3.12.0
+#orderBy([Lorg/jooq/OrderField;)Lorg/jooq/UpdateLimitStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/UpdateLimitStep;
+#orderBy([I)Lorg/jooq/UpdateLimitStep;

+###org/jooq/User
@3.11.0
+#getName()Ljava/lang/String;
@3.14.0
-#getName()Ljava/lang/String;

+###org/jooq/util/xml/jaxb/ObjectType
@3.12.0
+#values()[Lorg/jooq/util/xml/jaxb/ObjectType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ObjectType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ObjectType;
+#toString()Ljava/lang/String;

+###org/jooq/util/xml/jaxb/Table
@3.9.0
+#<init>()V
+#getTableCatalog()Ljava/lang/String;
+#setTableCatalog(Ljava/lang/String;)V
+#getTableSchema()Ljava/lang/String;
+#setTableSchema(Ljava/lang/String;)V
+#getTableName()Ljava/lang/String;
+#setTableName(Ljava/lang/String;)V
+#withTableCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Table;
+#withTableSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Table;
+#withTableName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Table;
@3.11.0
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#withComment(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Table;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
@3.13.0
+#getTableType()Lorg/jooq/util/xml/jaxb/TableType;
+#setTableType(Lorg/jooq/util/xml/jaxb/TableType;)V
+#withTableType(Lorg/jooq/util/xml/jaxb/TableType;)Lorg/jooq/util/xml/jaxb/Table;

+###org/jooq/Version
@3.13.0
+#id()Ljava/lang/String;
+#meta()Lorg/jooq/Meta;
+#migrateTo(Lorg/jooq/Version;)Lorg/jooq/Queries;
+#root()Lorg/jooq/Version;
+#parents()Ljava/util/List;
+#commit(Ljava/lang/String;Lorg/jooq/Meta;)Lorg/jooq/Version;
+#commit(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/Version;
+#commit(Ljava/lang/String;[Lorg/jooq/Source;)Lorg/jooq/Version;
+#merge(Ljava/lang/String;Lorg/jooq/Version;)Lorg/jooq/Version;
+#apply(Ljava/lang/String;Lorg/jooq/Queries;)Lorg/jooq/Version;
+#apply(Ljava/lang/String;[Lorg/jooq/Query;)Lorg/jooq/Version;
+#apply(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/Version;
+#apply(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Version;
@3.15.0
-#id()Ljava/lang/String;
-#root()Lorg/jooq/Version;
-#parents()Ljava/util/List;

+###org/jooq/Versions
@3.13.0
+#root()Lorg/jooq/Version;
+#get(Ljava/lang/String;)Lorg/jooq/Version;

+###org/jooq/WindowSpecification
@3.3.0
@3.16.0
+#$windowDefinition()Lorg/jooq/WindowDefinition;
+#$partitionBy()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$orderBy()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$frameUnits()Lorg/jooq/impl/QOM$FrameUnits;
+#$frameStart()Ljava/lang/Integer;
+#$frameEnd()Ljava/lang/Integer;
+#$exclude()Lorg/jooq/impl/QOM$FrameExclude;

+###org/jooq/WindowSpecificationExcludeStep
@3.12.0
+#excludeCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
+#excludeGroup()Lorg/jooq/WindowSpecificationFinalStep;
+#excludeTies()Lorg/jooq/WindowSpecificationFinalStep;
+#excludeNoOthers()Lorg/jooq/WindowSpecificationFinalStep;

+###org/jooq/WithAsStep10
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep11
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/XMLAggOrderByStep
@3.14.0
+#orderBy([Lorg/jooq/OrderField;)Lorg/jooq/AggregateFilterStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/AggregateFilterStep;

+###org/jooq/XMLAttributes
@3.14.0
@3.16.0
+#$attributes()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/AlterIndexStep
@3.9.0
+#renameTo(Lorg/jooq/Name;)Lorg/jooq/AlterIndexFinalStep;
+#renameTo(Ljava/lang/String;)Lorg/jooq/AlterIndexFinalStep;
@3.10.0
+#renameTo(Lorg/jooq/Index;)Lorg/jooq/AlterIndexFinalStep;

+###org/jooq/AlterSchemaFinalStep
@3.9.0

+###org/jooq/AlterTableDropStep
@3.4.0
+#cascade()Lorg/jooq/AlterTableFinalStep;
+#restrict()Lorg/jooq/AlterTableFinalStep;

+###org/jooq/Asterisk
@3.11.0
@3.12.0
+#except([Ljava/lang/String;)Lorg/jooq/Asterisk;
+#except([Lorg/jooq/Name;)Lorg/jooq/Asterisk;
+#except([Lorg/jooq/Field;)Lorg/jooq/Asterisk;
@3.16.0
+#$except()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/BetweenAndStepR
@3.14.0
+#and(Lorg/jooq/Record;)Lorg/jooq/Condition;

+###org/jooq/Collation
@3.11.0
+#getName()Ljava/lang/String;

+###org/jooq/conf/ParseNameCase
@3.13.0
+#values()[Lorg/jooq/conf/ParseNameCase;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/ParseNameCase;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/ParseNameCase;

+###org/jooq/conf/ParseSearchSchema
@3.12.0
+#<init>()V
+#getCatalog()Ljava/lang/String;
+#setCatalog(Ljava/lang/String;)V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#withCatalog(Ljava/lang/String;)Lorg/jooq/conf/ParseSearchSchema;
+#withSchema(Ljava/lang/String;)Lorg/jooq/conf/ParseSearchSchema;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Ljava/lang/Object;

+###org/jooq/conf/ParseUnknownFunctions
@3.11.0
+#values()[Lorg/jooq/conf/ParseUnknownFunctions;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/ParseUnknownFunctions;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/ParseUnknownFunctions;

+###org/jooq/conf/ThrowExceptions
@3.10.0
+#values()[Lorg/jooq/conf/ThrowExceptions;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/ThrowExceptions;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/ThrowExceptions;

+###org/jooq/ConstraintForeignKeyReferencesStep17
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep18
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep5
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep6
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ContextTransactionalCallable
@3.9.0
+#run()Ljava/lang/Object;

+###org/jooq/ContextTransactionalRunnable
@3.9.0
+#run()V

+###org/jooq/CreateDomainConstraintStep
@3.14.0
+#constraints([Lorg/jooq/Constraint;)Lorg/jooq/CreateDomainConstraintStep;
+#constraints(Ljava/util/Collection;)Lorg/jooq/CreateDomainConstraintStep;

+###org/jooq/CreateDomainDefaultStep
@3.14.0
+#default_(Ljava/lang/Object;)Lorg/jooq/CreateDomainConstraintStep;
+#default_(Lorg/jooq/Field;)Lorg/jooq/CreateDomainConstraintStep;

+###org/jooq/CreateTableOnCommitStep
@3.6.0
+#onCommitDeleteRows()Lorg/jooq/CreateTableFinalStep;
+#onCommitPreserveRows()Lorg/jooq/CreateTableFinalStep;
+#onCommitDrop()Lorg/jooq/CreateTableFinalStep;
@3.11.0
+#onCommitDeleteRows()Lorg/jooq/CreateTableCommentStep;
+#onCommitPreserveRows()Lorg/jooq/CreateTableCommentStep;
+#onCommitDrop()Lorg/jooq/CreateTableCommentStep;
-#onCommitDeleteRows()Lorg/jooq/CreateTableFinalStep;
-#onCommitPreserveRows()Lorg/jooq/CreateTableFinalStep;
-#onCommitDrop()Lorg/jooq/CreateTableFinalStep;

+###org/jooq/DDLQuery
@3.5.0

+###org/jooq/DeleteReturningStep
@3.6.0
+#returning()Lorg/jooq/DeleteResultStep;
+#returning([Lorg/jooq/Field;)Lorg/jooq/DeleteResultStep;
+#returning(Ljava/util/Collection;)Lorg/jooq/DeleteResultStep;
@3.11.0
+#returning([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/DeleteResultStep;
+#returningResult([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/DeleteResultStep;
+#returningResult(Ljava/util/Collection;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
+#returningResult(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/DeleteResultStep;
-#returning([Lorg/jooq/Field;)Lorg/jooq/DeleteResultStep;

+###org/jooq/DerivedColumnList
@3.4.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.16.0
+#$tableName()Lorg/jooq/Name;
+#$columnNames()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/DerivedColumnList16
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList17
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DiagnosticsListener
@3.11.0
+#tooManyRowsFetched(Lorg/jooq/DiagnosticsContext;)V
+#tooManyColumnsFetched(Lorg/jooq/DiagnosticsContext;)V
+#unnecessaryWasNullCall(Lorg/jooq/DiagnosticsContext;)V
+#missingWasNullCall(Lorg/jooq/DiagnosticsContext;)V
+#duplicateStatements(Lorg/jooq/DiagnosticsContext;)V
+#repeatedStatements(Lorg/jooq/DiagnosticsContext;)V
@3.17.0
+#exception(Lorg/jooq/DiagnosticsContext;)V

+###org/jooq/DiagnosticsListenerProvider
@3.11.0
+#provide()Lorg/jooq/DiagnosticsListener;

+###org/jooq/DropSchemaStep
@3.9.0
+#cascade()Lorg/jooq/DropSchemaFinalStep;
+#restrict()Lorg/jooq/DropSchemaFinalStep;

+###org/jooq/DropSequenceFinalStep
@3.5.0

+###org/jooq/exception/IOException
@3.5.0
+#<init>(Ljava/lang/String;Ljava/io/IOException;)V
+#getCause()Ljava/io/IOException;
+#initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#getCause()Ljava/lang/Throwable;

+###org/jooq/exception/SQLStateSubclass
@3.8.0
+#values()[Lorg/jooq/exception/SQLStateSubclass;
+#valueOf(Ljava/lang/String;)Lorg/jooq/exception/SQLStateSubclass;
+#sqlStateSubclassName()Ljava/lang/String;
+#sqlStateClass()Lorg/jooq/exception/SQLStateClass;
+#sqlStateClassName()Ljava/lang/String;
+#fromCode(Ljava/lang/String;)Lorg/jooq/exception/SQLStateSubclass;

+###org/jooq/Formattable
@3.11.0
+#format()Ljava/lang/String;
+#format(I)Ljava/lang/String;
+#format(Lorg/jooq/TXTFormat;)Ljava/lang/String;
+#formatHTML()Ljava/lang/String;
+#formatCSV()Ljava/lang/String;
+#formatCSV(C)Ljava/lang/String;
+#formatCSV(CLjava/lang/String;)Ljava/lang/String;
+#formatCSV(Z)Ljava/lang/String;
+#formatCSV(ZC)Ljava/lang/String;
+#formatCSV(ZCLjava/lang/String;)Ljava/lang/String;
+#formatCSV(Lorg/jooq/CSVFormat;)Ljava/lang/String;
+#formatJSON()Ljava/lang/String;
+#formatJSON(Lorg/jooq/JSONFormat;)Ljava/lang/String;
+#formatXML()Ljava/lang/String;
+#formatXML(Lorg/jooq/XMLFormat;)Ljava/lang/String;
+#formatChart()Ljava/lang/String;
+#formatChart(Lorg/jooq/ChartFormat;)Ljava/lang/String;
+#formatInsert()Ljava/lang/String;
+#formatInsert(Lorg/jooq/Table;[Lorg/jooq/Field;)Ljava/lang/String;
+#format(Ljava/io/OutputStream;)V
+#format(Ljava/io/OutputStream;I)V
+#format(Ljava/io/OutputStream;Lorg/jooq/TXTFormat;)V
+#formatHTML(Ljava/io/OutputStream;)V
+#formatCSV(Ljava/io/OutputStream;)V
+#formatCSV(Ljava/io/OutputStream;C)V
+#formatCSV(Ljava/io/OutputStream;CLjava/lang/String;)V
+#formatCSV(Ljava/io/OutputStream;Z)V
+#formatCSV(Ljava/io/OutputStream;ZC)V
+#formatCSV(Ljava/io/OutputStream;ZCLjava/lang/String;)V
+#formatCSV(Ljava/io/OutputStream;Lorg/jooq/CSVFormat;)V
+#formatJSON(Ljava/io/OutputStream;)V
+#formatJSON(Ljava/io/OutputStream;Lorg/jooq/JSONFormat;)V
+#formatXML(Ljava/io/OutputStream;)V
+#formatXML(Ljava/io/OutputStream;Lorg/jooq/XMLFormat;)V
+#formatChart(Ljava/io/OutputStream;)V
+#formatChart(Ljava/io/OutputStream;Lorg/jooq/ChartFormat;)V
+#formatInsert(Ljava/io/OutputStream;)V
+#formatInsert(Ljava/io/OutputStream;Lorg/jooq/Table;[Lorg/jooq/Field;)V
+#format(Ljava/io/Writer;)V
+#format(Ljava/io/Writer;I)V
+#format(Ljava/io/Writer;Lorg/jooq/TXTFormat;)V
+#formatHTML(Ljava/io/Writer;)V
+#formatCSV(Ljava/io/Writer;)V
+#formatCSV(Ljava/io/Writer;C)V
+#formatCSV(Ljava/io/Writer;CLjava/lang/String;)V
+#formatCSV(Ljava/io/Writer;Z)V
+#formatCSV(Ljava/io/Writer;ZC)V
+#formatCSV(Ljava/io/Writer;ZCLjava/lang/String;)V
+#formatCSV(Ljava/io/Writer;Lorg/jooq/CSVFormat;)V
+#formatJSON(Ljava/io/Writer;)V
+#formatJSON(Ljava/io/Writer;Lorg/jooq/JSONFormat;)V
+#formatXML(Ljava/io/Writer;)V
+#formatXML(Ljava/io/Writer;Lorg/jooq/XMLFormat;)V
+#formatChart(Ljava/io/Writer;)V
+#formatChart(Ljava/io/Writer;Lorg/jooq/ChartFormat;)V
+#formatInsert(Ljava/io/Writer;)V
+#formatInsert(Ljava/io/Writer;Lorg/jooq/Table;[Lorg/jooq/Field;)V
+#intoXML()Lorg/w3c/dom/Document;
+#intoXML(Lorg/jooq/XMLFormat;)Lorg/w3c/dom/Document;
+#intoXML(Lorg/xml/sax/ContentHandler;)Lorg/xml/sax/ContentHandler;
+#intoXML(Lorg/xml/sax/ContentHandler;Lorg/jooq/XMLFormat;)Lorg/xml/sax/ContentHandler;

+###org/jooq/FormattingProvider
@3.16.0
+#txtFormat()Lorg/jooq/TXTFormat;
+#csvFormat()Lorg/jooq/CSVFormat;
+#jsonFormatForResults()Lorg/jooq/JSONFormat;
+#jsonFormatForRecords()Lorg/jooq/JSONFormat;
+#xmlFormatForResults()Lorg/jooq/XMLFormat;
+#xmlFormatForRecords()Lorg/jooq/XMLFormat;
+#chartFormat()Lorg/jooq/ChartFormat;
+#width(Ljava/lang/String;)I
+#onTxtFormat(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onCsvFormat(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onJsonFormatForResults(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onJsonFormatForRecords(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onXmlFormatForResults(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onXmlFormatForRecords(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onChartFormat(Ljava/util/function/Supplier;)Lorg/jooq/impl/CallbackFormattingProvider;
+#onWidth(Ljava/util/function/ToIntFunction;)Lorg/jooq/impl/CallbackFormattingProvider;

+###org/jooq/Function1
@3.15.0
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function17
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function18
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function5
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function6
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/GrantOnStep
@3.11.0
+#on(Lorg/jooq/Table;)Lorg/jooq/GrantToStep;
+#on(Lorg/jooq/Name;)Lorg/jooq/GrantToStep;
+#on(Ljava/lang/String;)Lorg/jooq/GrantToStep;

+###org/jooq/impl/AbstractBinding
@3.14.0
+#<init>()V
+#sql(Lorg/jooq/BindingSQLContext;)V
+#register(Lorg/jooq/BindingRegisterContext;)V
+#get(Lorg/jooq/BindingGetStatementContext;)V
+#set(Lorg/jooq/BindingSetSQLOutputContext;)V
+#get(Lorg/jooq/BindingGetSQLInputContext;)V

+###org/jooq/impl/AbstractConverter
@3.6.0
+#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
+#fromType()Ljava/lang/Class;
+#toType()Ljava/lang/Class;
+#toString()Ljava/lang/String;

+###org/jooq/impl/AbstractXMLasObjectBinding
@3.6.0
+#converter()Lorg/jooq/Converter;

+###org/jooq/impl/BlobBinding
@3.6.0
+#<init>()V
+#converter()Lorg/jooq/Converter;
+#sql(Lorg/jooq/BindingSQLContext;)V
+#register(Lorg/jooq/BindingRegisterContext;)V
+#set(Lorg/jooq/BindingSetStatementContext;)V
+#set(Lorg/jooq/BindingSetSQLOutputContext;)V
+#get(Lorg/jooq/BindingGetResultSetContext;)V
+#get(Lorg/jooq/BindingGetStatementContext;)V
+#get(Lorg/jooq/BindingGetSQLInputContext;)V

+###org/jooq/impl/BuiltInDataType
@3.15.9
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#<init>(Lorg/jooq/SQLDialect;Lorg/jooq/DataType;Ljava/lang/String;)V
+#<init>(Lorg/jooq/SQLDialect;Lorg/jooq/DataType;Ljava/lang/String;Ljava/lang/String;)V
@3.16.0
-###org/jooq/impl/BuiltInDataType

+###org/jooq/impl/CallbackRecordListener
@3.15.0
+#<init>()V
+#storeStart(Lorg/jooq/RecordContext;)V
+#storeEnd(Lorg/jooq/RecordContext;)V
+#insertStart(Lorg/jooq/RecordContext;)V
+#insertEnd(Lorg/jooq/RecordContext;)V
+#updateStart(Lorg/jooq/RecordContext;)V
+#updateEnd(Lorg/jooq/RecordContext;)V
+#mergeStart(Lorg/jooq/RecordContext;)V
+#mergeEnd(Lorg/jooq/RecordContext;)V
+#deleteStart(Lorg/jooq/RecordContext;)V
+#deleteEnd(Lorg/jooq/RecordContext;)V
+#loadStart(Lorg/jooq/RecordContext;)V
+#loadEnd(Lorg/jooq/RecordContext;)V
+#refreshStart(Lorg/jooq/RecordContext;)V
+#refreshEnd(Lorg/jooq/RecordContext;)V
+#exception(Lorg/jooq/RecordContext;)V
+#onStoreStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onStoreEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onInsertStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onInsertEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onUpdateStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onUpdateEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onMergeStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onMergeEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onDeleteStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onDeleteEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onLoadStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onLoadEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onRefreshStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onRefreshEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onException(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;

+###org/jooq/impl/CustomQueryPart
@3.1.0
+#toSQL(Lorg/jooq/RenderContext;)V
+#bind(Lorg/jooq/BindContext;)V
+#declaresFields()Z
+#declaresTables()Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.2.0-alpha-01
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
@3.3.0
+#declaresWindows()Z
@3.4.0
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
+#accept(Lorg/jooq/Context;)V
*#bind(Lorg/jooq/BindContext;)V[deprecated]
+#declaresCTE()Z
@3.7.0
+#generatesCast()Z
@3.8.0
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
-#bind(Lorg/jooq/BindContext;)V[deprecated]
@3.14.0
+#rendersContent(Lorg/jooq/Context;)Z
@3.15.0
+#of(Ljava/util/function/Consumer;)Lorg/jooq/impl/CustomQueryPart;

+###org/jooq/impl/DateToLocalDateConverter
@3.11.0
+#<init>()V
+#from(Ljava/sql/Date;)Ljava/time/LocalDate;
+#to(Ljava/time/LocalDate;)Ljava/sql/Date;
+#to(Ljava/lang/Object;)Ljava/lang/Object;
+#from(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/impl/DefaultCloseableDSLContext
@3.14.0
+#<init>(Lorg/jooq/ConnectionProvider;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#<init>(Lorg/jooq/ConnectionProvider;Lorg/jooq/SQLDialect;)V
+#close()V
@3.15.0
+#<init>(Lio/r2dbc/spi/ConnectionFactory;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#<init>(Lio/r2dbc/spi/ConnectionFactory;Lorg/jooq/SQLDialect;)V

+###org/jooq/impl/DefaultMetaProvider
@3.11.0
+#<init>(Lorg/jooq/Configuration;)V
+#provide()Lorg/jooq/Meta;

+###org/jooq/impl/DefaultMigrationListener
@3.13.0
+#<init>()V
+#migrationStart(Lorg/jooq/MigrationContext;)V
+#migrationEnd(Lorg/jooq/MigrationContext;)V
+#queriesStart(Lorg/jooq/MigrationContext;)V
+#queriesEnd(Lorg/jooq/MigrationContext;)V
+#queryStart(Lorg/jooq/MigrationContext;)V
+#queryEnd(Lorg/jooq/MigrationContext;)V
@3.17.0
-#migrationStart(Lorg/jooq/MigrationContext;)V
-#migrationEnd(Lorg/jooq/MigrationContext;)V
-#queriesStart(Lorg/jooq/MigrationContext;)V
-#queriesEnd(Lorg/jooq/MigrationContext;)V
-#queryStart(Lorg/jooq/MigrationContext;)V
-#queryEnd(Lorg/jooq/MigrationContext;)V

+###org/jooq/impl/DefaultRecordUnmapper
@3.10.0
+#<init>(Ljava/lang/Class;Lorg/jooq/RecordType;Lorg/jooq/Configuration;)V
+#unmap(Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/impl/DefaultTransactionListener
@3.9.0
+#<init>()V
+#beginStart(Lorg/jooq/TransactionContext;)V
+#beginEnd(Lorg/jooq/TransactionContext;)V
+#commitStart(Lorg/jooq/TransactionContext;)V
+#commitEnd(Lorg/jooq/TransactionContext;)V
+#rollbackStart(Lorg/jooq/TransactionContext;)V
+#rollbackEnd(Lorg/jooq/TransactionContext;)V
@3.17.0
-#beginStart(Lorg/jooq/TransactionContext;)V
-#beginEnd(Lorg/jooq/TransactionContext;)V
-#commitStart(Lorg/jooq/TransactionContext;)V
-#commitEnd(Lorg/jooq/TransactionContext;)V
-#rollbackStart(Lorg/jooq/TransactionContext;)V
-#rollbackEnd(Lorg/jooq/TransactionContext;)V

+###org/jooq/impl/QOM$AlterDatabase
@3.16.0
+#$database()Lorg/jooq/Catalog;
+#$ifExists()Z
+#$renameTo()Lorg/jooq/Catalog;
+#$database(Lorg/jooq/Catalog;)Lorg/jooq/impl/QOM$AlterDatabase;
+#$ifExists(Z)Lorg/jooq/impl/QOM$AlterDatabase;
+#$renameTo(Lorg/jooq/Catalog;)Lorg/jooq/impl/QOM$AlterDatabase;

+###org/jooq/impl/QOM$AlterDomain
@3.16.0
+#$domain()Lorg/jooq/Domain;
+#$ifExists()Z
+#$addConstraint()Lorg/jooq/Constraint;
+#$dropConstraint()Lorg/jooq/Constraint;
+#$dropConstraintIfExists()Z
+#$renameTo()Lorg/jooq/Domain;
+#$renameConstraint()Lorg/jooq/Constraint;
+#$renameConstraintIfExists()Z
+#$setDefault()Lorg/jooq/Field;
+#$dropDefault()Z
+#$setNotNull()Z
+#$dropNotNull()Z
+#$cascade()Lorg/jooq/impl/QOM$Cascade;
+#$renameConstraintTo()Lorg/jooq/Constraint;
+#$domain(Lorg/jooq/Domain;)Lorg/jooq/impl/QOM$AlterDomain;
+#$ifExists(Z)Lorg/jooq/impl/QOM$AlterDomain;
+#$addConstraint(Lorg/jooq/Constraint;)Lorg/jooq/impl/QOM$AlterDomain;
+#$dropConstraint(Lorg/jooq/Constraint;)Lorg/jooq/impl/QOM$AlterDomain;
+#$dropConstraintIfExists(Z)Lorg/jooq/impl/QOM$AlterDomain;
+#$renameTo(Lorg/jooq/Domain;)Lorg/jooq/impl/QOM$AlterDomain;
+#$renameConstraint(Lorg/jooq/Constraint;)Lorg/jooq/impl/QOM$AlterDomain;
+#$renameConstraintIfExists(Z)Lorg/jooq/impl/QOM$AlterDomain;
+#$setDefault(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AlterDomain;
+#$dropDefault(Z)Lorg/jooq/impl/QOM$AlterDomain;
+#$setNotNull(Z)Lorg/jooq/impl/QOM$AlterDomain;
+#$dropNotNull(Z)Lorg/jooq/impl/QOM$AlterDomain;
+#$cascade(Lorg/jooq/impl/QOM$Cascade;)Lorg/jooq/impl/QOM$AlterDomain;
+#$renameConstraintTo(Lorg/jooq/Constraint;)Lorg/jooq/impl/QOM$AlterDomain;

+###org/jooq/impl/QOM$AlterIndex
@3.16.0
+#$index()Lorg/jooq/Index;
+#$ifExists()Z
+#$on()Lorg/jooq/Table;
+#$renameTo()Lorg/jooq/Index;
+#$index(Lorg/jooq/Index;)Lorg/jooq/impl/QOM$AlterIndex;
+#$ifExists(Z)Lorg/jooq/impl/QOM$AlterIndex;
+#$on(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$AlterIndex;
+#$renameTo(Lorg/jooq/Index;)Lorg/jooq/impl/QOM$AlterIndex;

+###org/jooq/impl/QOM$ArrayAgg
@3.16.0
+#$field()Lorg/jooq/Field;
+#$distinct()Z

+###org/jooq/impl/QOM$ArrayGet
@3.16.0
+#$array()Lorg/jooq/Field;
+#$index()Lorg/jooq/Field;
+#$array(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$ArrayGet;
+#$index(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$ArrayGet;

+###org/jooq/impl/QOM$BitOr
@3.16.0

+###org/jooq/impl/QOM$BitOrAgg
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$BitOrAgg;

+###org/jooq/impl/QOM$Cast
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Ceil
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Ceil;

+###org/jooq/impl/QOM$CountTable
@3.16.0
+#$table()Lorg/jooq/Table;
+#$distinct()Z

+###org/jooq/impl/QOM$CovarPop
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CovarPop;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CovarPop;

+###org/jooq/impl/QOM$CreateView
@3.16.0
+#$ifNotExists()Z
+#$orReplace()Z
+#$view()Lorg/jooq/Table;
+#$fields()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$query()Lorg/jooq/ResultQuery;

+###org/jooq/impl/QOM$Cube
@3.16.0

+###org/jooq/impl/QOM$CycleOption
@3.16.0
+#values()[Lorg/jooq/impl/QOM$CycleOption;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$CycleOption;

+###org/jooq/impl/QOM$DataChangeDeltaTable
@3.16.0
+#$resultOption()Lorg/jooq/impl/QOM$ResultOption;
+#$query()Lorg/jooq/DMLQuery;

+###org/jooq/impl/QOM$DropType
@3.16.0
+#$names()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$ifExists()Z
+#$cascade()Lorg/jooq/impl/QOM$Cascade;

+###org/jooq/impl/QOM$DropView
@3.16.0
+#$view()Lorg/jooq/Table;
+#$ifExists()Z
+#$view(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$DropView;
+#$ifExists(Z)Lorg/jooq/impl/QOM$DropView;

+###org/jooq/impl/QOM$Extract
@3.16.0
+#$field()Lorg/jooq/Field;
+#$datePart()Lorg/jooq/DatePart;

+###org/jooq/impl/QOM$FieldAlias
@3.16.0
+#$field()Lorg/jooq/Field;
+#$alias()Lorg/jooq/Name;

+###org/jooq/impl/QOM$IsDistinctFrom
@3.16.0

+###org/jooq/impl/QOM$JSONArray
@3.16.0
+#$type()Lorg/jooq/DataType;
+#$fields()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$onNull()Lorg/jooq/impl/QOM$JSONOnNull;
+#$returning()Lorg/jooq/DataType;
+#$type(Lorg/jooq/DataType;)Lorg/jooq/impl/QOM$JSONArray;
+#$fields(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$JSONArray;
+#$onNull(Lorg/jooq/impl/QOM$JSONOnNull;)Lorg/jooq/impl/QOM$JSONArray;
+#$returning(Lorg/jooq/DataType;)Lorg/jooq/impl/QOM$JSONArray;
@3.17.0
+#$fields(Ljava/util/Collection;)Lorg/jooq/impl/QOM$JSONArray;
-#$fields(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$JSONArray;

+###org/jooq/impl/QOM$Log10
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Log10;

+###org/jooq/impl/QOM$Lower
@3.16.0
+#$string()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Lower;

+###org/jooq/impl/QOM$Neg
@3.16.0

+###org/jooq/impl/QOM$Not
@3.16.0
+#$condition()Lorg/jooq/Condition;

+###org/jooq/impl/QOM$Nvl2
@3.16.0
+#$value()Lorg/jooq/Field;
+#$ifNotNull()Lorg/jooq/Field;
+#$ifIfNull()Lorg/jooq/Field;

+###org/jooq/impl/QOM$OctetLength
@3.16.0
+#$string()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$OctetLength;

+###org/jooq/impl/QOM$Or
@3.16.0

+###org/jooq/impl/QOM$QualifiedRowid
@3.16.0
+#$table()Lorg/jooq/Table;

+###org/jooq/impl/QOM$Radians
@3.16.0
+#$degrees()Lorg/jooq/Field;
+#$degrees(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Radians;

+###org/jooq/impl/QOM$Replace
@3.16.0
+#$string()Lorg/jooq/Field;
+#$search()Lorg/jooq/Field;
+#$replace()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Replace;
+#$search(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Replace;
+#$replace(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Replace;

+###org/jooq/impl/QOM$ResultOption
@3.16.0
+#values()[Lorg/jooq/impl/QOM$ResultOption;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$ResultOption;

+###org/jooq/impl/QOM$Square
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Square;

+###org/jooq/impl/QOM$StartsWith
@3.16.0
+#$string()Lorg/jooq/Field;
+#$prefix()Lorg/jooq/Field;

+###org/jooq/impl/QOM$ToChar
@3.16.0
+#$value()Lorg/jooq/Field;
+#$formatMask()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$ToChar;
+#$formatMask(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$ToChar;

+###org/jooq/impl/QOM$ToDate
@3.16.0
+#$value()Lorg/jooq/Field;
+#$formatMask()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$ToDate;
+#$formatMask(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$ToDate;

+###org/jooq/impl/QOM$UnmodifiableCollection
@3.16.0

+###org/jooq/impl/QOM$UnmodifiableList
@3.16.0

+###org/jooq/impl/QOM$With
@3.16.0
+#$commonTableExpressions()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$recursive()Z

+###org/jooq/impl/QOM$XMLAgg
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$XMLPi
@3.16.0
+#$target()Lorg/jooq/Name;
+#$content()Lorg/jooq/Field;
+#$target(Lorg/jooq/Name;)Lorg/jooq/impl/QOM$XMLPi;
+#$content(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$XMLPi;

+###org/jooq/impl/QOM$XMLQuery
@3.16.0
+#$xpath()Lorg/jooq/Field;
+#$passing()Lorg/jooq/Field;
+#$passingMechanism()Lorg/jooq/impl/QOM$XMLPassingMechanism;

+###org/jooq/impl/TimestampToLocalDateTimeConverter
@3.11.0
+#<init>()V
+#from(Ljava/sql/Timestamp;)Ljava/time/LocalDateTime;
+#to(Ljava/time/LocalDateTime;)Ljava/sql/Timestamp;
+#to(Ljava/lang/Object;)Ljava/lang/Object;
+#from(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/impl/XMLasDOMBinding
@3.6.0
+#<init>()V
+#converter()Lorg/jooq/Converter;
+#fromString(Ljava/lang/String;)Lorg/w3c/dom/Document;
+#builder()Ljavax/xml/parsers/DocumentBuilder;

+###org/jooq/InsertOnConflictConditionStep
@3.10.0
+#and(Lorg/jooq/Condition;)Lorg/jooq/InsertOnConflictConditionStep;
+#and(Lorg/jooq/Field;)Lorg/jooq/InsertOnConflictConditionStep;
+#and(Lorg/jooq/SQL;)Lorg/jooq/InsertOnConflictConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/InsertOnConflictConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/InsertOnConflictConditionStep;
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/InsertOnConflictConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/InsertOnConflictConditionStep;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/InsertOnConflictConditionStep;
+#andExists(Lorg/jooq/Select;)Lorg/jooq/InsertOnConflictConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/InsertOnConflictConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/InsertOnConflictConditionStep;
+#or(Lorg/jooq/Field;)Lorg/jooq/InsertOnConflictConditionStep;
+#or(Lorg/jooq/SQL;)Lorg/jooq/InsertOnConflictConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/InsertOnConflictConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/InsertOnConflictConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/InsertOnConflictConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/InsertOnConflictConditionStep;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/InsertOnConflictConditionStep;
+#orExists(Lorg/jooq/Select;)Lorg/jooq/InsertOnConflictConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/InsertOnConflictConditionStep;

+###org/jooq/JSONArrayAggOrderByStep
@3.14.0
+#orderBy([Lorg/jooq/OrderField;)Lorg/jooq/JSONArrayAggNullStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/JSONArrayAggNullStep;

+###org/jooq/JSONArrayAggReturningStep
@3.15.0
+#returning(Lorg/jooq/DataType;)Lorg/jooq/AggregateFilterStep;

+###org/jooq/JSONTableColumnsFirstStep
@3.14.0
+#column(Ljava/lang/String;)Lorg/jooq/JSONTableColumnForOrdinalityStep;
+#column(Lorg/jooq/Name;)Lorg/jooq/JSONTableColumnForOrdinalityStep;
+#column(Lorg/jooq/Field;)Lorg/jooq/JSONTableColumnPathStep;
+#column(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/JSONTableColumnPathStep;
+#column(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/JSONTableColumnPathStep;
+#column(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/JSONTableColumnPathStep;

+###org/jooq/JSONTableColumnsStep
@3.14.0

+###org/jooq/LoaderJSONOptionsStep
@3.3.0
+#ignoreRows(I)Lorg/jooq/LoaderJSONOptionsStep;
@3.7.3
*#ignoreRows(I)Lorg/jooq/LoaderJSONOptionsStep;[deprecated]

+###org/jooq/LoaderJSONStep
@3.3.0
+#fields([Lorg/jooq/Field;)Lorg/jooq/LoaderJSONOptionsStep;
+#fields(Ljava/util/Collection;)Lorg/jooq/LoaderJSONOptionsStep;
@3.8.0
+#fields(Lorg/jooq/LoaderFieldMapper;)Lorg/jooq/LoaderListenerStep;
@3.13.0
+#fields(Lorg/jooq/LoaderFieldMapper;)Lorg/jooq/LoaderJSONOptionsStep;
+#fieldsFromSource()Lorg/jooq/LoaderJSONOptionsStep;
-#fields(Lorg/jooq/LoaderFieldMapper;)Lorg/jooq/LoaderListenerStep;
@3.14.0
+#fieldsFromSource()Lorg/jooq/LoaderCSVOptionsStep;[deprecated]
+#fieldsCorresponding()Lorg/jooq/LoaderCSVOptionsStep;
-#fieldsFromSource()Lorg/jooq/LoaderJSONOptionsStep;

+###org/jooq/Log$Level
@3.9.0
+#values()[Lorg/jooq/Log$Level;
+#valueOf(Ljava/lang/String;)Lorg/jooq/Log$Level;
+#supports(Lorg/jooq/Log$Level;)Z

+###org/jooq/Log
@3.9.0
+#isTraceEnabled()Z
+#trace(Ljava/lang/Object;)V
+#trace(Ljava/lang/Object;Ljava/lang/Object;)V
+#trace(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#trace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/Object;)V
+#debug(Ljava/lang/Object;Ljava/lang/Object;)V
+#debug(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#debug(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/Object;)V
+#info(Ljava/lang/Object;Ljava/lang/Object;)V
+#info(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#info(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#warn(Ljava/lang/Object;)V
+#warn(Ljava/lang/Object;Ljava/lang/Object;)V
+#warn(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#warn(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#error(Ljava/lang/Object;)V
+#error(Ljava/lang/Object;Ljava/lang/Object;)V
+#error(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#error(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
@3.13.0
+#log(Lorg/jooq/Log$Level;Ljava/lang/Object;)V
+#log(Lorg/jooq/Log$Level;Ljava/lang/Object;Ljava/lang/Object;)V
+#log(Lorg/jooq/Log$Level;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#log(Lorg/jooq/Log$Level;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
@3.15.0
+#isWarnEnabled()Z

+###org/jooq/OrderedAggregateFunctionOfDeferredType
@3.8.0
+#withinGroupOrderBy(Lorg/jooq/Field;)Lorg/jooq/AggregateFilterStep;
+#withinGroupOrderBy(Lorg/jooq/SortField;)Lorg/jooq/AggregateFilterStep;
@3.10.0
+#withinGroupOrderBy(Lorg/jooq/OrderField;)Lorg/jooq/AggregateFilterStep;
-#withinGroupOrderBy(Lorg/jooq/Field;)Lorg/jooq/AggregateFilterStep;
-#withinGroupOrderBy(Lorg/jooq/SortField;)Lorg/jooq/AggregateFilterStep;

+###org/jooq/OrderField
@3.10.0

+###org/jooq/RecordListener
@3.2.0-alpha-01
+#storeStart(Lorg/jooq/RecordContext;)V
+#storeEnd(Lorg/jooq/RecordContext;)V
+#insertStart(Lorg/jooq/RecordContext;)V
+#insertEnd(Lorg/jooq/RecordContext;)V
+#updateStart(Lorg/jooq/RecordContext;)V
+#updateEnd(Lorg/jooq/RecordContext;)V
+#deleteStart(Lorg/jooq/RecordContext;)V
+#deleteEnd(Lorg/jooq/RecordContext;)V
+#loadStart(Lorg/jooq/RecordContext;)V
+#loadEnd(Lorg/jooq/RecordContext;)V
+#refreshStart(Lorg/jooq/RecordContext;)V
+#refreshEnd(Lorg/jooq/RecordContext;)V
@3.3.0
+#exception(Lorg/jooq/RecordContext;)V
@3.14.0
+#mergeStart(Lorg/jooq/RecordContext;)V
+#mergeEnd(Lorg/jooq/RecordContext;)V
@3.15.0
+#onStoreStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onStoreEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onInsertStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onInsertEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onUpdateStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onUpdateEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onMergeStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onMergeEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onDeleteStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onDeleteEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onLoadStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onLoadEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onRefreshStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onRefreshEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;
+#onException(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackRecordListener;

+###org/jooq/RecordUnmapperProvider
@3.10.0
+#provide(Ljava/lang/Class;Lorg/jooq/RecordType;)Lorg/jooq/RecordUnmapper;

+###org/jooq/Rows
@3.15.0
+#<init>()V
+#toRowArray([Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList([Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowArray(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
+#toRowList(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;

+###org/jooq/SelectSeekLimitStep
@3.3.0
+#limit(I)Lorg/jooq/SelectForUpdateStep;
+#limit(Lorg/jooq/Param;)Lorg/jooq/SelectForUpdateStep;
@3.12.0
+#limit(Ljava/lang/Number;)Lorg/jooq/SelectForUpdateStep;
@3.17.0
+#limit(Lorg/jooq/Field;)Lorg/jooq/SelectForUpdateStep;
-#limit(I)Lorg/jooq/SelectForUpdateStep;
-#limit(Lorg/jooq/Param;)Lorg/jooq/SelectForUpdateStep;

+###org/jooq/SelectSeekStep22
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep3
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep4
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectUnionStep
@3.5.0
+#union(Lorg/jooq/Select;)Lorg/jooq/SelectOrderByStep;
+#unionAll(Lorg/jooq/Select;)Lorg/jooq/SelectOrderByStep;
+#except(Lorg/jooq/Select;)Lorg/jooq/SelectOrderByStep;
+#intersect(Lorg/jooq/Select;)Lorg/jooq/SelectOrderByStep;
@3.7.0
+#exceptAll(Lorg/jooq/Select;)Lorg/jooq/SelectOrderByStep;
+#intersectAll(Lorg/jooq/Select;)Lorg/jooq/SelectOrderByStep;
+#intersectAll(Lorg/jooq/Select;)Lorg/jooq/Select;
+#intersect(Lorg/jooq/Select;)Lorg/jooq/Select;
+#exceptAll(Lorg/jooq/Select;)Lorg/jooq/Select;
+#except(Lorg/jooq/Select;)Lorg/jooq/Select;
+#unionAll(Lorg/jooq/Select;)Lorg/jooq/Select;
+#union(Lorg/jooq/Select;)Lorg/jooq/Select;

+###org/jooq/Statement
@3.11.0

+###org/jooq/tools/json/ParseException
@3.3.0
+#<init>(I)V
+#<init>(ILjava/lang/Object;)V
+#<init>(IILjava/lang/Object;)V
+#getErrorType()I
+#setErrorType(I)V
+#getPosition()I
+#setPosition(I)V
+#getUnexpectedObject()Ljava/lang/Object;
+#setUnexpectedObject(Ljava/lang/Object;)V
+#getMessage()Ljava/lang/String;

+###org/jooq/TransactionProvider
@3.4.0
+#begin(Lorg/jooq/TransactionContext;)V
+#commit(Lorg/jooq/TransactionContext;)V
+#rollback(Lorg/jooq/TransactionContext;)V

+###org/jooq/True
@3.10.0

+###org/jooq/util/xml/jaxb/DomainConstraint
@3.14.0
+#<init>()V
+#getConstraintCatalog()Ljava/lang/String;
+#setConstraintCatalog(Ljava/lang/String;)V
+#getConstraintSchema()Ljava/lang/String;
+#setConstraintSchema(Ljava/lang/String;)V
+#getConstraintName()Ljava/lang/String;
+#setConstraintName(Ljava/lang/String;)V
+#getDomainCatalog()Ljava/lang/String;
+#setDomainCatalog(Ljava/lang/String;)V
+#getDomainSchema()Ljava/lang/String;
+#setDomainSchema(Ljava/lang/String;)V
+#getDomainName()Ljava/lang/String;
+#setDomainName(Ljava/lang/String;)V
+#withConstraintCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/DomainConstraint;
+#withConstraintSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/DomainConstraint;
+#withConstraintName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/DomainConstraint;
+#withDomainCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/DomainConstraint;
+#withDomainSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/DomainConstraint;
+#withDomainName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/DomainConstraint;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/jooq/WindowSpecificationFinalStep
@3.3.0

+###org/jooq/WindowSpecificationOrderByStep
@3.3.0
+#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowSpecificationRowsStep;
+#orderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowSpecificationRowsStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/WindowSpecificationRowsStep;
@3.10.0
+#orderBy([Lorg/jooq/OrderField;)Lorg/jooq/WindowSpecificationRowsStep;
-#orderBy([Lorg/jooq/Field;)Lorg/jooq/WindowSpecificationRowsStep;
-#orderBy([Lorg/jooq/SortField;)Lorg/jooq/WindowSpecificationRowsStep;

+###org/jooq/WithAsStep12
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep13
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/XMLExistsPassingStep
@3.14.0
+#passing(Lorg/jooq/XML;)Lorg/jooq/Condition;
+#passing(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#passingByRef(Lorg/jooq/XML;)Lorg/jooq/Condition;
+#passingByRef(Lorg/jooq/Field;)Lorg/jooq/Condition;
+#passingByValue(Lorg/jooq/XML;)Lorg/jooq/Condition;
+#passingByValue(Lorg/jooq/Field;)Lorg/jooq/Condition;

+###org/jooq/XMLTableColumnsStep
@3.14.0

+###org/jooq/XMLTablePassingStep
@3.14.0
+#passing(Lorg/jooq/XML;)Lorg/jooq/XMLTableColumnsFirstStep;
+#passing(Lorg/jooq/Field;)Lorg/jooq/XMLTableColumnsFirstStep;
+#passingByRef(Lorg/jooq/XML;)Lorg/jooq/XMLTableColumnsFirstStep;
+#passingByRef(Lorg/jooq/Field;)Lorg/jooq/XMLTableColumnsFirstStep;
+#passingByValue(Lorg/jooq/XML;)Lorg/jooq/XMLTableColumnsFirstStep;
+#passingByValue(Lorg/jooq/Field;)Lorg/jooq/XMLTableColumnsFirstStep;

+###org/jooq/AlterDomainFinalStep
@3.14.0

+###org/jooq/AlterSequenceFinalStep
@3.4.0

+###org/jooq/AlterTableRenameColumnToStep
@3.8.0
+#to(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
+#to(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
+#to(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;

+###org/jooq/AttachableQueryPart
@3.15.0
+#getSQL()Ljava/lang/String;
+#getSQL(Lorg/jooq/conf/ParamType;)Ljava/lang/String;
+#getBindValues()Ljava/util/List;
+#getParams()Ljava/util/Map;
+#getParam(Ljava/lang/String;)Lorg/jooq/Param;

+###org/jooq/BindingSetStatementContext
@3.5.0
+#statement()Ljava/sql/PreparedStatement;
+#index()I
+#value()Ljava/lang/Object;
+#convert(Lorg/jooq/Converter;)Lorg/jooq/BindingSetStatementContext;

+###org/jooq/BindingSQLContext
@3.5.0
+#render()Lorg/jooq/RenderContext;
+#value()Ljava/lang/Object;
+#variable()Ljava/lang/String;
+#convert(Lorg/jooq/Converter;)Lorg/jooq/BindingSQLContext;

+###org/jooq/CharacterSet
@3.12.0
+#getName()Ljava/lang/String;

+###org/jooq/Clause
@3.2.0-alpha-01
+#values()[Lorg/jooq/Clause;
+#valueOf(Ljava/lang/String;)Lorg/jooq/Clause;

+###org/jooq/CommonTableExpression
@3.4.0
@3.16.0
+#$derivedColumnList()Lorg/jooq/DerivedColumnList;
+#$query()Lorg/jooq/ResultQuery;
+#$materialized()Lorg/jooq/impl/QOM$Materialized;

+###org/jooq/conf/InterpreterSearchSchema
@3.13.0
+#<init>()V
+#getCatalog()Ljava/lang/String;
+#setCatalog(Ljava/lang/String;)V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#withCatalog(Ljava/lang/String;)Lorg/jooq/conf/InterpreterSearchSchema;
+#withSchema(Ljava/lang/String;)Lorg/jooq/conf/InterpreterSearchSchema;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Ljava/lang/Object;

+###org/jooq/conf/RenderImplicitJoinType
@3.14.0
+#values()[Lorg/jooq/conf/RenderImplicitJoinType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/RenderImplicitJoinType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/RenderImplicitJoinType;

+###org/jooq/conf/RenderImplicitWindowRange
@3.15.0
+#values()[Lorg/jooq/conf/RenderImplicitWindowRange;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/RenderImplicitWindowRange;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/RenderImplicitWindowRange;

+###org/jooq/conf/RenderKeywordCase
@3.12.0
+#values()[Lorg/jooq/conf/RenderKeywordCase;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/RenderKeywordCase;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/RenderKeywordCase;

+###org/jooq/conf/UpdateUnchangedRecords
@3.14.0
+#values()[Lorg/jooq/conf/UpdateUnchangedRecords;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/UpdateUnchangedRecords;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/UpdateUnchangedRecords;

+###org/jooq/conf/WriteIfReadonly
@3.16.0
+#values()[Lorg/jooq/conf/WriteIfReadonly;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/WriteIfReadonly;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/WriteIfReadonly;

+###org/jooq/ConstraintFinalStep
@3.6.0

+###org/jooq/ConstraintForeignKeyOnStep
@3.6.0
+#onDeleteNoAction()Lorg/jooq/ConstraintFinalStep;
+#onDeleteRestrict()Lorg/jooq/ConstraintFinalStep;
+#onDeleteCascade()Lorg/jooq/ConstraintFinalStep;
+#onDeleteSetNull()Lorg/jooq/ConstraintFinalStep;
+#onDeleteSetDefault()Lorg/jooq/ConstraintFinalStep;
+#onUpdateNoAction()Lorg/jooq/ConstraintFinalStep;
+#onUpdateRestrict()Lorg/jooq/ConstraintFinalStep;
+#onUpdateCascade()Lorg/jooq/ConstraintFinalStep;
+#onUpdateSetNull()Lorg/jooq/ConstraintFinalStep;
+#onUpdateSetDefault()Lorg/jooq/ConstraintFinalStep;
@3.10.0
+#onDeleteNoAction()Lorg/jooq/ConstraintForeignKeyOnStep;
+#onDeleteRestrict()Lorg/jooq/ConstraintForeignKeyOnStep;
+#onDeleteCascade()Lorg/jooq/ConstraintForeignKeyOnStep;
+#onDeleteSetNull()Lorg/jooq/ConstraintForeignKeyOnStep;
+#onDeleteSetDefault()Lorg/jooq/ConstraintForeignKeyOnStep;
+#onUpdateNoAction()Lorg/jooq/ConstraintForeignKeyOnStep;
+#onUpdateRestrict()Lorg/jooq/ConstraintForeignKeyOnStep;
+#onUpdateCascade()Lorg/jooq/ConstraintForeignKeyOnStep;
+#onUpdateSetNull()Lorg/jooq/ConstraintForeignKeyOnStep;
+#onUpdateSetDefault()Lorg/jooq/ConstraintForeignKeyOnStep;
-#onDeleteNoAction()Lorg/jooq/ConstraintFinalStep;
-#onDeleteRestrict()Lorg/jooq/ConstraintFinalStep;
-#onDeleteCascade()Lorg/jooq/ConstraintFinalStep;
-#onDeleteSetNull()Lorg/jooq/ConstraintFinalStep;
-#onDeleteSetDefault()Lorg/jooq/ConstraintFinalStep;
-#onUpdateNoAction()Lorg/jooq/ConstraintFinalStep;
-#onUpdateRestrict()Lorg/jooq/ConstraintFinalStep;
-#onUpdateCascade()Lorg/jooq/ConstraintFinalStep;
-#onUpdateSetNull()Lorg/jooq/ConstraintFinalStep;
-#onUpdateSetDefault()Lorg/jooq/ConstraintFinalStep;

+###org/jooq/ConstraintForeignKeyReferencesStep9
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStepN
@3.6.0
+#references(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/ConstraintFinalStep;
+#references(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/ConstraintFinalStep;
@3.10.0
+#references(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
-#references(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/ConstraintFinalStep;
-#references(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/ConstraintFinalStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.15.0
+#references(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/CreateDomainFinalStep
@3.14.0

+###org/jooq/CreateIndexFinalStep
@3.5.0

+###org/jooq/DeleteUsingStep
@3.13.0
+#using(Lorg/jooq/TableLike;)Lorg/jooq/DeleteWhereStep;
+#using([Lorg/jooq/TableLike;)Lorg/jooq/DeleteWhereStep;
+#using(Ljava/util/Collection;)Lorg/jooq/DeleteWhereStep;
+#using(Lorg/jooq/SQL;)Lorg/jooq/DeleteWhereStep;
+#using(Ljava/lang/String;)Lorg/jooq/DeleteWhereStep;
+#using(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/DeleteWhereStep;
+#using(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/DeleteWhereStep;
+#using(Lorg/jooq/Name;)Lorg/jooq/DeleteWhereStep;

+###org/jooq/DerivedColumnList2
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList20
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DropTableFinalStep
@3.4.0

+###org/jooq/DropTableStep
@3.4.0
+#cascade()Lorg/jooq/DropTableFinalStep;
+#restrict()Lorg/jooq/DropTableFinalStep;

+###org/jooq/exception/ConfigurationException
@3.9.0
+#<init>(Ljava/lang/String;)V
@3.12.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/jooq/exception/ControlFlowSignal
@3.1.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#fillInStackTrace()Ljava/lang/Throwable;

+###org/jooq/ExecuteEventHandler
@3.8.0
+#fire(Lorg/jooq/ExecuteContext;)V

+###org/jooq/False
@3.10.0

+###org/jooq/FilePattern
@3.13.0
+#<init>()V
+#sort()Lorg/jooq/FilePattern$Sort;
+#sort(Lorg/jooq/FilePattern$Sort;)Lorg/jooq/FilePattern;
+#basedir()Ljava/io/File;
+#basedir(Ljava/io/File;)Lorg/jooq/FilePattern;
+#pattern()Ljava/lang/String;
+#pattern(Ljava/lang/String;)Lorg/jooq/FilePattern;
+#encoding()Ljava/lang/String;
+#encoding(Ljava/lang/String;)Lorg/jooq/FilePattern;
+#collect()Ljava/util/List;
+#load(Lorg/jooq/FilePattern$Loader;)V
+#toString()Ljava/lang/String;
@3.15.0
+#matches(Ljava/lang/String;)Z
+#load(Ljava/util/function/Consumer;)V
-#load(Lorg/jooq/FilePattern$Loader;)V

+###org/jooq/Geography
@3.16.0
+#data()Ljava/lang/String;
+#valueOf(Ljava/lang/String;)Lorg/jooq/Geography;
+#geography(Ljava/lang/String;)Lorg/jooq/Geography;
+#geographyOrNull(Ljava/lang/String;)Lorg/jooq/Geography;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/jooq/Geometry
@3.16.0
+#data()Ljava/lang/String;
+#valueOf(Ljava/lang/String;)Lorg/jooq/Geometry;
+#geometry(Ljava/lang/String;)Lorg/jooq/Geometry;
+#geometryOrNull(Ljava/lang/String;)Lorg/jooq/Geometry;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/jooq/GrantFinalStep
@3.11.0

+###org/jooq/impl/CacheType
@3.15.0
+#values()[Lorg/jooq/impl/CacheType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/CacheType;

+###org/jooq/impl/CallbackExecuteListener
@3.8.0
+#<init>()V
+#start(Lorg/jooq/ExecuteContext;)V
+#renderStart(Lorg/jooq/ExecuteContext;)V
+#renderEnd(Lorg/jooq/ExecuteContext;)V
+#prepareStart(Lorg/jooq/ExecuteContext;)V
+#prepareEnd(Lorg/jooq/ExecuteContext;)V
+#bindStart(Lorg/jooq/ExecuteContext;)V
+#bindEnd(Lorg/jooq/ExecuteContext;)V
+#executeStart(Lorg/jooq/ExecuteContext;)V
+#executeEnd(Lorg/jooq/ExecuteContext;)V
+#outStart(Lorg/jooq/ExecuteContext;)V
+#outEnd(Lorg/jooq/ExecuteContext;)V
+#fetchStart(Lorg/jooq/ExecuteContext;)V
+#resultStart(Lorg/jooq/ExecuteContext;)V
+#recordStart(Lorg/jooq/ExecuteContext;)V
+#recordEnd(Lorg/jooq/ExecuteContext;)V
+#resultEnd(Lorg/jooq/ExecuteContext;)V
+#fetchEnd(Lorg/jooq/ExecuteContext;)V
+#end(Lorg/jooq/ExecuteContext;)V
+#exception(Lorg/jooq/ExecuteContext;)V
+#warning(Lorg/jooq/ExecuteContext;)V
+#onStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onRenderStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onRenderEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onPrepareStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onPrepareEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onBindStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onBindEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onExecuteStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onExecuteEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onOutStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onOutEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onFetchStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onResultStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onRecordStart(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onRecordEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onResultEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onFetchEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onEnd(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onException(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;
+#onWarning(Lorg/jooq/ExecuteEventHandler;)Lorg/jooq/impl/CallbackExecuteListener;

+###org/jooq/impl/DefaultTransactionProvider
@3.4.0
+#<init>(Lorg/jooq/ConnectionProvider;)V
+#begin(Lorg/jooq/TransactionContext;)V
+#commit(Lorg/jooq/TransactionContext;)V
+#rollback(Lorg/jooq/TransactionContext;)V
@3.7.0
+#<init>(Lorg/jooq/ConnectionProvider;Z)V
+#nested()Z

+###org/jooq/impl/Internal
@3.10.5
+#createIndex(Ljava/lang/String;Lorg/jooq/Table;[Lorg/jooq/OrderField;Z)Lorg/jooq/Index;
+#createIdentity(Lorg/jooq/Table;Lorg/jooq/TableField;)Lorg/jooq/Identity;
+#createUniqueKey(Lorg/jooq/Table;[Lorg/jooq/TableField;)Lorg/jooq/UniqueKey;
+#createUniqueKey(Lorg/jooq/Table;Ljava/lang/String;[Lorg/jooq/TableField;)Lorg/jooq/UniqueKey;
+#createForeignKey(Lorg/jooq/UniqueKey;Lorg/jooq/Table;[Lorg/jooq/TableField;)Lorg/jooq/ForeignKey;
+#createForeignKey(Lorg/jooq/UniqueKey;Lorg/jooq/Table;Ljava/lang/String;[Lorg/jooq/TableField;)Lorg/jooq/ForeignKey;
@3.11.0
+#createIndex(Lorg/jooq/Name;Lorg/jooq/Table;[Lorg/jooq/OrderField;Z)Lorg/jooq/Index;
+#createPathAlias(Lorg/jooq/Table;Lorg/jooq/ForeignKey;)Lorg/jooq/Name;
@3.11.8
+#createParameter(Ljava/lang/String;Lorg/jooq/DataType;ZZ)Lorg/jooq/Parameter;
+#createParameter(Ljava/lang/String;Lorg/jooq/DataType;ZZLorg/jooq/Converter;)Lorg/jooq/Parameter;
+#createParameter(Ljava/lang/String;Lorg/jooq/DataType;ZZLorg/jooq/Binding;)Lorg/jooq/Parameter;
+#createParameter(Ljava/lang/String;Lorg/jooq/DataType;ZZLorg/jooq/Converter;Lorg/jooq/Binding;)Lorg/jooq/Parameter;
@3.12.0
+#createEmbeddable(Lorg/jooq/Name;Ljava/lang/Class;Lorg/jooq/Table;[Lorg/jooq/TableField;)Lorg/jooq/TableField;
@3.13.0
+#createUniqueKey(Lorg/jooq/Table;Ljava/lang/String;[Lorg/jooq/TableField;Z)Lorg/jooq/UniqueKey;
+#createForeignKey(Lorg/jooq/UniqueKey;Lorg/jooq/Table;Ljava/lang/String;[Lorg/jooq/TableField;Z)Lorg/jooq/ForeignKey;
+#createSequence(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/DataType;)Lorg/jooq/Sequence;
+#createSequence(Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/DataType;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;ZLjava/lang/Number;)Lorg/jooq/Sequence;
+#createCheck(Lorg/jooq/Table;Lorg/jooq/Name;Ljava/lang/String;)Lorg/jooq/Check;
+#createCheck(Lorg/jooq/Table;Lorg/jooq/Name;Ljava/lang/String;Z)Lorg/jooq/Check;
@3.14.0
+#createEmbeddable(Lorg/jooq/Name;Ljava/lang/Class;ZLorg/jooq/Table;[Lorg/jooq/TableField;)Lorg/jooq/TableField;
+#createUniqueKey(Lorg/jooq/Table;Lorg/jooq/Name;[Lorg/jooq/TableField;)Lorg/jooq/UniqueKey;
+#createUniqueKey(Lorg/jooq/Table;Lorg/jooq/Name;[Lorg/jooq/TableField;Z)Lorg/jooq/UniqueKey;
+#createUniqueKey(Lorg/jooq/Table;Lorg/jooq/Name;Lorg/jooq/TableField;Z)Lorg/jooq/UniqueKey;
*#createForeignKey(Lorg/jooq/UniqueKey;Lorg/jooq/Table;[Lorg/jooq/TableField;)Lorg/jooq/ForeignKey;[deprecated]
+#createForeignKey(Lorg/jooq/Table;Lorg/jooq/Name;[Lorg/jooq/TableField;Lorg/jooq/UniqueKey;[Lorg/jooq/TableField;Z)Lorg/jooq/ForeignKey;
+#createForeignKey(Lorg/jooq/Table;Lorg/jooq/Name;Lorg/jooq/TableField;Lorg/jooq/UniqueKey;Lorg/jooq/TableField;Z)Lorg/jooq/ForeignKey;
+#createDomain(Lorg/jooq/Schema;Lorg/jooq/Name;Lorg/jooq/DataType;[Lorg/jooq/Check;)Lorg/jooq/Domain;
*#createIndex(Ljava/lang/String;Lorg/jooq/Table;[Lorg/jooq/OrderField;Z)Lorg/jooq/Index;[deprecated]
*#createUniqueKey(Lorg/jooq/Table;Ljava/lang/String;[Lorg/jooq/TableField;)Lorg/jooq/UniqueKey;[deprecated]
*#createUniqueKey(Lorg/jooq/Table;Ljava/lang/String;[Lorg/jooq/TableField;Z)Lorg/jooq/UniqueKey;[deprecated]
*#createForeignKey(Lorg/jooq/UniqueKey;Lorg/jooq/Table;Ljava/lang/String;[Lorg/jooq/TableField;)Lorg/jooq/ForeignKey;[deprecated]
*#createForeignKey(Lorg/jooq/UniqueKey;Lorg/jooq/Table;Ljava/lang/String;[Lorg/jooq/TableField;Z)Lorg/jooq/ForeignKey;[deprecated]
+#fields(Lorg/jooq/TableField;)[Lorg/jooq/TableField;
@3.14.6
*#fields(Lorg/jooq/TableField;)[Lorg/jooq/TableField;[deprecated]
+#fieldsRow(Lorg/jooq/TableField;)Lorg/jooq/Row;
@3.14.9
+#subscriber(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lorg/reactivestreams/Subscriber;
@3.15.0
+#arrayType(Ljava/lang/Class;)Ljava/lang/Class;
+#result(Lorg/jooq/Record;)Lorg/jooq/Result;
@3.15.10
+#hash(Lorg/jooq/QueryPart;)I
@3.16.0
*#fieldsRow(Lorg/jooq/TableField;)Lorg/jooq/Row;[deprecated]
+#commercial()Z
+#commercial(Ljava/util/function/Supplier;)Z
+#requireCommercial(Ljava/util/function/Supplier;)V
-#hash(Lorg/jooq/QueryPart;)I
@3.16.6
+#hash(Lorg/jooq/QueryPart;)I

+###org/jooq/impl/QOM$AnyValue
@3.16.0
+#$field()Lorg/jooq/Field;
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AnyValue;

+###org/jooq/impl/QOM$Array
@3.16.0
+#$elements()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/impl/QOM$Corr
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Corr;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Corr;

+###org/jooq/impl/QOM$CovarSamp
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CovarSamp;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CovarSamp;

+###org/jooq/impl/QOM$CreateDatabase
@3.16.0
+#$database()Lorg/jooq/Catalog;
+#$ifNotExists()Z
+#$database(Lorg/jooq/Catalog;)Lorg/jooq/impl/QOM$CreateDatabase;
+#$ifNotExists(Z)Lorg/jooq/impl/QOM$CreateDatabase;

+###org/jooq/impl/QOM$CumeDist
@3.16.0

+###org/jooq/impl/QOM$CurrentCatalog
@3.16.0

+###org/jooq/impl/QOM$DateAdd
@3.16.0
+#$date()Lorg/jooq/Field;
+#$interval()Lorg/jooq/Field;
+#$datePart()Lorg/jooq/DatePart;
+#$date(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$DateAdd;
+#$interval(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$DateAdd;
+#$datePart(Lorg/jooq/DatePart;)Lorg/jooq/impl/QOM$DateAdd;

+###org/jooq/impl/QOM$DropDatabase
@3.16.0
+#$database()Lorg/jooq/Catalog;
+#$ifExists()Z
+#$database(Lorg/jooq/Catalog;)Lorg/jooq/impl/QOM$DropDatabase;
+#$ifExists(Z)Lorg/jooq/impl/QOM$DropDatabase;

+###org/jooq/impl/QOM$DropDomain
@3.16.0
+#$domain()Lorg/jooq/Domain;
+#$ifExists()Z
+#$cascade()Lorg/jooq/impl/QOM$Cascade;
+#$domain(Lorg/jooq/Domain;)Lorg/jooq/impl/QOM$DropDomain;
+#$ifExists(Z)Lorg/jooq/impl/QOM$DropDomain;
+#$cascade(Lorg/jooq/impl/QOM$Cascade;)Lorg/jooq/impl/QOM$DropDomain;

+###org/jooq/impl/QOM$FrameUnits
@3.16.0
+#values()[Lorg/jooq/impl/QOM$FrameUnits;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$FrameUnits;

+###org/jooq/impl/QOM$FromFirstOrLast
@3.16.0
+#values()[Lorg/jooq/impl/QOM$FromFirstOrLast;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$FromFirstOrLast;

+###org/jooq/impl/QOM$Gt
@3.16.0
@3.17.0
+#$converse()Lorg/jooq/Condition;
+#$converse()Lorg/jooq/QueryPart;

+###org/jooq/impl/QOM$IdentityRestartOption
@3.16.0
+#values()[Lorg/jooq/impl/QOM$IdentityRestartOption;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$IdentityRestartOption;

+###org/jooq/impl/QOM$IsNotDistinctFrom
@3.16.0

+###org/jooq/impl/QOM$JSONObjectAgg
@3.16.0
+#$entry()Lorg/jooq/JSONEntry;
+#$onNull()Lorg/jooq/impl/QOM$JSONOnNull;
+#$returning()Lorg/jooq/DataType;

+###org/jooq/impl/QOM$Mod
@3.16.0
+#$dividend()Lorg/jooq/Field;
+#$divisor()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Mode
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Ntile
@3.16.0
+#$tiles()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Nullif
@3.16.0
+#$value()Lorg/jooq/Field;
+#$other()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Nullif;
+#$other(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Nullif;

+###org/jooq/impl/QOM$Overlay
@3.16.0
+#$in()Lorg/jooq/Field;
+#$placing()Lorg/jooq/Field;
+#$startIndex()Lorg/jooq/Field;
+#$length()Lorg/jooq/Field;
+#$in(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Overlay;
+#$placing(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Overlay;
+#$startIndex(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Overlay;
+#$length(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Overlay;

+###org/jooq/impl/QOM$PercentRank
@3.16.0

+###org/jooq/impl/QOM$Rand
@3.16.0

+###org/jooq/impl/QOM$Rank
@3.16.0

+###org/jooq/impl/QOM$RegrSlope
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrSlope;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrSlope;

+###org/jooq/impl/QOM$RegrSxx
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrSxx;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrSxx;

+###org/jooq/impl/QOM$RowOverlaps
@3.16.0

+###org/jooq/impl/QOM$RowsFrom
@3.16.0
+#$tables()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/impl/QOM$Space
@3.16.0
+#$count()Lorg/jooq/Field;
+#$count(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Space;

+###org/jooq/impl/QOM$SplitPart
@3.16.0
+#$string()Lorg/jooq/Field;
+#$delimiter()Lorg/jooq/Field;
+#$n()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$SplitPart;
+#$delimiter(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$SplitPart;
+#$n(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$SplitPart;

+###org/jooq/impl/QOM$Tanh
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Tanh;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Tanh;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Tanh;

+###org/jooq/impl/QOM$Tau
@3.16.0

+###org/jooq/impl/QOM$Unique
@3.16.0
+#$query()Lorg/jooq/Select;
+#$query(Lorg/jooq/Select;)Lorg/jooq/impl/QOM$Unique;

+###org/jooq/impl/QOM$Upper
@3.16.0
+#$string()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Upper;

+###org/jooq/impl/QOM$WidthBucket
@3.16.0
+#$field()Lorg/jooq/Field;
+#$low()Lorg/jooq/Field;
+#$high()Lorg/jooq/Field;
+#$buckets()Lorg/jooq/Field;
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$WidthBucket;
+#$low(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$WidthBucket;
+#$high(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$WidthBucket;
+#$buckets(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$WidthBucket;

+###org/jooq/impl/QOM$XMLForest
@3.16.0
+#$fields()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$fields(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$XMLForest;
@3.17.0
+#$fields(Ljava/util/Collection;)Lorg/jooq/impl/QOM$XMLForest;
-#$fields(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$XMLForest;

+###org/jooq/InsertOnConflictWhereStep
@3.10.0
+#where([Lorg/jooq/Condition;)Lorg/jooq/InsertReturningStep;
+#where(Ljava/util/Collection;)Lorg/jooq/InsertReturningStep;
+#where(Lorg/jooq/Field;)Lorg/jooq/InsertReturningStep;
+#where(Lorg/jooq/SQL;)Lorg/jooq/InsertReturningStep;
+#where(Ljava/lang/String;)Lorg/jooq/InsertReturningStep;
+#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/InsertReturningStep;
+#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/InsertReturningStep;
+#whereExists(Lorg/jooq/Select;)Lorg/jooq/InsertReturningStep;
+#whereNotExists(Lorg/jooq/Select;)Lorg/jooq/InsertReturningStep;
@3.11.0
+#where(Lorg/jooq/Condition;)Lorg/jooq/InsertReturningStep;
@3.12.0
+#where(Lorg/jooq/Condition;)Lorg/jooq/InsertOnConflictConditionStep;
+#where([Lorg/jooq/Condition;)Lorg/jooq/InsertOnConflictConditionStep;
+#where(Ljava/util/Collection;)Lorg/jooq/InsertOnConflictConditionStep;
+#where(Lorg/jooq/Field;)Lorg/jooq/InsertOnConflictConditionStep;
+#where(Lorg/jooq/SQL;)Lorg/jooq/InsertOnConflictConditionStep;
+#where(Ljava/lang/String;)Lorg/jooq/InsertOnConflictConditionStep;
+#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/InsertOnConflictConditionStep;
+#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/InsertOnConflictConditionStep;
+#whereExists(Lorg/jooq/Select;)Lorg/jooq/InsertOnConflictConditionStep;
+#whereNotExists(Lorg/jooq/Select;)Lorg/jooq/InsertOnConflictConditionStep;
-#where(Lorg/jooq/Condition;)Lorg/jooq/InsertReturningStep;
-#where([Lorg/jooq/Condition;)Lorg/jooq/InsertReturningStep;
-#where(Ljava/util/Collection;)Lorg/jooq/InsertReturningStep;
-#where(Lorg/jooq/Field;)Lorg/jooq/InsertReturningStep;
-#where(Lorg/jooq/SQL;)Lorg/jooq/InsertReturningStep;
-#where(Ljava/lang/String;)Lorg/jooq/InsertReturningStep;
-#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/InsertReturningStep;
-#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/InsertReturningStep;
-#whereExists(Lorg/jooq/Select;)Lorg/jooq/InsertReturningStep;
-#whereNotExists(Lorg/jooq/Select;)Lorg/jooq/InsertReturningStep;

+###org/jooq/JSONObjectNullStep
@3.14.0
+#nullOnNull()Lorg/jooq/Field;
+#absentOnNull()Lorg/jooq/Field;
@3.15.0
+#nullOnNull()Lorg/jooq/JSONObjectReturningStep;
+#absentOnNull()Lorg/jooq/JSONObjectReturningStep;
-#nullOnNull()Lorg/jooq/Field;
-#absentOnNull()Lorg/jooq/Field;

+###org/jooq/JSONObjectReturningStep
@3.15.0
+#returning(Lorg/jooq/DataType;)Lorg/jooq/Field;

+###org/jooq/migrations/xml/jaxb/MigrationsType
@3.15.0
+#<init>()V
+#getCommits()Ljava/util/List;
+#setCommits(Ljava/util/List;)V
+#withCommits([Lorg/jooq/migrations/xml/jaxb/CommitType;)Lorg/jooq/migrations/xml/jaxb/MigrationsType;
+#withCommits(Ljava/util/Collection;)Lorg/jooq/migrations/xml/jaxb/MigrationsType;
+#withCommits(Ljava/util/List;)Lorg/jooq/migrations/xml/jaxb/MigrationsType;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/jooq/Nullability
@3.10.0
+#values()[Lorg/jooq/Nullability;
+#valueOf(Ljava/lang/String;)Lorg/jooq/Nullability;
+#of(Z)Lorg/jooq/Nullability;
+#nullable()Z

+###org/jooq/ParamMode
@3.9.0
+#values()[Lorg/jooq/ParamMode;
+#valueOf(Ljava/lang/String;)Lorg/jooq/ParamMode;

+###org/jooq/ParamOrVariable
@3.15.0

+###org/jooq/RevokeOnStep
@3.11.0
+#on(Lorg/jooq/Table;)Lorg/jooq/RevokeFromStep;
+#on(Lorg/jooq/Name;)Lorg/jooq/RevokeFromStep;
+#on(Ljava/lang/String;)Lorg/jooq/RevokeFromStep;

+###org/jooq/Role
@3.11.0
+#getName()Ljava/lang/String;
@3.14.0
-#getName()Ljava/lang/String;

+###org/jooq/RowCountQuery
@3.12.0

+###org/jooq/RowId
@3.12.0
+#value()Ljava/lang/Object;

+###org/jooq/SelectCorrelatedSubqueryStep
@3.14.0
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Record;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#compare(Lorg/jooq/Comparator;Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#eq(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#equal(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ne(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#le(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#le(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#lessOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#gt(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterThan(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#ge(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#greaterOrEqual(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#in([Lorg/jooq/Record;)Lorg/jooq/Condition;
+#in(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notIn([Lorg/jooq/Record;)Lorg/jooq/Condition;
+#notIn(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isDistinctFrom(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Record;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNotDistinctFrom(Lorg/jooq/QuantifiedSelect;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Record;)Lorg/jooq/BetweenAndStep;
+#between(Lorg/jooq/Record;Lorg/jooq/Record;)Lorg/jooq/Condition;
+#between(Lorg/jooq/Select;)Lorg/jooq/BetweenAndStep;
+#between(Lorg/jooq/Select;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Record;)Lorg/jooq/BetweenAndStepR;
+#betweenSymmetric(Lorg/jooq/Record;Lorg/jooq/Record;)Lorg/jooq/Condition;
+#betweenSymmetric(Lorg/jooq/Select;)Lorg/jooq/BetweenAndStepR;
+#betweenSymmetric(Lorg/jooq/Select;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Record;)Lorg/jooq/BetweenAndStepR;
+#notBetween(Lorg/jooq/Record;Lorg/jooq/Record;)Lorg/jooq/Condition;
+#notBetween(Lorg/jooq/Select;)Lorg/jooq/BetweenAndStepR;
+#notBetween(Lorg/jooq/Select;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Record;)Lorg/jooq/BetweenAndStepR;
+#notBetweenSymmetric(Lorg/jooq/Record;Lorg/jooq/Record;)Lorg/jooq/Condition;
+#notBetweenSymmetric(Lorg/jooq/Select;)Lorg/jooq/BetweenAndStepR;
+#notBetweenSymmetric(Lorg/jooq/Select;Lorg/jooq/Select;)Lorg/jooq/Condition;
+#isNull()Lorg/jooq/Condition;
+#isNotNull()Lorg/jooq/Condition;

+###org/jooq/SelectDistinctOnStep
@3.5.0
+#on([Lorg/jooq/Field;)Lorg/jooq/SelectIntoStep;
+#on(Ljava/util/Collection;)Lorg/jooq/SelectIntoStep;
+#distinctOn([Lorg/jooq/Field;)Lorg/jooq/SelectIntoStep;
+#distinctOn(Ljava/util/Collection;)Lorg/jooq/SelectIntoStep;
@3.6.0
+#on([Lorg/jooq/SelectField;)Lorg/jooq/SelectIntoStep;
+#distinctOn([Lorg/jooq/SelectField;)Lorg/jooq/SelectIntoStep;
-#on([Lorg/jooq/Field;)Lorg/jooq/SelectIntoStep;
-#distinctOn([Lorg/jooq/Field;)Lorg/jooq/SelectIntoStep;
@3.11.0
+#on([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectIntoStep;
+#distinctOn([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectIntoStep;
-#on([Lorg/jooq/SelectField;)Lorg/jooq/SelectIntoStep;
-#distinctOn([Lorg/jooq/SelectField;)Lorg/jooq/SelectIntoStep;

+###org/jooq/SelectLimitPercentAfterOffsetStep
@3.11.0
@3.12.0
+#percent()Lorg/jooq/SelectWithTiesAfterOffsetStep;

+###org/jooq/SelectLimitPercentStep
@3.11.0
@3.12.0
+#percent()Lorg/jooq/SelectWithTiesStep;

+###org/jooq/SelectQualifyConditionStep
@3.12.0
+#and(Lorg/jooq/Condition;)Lorg/jooq/SelectQualifyConditionStep;
+#and(Lorg/jooq/Field;)Lorg/jooq/SelectQualifyConditionStep;
+#and(Ljava/lang/Boolean;)Lorg/jooq/SelectQualifyConditionStep;[deprecated]
+#and(Lorg/jooq/SQL;)Lorg/jooq/SelectQualifyConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/SelectQualifyConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectQualifyConditionStep;
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectQualifyConditionStep;
+#andNot(Lorg/jooq/Condition;)Lorg/jooq/SelectQualifyConditionStep;
+#andNot(Lorg/jooq/Field;)Lorg/jooq/SelectQualifyConditionStep;
+#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectQualifyConditionStep;[deprecated]
+#andExists(Lorg/jooq/Select;)Lorg/jooq/SelectQualifyConditionStep;
+#andNotExists(Lorg/jooq/Select;)Lorg/jooq/SelectQualifyConditionStep;
+#or(Lorg/jooq/Condition;)Lorg/jooq/SelectQualifyConditionStep;
+#or(Lorg/jooq/Field;)Lorg/jooq/SelectQualifyConditionStep;
+#or(Ljava/lang/Boolean;)Lorg/jooq/SelectQualifyConditionStep;[deprecated]
+#or(Lorg/jooq/SQL;)Lorg/jooq/SelectQualifyConditionStep;
+#or(Ljava/lang/String;)Lorg/jooq/SelectQualifyConditionStep;
+#or(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectQualifyConditionStep;
+#or(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectQualifyConditionStep;
+#orNot(Lorg/jooq/Condition;)Lorg/jooq/SelectQualifyConditionStep;
+#orNot(Lorg/jooq/Field;)Lorg/jooq/SelectQualifyConditionStep;
+#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectQualifyConditionStep;[deprecated]
+#orExists(Lorg/jooq/Select;)Lorg/jooq/SelectQualifyConditionStep;
+#orNotExists(Lorg/jooq/Select;)Lorg/jooq/SelectQualifyConditionStep;
@3.15.0
-#and(Ljava/lang/Boolean;)Lorg/jooq/SelectQualifyConditionStep;[deprecated]
-#andNot(Ljava/lang/Boolean;)Lorg/jooq/SelectQualifyConditionStep;[deprecated]
-#or(Ljava/lang/Boolean;)Lorg/jooq/SelectQualifyConditionStep;[deprecated]
-#orNot(Ljava/lang/Boolean;)Lorg/jooq/SelectQualifyConditionStep;[deprecated]

+###org/jooq/SelectQualifyStep
@3.12.0
+#qualify(Lorg/jooq/Condition;)Lorg/jooq/SelectQualifyConditionStep;
+#qualify([Lorg/jooq/Condition;)Lorg/jooq/SelectQualifyConditionStep;
+#qualify(Ljava/util/Collection;)Lorg/jooq/SelectQualifyConditionStep;
+#qualify(Lorg/jooq/Field;)Lorg/jooq/SelectQualifyConditionStep;
+#qualify(Lorg/jooq/SQL;)Lorg/jooq/SelectQualifyConditionStep;
+#qualify(Ljava/lang/String;)Lorg/jooq/SelectQualifyConditionStep;
+#qualify(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectQualifyConditionStep;
+#qualify(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectQualifyConditionStep;

+###org/jooq/SelectSeekStep8
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep9
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/tools/Longs
@3.12.0
+#tryParse(Ljava/lang/String;)Ljava/lang/Long;

+###org/jooq/TXTFormat
@3.11.0
+#<init>()V
+#maxRows(I)Lorg/jooq/TXTFormat;
+#maxRows()I
+#minColWidth(I)Lorg/jooq/TXTFormat;
+#minColWidth()I
+#maxColWidth(I)Lorg/jooq/TXTFormat;
+#maxColWidth()I
+#horizontalTableBorder(Z)Lorg/jooq/TXTFormat;
+#horizontalTableBorder()Z
+#horizontalHeaderBorder(Z)Lorg/jooq/TXTFormat;
+#horizontalHeaderBorder()Z
+#horizontalCellBorder(Z)Lorg/jooq/TXTFormat;
+#horizontalCellBorder()Z
+#verticalTableBorder(Z)Lorg/jooq/TXTFormat;
+#verticalTableBorder()Z
+#verticalCellBorder(Z)Lorg/jooq/TXTFormat;
+#verticalCellBorder()Z
+#intersectLines(Z)Lorg/jooq/TXTFormat;
+#intersectLines()Z

+###org/jooq/Unwrapper
@3.12.0
+#unwrap(Ljava/sql/Wrapper;Ljava/lang/Class;)Ljava/lang/Object;

+###org/jooq/util/jaxb/tools/XMLAppendable
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/util/jaxb/tools/XMLBuilder
@3.12.0
+#formatting()Lorg/jooq/util/jaxb/tools/XMLBuilder;
+#nonFormatting()Lorg/jooq/util/jaxb/tools/XMLBuilder;
+#append(Lorg/jooq/util/jaxb/tools/XMLAppendable;)Lorg/jooq/util/jaxb/tools/XMLBuilder;
+#append(Ljava/lang/String;Lorg/jooq/util/jaxb/tools/XMLAppendable;)Lorg/jooq/util/jaxb/tools/XMLBuilder;
+#append(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/jooq/util/jaxb/tools/XMLBuilder;
+#append(Ljava/lang/String;I)Lorg/jooq/util/jaxb/tools/XMLBuilder;
+#append(Ljava/lang/String;Z)Lorg/jooq/util/jaxb/tools/XMLBuilder;
+#append(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/util/jaxb/tools/XMLBuilder;
+#append(Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/jooq/util/jaxb/tools/XMLBuilder;
+#append(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/util/jaxb/tools/XMLBuilder;
+#toString()Ljava/lang/String;
+#appendTo(Ljava/lang/Appendable;)V

+###org/jooq/util/xml/jaxb/Catalog
@3.11.0
+#<init>()V
+#getCatalogName()Ljava/lang/String;
+#setCatalogName(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#withCatalogName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Catalog;
+#withComment(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Catalog;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/util/xml/jaxb/CheckConstraint
@3.13.0
+#<init>()V
+#getConstraintCatalog()Ljava/lang/String;
+#setConstraintCatalog(Ljava/lang/String;)V
+#getConstraintSchema()Ljava/lang/String;
+#setConstraintSchema(Ljava/lang/String;)V
+#getConstraintName()Ljava/lang/String;
+#setConstraintName(Ljava/lang/String;)V
+#getCheckClause()Ljava/lang/String;
+#setCheckClause(Ljava/lang/String;)V
+#withConstraintCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/CheckConstraint;
+#withConstraintSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/CheckConstraint;
+#withConstraintName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/CheckConstraint;
+#withCheckClause(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/CheckConstraint;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/jooq/util/xml/jaxb/Column
@3.9.0
+#<init>()V
+#getTableCatalog()Ljava/lang/String;
+#setTableCatalog(Ljava/lang/String;)V
+#getTableSchema()Ljava/lang/String;
+#setTableSchema(Ljava/lang/String;)V
+#getTableName()Ljava/lang/String;
+#setTableName(Ljava/lang/String;)V
+#getColumnName()Ljava/lang/String;
+#setColumnName(Ljava/lang/String;)V
+#getDataType()Ljava/lang/String;
+#setDataType(Ljava/lang/String;)V
+#getCharacterMaximumLength()Ljava/lang/Integer;
+#setCharacterMaximumLength(Ljava/lang/Integer;)V
+#getNumericPrecision()Ljava/lang/Integer;
+#setNumericPrecision(Ljava/lang/Integer;)V
+#getNumericScale()Ljava/lang/Integer;
+#setNumericScale(Ljava/lang/Integer;)V
+#getOrdinalPosition()Ljava/lang/Integer;
+#setOrdinalPosition(Ljava/lang/Integer;)V
+#getIdentityGeneration()Ljava/lang/String;
+#setIdentityGeneration(Ljava/lang/String;)V
+#isIsNullable()Ljava/lang/Boolean;
+#setIsNullable(Ljava/lang/Boolean;)V
+#getColumnDefault()Ljava/lang/String;
+#setColumnDefault(Ljava/lang/String;)V
+#withTableCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withTableSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withTableName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withColumnName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withDataType(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withCharacterMaximumLength(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Column;
+#withNumericPrecision(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Column;
+#withNumericScale(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Column;
+#withOrdinalPosition(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Column;
+#withIdentityGeneration(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withIsNullable(Ljava/lang/Boolean;)Lorg/jooq/util/xml/jaxb/Column;
+#withColumnDefault(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
@3.11.0
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#withComment(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#getUdtCatalog()Ljava/lang/String;
+#setUdtCatalog(Ljava/lang/String;)V
+#getUdtSchema()Ljava/lang/String;
+#setUdtSchema(Ljava/lang/String;)V
+#getUdtName()Ljava/lang/String;
+#setUdtName(Ljava/lang/String;)V
+#withUdtCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withUdtSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withUdtName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
@3.14.0
+#getDomainCatalog()Ljava/lang/String;
+#setDomainCatalog(Ljava/lang/String;)V
+#getDomainSchema()Ljava/lang/String;
+#setDomainSchema(Ljava/lang/String;)V
+#getDomainName()Ljava/lang/String;
+#setDomainName(Ljava/lang/String;)V
+#withDomainCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withDomainSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withDomainName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
@3.16.0
+#isReadonly()Ljava/lang/Boolean;
+#setReadonly(Ljava/lang/Boolean;)V
+#isIsGenerated()Ljava/lang/Boolean;
+#setIsGenerated(Ljava/lang/Boolean;)V
+#getGenerationExpression()Ljava/lang/String;
+#setGenerationExpression(Ljava/lang/String;)V
+#getGenerationOption()Ljava/lang/String;
+#setGenerationOption(Ljava/lang/String;)V
+#withReadonly(Ljava/lang/Boolean;)Lorg/jooq/util/xml/jaxb/Column;
+#withIsGenerated(Ljava/lang/Boolean;)Lorg/jooq/util/xml/jaxb/Column;
+#withGenerationExpression(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;
+#withGenerationOption(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Column;

+###org/jooq/util/xml/jaxb/ObjectFactory
@3.9.0
+#<init>()V
+#createInformationSchema()Lorg/jooq/util/xml/jaxb/InformationSchema;
+#createTable()Lorg/jooq/util/xml/jaxb/Table;
+#createReferentialConstraint()Lorg/jooq/util/xml/jaxb/ReferentialConstraint;
+#createSchema()Lorg/jooq/util/xml/jaxb/Schema;
+#createSequence()Lorg/jooq/util/xml/jaxb/Sequence;
+#createKeyColumnUsage()Lorg/jooq/util/xml/jaxb/KeyColumnUsage;
+#createColumn()Lorg/jooq/util/xml/jaxb/Column;
+#createTableConstraint()Lorg/jooq/util/xml/jaxb/TableConstraint;
@3.10.0
+#createIndex()Lorg/jooq/util/xml/jaxb/Index;
+#createIndexColumnUsage()Lorg/jooq/util/xml/jaxb/IndexColumnUsage;
+#createRoutine()Lorg/jooq/util/xml/jaxb/Routine;
+#createParameter()Lorg/jooq/util/xml/jaxb/Parameter;
@3.11.0
+#createCatalog()Lorg/jooq/util/xml/jaxb/Catalog;
@3.12.0
+#createElementType()Lorg/jooq/util/xml/jaxb/ElementType;
@3.13.0
+#createView()Lorg/jooq/util/xml/jaxb/View;
+#createCheckConstraint()Lorg/jooq/util/xml/jaxb/CheckConstraint;
@3.14.0
+#createDomainConstraint()Lorg/jooq/util/xml/jaxb/DomainConstraint;
+#createDomain()Lorg/jooq/util/xml/jaxb/Domain;

+###org/jooq/util/xml/jaxb/Routine
@3.10.0
+#<init>()V
+#getSpecificCatalog()Ljava/lang/String;
+#setSpecificCatalog(Ljava/lang/String;)V
+#getSpecificSchema()Ljava/lang/String;
+#setSpecificSchema(Ljava/lang/String;)V
+#getSpecificPackage()Ljava/lang/String;
+#setSpecificPackage(Ljava/lang/String;)V
+#getSpecificName()Ljava/lang/String;
+#setSpecificName(Ljava/lang/String;)V
+#getRoutineCatalog()Ljava/lang/String;
+#setRoutineCatalog(Ljava/lang/String;)V
+#getRoutineSchema()Ljava/lang/String;
+#setRoutineSchema(Ljava/lang/String;)V
+#getRoutinePackage()Ljava/lang/String;
+#setRoutinePackage(Ljava/lang/String;)V
+#getRoutineName()Ljava/lang/String;
+#setRoutineName(Ljava/lang/String;)V
+#getRoutineType()Lorg/jooq/util/xml/jaxb/RoutineType;
+#setRoutineType(Lorg/jooq/util/xml/jaxb/RoutineType;)V
+#getDataType()Ljava/lang/String;
+#setDataType(Ljava/lang/String;)V
+#getCharacterMaximumLength()Ljava/lang/Integer;
+#setCharacterMaximumLength(Ljava/lang/Integer;)V
+#getNumericPrecision()Ljava/lang/Integer;
+#setNumericPrecision(Ljava/lang/Integer;)V
+#getNumericScale()Ljava/lang/Integer;
+#setNumericScale(Ljava/lang/Integer;)V
+#withSpecificCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withSpecificSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withSpecificPackage(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withSpecificName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withRoutineCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withRoutineSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withRoutinePackage(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withRoutineName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withRoutineType(Lorg/jooq/util/xml/jaxb/RoutineType;)Lorg/jooq/util/xml/jaxb/Routine;
+#withDataType(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withCharacterMaximumLength(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Routine;
+#withNumericPrecision(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Routine;
+#withNumericScale(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Routine;
@3.11.0
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#withComment(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#getUdtCatalog()Ljava/lang/String;
+#setUdtCatalog(Ljava/lang/String;)V
+#getUdtSchema()Ljava/lang/String;
+#setUdtSchema(Ljava/lang/String;)V
+#getUdtName()Ljava/lang/String;
+#setUdtName(Ljava/lang/String;)V
+#withUdtCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withUdtSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#withUdtName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Routine;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/util/xml/jaxb/TableType
@3.13.0
+#values()[Lorg/jooq/util/xml/jaxb/TableType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableType;
+#toString()Ljava/lang/String;

+###org/jooq/WithAsStep18
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep19
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep6
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep7
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/XMLFormat$RecordFormat
@3.10.0
+#values()[Lorg/jooq/XMLFormat$RecordFormat;
+#valueOf(Ljava/lang/String;)Lorg/jooq/XMLFormat$RecordFormat;

+###org/jooq/XMLFormat
@3.10.0
+#<init>()V
+#xmlns(Z)Lorg/jooq/XMLFormat;
+#xmlns()Z
+#format(Z)Lorg/jooq/XMLFormat;
+#format()Z
+#newline(Ljava/lang/String;)Lorg/jooq/XMLFormat;
+#newline()Ljava/lang/String;
+#indent(I)Lorg/jooq/XMLFormat;
+#indent()I
+#indentString(I)Ljava/lang/String;
+#header(Z)Lorg/jooq/XMLFormat;
+#header()Z
+#recordFormat(Lorg/jooq/XMLFormat$RecordFormat;)Lorg/jooq/XMLFormat;
+#recordFormat()Lorg/jooq/XMLFormat$RecordFormat;
@3.14.0
+#quoteNested(Z)Lorg/jooq/XMLFormat;
+#quoteNested()Z
@3.15.0
+#globalIndent(I)Lorg/jooq/XMLFormat;
+#globalIndent()I
@3.17.0
+#mutable()Z
+#mutable(Z)Lorg/jooq/XMLFormat;

+###org/jooq/XMLQueryPassingStep
@3.14.0
+#passing(Lorg/jooq/XML;)Lorg/jooq/Field;
+#passing(Lorg/jooq/Field;)Lorg/jooq/Field;
+#passingByRef(Lorg/jooq/XML;)Lorg/jooq/Field;
+#passingByRef(Lorg/jooq/Field;)Lorg/jooq/Field;

+###org/jooq/AggregateFilterStep
@3.6.0
+#filterWhere([Lorg/jooq/Condition;)Lorg/jooq/WindowBeforeOverStep;
+#filterWhere(Ljava/util/Collection;)Lorg/jooq/WindowBeforeOverStep;
+#filterWhere(Lorg/jooq/Field;)Lorg/jooq/WindowBeforeOverStep;
+#filterWhere(Ljava/lang/String;)Lorg/jooq/WindowBeforeOverStep;
+#filterWhere(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/WindowBeforeOverStep;
+#filterWhere(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/WindowBeforeOverStep;
@3.7.0
+#filterWhere(Ljava/lang/Boolean;)Lorg/jooq/WindowBeforeOverStep;
+#filterWhere(Lorg/jooq/SQL;)Lorg/jooq/WindowBeforeOverStep;
@3.7.2
*#filterWhere(Ljava/lang/Boolean;)Lorg/jooq/WindowBeforeOverStep;[deprecated]
@3.11.0
+#filterWhere(Lorg/jooq/Condition;)Lorg/jooq/WindowBeforeOverStep;
@3.15.0
-#filterWhere(Ljava/lang/Boolean;)Lorg/jooq/WindowBeforeOverStep;[deprecated]

+###org/jooq/AlterDomainStep
@3.14.0
+#add(Lorg/jooq/Constraint;)Lorg/jooq/AlterDomainFinalStep;
+#dropConstraint(Ljava/lang/String;)Lorg/jooq/AlterDomainDropConstraintCascadeStep;
+#dropConstraint(Lorg/jooq/Name;)Lorg/jooq/AlterDomainDropConstraintCascadeStep;
+#dropConstraint(Lorg/jooq/Constraint;)Lorg/jooq/AlterDomainDropConstraintCascadeStep;
+#dropConstraintIfExists(Ljava/lang/String;)Lorg/jooq/AlterDomainDropConstraintCascadeStep;
+#dropConstraintIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterDomainDropConstraintCascadeStep;
+#dropConstraintIfExists(Lorg/jooq/Constraint;)Lorg/jooq/AlterDomainDropConstraintCascadeStep;
+#renameTo(Ljava/lang/String;)Lorg/jooq/AlterDomainFinalStep;
+#renameTo(Lorg/jooq/Name;)Lorg/jooq/AlterDomainFinalStep;
+#renameTo(Lorg/jooq/Domain;)Lorg/jooq/AlterDomainFinalStep;
+#renameConstraint(Ljava/lang/String;)Lorg/jooq/AlterDomainRenameConstraintStep;
+#renameConstraint(Lorg/jooq/Name;)Lorg/jooq/AlterDomainRenameConstraintStep;
+#renameConstraint(Lorg/jooq/Constraint;)Lorg/jooq/AlterDomainRenameConstraintStep;
+#renameConstraintIfExists(Ljava/lang/String;)Lorg/jooq/AlterDomainRenameConstraintStep;
+#renameConstraintIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterDomainRenameConstraintStep;
+#renameConstraintIfExists(Lorg/jooq/Constraint;)Lorg/jooq/AlterDomainRenameConstraintStep;
+#setDefault(Ljava/lang/Object;)Lorg/jooq/AlterDomainFinalStep;
+#setDefault(Lorg/jooq/Field;)Lorg/jooq/AlterDomainFinalStep;
+#dropDefault()Lorg/jooq/AlterDomainFinalStep;
+#setNotNull()Lorg/jooq/AlterDomainFinalStep;
+#dropNotNull()Lorg/jooq/AlterDomainFinalStep;

+###org/jooq/AlterIndexFinalStep
@3.9.0

+###org/jooq/AlterTableAddStep
@3.13.0
+#first()Lorg/jooq/AlterTableFinalStep;
+#before(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
+#before(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
+#before(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
+#after(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
+#after(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
+#after(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;

+###org/jooq/AlterTableAlterConstraintStep
@3.15.0
+#enforced()Lorg/jooq/AlterTableFinalStep;
+#notEnforced()Lorg/jooq/AlterTableFinalStep;

+###org/jooq/AlterTableUsingIndexStep
@3.9.0

+###org/jooq/BatchedRunnable
@3.14.0
+#run(Lorg/jooq/Configuration;)V

+###org/jooq/Binding
@3.5.0
+#converter()Lorg/jooq/Converter;
+#sql(Lorg/jooq/BindingSQLContext;)V
+#register(Lorg/jooq/BindingRegisterContext;)V
+#set(Lorg/jooq/BindingSetStatementContext;)V
+#set(Lorg/jooq/BindingSetSQLOutputContext;)V
+#get(Lorg/jooq/BindingGetResultSetContext;)V
+#get(Lorg/jooq/BindingGetStatementContext;)V
+#get(Lorg/jooq/BindingGetSQLInputContext;)V
@3.10.0
+#of(Lorg/jooq/Converter;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/jooq/Binding;
+#of(Lorg/jooq/Converter;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/jooq/Binding;
+#of(Lorg/jooq/Converter;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/jooq/Binding;

+###org/jooq/BindingGetResultSetContext
@3.5.0
+#resultSet()Ljava/sql/ResultSet;
+#index()I
+#value(Ljava/lang/Object;)V
+#convert(Lorg/jooq/Converter;)Lorg/jooq/BindingGetResultSetContext;
@3.15.0
+#field()Lorg/jooq/Field;

+###org/jooq/CheckReturnValue
@3.15.0

+###org/jooq/conf/MappedCatalog
@3.13.0
+#<init>()V
+#getInput()Ljava/lang/String;
+#setInput(Ljava/lang/String;)V
+#getInputExpression()Ljava/util/regex/Pattern;
+#setInputExpression(Ljava/util/regex/Pattern;)V
+#getOutput()Ljava/lang/String;
+#setOutput(Ljava/lang/String;)V
+#getSchemata()Ljava/util/List;
+#setSchemata(Ljava/util/List;)V
+#withInput(Ljava/lang/String;)Lorg/jooq/conf/MappedCatalog;
+#withInputExpression(Ljava/util/regex/Pattern;)Lorg/jooq/conf/MappedCatalog;
+#withOutput(Ljava/lang/String;)Lorg/jooq/conf/MappedCatalog;
+#withSchemata([Lorg/jooq/conf/MappedSchema;)Lorg/jooq/conf/MappedCatalog;
+#withSchemata(Ljava/util/Collection;)Lorg/jooq/conf/MappedCatalog;
+#withSchemata(Ljava/util/List;)Lorg/jooq/conf/MappedCatalog;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Ljava/lang/Object;

+###org/jooq/conf/MigrationSchema
@3.15.0
+#<init>()V
+#getCatalog()Ljava/lang/String;
+#setCatalog(Ljava/lang/String;)V
+#getSchema()Ljava/lang/String;
+#setSchema(Ljava/lang/String;)V
+#withCatalog(Ljava/lang/String;)Lorg/jooq/conf/MigrationSchema;
+#withSchema(Ljava/lang/String;)Lorg/jooq/conf/MigrationSchema;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Ljava/lang/Object;

+###org/jooq/conf/MigrationType
@3.15.0
+#<init>()V
+#getSchemata()Ljava/util/List;
+#setSchemata(Ljava/util/List;)V
+#withSchemata([Lorg/jooq/conf/MigrationSchema;)Lorg/jooq/conf/MigrationType;
+#withSchemata(Ljava/util/Collection;)Lorg/jooq/conf/MigrationType;
+#withSchemata(Ljava/util/List;)Lorg/jooq/conf/MigrationType;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Ljava/lang/Object;

+###org/jooq/conf/NestedCollectionEmulation
@3.15.0
+#values()[Lorg/jooq/conf/NestedCollectionEmulation;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/NestedCollectionEmulation;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/NestedCollectionEmulation;

+###org/jooq/conf/ParseUnsupportedSyntax
@3.11.0
+#values()[Lorg/jooq/conf/ParseUnsupportedSyntax;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/ParseUnsupportedSyntax;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/ParseUnsupportedSyntax;

+###org/jooq/ConstraintForeignKeyReferencesStep1
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep10
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep11
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep19
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/Converters$UnknownType
@3.15.3

+###org/jooq/Converters
@3.5.0
+#of()Lorg/jooq/Converter;
+#of(Lorg/jooq/Converter;)Lorg/jooq/Converter;
+#of(Lorg/jooq/Converter;Lorg/jooq/Converter;)Lorg/jooq/Converter;
+#of(Lorg/jooq/Converter;Lorg/jooq/Converter;Lorg/jooq/Converter;)Lorg/jooq/Converter;
+#of(Lorg/jooq/Converter;Lorg/jooq/Converter;Lorg/jooq/Converter;Lorg/jooq/Converter;)Lorg/jooq/Converter;
+#from(Ljava/lang/Object;)Ljava/lang/Object;
+#to(Ljava/lang/Object;)Ljava/lang/Object;
+#fromType()Ljava/lang/Class;
+#toType()Ljava/lang/Class;
@3.6.0
+#identity(Ljava/lang/Class;)Lorg/jooq/Converter;
+#inverse(Lorg/jooq/Converter;)Lorg/jooq/Converter;
+#toString()Ljava/lang/String;
@3.14.0
*#of()Lorg/jooq/Converter;[deprecated]
*#of(Lorg/jooq/Converter;)Lorg/jooq/Converter;[deprecated]
+#forArrays(Lorg/jooq/Converter;)Lorg/jooq/Converter;
-#fromType()Ljava/lang/Class;
-#toType()Ljava/lang/Class;
@3.15.9
+#forArrayComponents(Lorg/jooq/Converter;)Lorg/jooq/Converter;
@3.16.0
-#forArrayComponents(Lorg/jooq/Converter;)Lorg/jooq/Converter;
@3.16.5
+#forArrayComponents(Lorg/jooq/Converter;)Lorg/jooq/Converter;

+###org/jooq/CreateTableCommentStep
@3.11.0
+#comment(Ljava/lang/String;)Lorg/jooq/CreateTableStorageStep;
+#comment(Lorg/jooq/Comment;)Lorg/jooq/CreateTableStorageStep;

+###org/jooq/CreateTableConstraintStep
@3.8.0
+#constraint(Lorg/jooq/Constraint;)Lorg/jooq/CreateTableConstraintStep;
+#constraints([Lorg/jooq/Constraint;)Lorg/jooq/CreateTableConstraintStep;
+#constraints(Ljava/util/Collection;)Lorg/jooq/CreateTableConstraintStep;
@3.15.0
+#primaryKey([Ljava/lang/String;)Lorg/jooq/CreateTableConstraintStep;
+#primaryKey([Lorg/jooq/Name;)Lorg/jooq/CreateTableConstraintStep;
+#primaryKey([Lorg/jooq/Field;)Lorg/jooq/CreateTableConstraintStep;
+#primaryKey(Ljava/util/Collection;)Lorg/jooq/CreateTableConstraintStep;
+#unique([Ljava/lang/String;)Lorg/jooq/CreateTableConstraintStep;
+#unique([Lorg/jooq/Name;)Lorg/jooq/CreateTableConstraintStep;
+#unique([Lorg/jooq/Field;)Lorg/jooq/CreateTableConstraintStep;
+#unique(Ljava/util/Collection;)Lorg/jooq/CreateTableConstraintStep;
+#check(Lorg/jooq/Condition;)Lorg/jooq/CreateTableConstraintStep;
@3.17.0
-###org/jooq/CreateTableConstraintStep

+###org/jooq/DerivedColumnList1
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList10
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList18
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList19
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DiffCLI$Args
@3.13.0
+#<init>()V

+###org/jooq/DiffCLI
@3.13.0
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/jooq/DropTypeFinalStep
@3.12.0

+###org/jooq/DropTypeStep
@3.12.0
+#cascade()Lorg/jooq/DropTypeFinalStep;
+#restrict()Lorg/jooq/DropTypeFinalStep;

+###org/jooq/exception/ExceptionTools
@3.11.0
+#getCause(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;
@3.12.0
+#sneakyThrow(Ljava/lang/Throwable;)V

+###org/jooq/FilePattern$Sort
@3.13.0
+#values()[Lorg/jooq/FilePattern$Sort;
+#valueOf(Ljava/lang/String;)Lorg/jooq/FilePattern$Sort;
+#of(Ljava/lang/String;)Lorg/jooq/FilePattern$Sort;

+###org/jooq/Function16
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function3
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function4
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/impl/ClobBinding
@3.6.0
+#<init>()V
+#converter()Lorg/jooq/Converter;
+#sql(Lorg/jooq/BindingSQLContext;)V
+#register(Lorg/jooq/BindingRegisterContext;)V
+#set(Lorg/jooq/BindingSetStatementContext;)V
+#set(Lorg/jooq/BindingSetSQLOutputContext;)V
+#get(Lorg/jooq/BindingGetResultSetContext;)V
+#get(Lorg/jooq/BindingGetStatementContext;)V
+#get(Lorg/jooq/BindingGetSQLInputContext;)V

+###org/jooq/impl/DefaultCommitProvider
@3.15.0
+#<init>(Lorg/jooq/Configuration;Lorg/jooq/migrations/xml/jaxb/MigrationsType;)V
+#provide()Lorg/jooq/Commits;

+###org/jooq/impl/DefaultConverterProvider
@3.6.0
+#<init>()V
+#provide(Ljava/lang/Class;Ljava/lang/Class;)Lorg/jooq/Converter;
+#add(Lorg/jooq/Converter;)V
+#toString()Ljava/lang/String;
@3.9.0
-#add(Lorg/jooq/Converter;)V
-#toString()Ljava/lang/String;

+###org/jooq/impl/DefaultRecordListener
@3.2.0-alpha-01
+#<init>()V
+#storeStart(Lorg/jooq/RecordContext;)V
+#storeEnd(Lorg/jooq/RecordContext;)V
+#insertStart(Lorg/jooq/RecordContext;)V
+#insertEnd(Lorg/jooq/RecordContext;)V
+#updateStart(Lorg/jooq/RecordContext;)V
+#updateEnd(Lorg/jooq/RecordContext;)V
+#deleteStart(Lorg/jooq/RecordContext;)V
+#deleteEnd(Lorg/jooq/RecordContext;)V
+#loadStart(Lorg/jooq/RecordContext;)V
+#loadEnd(Lorg/jooq/RecordContext;)V
+#refreshStart(Lorg/jooq/RecordContext;)V
+#refreshEnd(Lorg/jooq/RecordContext;)V
@3.3.0
+#exception(Lorg/jooq/RecordContext;)V
@3.14.0
+#mergeStart(Lorg/jooq/RecordContext;)V
+#mergeEnd(Lorg/jooq/RecordContext;)V
@3.17.0
-#storeStart(Lorg/jooq/RecordContext;)V
-#storeEnd(Lorg/jooq/RecordContext;)V
-#insertStart(Lorg/jooq/RecordContext;)V
-#insertEnd(Lorg/jooq/RecordContext;)V
-#updateStart(Lorg/jooq/RecordContext;)V
-#updateEnd(Lorg/jooq/RecordContext;)V
-#mergeStart(Lorg/jooq/RecordContext;)V
-#mergeEnd(Lorg/jooq/RecordContext;)V
-#deleteStart(Lorg/jooq/RecordContext;)V
-#deleteEnd(Lorg/jooq/RecordContext;)V
-#loadStart(Lorg/jooq/RecordContext;)V
-#loadEnd(Lorg/jooq/RecordContext;)V
-#refreshStart(Lorg/jooq/RecordContext;)V
-#refreshEnd(Lorg/jooq/RecordContext;)V
-#exception(Lorg/jooq/RecordContext;)V

+###org/jooq/impl/DefaultRecordListenerProvider
@3.2.0-alpha-01
+#providers([Lorg/jooq/RecordListener;)[Lorg/jooq/RecordListenerProvider;
+#<init>(Lorg/jooq/RecordListener;)V
+#provide()Lorg/jooq/RecordListener;
+#toString()Ljava/lang/String;

+###org/jooq/impl/DefaultRecordMapper
@3.1.0
+#<init>(Lorg/jooq/RecordType;Ljava/lang/Class;)V
+#map(Lorg/jooq/Record;)Ljava/lang/Object;
@3.11.4
+#<init>(Lorg/jooq/RecordType;Ljava/lang/Class;Lorg/jooq/Configuration;)V
@3.15.0
+#toString()Ljava/lang/String;

+###org/jooq/impl/DelegatingConverter
@3.10.0
+#<init>(Lorg/jooq/Converter;)V
+#from(Ljava/lang/Object;)Ljava/lang/Object;
+#to(Ljava/lang/Object;)Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###org/jooq/impl/LazySupplier
@3.14.0
+#get()Ljava/lang/Object;
@3.15.0
-#get()Ljava/lang/Object;

+###org/jooq/impl/Migrations
@3.15.0
+#<init>()V
+#commits(Lorg/jooq/Configuration;)Lorg/jooq/Commits;
+#file(Ljava/lang/String;Ljava/lang/String;Lorg/jooq/ContentType;)Lorg/jooq/File;

+###org/jooq/impl/NClobBinding
@3.15.0
+#<init>()V
+#converter()Lorg/jooq/Converter;
+#sql(Lorg/jooq/BindingSQLContext;)V
+#register(Lorg/jooq/BindingRegisterContext;)V
+#set(Lorg/jooq/BindingSetStatementContext;)V
+#set(Lorg/jooq/BindingSetSQLOutputContext;)V
+#get(Lorg/jooq/BindingGetResultSetContext;)V
+#get(Lorg/jooq/BindingGetStatementContext;)V
+#get(Lorg/jooq/BindingGetSQLInputContext;)V

+###org/jooq/impl/ParserException
@3.10.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/jooq/exception/SQLStateSubclass;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/jooq/exception/SQLStateSubclass;Ljava/lang/Throwable;)V
@3.11.0
+#position()I
+#position(I)Lorg/jooq/impl/ParserException;
+#line()I
+#line(I)Lorg/jooq/impl/ParserException;
+#column()I
+#column(I)Lorg/jooq/impl/ParserException;
+#sql()Ljava/lang/String;

+###org/jooq/impl/QOM$AlterSchema
@3.16.0
+#$schema()Lorg/jooq/Schema;
+#$ifExists()Z
+#$renameTo()Lorg/jooq/Schema;
+#$schema(Lorg/jooq/Schema;)Lorg/jooq/impl/QOM$AlterSchema;
+#$ifExists(Z)Lorg/jooq/impl/QOM$AlterSchema;
+#$renameTo(Lorg/jooq/Schema;)Lorg/jooq/impl/QOM$AlterSchema;

+###org/jooq/impl/QOM$AlterSequence
@3.16.0
+#$sequence()Lorg/jooq/Sequence;
+#$ifExists()Z
+#$renameTo()Lorg/jooq/Sequence;
+#$restart()Z
+#$restartWith()Lorg/jooq/Field;
+#$startWith()Lorg/jooq/Field;
+#$incrementBy()Lorg/jooq/Field;
+#$minvalue()Lorg/jooq/Field;
+#$noMinvalue()Z
+#$maxvalue()Lorg/jooq/Field;
+#$noMaxvalue()Z
+#$cycle()Lorg/jooq/impl/QOM$CycleOption;
+#$cache()Lorg/jooq/Field;
+#$noCache()Z
+#$sequence(Lorg/jooq/Sequence;)Lorg/jooq/impl/QOM$AlterSequence;
+#$ifExists(Z)Lorg/jooq/impl/QOM$AlterSequence;
+#$renameTo(Lorg/jooq/Sequence;)Lorg/jooq/impl/QOM$AlterSequence;
+#$restart(Z)Lorg/jooq/impl/QOM$AlterSequence;
+#$restartWith(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AlterSequence;
+#$startWith(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AlterSequence;
+#$incrementBy(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AlterSequence;
+#$minvalue(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AlterSequence;
+#$noMinvalue(Z)Lorg/jooq/impl/QOM$AlterSequence;
+#$maxvalue(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AlterSequence;
+#$noMaxvalue(Z)Lorg/jooq/impl/QOM$AlterSequence;
+#$cycle(Lorg/jooq/impl/QOM$CycleOption;)Lorg/jooq/impl/QOM$AlterSequence;
+#$cache(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AlterSequence;
+#$noCache(Z)Lorg/jooq/impl/QOM$AlterSequence;

+###org/jooq/impl/QOM$ArrayQuery
@3.16.0
+#$select()Lorg/jooq/Select;

+###org/jooq/impl/QOM$Ascii
@3.16.0
+#$string()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Ascii;

+###org/jooq/impl/QOM$BitXNor
@3.16.0

+###org/jooq/impl/QOM$BitXor
@3.16.0

+###org/jooq/impl/QOM$CharLength
@3.16.0
+#$string()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CharLength;

+###org/jooq/impl/QOM$Check
@3.16.0
+#$condition()Lorg/jooq/Condition;

+###org/jooq/impl/QOM$CompareCondition
@3.16.0

+###org/jooq/impl/QOM$Concat
@3.16.0

+###org/jooq/impl/QOM$CreateDomain
@3.16.0
+#$domain()Lorg/jooq/Domain;
+#$ifNotExists()Z
+#$dataType()Lorg/jooq/DataType;
+#$default_()Lorg/jooq/Field;
+#$constraints()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$domain(Lorg/jooq/Domain;)Lorg/jooq/impl/QOM$CreateDomain;
+#$ifNotExists(Z)Lorg/jooq/impl/QOM$CreateDomain;
+#$dataType(Lorg/jooq/DataType;)Lorg/jooq/impl/QOM$CreateDomain;
+#$default_(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CreateDomain;
+#$constraints(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$CreateDomain;
@3.17.0
+#$constraints(Ljava/util/Collection;)Lorg/jooq/impl/QOM$CreateDomain;
-#$constraints(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$CreateDomain;

+###org/jooq/impl/QOM$Div
@3.16.0

+###org/jooq/impl/QOM$DocumentOrContent
@3.16.0
+#values()[Lorg/jooq/impl/QOM$DocumentOrContent;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$DocumentOrContent;

+###org/jooq/impl/QOM$IsNotDocument
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$JSONOnNull
@3.16.0
+#values()[Lorg/jooq/impl/QOM$JSONOnNull;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$JSONOnNull;

+###org/jooq/impl/QOM$Like
@3.16.0
+#$value()Lorg/jooq/Field;
+#$pattern()Lorg/jooq/Field;
+#$escape()Ljava/lang/Character;

+###org/jooq/impl/QOM$Materialized
@3.16.0
+#values()[Lorg/jooq/impl/QOM$Materialized;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$Materialized;

+###org/jooq/impl/QOM$Multiset
@3.16.0
+#$select()Lorg/jooq/Select;
@3.17.0
+#$table()Lorg/jooq/TableLike;
-#$select()Lorg/jooq/Select;

+###org/jooq/impl/QOM$NotLike
@3.16.0
+#$value()Lorg/jooq/Field;
+#$pattern()Lorg/jooq/Field;
+#$escape()Ljava/lang/Character;

+###org/jooq/impl/QOM$NullStatement
@3.16.0

+###org/jooq/impl/QOM$Pi
@3.16.0

+###org/jooq/impl/QOM$RegrR2
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrR2;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrR2;

+###org/jooq/impl/QOM$Reverse
@3.16.0
+#$string()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Reverse;

+###org/jooq/impl/QOM$RowNumber
@3.16.0

+###org/jooq/impl/QOM$SetCatalog
@3.16.0
+#$catalog()Lorg/jooq/Catalog;
+#$catalog(Lorg/jooq/Catalog;)Lorg/jooq/impl/QOM$SetCatalog;

+###org/jooq/impl/QOM$Sinh
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sinh;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sinh;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sinh;

+###org/jooq/impl/QOM$StddevSamp
@3.16.0
+#$field()Lorg/jooq/Field;
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$StddevSamp;

+###org/jooq/impl/QOM$Tan
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Tan;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Tan;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Tan;

+###org/jooq/impl/QOM$Translate
@3.16.0
+#$string()Lorg/jooq/Field;
+#$from()Lorg/jooq/Field;
+#$to()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Translate;
+#$from(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Translate;
+#$to(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Translate;

+###org/jooq/impl/QOM$XMLElement
@3.16.0
+#$elementName()Lorg/jooq/Name;
+#$attributes()Lorg/jooq/XMLAttributes;
+#$content()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/impl/QOM$XMLExists
@3.16.0
+#$xpath()Lorg/jooq/Field;
+#$passing()Lorg/jooq/Field;
+#$passingMechanism()Lorg/jooq/impl/QOM$XMLPassingMechanism;

+###org/jooq/JSON
@3.12.0
+#valueOf(Ljava/lang/String;)Lorg/jooq/JSON;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.12.2
+#data()Ljava/lang/String;
@3.14.0
+#json(Ljava/lang/String;)Lorg/jooq/JSON;
@3.15.0
+#jsonOrNull(Ljava/lang/String;)Lorg/jooq/JSON;

+###org/jooq/JSONArrayAggNullStep
@3.14.0
+#nullOnNull()Lorg/jooq/AggregateFilterStep;
+#absentOnNull()Lorg/jooq/AggregateFilterStep;
@3.15.0
+#nullOnNull()Lorg/jooq/JSONArrayAggReturningStep;
+#absentOnNull()Lorg/jooq/JSONArrayAggReturningStep;
-#nullOnNull()Lorg/jooq/AggregateFilterStep;
-#absentOnNull()Lorg/jooq/AggregateFilterStep;

+###org/jooq/JSONExistsOnStep
@3.14.0

+###org/jooq/Keyword
@3.2.0-alpha-01

+###org/jooq/LanguageContext
@3.15.0
+#values()[Lorg/jooq/LanguageContext;
+#valueOf(Ljava/lang/String;)Lorg/jooq/LanguageContext;

+###org/jooq/LoaderRowsStep
@3.7.0
+#fields([Lorg/jooq/Field;)Lorg/jooq/LoaderListenerStep;
+#fields(Ljava/util/Collection;)Lorg/jooq/LoaderListenerStep;
@3.8.0
+#fields(Lorg/jooq/LoaderFieldMapper;)Lorg/jooq/LoaderListenerStep;
@3.13.0
+#fieldsFromSource()Lorg/jooq/LoaderListenerStep;
@3.14.0
+#fieldsFromSource()Lorg/jooq/LoaderCSVOptionsStep;[deprecated]
+#fieldsCorresponding()Lorg/jooq/LoaderCSVOptionsStep;
-#fieldsFromSource()Lorg/jooq/LoaderListenerStep;

+###org/jooq/migrations/xml/ContentTypeAdapter
@3.15.0
+#<init>()V
+#unmarshal(Ljava/lang/String;)Lorg/jooq/ContentType;
+#marshal(Lorg/jooq/ContentType;)Ljava/lang/String;
+#marshal(Ljava/lang/Object;)Ljava/lang/Object;
+#unmarshal(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/migrations/xml/jaxb/ChangeType
@3.15.0
+#values()[Lorg/jooq/migrations/xml/jaxb/ChangeType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/migrations/xml/jaxb/ChangeType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/migrations/xml/jaxb/ChangeType;

+###org/jooq/migrations/xml/jaxb/CommitType
@3.15.0
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getMessage()Ljava/lang/String;
+#setMessage(Ljava/lang/String;)V
+#getParents()Ljava/util/List;
+#setParents(Ljava/util/List;)V
+#getFiles()Ljava/util/List;
+#setFiles(Ljava/util/List;)V
+#withId(Ljava/lang/String;)Lorg/jooq/migrations/xml/jaxb/CommitType;
+#withMessage(Ljava/lang/String;)Lorg/jooq/migrations/xml/jaxb/CommitType;
+#withParents([Lorg/jooq/migrations/xml/jaxb/ParentType;)Lorg/jooq/migrations/xml/jaxb/CommitType;
+#withParents(Ljava/util/Collection;)Lorg/jooq/migrations/xml/jaxb/CommitType;
+#withParents(Ljava/util/List;)Lorg/jooq/migrations/xml/jaxb/CommitType;
+#withFiles([Lorg/jooq/migrations/xml/jaxb/FileType;)Lorg/jooq/migrations/xml/jaxb/CommitType;
+#withFiles(Ljava/util/Collection;)Lorg/jooq/migrations/xml/jaxb/CommitType;
+#withFiles(Ljava/util/List;)Lorg/jooq/migrations/xml/jaxb/CommitType;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/jooq/Named
@3.11.0
+#getName()Ljava/lang/String;
+#getQualifiedName()Lorg/jooq/Name;
+#getUnqualifiedName()Lorg/jooq/Name;
+#getComment()Ljava/lang/String;
@3.14.0
+#getCommentPart()Lorg/jooq/Comment;
@3.16.0
+#$name()Lorg/jooq/Name;

+###org/jooq/Node
@3.15.0
+#id()Ljava/lang/String;
+#message()Ljava/lang/String;
+#root()Lorg/jooq/Node;
+#parents()Ljava/util/List;

+###org/jooq/PlainSQL
@3.6.0

+###org/jooq/Privilege
@3.11.0

+###org/jooq/RecordContext
@3.2.0-alpha-01
+#data()Ljava/util/Map;
+#data(Ljava/lang/Object;)Ljava/lang/Object;
+#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#configuration()Lorg/jooq/Configuration;
+#type()Lorg/jooq/ExecuteType;
+#record()Lorg/jooq/Record;
+#batchRecords()[Lorg/jooq/Record;
@3.3.0
+#exception()Ljava/lang/Exception;
@3.4.0
+#recordType()Lorg/jooq/RecordType;
@3.5.0
-#data()Ljava/util/Map;
-#data(Ljava/lang/Object;)Ljava/lang/Object;
-#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#configuration()Lorg/jooq/Configuration;

+###org/jooq/RevokeFinalStep
@3.11.0

+###org/jooq/RevokeFromStep
@3.11.0
+#from(Lorg/jooq/User;)Lorg/jooq/RevokeFinalStep;
+#from(Lorg/jooq/Role;)Lorg/jooq/RevokeFinalStep;
+#fromPublic()Lorg/jooq/RevokeFinalStep;

+###org/jooq/Scope
@3.5.0
+#configuration()Lorg/jooq/Configuration;
+#settings()Lorg/jooq/conf/Settings;
+#dialect()Lorg/jooq/SQLDialect;
+#family()Lorg/jooq/SQLDialect;
+#data()Ljava/util/Map;
+#data(Ljava/lang/Object;)Ljava/lang/Object;
+#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.10.0
+#dsl()Lorg/jooq/DSLContext;
@3.17.0
+#creationTime()Ljava/time/Instant;

+###org/jooq/SelectSeekStep2
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep20
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep21
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/Spatial
@3.16.0
+#data()Ljava/lang/String;

+###org/jooq/SQL
@3.6.0

+###org/jooq/Stringly$Name
@3.15.0

+###org/jooq/Stringly$Param
@3.15.0

+###org/jooq/tools/jdbc/BatchedConnection
@3.14.0
+#<init>(Ljava/sql/Connection;)V
+#<init>(Ljava/sql/Connection;I)V
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#createStatement()Ljava/sql/Statement;
+#createStatement(II)Ljava/sql/Statement;
+#createStatement(III)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#commit()V
+#rollback()V
+#rollback(Ljava/sql/Savepoint;)V
+#close()V
+#setSavepoint()Ljava/sql/Savepoint;
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#setAutoCommit(Z)V
+#getAutoCommit()Z
+#setReadOnly(Z)V
+#isReadOnly()Z
+#setCatalog(Ljava/lang/String;)V
+#getCatalog()Ljava/lang/String;
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#setTransactionIsolation(I)V
+#getTransactionIsolation()I
+#setTypeMap(Ljava/util/Map;)V
+#getTypeMap()Ljava/util/Map;
+#setHoldability(I)V
+#getHoldability()I
+#isValid(I)Z
+#setClientInfo(Ljava/lang/String;Ljava/lang/String;)V
+#setClientInfo(Ljava/util/Properties;)V
+#getClientInfo(Ljava/lang/String;)Ljava/lang/String;
+#getClientInfo()Ljava/util/Properties;

+###org/jooq/tools/jdbc/LoggingStatement
@3.12.2
+#<init>(Ljava/sql/Statement;)V
+#execute(Ljava/lang/String;)Z
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#addBatch(Ljava/lang/String;)V
+#executeLargeUpdate(Ljava/lang/String;)J
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J

+###org/jooq/tools/JooqLogger$Level
@3.8.0
+#values()[Lorg/jooq/tools/JooqLogger$Level;
+#valueOf(Ljava/lang/String;)Lorg/jooq/tools/JooqLogger$Level;
+#supports(Lorg/jooq/tools/JooqLogger$Level;)Z

+###org/jooq/util/ignite/IgniteDataType
@3.15.0
+#<init>()V

+###org/jooq/util/jaxb/tools/MiniJAXB
@3.12.0
+#<init>()V
+#marshal(Lorg/jooq/util/jaxb/tools/XMLAppendable;)Ljava/lang/String;
+#marshal(Lorg/jooq/util/jaxb/tools/XMLAppendable;Ljava/io/OutputStream;)V
+#marshal(Lorg/jooq/util/jaxb/tools/XMLAppendable;Ljava/io/Writer;)V
+#unmarshal(Ljava/io/InputStream;Ljava/lang/Class;)Lorg/jooq/util/jaxb/tools/XMLAppendable;
+#unmarshal(Ljava/lang/String;Ljava/lang/Class;)Lorg/jooq/util/jaxb/tools/XMLAppendable;
+#unmarshal(Ljava/io/File;Ljava/lang/Class;)Lorg/jooq/util/jaxb/tools/XMLAppendable;
+#append(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.13.0
+#unmarshal(Ljava/io/Reader;Ljava/lang/Class;)Lorg/jooq/util/jaxb/tools/XMLAppendable;

+###org/jooq/util/xml/jaxb/IndexColumnUsage
@3.10.0
+#<init>()V
+#getIndexCatalog()Ljava/lang/String;
+#setIndexCatalog(Ljava/lang/String;)V
+#getIndexSchema()Ljava/lang/String;
+#setIndexSchema(Ljava/lang/String;)V
+#getIndexName()Ljava/lang/String;
+#setIndexName(Ljava/lang/String;)V
+#getTableCatalog()Ljava/lang/String;
+#setTableCatalog(Ljava/lang/String;)V
+#getTableSchema()Ljava/lang/String;
+#setTableSchema(Ljava/lang/String;)V
+#getTableName()Ljava/lang/String;
+#setTableName(Ljava/lang/String;)V
+#getColumnName()Ljava/lang/String;
+#setColumnName(Ljava/lang/String;)V
+#getOrdinalPosition()I
+#setOrdinalPosition(I)V
+#isIsDescending()Ljava/lang/Boolean;
+#setIsDescending(Ljava/lang/Boolean;)V
+#withIndexCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/IndexColumnUsage;
+#withIndexSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/IndexColumnUsage;
+#withIndexName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/IndexColumnUsage;
+#withTableCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/IndexColumnUsage;
+#withTableSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/IndexColumnUsage;
+#withTableName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/IndexColumnUsage;
+#withColumnName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/IndexColumnUsage;
+#withOrdinalPosition(I)Lorg/jooq/util/xml/jaxb/IndexColumnUsage;
+#withIsDescending(Ljava/lang/Boolean;)Lorg/jooq/util/xml/jaxb/IndexColumnUsage;
@3.11.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/util/xml/jaxb/KeyColumnUsage
@3.9.0
+#<init>()V
+#getColumnName()Ljava/lang/String;
+#setColumnName(Ljava/lang/String;)V
+#getConstraintCatalog()Ljava/lang/String;
+#setConstraintCatalog(Ljava/lang/String;)V
+#getConstraintSchema()Ljava/lang/String;
+#setConstraintSchema(Ljava/lang/String;)V
+#getConstraintName()Ljava/lang/String;
+#setConstraintName(Ljava/lang/String;)V
+#getOrdinalPosition()I
+#setOrdinalPosition(I)V
+#getTableCatalog()Ljava/lang/String;
+#setTableCatalog(Ljava/lang/String;)V
+#getTableSchema()Ljava/lang/String;
+#setTableSchema(Ljava/lang/String;)V
+#getTableName()Ljava/lang/String;
+#setTableName(Ljava/lang/String;)V
+#withColumnName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/KeyColumnUsage;
+#withConstraintCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/KeyColumnUsage;
+#withConstraintSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/KeyColumnUsage;
+#withConstraintName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/KeyColumnUsage;
+#withOrdinalPosition(I)Lorg/jooq/util/xml/jaxb/KeyColumnUsage;
+#withTableCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/KeyColumnUsage;
+#withTableSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/KeyColumnUsage;
+#withTableName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/KeyColumnUsage;
@3.11.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/util/xml/jaxb/TableConstraint
@3.9.0
+#<init>()V
+#getConstraintCatalog()Ljava/lang/String;
+#setConstraintCatalog(Ljava/lang/String;)V
+#getConstraintSchema()Ljava/lang/String;
+#setConstraintSchema(Ljava/lang/String;)V
+#getConstraintName()Ljava/lang/String;
+#setConstraintName(Ljava/lang/String;)V
+#getConstraintType()Lorg/jooq/util/xml/jaxb/TableConstraintType;
+#setConstraintType(Lorg/jooq/util/xml/jaxb/TableConstraintType;)V
+#getTableCatalog()Ljava/lang/String;
+#setTableCatalog(Ljava/lang/String;)V
+#getTableSchema()Ljava/lang/String;
+#setTableSchema(Ljava/lang/String;)V
+#getTableName()Ljava/lang/String;
+#setTableName(Ljava/lang/String;)V
+#withConstraintCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableConstraint;
+#withConstraintSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableConstraint;
+#withConstraintName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableConstraint;
+#withConstraintType(Lorg/jooq/util/xml/jaxb/TableConstraintType;)Lorg/jooq/util/xml/jaxb/TableConstraint;
+#withTableCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableConstraint;
+#withTableSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableConstraint;
+#withTableName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableConstraint;
@3.11.0
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#withComment(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/TableConstraint;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
@3.13.0
+#isEnforced()Ljava/lang/Boolean;
+#setEnforced(Ljava/lang/Boolean;)V
+#withEnforced(Ljava/lang/Boolean;)Lorg/jooq/util/xml/jaxb/TableConstraint;

+###org/jooq/WindowSpecificationRowsAndStep
@3.3.0
+#andUnboundedPreceding()Lorg/jooq/WindowSpecificationFinalStep;
+#andPreceding(I)Lorg/jooq/WindowSpecificationFinalStep;
+#andCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
+#andUnboundedFollowing()Lorg/jooq/WindowSpecificationFinalStep;
+#andFollowing(I)Lorg/jooq/WindowSpecificationFinalStep;
@3.12.0
+#andUnboundedPreceding()Lorg/jooq/WindowSpecificationExcludeStep;
+#andPreceding(I)Lorg/jooq/WindowSpecificationExcludeStep;
+#andCurrentRow()Lorg/jooq/WindowSpecificationExcludeStep;
+#andUnboundedFollowing()Lorg/jooq/WindowSpecificationExcludeStep;
+#andFollowing(I)Lorg/jooq/WindowSpecificationExcludeStep;
-#andUnboundedPreceding()Lorg/jooq/WindowSpecificationFinalStep;
-#andPreceding(I)Lorg/jooq/WindowSpecificationFinalStep;
-#andCurrentRow()Lorg/jooq/WindowSpecificationFinalStep;
-#andUnboundedFollowing()Lorg/jooq/WindowSpecificationFinalStep;
-#andFollowing(I)Lorg/jooq/WindowSpecificationFinalStep;

+###org/jooq/WithAsStep14
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep15
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/AlterIndexOnStep
@3.11.0
+#on(Lorg/jooq/Table;)Lorg/jooq/AlterIndexStep;
+#on(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
+#on(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;

+###org/jooq/AlterTableStep
@3.4.0
+#alter(Lorg/jooq/Field;)Lorg/jooq/AlterTableAlterStep;
+#alter(Ljava/lang/String;)Lorg/jooq/AlterTableAlterStep;
+#add(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#add(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#drop(Lorg/jooq/Field;)Lorg/jooq/AlterTableDropStep;
+#drop(Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
@3.6.0
+#alterColumn(Lorg/jooq/Field;)Lorg/jooq/AlterTableAlterStep;
+#alterColumn(Ljava/lang/String;)Lorg/jooq/AlterTableAlterStep;
+#addColumn(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#add(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
+#addColumn(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#dropColumn(Lorg/jooq/Field;)Lorg/jooq/AlterTableDropStep;
+#dropColumn(Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
+#drop(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
+#dropConstraint(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
@3.8.0
+#renameTo(Lorg/jooq/Table;)Lorg/jooq/AlterTableFinalStep;
+#renameTo(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
+#renameTo(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
+#renameColumn(Lorg/jooq/Field;)Lorg/jooq/AlterTableRenameColumnToStep;
+#renameColumn(Lorg/jooq/Name;)Lorg/jooq/AlterTableRenameColumnToStep;
+#renameColumn(Ljava/lang/String;)Lorg/jooq/AlterTableRenameColumnToStep;
+#renameConstraint(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableRenameConstraintToStep;
+#renameConstraint(Lorg/jooq/Name;)Lorg/jooq/AlterTableRenameConstraintToStep;
+#renameConstraint(Ljava/lang/String;)Lorg/jooq/AlterTableRenameConstraintToStep;
+#alter(Lorg/jooq/Name;)Lorg/jooq/AlterTableAlterStep;
+#alterColumn(Lorg/jooq/Name;)Lorg/jooq/AlterTableAlterStep;
+#add(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#addColumn(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#drop(Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#dropColumn(Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#dropConstraint(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
@3.9.0
+#add(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableUsingIndexStep;
-#add(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
@3.10.0
+#renameIndex(Lorg/jooq/Name;)Lorg/jooq/AlterTableRenameIndexToStep;
+#renameIndex(Lorg/jooq/Index;)Lorg/jooq/AlterTableRenameIndexToStep;
+#renameIndex(Ljava/lang/String;)Lorg/jooq/AlterTableRenameIndexToStep;
@3.11.0
+#comment(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
+#comment(Lorg/jooq/Comment;)Lorg/jooq/AlterTableFinalStep;
+#add(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
+#add([Lorg/jooq/FieldOrConstraint;)Lorg/jooq/AlterTableFinalStep;
+#add(Ljava/util/Collection;)Lorg/jooq/AlterTableFinalStep;
+#addIfNotExists(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
+#addIfNotExists(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#addIfNotExists(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#addIfNotExists(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#addColumn(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
+#addColumnIfNotExists(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
+#addColumnIfNotExists(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#addColumnIfNotExists(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#addColumnIfNotExists(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
+#dropIfExists(Lorg/jooq/Field;)Lorg/jooq/AlterTableDropStep;
+#dropIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#dropIfExists(Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
+#dropColumnIfExists(Lorg/jooq/Field;)Lorg/jooq/AlterTableDropStep;
+#dropColumnIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#dropColumnIfExists(Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
+#drop([Lorg/jooq/Field;)Lorg/jooq/AlterTableDropStep;
+#drop([Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#drop([Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
+#dropColumns([Lorg/jooq/Field;)Lorg/jooq/AlterTableDropStep;
+#dropColumns([Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#dropColumns([Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
+#drop(Ljava/util/Collection;)Lorg/jooq/AlterTableDropStep;
+#dropColumns(Ljava/util/Collection;)Lorg/jooq/AlterTableDropStep;
@3.12.0
+#dropConstraint(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
+#dropPrimaryKey()Lorg/jooq/AlterTableFinalStep;
+#dropPrimaryKey(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
+#dropPrimaryKey(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
+#dropPrimaryKey(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
+#dropForeignKey(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
+#dropForeignKey(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
+#dropForeignKey(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
@3.13.0
+#add(Lorg/jooq/Field;)Lorg/jooq/AlterTableAddStep;
+#add([Lorg/jooq/FieldOrConstraint;)Lorg/jooq/AlterTableAddStep;
+#add(Ljava/util/Collection;)Lorg/jooq/AlterTableAddStep;
+#add(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#add(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#add(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#addIfNotExists(Lorg/jooq/Field;)Lorg/jooq/AlterTableAddStep;
+#addIfNotExists(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#addIfNotExists(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#addIfNotExists(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#addColumn(Lorg/jooq/Field;)Lorg/jooq/AlterTableAddStep;
+#addColumn(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#addColumn(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#addColumn(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#addColumnIfNotExists(Lorg/jooq/Field;)Lorg/jooq/AlterTableAddStep;
+#addColumnIfNotExists(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#addColumnIfNotExists(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#addColumnIfNotExists(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableAddStep;
+#drop(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableDropStep;
+#dropConstraint(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableDropStep;
+#dropConstraint(Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#dropConstraint(Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
+#dropIfExists(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableDropStep;
+#dropConstraintIfExists(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableDropStep;
+#dropConstraintIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#dropConstraintIfExists(Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
+#dropPrimaryKey()Lorg/jooq/AlterTableDropStep;
+#dropPrimaryKey(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableDropStep;
+#dropPrimaryKey(Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#dropPrimaryKey(Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
+#dropUnique(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableDropStep;
+#dropUnique(Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#dropUnique(Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
+#dropForeignKey(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableDropStep;
+#dropForeignKey(Lorg/jooq/Name;)Lorg/jooq/AlterTableDropStep;
+#dropForeignKey(Ljava/lang/String;)Lorg/jooq/AlterTableDropStep;
-#add(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
-#add([Lorg/jooq/FieldOrConstraint;)Lorg/jooq/AlterTableFinalStep;
-#add(Ljava/util/Collection;)Lorg/jooq/AlterTableFinalStep;
-#add(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#add(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#add(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#addIfNotExists(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
-#addIfNotExists(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#addIfNotExists(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#addIfNotExists(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#addColumn(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
-#addColumn(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#addColumn(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#addColumn(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#addColumnIfNotExists(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
-#addColumnIfNotExists(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#addColumnIfNotExists(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#addColumnIfNotExists(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
-#drop(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
-#dropConstraint(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
-#dropConstraint(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
-#dropConstraint(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
-#dropPrimaryKey()Lorg/jooq/AlterTableFinalStep;
-#dropPrimaryKey(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
-#dropPrimaryKey(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
-#dropPrimaryKey(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
-#dropForeignKey(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableFinalStep;
-#dropForeignKey(Lorg/jooq/Name;)Lorg/jooq/AlterTableFinalStep;
-#dropForeignKey(Ljava/lang/String;)Lorg/jooq/AlterTableFinalStep;
@3.15.0
+#alter(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableAlterConstraintStep;
+#alterConstraint(Lorg/jooq/Constraint;)Lorg/jooq/AlterTableAlterConstraintStep;
+#alterConstraint(Lorg/jooq/Name;)Lorg/jooq/AlterTableAlterConstraintStep;
+#alterConstraint(Ljava/lang/String;)Lorg/jooq/AlterTableAlterConstraintStep;
@3.17.0
+#add([Lorg/jooq/TableElement;)Lorg/jooq/AlterTableAddStep;
-#add([Lorg/jooq/FieldOrConstraint;)Lorg/jooq/AlterTableAddStep;

+###org/jooq/CacheProvider
@3.15.0
+#provide(Lorg/jooq/CacheContext;)Ljava/util/Map;

+###org/jooq/ChartFormat$Output
@3.10.0
+#values()[Lorg/jooq/ChartFormat$Output;
+#valueOf(Ljava/lang/String;)Lorg/jooq/ChartFormat$Output;

+###org/jooq/ChartFormat$Type
@3.10.0
+#values()[Lorg/jooq/ChartFormat$Type;
+#valueOf(Ljava/lang/String;)Lorg/jooq/ChartFormat$Type;

+###org/jooq/Comment
@3.11.0
+#getComment()Ljava/lang/String;
@3.16.0
+#$comment()Ljava/lang/String;

+###org/jooq/CommentOnFinalStep
@3.11.0

+###org/jooq/conf/ParseWithMetaLookups
@3.11.0
+#values()[Lorg/jooq/conf/ParseWithMetaLookups;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/ParseWithMetaLookups;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/ParseWithMetaLookups;

+###org/jooq/ConstraintForeignKeyReferencesStep2
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep20
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/CreateIndexWhereStep
@3.9.0
+#where([Lorg/jooq/Condition;)Lorg/jooq/CreateIndexFinalStep;
+#where(Ljava/util/Collection;)Lorg/jooq/CreateIndexFinalStep;
+#where(Lorg/jooq/Field;)Lorg/jooq/CreateIndexFinalStep;
+#where(Lorg/jooq/SQL;)Lorg/jooq/CreateIndexFinalStep;
+#where(Ljava/lang/String;)Lorg/jooq/CreateIndexFinalStep;
+#where(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/CreateIndexFinalStep;
+#where(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/CreateIndexFinalStep;
@3.11.0
+#where(Lorg/jooq/Condition;)Lorg/jooq/CreateIndexFinalStep;
@3.14.0
+#excludeNullKeys()Lorg/jooq/CreateIndexFinalStep;

+###org/jooq/CreateSchemaFinalStep
@3.9.0

+###org/jooq/CreateViewFinalStep
@3.5.0

+###org/jooq/DDLFlag
@3.8.0
+#values()[Lorg/jooq/DDLFlag;
+#valueOf(Ljava/lang/String;)Lorg/jooq/DDLFlag;

+###org/jooq/DerivedColumnList11
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList12
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList13
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList7
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList8
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DropIndexCascadeStep
@3.13.0
+#cascade()Lorg/jooq/DropIndexFinalStep;
+#restrict()Lorg/jooq/DropIndexFinalStep;

+###org/jooq/DropIndexFinalStep
@3.5.0

+###org/jooq/exception/NoDataFoundException
@3.6.0
+#<init>(Ljava/lang/String;)V
@3.10.0
+#<init>()V

+###org/jooq/FieldOrConstraint
@3.11.0

+###org/jooq/Function15
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function9
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Functions
@3.16.0
+#nullOnAllNull(Lorg/jooq/Function1;)Lorg/jooq/Function1;
+#nullOnAllNull(Lorg/jooq/Function2;)Lorg/jooq/Function2;
+#nullOnAllNull(Lorg/jooq/Function3;)Lorg/jooq/Function3;
+#nullOnAllNull(Lorg/jooq/Function4;)Lorg/jooq/Function4;
+#nullOnAllNull(Lorg/jooq/Function5;)Lorg/jooq/Function5;
+#nullOnAllNull(Lorg/jooq/Function6;)Lorg/jooq/Function6;
+#nullOnAllNull(Lorg/jooq/Function7;)Lorg/jooq/Function7;
+#nullOnAllNull(Lorg/jooq/Function8;)Lorg/jooq/Function8;
+#nullOnAllNull(Lorg/jooq/Function9;)Lorg/jooq/Function9;
+#nullOnAllNull(Lorg/jooq/Function10;)Lorg/jooq/Function10;
+#nullOnAllNull(Lorg/jooq/Function11;)Lorg/jooq/Function11;
+#nullOnAllNull(Lorg/jooq/Function12;)Lorg/jooq/Function12;
+#nullOnAllNull(Lorg/jooq/Function13;)Lorg/jooq/Function13;
+#nullOnAllNull(Lorg/jooq/Function14;)Lorg/jooq/Function14;
+#nullOnAllNull(Lorg/jooq/Function15;)Lorg/jooq/Function15;
+#nullOnAllNull(Lorg/jooq/Function16;)Lorg/jooq/Function16;
+#nullOnAllNull(Lorg/jooq/Function17;)Lorg/jooq/Function17;
+#nullOnAllNull(Lorg/jooq/Function18;)Lorg/jooq/Function18;
+#nullOnAllNull(Lorg/jooq/Function19;)Lorg/jooq/Function19;
+#nullOnAllNull(Lorg/jooq/Function20;)Lorg/jooq/Function20;
+#nullOnAllNull(Lorg/jooq/Function21;)Lorg/jooq/Function21;
+#nullOnAllNull(Lorg/jooq/Function22;)Lorg/jooq/Function22;
+#nullOnAnyNull(Lorg/jooq/Function1;)Lorg/jooq/Function1;
+#nullOnAnyNull(Lorg/jooq/Function2;)Lorg/jooq/Function2;
+#nullOnAnyNull(Lorg/jooq/Function3;)Lorg/jooq/Function3;
+#nullOnAnyNull(Lorg/jooq/Function4;)Lorg/jooq/Function4;
+#nullOnAnyNull(Lorg/jooq/Function5;)Lorg/jooq/Function5;
+#nullOnAnyNull(Lorg/jooq/Function6;)Lorg/jooq/Function6;
+#nullOnAnyNull(Lorg/jooq/Function7;)Lorg/jooq/Function7;
+#nullOnAnyNull(Lorg/jooq/Function8;)Lorg/jooq/Function8;
+#nullOnAnyNull(Lorg/jooq/Function9;)Lorg/jooq/Function9;
+#nullOnAnyNull(Lorg/jooq/Function10;)Lorg/jooq/Function10;
+#nullOnAnyNull(Lorg/jooq/Function11;)Lorg/jooq/Function11;
+#nullOnAnyNull(Lorg/jooq/Function12;)Lorg/jooq/Function12;
+#nullOnAnyNull(Lorg/jooq/Function13;)Lorg/jooq/Function13;
+#nullOnAnyNull(Lorg/jooq/Function14;)Lorg/jooq/Function14;
+#nullOnAnyNull(Lorg/jooq/Function15;)Lorg/jooq/Function15;
+#nullOnAnyNull(Lorg/jooq/Function16;)Lorg/jooq/Function16;
+#nullOnAnyNull(Lorg/jooq/Function17;)Lorg/jooq/Function17;
+#nullOnAnyNull(Lorg/jooq/Function18;)Lorg/jooq/Function18;
+#nullOnAnyNull(Lorg/jooq/Function19;)Lorg/jooq/Function19;
+#nullOnAnyNull(Lorg/jooq/Function20;)Lorg/jooq/Function20;
+#nullOnAnyNull(Lorg/jooq/Function21;)Lorg/jooq/Function21;
+#nullOnAnyNull(Lorg/jooq/Function22;)Lorg/jooq/Function22;

+###org/jooq/GrantToStep
@3.11.0
+#to(Lorg/jooq/User;)Lorg/jooq/GrantWithGrantOptionStep;
+#to(Lorg/jooq/Role;)Lorg/jooq/GrantWithGrantOptionStep;
+#toPublic()Lorg/jooq/GrantWithGrantOptionStep;

+###org/jooq/impl/DefaultDSLContext
@3.1.0
+#<init>(Lorg/jooq/SQLDialect;)V
+#<init>(Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;)V
+#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/SQLDialect;)V
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#<init>(Lorg/jooq/ConnectionProvider;Lorg/jooq/SQLDialect;)V
+#<init>(Lorg/jooq/ConnectionProvider;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#<init>(Lorg/jooq/Configuration;)V
+#configuration()Lorg/jooq/Configuration;
+#map(Lorg/jooq/Schema;)Lorg/jooq/Schema;
+#map(Lorg/jooq/Table;)Lorg/jooq/Table;
+#meta()Lorg/jooq/Meta;
+#renderContext()Lorg/jooq/RenderContext;
+#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderNamedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderInlined(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#extractBindValues(Lorg/jooq/QueryPart;)Ljava/util/List;
+#extractParams(Lorg/jooq/QueryPart;)Ljava/util/Map;
+#extractParam(Lorg/jooq/QueryPart;Ljava/lang/String;)Lorg/jooq/Param;
+#bindContext(Ljava/sql/PreparedStatement;)Lorg/jooq/BindContext;
+#bind(Lorg/jooq/QueryPart;Ljava/sql/PreparedStatement;)I
+#attach([Lorg/jooq/Attachable;)V
+#attach(Ljava/util/Collection;)V
+#loadInto(Lorg/jooq/Table;)Lorg/jooq/LoaderOptionsStep;
+#query(Ljava/lang/String;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
+#fetch(Ljava/lang/String;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Result;
+#fetchLazy(Ljava/lang/String;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Cursor;
+#fetchMany(Ljava/lang/String;)Ljava/util/List;
+#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
+#fetchOne(Ljava/lang/String;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
+#execute(Ljava/lang/String;)I
+#execute(Ljava/lang/String;[Ljava/lang/Object;)I
+#execute(Ljava/lang/String;[Lorg/jooq/QueryPart;)I
+#resultQuery(Ljava/lang/String;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/ResultQuery;
+#fetch(Ljava/sql/ResultSet;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Result;
+#fetchOne(Ljava/sql/ResultSet;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Record;
+#fetchLazy(Ljava/sql/ResultSet;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Cursor;
+#fetchFromTXT(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromTXT(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;C)Lorg/jooq/Result;
+#fetchFromStringData([[Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromStringData(Ljava/util/List;)Lorg/jooq/Result;
+#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectZero()Lorg/jooq/SelectSelectStep;
+#selectOne()Lorg/jooq/SelectSelectStep;
+#selectCount()Lorg/jooq/SelectSelectStep;
+#selectQuery()Lorg/jooq/SelectQuery;
+#selectQuery(Lorg/jooq/TableLike;)Lorg/jooq/SelectQuery;
+#insertQuery(Lorg/jooq/Table;)Lorg/jooq/InsertQuery;
+#insertInto(Lorg/jooq/Table;)Lorg/jooq/InsertSetStep;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep1;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep2;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep3;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep4;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep5;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep6;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep7;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep8;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep9;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep10;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep11;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep12;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep13;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep14;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep15;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep16;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep17;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep18;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep19;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep20;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep21;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep22;
+#insertInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/InsertValuesStepN;
+#insertInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;
+#updateQuery(Lorg/jooq/Table;)Lorg/jooq/UpdateQuery;
+#update(Lorg/jooq/Table;)Lorg/jooq/UpdateSetFirstStep;
+#mergeInto(Lorg/jooq/Table;)Lorg/jooq/MergeUsingStep;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;
+#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStepN;
+#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStepN;
+#deleteQuery(Lorg/jooq/Table;)Lorg/jooq/DeleteQuery;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#batch([Lorg/jooq/Query;)Lorg/jooq/Batch;
+#batch([Ljava/lang/String;)Lorg/jooq/Batch;
+#batch(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batch(Lorg/jooq/Query;)Lorg/jooq/BatchBindStep;
+#batch(Ljava/lang/String;)Lorg/jooq/BatchBindStep;
+#batch(Lorg/jooq/Query;[[Ljava/lang/Object;)Lorg/jooq/Batch;
+#batch(Ljava/lang/String;[[Ljava/lang/Object;)Lorg/jooq/Batch;
+#batchStore([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchStore(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchInsert([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchInsert(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchUpdate([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchUpdate(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchDelete([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchDelete(Ljava/util/Collection;)Lorg/jooq/Batch;
+#truncate(Lorg/jooq/Table;)Lorg/jooq/TruncateIdentityStep;
+#lastID()Ljava/math/BigInteger;
+#nextval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#currval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#newRecord(Lorg/jooq/UDT;)Lorg/jooq/UDTRecord;
+#newRecord(Lorg/jooq/Table;)Lorg/jooq/Record;
+#newRecord(Lorg/jooq/Table;Ljava/lang/Object;)Lorg/jooq/Record;
+#newResult(Lorg/jooq/Table;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/ResultQuery;)Lorg/jooq/Result;
+#fetchLazy(Lorg/jooq/ResultQuery;)Lorg/jooq/Cursor;
+#fetchMany(Lorg/jooq/ResultQuery;)Ljava/util/List;
+#fetchOne(Lorg/jooq/ResultQuery;)Lorg/jooq/Record;
+#fetchCount(Lorg/jooq/Select;)I
+#execute(Lorg/jooq/Query;)I
+#fetch(Lorg/jooq/Table;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Result;
+#fetchOne(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchLazy(Lorg/jooq/Table;)Lorg/jooq/Cursor;
+#fetchLazy(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Cursor;
+#executeInsert(Lorg/jooq/TableRecord;)I
+#executeUpdate(Lorg/jooq/UpdatableRecord;)I
+#executeUpdate(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeDelete(Lorg/jooq/UpdatableRecord;)I
+#executeDelete(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#toString()Ljava/lang/String;
@3.2.0-alpha-01
*#bind(Lorg/jooq/QueryPart;Ljava/sql/PreparedStatement;)I[deprecated]
@3.2.0
+#newRecord([Lorg/jooq/Field;)Lorg/jooq/Record;
+#newRecord(Lorg/jooq/Field;)Lorg/jooq/Record1;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record2;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record3;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record4;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record5;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record6;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record7;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record8;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record9;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record10;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record11;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record12;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record13;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record14;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record15;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record16;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record17;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record18;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record19;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record20;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record21;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record22;
@3.3.0
+#fetchValue(Ljava/lang/String;)Ljava/lang/Object;
+#fetchValue(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#fetchValue(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;Lorg/jooq/Field;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;Lorg/jooq/DataType;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchFromJSON(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchValue(Lorg/jooq/ResultQuery;)Ljava/lang/Object;
+#fetchCount(Lorg/jooq/Table;)I
+#fetchCount(Lorg/jooq/Table;Lorg/jooq/Condition;)I
@3.4.0
+#transactionResult(Lorg/jooq/TransactionalCallable;)Ljava/lang/Object;
+#transaction(Lorg/jooq/TransactionalRunnable;)V
+#with(Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#with([Lorg/jooq/CommonTableExpression;)Lorg/jooq/WithStep;
+#withRecursive(Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#withRecursive([Lorg/jooq/CommonTableExpression;)Lorg/jooq/WithStep;
+#batchInsert([Lorg/jooq/TableRecord;)Lorg/jooq/Batch;
+#alterSequence(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceRestartStep;
+#alterSequence(Ljava/lang/String;)Lorg/jooq/AlterSequenceRestartStep;
+#alterTable(Lorg/jooq/Table;)Lorg/jooq/AlterTableStep;
+#alterTable(Ljava/lang/String;)Lorg/jooq/AlterTableStep;
+#dropTable(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#dropTable(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#newResult([Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
-#batchInsert([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
@3.5.0
+#renderNamedOrInlinedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#fetchValues(Ljava/lang/String;)Ljava/util/List;
+#fetchValues(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#fetchValues(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;Lorg/jooq/Field;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;Lorg/jooq/DataType;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;Ljava/lang/Class;)Ljava/util/List;
+#createView(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createIndex(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createSequence(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
+#createSequence(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
+#dropView(Lorg/jooq/Table;)Lorg/jooq/DropViewFinalStep;
+#dropView(Ljava/lang/String;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Lorg/jooq/Table;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Ljava/lang/String;)Lorg/jooq/DropViewFinalStep;
+#dropTableIfExists(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#dropTableIfExists(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropIndex(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
+#dropIndexIfExists(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
+#dropSequence(Lorg/jooq/Sequence;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequence(Ljava/lang/String;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Lorg/jooq/Sequence;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Ljava/lang/String;)Lorg/jooq/DropSequenceFinalStep;
+#nextval(Ljava/lang/String;)Ljava/math/BigInteger;
+#currval(Ljava/lang/String;)Ljava/math/BigInteger;
+#fetchValues(Lorg/jooq/ResultQuery;)Ljava/util/List;
+#fetchExists(Lorg/jooq/Select;)Z
+#fetchExists(Lorg/jooq/Table;)Z
+#fetchExists(Lorg/jooq/Table;Lorg/jooq/Condition;)Z
-#configuration()Lorg/jooq/Configuration;
@3.6.0
+#mockResult(Lorg/jooq/tools/jdbc/MockDataProvider;Lorg/jooq/tools/jdbc/MockCallable;)Ljava/lang/Object;
+#mock(Lorg/jooq/tools/jdbc/MockDataProvider;Lorg/jooq/tools/jdbc/MockRunnable;)V
+#select([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#deleteFrom(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#createView(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createIndex(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createSequence(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
+#alterSequence(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceRestartStep;
+#alterTable(Lorg/jooq/Name;)Lorg/jooq/AlterTableStep;
+#dropView(Lorg/jooq/Name;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Lorg/jooq/Name;)Lorg/jooq/DropViewFinalStep;
+#dropTable(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTableIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropIndex(Ljava/lang/String;)Lorg/jooq/DropIndexOnStep;
+#dropIndex(Lorg/jooq/Name;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Ljava/lang/String;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/DropIndexOnStep;
+#dropSequence(Lorg/jooq/Name;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Lorg/jooq/Name;)Lorg/jooq/DropSequenceFinalStep;
+#truncate(Ljava/lang/String;)Lorg/jooq/TruncateIdentityStep;
+#truncate(Lorg/jooq/Name;)Lorg/jooq/TruncateIdentityStep;
+#fetchValues(Lorg/jooq/TableField;)Ljava/util/List;
-#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
-#dropIndex(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
-#dropIndexIfExists(Ljava/lang/String;)Lorg/jooq/DropIndexFinalStep;
@3.7.0
+#close()V
+#connectionResult(Lorg/jooq/ConnectionCallable;)Ljava/lang/Object;
+#connection(Lorg/jooq/ConnectionRunnable;)V
+#query(Lorg/jooq/SQL;)Lorg/jooq/Query;
+#fetch(Lorg/jooq/SQL;)Lorg/jooq/Result;
+#fetchLazy(Lorg/jooq/SQL;)Lorg/jooq/Cursor;
+#fetchStream(Lorg/jooq/SQL;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/lang/String;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/stream/Stream;
+#fetchMany(Lorg/jooq/SQL;)Lorg/jooq/Results;
+#fetchMany(Ljava/lang/String;)Lorg/jooq/Results;
+#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Results;
+#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Results;
+#fetchOne(Lorg/jooq/SQL;)Lorg/jooq/Record;
+#fetchOptional(Lorg/jooq/SQL;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/Optional;
+#fetchValue(Lorg/jooq/SQL;)Ljava/lang/Object;
+#fetchOptionalValue(Lorg/jooq/SQL;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/lang/String;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/Optional;
+#fetchValues(Lorg/jooq/SQL;)Ljava/util/List;
+#execute(Lorg/jooq/SQL;)I
+#resultQuery(Lorg/jooq/SQL;)Lorg/jooq/ResultQuery;
+#fetchOptional(Ljava/sql/ResultSet;)Ljava/util/Optional;
+#fetchOptional(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/Optional;
+#fetchOptional(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/Optional;
+#fetchOptional(Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;Lorg/jooq/Field;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;Lorg/jooq/DataType;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;Ljava/lang/Class;)Ljava/util/Optional;
+#fetchStream(Ljava/sql/ResultSet;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/stream/Stream;
+#fetchFromCSV(Ljava/lang/String;Z)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;ZC)Lorg/jooq/Result;
+#fetchFromStringData(Ljava/util/List;Z)Lorg/jooq/Result;
+#fetchStream(Lorg/jooq/ResultQuery;)Ljava/util/stream/Stream;
+#fetchMany(Lorg/jooq/ResultQuery;)Lorg/jooq/Results;
+#fetchOptional(Lorg/jooq/ResultQuery;)Ljava/util/Optional;
+#fetchValue(Lorg/jooq/TableField;)Ljava/lang/Object;
+#fetchOptionalValue(Lorg/jooq/ResultQuery;)Ljava/util/Optional;
+#fetchOptionalValue(Lorg/jooq/TableField;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Table;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/Optional;
+#fetchStream(Lorg/jooq/Table;)Ljava/util/stream/Stream;
+#fetchStream(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/stream/Stream;
-#fetchMany(Ljava/lang/String;)Ljava/util/List;
-#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
-#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
-#fetchMany(Lorg/jooq/ResultQuery;)Ljava/util/List;
@3.8.0
+#transactionAsync(Lorg/jooq/TransactionalRunnable;)Ljava/util/concurrent/CompletionStage;
+#transactionAsync(Ljava/util/concurrent/Executor;Lorg/jooq/TransactionalRunnable;)Ljava/util/concurrent/CompletionStage;
+#transactionResultAsync(Lorg/jooq/TransactionalCallable;)Ljava/util/concurrent/CompletionStage;
+#transactionResultAsync(Ljava/util/concurrent/Executor;Lorg/jooq/TransactionalCallable;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/SQL;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/lang/String;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/SQL;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/lang/String;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/concurrent/CompletionStage;
+#fetchFromHTML(Ljava/lang/String;)Lorg/jooq/Result;
+#with(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep1;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep2;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep3;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep4;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep5;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep6;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep7;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep8;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep9;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep10;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep11;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep12;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep13;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep14;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep15;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep16;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep17;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep18;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep19;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep20;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep21;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep22;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep1;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep2;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep3;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep4;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep5;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep6;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep7;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep8;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep9;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep10;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep11;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep12;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep13;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep14;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep15;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep16;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep17;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep18;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep19;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep20;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep21;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep22;
+#batch(Lorg/jooq/Queries;)Lorg/jooq/Batch;
+#ddl(Lorg/jooq/Schema;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Schema;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Table;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Table;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#createViewIfNotExists(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
+#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
+#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
+#createIndexIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createIndexIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createSequenceIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
+#createSequenceIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
+#createSequenceIfNotExists(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
+#fetchAsync(Lorg/jooq/ResultQuery;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/ResultQuery;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/Table;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
@3.9.0
+#parser()Lorg/jooq/Parser;[deprecated]
+#meta(Lorg/jooq/util/xml/jaxb/InformationSchema;)Lorg/jooq/Meta;
+#informationSchema(Lorg/jooq/Catalog;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema([Lorg/jooq/Catalog;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema(Lorg/jooq/Schema;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema([Lorg/jooq/Schema;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema(Lorg/jooq/Table;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema([Lorg/jooq/Table;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#transactionResult(Lorg/jooq/ContextTransactionalCallable;)Ljava/lang/Object;
+#transaction(Lorg/jooq/ContextTransactionalRunnable;)V
+#with(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/WithAsStep;
+#ddl(Lorg/jooq/Catalog;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Catalog;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#createView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createSchema(Ljava/lang/String;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchema(Lorg/jooq/Name;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchema(Lorg/jooq/Schema;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Lorg/jooq/Schema;)Lorg/jooq/CreateSchemaFinalStep;
+#alterSequence(Ljava/lang/String;)Lorg/jooq/AlterSequenceStep;
+#alterSequence(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceStep;
+#alterSequence(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Ljava/lang/String;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceStep;
+#alterTableIfExists(Ljava/lang/String;)Lorg/jooq/AlterTableStep;
+#alterTableIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterTableStep;
+#alterTableIfExists(Lorg/jooq/Table;)Lorg/jooq/AlterTableStep;
+#alterSchema(Ljava/lang/String;)Lorg/jooq/AlterSchemaStep;
+#alterSchema(Lorg/jooq/Name;)Lorg/jooq/AlterSchemaStep;
+#alterSchema(Lorg/jooq/Schema;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Ljava/lang/String;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Lorg/jooq/Schema;)Lorg/jooq/AlterSchemaStep;
+#alterView(Ljava/lang/String;)Lorg/jooq/AlterViewStep;
+#alterView(Lorg/jooq/Name;)Lorg/jooq/AlterViewStep;
+#alterView(Lorg/jooq/Table;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Ljava/lang/String;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Lorg/jooq/Table;)Lorg/jooq/AlterViewStep;
+#alterIndex(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
+#alterIndex(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
+#dropSchema(Ljava/lang/String;)Lorg/jooq/DropSchemaStep;
+#dropSchema(Lorg/jooq/Name;)Lorg/jooq/DropSchemaStep;
+#dropSchema(Lorg/jooq/Schema;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Ljava/lang/String;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Lorg/jooq/Name;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Lorg/jooq/Schema;)Lorg/jooq/DropSchemaStep;
-#alterSequence(Ljava/lang/String;)Lorg/jooq/AlterSequenceRestartStep;
-#alterSequence(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceRestartStep;
-#alterSequence(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceRestartStep;
@3.10.0
+#parsingConnection()Ljava/sql/Connection;
+#queries([Lorg/jooq/Query;)Lorg/jooq/Queries;
+#queries(Ljava/util/Collection;)Lorg/jooq/Queries;
+#fetchSingle(Lorg/jooq/SQL;)Lorg/jooq/Record;
+#fetchSingle(Ljava/lang/String;)Lorg/jooq/Record;
+#fetchSingle(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
+#fetchSingle(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Record;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep1;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep2;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep3;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep4;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep5;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep6;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep7;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep8;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep9;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep10;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep11;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep12;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep13;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep14;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep15;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep16;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep17;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep18;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep19;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep20;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep21;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep22;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep1;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep2;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep3;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep4;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep5;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep6;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep7;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep8;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep9;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep10;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep11;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep12;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep13;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep14;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep15;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep16;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep17;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep18;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep19;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep20;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep21;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep22;
+#createIndex(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createIndexIfNotExists(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#alterIndex(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
+#dropIndex(Lorg/jooq/Index;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/DropIndexOnStep;
+#nextval(Lorg/jooq/Name;)Ljava/math/BigInteger;
+#currval(Lorg/jooq/Name;)Ljava/math/BigInteger;
+#fetchSingle(Lorg/jooq/ResultQuery;)Lorg/jooq/Record;
+#fetchByExample(Lorg/jooq/TableRecord;)Lorg/jooq/Result;
+#fetchSingle(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
@3.10.5
+#setCatalog(Ljava/lang/String;)Lorg/jooq/Query;
+#setCatalog(Lorg/jooq/Name;)Lorg/jooq/Query;
+#setCatalog(Lorg/jooq/Catalog;)Lorg/jooq/Query;
+#setSchema(Ljava/lang/String;)Lorg/jooq/Query;
+#setSchema(Lorg/jooq/Name;)Lorg/jooq/Query;
+#setSchema(Lorg/jooq/Schema;)Lorg/jooq/Query;
@3.10.6
+#with(Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
@3.11.0
+#parsingDataSource()Ljavax/sql/DataSource;
+#diagnosticsConnection()Ljava/sql/Connection;
+#diagnosticsDataSource()Ljavax/sql/DataSource;
+#meta(Ljava/sql/DatabaseMetaData;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Catalog;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Schema;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Table;)Lorg/jooq/Meta;
+#explain(Lorg/jooq/Query;)Lorg/jooq/Explain;
+#begin([Lorg/jooq/Statement;)Lorg/jooq/Block;
+#begin(Ljava/util/Collection;)Lorg/jooq/Block;
+#selectFrom(Lorg/jooq/Name;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Lorg/jooq/SQL;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectWhereStep;
+#select([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
+#ddl([Lorg/jooq/Table;)Lorg/jooq/Queries;
+#ddl([Lorg/jooq/Table;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#ddl(Ljava/util/Collection;)Lorg/jooq/Queries;
+#ddl(Ljava/util/Collection;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#commentOnTable(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#commentOnTable(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnTable(Lorg/jooq/Table;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Lorg/jooq/Table;)Lorg/jooq/CommentOnIsStep;
+#commentOnColumn(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnColumn(Lorg/jooq/Field;)Lorg/jooq/CommentOnIsStep;
+#createOrReplaceView(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createIndex()Lorg/jooq/CreateIndexStep;
+#createUniqueIndex()Lorg/jooq/CreateIndexStep;
+#alterIndex(Ljava/lang/String;)Lorg/jooq/AlterIndexOnStep;
+#alterIndex(Lorg/jooq/Name;)Lorg/jooq/AlterIndexOnStep;
+#alterIndex(Lorg/jooq/Index;)Lorg/jooq/AlterIndexOnStep;
+#dropTemporaryTable(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#grant(Lorg/jooq/Privilege;)Lorg/jooq/GrantOnStep;
+#grant([Lorg/jooq/Privilege;)Lorg/jooq/GrantOnStep;
+#grant(Ljava/util/Collection;)Lorg/jooq/GrantOnStep;
+#revoke(Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revoke([Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revoke(Ljava/util/Collection;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor(Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor([Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor(Ljava/util/Collection;)Lorg/jooq/RevokeOnStep;
+#newRecord(Ljava/util/Collection;)Lorg/jooq/Record;
+#newResult(Ljava/util/Collection;)Lorg/jooq/Result;
+#fetchValue(Lorg/jooq/Table;)Ljava/lang/Object;
+#fetchValue(Lorg/jooq/Field;)Ljava/lang/Object;
+#fetchValues(Lorg/jooq/Table;)Ljava/util/List;
-#select([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
-#selectDistinct([Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
-#alterIndex(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
-#alterIndex(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
-#alterIndex(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
@3.12.0
+#meta([Lorg/jooq/Source;)Lorg/jooq/Meta;
+#query(Lorg/jooq/SQL;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/RowCountQuery;
+#fetchFromXML(Ljava/lang/String;)Lorg/jooq/Result;
+#ddl(Lorg/jooq/Catalog;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Schema;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Table;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl([Lorg/jooq/Table;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl(Ljava/util/Collection;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#setCatalog(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#setCatalog(Lorg/jooq/Name;)Lorg/jooq/RowCountQuery;
+#setCatalog(Lorg/jooq/Catalog;)Lorg/jooq/RowCountQuery;
+#setSchema(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#setSchema(Lorg/jooq/Name;)Lorg/jooq/RowCountQuery;
+#setSchema(Lorg/jooq/Schema;)Lorg/jooq/RowCountQuery;
+#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createType(Ljava/lang/String;)Lorg/jooq/CreateTypeStep;
+#createType(Lorg/jooq/Name;)Lorg/jooq/CreateTypeStep;
+#dropType(Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropType(Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropType([Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropType([Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropType(Ljava/util/Collection;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists([Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists([Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Ljava/util/Collection;)Lorg/jooq/DropTypeStep;
+#createSequence(Ljava/lang/String;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequence(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequence(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFlagsStep;
+#truncateTable(Ljava/lang/String;)Lorg/jooq/TruncateIdentityStep;
+#truncateTable(Lorg/jooq/Name;)Lorg/jooq/TruncateIdentityStep;
+#truncateTable(Lorg/jooq/Table;)Lorg/jooq/TruncateIdentityStep;
+#fetchCount(Lorg/jooq/Table;[Lorg/jooq/Condition;)I
+#fetchCount(Lorg/jooq/Table;Ljava/util/Collection;)I
+#fetchExists(Lorg/jooq/Table;[Lorg/jooq/Condition;)Z
+#fetchExists(Lorg/jooq/Table;Ljava/util/Collection;)Z
+#fetch(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Result;
+#fetchOne(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchSingle([Lorg/jooq/SelectField;)Lorg/jooq/Record;
+#fetchSingle(Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/SelectField;)Lorg/jooq/Record1;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record2;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record3;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record4;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record5;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record6;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record7;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record8;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record9;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record10;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record11;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record12;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record13;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record14;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record15;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record16;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record17;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record18;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record19;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record20;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record21;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record22;
+#fetchOptional(Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/Optional;
+#fetchAny(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchLazy(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Cursor;
+#fetchLazy(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Cursor;
+#fetchAsync(Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/concurrent/CompletionStage;
+#fetchStream(Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/stream/Stream;
+#fetchStream(Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/stream/Stream;
-#query(Lorg/jooq/SQL;)Lorg/jooq/Query;
-#query(Ljava/lang/String;)Lorg/jooq/Query;
-#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
-#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
-#setCatalog(Ljava/lang/String;)Lorg/jooq/Query;
-#setCatalog(Lorg/jooq/Name;)Lorg/jooq/Query;
-#setCatalog(Lorg/jooq/Catalog;)Lorg/jooq/Query;
-#setSchema(Ljava/lang/String;)Lorg/jooq/Query;
-#setSchema(Lorg/jooq/Name;)Lorg/jooq/Query;
-#setSchema(Lorg/jooq/Schema;)Lorg/jooq/Query;
-#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableAsStep;
-#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableAsStep;
-#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableAsStep;
-#createSequence(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequence(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequence(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequenceIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequenceIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFinalStep;
-#createSequenceIfNotExists(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFinalStep;
@3.13.0
+#version(Ljava/lang/String;)Lorg/jooq/Version;
+#migrateTo(Lorg/jooq/Version;)Lorg/jooq/Migration;
+#meta([Ljava/lang/String;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Query;)Lorg/jooq/Meta;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteUsingStep;
+#deleteFrom(Lorg/jooq/Table;)Lorg/jooq/DeleteUsingStep;
+#set(Lorg/jooq/Name;Lorg/jooq/Param;)Lorg/jooq/RowCountQuery;
+#createTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#alterType(Ljava/lang/String;)Lorg/jooq/AlterTypeStep;
+#alterType(Lorg/jooq/Name;)Lorg/jooq/AlterTypeStep;
+#dropTemporaryTableIfExists(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropTemporaryTableIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTemporaryTableIfExists(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
-#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
-#deleteFrom(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
@3.14.0
+#with(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
+#with(Ljava/util/Collection;)Lorg/jooq/WithStep;
+#withRecursive(Ljava/lang/String;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;Ljava/util/Collection;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/util/Collection;)Lorg/jooq/WithStep;
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;[deprecated]
*#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;[deprecated]
+#batched(Lorg/jooq/BatchedRunnable;)V
+#batchedResult(Lorg/jooq/BatchedCallable;)Ljava/lang/Object;
+#batchMerge([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchMerge(Ljava/util/Collection;)Lorg/jooq/Batch;
+#createDatabase(Ljava/lang/String;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabase(Lorg/jooq/Name;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabase(Lorg/jooq/Catalog;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabaseIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabaseIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDatabaseIfNotExists(Lorg/jooq/Catalog;)Lorg/jooq/CreateDatabaseFinalStep;
+#createDomain(Ljava/lang/String;)Lorg/jooq/CreateDomainAsStep;
+#createDomain(Lorg/jooq/Name;)Lorg/jooq/CreateDomainAsStep;
+#createDomain(Lorg/jooq/Domain;)Lorg/jooq/CreateDomainAsStep;
+#createDomainIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateDomainAsStep;
+#createDomainIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateDomainAsStep;
+#createDomainIfNotExists(Lorg/jooq/Domain;)Lorg/jooq/CreateDomainAsStep;
+#alterDatabase(Ljava/lang/String;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabase(Lorg/jooq/Name;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabase(Lorg/jooq/Catalog;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabaseIfExists(Ljava/lang/String;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabaseIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterDatabaseStep;
+#alterDatabaseIfExists(Lorg/jooq/Catalog;)Lorg/jooq/AlterDatabaseStep;
+#alterDomain(Ljava/lang/String;)Lorg/jooq/AlterDomainStep;
+#alterDomain(Lorg/jooq/Name;)Lorg/jooq/AlterDomainStep;
+#alterDomain(Lorg/jooq/Domain;)Lorg/jooq/AlterDomainStep;
+#alterDomainIfExists(Ljava/lang/String;)Lorg/jooq/AlterDomainStep;
+#alterDomainIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterDomainStep;
+#alterDomainIfExists(Lorg/jooq/Domain;)Lorg/jooq/AlterDomainStep;
+#dropDatabase(Ljava/lang/String;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabase(Lorg/jooq/Name;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabase(Lorg/jooq/Catalog;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabaseIfExists(Ljava/lang/String;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabaseIfExists(Lorg/jooq/Name;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDatabaseIfExists(Lorg/jooq/Catalog;)Lorg/jooq/DropDatabaseFinalStep;
+#dropDomain(Ljava/lang/String;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomain(Lorg/jooq/Name;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomain(Lorg/jooq/Domain;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomainIfExists(Ljava/lang/String;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomainIfExists(Lorg/jooq/Name;)Lorg/jooq/DropDomainCascadeStep;
+#dropDomainIfExists(Lorg/jooq/Domain;)Lorg/jooq/DropDomainCascadeStep;
+#nextvals(Lorg/jooq/Sequence;I)Ljava/util/List;
-#close()V
@3.15.0
+#<init>(Lio/r2dbc/spi/ConnectionFactory;Lorg/jooq/SQLDialect;)V
+#<init>(Lio/r2dbc/spi/ConnectionFactory;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#parsingConnectionFactory()Lio/r2dbc/spi/ConnectionFactory;
+#versions()Lorg/jooq/Versions;
+#commit(Ljava/lang/String;)Lorg/jooq/Commit;
+#commits()Lorg/jooq/Commits;
+#migrateTo(Lorg/jooq/Commit;)Lorg/jooq/Migration;
+#alterIndexIfExists(Ljava/lang/String;)Lorg/jooq/AlterIndexOnStep;
+#alterIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterIndexOnStep;
+#alterIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/AlterIndexOnStep;
+#commentOnColumn(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#createIndexIfNotExists()Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists()Lorg/jooq/CreateIndexStep;
+#setLocal(Lorg/jooq/Name;Lorg/jooq/Param;)Lorg/jooq/RowCountQuery;
+#fetchValue(Lorg/jooq/SelectField;)Ljava/lang/Object;
-#migrateTo(Lorg/jooq/Version;)Lorg/jooq/Migration;
-#bind(Lorg/jooq/QueryPart;Ljava/sql/PreparedStatement;)I[deprecated]
-#alterIndexIfExists(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
-#alterIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
-#alterIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
-#fetchValue(Lorg/jooq/Field;)Ljava/lang/Object;
@3.16.0
+#fetchMap(Lorg/jooq/ResultQuery;)Ljava/util/Map;
+#fetchGroups(Lorg/jooq/ResultQuery;)Ljava/util/Map;
@3.17.0
+#transactionPublisher(Lorg/jooq/TransactionalPublishable;)Lorg/jooq/Publisher;
+#selectFrom(Lorg/jooq/TableLike;)Lorg/jooq/SelectWhereStep;
+#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#createGlobalTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableElementListStep;
-#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;
-#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createTemporaryTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
-#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
-#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
-#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
@3.17.1
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;Lorg/jooq/Condition;)Lorg/jooq/Record;

+###org/jooq/impl/DefaultVisitListener
@3.2.0-alpha-01
+#<init>()V
+#clauseStart(Lorg/jooq/VisitContext;)V
+#clauseEnd(Lorg/jooq/VisitContext;)V
+#visitStart(Lorg/jooq/VisitContext;)V
+#visitEnd(Lorg/jooq/VisitContext;)V
@3.17.0
-#clauseStart(Lorg/jooq/VisitContext;)V
-#clauseEnd(Lorg/jooq/VisitContext;)V
-#visitStart(Lorg/jooq/VisitContext;)V
-#visitEnd(Lorg/jooq/VisitContext;)V

+###org/jooq/impl/DefaultVisitListenerProvider
@3.2.0-alpha-01
+#providers([Lorg/jooq/VisitListener;)[Lorg/jooq/VisitListenerProvider;
+#<init>(Lorg/jooq/VisitListener;)V
+#provide()Lorg/jooq/VisitListener;
+#toString()Ljava/lang/String;

+###org/jooq/impl/EmbeddableRecordImpl
@3.12.0
+#<init>([Lorg/jooq/Field;)V
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/EmbeddableRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/EmbeddableRecord;
+#fieldsRow()Lorg/jooq/Row;
+#valuesRow()Lorg/jooq/Row;
+#original()Lorg/jooq/EmbeddableRecord;
+#compareTo(Lorg/jooq/Record;)I
+#toString()Ljava/lang/String;
+#original()Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.14.0
+#<init>([Lorg/jooq/TableField;)V
+#into(Ljava/lang/Object;)Ljava/lang/Object;
@3.14.6
*#<init>([Lorg/jooq/Field;)V[deprecated]
*#<init>([Lorg/jooq/TableField;)V[deprecated]
+#<init>(Lorg/jooq/Row;)V

+###org/jooq/impl/LazySchema
@3.14.0
+#<init>(Lorg/jooq/Name;Lorg/jooq/Comment;Lorg/jooq/impl/LazySupplier;)V
+#accept(Lorg/jooq/Context;)V
+#getCatalog()Lorg/jooq/Catalog;
+#tableStream()Ljava/util/stream/Stream;
+#getTables()Ljava/util/List;
+#getTable(Ljava/lang/String;)Lorg/jooq/Table;
+#getTable(Lorg/jooq/Name;)Lorg/jooq/Table;
+#udtStream()Ljava/util/stream/Stream;
+#getUDTs()Ljava/util/List;
+#getUDT(Ljava/lang/String;)Lorg/jooq/UDT;
+#getUDT(Lorg/jooq/Name;)Lorg/jooq/UDT;
+#domainStream()Ljava/util/stream/Stream;
+#getDomains()Ljava/util/List;
+#getDomain(Ljava/lang/String;)Lorg/jooq/Domain;
+#getDomain(Lorg/jooq/Name;)Lorg/jooq/Domain;
+#sequenceStream()Ljava/util/stream/Stream;
+#getSequences()Ljava/util/List;
+#getSequence(Ljava/lang/String;)Lorg/jooq/Sequence;
+#getSequence(Lorg/jooq/Name;)Lorg/jooq/Sequence;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getQualifiedName()Lorg/jooq/Name;
+#toString()Ljava/lang/String;
+#generatesCast()Z
+#declaresCTE()Z
+#declaresWindows()Z
+#declaresTables()Z
+#declaresFields()Z
+#rendersContent(Lorg/jooq/Context;)Z
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;[deprecated]
@3.15.0
+#getPrimaryKeys()Ljava/util/List;
+#getPrimaryKeys(Ljava/lang/String;)Ljava/util/List;
+#getPrimaryKeys(Lorg/jooq/Name;)Ljava/util/List;
+#getUniqueKeys()Ljava/util/List;
+#getUniqueKeys(Ljava/lang/String;)Ljava/util/List;
+#getUniqueKeys(Lorg/jooq/Name;)Ljava/util/List;
+#getForeignKeys()Ljava/util/List;
+#getForeignKeys(Ljava/lang/String;)Ljava/util/List;
+#getForeignKeys(Lorg/jooq/Name;)Ljava/util/List;
+#getIndexes()Ljava/util/List;
+#getIndexes(Ljava/lang/String;)Ljava/util/List;
+#getIndexes(Lorg/jooq/Name;)Ljava/util/List;
+#primaryKeyStream()Ljava/util/stream/Stream;
+#uniqueKeyStream()Ljava/util/stream/Stream;
+#foreignKeyStream()Ljava/util/stream/Stream;
+#indexStream()Ljava/util/stream/Stream;

+###org/jooq/impl/QOM$Between
@3.16.0
+#$symmetric()Z

+###org/jooq/impl/QOM$BitAnd
@3.16.0

+###org/jooq/impl/QOM$Cascade
@3.16.0
+#values()[Lorg/jooq/impl/QOM$Cascade;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$Cascade;

+###org/jooq/impl/QOM$Coth
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Coth;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Coth;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Coth;

+###org/jooq/impl/QOM$Count
@3.16.0
+#$field()Lorg/jooq/Field;
+#$distinct()Z
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Count;
+#$distinct(Z)Lorg/jooq/impl/QOM$Count;

+###org/jooq/impl/QOM$CreateSequence
@3.16.0
+#$sequence()Lorg/jooq/Sequence;
+#$ifNotExists()Z
+#$startWith()Lorg/jooq/Field;
+#$incrementBy()Lorg/jooq/Field;
+#$minvalue()Lorg/jooq/Field;
+#$noMinvalue()Z
+#$maxvalue()Lorg/jooq/Field;
+#$noMaxvalue()Z
+#$cycle()Lorg/jooq/impl/QOM$CycleOption;
+#$cache()Lorg/jooq/Field;
+#$noCache()Z
+#$sequence(Lorg/jooq/Sequence;)Lorg/jooq/impl/QOM$CreateSequence;
+#$ifNotExists(Z)Lorg/jooq/impl/QOM$CreateSequence;
+#$startWith(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CreateSequence;
+#$incrementBy(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CreateSequence;
+#$minvalue(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CreateSequence;
+#$noMinvalue(Z)Lorg/jooq/impl/QOM$CreateSequence;
+#$maxvalue(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CreateSequence;
+#$noMaxvalue(Z)Lorg/jooq/impl/QOM$CreateSequence;
+#$cycle(Lorg/jooq/impl/QOM$CycleOption;)Lorg/jooq/impl/QOM$CreateSequence;
+#$cache(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CreateSequence;
+#$noCache(Z)Lorg/jooq/impl/QOM$CreateSequence;

+###org/jooq/impl/QOM$CreateType
@3.16.0
+#$name()Lorg/jooq/Name;
+#$values()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/impl/QOM$DropIndex
@3.16.0
+#$index()Lorg/jooq/Index;
+#$ifExists()Z
+#$on()Lorg/jooq/Table;
+#$cascade()Lorg/jooq/impl/QOM$Cascade;
+#$index(Lorg/jooq/Index;)Lorg/jooq/impl/QOM$DropIndex;
+#$ifExists(Z)Lorg/jooq/impl/QOM$DropIndex;
+#$on(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$DropIndex;
+#$cascade(Lorg/jooq/impl/QOM$Cascade;)Lorg/jooq/impl/QOM$DropIndex;

+###org/jooq/impl/QOM$DropSchema
@3.16.0
+#$schema()Lorg/jooq/Schema;
+#$ifExists()Z
+#$cascade()Lorg/jooq/impl/QOM$Cascade;
+#$schema(Lorg/jooq/Schema;)Lorg/jooq/impl/QOM$DropSchema;
+#$ifExists(Z)Lorg/jooq/impl/QOM$DropSchema;
+#$cascade(Lorg/jooq/impl/QOM$Cascade;)Lorg/jooq/impl/QOM$DropSchema;

+###org/jooq/impl/QOM$Eq
@3.16.0

+###org/jooq/impl/QOM$Euler
@3.16.0

+###org/jooq/impl/QOM$Floor
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Floor;

+###org/jooq/impl/QOM$ForeignKey
@3.16.0
+#$fields()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$references()Lorg/jooq/Constraint;

+###org/jooq/impl/QOM$Inline
@3.16.0
@3.17.0
-###org/jooq/impl/QOM$Inline

+###org/jooq/impl/QOM$IsNotNull
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$LastValue
@3.16.0
+#$field()Lorg/jooq/Field;
+#$nullTreatment()Lorg/jooq/impl/QOM$NullTreatment;

+###org/jooq/impl/QOM$Log
@3.16.0
+#$value()Lorg/jooq/Field;
+#$base()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Log;
+#$base(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Log;

+###org/jooq/impl/QOM$Md5
@3.16.0
+#$string()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Md5;

+###org/jooq/impl/QOM$Ne
@3.16.0

+###org/jooq/impl/QOM$NotSimilarTo
@3.16.0
+#$value()Lorg/jooq/Field;
+#$pattern()Lorg/jooq/Field;
+#$escape()Ljava/lang/Character;

+###org/jooq/impl/QOM$Nvl
@3.16.0
+#$value()Lorg/jooq/Field;
+#$defaultValue()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Nvl;
+#$defaultValue(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Nvl;

+###org/jooq/impl/QOM$Power
@3.16.0
+#$base()Lorg/jooq/Field;
+#$exponent()Lorg/jooq/Field;

+###org/jooq/impl/QOM$RegexpLike
@3.16.0
+#$search()Lorg/jooq/Field;
+#$pattern()Lorg/jooq/Field;

+###org/jooq/impl/QOM$RegrSxy
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrSxy;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrSxy;

+###org/jooq/impl/QOM$Rollup
@3.16.0

+###org/jooq/impl/QOM$Rpad
@3.16.0
+#$string()Lorg/jooq/Field;
+#$length()Lorg/jooq/Field;
+#$character()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Rpad;
+#$length(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Rpad;
+#$character(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Rpad;

+###org/jooq/impl/QOM$Shl
@3.16.0
+#$value()Lorg/jooq/Field;
+#$count()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Sqrt
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Sqrt;

+###org/jooq/impl/QOM$SubstringIndex
@3.16.0
+#$string()Lorg/jooq/Field;
+#$delimiter()Lorg/jooq/Field;
+#$n()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$SubstringIndex;
+#$delimiter(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$SubstringIndex;
+#$n(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$SubstringIndex;

+###org/jooq/impl/QOM$TimestampDiff
@3.16.0
+#$minuend()Lorg/jooq/Field;
+#$subtrahend()Lorg/jooq/Field;

+###org/jooq/impl/QOM$Truncate
@3.16.0
+#$table()Lorg/jooq/Table;
+#$restartIdentity()Lorg/jooq/impl/QOM$IdentityRestartOption;
+#$cascade()Lorg/jooq/impl/QOM$Cascade;
+#$table(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$Truncate;
+#$restartIdentity(Lorg/jooq/impl/QOM$IdentityRestartOption;)Lorg/jooq/impl/QOM$Truncate;
+#$cascade(Lorg/jooq/impl/QOM$Cascade;)Lorg/jooq/impl/QOM$Truncate;

+###org/jooq/impl/QOM$UniqueKey
@3.16.0
+#$fields()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/impl/QOM$WindowFunction
@3.16.0
+#$windowSpecification()Lorg/jooq/WindowSpecification;
+#$windowDefinition()Lorg/jooq/WindowDefinition;

+###org/jooq/impl/QOM$XMLParse
@3.16.0
+#$content()Lorg/jooq/Field;
+#$documentOrContent()Lorg/jooq/impl/QOM$DocumentOrContent;

+###org/jooq/JSONFormat$RecordFormat
@3.9.0
+#values()[Lorg/jooq/JSONFormat$RecordFormat;
+#valueOf(Ljava/lang/String;)Lorg/jooq/JSONFormat$RecordFormat;

+###org/jooq/JSONFormat
@3.9.0
+#<init>()V
+#header(Z)Lorg/jooq/JSONFormat;
+#header()Z
+#recordFormat(Lorg/jooq/JSONFormat$RecordFormat;)Lorg/jooq/JSONFormat;
+#recordFormat()Lorg/jooq/JSONFormat$RecordFormat;
@3.10.0
+#format(Z)Lorg/jooq/JSONFormat;
+#format()Z
+#newline(Ljava/lang/String;)Lorg/jooq/JSONFormat;
+#newline()Ljava/lang/String;
+#indent(I)Lorg/jooq/JSONFormat;
+#indent()I
+#indentString(I)Ljava/lang/String;
@3.14.0
+#quoteNested(Z)Lorg/jooq/JSONFormat;
+#quoteNested()Z
@3.14.4
+#wrapSingleColumnRecords(Z)Lorg/jooq/JSONFormat;
+#wrapSingleColumnRecords()Z
@3.15.0
+#globalIndent(I)Lorg/jooq/JSONFormat;
+#globalIndent()I
@3.17.0
+#mutable()Z
+#mutable(Z)Lorg/jooq/JSONFormat;

+###org/jooq/LikeEscapeStep
@3.9.0
+#escape(C)Lorg/jooq/Condition;

+###org/jooq/MigrationListener
@3.13.0
+#migrationStart(Lorg/jooq/MigrationContext;)V
+#migrationEnd(Lorg/jooq/MigrationContext;)V
+#queriesStart(Lorg/jooq/MigrationContext;)V
+#queriesEnd(Lorg/jooq/MigrationContext;)V
+#queryStart(Lorg/jooq/MigrationContext;)V
+#queryEnd(Lorg/jooq/MigrationContext;)V

+###org/jooq/MigrationListenerProvider
@3.13.0
+#provide()Lorg/jooq/MigrationListener;

+###org/jooq/migrations/xml/jaxb/ParentType
@3.15.0
+#<init>()V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#withId(Ljava/lang/String;)Lorg/jooq/migrations/xml/jaxb/ParentType;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/jooq/Name$Quoted
@3.12.0
+#values()[Lorg/jooq/Name$Quoted;
+#valueOf(Ljava/lang/String;)Lorg/jooq/Name$Quoted;

+###org/jooq/Queries
@3.8.0
+#queries()[Lorg/jooq/Query;
@3.9.0
+#stream()Ljava/util/stream/Stream;
@3.10.0
*#stream()Ljava/util/stream/Stream;[deprecated]
+#queryStream()Ljava/util/stream/Stream;
+#fetchMany()Lorg/jooq/Results;
+#executeBatch()[I
@3.11.0
+#block()Lorg/jooq/Block;
@3.13.0
+#concat(Lorg/jooq/Queries;)Lorg/jooq/Queries;
@3.16.0
+#$queries()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/RecordListenerProvider
@3.2.0-alpha-01
+#provide()Lorg/jooq/RecordListener;

+###org/jooq/ResultOrRows
@3.7.0
+#result()Lorg/jooq/Result;
+#rows()I
@3.10.0
+#exception()Lorg/jooq/exception/DataAccessException;

+###org/jooq/SelectSeekStep1
@3.3.0
+#seek(Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep17
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/TableOptions
@3.13.0
+#of(Lorg/jooq/TableOptions$TableType;)Lorg/jooq/TableOptions;
+#table()Lorg/jooq/TableOptions;
+#temporaryTable()Lorg/jooq/TableOptions;
+#temporaryTable(Lorg/jooq/TableOptions$OnCommit;)Lorg/jooq/TableOptions;
+#view()Lorg/jooq/TableOptions;
+#view(Lorg/jooq/Select;)Lorg/jooq/TableOptions;
+#view(Ljava/lang/String;)Lorg/jooq/TableOptions;
+#materializedView()Lorg/jooq/TableOptions;
+#materializedView(Lorg/jooq/Select;)Lorg/jooq/TableOptions;
+#expression()Lorg/jooq/TableOptions;
+#function()Lorg/jooq/TableOptions;
+#type()Lorg/jooq/TableOptions$TableType;
+#onCommit()Lorg/jooq/TableOptions$OnCommit;
+#select()Lorg/jooq/Select;
+#source()Ljava/lang/String;
@3.13.3
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.15.0
+#function(Ljava/lang/String;)Lorg/jooq/TableOptions;
@3.17.0
+#temporaryTable(Lorg/jooq/impl/QOM$TableCommitAction;)Lorg/jooq/TableOptions;

+###org/jooq/tools/Ints
@3.12.0
+#tryParse(Ljava/lang/String;)Ljava/lang/Integer;
+#tryParse(Ljava/lang/String;II)Ljava/lang/Integer;

+###org/jooq/tools/jdbc/Mock
@3.9.0
+#of(I)Lorg/jooq/tools/jdbc/MockDataProvider;
+#of(Lorg/jooq/Record;)Lorg/jooq/tools/jdbc/MockDataProvider;
+#of(Lorg/jooq/Result;)Lorg/jooq/tools/jdbc/MockDataProvider;
+#of([Lorg/jooq/tools/jdbc/MockResult;)Lorg/jooq/tools/jdbc/MockDataProvider;
@3.13.0
+#of(Ljava/sql/SQLException;)Lorg/jooq/tools/jdbc/MockDataProvider;

+###org/jooq/TransactionListener
@3.9.0
+#beginStart(Lorg/jooq/TransactionContext;)V
+#beginEnd(Lorg/jooq/TransactionContext;)V
+#commitStart(Lorg/jooq/TransactionContext;)V
+#commitEnd(Lorg/jooq/TransactionContext;)V
+#rollbackStart(Lorg/jooq/TransactionContext;)V
+#rollbackEnd(Lorg/jooq/TransactionContext;)V
@3.15.0
+#onBeginStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;
+#onBeginEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;
+#onCommitStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;
+#onCommitEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;
+#onRollbackStart(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;
+#onRollbackEnd(Ljava/util/function/Consumer;)Lorg/jooq/impl/CallbackTransactionListener;

+###org/jooq/TransactionListenerProvider
@3.9.0
+#provide()Lorg/jooq/TransactionListener;

+###org/jooq/Typed
@3.13.0
+#getConverter()Lorg/jooq/Converter;
+#getBinding()Lorg/jooq/Binding;
+#getType()Ljava/lang/Class;
+#getDataType()Lorg/jooq/DataType;
+#getDataType(Lorg/jooq/Configuration;)Lorg/jooq/DataType;
@3.16.0
+#$dataType()Lorg/jooq/DataType;

+###org/jooq/UpdateFromStep
@3.3.0
+#from([Lorg/jooq/TableLike;)Lorg/jooq/UpdateWhereStep;
+#from(Ljava/util/Collection;)Lorg/jooq/UpdateWhereStep;
+#from(Ljava/lang/String;)Lorg/jooq/UpdateWhereStep;
+#from(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/UpdateWhereStep;
+#from(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/UpdateWhereStep;
@3.5.0
+#from(Lorg/jooq/TableLike;)Lorg/jooq/UpdateWhereStep;
@3.7.0
+#from(Lorg/jooq/SQL;)Lorg/jooq/UpdateWhereStep;
@3.8.0
+#from(Lorg/jooq/Name;)Lorg/jooq/UpdateWhereStep;

+###org/jooq/util/jaxb/tools/StringAdapter
@3.9.0
+#<init>()V
+#unmarshal(Ljava/lang/String;)Ljava/lang/String;
+#marshal(Ljava/lang/String;)Ljava/lang/String;
+#marshal(Ljava/lang/Object;)Ljava/lang/Object;
+#unmarshal(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/util/jaxb/tools/TrimAdapter
@3.9.0
+#<init>()V

+###org/jooq/util/xml/jaxb/Domain
@3.14.0
+#<init>()V
+#getDomainCatalog()Ljava/lang/String;
+#setDomainCatalog(Ljava/lang/String;)V
+#getDomainSchema()Ljava/lang/String;
+#setDomainSchema(Ljava/lang/String;)V
+#getDomainName()Ljava/lang/String;
+#setDomainName(Ljava/lang/String;)V
+#getDataType()Ljava/lang/String;
+#setDataType(Ljava/lang/String;)V
+#getCharacterMaximumLength()Ljava/lang/Integer;
+#setCharacterMaximumLength(Ljava/lang/Integer;)V
+#getNumericPrecision()Ljava/lang/Integer;
+#setNumericPrecision(Ljava/lang/Integer;)V
+#getNumericScale()Ljava/lang/Integer;
+#setNumericScale(Ljava/lang/Integer;)V
+#getDomainDefault()Ljava/lang/String;
+#setDomainDefault(Ljava/lang/String;)V
+#withDomainCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Domain;
+#withDomainSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Domain;
+#withDomainName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Domain;
+#withDataType(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Domain;
+#withCharacterMaximumLength(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Domain;
+#withNumericPrecision(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Domain;
+#withNumericScale(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Domain;
+#withDomainDefault(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Domain;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/jooq/util/xml/jaxb/ElementType
@3.12.0
+#<init>()V
+#getObjectCatalog()Ljava/lang/String;
+#setObjectCatalog(Ljava/lang/String;)V
+#getObjectSchema()Ljava/lang/String;
+#setObjectSchema(Ljava/lang/String;)V
+#getObjectName()Ljava/lang/String;
+#setObjectName(Ljava/lang/String;)V
+#getObjectType()Ljava/lang/String;
+#setObjectType(Ljava/lang/String;)V
+#getDataType()Ljava/lang/String;
+#setDataType(Ljava/lang/String;)V
+#getCharacterMaximumLength()Ljava/lang/Integer;
+#setCharacterMaximumLength(Ljava/lang/Integer;)V
+#getNumericPrecision()Ljava/lang/Integer;
+#setNumericPrecision(Ljava/lang/Integer;)V
+#getNumericScale()Ljava/lang/Integer;
+#setNumericScale(Ljava/lang/Integer;)V
+#getUdtCatalog()Ljava/lang/String;
+#setUdtCatalog(Ljava/lang/String;)V
+#getUdtSchema()Ljava/lang/String;
+#setUdtSchema(Ljava/lang/String;)V
+#getUdtName()Ljava/lang/String;
+#setUdtName(Ljava/lang/String;)V
+#withObjectCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ElementType;
+#withObjectSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ElementType;
+#withObjectName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ElementType;
+#withObjectType(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ElementType;
+#withDataType(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ElementType;
+#withCharacterMaximumLength(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/ElementType;
+#withNumericPrecision(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/ElementType;
+#withNumericScale(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/ElementType;
+#withUdtCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ElementType;
+#withUdtSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ElementType;
+#withUdtName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/ElementType;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/jooq/util/xml/jaxb/Sequence
@3.9.0
+#<init>()V
+#getSequenceCatalog()Ljava/lang/String;
+#setSequenceCatalog(Ljava/lang/String;)V
+#getSequenceSchema()Ljava/lang/String;
+#setSequenceSchema(Ljava/lang/String;)V
+#getSequenceName()Ljava/lang/String;
+#setSequenceName(Ljava/lang/String;)V
+#getDataType()Ljava/lang/String;
+#setDataType(Ljava/lang/String;)V
+#getCharacterMaximumLength()Ljava/lang/Integer;
+#setCharacterMaximumLength(Ljava/lang/Integer;)V
+#getNumericPrecision()Ljava/lang/Integer;
+#setNumericPrecision(Ljava/lang/Integer;)V
+#getNumericScale()Ljava/lang/Integer;
+#setNumericScale(Ljava/lang/Integer;)V
+#withSequenceCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withSequenceSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withSequenceName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withDataType(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withCharacterMaximumLength(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withNumericPrecision(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withNumericScale(Ljava/lang/Integer;)Lorg/jooq/util/xml/jaxb/Sequence;
@3.11.0
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#withComment(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Sequence;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
@3.13.0
+#getStartValue()Ljava/math/BigInteger;
+#setStartValue(Ljava/math/BigInteger;)V
+#getIncrement()Ljava/math/BigInteger;
+#setIncrement(Ljava/math/BigInteger;)V
+#getMinimumValue()Ljava/math/BigInteger;
+#setMinimumValue(Ljava/math/BigInteger;)V
+#getMaximumValue()Ljava/math/BigInteger;
+#setMaximumValue(Ljava/math/BigInteger;)V
+#isCycleOption()Ljava/lang/Boolean;
+#setCycleOption(Ljava/lang/Boolean;)V
+#getCache()Ljava/math/BigInteger;
+#setCache(Ljava/math/BigInteger;)V
+#withStartValue(Ljava/math/BigInteger;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withIncrement(Ljava/math/BigInteger;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withMinimumValue(Ljava/math/BigInteger;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withMaximumValue(Ljava/math/BigInteger;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withCycleOption(Ljava/lang/Boolean;)Lorg/jooq/util/xml/jaxb/Sequence;
+#withCache(Ljava/math/BigInteger;)Lorg/jooq/util/xml/jaxb/Sequence;

+###org/jooq/util/yugabytedb/YugabyteDBDataType
@3.16.0
+#<init>()V

+###org/jooq/WindowFromFirstLastStep
@3.11.0
@3.12.0
+#fromFirst()Lorg/jooq/WindowIgnoreNullsStep;
+#fromLast()Lorg/jooq/WindowIgnoreNullsStep;

+###org/jooq/WithAsStep16
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep17
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep4
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep5
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/XMLTableColumnPathStep
@3.14.0
+#path(Ljava/lang/String;)Lorg/jooq/XMLTableColumnsStep;

+###org/jooq/XMLTableColumnsFirstStep
@3.14.0
+#column(Ljava/lang/String;)Lorg/jooq/XMLTableColumnForOrdinalityStep;
+#column(Lorg/jooq/Name;)Lorg/jooq/XMLTableColumnForOrdinalityStep;
+#column(Lorg/jooq/Field;)Lorg/jooq/XMLTableColumnPathStep;
+#column(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/XMLTableColumnPathStep;
+#column(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/XMLTableColumnPathStep;
+#column(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/XMLTableColumnPathStep;

+###org/jooq/Allow$PlainSQL
@3.9.0

+###org/jooq/AlterTableAlterStep
@3.4.0
+#defaultValue(Ljava/lang/Object;)Lorg/jooq/AlterTableFinalStep;
+#defaultValue(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
+#set(Lorg/jooq/DataType;)Lorg/jooq/AlterTableFinalStep;
@3.10.0
+#setNotNull()Lorg/jooq/AlterTableFinalStep;
+#dropNotNull()Lorg/jooq/AlterTableFinalStep;
@3.12.0
+#default_(Ljava/lang/Object;)Lorg/jooq/AlterTableFinalStep;
+#default_(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
@3.13.0
+#setDefault(Ljava/lang/Object;)Lorg/jooq/AlterTableFinalStep;
+#setDefault(Lorg/jooq/Field;)Lorg/jooq/AlterTableFinalStep;
+#dropDefault()Lorg/jooq/AlterTableFinalStep;

+###org/jooq/AlterTypeFinalStep
@3.13.0

+###org/jooq/AlterTypeRenameValueToStep
@3.13.0
+#to(Ljava/lang/String;)Lorg/jooq/AlterTypeFinalStep;
+#to(Lorg/jooq/Field;)Lorg/jooq/AlterTypeFinalStep;

+###org/jooq/ChartFormat
@3.10.0
+#<init>()V
+#output(Lorg/jooq/ChartFormat$Output;)Lorg/jooq/ChartFormat;
+#output()Lorg/jooq/ChartFormat$Output;
+#type(Lorg/jooq/ChartFormat$Type;)Lorg/jooq/ChartFormat;
+#type()Lorg/jooq/ChartFormat$Type;
+#display(Lorg/jooq/ChartFormat$Display;)Lorg/jooq/ChartFormat;
+#display()Lorg/jooq/ChartFormat$Display;
+#dimensions(II)Lorg/jooq/ChartFormat;
+#width(I)Lorg/jooq/ChartFormat;
+#width()I
+#height(I)Lorg/jooq/ChartFormat;
+#height()I
+#category(I)Lorg/jooq/ChartFormat;
+#category()I
+#categoryAsText(Z)Lorg/jooq/ChartFormat;
+#categoryAsText()Z
+#values([I)Lorg/jooq/ChartFormat;
+#values()[I
+#shades([C)Lorg/jooq/ChartFormat;
+#shades()[C
+#showLegends(ZZ)Lorg/jooq/ChartFormat;
+#showHorizontalLegend(Z)Lorg/jooq/ChartFormat;
+#showHorizontalLegend()Z
+#showVerticalLegend(Z)Lorg/jooq/ChartFormat;
+#showVerticalLegend()Z
+#newline(Ljava/lang/String;)Lorg/jooq/ChartFormat;
+#newline()Ljava/lang/String;
+#numericFormat(Ljava/text/DecimalFormat;)Lorg/jooq/ChartFormat;
+#numericFormat()Ljava/text/DecimalFormat;
@3.16.0
+#percentFormat(Ljava/text/DecimalFormat;)Lorg/jooq/ChartFormat;
+#percentFormat()Ljava/text/DecimalFormat;

+###org/jooq/conf/InvocationOrder
@3.12.0
+#values()[Lorg/jooq/conf/InvocationOrder;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/InvocationOrder;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/InvocationOrder;

+###org/jooq/conf/LocaleAdapter
@3.12.0
+#<init>()V
+#unmarshal(Ljava/lang/String;)Ljava/util/Locale;
+#marshal(Ljava/util/Locale;)Ljava/lang/String;
+#marshal(Ljava/lang/Object;)Ljava/lang/Object;
+#unmarshal(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/conf/ParamCastMode
@3.10.0
+#values()[Lorg/jooq/conf/ParamCastMode;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/ParamCastMode;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/ParamCastMode;

+###org/jooq/conf/RegexAdapter
@3.8.0
+#<init>()V
+#unmarshal(Ljava/lang/String;)Ljava/util/regex/Pattern;
+#marshal(Ljava/util/regex/Pattern;)Ljava/lang/String;
+#marshal(Ljava/lang/Object;)Ljava/lang/Object;
+#unmarshal(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/conf/RenderDefaultNullability
@3.15.0
+#values()[Lorg/jooq/conf/RenderDefaultNullability;
+#valueOf(Ljava/lang/String;)Lorg/jooq/conf/RenderDefaultNullability;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/conf/RenderDefaultNullability;

+###org/jooq/conf/SQLDialectAdapter
@3.12.0
+#<init>()V
+#unmarshal(Ljava/lang/String;)Lorg/jooq/SQLDialect;
+#marshal(Lorg/jooq/SQLDialect;)Ljava/lang/String;
+#marshal(Ljava/lang/Object;)Ljava/lang/Object;
+#unmarshal(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/ConnectionCallable
@3.7.0
+#run(Ljava/sql/Connection;)Ljava/lang/Object;

+###org/jooq/ConstraintForeignKeyReferencesStep15
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep16
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep3
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ConstraintForeignKeyReferencesStep4
@3.6.0
+#references(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.0
+#references(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
@3.10.6
+#references(Ljava/lang/String;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Name;)Lorg/jooq/ConstraintForeignKeyOnStep;
+#references(Lorg/jooq/Table;)Lorg/jooq/ConstraintForeignKeyOnStep;

+###org/jooq/ContentType
@3.15.0
+#values()[Lorg/jooq/ContentType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/ContentType;

+###org/jooq/CreateDatabaseFinalStep
@3.14.0

+###org/jooq/CreateDomainAsStep
@3.14.0
+#as(Ljava/lang/Class;)Lorg/jooq/CreateDomainDefaultStep;
+#as(Lorg/jooq/DataType;)Lorg/jooq/CreateDomainDefaultStep;

+###org/jooq/CreateTableFinalStep
@3.5.0

+###org/jooq/CreateTableIndexStep
@3.11.0
+#index(Lorg/jooq/Index;)Lorg/jooq/CreateTableIndexStep;
+#indexes([Lorg/jooq/Index;)Lorg/jooq/CreateTableIndexStep;
+#indexes(Ljava/util/Collection;)Lorg/jooq/CreateTableIndexStep;
@3.17.0
-###org/jooq/CreateTableIndexStep

+###org/jooq/CSVFormat$Quote
@3.8.0
+#values()[Lorg/jooq/CSVFormat$Quote;
+#valueOf(Ljava/lang/String;)Lorg/jooq/CSVFormat$Quote;

+###org/jooq/CSVFormat
@3.8.0
+#<init>()V
+#delimiter(Ljava/lang/String;)Lorg/jooq/CSVFormat;
+#delimiter(C)Lorg/jooq/CSVFormat;
+#delimiter()Ljava/lang/String;
+#nullString(Ljava/lang/String;)Lorg/jooq/CSVFormat;
+#nullString()Ljava/lang/String;
+#emptyString(Ljava/lang/String;)Lorg/jooq/CSVFormat;
+#emptyString()Ljava/lang/String;
+#newline(Ljava/lang/String;)Lorg/jooq/CSVFormat;
+#newline()Ljava/lang/String;
+#quoteString(Ljava/lang/String;)Lorg/jooq/CSVFormat;
+#quoteString()Ljava/lang/String;
+#quote(Lorg/jooq/CSVFormat$Quote;)Lorg/jooq/CSVFormat;
+#quote()Lorg/jooq/CSVFormat$Quote;
+#header(Z)Lorg/jooq/CSVFormat;
+#header()Z

+###org/jooq/DeleteLimitStep
@3.12.0
+#limit(Ljava/lang/Number;)Lorg/jooq/DeleteReturningStep;
+#limit(Lorg/jooq/Param;)Lorg/jooq/DeleteReturningStep;
@3.17.0
+#limit(Lorg/jooq/Field;)Lorg/jooq/DeleteReturningStep;
-#limit(Lorg/jooq/Param;)Lorg/jooq/DeleteReturningStep;

+###org/jooq/DeleteOrderByStep
@3.12.0
+#orderBy([Lorg/jooq/OrderField;)Lorg/jooq/DeleteLimitStep;
+#orderBy(Ljava/util/Collection;)Lorg/jooq/DeleteLimitStep;
+#orderBy([I)Lorg/jooq/DeleteLimitStep;

+###org/jooq/DerivedColumnList3
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/DerivedColumnList4
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/CommonTableExpression;
-#as(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/CommonTableExpression;

+###org/jooq/Domain
@3.14.0
+#getChecks()Ljava/util/List;

+###org/jooq/DropDatabaseFinalStep
@3.14.0

+###org/jooq/EmbeddableRecord
@3.12.0
+#original()Lorg/jooq/EmbeddableRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/EmbeddableRecord;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/EmbeddableRecord;
+#original()Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;Lorg/jooq/Converter;)Lorg/jooq/Record;
+#with(Lorg/jooq/Field;Ljava/lang/Object;)Lorg/jooq/Record;

+###org/jooq/exception/DataMigrationException
@3.13.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/jooq/exception/DataMigrationValidationException
@3.13.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/jooq/exception/TemplatingException
@3.14.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/jooq/exception/TooManyRowsException
@3.6.0
+#<init>(Ljava/lang/String;)V
@3.10.0
+#<init>()V

+###org/jooq/ExecutorProvider
@3.8.0
+#provide()Ljava/util/concurrent/Executor;

+###org/jooq/Explain
@3.11.0
+#rows()D
+#cost()D
+#plan()Ljava/lang/String;

+###org/jooq/Function12
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function13
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function7
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/Function8
@3.15.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/GrantWithGrantOptionStep
@3.11.0
+#withGrantOption()Lorg/jooq/GrantFinalStep;

+###org/jooq/impl/DefaultExecutor
@3.8.0
+#<init>()V
+#execute(Ljava/lang/Runnable;)V

+###org/jooq/impl/IdentityConverter
@3.13.0
+#<init>(Ljava/lang/Class;)V
+#from(Ljava/lang/Object;)Ljava/lang/Object;
+#to(Ljava/lang/Object;)Ljava/lang/Object;
+#fromType()Ljava/lang/Class;
+#toType()Ljava/lang/Class;
+#toString()Ljava/lang/String;

+###org/jooq/impl/LocalDateAsLocalDateTimeBinding
@3.13.0
+#<init>()V
+#converter()Lorg/jooq/Converter;
+#sql(Lorg/jooq/BindingSQLContext;)V
+#register(Lorg/jooq/BindingRegisterContext;)V
+#set(Lorg/jooq/BindingSetStatementContext;)V
+#set(Lorg/jooq/BindingSetSQLOutputContext;)V
+#get(Lorg/jooq/BindingGetResultSetContext;)V
+#get(Lorg/jooq/BindingGetStatementContext;)V
+#get(Lorg/jooq/BindingGetSQLInputContext;)V

+###org/jooq/impl/QOM$Abs
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Abs;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Abs;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Abs;

+###org/jooq/impl/QOM$AlterType
@3.16.0
+#$type()Lorg/jooq/Name;
+#$renameTo()Lorg/jooq/Name;
+#$setSchema()Lorg/jooq/Schema;
+#$addValue()Lorg/jooq/Field;
+#$renameValue()Lorg/jooq/Field;
+#$renameValueTo()Lorg/jooq/Field;
+#$type(Lorg/jooq/Name;)Lorg/jooq/impl/QOM$AlterType;
+#$renameTo(Lorg/jooq/Name;)Lorg/jooq/impl/QOM$AlterType;
+#$setSchema(Lorg/jooq/Schema;)Lorg/jooq/impl/QOM$AlterType;
+#$addValue(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AlterType;
+#$renameValue(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AlterType;
+#$renameValueTo(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$AlterType;

+###org/jooq/impl/QOM$BitAndAgg
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$BitAndAgg;

+###org/jooq/impl/QOM$BitCount
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$BitCount;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$BitCount;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$BitCount;

+###org/jooq/impl/QOM$Collated
@3.16.0
+#$field()Lorg/jooq/Field;
+#$collation()Lorg/jooq/Collation;

+###org/jooq/impl/QOM$CombinedCondition
@3.16.0

+###org/jooq/impl/QOM$CommentOn
@3.16.0
+#$table()Lorg/jooq/Table;
+#$isView()Z
+#$field()Lorg/jooq/Field;
+#$comment()Lorg/jooq/Comment;
+#$table(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$CommentOn;
+#$isView(Z)Lorg/jooq/impl/QOM$CommentOn;
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$CommentOn;
+#$comment(Lorg/jooq/Comment;)Lorg/jooq/impl/QOM$CommentOn;

+###org/jooq/impl/QOM$Cos
@3.16.0
+#$number()Lorg/jooq/Field;
+#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Cos;
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Cos;
-#$number()Lorg/jooq/Field;
-#$number(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Cos;

+###org/jooq/impl/QOM$DerivedTable
@3.16.0

+###org/jooq/impl/QOM$Digits
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Digits;

+###org/jooq/impl/QOM$DropTable
@3.16.0
+#$temporary()Z
+#$table()Lorg/jooq/Table;
+#$ifExists()Z
+#$cascade()Lorg/jooq/impl/QOM$Cascade;
+#$temporary(Z)Lorg/jooq/impl/QOM$DropTable;
+#$table(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$DropTable;
+#$ifExists(Z)Lorg/jooq/impl/QOM$DropTable;
+#$cascade(Lorg/jooq/impl/QOM$Cascade;)Lorg/jooq/impl/QOM$DropTable;

+###org/jooq/impl/QOM$Exists
@3.16.0
+#$query()Lorg/jooq/Select;
+#$query(Lorg/jooq/Select;)Lorg/jooq/impl/QOM$Exists;

+###org/jooq/impl/QOM$Exp
@3.16.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Exp;

+###org/jooq/impl/QOM$FrameExclude
@3.16.0
+#values()[Lorg/jooq/impl/QOM$FrameExclude;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$FrameExclude;

+###org/jooq/impl/QOM$Greatest
@3.16.0

+###org/jooq/impl/QOM$GroupingSets
@3.16.0

+###org/jooq/impl/QOM$IsDocument
@3.16.0
+#$field()Lorg/jooq/Field;

+###org/jooq/impl/QOM$JSONArrayAgg
@3.16.0
+#$field()Lorg/jooq/Field;
+#$onNull()Lorg/jooq/impl/QOM$JSONOnNull;
+#$returning()Lorg/jooq/DataType;

+###org/jooq/impl/QOM$JSONObject
@3.16.0
+#$type()Lorg/jooq/DataType;
+#$entries()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$onNull()Lorg/jooq/impl/QOM$JSONOnNull;
+#$returning()Lorg/jooq/DataType;
+#$type(Lorg/jooq/DataType;)Lorg/jooq/impl/QOM$JSONObject;
+#$entries(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$JSONObject;
+#$onNull(Lorg/jooq/impl/QOM$JSONOnNull;)Lorg/jooq/impl/QOM$JSONObject;
+#$returning(Lorg/jooq/DataType;)Lorg/jooq/impl/QOM$JSONObject;
@3.17.0
+#$entries(Ljava/util/Collection;)Lorg/jooq/impl/QOM$JSONObject;
-#$entries(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$JSONObject;

+###org/jooq/impl/QOM$Least
@3.16.0

+###org/jooq/impl/QOM$Left
@3.16.0
+#$string()Lorg/jooq/Field;
+#$length()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Left;
+#$length(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Left;

+###org/jooq/impl/QOM$Ltrim
@3.16.0
+#$string()Lorg/jooq/Field;
+#$characters()Lorg/jooq/Field;
+#$string(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Ltrim;
+#$characters(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Ltrim;

+###org/jooq/impl/QOM$Mul
@3.16.0

+###org/jooq/impl/QOM$NotInList
@3.16.0
+#$field()Lorg/jooq/Field;
+#$list()Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/impl/QOM$NullOrdering
@3.16.0
+#values()[Lorg/jooq/impl/QOM$NullOrdering;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$NullOrdering;

+###org/jooq/impl/QOM$RegrCount
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrCount;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrCount;

+###org/jooq/impl/QOM$RegrIntercept
@3.16.0
+#$y()Lorg/jooq/Field;
+#$x()Lorg/jooq/Field;
+#$y(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrIntercept;
+#$x(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$RegrIntercept;

+###org/jooq/impl/QOM$RowIsNotNull
@3.16.0
+#$field()Lorg/jooq/Row;

+###org/jooq/impl/QOM$RowIsNull
@3.16.0
+#$field()Lorg/jooq/Row;

+###org/jooq/impl/QOM$SelectIsNull
@3.16.0
+#$field()Lorg/jooq/Select;

+###org/jooq/impl/QOM$StartsWithIgnoreCase
@3.16.0
+#$string()Lorg/jooq/Field;
+#$prefix()Lorg/jooq/Field;

+###org/jooq/impl/QOM$StddevPop
@3.16.0
+#$field()Lorg/jooq/Field;
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$StddevPop;

+###org/jooq/impl/QOM$TableNe
@3.16.0

+###org/jooq/impl/QOM$XMLComment
@3.16.0
+#$comment()Lorg/jooq/Field;
+#$comment(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$XMLComment;

+###org/jooq/impl/QOM$XMLConcat
@3.16.0
+#$args()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$args(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$XMLConcat;
@3.17.0
+#$args(Ljava/util/Collection;)Lorg/jooq/impl/QOM$XMLConcat;
-#$args(Lorg/jooq/impl/QOM$UnmodifiableList;)Lorg/jooq/impl/QOM$XMLConcat;

+###org/jooq/impl/QOM$XMLSerialize
@3.16.0
+#$content()Z
+#$value()Lorg/jooq/Field;
+#$type()Lorg/jooq/DataType;
+#$content(Z)Lorg/jooq/impl/QOM$XMLSerialize;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$XMLSerialize;
+#$type(Lorg/jooq/DataType;)Lorg/jooq/impl/QOM$XMLSerialize;

+###org/jooq/impl/QOM
@3.16.0
+#<init>()V
@3.16.6
+#unmodifiable([Lorg/jooq/QueryPart;)Lorg/jooq/impl/QOM$UnmodifiableList;
+#unmodifiable(Ljava/util/List;)Lorg/jooq/impl/QOM$UnmodifiableList;
+#unmodifiable(Ljava/util/Collection;)Lorg/jooq/impl/QOM$UnmodifiableList;

+###org/jooq/impl/SchemaMetaProvider
@3.11.0
+#<init>(Lorg/jooq/Configuration;[Lorg/jooq/Schema;)V
+#provide()Lorg/jooq/Meta;
@3.14.0
+#<init>(Lorg/jooq/Configuration;Ljava/util/Collection;)V

+###org/jooq/InsertOnConflictDoUpdateStep
@3.9.0
+#doUpdate()Lorg/jooq/InsertOnDuplicateSetStep;
+#doNothing()Lorg/jooq/InsertFinalStep;
@3.10.0
+#doNothing()Lorg/jooq/InsertReturningStep;
-#doNothing()Lorg/jooq/InsertFinalStep;

+###org/jooq/JSONEntryValueStep
@3.14.2
+#value(Ljava/lang/Object;)Lorg/jooq/JSONEntry;
+#value(Lorg/jooq/Field;)Lorg/jooq/JSONEntry;
+#value(Lorg/jooq/Select;)Lorg/jooq/JSONEntry;

+###org/jooq/JSONTableColumnForOrdinalityStep
@3.14.0
+#forOrdinality()Lorg/jooq/JSONTableColumnsStep;

+###org/jooq/JSONTableColumnPathStep
@3.14.0
+#path(Ljava/lang/String;)Lorg/jooq/JSONTableColumnsStep;

+###org/jooq/LoaderFieldMapper$LoaderFieldContext
@3.8.0
+#field()Lorg/jooq/Field;
+#index()I

+###org/jooq/LoaderFieldMapper
@3.8.0
+#map(Lorg/jooq/LoaderFieldMapper$LoaderFieldContext;)Lorg/jooq/Field;

+###org/jooq/MetaProvider
@3.11.0
+#provide()Lorg/jooq/Meta;

+###org/jooq/Parser
@3.9.0
+#parse(Ljava/lang/String;)Lorg/jooq/Queries;[deprecated]
+#parseQuery(Ljava/lang/String;)Lorg/jooq/Query;[deprecated]
+#parseTable(Ljava/lang/String;)Lorg/jooq/Table;[deprecated]
+#parseField(Ljava/lang/String;)Lorg/jooq/Field;[deprecated]
+#parseCondition(Ljava/lang/String;)Lorg/jooq/Condition;[deprecated]
+#parseName(Ljava/lang/String;)Lorg/jooq/Name;[deprecated]
@3.10.0
+#parse(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Queries;
+#parseQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
+#parseResultQuery(Ljava/lang/String;)Lorg/jooq/ResultQuery;
+#parseResultQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/ResultQuery;
+#parseTable(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Table;
+#parseField(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Field;
+#parseRow(Ljava/lang/String;)Lorg/jooq/Row;
+#parseRow(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Row;
+#parseCondition(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Condition;
+#parseName(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Name;
@3.11.0
+#parseSelect(Ljava/lang/String;)Lorg/jooq/Select;
+#parseSelect(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Select;
@3.12.0
+#parseStatement(Ljava/lang/String;)Lorg/jooq/Statement;
+#parseStatement(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Statement;

+###org/jooq/ParserCLI$Args
@3.11.0
+#<init>()V

+###org/jooq/ParserCLI
@3.11.0
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/jooq/RecordMapperProvider
@3.1.0
+#provide(Lorg/jooq/RecordType;Ljava/lang/Class;)Lorg/jooq/RecordMapper;

+###org/jooq/RecordQualifier
@3.15.0
+#getPackage()Lorg/jooq/Package;
+#getRecordType()Ljava/lang/Class;
+#getDataType()Lorg/jooq/DataType;
+#newRecord()Lorg/jooq/Record;

+###org/jooq/SelectSeekStep10
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep18
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/SelectSeekStep5
@3.3.0
+#seek(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seek(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekAfter(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;
+#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;
@3.11.0
*#seekBefore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jooq/SelectSeekLimitStep;[deprecated]
*#seekBefore(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSeekLimitStep;[deprecated]

+###org/jooq/TableOptions$OnCommit
@3.13.0
+#values()[Lorg/jooq/TableOptions$OnCommit;
+#valueOf(Ljava/lang/String;)Lorg/jooq/TableOptions$OnCommit;

+###org/jooq/tools/jdbc/DefaultResultSet
@3.1.0
+#<init>(Ljava/sql/ResultSet;)V
+#getDelegate()Ljava/sql/ResultSet;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#next()Z
+#close()V
+#wasNull()Z
+#getString(I)Ljava/lang/String;
+#getBoolean(I)Z
+#getByte(I)B
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getFloat(I)F
+#getDouble(I)D
+#getBigDecimal(II)Ljava/math/BigDecimal;[deprecated]
+#getBytes(I)[B
+#getDate(I)Ljava/sql/Date;
+#getTime(I)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getAsciiStream(I)Ljava/io/InputStream;
+#getUnicodeStream(I)Ljava/io/InputStream;[deprecated]
+#getBinaryStream(I)Ljava/io/InputStream;
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z
+#getByte(Ljava/lang/String;)B
+#getShort(Ljava/lang/String;)S
+#getInt(Ljava/lang/String;)I
+#getLong(Ljava/lang/String;)J
+#getFloat(Ljava/lang/String;)F
+#getDouble(Ljava/lang/String;)D
+#getBigDecimal(Ljava/lang/String;I)Ljava/math/BigDecimal;[deprecated]
+#getBytes(Ljava/lang/String;)[B
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getAsciiStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getUnicodeStream(Ljava/lang/String;)Ljava/io/InputStream;[deprecated]
+#getBinaryStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#getCursorName()Ljava/lang/String;
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#getObject(I)Ljava/lang/Object;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#findColumn(Ljava/lang/String;)I
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#isBeforeFirst()Z
+#isAfterLast()Z
+#isFirst()Z
+#isLast()Z
+#beforeFirst()V
+#afterLast()V
+#first()Z
+#last()Z
+#getRow()I
+#absolute(I)Z
+#relative(I)Z
+#previous()Z
+#setFetchDirection(I)V
+#getFetchDirection()I
+#setFetchSize(I)V
+#getFetchSize()I
+#getType()I
+#getConcurrency()I
+#rowUpdated()Z
+#rowInserted()Z
+#rowDeleted()Z
+#updateNull(I)V
+#updateBoolean(IZ)V
+#updateByte(IB)V
+#updateShort(IS)V
+#updateInt(II)V
+#updateLong(IJ)V
+#updateFloat(IF)V
+#updateDouble(ID)V
+#updateBigDecimal(ILjava/math/BigDecimal;)V
+#updateString(ILjava/lang/String;)V
+#updateBytes(I[B)V
+#updateDate(ILjava/sql/Date;)V
+#updateTime(ILjava/sql/Time;)V
+#updateTimestamp(ILjava/sql/Timestamp;)V
+#updateAsciiStream(ILjava/io/InputStream;I)V
+#updateBinaryStream(ILjava/io/InputStream;I)V
+#updateCharacterStream(ILjava/io/Reader;I)V
+#updateObject(ILjava/lang/Object;I)V
+#updateObject(ILjava/lang/Object;)V
+#updateNull(Ljava/lang/String;)V
+#updateBoolean(Ljava/lang/String;Z)V
+#updateByte(Ljava/lang/String;B)V
+#updateShort(Ljava/lang/String;S)V
+#updateInt(Ljava/lang/String;I)V
+#updateLong(Ljava/lang/String;J)V
+#updateFloat(Ljava/lang/String;F)V
+#updateDouble(Ljava/lang/String;D)V
+#updateBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#updateString(Ljava/lang/String;Ljava/lang/String;)V
+#updateBytes(Ljava/lang/String;[B)V
+#updateDate(Ljava/lang/String;Ljava/sql/Date;)V
+#updateTime(Ljava/lang/String;Ljava/sql/Time;)V
+#updateTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;)V
+#insertRow()V
+#updateRow()V
+#deleteRow()V
+#refreshRow()V
+#cancelRowUpdates()V
+#moveToInsertRow()V
+#moveToCurrentRow()V
+#getStatement()Ljava/sql/Statement;
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getRef(I)Ljava/sql/Ref;
+#getBlob(I)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getArray(I)Ljava/sql/Array;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getURL(I)Ljava/net/URL;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#updateRef(ILjava/sql/Ref;)V
+#updateRef(Ljava/lang/String;Ljava/sql/Ref;)V
+#updateBlob(ILjava/sql/Blob;)V
+#updateBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#updateClob(ILjava/sql/Clob;)V
+#updateClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#updateArray(ILjava/sql/Array;)V
+#updateArray(Ljava/lang/String;Ljava/sql/Array;)V
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#updateRowId(ILjava/sql/RowId;)V
+#updateRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#getHoldability()I
+#isClosed()Z
+#updateNString(ILjava/lang/String;)V
+#updateNString(Ljava/lang/String;Ljava/lang/String;)V
+#updateNClob(ILjava/sql/NClob;)V
+#updateNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;
+#updateSQLXML(ILjava/sql/SQLXML;)V
+#updateSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#getNString(I)Ljava/lang/String;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#updateNCharacterStream(ILjava/io/Reader;J)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateAsciiStream(ILjava/io/InputStream;J)V
+#updateBinaryStream(ILjava/io/InputStream;J)V
+#updateCharacterStream(ILjava/io/Reader;J)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateBlob(ILjava/io/InputStream;J)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateClob(ILjava/io/Reader;J)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNClob(ILjava/io/Reader;J)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNCharacterStream(ILjava/io/Reader;)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateAsciiStream(ILjava/io/InputStream;)V
+#updateBinaryStream(ILjava/io/InputStream;)V
+#updateCharacterStream(ILjava/io/Reader;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateBlob(ILjava/io/InputStream;)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateClob(ILjava/io/Reader;)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;)V
+#updateNClob(ILjava/io/Reader;)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@3.2.0
-#getObject(ILjava/lang/Class;)Ljava/lang/Object;
-#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@3.9.2
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#updateObject(ILjava/lang/Object;Ljava/sql/SQLType;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;I)V
+#updateObject(ILjava/lang/Object;Ljava/sql/SQLType;)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;Ljava/sql/SQLType;)V
@3.10.0
+#<init>(Ljava/sql/ResultSet;Ljava/sql/Statement;)V
@3.15.0
+#<init>(Ljava/sql/ResultSet;Ljava/sql/Statement;Ljava/util/function/Supplier;)V

+###org/jooq/tools/json/JSONParser
@3.3.0
+#<init>()V
+#reset()V
+#reset(Ljava/io/Reader;)V
+#getPosition()I
+#parse(Ljava/lang/String;)Ljava/lang/Object;
+#parse(Ljava/lang/String;Lorg/jooq/tools/json/ContainerFactory;)Ljava/lang/Object;
+#parse(Ljava/io/Reader;)Ljava/lang/Object;
+#parse(Ljava/io/Reader;Lorg/jooq/tools/json/ContainerFactory;)Ljava/lang/Object;
+#parse(Ljava/lang/String;Lorg/jooq/tools/json/ContentHandler;)V
+#parse(Ljava/lang/String;Lorg/jooq/tools/json/ContentHandler;Z)V
+#parse(Ljava/io/Reader;Lorg/jooq/tools/json/ContentHandler;)V
+#parse(Ljava/io/Reader;Lorg/jooq/tools/json/ContentHandler;Z)V

+###org/jooq/TransactionalRunnable
@3.4.0
+#run(Lorg/jooq/Configuration;)V
@3.14.0
+#of([Lorg/jooq/TransactionalRunnable;)Lorg/jooq/TransactionalRunnable;
+#of(Ljava/util/Collection;)Lorg/jooq/TransactionalRunnable;

+###org/jooq/TruncateFinalStep
@3.1.0

+###org/jooq/TruncateIdentityStep
@3.1.0
+#restartIdentity()Lorg/jooq/TruncateCascadeStep;
+#continueIdentity()Lorg/jooq/TruncateCascadeStep;

+###org/jooq/util/mariadb/MariaDBDSL
@3.1.0
+#decode(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#decode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#encode(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#encode(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#aesDecrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#aesDecrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#aesEncrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#aesEncrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#desDecrypt(Ljava/lang/String;)Lorg/jooq/Field;
+#desDecrypt(Lorg/jooq/Field;)Lorg/jooq/Field;
+#desDecrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#desDecrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#desEncrypt(Ljava/lang/String;)Lorg/jooq/Field;
+#desEncrypt(Lorg/jooq/Field;)Lorg/jooq/Field;
+#desEncrypt(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Field;
+#desEncrypt(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Field;
+#compress(Ljava/lang/String;)Lorg/jooq/Field;
+#compress(Lorg/jooq/Field;)Lorg/jooq/Field;
+#uncompress(Ljava/lang/String;)Lorg/jooq/Field;
+#uncompress(Lorg/jooq/Field;)Lorg/jooq/Field;
+#uncompressedLength(Ljava/lang/String;)Lorg/jooq/Field;
+#uncompressedLength(Lorg/jooq/Field;)Lorg/jooq/Field;
+#sha1(Ljava/lang/String;)Lorg/jooq/Field;
+#sha1(Lorg/jooq/Field;)Lorg/jooq/Field;
+#password(Ljava/lang/String;)Lorg/jooq/Field;
+#password(Lorg/jooq/Field;)Lorg/jooq/Field;
+#enumType(Ljava/lang/Class;I)Ljava/lang/Enum;

+###org/jooq/util/xml/jaxb/Index
@3.10.0
+#<init>()V
+#getIndexCatalog()Ljava/lang/String;
+#setIndexCatalog(Ljava/lang/String;)V
+#getIndexSchema()Ljava/lang/String;
+#setIndexSchema(Ljava/lang/String;)V
+#getIndexName()Ljava/lang/String;
+#setIndexName(Ljava/lang/String;)V
+#getTableCatalog()Ljava/lang/String;
+#setTableCatalog(Ljava/lang/String;)V
+#getTableSchema()Ljava/lang/String;
+#setTableSchema(Ljava/lang/String;)V
+#getTableName()Ljava/lang/String;
+#setTableName(Ljava/lang/String;)V
+#isIsUnique()Ljava/lang/Boolean;
+#setIsUnique(Ljava/lang/Boolean;)V
+#withIndexCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Index;
+#withIndexSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Index;
+#withIndexName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Index;
+#withTableCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Index;
+#withTableSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Index;
+#withTableName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Index;
+#withIsUnique(Ljava/lang/Boolean;)Lorg/jooq/util/xml/jaxb/Index;
@3.11.0
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#withComment(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Index;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/util/xml/jaxb/InformationSchema
@3.9.0
+#<init>()V
+#getSchemata()Ljava/util/List;
+#setSchemata(Ljava/util/List;)V
+#getSequences()Ljava/util/List;
+#setSequences(Ljava/util/List;)V
+#getTables()Ljava/util/List;
+#setTables(Ljava/util/List;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)V
+#getTableConstraints()Ljava/util/List;
+#setTableConstraints(Ljava/util/List;)V
+#getKeyColumnUsages()Ljava/util/List;
+#setKeyColumnUsages(Ljava/util/List;)V
+#getReferentialConstraints()Ljava/util/List;
+#setReferentialConstraints(Ljava/util/List;)V
+#withSchemata([Lorg/jooq/util/xml/jaxb/Schema;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withSchemata(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withSchemata(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withSequences([Lorg/jooq/util/xml/jaxb/Sequence;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withSequences(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withSequences(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withTables([Lorg/jooq/util/xml/jaxb/Table;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withTables(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withTables(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withColumns([Lorg/jooq/util/xml/jaxb/Column;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withColumns(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withColumns(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withTableConstraints([Lorg/jooq/util/xml/jaxb/TableConstraint;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withTableConstraints(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withTableConstraints(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withKeyColumnUsages([Lorg/jooq/util/xml/jaxb/KeyColumnUsage;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withKeyColumnUsages(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withKeyColumnUsages(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withReferentialConstraints([Lorg/jooq/util/xml/jaxb/ReferentialConstraint;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withReferentialConstraints(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withReferentialConstraints(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
@3.10.0
+#getIndexes()Ljava/util/List;
+#setIndexes(Ljava/util/List;)V
+#getIndexColumnUsages()Ljava/util/List;
+#setIndexColumnUsages(Ljava/util/List;)V
+#getRoutines()Ljava/util/List;
+#setRoutines(Ljava/util/List;)V
+#getParameters()Ljava/util/List;
+#setParameters(Ljava/util/List;)V
+#withIndexes([Lorg/jooq/util/xml/jaxb/Index;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withIndexes(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withIndexes(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withIndexColumnUsages([Lorg/jooq/util/xml/jaxb/IndexColumnUsage;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withIndexColumnUsages(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withIndexColumnUsages(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withRoutines([Lorg/jooq/util/xml/jaxb/Routine;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withRoutines(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withRoutines(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withParameters([Lorg/jooq/util/xml/jaxb/Parameter;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withParameters(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withParameters(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
@3.11.0
+#getCatalogs()Ljava/util/List;
+#setCatalogs(Ljava/util/List;)V
+#withCatalogs([Lorg/jooq/util/xml/jaxb/Catalog;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withCatalogs(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withCatalogs(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#getElementTypes()Ljava/util/List;
+#setElementTypes(Ljava/util/List;)V
+#withElementTypes([Lorg/jooq/util/xml/jaxb/ElementType;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withElementTypes(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withElementTypes(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
@3.13.0
+#getViews()Ljava/util/List;
+#setViews(Ljava/util/List;)V
+#getCheckConstraints()Ljava/util/List;
+#setCheckConstraints(Ljava/util/List;)V
+#withViews([Lorg/jooq/util/xml/jaxb/View;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withViews(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withViews(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withCheckConstraints([Lorg/jooq/util/xml/jaxb/CheckConstraint;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withCheckConstraints(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withCheckConstraints(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
@3.14.0
+#getDomains()Ljava/util/List;
+#setDomains(Ljava/util/List;)V
+#getDomainConstraints()Ljava/util/List;
+#setDomainConstraints(Ljava/util/List;)V
+#withDomains([Lorg/jooq/util/xml/jaxb/Domain;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withDomains(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withDomains(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withDomainConstraints([Lorg/jooq/util/xml/jaxb/DomainConstraint;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withDomainConstraints(Ljava/util/Collection;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#withDomainConstraints(Ljava/util/List;)Lorg/jooq/util/xml/jaxb/InformationSchema;

+###org/jooq/util/xml/jaxb/RoutineType
@3.10.0
+#values()[Lorg/jooq/util/xml/jaxb/RoutineType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/RoutineType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/RoutineType;

+###org/jooq/util/xml/jaxb/Schema
@3.9.0
+#<init>()V
+#getCatalogName()Ljava/lang/String;
+#setCatalogName(Ljava/lang/String;)V
+#getSchemaName()Ljava/lang/String;
+#setSchemaName(Ljava/lang/String;)V
+#withCatalogName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Schema;
+#withSchemaName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Schema;
@3.11.0
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#withComment(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/Schema;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.12.0
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V

+###org/jooq/util/xml/jaxb/View
@3.13.0
+#<init>()V
+#getTableCatalog()Ljava/lang/String;
+#setTableCatalog(Ljava/lang/String;)V
+#getTableSchema()Ljava/lang/String;
+#setTableSchema(Ljava/lang/String;)V
+#getTableName()Ljava/lang/String;
+#setTableName(Ljava/lang/String;)V
+#getViewDefinition()Ljava/lang/String;
+#setViewDefinition(Ljava/lang/String;)V
+#withTableCatalog(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/View;
+#withTableSchema(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/View;
+#withTableName(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/View;
+#withViewDefinition(Ljava/lang/String;)Lorg/jooq/util/xml/jaxb/View;
+#appendTo(Lorg/jooq/util/jaxb/tools/XMLBuilder;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/jooq/WindowDefinition
@3.3.0
@3.16.0
+#$name()Lorg/jooq/Name;
+#$windowSpecification()Lorg/jooq/WindowSpecification;

+###org/jooq/WindowExcludeStep
@3.12.0
+#excludeCurrentRow()Lorg/jooq/WindowFinalStep;
+#excludeGroup()Lorg/jooq/WindowFinalStep;
+#excludeTies()Lorg/jooq/WindowFinalStep;
+#excludeNoOthers()Lorg/jooq/WindowFinalStep;

+###org/jooq/WithAsStep
@3.4.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep1
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/WithAsStep3
@3.8.0
+#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.14.0
+#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
@3.15.0
+#as(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
+#asNotMaterialized(Lorg/jooq/ResultQuery;)Lorg/jooq/WithStep;
-#as(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;
-#asNotMaterialized(Lorg/jooq/Select;)Lorg/jooq/WithStep;

+###org/jooq/XML
@3.14.0
+#data()Ljava/lang/String;
+#valueOf(Ljava/lang/String;)Lorg/jooq/XML;
+#xml(Ljava/lang/String;)Lorg/jooq/XML;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.15.0
+#xmlOrNull(Ljava/lang/String;)Lorg/jooq/XML;

+###org/jooq/XMLTableColumnForOrdinalityStep
@3.14.0
+#forOrdinality()Lorg/jooq/XMLTableColumnsStep;

+###org/jooq/Meta$Predicate
@3.14.0
+#test(Lorg/jooq/QueryPart;)Z
+#test(Ljava/lang/Object;)Z
@3.15.0
-###org/jooq/Meta$Predicate

+###org/jooq/FilePattern$Loader
@3.13.0
+#load(Lorg/jooq/Source;)V
@3.15.0
-###org/jooq/FilePattern$Loader

+###org/jooq/impl/DefaultVersionProvider
@3.13.0
+#<init>(Lorg/jooq/Configuration;[Lorg/jooq/Source;)V
+#provide()Lorg/jooq/Versions;
@3.15.0
-###org/jooq/impl/DefaultVersionProvider

+###org/jooq/VersionProvider
@3.13.0
+#provide()Lorg/jooq/Versions;
@3.15.0
-###org/jooq/VersionProvider

+###org/jooq/api/annotation/Transition
@3.1.0
+#name()Ljava/lang/String;
+#args()[Ljava/lang/String;
+#from()Ljava/lang/String;
+#to()Ljava/lang/String;
@3.12.0
-###org/jooq/api/annotation/Transition

+###org/jooq/AlterSequenceRestartStep
@3.4.0
+#restart()Lorg/jooq/AlterSequenceFinalStep;
+#restartWith(Ljava/lang/Number;)Lorg/jooq/AlterSequenceFinalStep;
@3.12.0
+#restartWith(Lorg/jooq/Field;)Lorg/jooq/AlterSequenceFinalStep;
@3.13.0
-###org/jooq/AlterSequenceRestartStep

+###org/jooq/api/annotation/State
@3.1.0
+#name()Ljava/lang/String;
+#aliases()[Ljava/lang/String;
+#terminal()Z
@3.12.0
-###org/jooq/api/annotation/State

+###org/jooq/impl/KeywordImpl
@3.2.0-alpha-01
+#toSQL(Lorg/jooq/RenderContext;)V
+#bind(Lorg/jooq/BindContext;)V
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#declaresTables()Z
+#declaresFields()Z
@3.3.0
+#declaresWindows()Z
@3.4.0
+#accept(Lorg/jooq/Context;)V
+#declaresCTE()Z
@3.4.6
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.5.2
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.6.1
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.7.0
+#generatesCast()Z
@3.8.0
-#bind(Lorg/jooq/BindContext;)V[deprecated]
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.12.0
-###org/jooq/impl/KeywordImpl

+###org/jooq/impl/NullIf
@3.3.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#mul(Lorg/jooq/Field;)Lorg/jooq/Field;
+#add(Lorg/jooq/Field;)Lorg/jooq/Field;
+#as(Ljava/lang/String;)Lorg/jooq/Field;
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
+#toString()Ljava/lang/String;
+#declaresWindows()Z
+#declaresTables()Z
+#declaresFields()Z
@3.4.0
+#declaresCTE()Z
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
@3.4.6
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.5.2
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.6.1
*#bind(Lorg/jooq/BindContext;)V[deprecated]
*#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.7.0
+#generatesCast()Z
@3.8.0
-#bind(Lorg/jooq/BindContext;)V[deprecated]
-#toSQL(Lorg/jooq/RenderContext;)V[deprecated]
@3.10.0
+#as(Lorg/jooq/Name;)Lorg/jooq/Field;
-#as(Ljava/lang/String;)Lorg/jooq/Field;
@3.12.0
-###org/jooq/impl/NullIf

+###org/jooq/SelectConnectByAfterStartWithConditionStep
@3.10.0
+#and(Lorg/jooq/Condition;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#and(Lorg/jooq/Field;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#and(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;[deprecated]
+#and(Lorg/jooq/SQL;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#and(Ljava/lang/String;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#and(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#and(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
@3.14.0
-###org/jooq/SelectConnectByAfterStartWithConditionStep

+###org/jooq/impl/Iif
@3.11.0
+#mul(Lorg/jooq/Field;)Lorg/jooq/Field;
+#add(Lorg/jooq/Field;)Lorg/jooq/Field;
+#as(Lorg/jooq/Name;)Lorg/jooq/Field;
+#clauses(Lorg/jooq/Context;)[Lorg/jooq/Clause;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#generatesCast()Z
+#declaresCTE()Z
+#declaresWindows()Z
+#declaresTables()Z
+#declaresFields()Z
@3.12.0
-###org/jooq/impl/Iif

+###org/jooq/SelectConnectByAfterStartWithStep
@3.10.0
+#connectBy(Lorg/jooq/Condition;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectBy(Lorg/jooq/Field;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectBy(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;[deprecated]
+#connectBy(Lorg/jooq/SQL;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectBy(Ljava/lang/String;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectBy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectBy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectByNoCycle(Lorg/jooq/Condition;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectByNoCycle(Lorg/jooq/Field;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectByNoCycle(Ljava/lang/Boolean;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;[deprecated]
+#connectByNoCycle(Lorg/jooq/SQL;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectByNoCycle(Ljava/lang/String;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectByNoCycle(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
+#connectByNoCycle(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectConnectByAfterStartWithConditionStep;
@3.14.0
-###org/jooq/SelectConnectByAfterStartWithStep

+###org/jooq/Template
@3.2.0-alpha-01
+#transform([Ljava/lang/Object;)Lorg/jooq/QueryPart;
@3.7.0
-###org/jooq/Template

+###org/jooq/impl/FactoryProxy
@2.3.0
+#<init>()V
+#setDialect(Lorg/jooq/SQLDialect;)V
+#setSettings(Lorg/jooq/conf/Settings;)V
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSource()Ljavax/sql/DataSource;
+#getDialect()Lorg/jooq/SQLDialect;
+#getSchemaMapping()Lorg/jooq/SchemaMapping;[deprecated]
+#getSettings()Lorg/jooq/conf/Settings;
+#getConnection()Ljava/sql/Connection;
+#setConnection(Ljava/sql/Connection;)V
+#getData()Ljava/util/Map;
+#getData(Ljava/lang/String;)Ljava/lang/Object;
+#setData(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#loadInto(Lorg/jooq/Table;)Lorg/jooq/LoaderOptionsStep;
+#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderNamedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderInlined(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#attach([Lorg/jooq/Attachable;)V
+#attach(Ljava/util/Collection;)V
+#query(Ljava/lang/String;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
+#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SimpleSelectWhereStep;
+#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectZero()Lorg/jooq/SelectSelectStep;
+#selectOne()Lorg/jooq/SelectSelectStep;
+#selectCount()Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectQuery()Lorg/jooq/SelectQuery;
+#selectQuery(Lorg/jooq/TableLike;)Lorg/jooq/SimpleSelectQuery;
+#insertQuery(Lorg/jooq/Table;)Lorg/jooq/InsertQuery;
+#insertInto(Lorg/jooq/Table;)Lorg/jooq/InsertSetStep;
+#insertInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep;
+#insertInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/InsertValuesStep;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Select;)Lorg/jooq/Insert;[deprecated]
+#updateQuery(Lorg/jooq/Table;)Lorg/jooq/UpdateQuery;
+#update(Lorg/jooq/Table;)Lorg/jooq/UpdateSetStep;
+#mergeInto(Lorg/jooq/Table;)Lorg/jooq/MergeUsingStep;
+#deleteQuery(Lorg/jooq/Table;)Lorg/jooq/DeleteQuery;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#batch([Lorg/jooq/Query;)Lorg/jooq/Batch;
+#batch(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batch(Lorg/jooq/Query;)Lorg/jooq/BatchBindStep;
+#batchStore([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#truncate(Lorg/jooq/Table;)Lorg/jooq/Truncate;
+#newRecord(Lorg/jooq/UDT;)Lorg/jooq/UDTRecord;
+#newRecord(Lorg/jooq/Table;)Lorg/jooq/TableRecord;
+#newRecord(Lorg/jooq/Table;Ljava/lang/Object;)Lorg/jooq/TableRecord;
+#fetch(Ljava/sql/ResultSet;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Result;
+#fetchLazy(Ljava/lang/String;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Cursor;
+#fetchMany(Ljava/lang/String;)Ljava/util/List;
+#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#fetchOne(Ljava/lang/String;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
+#execute(Ljava/lang/String;)I
+#execute(Ljava/lang/String;[Ljava/lang/Object;)I
+#resultQuery(Ljava/lang/String;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/ResultQuery;
+#lastID()Ljava/math/BigInteger;
+#nextval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#currval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#use(Lorg/jooq/Schema;)I
+#use(Ljava/lang/String;)I
+#fetch(Lorg/jooq/Table;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Result;
+#fetchOne(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;)Lorg/jooq/Record;
+#executeInsert(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I
+#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I
+#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I
+#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeDelete(Lorg/jooq/Table;)I
+#executeDelete(Lorg/jooq/Table;Lorg/jooq/Condition;)I
+#executeDeleteOne(Lorg/jooq/Table;)I
+#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Condition;)I
@2.4.0
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
+#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep;
+#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStep;
+#batchStore(Ljava/util/Collection;)Lorg/jooq/Batch;
+#fetchFromCSV(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;C)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Result;
+#fetchLazy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Cursor;
+#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
+#fetchOne(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
+#execute(Ljava/lang/String;[Lorg/jooq/QueryPart;)I
+#resultQuery(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/ResultQuery;
+#getTransactionIsolation()I
+#setTransactionIsolation(I)V
+#getHoldability()I
+#setHoldability(I)V
+#getAutoCommit()Z
+#setAutoCommit(Z)V
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#setSavepoint()Ljava/sql/Savepoint;
+#rollback(Ljava/sql/Savepoint;)V
+#rollback()V
+#commit()V
@2.5.0
+#fetchLazy(Ljava/sql/ResultSet;)Lorg/jooq/Cursor;
*#executeInsert(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
+#executeInsert(Lorg/jooq/TableRecord;)I
*#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
*#executeUpdate(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I[deprecated]
*#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;)I[deprecated]
*#executeUpdateOne(Lorg/jooq/Table;Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I[deprecated]
+#executeUpdate(Lorg/jooq/UpdatableRecord;)I
+#executeUpdate(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeDelete(Lorg/jooq/UpdatableRecord;)I
+#executeDelete(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
*#executeDelete(Lorg/jooq/Table;)I[deprecated]
*#executeDelete(Lorg/jooq/Table;Lorg/jooq/Condition;)I[deprecated]
*#executeDeleteOne(Lorg/jooq/Table;)I[deprecated]
*#executeDeleteOne(Lorg/jooq/Table;Lorg/jooq/Condition;)I[deprecated]
@3.0.0-RC1
-###org/jooq/impl/FactoryProxy

+###org/jooq/MergeKeyStep
@2.4.0
+#key([Lorg/jooq/Field;)Lorg/jooq/MergeValuesStep;
+#key(Ljava/util/Collection;)Lorg/jooq/MergeValuesStep;
@3.0.0-RC1
-###org/jooq/MergeKeyStep

+###org/jooq/MergeValuesStep
@2.4.0
+#values([Ljava/lang/Object;)Lorg/jooq/Merge;
+#values([Lorg/jooq/Field;)Lorg/jooq/Merge;
+#values(Ljava/util/Collection;)Lorg/jooq/Merge;
+#select(Lorg/jooq/Select;)Lorg/jooq/Merge;
@3.0.0-RC1
-###org/jooq/MergeValuesStep

+###org/jooq/util/cubrid/CUBRIDFactory
@2.2.0
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
+#<init>(Ljava/sql/Connection;)V
@2.3.0
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
+#incr(Lorg/jooq/Field;)Lorg/jooq/Field;
@2.5.0
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;)V
@2.6.0
+#decr(Lorg/jooq/Field;)Lorg/jooq/Field;
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/cubrid/CUBRIDFactory

+###org/jooq/util/firebird/FirebirdFactory
@2.5.0
+#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
+#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
+#<init>(Ljava/sql/Connection;)V
+#<init>(Ljavax/sql/DataSource;)V
+#<init>(Lorg/jooq/conf/Settings;)V
+#<init>()V
@3.0.0-RC1
-#<init>(Ljava/sql/Connection;Lorg/jooq/SchemaMapping;)V[deprecated]
-#<init>(Ljava/sql/Connection;Lorg/jooq/conf/Settings;)V
-#<init>(Ljavax/sql/DataSource;Lorg/jooq/conf/Settings;)V
-#<init>(Ljava/sql/Connection;)V
-#<init>(Ljavax/sql/DataSource;)V
-#<init>(Lorg/jooq/conf/Settings;)V
-#<init>()V
@3.0.0-RC3
-###org/jooq/util/firebird/FirebirdFactory

+###org/jooq/util/postgres/PGIntervalConverter
@2.2.0
+#<init>()V
+#toPGInterval(Lorg/jooq/types/DayToSecond;)Ljava/lang/Object;
+#toPGInterval(Lorg/jooq/types/YearToMonth;)Ljava/lang/Object;
+#toDayToSecond(Ljava/lang/Object;)Lorg/jooq/types/DayToSecond;
+#toYearToMonth(Ljava/lang/Object;)Lorg/jooq/types/YearToMonth;
@2.3.0
*#toPGInterval(Lorg/jooq/types/DayToSecond;)Ljava/lang/Object;[deprecated]
*#toPGInterval(Lorg/jooq/types/YearToMonth;)Ljava/lang/Object;[deprecated]
*#toDayToSecond(Ljava/lang/Object;)Lorg/jooq/types/DayToSecond;[deprecated]
*#toYearToMonth(Ljava/lang/Object;)Lorg/jooq/types/YearToMonth;[deprecated]
@3.0.0-RC1
-###org/jooq/util/postgres/PGIntervalConverter

+###org/jooq/impl/AbstractStoredProcedure
@1.5.7
+#getOutParameters()Ljava/util/List;
+#getParameters()Ljava/util/List;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.0
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
+#execute(Lorg/jooq/Configuration;)I
@1.6.4
+#declaresTables()Z
+#declaresFields()Z
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.0.0-RC1
-###org/jooq/impl/AbstractStoredProcedure

+###org/jooq/impl/FalseCondition
@1.5.7
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#getAttachables()Ljava/util/List;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
+#attach(Lorg/jooq/Configuration;)V
@1.6.4
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
+#declaresTables()Z
+#declaresFields()Z
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.6
-###org/jooq/impl/FalseCondition

+###org/jooq/impl/JooqLogger
@1.5.7
+#<init>()V
+#getLogger(Ljava/lang/Class;)Lorg/jooq/impl/JooqLogger;
+#isTraceEnabled()Z
+#trace(Ljava/lang/Object;)V
+#trace(Ljava/lang/Object;Ljava/lang/Object;)V
+#trace(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#trace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/Object;)V
+#debug(Ljava/lang/Object;Ljava/lang/Object;)V
+#debug(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#debug(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/Object;)V
+#info(Ljava/lang/Object;Ljava/lang/Object;)V
+#info(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#info(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#warn(Ljava/lang/Object;)V
+#warn(Ljava/lang/Object;Ljava/lang/Object;)V
+#warn(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#warn(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#error(Ljava/lang/Object;)V
+#error(Ljava/lang/Object;Ljava/lang/Object;)V
+#error(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#error(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V
@2.0.0-RC1
-###org/jooq/impl/JooqLogger

+###org/jooq/impl/ParameterImpl
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/DataType;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/DataType;)V
+#getAttachables()Ljava/util/List;
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/DataType;)V[deprecated]
*#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/DataType;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/jooq/DataType;)V
+#attach(Lorg/jooq/Configuration;)V
@1.6.4
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
+#declaresTables()Z
+#declaresFields()Z
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.6.8
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/DataType;)V[deprecated]
-#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/DataType;)V[deprecated]
@2.0.0-RC1
-###org/jooq/impl/ParameterImpl

+###org/jooq/impl/RecordImpl
@1.5.7
+#<init>(Lorg/jooq/FieldProvider;Lorg/jooq/Configuration;)V
+#<init>(Lorg/jooq/FieldProvider;)V
@1.6.2
+#hashCode()I
@1.6.4
*#<init>(Lorg/jooq/FieldProvider;Lorg/jooq/Configuration;)V[deprecated]
*#<init>(Lorg/jooq/FieldProvider;)V[deprecated]
@1.6.7
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
@2.0.0-RC1
-###org/jooq/impl/RecordImpl

+###org/jooq/impl/StopWatch
@1.5.8
+#<init>()V
+#splitTrace(Ljava/lang/String;)V
+#splitDebug(Ljava/lang/String;)V
+#splitInfo(Ljava/lang/String;)V
@2.0.0-RC1
-###org/jooq/impl/StopWatch

+###org/jooq/impl/StoredFunctionImpl
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/DataType;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/DataType;)V
+#getReturnValue()Ljava/lang/Object;
+#asField()Lorg/jooq/Field;
+#asField(Ljava/lang/String;)Lorg/jooq/Field;
+#execute()I
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#getParameters()Ljava/util/List;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.5.9
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Package;Lorg/jooq/DataType;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Package;Lorg/jooq/DataType;)V
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
+#execute(Lorg/jooq/Configuration;)I
@1.6.4
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
+#declaresTables()Z
+#declaresFields()Z
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.0.0-RC1
-###org/jooq/impl/StoredFunctionImpl

+###org/jooq/impl/StoredProcedureImpl
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V
+#execute()I
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.5.8
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.5.9
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Package;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;Lorg/jooq/Package;)V
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.4
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@2.0.0-RC1
-###org/jooq/impl/StoredProcedureImpl

+###org/jooq/impl/StringUtils
@1.5.7
+#defaultString(Ljava/lang/String;)Ljava/lang/String;
+#isEmpty(Ljava/lang/String;)Z
+#isBlank(Ljava/lang/String;)Z
+#countMatches(Ljava/lang/String;Ljava/lang/String;)I
+#rightPad(Ljava/lang/String;I)Ljava/lang/String;
+#rightPad(Ljava/lang/String;IC)Ljava/lang/String;
+#rightPad(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
@1.5.9
+#abbreviate(Ljava/lang/String;I)Ljava/lang/String;
+#abbreviate(Ljava/lang/String;II)Ljava/lang/String;
@1.6.2
+#leftPad(Ljava/lang/String;I)Ljava/lang/String;
+#leftPad(Ljava/lang/String;IC)Ljava/lang/String;
+#leftPad(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
+#containsAny(Ljava/lang/String;[C)Z
+#replaceEach(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
@1.6.4
+#toCamelCase(Ljava/lang/String;)Ljava/lang/String;
+#toCamelCaseLC(Ljava/lang/String;)Ljava/lang/String;
@2.0.0-RC1
-###org/jooq/impl/StringUtils

+###org/jooq/impl/TableFieldImpl
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Ljava/lang/Class;Lorg/jooq/Table;)V[deprecated]
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Ljava/lang/Class;Lorg/jooq/Table;)V[deprecated]
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/Table;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/Table;)V
+#getAttachables()Ljava/util/List;
+#getTable()Lorg/jooq/Table;
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#isNullLiteral()Z
+#concatenate(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#multiply(Lorg/jooq/Field;)Lorg/jooq/Field;
+#add(Lorg/jooq/Field;)Lorg/jooq/Field;
+#as(Ljava/lang/String;)Lorg/jooq/Field;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.5.8
+#mul(Lorg/jooq/Field;)Lorg/jooq/Field;
+#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
-#concatenate(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
-#multiply(Lorg/jooq/Field;)Lorg/jooq/Field;
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/Table;)V[deprecated]
*#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/Table;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/Table;)V
+#attach(Lorg/jooq/Configuration;)V
-#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
@1.6.4
+#toSQL(Lorg/jooq/RenderContext;)V
+#bind(Lorg/jooq/BindContext;)V
+#declaresTables()Z
+#declaresFields()Z
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.6.8
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Ljava/lang/Class;Lorg/jooq/Table;)V[deprecated]
-#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Ljava/lang/Class;Lorg/jooq/Table;)V[deprecated]
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/Table;)V[deprecated]
-#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/Table;)V[deprecated]
@2.0.0-RC1
-###org/jooq/impl/TableFieldImpl

+###org/jooq/impl/TrueCondition
@1.5.7
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#getAttachables()Ljava/util/List;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
+#attach(Lorg/jooq/Configuration;)V
@1.6.4
+#bind(Lorg/jooq/BindContext;)V
+#toSQL(Lorg/jooq/RenderContext;)V
+#declaresTables()Z
+#declaresFields()Z
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.6
-###org/jooq/impl/TrueCondition

+###org/jooq/impl/UDTFieldImpl
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/UDT;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/UDT;)V
+#getAttachables()Ljava/util/List;
+#getUDT()Lorg/jooq/UDT;
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#isNullLiteral()Z
+#concatenate(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
+#multiply(Lorg/jooq/Field;)Lorg/jooq/Field;
+#add(Lorg/jooq/Field;)Lorg/jooq/Field;
+#as(Ljava/lang/String;)Lorg/jooq/Field;
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.5.8
+#mul(Lorg/jooq/Field;)Lorg/jooq/Field;
+#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
-#concatenate(Lorg/jooq/Field;[Lorg/jooq/Field;)Lorg/jooq/Field;
-#multiply(Lorg/jooq/Field;)Lorg/jooq/Field;
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
+#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.6.1
*#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/UDT;)V[deprecated]
*#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/UDT;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/UDT;)V
+#attach(Lorg/jooq/Configuration;)V
-#concat([Lorg/jooq/Field;)Lorg/jooq/Field;
@1.6.4
+#toSQL(Lorg/jooq/RenderContext;)V
+#bind(Lorg/jooq/BindContext;)V
+#declaresTables()Z
+#declaresFields()Z
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bindDeclaration(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.7
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.6.8
-#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/UDT;)V[deprecated]
-#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/DataType;Lorg/jooq/UDT;)V[deprecated]
@2.0.0-RC1
-###org/jooq/impl/UDTFieldImpl

+###org/jooq/InsertSelectQuery
@1.5.7
@1.6.8
-###org/jooq/InsertSelectQuery

+###org/jooq/SQLDialectNotSupportedException
@1.5.7
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
@2.0.0-RC1
-###org/jooq/SQLDialectNotSupportedException

+###org/jooq/StoredFunction
@1.5.7
+#getReturnValue()Ljava/lang/Object;
@2.0.0-RC1
-###org/jooq/StoredFunction

+###org/jooq/StoredObject
@1.5.7
+#getParameters()Ljava/util/List;
+#execute(Ljava/sql/Connection;)I
+#execute()I
@1.5.9
+#getPackage()Lorg/jooq/Package;
@1.6.1
*#execute(Ljava/sql/Connection;)I[deprecated]
+#execute(Lorg/jooq/Configuration;)I
@1.6.8
-#execute(Ljava/sql/Connection;)I[deprecated]
@2.0.0-RC1
-###org/jooq/StoredObject

+###org/jooq/StoredProcedure
@1.5.7
+#getOutParameters()Ljava/util/List;
+#getInParameters()Ljava/util/List;
@2.0.0-RC1
-###org/jooq/StoredProcedure

+###org/jooq/util/postgres/PostgresSingleUDTOutParameterProcedure
@1.5.7
+#<init>(Lorg/jooq/SQLDialect;Ljava/lang/String;Lorg/jooq/Schema;)V
+#<init>(Lorg/jooq/Configuration;Ljava/lang/String;Lorg/jooq/Schema;)V
+#execute()I
+#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
+#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@1.5.8
+#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.0
+#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#bind(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
-#toSQLDeclaration(Lorg/jooq/Configuration;Z)Ljava/lang/String;
@1.6.4
+#toSQL(Lorg/jooq/RenderContext;)V
+#bind(Lorg/jooq/BindContext;)V
-#toSQLReference(Lorg/jooq/Configuration;Z)Ljava/lang/String;
-#bindReference(Lorg/jooq/Configuration;Ljava/sql/PreparedStatement;I)I
@2.0.0-RC1
-###org/jooq/util/postgres/PostgresSingleUDTOutParameterProcedure

+###org/jooq/impl/QOM$Asinh
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Asinh;

+###org/jooq/impl/QOM$CreateTable
@3.17.0
+#$table()Lorg/jooq/Table;
+#$temporary()Z
+#$ifNotExists()Z
+#$tableElements()Lorg/jooq/impl/QOM$UnmodifiableList;
+#$select()Lorg/jooq/Select;
+#$withData()Lorg/jooq/impl/QOM$WithOrWithoutData;
+#$onCommit()Lorg/jooq/impl/QOM$TableCommitAction;
+#$comment()Lorg/jooq/Comment;
+#$storage()Lorg/jooq/SQL;
+#$table(Lorg/jooq/Table;)Lorg/jooq/impl/QOM$CreateTable;
+#$temporary(Z)Lorg/jooq/impl/QOM$CreateTable;
+#$ifNotExists(Z)Lorg/jooq/impl/QOM$CreateTable;
+#$tableElements(Ljava/util/Collection;)Lorg/jooq/impl/QOM$CreateTable;
+#$select(Lorg/jooq/Select;)Lorg/jooq/impl/QOM$CreateTable;
+#$withData(Lorg/jooq/impl/QOM$WithOrWithoutData;)Lorg/jooq/impl/QOM$CreateTable;
+#$onCommit(Lorg/jooq/impl/QOM$TableCommitAction;)Lorg/jooq/impl/QOM$CreateTable;
+#$comment(Lorg/jooq/Comment;)Lorg/jooq/impl/QOM$CreateTable;
+#$storage(Lorg/jooq/SQL;)Lorg/jooq/impl/QOM$CreateTable;

+###org/jooq/TableElement
@3.17.0

+###org/jooq/GeneratorStatementType
@3.17.0
+#values()[Lorg/jooq/GeneratorStatementType;
+#valueOf(Ljava/lang/String;)Lorg/jooq/GeneratorStatementType;

+###org/jooq/impl/QOM$Atanh
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Atanh;

+###org/jooq/impl/QOM$BitNandAgg
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$BitNandAgg;

+###org/jooq/Null
@3.17.0

+###org/jooq/FieldOrRowOrSelect
@3.17.0

+###org/jooq/impl/QOM$Excluded
@3.17.0
+#$field()Lorg/jooq/Field;
+#$field(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Excluded;

+###org/jooq/impl/QOM$GenerationLocation
@3.17.0
+#values()[Lorg/jooq/impl/QOM$GenerationLocation;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$GenerationLocation;

+###org/jooq/impl/QOM$Ln
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Ln;

+###org/jooq/util/postgres/PGInterval
@3.17.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(IIIIID)V
+#setValue(Ljava/lang/String;)V
+#setValue(IIIIID)V
+#getValue()Ljava/lang/String;
+#getYears()I
+#setYears(I)V
+#getMonths()I
+#setMonths(I)V
+#getDays()I
+#setDays(I)V
+#getHours()I
+#setHours(I)V
+#getMinutes()I
+#setMinutes(I)V
+#getSeconds()D
+#getWholeSeconds()I
+#getMicroSeconds()I
+#setSeconds(D)V
+#add(Ljava/util/Calendar;)V
+#add(Ljava/util/Date;)V
+#add(Lorg/jooq/util/postgres/PGInterval;)V
+#scale(I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Ljava/lang/Object;

+###org/jooq/Generator
@3.17.0
+#supports(Lorg/jooq/GeneratorStatementType;)Z

+###org/jooq/GeneratorContext
@3.17.0
+#renderTime()Ljava/time/Instant;
+#table()Lorg/jooq/Table;
+#field()Lorg/jooq/Field;
+#statementType()Lorg/jooq/GeneratorStatementType;

+###org/jooq/impl/QOM$BitXNorAgg
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$BitXNorAgg;

+###org/jooq/CloseableResultQuery
@3.17.0
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/CloseableResultQuery;
+#bind(ILjava/lang/Object;)Lorg/jooq/CloseableResultQuery;
+#poolable(Z)Lorg/jooq/CloseableResultQuery;
+#queryTimeout(I)Lorg/jooq/CloseableResultQuery;
+#keepStatement(Z)Lorg/jooq/CloseableResultQuery;
+#maxRows(I)Lorg/jooq/CloseableResultQuery;
+#fetchSize(I)Lorg/jooq/CloseableResultQuery;
+#resultSetConcurrency(I)Lorg/jooq/CloseableResultQuery;
+#resultSetType(I)Lorg/jooq/CloseableResultQuery;
+#resultSetHoldability(I)Lorg/jooq/CloseableResultQuery;
+#intern([Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;[deprecated]
+#intern([I)Lorg/jooq/CloseableResultQuery;[deprecated]
+#intern([Ljava/lang/String;)Lorg/jooq/CloseableResultQuery;[deprecated]
+#intern([Lorg/jooq/Name;)Lorg/jooq/CloseableResultQuery;[deprecated]
+#coerce(Lorg/jooq/Table;)Lorg/jooq/CloseableResultQuery;
+#coerce([Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Ljava/util/Collection;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/CloseableResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Ljava/util/Collection;)Lorg/jooq/ResultQuery;
+#coerce([Lorg/jooq/Field;)Lorg/jooq/ResultQuery;
+#coerce(Lorg/jooq/Table;)Lorg/jooq/ResultQuery;
+#intern([Lorg/jooq/Name;)Lorg/jooq/ResultQuery;[deprecated]
+#intern([Ljava/lang/String;)Lorg/jooq/ResultQuery;[deprecated]
+#intern([I)Lorg/jooq/ResultQuery;[deprecated]
+#intern([Lorg/jooq/Field;)Lorg/jooq/ResultQuery;[deprecated]
+#resultSetHoldability(I)Lorg/jooq/ResultQuery;
+#resultSetType(I)Lorg/jooq/ResultQuery;
+#resultSetConcurrency(I)Lorg/jooq/ResultQuery;
+#fetchSize(I)Lorg/jooq/ResultQuery;
+#maxRows(I)Lorg/jooq/ResultQuery;
+#queryTimeout(I)Lorg/jooq/ResultQuery;
+#poolable(Z)Lorg/jooq/ResultQuery;
+#bind(ILjava/lang/Object;)Lorg/jooq/ResultQuery;
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/ResultQuery;
+#keepStatement(Z)Lorg/jooq/CloseableQuery;
+#queryTimeout(I)Lorg/jooq/Query;
+#poolable(Z)Lorg/jooq/Query;
+#bind(ILjava/lang/Object;)Lorg/jooq/Query;
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/Query;
+#queryTimeout(I)Lorg/jooq/CloseableQuery;
+#poolable(Z)Lorg/jooq/CloseableQuery;
+#bind(ILjava/lang/Object;)Lorg/jooq/CloseableQuery;
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/CloseableQuery;

+###org/jooq/CreateTableElementListStep
@3.17.0
+#tableElements([Lorg/jooq/TableElement;)Lorg/jooq/CreateTableElementListStep;
+#tableElements(Ljava/util/Collection;)Lorg/jooq/CreateTableElementListStep;
+#columns([Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#columns([Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#columns([Lorg/jooq/Field;)Lorg/jooq/CreateTableElementListStep;
+#columns(Ljava/util/Collection;)Lorg/jooq/CreateTableElementListStep;
+#column(Lorg/jooq/Field;)Lorg/jooq/CreateTableElementListStep;
+#column(Ljava/lang/String;Lorg/jooq/DataType;)Lorg/jooq/CreateTableElementListStep;
+#column(Lorg/jooq/Name;Lorg/jooq/DataType;)Lorg/jooq/CreateTableElementListStep;
+#column(Lorg/jooq/Field;Lorg/jooq/DataType;)Lorg/jooq/CreateTableElementListStep;
+#constraints([Lorg/jooq/Constraint;)Lorg/jooq/CreateTableElementListStep;
+#constraints(Ljava/util/Collection;)Lorg/jooq/CreateTableElementListStep;
+#constraint(Lorg/jooq/Constraint;)Lorg/jooq/CreateTableElementListStep;
+#primaryKey([Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#primaryKey([Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#primaryKey([Lorg/jooq/Field;)Lorg/jooq/CreateTableElementListStep;
+#primaryKey(Ljava/util/Collection;)Lorg/jooq/CreateTableElementListStep;
+#unique([Ljava/lang/String;)Lorg/jooq/CreateTableElementListStep;
+#unique([Lorg/jooq/Name;)Lorg/jooq/CreateTableElementListStep;
+#unique([Lorg/jooq/Field;)Lorg/jooq/CreateTableElementListStep;
+#unique(Ljava/util/Collection;)Lorg/jooq/CreateTableElementListStep;
+#check(Lorg/jooq/Condition;)Lorg/jooq/CreateTableElementListStep;
+#indexes([Lorg/jooq/Index;)Lorg/jooq/CreateTableElementListStep;
+#indexes(Ljava/util/Collection;)Lorg/jooq/CreateTableElementListStep;
+#index(Lorg/jooq/Index;)Lorg/jooq/CreateTableElementListStep;

+###org/jooq/impl/QOM$RowAsField
@3.17.0
+#$row()Lorg/jooq/Row;

+###org/jooq/impl/QOM$TableAsField
@3.17.0
+#$table()Lorg/jooq/Table;

+###org/jooq/util/postgres/PGobject
@3.17.0
+#<init>()V
+#setType(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#isNull()Z
+#equals(Ljava/lang/Object;)Z
+#clone()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#hashCode()I

+###org/jooq/BindingScope
@3.17.0

+###org/jooq/impl/QOM$BitNorAgg
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$BitNorAgg;

+###org/jooq/impl/QOM$WithOrWithoutData
@3.17.0
+#values()[Lorg/jooq/impl/QOM$WithOrWithoutData;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$WithOrWithoutData;

+###org/jooq/CloseableQuery
@3.17.0
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/CloseableQuery;
+#bind(ILjava/lang/Object;)Lorg/jooq/CloseableQuery;
+#poolable(Z)Lorg/jooq/CloseableQuery;
+#queryTimeout(I)Lorg/jooq/CloseableQuery;
+#keepStatement(Z)Lorg/jooq/CloseableQuery;
+#close()V
+#queryTimeout(I)Lorg/jooq/Query;
+#poolable(Z)Lorg/jooq/Query;
+#bind(ILjava/lang/Object;)Lorg/jooq/Query;
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lorg/jooq/Query;

+###org/jooq/impl/QOM$Acosh
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Acosh;

+###org/jooq/ColumnElement
@3.17.0

+###org/jooq/impl/QOM$Acoth
@3.17.0
+#$value()Lorg/jooq/Field;
+#$value(Lorg/jooq/Field;)Lorg/jooq/impl/QOM$Acoth;

+###org/jooq/impl/QOM$EmptyGroupingSet
@3.17.0

+###org/jooq/impl/QOM$TableCommitAction
@3.17.0
+#values()[Lorg/jooq/impl/QOM$TableCommitAction;
+#valueOf(Ljava/lang/String;)Lorg/jooq/impl/QOM$TableCommitAction;

+###org/jooq/impl/XMLtoJAXBConverter
@3.17.0
+#<init>(Ljava/lang/Class;)V
+#from(Lorg/jooq/XML;)Ljava/lang/Object;
+#to(Ljava/lang/Object;)Lorg/jooq/XML;
+#to(Ljava/lang/Object;)Ljava/lang/Object;
+#from(Ljava/lang/Object;)Ljava/lang/Object;

+###org/jooq/TransactionalPublishable
@3.17.0
+#run(Lorg/jooq/Configuration;)Lorg/reactivestreams/Publisher;

+###org/jooq/tools/r2dbc/LoggingStatement
@3.16.13
+#<init>(Lio/r2dbc/spi/Statement;)V
+#add()Lio/r2dbc/spi/Statement;
+#bind(ILjava/lang/Object;)Lio/r2dbc/spi/Statement;
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lio/r2dbc/spi/Statement;
+#bindNull(ILjava/lang/Class;)Lio/r2dbc/spi/Statement;
+#bindNull(Ljava/lang/String;Ljava/lang/Class;)Lio/r2dbc/spi/Statement;
+#execute()Lorg/reactivestreams/Publisher;
@3.17.0
-###org/jooq/tools/r2dbc/LoggingStatement

+###org/jooq/tools/r2dbc/DefaultStatement
@3.16.13
+#<init>(Lio/r2dbc/spi/Statement;)V
+#getDelegate()Lio/r2dbc/spi/Statement;
+#add()Lio/r2dbc/spi/Statement;
+#bind(ILjava/lang/Object;)Lio/r2dbc/spi/Statement;
+#bind(Ljava/lang/String;Ljava/lang/Object;)Lio/r2dbc/spi/Statement;
+#bindNull(ILjava/lang/Class;)Lio/r2dbc/spi/Statement;
+#bindNull(Ljava/lang/String;Ljava/lang/Class;)Lio/r2dbc/spi/Statement;
+#execute()Lorg/reactivestreams/Publisher;
+#returnGeneratedValues([Ljava/lang/String;)Lio/r2dbc/spi/Statement;
+#fetchSize(I)Lio/r2dbc/spi/Statement;
@3.17.0
-###org/jooq/tools/r2dbc/DefaultStatement

+###org/jooq/tools/r2dbc/DefaultConnection
@3.16.13
+#<init>(Lio/r2dbc/spi/Connection;)V
+#getDelegate()Lio/r2dbc/spi/Connection;
+#beginTransaction()Lorg/reactivestreams/Publisher;
+#beginTransaction(Lio/r2dbc/spi/TransactionDefinition;)Lorg/reactivestreams/Publisher;
+#close()Lorg/reactivestreams/Publisher;
+#commitTransaction()Lorg/reactivestreams/Publisher;
+#createBatch()Lio/r2dbc/spi/Batch;
+#createSavepoint(Ljava/lang/String;)Lorg/reactivestreams/Publisher;
+#createStatement(Ljava/lang/String;)Lio/r2dbc/spi/Statement;
+#isAutoCommit()Z
+#getMetadata()Lio/r2dbc/spi/ConnectionMetadata;
+#getTransactionIsolationLevel()Lio/r2dbc/spi/IsolationLevel;
+#releaseSavepoint(Ljava/lang/String;)Lorg/reactivestreams/Publisher;
+#rollbackTransaction()Lorg/reactivestreams/Publisher;
+#rollbackTransactionToSavepoint(Ljava/lang/String;)Lorg/reactivestreams/Publisher;
+#setAutoCommit(Z)Lorg/reactivestreams/Publisher;
+#setLockWaitTimeout(Ljava/time/Duration;)Lorg/reactivestreams/Publisher;
+#setStatementTimeout(Ljava/time/Duration;)Lorg/reactivestreams/Publisher;
+#setTransactionIsolationLevel(Lio/r2dbc/spi/IsolationLevel;)Lorg/reactivestreams/Publisher;
+#validate(Lio/r2dbc/spi/ValidationDepth;)Lorg/reactivestreams/Publisher;
@3.17.0
-###org/jooq/tools/r2dbc/DefaultConnection

+###org/jooq/tools/r2dbc/LoggingConnection
@3.16.13
+#<init>(Lio/r2dbc/spi/Connection;)V
+#beginTransaction()Lorg/reactivestreams/Publisher;
+#beginTransaction(Lio/r2dbc/spi/TransactionDefinition;)Lorg/reactivestreams/Publisher;
+#close()Lorg/reactivestreams/Publisher;
+#commitTransaction()Lorg/reactivestreams/Publisher;
+#createBatch()Lio/r2dbc/spi/Batch;
+#createSavepoint(Ljava/lang/String;)Lorg/reactivestreams/Publisher;
+#createStatement(Ljava/lang/String;)Lio/r2dbc/spi/Statement;
+#releaseSavepoint(Ljava/lang/String;)Lorg/reactivestreams/Publisher;
+#rollbackTransaction()Lorg/reactivestreams/Publisher;
+#rollbackTransactionToSavepoint(Ljava/lang/String;)Lorg/reactivestreams/Publisher;
+#setAutoCommit(Z)Lorg/reactivestreams/Publisher;
+#setLockWaitTimeout(Ljava/time/Duration;)Lorg/reactivestreams/Publisher;
+#setStatementTimeout(Ljava/time/Duration;)Lorg/reactivestreams/Publisher;
+#setTransactionIsolationLevel(Lio/r2dbc/spi/IsolationLevel;)Lorg/reactivestreams/Publisher;
+#validate(Lio/r2dbc/spi/ValidationDepth;)Lorg/reactivestreams/Publisher;
@3.17.0
-###org/jooq/tools/r2dbc/LoggingConnection

+###org/jooq/tools/r2dbc/LoggingBatch
@3.16.13
+#<init>(Lio/r2dbc/spi/Batch;)V
+#getDelegate()Lio/r2dbc/spi/Batch;
+#add(Ljava/lang/String;)Lio/r2dbc/spi/Batch;
+#execute()Lorg/reactivestreams/Publisher;
@3.17.0
-###org/jooq/tools/r2dbc/LoggingBatch

+###org/jooq/QueryPartProvider
@1.5.7
+#getQueryPart()Lorg/jooq/QueryPartInternal;[deprecated]
@1.6.0
-###org/jooq/QueryPartProvider

+###org/jooq/test/Data$Table1Record
@1.5.8
+#<init>()V
@1.6.0
-###org/jooq/test/Data$Table1Record

+###org/jooq/test/Data$Table2Record
@1.5.8
+#<init>()V
@1.6.0
-###org/jooq/test/Data$Table2Record

+###org/jooq/test/Data$Table3Record
@1.5.8
+#<init>()V
@1.6.0
-###org/jooq/test/Data$Table3Record

+###org/jooq/test/Data$TestDataType
@1.5.8
@1.6.0
-###org/jooq/test/Data$TestDataType

+###org/jooq/test/Data
@1.5.8
@1.6.0
-###org/jooq/test/Data

+###org/jooq/test/jOOQTest
@1.5.8
+#<init>()V
+#setUp()V
+#tearDown()V
+#testAliasing()V
+#testMultipleCombinedCondition()V
+#testBetweenCondition()V
+#testInCondition()V
+#testInSelectCondition()V
+#testCompareCondition()V
+#testNotCondition()V
+#testPlainSQLCondition()V
+#testCustomCondition()V
+#testPlainSQLField()V
+#testCustomField()V
+#testIsNullCondition()V
+#testCaseValueFunction()V
+#testCaseConditionFunction()V
+#testNullFunction()V
+#testConstantFunction()V
+#testArithmeticSumExpressions()V
+#testArithmeticDifferenceExpressions()V
+#testArithmeticProductExpressions()V
+#testArithmeticDivisionExpressions()V
+#testFunctions()V
+#testArithmeticExpressions()V
+#testArithmeticFunctions()V
+#testEmptyInsertQuery()V
+#testInsertQuery1()V
+#testInsertQuery2()V
+#testInsertSelect1()V
+#testInsertSelect2()V
+#testUpdateQuery1()V
+#testUpdateQuery2()V
+#testUpdateQuery3()V
+#testUpdateQuery4()V
+#testUpdateQuery5()V
+#testDeleteQuery1()V
+#testDeleteQuery2()V
+#testDeleteQuery3()V
+#testDeleteQuery4()V
+#testConditionalSelectQuery1()V
+#testConditionalSelectQuery2()V
+#testConditionalSelectQuery3()V
+#testConditionalSelectQuery4()V
+#testConditionalSelectQuery5()V
+#testDistinctSelectQuery()V
+#testProductSelectQuery()V
+#testJoinSelectQuery()V
+#testJoinOnConditionSelectQuery()V
+#testJoinComplexSelectQuery()V
+#testJoinSelf()V
+#testJoinTypeSelectQuery()V
+#testGroupSelectQuery()V
+#testOrderSelectQuery()V
+#testCompleteSelectQuery()V
+#testCombinedSelectQuery()V
+#testInnerSelect1()V
+#testInnerSelect2()V
+#testInnerSelect3()V
+#testInnerSelect4()V
+#testInnerSelect5()V
+#testInnerSelect6()V
@1.5.9
+#testTruncate()V
@1.6.0
-###org/jooq/test/jOOQTest

+###org/jooq/conf/MiniJAXB
@3.11.8
+#<init>()V
+#jaxbNamespaceBugWorkaround(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
@3.12.0
-###org/jooq/conf/MiniJAXB

+###org/jooq/conf/Execution
@2.0.5
+#<init>()V
+#getStatementType()Lorg/jooq/conf/StatementType;
+#setStatementType(Lorg/jooq/conf/StatementType;)V
+#withStatementType(Lorg/jooq/conf/StatementType;)Lorg/jooq/conf/Execution;
@2.1.0
-###org/jooq/conf/Execution

+###org/jooq/conf/Rendering
@2.0.5
+#<init>()V
+#getRenderMapping()Lorg/jooq/conf/RenderMapping;
+#setRenderMapping(Lorg/jooq/conf/RenderMapping;)V
+#withRenderMapping(Lorg/jooq/conf/RenderMapping;)Lorg/jooq/conf/Rendering;
@2.1.0
-###org/jooq/conf/Rendering

+###org/jooq/VersionsBetweenAndStep
@3.2.0-alpha-01
+#and(Ljava/lang/Object;)Lorg/jooq/Table;
+#and(Lorg/jooq/Field;)Lorg/jooq/Table;
+#andMaxvalue()Lorg/jooq/Table;
@3.2.0
-###org/jooq/VersionsBetweenAndStep

+###org/jooq/impl/Executor
@3.0.0-RC1
+#<init>(Lorg/jooq/SQLDialect;)V
+#<init>(Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;)V
+#<init>(Ljava/sql/Connection;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/SQLDialect;)V
+#<init>(Ljavax/sql/DataSource;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#<init>(Lorg/jooq/ConnectionProvider;Lorg/jooq/SQLDialect;)V
+#<init>(Lorg/jooq/ConnectionProvider;Lorg/jooq/SQLDialect;Lorg/jooq/conf/Settings;)V
+#<init>(Lorg/jooq/Configuration;)V
+#getDialect()Lorg/jooq/SQLDialect;
+#getSchemaMapping()Lorg/jooq/SchemaMapping;[deprecated]
+#getSettings()Lorg/jooq/conf/Settings;
+#getData()Ljava/util/Map;
+#getData(Ljava/lang/String;)Ljava/lang/Object;
+#setData(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#getConnectionProvider()Lorg/jooq/ConnectionProvider;
+#getExecuteListeners()Ljava/util/List;
+#setExecuteListeners(Ljava/util/List;)V
+#map(Lorg/jooq/Schema;)Lorg/jooq/Schema;
+#map(Lorg/jooq/Table;)Lorg/jooq/Table;
+#meta()Lorg/jooq/Meta;
+#renderContext()Lorg/jooq/RenderContext;
+#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderNamedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderInlined(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#extractBindValues(Lorg/jooq/QueryPart;)Ljava/util/List;
+#extractParams(Lorg/jooq/QueryPart;)Ljava/util/Map;
+#extractParam(Lorg/jooq/QueryPart;Ljava/lang/String;)Lorg/jooq/Param;
+#bindContext(Ljava/sql/PreparedStatement;)Lorg/jooq/BindContext;
+#bind(Lorg/jooq/QueryPart;Ljava/sql/PreparedStatement;)I
+#attach([Lorg/jooq/Attachable;)V
+#attach(Ljava/util/Collection;)V
+#loadInto(Lorg/jooq/Table;)Lorg/jooq/LoaderOptionsStep;
+#query(Ljava/lang/String;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Query;
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Query;
+#fetch(Ljava/lang/String;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Result;
+#fetchLazy(Ljava/lang/String;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Cursor;
+#fetchMany(Ljava/lang/String;)Ljava/util/List;
+#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
+#fetchOne(Ljava/lang/String;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
+#execute(Ljava/lang/String;)I
+#execute(Ljava/lang/String;[Ljava/lang/Object;)I
+#execute(Ljava/lang/String;[Lorg/jooq/QueryPart;)I
+#resultQuery(Ljava/lang/String;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/ResultQuery;
+#fetch(Ljava/sql/ResultSet;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Result;
+#fetchOne(Ljava/sql/ResultSet;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Record;
+#fetchLazy(Ljava/sql/ResultSet;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Cursor;
+#fetchFromCSV(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;C)Lorg/jooq/Result;
+#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#select([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/SelectSelectStep;
+#selectZero()Lorg/jooq/SelectSelectStep;
+#selectOne()Lorg/jooq/SelectSelectStep;
+#selectCount()Lorg/jooq/SelectSelectStep;
+#selectQuery()Lorg/jooq/SelectQuery;
+#selectQuery(Lorg/jooq/TableLike;)Lorg/jooq/SelectQuery;
+#insertQuery(Lorg/jooq/Table;)Lorg/jooq/InsertQuery;
+#insertInto(Lorg/jooq/Table;)Lorg/jooq/InsertSetStep;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep1;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep2;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep3;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep4;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep5;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep6;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep7;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep8;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep9;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep10;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep11;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep12;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep13;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep14;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep15;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep16;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep17;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep18;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep19;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep20;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep21;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep22;
+#insertInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/InsertValuesStepN;
+#insertInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;
+#updateQuery(Lorg/jooq/Table;)Lorg/jooq/UpdateQuery;
+#update(Lorg/jooq/Table;)Lorg/jooq/UpdateSetFirstStep;
+#mergeInto(Lorg/jooq/Table;)Lorg/jooq/MergeUsingStep;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;
+#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStepN;
+#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStepN;
+#deleteQuery(Lorg/jooq/Table;)Lorg/jooq/DeleteQuery;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#batch([Lorg/jooq/Query;)Lorg/jooq/Batch;
+#batch(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batch(Lorg/jooq/Query;)Lorg/jooq/BatchBindStep;
+#batchStore([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchStore(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchInsert([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchInsert(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchUpdate([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchUpdate(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchDelete([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchDelete(Ljava/util/Collection;)Lorg/jooq/Batch;
+#truncate(Lorg/jooq/Table;)Lorg/jooq/Truncate;
+#lastID()Ljava/math/BigInteger;
+#nextval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#currval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#use(Lorg/jooq/Schema;)I
+#use(Ljava/lang/String;)I
+#newRecord(Lorg/jooq/UDT;)Lorg/jooq/UDTRecord;
+#newRecord(Lorg/jooq/Table;)Lorg/jooq/Record;
+#newRecord(Lorg/jooq/Table;Ljava/lang/Object;)Lorg/jooq/Record;
+#newResult(Lorg/jooq/Table;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/ResultQuery;)Lorg/jooq/Result;
+#fetchLazy(Lorg/jooq/ResultQuery;)Lorg/jooq/Cursor;
+#fetchMany(Lorg/jooq/ResultQuery;)Ljava/util/List;
+#fetchOne(Lorg/jooq/ResultQuery;)Lorg/jooq/Record;
+#execute(Lorg/jooq/Query;)I
+#fetch(Lorg/jooq/Table;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Result;
+#fetchOne(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchLazy(Lorg/jooq/Table;)Lorg/jooq/Cursor;
+#fetchLazy(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Cursor;
+#executeInsert(Lorg/jooq/TableRecord;)I
+#executeUpdate(Lorg/jooq/UpdatableRecord;)I
+#executeUpdate(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeDelete(Lorg/jooq/UpdatableRecord;)I
+#executeDelete(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#toString()Ljava/lang/String;
@3.0.0-RC2
+#fetchFromTXT(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromTXT(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromStringData([[Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromStringData(Ljava/util/List;)Lorg/jooq/Result;
+#fetchCount(Lorg/jooq/Select;)I
@3.0.0-RC3
-###org/jooq/impl/Executor
